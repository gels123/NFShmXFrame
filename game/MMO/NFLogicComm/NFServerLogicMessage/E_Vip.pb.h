// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: E_Vip.proto

#ifndef PROTOBUF_E_5fVip_2eproto__INCLUDED
#define PROTOBUF_E_5fVip_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "yd_fieldoptions.pb.h"
// @@protoc_insertion_point(includes)

namespace proto_ff {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_E_5fVip_2eproto();
void protobuf_AssignDesc_E_5fVip_2eproto();
void protobuf_ShutdownFile_E_5fVip_2eproto();

class E_VipVip;
class Sheet_VipVip;
class E_VipPrivilege;
class Sheet_VipPrivilege;
class E_VipChat;
class Sheet_VipChat;
class E_VipCosntant;
class Sheet_VipCosntant;
class E_VipExplimit;
class Sheet_VipExplimit;

// ===================================================================

class E_VipVip : public ::google::protobuf::Message {
 public:
  E_VipVip();
  virtual ~E_VipVip();

  E_VipVip(const E_VipVip& from);

  inline E_VipVip& operator=(const E_VipVip& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_VipVip& default_instance();

  void Swap(E_VipVip* other);

  // implements Message ----------------------------------------------

  E_VipVip* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_VipVip& from);
  void MergeFrom(const E_VipVip& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 m_id = 1;
  inline bool has_m_id() const;
  inline void clear_m_id();
  static const int kMIdFieldNumber = 1;
  inline ::google::protobuf::int32 m_id() const;
  inline void set_m_id(::google::protobuf::int32 value);

  // optional int32 m_level = 2;
  inline bool has_m_level() const;
  inline void clear_m_level();
  static const int kMLevelFieldNumber = 2;
  inline ::google::protobuf::int32 m_level() const;
  inline void set_m_level(::google::protobuf::int32 value);

  // optional int32 m_exp = 3;
  inline bool has_m_exp() const;
  inline void clear_m_exp();
  static const int kMExpFieldNumber = 3;
  inline ::google::protobuf::int32 m_exp() const;
  inline void set_m_exp(::google::protobuf::int32 value);

  // optional int32 m_privilege_group = 4;
  inline bool has_m_privilege_group() const;
  inline void clear_m_privilege_group();
  static const int kMPrivilegeGroupFieldNumber = 4;
  inline ::google::protobuf::int32 m_privilege_group() const;
  inline void set_m_privilege_group(::google::protobuf::int32 value);

  // optional int32 m_dailyBox = 5;
  inline bool has_m_dailybox() const;
  inline void clear_m_dailybox();
  static const int kMDailyBoxFieldNumber = 5;
  inline ::google::protobuf::int32 m_dailybox() const;
  inline void set_m_dailybox(::google::protobuf::int32 value);

  // optional int32 m_vipGift = 6;
  inline bool has_m_vipgift() const;
  inline void clear_m_vipgift();
  static const int kMVipGiftFieldNumber = 6;
  inline ::google::protobuf::int32 m_vipgift() const;
  inline void set_m_vipgift(::google::protobuf::int32 value);

  // optional int32 m_priceType = 7;
  inline bool has_m_pricetype() const;
  inline void clear_m_pricetype();
  static const int kMPriceTypeFieldNumber = 7;
  inline ::google::protobuf::int32 m_pricetype() const;
  inline void set_m_pricetype(::google::protobuf::int32 value);

  // optional int32 m_originalPrice = 8;
  inline bool has_m_originalprice() const;
  inline void clear_m_originalprice();
  static const int kMOriginalPriceFieldNumber = 8;
  inline ::google::protobuf::int32 m_originalprice() const;
  inline void set_m_originalprice(::google::protobuf::int32 value);

  // optional int32 m_price = 9;
  inline bool has_m_price() const;
  inline void clear_m_price();
  static const int kMPriceFieldNumber = 9;
  inline ::google::protobuf::int32 m_price() const;
  inline void set_m_price(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.E_VipVip)
 private:
  inline void set_has_m_id();
  inline void clear_has_m_id();
  inline void set_has_m_level();
  inline void clear_has_m_level();
  inline void set_has_m_exp();
  inline void clear_has_m_exp();
  inline void set_has_m_privilege_group();
  inline void clear_has_m_privilege_group();
  inline void set_has_m_dailybox();
  inline void clear_has_m_dailybox();
  inline void set_has_m_vipgift();
  inline void clear_has_m_vipgift();
  inline void set_has_m_pricetype();
  inline void clear_has_m_pricetype();
  inline void set_has_m_originalprice();
  inline void clear_has_m_originalprice();
  inline void set_has_m_price();
  inline void clear_has_m_price();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_id_;
  ::google::protobuf::int32 m_level_;
  ::google::protobuf::int32 m_exp_;
  ::google::protobuf::int32 m_privilege_group_;
  ::google::protobuf::int32 m_dailybox_;
  ::google::protobuf::int32 m_vipgift_;
  ::google::protobuf::int32 m_pricetype_;
  ::google::protobuf::int32 m_originalprice_;
  ::google::protobuf::int32 m_price_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(9 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fVip_2eproto();
  friend void protobuf_AssignDesc_E_5fVip_2eproto();
  friend void protobuf_ShutdownFile_E_5fVip_2eproto();

  void InitAsDefaultInstance();
  static E_VipVip* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_VipVip : public ::google::protobuf::Message {
 public:
  Sheet_VipVip();
  virtual ~Sheet_VipVip();

  Sheet_VipVip(const Sheet_VipVip& from);

  inline Sheet_VipVip& operator=(const Sheet_VipVip& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_VipVip& default_instance();

  void Swap(Sheet_VipVip* other);

  // implements Message ----------------------------------------------

  Sheet_VipVip* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_VipVip& from);
  void MergeFrom(const Sheet_VipVip& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.E_VipVip E_VipVip_List = 1;
  inline int e_vipvip_list_size() const;
  inline void clear_e_vipvip_list();
  static const int kEVipVipListFieldNumber = 1;
  inline const ::proto_ff::E_VipVip& e_vipvip_list(int index) const;
  inline ::proto_ff::E_VipVip* mutable_e_vipvip_list(int index);
  inline ::proto_ff::E_VipVip* add_e_vipvip_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_VipVip >&
      e_vipvip_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_VipVip >*
      mutable_e_vipvip_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_VipVip)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_VipVip > e_vipvip_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fVip_2eproto();
  friend void protobuf_AssignDesc_E_5fVip_2eproto();
  friend void protobuf_ShutdownFile_E_5fVip_2eproto();

  void InitAsDefaultInstance();
  static Sheet_VipVip* default_instance_;
};
// -------------------------------------------------------------------

class E_VipPrivilege : public ::google::protobuf::Message {
 public:
  E_VipPrivilege();
  virtual ~E_VipPrivilege();

  E_VipPrivilege(const E_VipPrivilege& from);

  inline E_VipPrivilege& operator=(const E_VipPrivilege& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_VipPrivilege& default_instance();

  void Swap(E_VipPrivilege* other);

  // implements Message ----------------------------------------------

  E_VipPrivilege* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_VipPrivilege& from);
  void MergeFrom(const E_VipPrivilege& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 m_id = 1;
  inline bool has_m_id() const;
  inline void clear_m_id();
  static const int kMIdFieldNumber = 1;
  inline ::google::protobuf::int32 m_id() const;
  inline void set_m_id(::google::protobuf::int32 value);

  // optional int32 m_group = 2;
  inline bool has_m_group() const;
  inline void clear_m_group();
  static const int kMGroupFieldNumber = 2;
  inline ::google::protobuf::int32 m_group() const;
  inline void set_m_group(::google::protobuf::int32 value);

  // optional int32 m_type = 3;
  inline bool has_m_type() const;
  inline void clear_m_type();
  static const int kMTypeFieldNumber = 3;
  inline ::google::protobuf::int32 m_type() const;
  inline void set_m_type(::google::protobuf::int32 value);

  // optional int32 m_arg = 4;
  inline bool has_m_arg() const;
  inline void clear_m_arg();
  static const int kMArgFieldNumber = 4;
  inline ::google::protobuf::int32 m_arg() const;
  inline void set_m_arg(::google::protobuf::int32 value);

  // optional string m_args = 5;
  inline bool has_m_args() const;
  inline void clear_m_args();
  static const int kMArgsFieldNumber = 5;
  inline const ::std::string& m_args() const;
  inline void set_m_args(const ::std::string& value);
  inline void set_m_args(const char* value);
  inline void set_m_args(const char* value, size_t size);
  inline ::std::string* mutable_m_args();
  inline ::std::string* release_m_args();
  inline void set_allocated_m_args(::std::string* m_args);

  // @@protoc_insertion_point(class_scope:proto_ff.E_VipPrivilege)
 private:
  inline void set_has_m_id();
  inline void clear_has_m_id();
  inline void set_has_m_group();
  inline void clear_has_m_group();
  inline void set_has_m_type();
  inline void clear_has_m_type();
  inline void set_has_m_arg();
  inline void clear_has_m_arg();
  inline void set_has_m_args();
  inline void clear_has_m_args();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_id_;
  ::google::protobuf::int32 m_group_;
  ::google::protobuf::int32 m_type_;
  ::google::protobuf::int32 m_arg_;
  ::std::string* m_args_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fVip_2eproto();
  friend void protobuf_AssignDesc_E_5fVip_2eproto();
  friend void protobuf_ShutdownFile_E_5fVip_2eproto();

  void InitAsDefaultInstance();
  static E_VipPrivilege* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_VipPrivilege : public ::google::protobuf::Message {
 public:
  Sheet_VipPrivilege();
  virtual ~Sheet_VipPrivilege();

  Sheet_VipPrivilege(const Sheet_VipPrivilege& from);

  inline Sheet_VipPrivilege& operator=(const Sheet_VipPrivilege& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_VipPrivilege& default_instance();

  void Swap(Sheet_VipPrivilege* other);

  // implements Message ----------------------------------------------

  Sheet_VipPrivilege* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_VipPrivilege& from);
  void MergeFrom(const Sheet_VipPrivilege& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.E_VipPrivilege E_VipPrivilege_List = 1;
  inline int e_vipprivilege_list_size() const;
  inline void clear_e_vipprivilege_list();
  static const int kEVipPrivilegeListFieldNumber = 1;
  inline const ::proto_ff::E_VipPrivilege& e_vipprivilege_list(int index) const;
  inline ::proto_ff::E_VipPrivilege* mutable_e_vipprivilege_list(int index);
  inline ::proto_ff::E_VipPrivilege* add_e_vipprivilege_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_VipPrivilege >&
      e_vipprivilege_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_VipPrivilege >*
      mutable_e_vipprivilege_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_VipPrivilege)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_VipPrivilege > e_vipprivilege_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fVip_2eproto();
  friend void protobuf_AssignDesc_E_5fVip_2eproto();
  friend void protobuf_ShutdownFile_E_5fVip_2eproto();

  void InitAsDefaultInstance();
  static Sheet_VipPrivilege* default_instance_;
};
// -------------------------------------------------------------------

class E_VipChat : public ::google::protobuf::Message {
 public:
  E_VipChat();
  virtual ~E_VipChat();

  E_VipChat(const E_VipChat& from);

  inline E_VipChat& operator=(const E_VipChat& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_VipChat& default_instance();

  void Swap(E_VipChat* other);

  // implements Message ----------------------------------------------

  E_VipChat* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_VipChat& from);
  void MergeFrom(const E_VipChat& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 m_id = 1;
  inline bool has_m_id() const;
  inline void clear_m_id();
  static const int kMIdFieldNumber = 1;
  inline ::google::protobuf::int32 m_id() const;
  inline void set_m_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.E_VipChat)
 private:
  inline void set_has_m_id();
  inline void clear_has_m_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fVip_2eproto();
  friend void protobuf_AssignDesc_E_5fVip_2eproto();
  friend void protobuf_ShutdownFile_E_5fVip_2eproto();

  void InitAsDefaultInstance();
  static E_VipChat* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_VipChat : public ::google::protobuf::Message {
 public:
  Sheet_VipChat();
  virtual ~Sheet_VipChat();

  Sheet_VipChat(const Sheet_VipChat& from);

  inline Sheet_VipChat& operator=(const Sheet_VipChat& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_VipChat& default_instance();

  void Swap(Sheet_VipChat* other);

  // implements Message ----------------------------------------------

  Sheet_VipChat* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_VipChat& from);
  void MergeFrom(const Sheet_VipChat& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.E_VipChat E_VipChat_List = 1;
  inline int e_vipchat_list_size() const;
  inline void clear_e_vipchat_list();
  static const int kEVipChatListFieldNumber = 1;
  inline const ::proto_ff::E_VipChat& e_vipchat_list(int index) const;
  inline ::proto_ff::E_VipChat* mutable_e_vipchat_list(int index);
  inline ::proto_ff::E_VipChat* add_e_vipchat_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_VipChat >&
      e_vipchat_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_VipChat >*
      mutable_e_vipchat_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_VipChat)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_VipChat > e_vipchat_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fVip_2eproto();
  friend void protobuf_AssignDesc_E_5fVip_2eproto();
  friend void protobuf_ShutdownFile_E_5fVip_2eproto();

  void InitAsDefaultInstance();
  static Sheet_VipChat* default_instance_;
};
// -------------------------------------------------------------------

class E_VipCosntant : public ::google::protobuf::Message {
 public:
  E_VipCosntant();
  virtual ~E_VipCosntant();

  E_VipCosntant(const E_VipCosntant& from);

  inline E_VipCosntant& operator=(const E_VipCosntant& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_VipCosntant& default_instance();

  void Swap(E_VipCosntant* other);

  // implements Message ----------------------------------------------

  E_VipCosntant* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_VipCosntant& from);
  void MergeFrom(const E_VipCosntant& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 m_id = 1;
  inline bool has_m_id() const;
  inline void clear_m_id();
  static const int kMIdFieldNumber = 1;
  inline ::google::protobuf::int32 m_id() const;
  inline void set_m_id(::google::protobuf::int32 value);

  // optional int32 m_FVipPrice = 2;
  inline bool has_m_fvipprice() const;
  inline void clear_m_fvipprice();
  static const int kMFVipPriceFieldNumber = 2;
  inline ::google::protobuf::int32 m_fvipprice() const;
  inline void set_m_fvipprice(::google::protobuf::int32 value);

  // optional int32 m_FVipRtime = 3;
  inline bool has_m_fviprtime() const;
  inline void clear_m_fviprtime();
  static const int kMFVipRtimeFieldNumber = 3;
  inline ::google::protobuf::int32 m_fviprtime() const;
  inline void set_m_fviprtime(::google::protobuf::int32 value);

  // optional int32 m_FVipPrivage = 4;
  inline bool has_m_fvipprivage() const;
  inline void clear_m_fvipprivage();
  static const int kMFVipPrivageFieldNumber = 4;
  inline ::google::protobuf::int32 m_fvipprivage() const;
  inline void set_m_fvipprivage(::google::protobuf::int32 value);

  // optional int32 m_Fviplv = 5;
  inline bool has_m_fviplv() const;
  inline void clear_m_fviplv();
  static const int kMFviplvFieldNumber = 5;
  inline ::google::protobuf::int32 m_fviplv() const;
  inline void set_m_fviplv(::google::protobuf::int32 value);

  // optional int32 m_Fvipexp = 6;
  inline bool has_m_fvipexp() const;
  inline void clear_m_fvipexp();
  static const int kMFvipexpFieldNumber = 6;
  inline ::google::protobuf::int32 m_fvipexp() const;
  inline void set_m_fvipexp(::google::protobuf::int32 value);

  // optional int32 m_VipItemIcon = 7;
  inline bool has_m_vipitemicon() const;
  inline void clear_m_vipitemicon();
  static const int kMVipItemIconFieldNumber = 7;
  inline ::google::protobuf::int32 m_vipitemicon() const;
  inline void set_m_vipitemicon(::google::protobuf::int32 value);

  // optional int32 m_foreverGuide = 8;
  inline bool has_m_foreverguide() const;
  inline void clear_m_foreverguide();
  static const int kMForeverGuideFieldNumber = 8;
  inline ::google::protobuf::int32 m_foreverguide() const;
  inline void set_m_foreverguide(::google::protobuf::int32 value);

  // optional int32 m_unActiveGuide = 9;
  inline bool has_m_unactiveguide() const;
  inline void clear_m_unactiveguide();
  static const int kMUnActiveGuideFieldNumber = 9;
  inline ::google::protobuf::int32 m_unactiveguide() const;
  inline void set_m_unactiveguide(::google::protobuf::int32 value);

  // optional int32 m_vipExp = 10;
  inline bool has_m_vipexp() const;
  inline void clear_m_vipexp();
  static const int kMVipExpFieldNumber = 10;
  inline ::google::protobuf::int32 m_vipexp() const;
  inline void set_m_vipexp(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.E_VipCosntant)
 private:
  inline void set_has_m_id();
  inline void clear_has_m_id();
  inline void set_has_m_fvipprice();
  inline void clear_has_m_fvipprice();
  inline void set_has_m_fviprtime();
  inline void clear_has_m_fviprtime();
  inline void set_has_m_fvipprivage();
  inline void clear_has_m_fvipprivage();
  inline void set_has_m_fviplv();
  inline void clear_has_m_fviplv();
  inline void set_has_m_fvipexp();
  inline void clear_has_m_fvipexp();
  inline void set_has_m_vipitemicon();
  inline void clear_has_m_vipitemicon();
  inline void set_has_m_foreverguide();
  inline void clear_has_m_foreverguide();
  inline void set_has_m_unactiveguide();
  inline void clear_has_m_unactiveguide();
  inline void set_has_m_vipexp();
  inline void clear_has_m_vipexp();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_id_;
  ::google::protobuf::int32 m_fvipprice_;
  ::google::protobuf::int32 m_fviprtime_;
  ::google::protobuf::int32 m_fvipprivage_;
  ::google::protobuf::int32 m_fviplv_;
  ::google::protobuf::int32 m_fvipexp_;
  ::google::protobuf::int32 m_vipitemicon_;
  ::google::protobuf::int32 m_foreverguide_;
  ::google::protobuf::int32 m_unactiveguide_;
  ::google::protobuf::int32 m_vipexp_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(10 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fVip_2eproto();
  friend void protobuf_AssignDesc_E_5fVip_2eproto();
  friend void protobuf_ShutdownFile_E_5fVip_2eproto();

  void InitAsDefaultInstance();
  static E_VipCosntant* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_VipCosntant : public ::google::protobuf::Message {
 public:
  Sheet_VipCosntant();
  virtual ~Sheet_VipCosntant();

  Sheet_VipCosntant(const Sheet_VipCosntant& from);

  inline Sheet_VipCosntant& operator=(const Sheet_VipCosntant& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_VipCosntant& default_instance();

  void Swap(Sheet_VipCosntant* other);

  // implements Message ----------------------------------------------

  Sheet_VipCosntant* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_VipCosntant& from);
  void MergeFrom(const Sheet_VipCosntant& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.E_VipCosntant E_VipCosntant_List = 1;
  inline int e_vipcosntant_list_size() const;
  inline void clear_e_vipcosntant_list();
  static const int kEVipCosntantListFieldNumber = 1;
  inline const ::proto_ff::E_VipCosntant& e_vipcosntant_list(int index) const;
  inline ::proto_ff::E_VipCosntant* mutable_e_vipcosntant_list(int index);
  inline ::proto_ff::E_VipCosntant* add_e_vipcosntant_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_VipCosntant >&
      e_vipcosntant_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_VipCosntant >*
      mutable_e_vipcosntant_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_VipCosntant)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_VipCosntant > e_vipcosntant_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fVip_2eproto();
  friend void protobuf_AssignDesc_E_5fVip_2eproto();
  friend void protobuf_ShutdownFile_E_5fVip_2eproto();

  void InitAsDefaultInstance();
  static Sheet_VipCosntant* default_instance_;
};
// -------------------------------------------------------------------

class E_VipExplimit : public ::google::protobuf::Message {
 public:
  E_VipExplimit();
  virtual ~E_VipExplimit();

  E_VipExplimit(const E_VipExplimit& from);

  inline E_VipExplimit& operator=(const E_VipExplimit& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_VipExplimit& default_instance();

  void Swap(E_VipExplimit* other);

  // implements Message ----------------------------------------------

  E_VipExplimit* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_VipExplimit& from);
  void MergeFrom(const E_VipExplimit& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 m_lv = 1;
  inline bool has_m_lv() const;
  inline void clear_m_lv();
  static const int kMLvFieldNumber = 1;
  inline ::google::protobuf::int32 m_lv() const;
  inline void set_m_lv(::google::protobuf::int32 value);

  // optional int64 m_limit = 2;
  inline bool has_m_limit() const;
  inline void clear_m_limit();
  static const int kMLimitFieldNumber = 2;
  inline ::google::protobuf::int64 m_limit() const;
  inline void set_m_limit(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.E_VipExplimit)
 private:
  inline void set_has_m_lv();
  inline void clear_has_m_lv();
  inline void set_has_m_limit();
  inline void clear_has_m_limit();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 m_limit_;
  ::google::protobuf::int32 m_lv_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fVip_2eproto();
  friend void protobuf_AssignDesc_E_5fVip_2eproto();
  friend void protobuf_ShutdownFile_E_5fVip_2eproto();

  void InitAsDefaultInstance();
  static E_VipExplimit* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_VipExplimit : public ::google::protobuf::Message {
 public:
  Sheet_VipExplimit();
  virtual ~Sheet_VipExplimit();

  Sheet_VipExplimit(const Sheet_VipExplimit& from);

  inline Sheet_VipExplimit& operator=(const Sheet_VipExplimit& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_VipExplimit& default_instance();

  void Swap(Sheet_VipExplimit* other);

  // implements Message ----------------------------------------------

  Sheet_VipExplimit* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_VipExplimit& from);
  void MergeFrom(const Sheet_VipExplimit& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.E_VipExplimit E_VipExplimit_List = 1;
  inline int e_vipexplimit_list_size() const;
  inline void clear_e_vipexplimit_list();
  static const int kEVipExplimitListFieldNumber = 1;
  inline const ::proto_ff::E_VipExplimit& e_vipexplimit_list(int index) const;
  inline ::proto_ff::E_VipExplimit* mutable_e_vipexplimit_list(int index);
  inline ::proto_ff::E_VipExplimit* add_e_vipexplimit_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_VipExplimit >&
      e_vipexplimit_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_VipExplimit >*
      mutable_e_vipexplimit_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_VipExplimit)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_VipExplimit > e_vipexplimit_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fVip_2eproto();
  friend void protobuf_AssignDesc_E_5fVip_2eproto();
  friend void protobuf_ShutdownFile_E_5fVip_2eproto();

  void InitAsDefaultInstance();
  static Sheet_VipExplimit* default_instance_;
};
// ===================================================================


// ===================================================================

// E_VipVip

// optional int32 m_id = 1;
inline bool E_VipVip::has_m_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_VipVip::set_has_m_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_VipVip::clear_has_m_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_VipVip::clear_m_id() {
  m_id_ = 0;
  clear_has_m_id();
}
inline ::google::protobuf::int32 E_VipVip::m_id() const {
  return m_id_;
}
inline void E_VipVip::set_m_id(::google::protobuf::int32 value) {
  set_has_m_id();
  m_id_ = value;
}

// optional int32 m_level = 2;
inline bool E_VipVip::has_m_level() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_VipVip::set_has_m_level() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_VipVip::clear_has_m_level() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_VipVip::clear_m_level() {
  m_level_ = 0;
  clear_has_m_level();
}
inline ::google::protobuf::int32 E_VipVip::m_level() const {
  return m_level_;
}
inline void E_VipVip::set_m_level(::google::protobuf::int32 value) {
  set_has_m_level();
  m_level_ = value;
}

// optional int32 m_exp = 3;
inline bool E_VipVip::has_m_exp() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void E_VipVip::set_has_m_exp() {
  _has_bits_[0] |= 0x00000004u;
}
inline void E_VipVip::clear_has_m_exp() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void E_VipVip::clear_m_exp() {
  m_exp_ = 0;
  clear_has_m_exp();
}
inline ::google::protobuf::int32 E_VipVip::m_exp() const {
  return m_exp_;
}
inline void E_VipVip::set_m_exp(::google::protobuf::int32 value) {
  set_has_m_exp();
  m_exp_ = value;
}

// optional int32 m_privilege_group = 4;
inline bool E_VipVip::has_m_privilege_group() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void E_VipVip::set_has_m_privilege_group() {
  _has_bits_[0] |= 0x00000008u;
}
inline void E_VipVip::clear_has_m_privilege_group() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void E_VipVip::clear_m_privilege_group() {
  m_privilege_group_ = 0;
  clear_has_m_privilege_group();
}
inline ::google::protobuf::int32 E_VipVip::m_privilege_group() const {
  return m_privilege_group_;
}
inline void E_VipVip::set_m_privilege_group(::google::protobuf::int32 value) {
  set_has_m_privilege_group();
  m_privilege_group_ = value;
}

// optional int32 m_dailyBox = 5;
inline bool E_VipVip::has_m_dailybox() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void E_VipVip::set_has_m_dailybox() {
  _has_bits_[0] |= 0x00000010u;
}
inline void E_VipVip::clear_has_m_dailybox() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void E_VipVip::clear_m_dailybox() {
  m_dailybox_ = 0;
  clear_has_m_dailybox();
}
inline ::google::protobuf::int32 E_VipVip::m_dailybox() const {
  return m_dailybox_;
}
inline void E_VipVip::set_m_dailybox(::google::protobuf::int32 value) {
  set_has_m_dailybox();
  m_dailybox_ = value;
}

// optional int32 m_vipGift = 6;
inline bool E_VipVip::has_m_vipgift() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void E_VipVip::set_has_m_vipgift() {
  _has_bits_[0] |= 0x00000020u;
}
inline void E_VipVip::clear_has_m_vipgift() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void E_VipVip::clear_m_vipgift() {
  m_vipgift_ = 0;
  clear_has_m_vipgift();
}
inline ::google::protobuf::int32 E_VipVip::m_vipgift() const {
  return m_vipgift_;
}
inline void E_VipVip::set_m_vipgift(::google::protobuf::int32 value) {
  set_has_m_vipgift();
  m_vipgift_ = value;
}

// optional int32 m_priceType = 7;
inline bool E_VipVip::has_m_pricetype() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void E_VipVip::set_has_m_pricetype() {
  _has_bits_[0] |= 0x00000040u;
}
inline void E_VipVip::clear_has_m_pricetype() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void E_VipVip::clear_m_pricetype() {
  m_pricetype_ = 0;
  clear_has_m_pricetype();
}
inline ::google::protobuf::int32 E_VipVip::m_pricetype() const {
  return m_pricetype_;
}
inline void E_VipVip::set_m_pricetype(::google::protobuf::int32 value) {
  set_has_m_pricetype();
  m_pricetype_ = value;
}

// optional int32 m_originalPrice = 8;
inline bool E_VipVip::has_m_originalprice() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void E_VipVip::set_has_m_originalprice() {
  _has_bits_[0] |= 0x00000080u;
}
inline void E_VipVip::clear_has_m_originalprice() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void E_VipVip::clear_m_originalprice() {
  m_originalprice_ = 0;
  clear_has_m_originalprice();
}
inline ::google::protobuf::int32 E_VipVip::m_originalprice() const {
  return m_originalprice_;
}
inline void E_VipVip::set_m_originalprice(::google::protobuf::int32 value) {
  set_has_m_originalprice();
  m_originalprice_ = value;
}

// optional int32 m_price = 9;
inline bool E_VipVip::has_m_price() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void E_VipVip::set_has_m_price() {
  _has_bits_[0] |= 0x00000100u;
}
inline void E_VipVip::clear_has_m_price() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void E_VipVip::clear_m_price() {
  m_price_ = 0;
  clear_has_m_price();
}
inline ::google::protobuf::int32 E_VipVip::m_price() const {
  return m_price_;
}
inline void E_VipVip::set_m_price(::google::protobuf::int32 value) {
  set_has_m_price();
  m_price_ = value;
}

// -------------------------------------------------------------------

// Sheet_VipVip

// repeated .proto_ff.E_VipVip E_VipVip_List = 1;
inline int Sheet_VipVip::e_vipvip_list_size() const {
  return e_vipvip_list_.size();
}
inline void Sheet_VipVip::clear_e_vipvip_list() {
  e_vipvip_list_.Clear();
}
inline const ::proto_ff::E_VipVip& Sheet_VipVip::e_vipvip_list(int index) const {
  return e_vipvip_list_.Get(index);
}
inline ::proto_ff::E_VipVip* Sheet_VipVip::mutable_e_vipvip_list(int index) {
  return e_vipvip_list_.Mutable(index);
}
inline ::proto_ff::E_VipVip* Sheet_VipVip::add_e_vipvip_list() {
  return e_vipvip_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_VipVip >&
Sheet_VipVip::e_vipvip_list() const {
  return e_vipvip_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_VipVip >*
Sheet_VipVip::mutable_e_vipvip_list() {
  return &e_vipvip_list_;
}

// -------------------------------------------------------------------

// E_VipPrivilege

// optional int32 m_id = 1;
inline bool E_VipPrivilege::has_m_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_VipPrivilege::set_has_m_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_VipPrivilege::clear_has_m_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_VipPrivilege::clear_m_id() {
  m_id_ = 0;
  clear_has_m_id();
}
inline ::google::protobuf::int32 E_VipPrivilege::m_id() const {
  return m_id_;
}
inline void E_VipPrivilege::set_m_id(::google::protobuf::int32 value) {
  set_has_m_id();
  m_id_ = value;
}

// optional int32 m_group = 2;
inline bool E_VipPrivilege::has_m_group() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_VipPrivilege::set_has_m_group() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_VipPrivilege::clear_has_m_group() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_VipPrivilege::clear_m_group() {
  m_group_ = 0;
  clear_has_m_group();
}
inline ::google::protobuf::int32 E_VipPrivilege::m_group() const {
  return m_group_;
}
inline void E_VipPrivilege::set_m_group(::google::protobuf::int32 value) {
  set_has_m_group();
  m_group_ = value;
}

// optional int32 m_type = 3;
inline bool E_VipPrivilege::has_m_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void E_VipPrivilege::set_has_m_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void E_VipPrivilege::clear_has_m_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void E_VipPrivilege::clear_m_type() {
  m_type_ = 0;
  clear_has_m_type();
}
inline ::google::protobuf::int32 E_VipPrivilege::m_type() const {
  return m_type_;
}
inline void E_VipPrivilege::set_m_type(::google::protobuf::int32 value) {
  set_has_m_type();
  m_type_ = value;
}

// optional int32 m_arg = 4;
inline bool E_VipPrivilege::has_m_arg() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void E_VipPrivilege::set_has_m_arg() {
  _has_bits_[0] |= 0x00000008u;
}
inline void E_VipPrivilege::clear_has_m_arg() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void E_VipPrivilege::clear_m_arg() {
  m_arg_ = 0;
  clear_has_m_arg();
}
inline ::google::protobuf::int32 E_VipPrivilege::m_arg() const {
  return m_arg_;
}
inline void E_VipPrivilege::set_m_arg(::google::protobuf::int32 value) {
  set_has_m_arg();
  m_arg_ = value;
}

// optional string m_args = 5;
inline bool E_VipPrivilege::has_m_args() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void E_VipPrivilege::set_has_m_args() {
  _has_bits_[0] |= 0x00000010u;
}
inline void E_VipPrivilege::clear_has_m_args() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void E_VipPrivilege::clear_m_args() {
  if (m_args_ != &::google::protobuf::internal::kEmptyString) {
    m_args_->clear();
  }
  clear_has_m_args();
}
inline const ::std::string& E_VipPrivilege::m_args() const {
  return *m_args_;
}
inline void E_VipPrivilege::set_m_args(const ::std::string& value) {
  set_has_m_args();
  if (m_args_ == &::google::protobuf::internal::kEmptyString) {
    m_args_ = new ::std::string;
  }
  m_args_->assign(value);
}
inline void E_VipPrivilege::set_m_args(const char* value) {
  set_has_m_args();
  if (m_args_ == &::google::protobuf::internal::kEmptyString) {
    m_args_ = new ::std::string;
  }
  m_args_->assign(value);
}
inline void E_VipPrivilege::set_m_args(const char* value, size_t size) {
  set_has_m_args();
  if (m_args_ == &::google::protobuf::internal::kEmptyString) {
    m_args_ = new ::std::string;
  }
  m_args_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* E_VipPrivilege::mutable_m_args() {
  set_has_m_args();
  if (m_args_ == &::google::protobuf::internal::kEmptyString) {
    m_args_ = new ::std::string;
  }
  return m_args_;
}
inline ::std::string* E_VipPrivilege::release_m_args() {
  clear_has_m_args();
  if (m_args_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = m_args_;
    m_args_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void E_VipPrivilege::set_allocated_m_args(::std::string* m_args) {
  if (m_args_ != &::google::protobuf::internal::kEmptyString) {
    delete m_args_;
  }
  if (m_args) {
    set_has_m_args();
    m_args_ = m_args;
  } else {
    clear_has_m_args();
    m_args_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// Sheet_VipPrivilege

// repeated .proto_ff.E_VipPrivilege E_VipPrivilege_List = 1;
inline int Sheet_VipPrivilege::e_vipprivilege_list_size() const {
  return e_vipprivilege_list_.size();
}
inline void Sheet_VipPrivilege::clear_e_vipprivilege_list() {
  e_vipprivilege_list_.Clear();
}
inline const ::proto_ff::E_VipPrivilege& Sheet_VipPrivilege::e_vipprivilege_list(int index) const {
  return e_vipprivilege_list_.Get(index);
}
inline ::proto_ff::E_VipPrivilege* Sheet_VipPrivilege::mutable_e_vipprivilege_list(int index) {
  return e_vipprivilege_list_.Mutable(index);
}
inline ::proto_ff::E_VipPrivilege* Sheet_VipPrivilege::add_e_vipprivilege_list() {
  return e_vipprivilege_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_VipPrivilege >&
Sheet_VipPrivilege::e_vipprivilege_list() const {
  return e_vipprivilege_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_VipPrivilege >*
Sheet_VipPrivilege::mutable_e_vipprivilege_list() {
  return &e_vipprivilege_list_;
}

// -------------------------------------------------------------------

// E_VipChat

// optional int32 m_id = 1;
inline bool E_VipChat::has_m_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_VipChat::set_has_m_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_VipChat::clear_has_m_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_VipChat::clear_m_id() {
  m_id_ = 0;
  clear_has_m_id();
}
inline ::google::protobuf::int32 E_VipChat::m_id() const {
  return m_id_;
}
inline void E_VipChat::set_m_id(::google::protobuf::int32 value) {
  set_has_m_id();
  m_id_ = value;
}

// -------------------------------------------------------------------

// Sheet_VipChat

// repeated .proto_ff.E_VipChat E_VipChat_List = 1;
inline int Sheet_VipChat::e_vipchat_list_size() const {
  return e_vipchat_list_.size();
}
inline void Sheet_VipChat::clear_e_vipchat_list() {
  e_vipchat_list_.Clear();
}
inline const ::proto_ff::E_VipChat& Sheet_VipChat::e_vipchat_list(int index) const {
  return e_vipchat_list_.Get(index);
}
inline ::proto_ff::E_VipChat* Sheet_VipChat::mutable_e_vipchat_list(int index) {
  return e_vipchat_list_.Mutable(index);
}
inline ::proto_ff::E_VipChat* Sheet_VipChat::add_e_vipchat_list() {
  return e_vipchat_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_VipChat >&
Sheet_VipChat::e_vipchat_list() const {
  return e_vipchat_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_VipChat >*
Sheet_VipChat::mutable_e_vipchat_list() {
  return &e_vipchat_list_;
}

// -------------------------------------------------------------------

// E_VipCosntant

// optional int32 m_id = 1;
inline bool E_VipCosntant::has_m_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_VipCosntant::set_has_m_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_VipCosntant::clear_has_m_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_VipCosntant::clear_m_id() {
  m_id_ = 0;
  clear_has_m_id();
}
inline ::google::protobuf::int32 E_VipCosntant::m_id() const {
  return m_id_;
}
inline void E_VipCosntant::set_m_id(::google::protobuf::int32 value) {
  set_has_m_id();
  m_id_ = value;
}

// optional int32 m_FVipPrice = 2;
inline bool E_VipCosntant::has_m_fvipprice() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_VipCosntant::set_has_m_fvipprice() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_VipCosntant::clear_has_m_fvipprice() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_VipCosntant::clear_m_fvipprice() {
  m_fvipprice_ = 0;
  clear_has_m_fvipprice();
}
inline ::google::protobuf::int32 E_VipCosntant::m_fvipprice() const {
  return m_fvipprice_;
}
inline void E_VipCosntant::set_m_fvipprice(::google::protobuf::int32 value) {
  set_has_m_fvipprice();
  m_fvipprice_ = value;
}

// optional int32 m_FVipRtime = 3;
inline bool E_VipCosntant::has_m_fviprtime() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void E_VipCosntant::set_has_m_fviprtime() {
  _has_bits_[0] |= 0x00000004u;
}
inline void E_VipCosntant::clear_has_m_fviprtime() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void E_VipCosntant::clear_m_fviprtime() {
  m_fviprtime_ = 0;
  clear_has_m_fviprtime();
}
inline ::google::protobuf::int32 E_VipCosntant::m_fviprtime() const {
  return m_fviprtime_;
}
inline void E_VipCosntant::set_m_fviprtime(::google::protobuf::int32 value) {
  set_has_m_fviprtime();
  m_fviprtime_ = value;
}

// optional int32 m_FVipPrivage = 4;
inline bool E_VipCosntant::has_m_fvipprivage() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void E_VipCosntant::set_has_m_fvipprivage() {
  _has_bits_[0] |= 0x00000008u;
}
inline void E_VipCosntant::clear_has_m_fvipprivage() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void E_VipCosntant::clear_m_fvipprivage() {
  m_fvipprivage_ = 0;
  clear_has_m_fvipprivage();
}
inline ::google::protobuf::int32 E_VipCosntant::m_fvipprivage() const {
  return m_fvipprivage_;
}
inline void E_VipCosntant::set_m_fvipprivage(::google::protobuf::int32 value) {
  set_has_m_fvipprivage();
  m_fvipprivage_ = value;
}

// optional int32 m_Fviplv = 5;
inline bool E_VipCosntant::has_m_fviplv() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void E_VipCosntant::set_has_m_fviplv() {
  _has_bits_[0] |= 0x00000010u;
}
inline void E_VipCosntant::clear_has_m_fviplv() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void E_VipCosntant::clear_m_fviplv() {
  m_fviplv_ = 0;
  clear_has_m_fviplv();
}
inline ::google::protobuf::int32 E_VipCosntant::m_fviplv() const {
  return m_fviplv_;
}
inline void E_VipCosntant::set_m_fviplv(::google::protobuf::int32 value) {
  set_has_m_fviplv();
  m_fviplv_ = value;
}

// optional int32 m_Fvipexp = 6;
inline bool E_VipCosntant::has_m_fvipexp() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void E_VipCosntant::set_has_m_fvipexp() {
  _has_bits_[0] |= 0x00000020u;
}
inline void E_VipCosntant::clear_has_m_fvipexp() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void E_VipCosntant::clear_m_fvipexp() {
  m_fvipexp_ = 0;
  clear_has_m_fvipexp();
}
inline ::google::protobuf::int32 E_VipCosntant::m_fvipexp() const {
  return m_fvipexp_;
}
inline void E_VipCosntant::set_m_fvipexp(::google::protobuf::int32 value) {
  set_has_m_fvipexp();
  m_fvipexp_ = value;
}

// optional int32 m_VipItemIcon = 7;
inline bool E_VipCosntant::has_m_vipitemicon() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void E_VipCosntant::set_has_m_vipitemicon() {
  _has_bits_[0] |= 0x00000040u;
}
inline void E_VipCosntant::clear_has_m_vipitemicon() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void E_VipCosntant::clear_m_vipitemicon() {
  m_vipitemicon_ = 0;
  clear_has_m_vipitemicon();
}
inline ::google::protobuf::int32 E_VipCosntant::m_vipitemicon() const {
  return m_vipitemicon_;
}
inline void E_VipCosntant::set_m_vipitemicon(::google::protobuf::int32 value) {
  set_has_m_vipitemicon();
  m_vipitemicon_ = value;
}

// optional int32 m_foreverGuide = 8;
inline bool E_VipCosntant::has_m_foreverguide() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void E_VipCosntant::set_has_m_foreverguide() {
  _has_bits_[0] |= 0x00000080u;
}
inline void E_VipCosntant::clear_has_m_foreverguide() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void E_VipCosntant::clear_m_foreverguide() {
  m_foreverguide_ = 0;
  clear_has_m_foreverguide();
}
inline ::google::protobuf::int32 E_VipCosntant::m_foreverguide() const {
  return m_foreverguide_;
}
inline void E_VipCosntant::set_m_foreverguide(::google::protobuf::int32 value) {
  set_has_m_foreverguide();
  m_foreverguide_ = value;
}

// optional int32 m_unActiveGuide = 9;
inline bool E_VipCosntant::has_m_unactiveguide() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void E_VipCosntant::set_has_m_unactiveguide() {
  _has_bits_[0] |= 0x00000100u;
}
inline void E_VipCosntant::clear_has_m_unactiveguide() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void E_VipCosntant::clear_m_unactiveguide() {
  m_unactiveguide_ = 0;
  clear_has_m_unactiveguide();
}
inline ::google::protobuf::int32 E_VipCosntant::m_unactiveguide() const {
  return m_unactiveguide_;
}
inline void E_VipCosntant::set_m_unactiveguide(::google::protobuf::int32 value) {
  set_has_m_unactiveguide();
  m_unactiveguide_ = value;
}

// optional int32 m_vipExp = 10;
inline bool E_VipCosntant::has_m_vipexp() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void E_VipCosntant::set_has_m_vipexp() {
  _has_bits_[0] |= 0x00000200u;
}
inline void E_VipCosntant::clear_has_m_vipexp() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void E_VipCosntant::clear_m_vipexp() {
  m_vipexp_ = 0;
  clear_has_m_vipexp();
}
inline ::google::protobuf::int32 E_VipCosntant::m_vipexp() const {
  return m_vipexp_;
}
inline void E_VipCosntant::set_m_vipexp(::google::protobuf::int32 value) {
  set_has_m_vipexp();
  m_vipexp_ = value;
}

// -------------------------------------------------------------------

// Sheet_VipCosntant

// repeated .proto_ff.E_VipCosntant E_VipCosntant_List = 1;
inline int Sheet_VipCosntant::e_vipcosntant_list_size() const {
  return e_vipcosntant_list_.size();
}
inline void Sheet_VipCosntant::clear_e_vipcosntant_list() {
  e_vipcosntant_list_.Clear();
}
inline const ::proto_ff::E_VipCosntant& Sheet_VipCosntant::e_vipcosntant_list(int index) const {
  return e_vipcosntant_list_.Get(index);
}
inline ::proto_ff::E_VipCosntant* Sheet_VipCosntant::mutable_e_vipcosntant_list(int index) {
  return e_vipcosntant_list_.Mutable(index);
}
inline ::proto_ff::E_VipCosntant* Sheet_VipCosntant::add_e_vipcosntant_list() {
  return e_vipcosntant_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_VipCosntant >&
Sheet_VipCosntant::e_vipcosntant_list() const {
  return e_vipcosntant_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_VipCosntant >*
Sheet_VipCosntant::mutable_e_vipcosntant_list() {
  return &e_vipcosntant_list_;
}

// -------------------------------------------------------------------

// E_VipExplimit

// optional int32 m_lv = 1;
inline bool E_VipExplimit::has_m_lv() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_VipExplimit::set_has_m_lv() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_VipExplimit::clear_has_m_lv() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_VipExplimit::clear_m_lv() {
  m_lv_ = 0;
  clear_has_m_lv();
}
inline ::google::protobuf::int32 E_VipExplimit::m_lv() const {
  return m_lv_;
}
inline void E_VipExplimit::set_m_lv(::google::protobuf::int32 value) {
  set_has_m_lv();
  m_lv_ = value;
}

// optional int64 m_limit = 2;
inline bool E_VipExplimit::has_m_limit() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_VipExplimit::set_has_m_limit() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_VipExplimit::clear_has_m_limit() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_VipExplimit::clear_m_limit() {
  m_limit_ = GOOGLE_LONGLONG(0);
  clear_has_m_limit();
}
inline ::google::protobuf::int64 E_VipExplimit::m_limit() const {
  return m_limit_;
}
inline void E_VipExplimit::set_m_limit(::google::protobuf::int64 value) {
  set_has_m_limit();
  m_limit_ = value;
}

// -------------------------------------------------------------------

// Sheet_VipExplimit

// repeated .proto_ff.E_VipExplimit E_VipExplimit_List = 1;
inline int Sheet_VipExplimit::e_vipexplimit_list_size() const {
  return e_vipexplimit_list_.size();
}
inline void Sheet_VipExplimit::clear_e_vipexplimit_list() {
  e_vipexplimit_list_.Clear();
}
inline const ::proto_ff::E_VipExplimit& Sheet_VipExplimit::e_vipexplimit_list(int index) const {
  return e_vipexplimit_list_.Get(index);
}
inline ::proto_ff::E_VipExplimit* Sheet_VipExplimit::mutable_e_vipexplimit_list(int index) {
  return e_vipexplimit_list_.Mutable(index);
}
inline ::proto_ff::E_VipExplimit* Sheet_VipExplimit::add_e_vipexplimit_list() {
  return e_vipexplimit_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_VipExplimit >&
Sheet_VipExplimit::e_vipexplimit_list() const {
  return e_vipexplimit_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_VipExplimit >*
Sheet_VipExplimit::mutable_e_vipexplimit_list() {
  return &e_vipexplimit_list_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto_ff

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_E_5fVip_2eproto__INCLUDED
