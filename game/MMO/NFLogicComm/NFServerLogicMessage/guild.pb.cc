// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: guild.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "guild.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace proto_ff {

namespace {

const ::google::protobuf::Descriptor* E_GuildConstant_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_GuildConstant_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_GuildConstant_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_GuildConstant_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_GuildLevel_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_GuildLevel_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_GuildLevel_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_GuildLevel_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_GuildPosition_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_GuildPosition_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_GuildPosition_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_GuildPosition_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_guild_2eproto() {
  protobuf_AddDesc_guild_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "guild.proto");
  GOOGLE_CHECK(file != NULL);
  E_GuildConstant_descriptor_ = file->message_type(0);
  static const int E_GuildConstant_offsets_[10] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_GuildConstant, m_constantid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_GuildConstant, m_setitem_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_GuildConstant, m_nameitem_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_GuildConstant, m_editrequirelv_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_GuildConstant, m_giftcd_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_GuildConstant, m_dismiss_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_GuildConstant, m_transferguild_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_GuildConstant, m_territory_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_GuildConstant, m_autominlv_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_GuildConstant, m_autominbp_),
  };
  E_GuildConstant_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_GuildConstant_descriptor_,
      E_GuildConstant::default_instance_,
      E_GuildConstant_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_GuildConstant, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_GuildConstant, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_GuildConstant));
  Sheet_GuildConstant_descriptor_ = file->message_type(1);
  static const int Sheet_GuildConstant_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_GuildConstant, e_guildconstant_list_),
  };
  Sheet_GuildConstant_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_GuildConstant_descriptor_,
      Sheet_GuildConstant::default_instance_,
      Sheet_GuildConstant_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_GuildConstant, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_GuildConstant, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_GuildConstant));
  E_GuildLevel_descriptor_ = file->message_type(2);
  static const int E_GuildLevel_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_GuildLevel, m_guildlevel_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_GuildLevel, m_guildlevel_exp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_GuildLevel, m_guildlevel_member_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_GuildLevel, m_guildlevel_vp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_GuildLevel, m_guildlevel_np_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_GuildLevel, m_guildlevel_g_),
  };
  E_GuildLevel_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_GuildLevel_descriptor_,
      E_GuildLevel::default_instance_,
      E_GuildLevel_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_GuildLevel, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_GuildLevel, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_GuildLevel));
  Sheet_GuildLevel_descriptor_ = file->message_type(3);
  static const int Sheet_GuildLevel_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_GuildLevel, e_guildlevel_list_),
  };
  Sheet_GuildLevel_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_GuildLevel_descriptor_,
      Sheet_GuildLevel::default_instance_,
      Sheet_GuildLevel_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_GuildLevel, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_GuildLevel, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_GuildLevel));
  E_GuildPosition_descriptor_ = file->message_type(4);
  static const int E_GuildPosition_offsets_[17] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_GuildPosition, m_positionid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_GuildPosition, m_admitnewcomer_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_GuildPosition, m_appointandremovevp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_GuildPosition, m_appointandremoveelder_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_GuildPosition, m_appointandremoveg_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_GuildPosition, m_appointandremoveelite_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_GuildPosition, m_expelvp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_GuildPosition, m_expelelder_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_GuildPosition, m_expelg_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_GuildPosition, m_expelmass_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_GuildPosition, m_announcementediting_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_GuildPosition, m_rname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_GuildPosition, m_joincondition_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_GuildPosition, m_guildactivity_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_GuildPosition, m_dissolveassignguild_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_GuildPosition, m_changename_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_GuildPosition, m_recruitchat_),
  };
  E_GuildPosition_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_GuildPosition_descriptor_,
      E_GuildPosition::default_instance_,
      E_GuildPosition_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_GuildPosition, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_GuildPosition, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_GuildPosition));
  Sheet_GuildPosition_descriptor_ = file->message_type(5);
  static const int Sheet_GuildPosition_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_GuildPosition, e_guildposition_list_),
  };
  Sheet_GuildPosition_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_GuildPosition_descriptor_,
      Sheet_GuildPosition::default_instance_,
      Sheet_GuildPosition_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_GuildPosition, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_GuildPosition, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_GuildPosition));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_guild_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_GuildConstant_descriptor_, &E_GuildConstant::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_GuildConstant_descriptor_, &Sheet_GuildConstant::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_GuildLevel_descriptor_, &E_GuildLevel::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_GuildLevel_descriptor_, &Sheet_GuildLevel::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_GuildPosition_descriptor_, &E_GuildPosition::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_GuildPosition_descriptor_, &Sheet_GuildPosition::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_guild_2eproto() {
  delete E_GuildConstant::default_instance_;
  delete E_GuildConstant_reflection_;
  delete Sheet_GuildConstant::default_instance_;
  delete Sheet_GuildConstant_reflection_;
  delete E_GuildLevel::default_instance_;
  delete E_GuildLevel_reflection_;
  delete Sheet_GuildLevel::default_instance_;
  delete Sheet_GuildLevel_reflection_;
  delete E_GuildPosition::default_instance_;
  delete E_GuildPosition_reflection_;
  delete Sheet_GuildPosition::default_instance_;
  delete Sheet_GuildPosition_reflection_;
}

void protobuf_AddDesc_guild_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::yd_fieldoptions::protobuf_AddDesc_yd_5ffieldoptions_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\013guild.proto\022\010proto_ff\032\025yd_fieldoptions"
    ".proto\"\203\004\n\017E_GuildConstant\022\"\n\014m_constant"
    "id\030\001 \001(\005B\014\302\377\024\010\351\205\215\347\275\256id\0221\n\tm_setitem\030\002 \001("
    "\005B\036\302\377\024\032\345\210\233\345\273\272\345\205\254\344\274\232\351\234\200\350\246\201\351\201\223\345\205\267ID\0222\n\nm_n"
    "ameitem\030\003 \001(\005B\036\302\377\024\032\345\205\254\344\274\232\346\224\271\345\220\215\351\234\200\350\246\201\351\201\223"
    "\345\205\267ID\022A\n\017m_editrequirelv\030\004 \001(\005B(\302\377\024$\344\277\256\346"
    "\224\271\345\205\254\344\274\232\345\205\254\345\221\212\350\246\201\346\261\202\345\205\254\345\221\212\347\255\211\347\272\247\022(\n\010m_gi"
    "ftcd\030\005 \001(\005B\026\302\377\024\022\347\272\242\345\214\205\346\270\205\347\220\206\346\227\266\351\227\264\022)\n\tm_"
    "dismiss\030\006 \001(\005B\026\302\377\024\022\350\247\243\346\225\243\345\205\254\344\274\232\346\227\266\351\227\264\0228\n"
    "\017m_transferguild\030\007 \001(\005B\037\302\377\024\033\344\273\243\347\220\206\344\274\232\351\225\277"
    "\345\217\257\347\224\263\350\257\267\346\227\266\351\227\264\022-\n\013m_territory\030\010 \001(\005B\030\302\377"
    "\024\024\345\205\254\344\274\232\351\242\206\345\234\260\345\234\272\346\231\257id\0221\n\013m_autominlv\030\t "
    "\001(\005B\034\302\377\024\030\350\207\252\345\212\250\345\256\241\346\211\271\346\234\200\344\275\216\347\255\211\347\272\247\0221\n\013m_a"
    "utominbp\030\n \001(\005B\034\302\377\024\030\350\207\252\345\212\250\345\256\241\346\211\271\346\234\200\344\275\216\346\210"
    "\230\345\212\233\"T\n\023Sheet_GuildConstant\022=\n\024E_GuildCo"
    "nstant_List\030\001 \003(\0132\031.proto_ff.E_GuildCons"
    "tantB\004\210\301\024\024\"\254\002\n\014E_GuildLevel\022&\n\014m_guildle"
    "vel\030\001 \001(\005B\020\302\377\024\014\345\205\254\344\274\232\347\255\211\347\272\247\0220\n\020m_guildle"
    "vel_exp\030\002 \001(\005B\026\302\377\024\022\345\205\254\344\274\232\345\215\207\347\272\247\347\273\217\351\252\214\0226\n"
    "\023m_guildlevel_member\030\003 \001(\005B\031\302\377\024\025\345\205\254\344\274\232\346\210"
    "\220\345\221\230\346\200\273\344\272\272\346\225\260\0222\n\017m_guildlevel_vp\030\004 \001(\005B\031"
    "\302\377\024\025\345\205\254\344\274\232\345\211\257\344\274\232\351\225\277\344\272\272\346\225\260\022,\n\017m_guildleve"
    "l_np\030\005 \001(\005B\023\302\377\024\017\345\205\254\344\274\232\351\225\277\350\200\201\346\225\260\022(\n\016m_gui"
    "ldlevel_g\030\006 \001(\005B\020\302\377\024\014\346\212\244\346\263\225\344\272\272\346\225\260\"K\n\020She"
    "et_GuildLevel\0227\n\021E_GuildLevel_List\030\001 \003(\013"
    "2\026.proto_ff.E_GuildLevelB\004\210\301\024\024\"\255\006\n\017E_Gui"
    "ldPosition\022\"\n\014m_positionid\030\001 \001(\005B\014\302\377\024\010\350\201"
    "\214\344\275\215ID\022,\n\017m_admitnewcomer\030\002 \001(\005B\023\302\377\024\017\346\216\245"
    "\346\224\266\346\226\260\346\210\220\345\221\230\0228\n\024m_appointandremovevp\030\003 \001"
    "(\005B\032\302\377\024\026\344\273\273\345\221\275/\350\247\243\351\231\244\345\211\257\344\274\232\351\225\277\0228\n\027m_appo"
    "intandremoveelder\030\004 \001(\005B\027\302\377\024\023\344\273\273\345\221\275/\350\247\243\351"
    "\231\244\351\225\277\350\200\201\0224\n\023m_appointandremoveg\030\005 \001(\005B\027\302"
    "\377\024\023\344\273\273\345\221\275/\350\247\243\351\231\244\346\212\244\346\263\225\0228\n\027m_appointandre"
    "moveelite\030\006 \001(\005B\027\302\377\024\023\344\273\273\345\221\275/\350\247\243\351\231\244\347\262\276\350\213\261"
    "\022&\n\tm_expelvp\030\007 \001(\005B\023\302\377\024\017\350\270\242\345\207\272\345\211\257\344\274\232\351\225\277"
    "\022&\n\014m_expelelder\030\010 \001(\005B\020\302\377\024\014\350\270\242\345\207\272\351\225\277\350\200\201"
    "\022\"\n\010m_expelg\030\t \001(\005B\020\302\377\024\014\350\270\242\345\207\272\346\212\244\346\263\225\022+\n\013"
    "m_expelmass\030\n \001(\005B\026\302\377\024\022\350\270\242\345\207\272\346\231\256\351\200\232\346\210\220\345\221"
    "\230\022/\n\025m_announcementediting\030\013 \001(\005B\020\302\377\024\014\347\274"
    "\226\350\276\221\345\205\254\345\221\212\022!\n\007m_rname\030\014 \001(\005B\020\302\377\024\014\344\277\256\346\224\271\345"
    "\220\215\345\255\227\022/\n\017m_joincondition\030\r \001(\005B\026\302\377\024\022\350\256\276\347"
    "\275\256\345\212\240\345\205\245\346\226\271\345\274\217\022/\n\017m_guildactivity\030\016 \001(\005B"
    "\026\302\377\024\022\345\274\200\345\220\257\345\205\254\344\274\232\347\216\251\346\263\225\0226\n\025m_dissolveass"
    "ignguild\030\017 \001(\005B\027\302\377\024\023\350\247\243\346\225\243/\350\275\254\350\256\251\345\205\254\344\274\232\022"
    "&\n\014m_changename\030\020 \001(\005B\020\302\377\024\014\346\224\271\345\220\215\346\235\203\351\231\220\022"
    "-\n\rm_recruitchat\030\021 \001(\005B\026\302\377\024\022\345\217\221\345\270\203\346\213\233\350\264\244"
    "\347\272\263\345\243\253\"T\n\023Sheet_GuildPosition\022=\n\024E_Guild"
    "Position_List\030\001 \003(\0132\031.proto_ff.E_GuildPo"
    "sitionB\004\210\301\024\024", 1932);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "guild.proto", &protobuf_RegisterTypes);
  E_GuildConstant::default_instance_ = new E_GuildConstant();
  Sheet_GuildConstant::default_instance_ = new Sheet_GuildConstant();
  E_GuildLevel::default_instance_ = new E_GuildLevel();
  Sheet_GuildLevel::default_instance_ = new Sheet_GuildLevel();
  E_GuildPosition::default_instance_ = new E_GuildPosition();
  Sheet_GuildPosition::default_instance_ = new Sheet_GuildPosition();
  E_GuildConstant::default_instance_->InitAsDefaultInstance();
  Sheet_GuildConstant::default_instance_->InitAsDefaultInstance();
  E_GuildLevel::default_instance_->InitAsDefaultInstance();
  Sheet_GuildLevel::default_instance_->InitAsDefaultInstance();
  E_GuildPosition::default_instance_->InitAsDefaultInstance();
  Sheet_GuildPosition::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_guild_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_guild_2eproto {
  StaticDescriptorInitializer_guild_2eproto() {
    protobuf_AddDesc_guild_2eproto();
  }
} static_descriptor_initializer_guild_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int E_GuildConstant::kMConstantidFieldNumber;
const int E_GuildConstant::kMSetitemFieldNumber;
const int E_GuildConstant::kMNameitemFieldNumber;
const int E_GuildConstant::kMEditrequirelvFieldNumber;
const int E_GuildConstant::kMGiftcdFieldNumber;
const int E_GuildConstant::kMDismissFieldNumber;
const int E_GuildConstant::kMTransferguildFieldNumber;
const int E_GuildConstant::kMTerritoryFieldNumber;
const int E_GuildConstant::kMAutominlvFieldNumber;
const int E_GuildConstant::kMAutominbpFieldNumber;
#endif  // !_MSC_VER

E_GuildConstant::E_GuildConstant()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_GuildConstant::InitAsDefaultInstance() {
}

E_GuildConstant::E_GuildConstant(const E_GuildConstant& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_GuildConstant::SharedCtor() {
  _cached_size_ = 0;
  m_constantid_ = 0;
  m_setitem_ = 0;
  m_nameitem_ = 0;
  m_editrequirelv_ = 0;
  m_giftcd_ = 0;
  m_dismiss_ = 0;
  m_transferguild_ = 0;
  m_territory_ = 0;
  m_autominlv_ = 0;
  m_autominbp_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_GuildConstant::~E_GuildConstant() {
  SharedDtor();
}

void E_GuildConstant::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_GuildConstant::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_GuildConstant::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_GuildConstant_descriptor_;
}

const E_GuildConstant& E_GuildConstant::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_guild_2eproto();
  return *default_instance_;
}

E_GuildConstant* E_GuildConstant::default_instance_ = NULL;

E_GuildConstant* E_GuildConstant::New() const {
  return new E_GuildConstant;
}

void E_GuildConstant::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_constantid_ = 0;
    m_setitem_ = 0;
    m_nameitem_ = 0;
    m_editrequirelv_ = 0;
    m_giftcd_ = 0;
    m_dismiss_ = 0;
    m_transferguild_ = 0;
    m_territory_ = 0;
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    m_autominlv_ = 0;
    m_autominbp_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_GuildConstant::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_constantid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_constantid_)));
          set_has_m_constantid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_setitem;
        break;
      }

      // optional int32 m_setitem = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_setitem:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_setitem_)));
          set_has_m_setitem();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_m_nameitem;
        break;
      }

      // optional int32 m_nameitem = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_nameitem:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_nameitem_)));
          set_has_m_nameitem();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_m_editrequirelv;
        break;
      }

      // optional int32 m_editrequirelv = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_editrequirelv:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_editrequirelv_)));
          set_has_m_editrequirelv();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_m_giftcd;
        break;
      }

      // optional int32 m_giftcd = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_giftcd:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_giftcd_)));
          set_has_m_giftcd();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_m_dismiss;
        break;
      }

      // optional int32 m_dismiss = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_dismiss:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_dismiss_)));
          set_has_m_dismiss();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_m_transferguild;
        break;
      }

      // optional int32 m_transferguild = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_transferguild:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_transferguild_)));
          set_has_m_transferguild();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(64)) goto parse_m_territory;
        break;
      }

      // optional int32 m_territory = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_territory:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_territory_)));
          set_has_m_territory();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(72)) goto parse_m_autominlv;
        break;
      }

      // optional int32 m_autominlv = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_autominlv:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_autominlv_)));
          set_has_m_autominlv();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(80)) goto parse_m_autominbp;
        break;
      }

      // optional int32 m_autominbp = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_autominbp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_autominbp_)));
          set_has_m_autominbp();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_GuildConstant::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_constantid = 1;
  if (has_m_constantid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_constantid(), output);
  }

  // optional int32 m_setitem = 2;
  if (has_m_setitem()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_setitem(), output);
  }

  // optional int32 m_nameitem = 3;
  if (has_m_nameitem()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->m_nameitem(), output);
  }

  // optional int32 m_editrequirelv = 4;
  if (has_m_editrequirelv()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->m_editrequirelv(), output);
  }

  // optional int32 m_giftcd = 5;
  if (has_m_giftcd()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->m_giftcd(), output);
  }

  // optional int32 m_dismiss = 6;
  if (has_m_dismiss()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->m_dismiss(), output);
  }

  // optional int32 m_transferguild = 7;
  if (has_m_transferguild()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->m_transferguild(), output);
  }

  // optional int32 m_territory = 8;
  if (has_m_territory()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->m_territory(), output);
  }

  // optional int32 m_autominlv = 9;
  if (has_m_autominlv()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->m_autominlv(), output);
  }

  // optional int32 m_autominbp = 10;
  if (has_m_autominbp()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->m_autominbp(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_GuildConstant::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_constantid = 1;
  if (has_m_constantid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_constantid(), target);
  }

  // optional int32 m_setitem = 2;
  if (has_m_setitem()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_setitem(), target);
  }

  // optional int32 m_nameitem = 3;
  if (has_m_nameitem()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->m_nameitem(), target);
  }

  // optional int32 m_editrequirelv = 4;
  if (has_m_editrequirelv()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->m_editrequirelv(), target);
  }

  // optional int32 m_giftcd = 5;
  if (has_m_giftcd()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->m_giftcd(), target);
  }

  // optional int32 m_dismiss = 6;
  if (has_m_dismiss()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->m_dismiss(), target);
  }

  // optional int32 m_transferguild = 7;
  if (has_m_transferguild()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->m_transferguild(), target);
  }

  // optional int32 m_territory = 8;
  if (has_m_territory()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->m_territory(), target);
  }

  // optional int32 m_autominlv = 9;
  if (has_m_autominlv()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->m_autominlv(), target);
  }

  // optional int32 m_autominbp = 10;
  if (has_m_autominbp()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->m_autominbp(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_GuildConstant::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_constantid = 1;
    if (has_m_constantid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_constantid());
    }

    // optional int32 m_setitem = 2;
    if (has_m_setitem()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_setitem());
    }

    // optional int32 m_nameitem = 3;
    if (has_m_nameitem()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_nameitem());
    }

    // optional int32 m_editrequirelv = 4;
    if (has_m_editrequirelv()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_editrequirelv());
    }

    // optional int32 m_giftcd = 5;
    if (has_m_giftcd()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_giftcd());
    }

    // optional int32 m_dismiss = 6;
    if (has_m_dismiss()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_dismiss());
    }

    // optional int32 m_transferguild = 7;
    if (has_m_transferguild()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_transferguild());
    }

    // optional int32 m_territory = 8;
    if (has_m_territory()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_territory());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional int32 m_autominlv = 9;
    if (has_m_autominlv()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_autominlv());
    }

    // optional int32 m_autominbp = 10;
    if (has_m_autominbp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_autominbp());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_GuildConstant::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_GuildConstant* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_GuildConstant*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_GuildConstant::MergeFrom(const E_GuildConstant& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_constantid()) {
      set_m_constantid(from.m_constantid());
    }
    if (from.has_m_setitem()) {
      set_m_setitem(from.m_setitem());
    }
    if (from.has_m_nameitem()) {
      set_m_nameitem(from.m_nameitem());
    }
    if (from.has_m_editrequirelv()) {
      set_m_editrequirelv(from.m_editrequirelv());
    }
    if (from.has_m_giftcd()) {
      set_m_giftcd(from.m_giftcd());
    }
    if (from.has_m_dismiss()) {
      set_m_dismiss(from.m_dismiss());
    }
    if (from.has_m_transferguild()) {
      set_m_transferguild(from.m_transferguild());
    }
    if (from.has_m_territory()) {
      set_m_territory(from.m_territory());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_m_autominlv()) {
      set_m_autominlv(from.m_autominlv());
    }
    if (from.has_m_autominbp()) {
      set_m_autominbp(from.m_autominbp());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_GuildConstant::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_GuildConstant::CopyFrom(const E_GuildConstant& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_GuildConstant::IsInitialized() const {

  return true;
}

void E_GuildConstant::Swap(E_GuildConstant* other) {
  if (other != this) {
    std::swap(m_constantid_, other->m_constantid_);
    std::swap(m_setitem_, other->m_setitem_);
    std::swap(m_nameitem_, other->m_nameitem_);
    std::swap(m_editrequirelv_, other->m_editrequirelv_);
    std::swap(m_giftcd_, other->m_giftcd_);
    std::swap(m_dismiss_, other->m_dismiss_);
    std::swap(m_transferguild_, other->m_transferguild_);
    std::swap(m_territory_, other->m_territory_);
    std::swap(m_autominlv_, other->m_autominlv_);
    std::swap(m_autominbp_, other->m_autominbp_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_GuildConstant::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_GuildConstant_descriptor_;
  metadata.reflection = E_GuildConstant_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_GuildConstant::kEGuildConstantListFieldNumber;
#endif  // !_MSC_VER

Sheet_GuildConstant::Sheet_GuildConstant()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_GuildConstant::InitAsDefaultInstance() {
}

Sheet_GuildConstant::Sheet_GuildConstant(const Sheet_GuildConstant& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_GuildConstant::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_GuildConstant::~Sheet_GuildConstant() {
  SharedDtor();
}

void Sheet_GuildConstant::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_GuildConstant::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_GuildConstant::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_GuildConstant_descriptor_;
}

const Sheet_GuildConstant& Sheet_GuildConstant::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_guild_2eproto();
  return *default_instance_;
}

Sheet_GuildConstant* Sheet_GuildConstant::default_instance_ = NULL;

Sheet_GuildConstant* Sheet_GuildConstant::New() const {
  return new Sheet_GuildConstant;
}

void Sheet_GuildConstant::Clear() {
  e_guildconstant_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_GuildConstant::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.E_GuildConstant E_GuildConstant_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_E_GuildConstant_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_e_guildconstant_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_E_GuildConstant_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_GuildConstant::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.E_GuildConstant E_GuildConstant_List = 1;
  for (int i = 0; i < this->e_guildconstant_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->e_guildconstant_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_GuildConstant::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.E_GuildConstant E_GuildConstant_List = 1;
  for (int i = 0; i < this->e_guildconstant_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->e_guildconstant_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_GuildConstant::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.E_GuildConstant E_GuildConstant_List = 1;
  total_size += 1 * this->e_guildconstant_list_size();
  for (int i = 0; i < this->e_guildconstant_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->e_guildconstant_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_GuildConstant::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_GuildConstant* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_GuildConstant*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_GuildConstant::MergeFrom(const Sheet_GuildConstant& from) {
  GOOGLE_CHECK_NE(&from, this);
  e_guildconstant_list_.MergeFrom(from.e_guildconstant_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_GuildConstant::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_GuildConstant::CopyFrom(const Sheet_GuildConstant& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_GuildConstant::IsInitialized() const {

  return true;
}

void Sheet_GuildConstant::Swap(Sheet_GuildConstant* other) {
  if (other != this) {
    e_guildconstant_list_.Swap(&other->e_guildconstant_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_GuildConstant::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_GuildConstant_descriptor_;
  metadata.reflection = Sheet_GuildConstant_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_GuildLevel::kMGuildlevelFieldNumber;
const int E_GuildLevel::kMGuildlevelExpFieldNumber;
const int E_GuildLevel::kMGuildlevelMemberFieldNumber;
const int E_GuildLevel::kMGuildlevelVpFieldNumber;
const int E_GuildLevel::kMGuildlevelNpFieldNumber;
const int E_GuildLevel::kMGuildlevelGFieldNumber;
#endif  // !_MSC_VER

E_GuildLevel::E_GuildLevel()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_GuildLevel::InitAsDefaultInstance() {
}

E_GuildLevel::E_GuildLevel(const E_GuildLevel& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_GuildLevel::SharedCtor() {
  _cached_size_ = 0;
  m_guildlevel_ = 0;
  m_guildlevel_exp_ = 0;
  m_guildlevel_member_ = 0;
  m_guildlevel_vp_ = 0;
  m_guildlevel_np_ = 0;
  m_guildlevel_g_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_GuildLevel::~E_GuildLevel() {
  SharedDtor();
}

void E_GuildLevel::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_GuildLevel::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_GuildLevel::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_GuildLevel_descriptor_;
}

const E_GuildLevel& E_GuildLevel::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_guild_2eproto();
  return *default_instance_;
}

E_GuildLevel* E_GuildLevel::default_instance_ = NULL;

E_GuildLevel* E_GuildLevel::New() const {
  return new E_GuildLevel;
}

void E_GuildLevel::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_guildlevel_ = 0;
    m_guildlevel_exp_ = 0;
    m_guildlevel_member_ = 0;
    m_guildlevel_vp_ = 0;
    m_guildlevel_np_ = 0;
    m_guildlevel_g_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_GuildLevel::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_guildlevel = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_guildlevel_)));
          set_has_m_guildlevel();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_guildlevel_exp;
        break;
      }

      // optional int32 m_guildlevel_exp = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_guildlevel_exp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_guildlevel_exp_)));
          set_has_m_guildlevel_exp();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_m_guildlevel_member;
        break;
      }

      // optional int32 m_guildlevel_member = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_guildlevel_member:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_guildlevel_member_)));
          set_has_m_guildlevel_member();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_m_guildlevel_vp;
        break;
      }

      // optional int32 m_guildlevel_vp = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_guildlevel_vp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_guildlevel_vp_)));
          set_has_m_guildlevel_vp();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_m_guildlevel_np;
        break;
      }

      // optional int32 m_guildlevel_np = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_guildlevel_np:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_guildlevel_np_)));
          set_has_m_guildlevel_np();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_m_guildlevel_g;
        break;
      }

      // optional int32 m_guildlevel_g = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_guildlevel_g:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_guildlevel_g_)));
          set_has_m_guildlevel_g();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_GuildLevel::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_guildlevel = 1;
  if (has_m_guildlevel()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_guildlevel(), output);
  }

  // optional int32 m_guildlevel_exp = 2;
  if (has_m_guildlevel_exp()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_guildlevel_exp(), output);
  }

  // optional int32 m_guildlevel_member = 3;
  if (has_m_guildlevel_member()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->m_guildlevel_member(), output);
  }

  // optional int32 m_guildlevel_vp = 4;
  if (has_m_guildlevel_vp()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->m_guildlevel_vp(), output);
  }

  // optional int32 m_guildlevel_np = 5;
  if (has_m_guildlevel_np()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->m_guildlevel_np(), output);
  }

  // optional int32 m_guildlevel_g = 6;
  if (has_m_guildlevel_g()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->m_guildlevel_g(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_GuildLevel::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_guildlevel = 1;
  if (has_m_guildlevel()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_guildlevel(), target);
  }

  // optional int32 m_guildlevel_exp = 2;
  if (has_m_guildlevel_exp()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_guildlevel_exp(), target);
  }

  // optional int32 m_guildlevel_member = 3;
  if (has_m_guildlevel_member()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->m_guildlevel_member(), target);
  }

  // optional int32 m_guildlevel_vp = 4;
  if (has_m_guildlevel_vp()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->m_guildlevel_vp(), target);
  }

  // optional int32 m_guildlevel_np = 5;
  if (has_m_guildlevel_np()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->m_guildlevel_np(), target);
  }

  // optional int32 m_guildlevel_g = 6;
  if (has_m_guildlevel_g()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->m_guildlevel_g(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_GuildLevel::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_guildlevel = 1;
    if (has_m_guildlevel()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_guildlevel());
    }

    // optional int32 m_guildlevel_exp = 2;
    if (has_m_guildlevel_exp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_guildlevel_exp());
    }

    // optional int32 m_guildlevel_member = 3;
    if (has_m_guildlevel_member()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_guildlevel_member());
    }

    // optional int32 m_guildlevel_vp = 4;
    if (has_m_guildlevel_vp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_guildlevel_vp());
    }

    // optional int32 m_guildlevel_np = 5;
    if (has_m_guildlevel_np()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_guildlevel_np());
    }

    // optional int32 m_guildlevel_g = 6;
    if (has_m_guildlevel_g()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_guildlevel_g());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_GuildLevel::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_GuildLevel* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_GuildLevel*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_GuildLevel::MergeFrom(const E_GuildLevel& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_guildlevel()) {
      set_m_guildlevel(from.m_guildlevel());
    }
    if (from.has_m_guildlevel_exp()) {
      set_m_guildlevel_exp(from.m_guildlevel_exp());
    }
    if (from.has_m_guildlevel_member()) {
      set_m_guildlevel_member(from.m_guildlevel_member());
    }
    if (from.has_m_guildlevel_vp()) {
      set_m_guildlevel_vp(from.m_guildlevel_vp());
    }
    if (from.has_m_guildlevel_np()) {
      set_m_guildlevel_np(from.m_guildlevel_np());
    }
    if (from.has_m_guildlevel_g()) {
      set_m_guildlevel_g(from.m_guildlevel_g());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_GuildLevel::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_GuildLevel::CopyFrom(const E_GuildLevel& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_GuildLevel::IsInitialized() const {

  return true;
}

void E_GuildLevel::Swap(E_GuildLevel* other) {
  if (other != this) {
    std::swap(m_guildlevel_, other->m_guildlevel_);
    std::swap(m_guildlevel_exp_, other->m_guildlevel_exp_);
    std::swap(m_guildlevel_member_, other->m_guildlevel_member_);
    std::swap(m_guildlevel_vp_, other->m_guildlevel_vp_);
    std::swap(m_guildlevel_np_, other->m_guildlevel_np_);
    std::swap(m_guildlevel_g_, other->m_guildlevel_g_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_GuildLevel::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_GuildLevel_descriptor_;
  metadata.reflection = E_GuildLevel_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_GuildLevel::kEGuildLevelListFieldNumber;
#endif  // !_MSC_VER

Sheet_GuildLevel::Sheet_GuildLevel()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_GuildLevel::InitAsDefaultInstance() {
}

Sheet_GuildLevel::Sheet_GuildLevel(const Sheet_GuildLevel& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_GuildLevel::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_GuildLevel::~Sheet_GuildLevel() {
  SharedDtor();
}

void Sheet_GuildLevel::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_GuildLevel::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_GuildLevel::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_GuildLevel_descriptor_;
}

const Sheet_GuildLevel& Sheet_GuildLevel::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_guild_2eproto();
  return *default_instance_;
}

Sheet_GuildLevel* Sheet_GuildLevel::default_instance_ = NULL;

Sheet_GuildLevel* Sheet_GuildLevel::New() const {
  return new Sheet_GuildLevel;
}

void Sheet_GuildLevel::Clear() {
  e_guildlevel_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_GuildLevel::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.E_GuildLevel E_GuildLevel_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_E_GuildLevel_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_e_guildlevel_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_E_GuildLevel_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_GuildLevel::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.E_GuildLevel E_GuildLevel_List = 1;
  for (int i = 0; i < this->e_guildlevel_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->e_guildlevel_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_GuildLevel::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.E_GuildLevel E_GuildLevel_List = 1;
  for (int i = 0; i < this->e_guildlevel_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->e_guildlevel_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_GuildLevel::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.E_GuildLevel E_GuildLevel_List = 1;
  total_size += 1 * this->e_guildlevel_list_size();
  for (int i = 0; i < this->e_guildlevel_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->e_guildlevel_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_GuildLevel::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_GuildLevel* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_GuildLevel*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_GuildLevel::MergeFrom(const Sheet_GuildLevel& from) {
  GOOGLE_CHECK_NE(&from, this);
  e_guildlevel_list_.MergeFrom(from.e_guildlevel_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_GuildLevel::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_GuildLevel::CopyFrom(const Sheet_GuildLevel& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_GuildLevel::IsInitialized() const {

  return true;
}

void Sheet_GuildLevel::Swap(Sheet_GuildLevel* other) {
  if (other != this) {
    e_guildlevel_list_.Swap(&other->e_guildlevel_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_GuildLevel::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_GuildLevel_descriptor_;
  metadata.reflection = Sheet_GuildLevel_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_GuildPosition::kMPositionidFieldNumber;
const int E_GuildPosition::kMAdmitnewcomerFieldNumber;
const int E_GuildPosition::kMAppointandremovevpFieldNumber;
const int E_GuildPosition::kMAppointandremoveelderFieldNumber;
const int E_GuildPosition::kMAppointandremovegFieldNumber;
const int E_GuildPosition::kMAppointandremoveeliteFieldNumber;
const int E_GuildPosition::kMExpelvpFieldNumber;
const int E_GuildPosition::kMExpelelderFieldNumber;
const int E_GuildPosition::kMExpelgFieldNumber;
const int E_GuildPosition::kMExpelmassFieldNumber;
const int E_GuildPosition::kMAnnouncementeditingFieldNumber;
const int E_GuildPosition::kMRnameFieldNumber;
const int E_GuildPosition::kMJoinconditionFieldNumber;
const int E_GuildPosition::kMGuildactivityFieldNumber;
const int E_GuildPosition::kMDissolveassignguildFieldNumber;
const int E_GuildPosition::kMChangenameFieldNumber;
const int E_GuildPosition::kMRecruitchatFieldNumber;
#endif  // !_MSC_VER

E_GuildPosition::E_GuildPosition()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_GuildPosition::InitAsDefaultInstance() {
}

E_GuildPosition::E_GuildPosition(const E_GuildPosition& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_GuildPosition::SharedCtor() {
  _cached_size_ = 0;
  m_positionid_ = 0;
  m_admitnewcomer_ = 0;
  m_appointandremovevp_ = 0;
  m_appointandremoveelder_ = 0;
  m_appointandremoveg_ = 0;
  m_appointandremoveelite_ = 0;
  m_expelvp_ = 0;
  m_expelelder_ = 0;
  m_expelg_ = 0;
  m_expelmass_ = 0;
  m_announcementediting_ = 0;
  m_rname_ = 0;
  m_joincondition_ = 0;
  m_guildactivity_ = 0;
  m_dissolveassignguild_ = 0;
  m_changename_ = 0;
  m_recruitchat_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_GuildPosition::~E_GuildPosition() {
  SharedDtor();
}

void E_GuildPosition::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_GuildPosition::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_GuildPosition::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_GuildPosition_descriptor_;
}

const E_GuildPosition& E_GuildPosition::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_guild_2eproto();
  return *default_instance_;
}

E_GuildPosition* E_GuildPosition::default_instance_ = NULL;

E_GuildPosition* E_GuildPosition::New() const {
  return new E_GuildPosition;
}

void E_GuildPosition::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_positionid_ = 0;
    m_admitnewcomer_ = 0;
    m_appointandremovevp_ = 0;
    m_appointandremoveelder_ = 0;
    m_appointandremoveg_ = 0;
    m_appointandremoveelite_ = 0;
    m_expelvp_ = 0;
    m_expelelder_ = 0;
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    m_expelg_ = 0;
    m_expelmass_ = 0;
    m_announcementediting_ = 0;
    m_rname_ = 0;
    m_joincondition_ = 0;
    m_guildactivity_ = 0;
    m_dissolveassignguild_ = 0;
    m_changename_ = 0;
  }
  if (_has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    m_recruitchat_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_GuildPosition::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_positionid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_positionid_)));
          set_has_m_positionid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_admitnewcomer;
        break;
      }

      // optional int32 m_admitnewcomer = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_admitnewcomer:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_admitnewcomer_)));
          set_has_m_admitnewcomer();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_m_appointandremovevp;
        break;
      }

      // optional int32 m_appointandremovevp = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_appointandremovevp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_appointandremovevp_)));
          set_has_m_appointandremovevp();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_m_appointandremoveelder;
        break;
      }

      // optional int32 m_appointandremoveelder = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_appointandremoveelder:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_appointandremoveelder_)));
          set_has_m_appointandremoveelder();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_m_appointandremoveg;
        break;
      }

      // optional int32 m_appointandremoveg = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_appointandremoveg:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_appointandremoveg_)));
          set_has_m_appointandremoveg();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_m_appointandremoveelite;
        break;
      }

      // optional int32 m_appointandremoveelite = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_appointandremoveelite:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_appointandremoveelite_)));
          set_has_m_appointandremoveelite();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_m_expelvp;
        break;
      }

      // optional int32 m_expelvp = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_expelvp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_expelvp_)));
          set_has_m_expelvp();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(64)) goto parse_m_expelelder;
        break;
      }

      // optional int32 m_expelelder = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_expelelder:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_expelelder_)));
          set_has_m_expelelder();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(72)) goto parse_m_expelg;
        break;
      }

      // optional int32 m_expelg = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_expelg:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_expelg_)));
          set_has_m_expelg();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(80)) goto parse_m_expelmass;
        break;
      }

      // optional int32 m_expelmass = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_expelmass:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_expelmass_)));
          set_has_m_expelmass();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(88)) goto parse_m_announcementediting;
        break;
      }

      // optional int32 m_announcementediting = 11;
      case 11: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_announcementediting:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_announcementediting_)));
          set_has_m_announcementediting();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(96)) goto parse_m_rname;
        break;
      }

      // optional int32 m_rname = 12;
      case 12: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_rname:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_rname_)));
          set_has_m_rname();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(104)) goto parse_m_joincondition;
        break;
      }

      // optional int32 m_joincondition = 13;
      case 13: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_joincondition:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_joincondition_)));
          set_has_m_joincondition();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(112)) goto parse_m_guildactivity;
        break;
      }

      // optional int32 m_guildactivity = 14;
      case 14: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_guildactivity:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_guildactivity_)));
          set_has_m_guildactivity();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(120)) goto parse_m_dissolveassignguild;
        break;
      }

      // optional int32 m_dissolveassignguild = 15;
      case 15: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_dissolveassignguild:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_dissolveassignguild_)));
          set_has_m_dissolveassignguild();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(128)) goto parse_m_changename;
        break;
      }

      // optional int32 m_changename = 16;
      case 16: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_changename:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_changename_)));
          set_has_m_changename();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(136)) goto parse_m_recruitchat;
        break;
      }

      // optional int32 m_recruitchat = 17;
      case 17: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_recruitchat:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_recruitchat_)));
          set_has_m_recruitchat();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_GuildPosition::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_positionid = 1;
  if (has_m_positionid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_positionid(), output);
  }

  // optional int32 m_admitnewcomer = 2;
  if (has_m_admitnewcomer()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_admitnewcomer(), output);
  }

  // optional int32 m_appointandremovevp = 3;
  if (has_m_appointandremovevp()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->m_appointandremovevp(), output);
  }

  // optional int32 m_appointandremoveelder = 4;
  if (has_m_appointandremoveelder()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->m_appointandremoveelder(), output);
  }

  // optional int32 m_appointandremoveg = 5;
  if (has_m_appointandremoveg()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->m_appointandremoveg(), output);
  }

  // optional int32 m_appointandremoveelite = 6;
  if (has_m_appointandremoveelite()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->m_appointandremoveelite(), output);
  }

  // optional int32 m_expelvp = 7;
  if (has_m_expelvp()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->m_expelvp(), output);
  }

  // optional int32 m_expelelder = 8;
  if (has_m_expelelder()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->m_expelelder(), output);
  }

  // optional int32 m_expelg = 9;
  if (has_m_expelg()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->m_expelg(), output);
  }

  // optional int32 m_expelmass = 10;
  if (has_m_expelmass()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->m_expelmass(), output);
  }

  // optional int32 m_announcementediting = 11;
  if (has_m_announcementediting()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->m_announcementediting(), output);
  }

  // optional int32 m_rname = 12;
  if (has_m_rname()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(12, this->m_rname(), output);
  }

  // optional int32 m_joincondition = 13;
  if (has_m_joincondition()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(13, this->m_joincondition(), output);
  }

  // optional int32 m_guildactivity = 14;
  if (has_m_guildactivity()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(14, this->m_guildactivity(), output);
  }

  // optional int32 m_dissolveassignguild = 15;
  if (has_m_dissolveassignguild()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(15, this->m_dissolveassignguild(), output);
  }

  // optional int32 m_changename = 16;
  if (has_m_changename()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(16, this->m_changename(), output);
  }

  // optional int32 m_recruitchat = 17;
  if (has_m_recruitchat()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(17, this->m_recruitchat(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_GuildPosition::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_positionid = 1;
  if (has_m_positionid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_positionid(), target);
  }

  // optional int32 m_admitnewcomer = 2;
  if (has_m_admitnewcomer()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_admitnewcomer(), target);
  }

  // optional int32 m_appointandremovevp = 3;
  if (has_m_appointandremovevp()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->m_appointandremovevp(), target);
  }

  // optional int32 m_appointandremoveelder = 4;
  if (has_m_appointandremoveelder()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->m_appointandremoveelder(), target);
  }

  // optional int32 m_appointandremoveg = 5;
  if (has_m_appointandremoveg()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->m_appointandremoveg(), target);
  }

  // optional int32 m_appointandremoveelite = 6;
  if (has_m_appointandremoveelite()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->m_appointandremoveelite(), target);
  }

  // optional int32 m_expelvp = 7;
  if (has_m_expelvp()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->m_expelvp(), target);
  }

  // optional int32 m_expelelder = 8;
  if (has_m_expelelder()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->m_expelelder(), target);
  }

  // optional int32 m_expelg = 9;
  if (has_m_expelg()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->m_expelg(), target);
  }

  // optional int32 m_expelmass = 10;
  if (has_m_expelmass()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->m_expelmass(), target);
  }

  // optional int32 m_announcementediting = 11;
  if (has_m_announcementediting()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->m_announcementediting(), target);
  }

  // optional int32 m_rname = 12;
  if (has_m_rname()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(12, this->m_rname(), target);
  }

  // optional int32 m_joincondition = 13;
  if (has_m_joincondition()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(13, this->m_joincondition(), target);
  }

  // optional int32 m_guildactivity = 14;
  if (has_m_guildactivity()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(14, this->m_guildactivity(), target);
  }

  // optional int32 m_dissolveassignguild = 15;
  if (has_m_dissolveassignguild()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(15, this->m_dissolveassignguild(), target);
  }

  // optional int32 m_changename = 16;
  if (has_m_changename()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(16, this->m_changename(), target);
  }

  // optional int32 m_recruitchat = 17;
  if (has_m_recruitchat()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(17, this->m_recruitchat(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_GuildPosition::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_positionid = 1;
    if (has_m_positionid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_positionid());
    }

    // optional int32 m_admitnewcomer = 2;
    if (has_m_admitnewcomer()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_admitnewcomer());
    }

    // optional int32 m_appointandremovevp = 3;
    if (has_m_appointandremovevp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_appointandremovevp());
    }

    // optional int32 m_appointandremoveelder = 4;
    if (has_m_appointandremoveelder()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_appointandremoveelder());
    }

    // optional int32 m_appointandremoveg = 5;
    if (has_m_appointandremoveg()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_appointandremoveg());
    }

    // optional int32 m_appointandremoveelite = 6;
    if (has_m_appointandremoveelite()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_appointandremoveelite());
    }

    // optional int32 m_expelvp = 7;
    if (has_m_expelvp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_expelvp());
    }

    // optional int32 m_expelelder = 8;
    if (has_m_expelelder()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_expelelder());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional int32 m_expelg = 9;
    if (has_m_expelg()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_expelg());
    }

    // optional int32 m_expelmass = 10;
    if (has_m_expelmass()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_expelmass());
    }

    // optional int32 m_announcementediting = 11;
    if (has_m_announcementediting()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_announcementediting());
    }

    // optional int32 m_rname = 12;
    if (has_m_rname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_rname());
    }

    // optional int32 m_joincondition = 13;
    if (has_m_joincondition()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_joincondition());
    }

    // optional int32 m_guildactivity = 14;
    if (has_m_guildactivity()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_guildactivity());
    }

    // optional int32 m_dissolveassignguild = 15;
    if (has_m_dissolveassignguild()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_dissolveassignguild());
    }

    // optional int32 m_changename = 16;
    if (has_m_changename()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_changename());
    }

  }
  if (_has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    // optional int32 m_recruitchat = 17;
    if (has_m_recruitchat()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_recruitchat());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_GuildPosition::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_GuildPosition* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_GuildPosition*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_GuildPosition::MergeFrom(const E_GuildPosition& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_positionid()) {
      set_m_positionid(from.m_positionid());
    }
    if (from.has_m_admitnewcomer()) {
      set_m_admitnewcomer(from.m_admitnewcomer());
    }
    if (from.has_m_appointandremovevp()) {
      set_m_appointandremovevp(from.m_appointandremovevp());
    }
    if (from.has_m_appointandremoveelder()) {
      set_m_appointandremoveelder(from.m_appointandremoveelder());
    }
    if (from.has_m_appointandremoveg()) {
      set_m_appointandremoveg(from.m_appointandremoveg());
    }
    if (from.has_m_appointandremoveelite()) {
      set_m_appointandremoveelite(from.m_appointandremoveelite());
    }
    if (from.has_m_expelvp()) {
      set_m_expelvp(from.m_expelvp());
    }
    if (from.has_m_expelelder()) {
      set_m_expelelder(from.m_expelelder());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_m_expelg()) {
      set_m_expelg(from.m_expelg());
    }
    if (from.has_m_expelmass()) {
      set_m_expelmass(from.m_expelmass());
    }
    if (from.has_m_announcementediting()) {
      set_m_announcementediting(from.m_announcementediting());
    }
    if (from.has_m_rname()) {
      set_m_rname(from.m_rname());
    }
    if (from.has_m_joincondition()) {
      set_m_joincondition(from.m_joincondition());
    }
    if (from.has_m_guildactivity()) {
      set_m_guildactivity(from.m_guildactivity());
    }
    if (from.has_m_dissolveassignguild()) {
      set_m_dissolveassignguild(from.m_dissolveassignguild());
    }
    if (from.has_m_changename()) {
      set_m_changename(from.m_changename());
    }
  }
  if (from._has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    if (from.has_m_recruitchat()) {
      set_m_recruitchat(from.m_recruitchat());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_GuildPosition::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_GuildPosition::CopyFrom(const E_GuildPosition& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_GuildPosition::IsInitialized() const {

  return true;
}

void E_GuildPosition::Swap(E_GuildPosition* other) {
  if (other != this) {
    std::swap(m_positionid_, other->m_positionid_);
    std::swap(m_admitnewcomer_, other->m_admitnewcomer_);
    std::swap(m_appointandremovevp_, other->m_appointandremovevp_);
    std::swap(m_appointandremoveelder_, other->m_appointandremoveelder_);
    std::swap(m_appointandremoveg_, other->m_appointandremoveg_);
    std::swap(m_appointandremoveelite_, other->m_appointandremoveelite_);
    std::swap(m_expelvp_, other->m_expelvp_);
    std::swap(m_expelelder_, other->m_expelelder_);
    std::swap(m_expelg_, other->m_expelg_);
    std::swap(m_expelmass_, other->m_expelmass_);
    std::swap(m_announcementediting_, other->m_announcementediting_);
    std::swap(m_rname_, other->m_rname_);
    std::swap(m_joincondition_, other->m_joincondition_);
    std::swap(m_guildactivity_, other->m_guildactivity_);
    std::swap(m_dissolveassignguild_, other->m_dissolveassignguild_);
    std::swap(m_changename_, other->m_changename_);
    std::swap(m_recruitchat_, other->m_recruitchat_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_GuildPosition::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_GuildPosition_descriptor_;
  metadata.reflection = E_GuildPosition_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_GuildPosition::kEGuildPositionListFieldNumber;
#endif  // !_MSC_VER

Sheet_GuildPosition::Sheet_GuildPosition()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_GuildPosition::InitAsDefaultInstance() {
}

Sheet_GuildPosition::Sheet_GuildPosition(const Sheet_GuildPosition& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_GuildPosition::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_GuildPosition::~Sheet_GuildPosition() {
  SharedDtor();
}

void Sheet_GuildPosition::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_GuildPosition::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_GuildPosition::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_GuildPosition_descriptor_;
}

const Sheet_GuildPosition& Sheet_GuildPosition::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_guild_2eproto();
  return *default_instance_;
}

Sheet_GuildPosition* Sheet_GuildPosition::default_instance_ = NULL;

Sheet_GuildPosition* Sheet_GuildPosition::New() const {
  return new Sheet_GuildPosition;
}

void Sheet_GuildPosition::Clear() {
  e_guildposition_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_GuildPosition::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.E_GuildPosition E_GuildPosition_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_E_GuildPosition_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_e_guildposition_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_E_GuildPosition_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_GuildPosition::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.E_GuildPosition E_GuildPosition_List = 1;
  for (int i = 0; i < this->e_guildposition_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->e_guildposition_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_GuildPosition::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.E_GuildPosition E_GuildPosition_List = 1;
  for (int i = 0; i < this->e_guildposition_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->e_guildposition_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_GuildPosition::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.E_GuildPosition E_GuildPosition_List = 1;
  total_size += 1 * this->e_guildposition_list_size();
  for (int i = 0; i < this->e_guildposition_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->e_guildposition_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_GuildPosition::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_GuildPosition* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_GuildPosition*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_GuildPosition::MergeFrom(const Sheet_GuildPosition& from) {
  GOOGLE_CHECK_NE(&from, this);
  e_guildposition_list_.MergeFrom(from.e_guildposition_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_GuildPosition::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_GuildPosition::CopyFrom(const Sheet_GuildPosition& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_GuildPosition::IsInitialized() const {

  return true;
}

void Sheet_GuildPosition::Swap(Sheet_GuildPosition* other) {
  if (other != this) {
    e_guildposition_list_.Swap(&other->e_guildposition_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_GuildPosition::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_GuildPosition_descriptor_;
  metadata.reflection = Sheet_GuildPosition_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto_ff

// @@protoc_insertion_point(global_scope)
