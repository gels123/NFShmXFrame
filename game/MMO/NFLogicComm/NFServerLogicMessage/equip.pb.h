// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: equip.proto

#ifndef PROTOBUF_equip_2eproto__INCLUDED
#define PROTOBUF_equip_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "yd_fieldoptions.pb.h"
// @@protoc_insertion_point(includes)

namespace proto_ff {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_equip_2eproto();
void protobuf_AssignDesc_equip_2eproto();
void protobuf_ShutdownFile_equip_2eproto();

class E_EquipEquipAttributeDesc;
class E_EquipEquipGodattributeDesc;
class E_EquipEquip;
class Sheet_EquipEquip;
class E_EquipStrongTypeDesc;
class E_EquipStrong;
class Sheet_EquipStrong;
class E_EquipStrongexp;
class Sheet_EquipStrongexp;
class E_EquipStrongtotalAttributeDesc;
class E_EquipStrongtotal;
class Sheet_EquipStrongtotal;
class E_EquipGem;
class Sheet_EquipGem;
class E_EquipStoveattAttributeDesc;
class E_EquipStoveatt;
class Sheet_EquipStoveatt;
class E_EquipStoveexp;
class Sheet_EquipStoveexp;
class E_EquipGrade;
class Sheet_EquipGrade;

// ===================================================================

class E_EquipEquipAttributeDesc : public ::google::protobuf::Message {
 public:
  E_EquipEquipAttributeDesc();
  virtual ~E_EquipEquipAttributeDesc();

  E_EquipEquipAttributeDesc(const E_EquipEquipAttributeDesc& from);

  inline E_EquipEquipAttributeDesc& operator=(const E_EquipEquipAttributeDesc& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_EquipEquipAttributeDesc& default_instance();

  void Swap(E_EquipEquipAttributeDesc* other);

  // implements Message ----------------------------------------------

  E_EquipEquipAttributeDesc* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_EquipEquipAttributeDesc& from);
  void MergeFrom(const E_EquipEquipAttributeDesc& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 m_valuemin = 1;
  inline bool has_m_valuemin() const;
  inline void clear_m_valuemin();
  static const int kMValueminFieldNumber = 1;
  inline ::google::protobuf::int32 m_valuemin() const;
  inline void set_m_valuemin(::google::protobuf::int32 value);

  // optional int32 m_type = 2;
  inline bool has_m_type() const;
  inline void clear_m_type();
  static const int kMTypeFieldNumber = 2;
  inline ::google::protobuf::int32 m_type() const;
  inline void set_m_type(::google::protobuf::int32 value);

  // optional int32 m_valuemax = 3;
  inline bool has_m_valuemax() const;
  inline void clear_m_valuemax();
  static const int kMValuemaxFieldNumber = 3;
  inline ::google::protobuf::int32 m_valuemax() const;
  inline void set_m_valuemax(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.E_EquipEquipAttributeDesc)
 private:
  inline void set_has_m_valuemin();
  inline void clear_has_m_valuemin();
  inline void set_has_m_type();
  inline void clear_has_m_type();
  inline void set_has_m_valuemax();
  inline void clear_has_m_valuemax();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_valuemin_;
  ::google::protobuf::int32 m_type_;
  ::google::protobuf::int32 m_valuemax_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_equip_2eproto();
  friend void protobuf_AssignDesc_equip_2eproto();
  friend void protobuf_ShutdownFile_equip_2eproto();

  void InitAsDefaultInstance();
  static E_EquipEquipAttributeDesc* default_instance_;
};
// -------------------------------------------------------------------

class E_EquipEquipGodattributeDesc : public ::google::protobuf::Message {
 public:
  E_EquipEquipGodattributeDesc();
  virtual ~E_EquipEquipGodattributeDesc();

  E_EquipEquipGodattributeDesc(const E_EquipEquipGodattributeDesc& from);

  inline E_EquipEquipGodattributeDesc& operator=(const E_EquipEquipGodattributeDesc& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_EquipEquipGodattributeDesc& default_instance();

  void Swap(E_EquipEquipGodattributeDesc* other);

  // implements Message ----------------------------------------------

  E_EquipEquipGodattributeDesc* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_EquipEquipGodattributeDesc& from);
  void MergeFrom(const E_EquipEquipGodattributeDesc& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 m_valuemin = 1;
  inline bool has_m_valuemin() const;
  inline void clear_m_valuemin();
  static const int kMValueminFieldNumber = 1;
  inline ::google::protobuf::int32 m_valuemin() const;
  inline void set_m_valuemin(::google::protobuf::int32 value);

  // optional int32 m_type = 2;
  inline bool has_m_type() const;
  inline void clear_m_type();
  static const int kMTypeFieldNumber = 2;
  inline ::google::protobuf::int32 m_type() const;
  inline void set_m_type(::google::protobuf::int32 value);

  // optional int32 m_valuemax = 3;
  inline bool has_m_valuemax() const;
  inline void clear_m_valuemax();
  static const int kMValuemaxFieldNumber = 3;
  inline ::google::protobuf::int32 m_valuemax() const;
  inline void set_m_valuemax(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.E_EquipEquipGodattributeDesc)
 private:
  inline void set_has_m_valuemin();
  inline void clear_has_m_valuemin();
  inline void set_has_m_type();
  inline void clear_has_m_type();
  inline void set_has_m_valuemax();
  inline void clear_has_m_valuemax();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_valuemin_;
  ::google::protobuf::int32 m_type_;
  ::google::protobuf::int32 m_valuemax_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_equip_2eproto();
  friend void protobuf_AssignDesc_equip_2eproto();
  friend void protobuf_ShutdownFile_equip_2eproto();

  void InitAsDefaultInstance();
  static E_EquipEquipGodattributeDesc* default_instance_;
};
// -------------------------------------------------------------------

class E_EquipEquip : public ::google::protobuf::Message {
 public:
  E_EquipEquip();
  virtual ~E_EquipEquip();

  E_EquipEquip(const E_EquipEquip& from);

  inline E_EquipEquip& operator=(const E_EquipEquip& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_EquipEquip& default_instance();

  void Swap(E_EquipEquip* other);

  // implements Message ----------------------------------------------

  E_EquipEquip* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_EquipEquip& from);
  void MergeFrom(const E_EquipEquip& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 m_id = 1;
  inline bool has_m_id() const;
  inline void clear_m_id();
  static const int kMIdFieldNumber = 1;
  inline ::google::protobuf::int64 m_id() const;
  inline void set_m_id(::google::protobuf::int64 value);

  // optional string m_name = 2;
  inline bool has_m_name() const;
  inline void clear_m_name();
  static const int kMNameFieldNumber = 2;
  inline const ::std::string& m_name() const;
  inline void set_m_name(const ::std::string& value);
  inline void set_m_name(const char* value);
  inline void set_m_name(const char* value, size_t size);
  inline ::std::string* mutable_m_name();
  inline ::std::string* release_m_name();
  inline void set_allocated_m_name(::std::string* m_name);

  // optional int32 m_wearquality = 3;
  inline bool has_m_wearquality() const;
  inline void clear_m_wearquality();
  static const int kMWearqualityFieldNumber = 3;
  inline ::google::protobuf::int32 m_wearquality() const;
  inline void set_m_wearquality(::google::protobuf::int32 value);

  // optional int32 m_position = 4;
  inline bool has_m_position() const;
  inline void clear_m_position();
  static const int kMPositionFieldNumber = 4;
  inline ::google::protobuf::int32 m_position() const;
  inline void set_m_position(::google::protobuf::int32 value);

  // optional string m_profession = 5;
  inline bool has_m_profession() const;
  inline void clear_m_profession();
  static const int kMProfessionFieldNumber = 5;
  inline const ::std::string& m_profession() const;
  inline void set_m_profession(const ::std::string& value);
  inline void set_m_profession(const char* value);
  inline void set_m_profession(const char* value, size_t size);
  inline ::std::string* mutable_m_profession();
  inline ::std::string* release_m_profession();
  inline void set_allocated_m_profession(::std::string* m_profession);

  // optional int32 m_professionlv = 6;
  inline bool has_m_professionlv() const;
  inline void clear_m_professionlv();
  static const int kMProfessionlvFieldNumber = 6;
  inline ::google::protobuf::int32 m_professionlv() const;
  inline void set_m_professionlv(::google::protobuf::int32 value);

  // optional int32 m_level = 7;
  inline bool has_m_level() const;
  inline void clear_m_level();
  static const int kMLevelFieldNumber = 7;
  inline ::google::protobuf::int32 m_level() const;
  inline void set_m_level(::google::protobuf::int32 value);

  // optional int32 m_quality = 8;
  inline bool has_m_quality() const;
  inline void clear_m_quality();
  static const int kMQualityFieldNumber = 8;
  inline ::google::protobuf::int32 m_quality() const;
  inline void set_m_quality(::google::protobuf::int32 value);

  // optional int32 m_star = 9;
  inline bool has_m_star() const;
  inline void clear_m_star();
  static const int kMStarFieldNumber = 9;
  inline ::google::protobuf::int32 m_star() const;
  inline void set_m_star(::google::protobuf::int32 value);

  // optional int32 m_refineattributedown = 10;
  inline bool has_m_refineattributedown() const;
  inline void clear_m_refineattributedown();
  static const int kMRefineattributedownFieldNumber = 10;
  inline ::google::protobuf::int32 m_refineattributedown() const;
  inline void set_m_refineattributedown(::google::protobuf::int32 value);

  // optional int32 m_refineattributeup = 11;
  inline bool has_m_refineattributeup() const;
  inline void clear_m_refineattributeup();
  static const int kMRefineattributeupFieldNumber = 11;
  inline ::google::protobuf::int32 m_refineattributeup() const;
  inline void set_m_refineattributeup(::google::protobuf::int32 value);

  // optional string m_refineattribute_typelibrary = 12;
  inline bool has_m_refineattribute_typelibrary() const;
  inline void clear_m_refineattribute_typelibrary();
  static const int kMRefineattributeTypelibraryFieldNumber = 12;
  inline const ::std::string& m_refineattribute_typelibrary() const;
  inline void set_m_refineattribute_typelibrary(const ::std::string& value);
  inline void set_m_refineattribute_typelibrary(const char* value);
  inline void set_m_refineattribute_typelibrary(const char* value, size_t size);
  inline ::std::string* mutable_m_refineattribute_typelibrary();
  inline ::std::string* release_m_refineattribute_typelibrary();
  inline void set_allocated_m_refineattribute_typelibrary(::std::string* m_refineattribute_typelibrary);

  // optional string m_refineattribute_valuemin = 13;
  inline bool has_m_refineattribute_valuemin() const;
  inline void clear_m_refineattribute_valuemin();
  static const int kMRefineattributeValueminFieldNumber = 13;
  inline const ::std::string& m_refineattribute_valuemin() const;
  inline void set_m_refineattribute_valuemin(const ::std::string& value);
  inline void set_m_refineattribute_valuemin(const char* value);
  inline void set_m_refineattribute_valuemin(const char* value, size_t size);
  inline ::std::string* mutable_m_refineattribute_valuemin();
  inline ::std::string* release_m_refineattribute_valuemin();
  inline void set_allocated_m_refineattribute_valuemin(::std::string* m_refineattribute_valuemin);

  // optional string m_refineattribute_valuemax = 14;
  inline bool has_m_refineattribute_valuemax() const;
  inline void clear_m_refineattribute_valuemax();
  static const int kMRefineattributeValuemaxFieldNumber = 14;
  inline const ::std::string& m_refineattribute_valuemax() const;
  inline void set_m_refineattribute_valuemax(const ::std::string& value);
  inline void set_m_refineattribute_valuemax(const char* value);
  inline void set_m_refineattribute_valuemax(const char* value, size_t size);
  inline ::std::string* mutable_m_refineattribute_valuemax();
  inline ::std::string* release_m_refineattribute_valuemax();
  inline void set_allocated_m_refineattribute_valuemax(::std::string* m_refineattribute_valuemax);

  // optional int32 m_bluestarnum = 15;
  inline bool has_m_bluestarnum() const;
  inline void clear_m_bluestarnum();
  static const int kMBluestarnumFieldNumber = 15;
  inline ::google::protobuf::int32 m_bluestarnum() const;
  inline void set_m_bluestarnum(::google::protobuf::int32 value);

  // optional string m_bluestar_type = 16;
  inline bool has_m_bluestar_type() const;
  inline void clear_m_bluestar_type();
  static const int kMBluestarTypeFieldNumber = 16;
  inline const ::std::string& m_bluestar_type() const;
  inline void set_m_bluestar_type(const ::std::string& value);
  inline void set_m_bluestar_type(const char* value);
  inline void set_m_bluestar_type(const char* value, size_t size);
  inline ::std::string* mutable_m_bluestar_type();
  inline ::std::string* release_m_bluestar_type();
  inline void set_allocated_m_bluestar_type(::std::string* m_bluestar_type);

  // optional string m_bluestar_lv = 17;
  inline bool has_m_bluestar_lv() const;
  inline void clear_m_bluestar_lv();
  static const int kMBluestarLvFieldNumber = 17;
  inline const ::std::string& m_bluestar_lv() const;
  inline void set_m_bluestar_lv(const ::std::string& value);
  inline void set_m_bluestar_lv(const char* value);
  inline void set_m_bluestar_lv(const char* value, size_t size);
  inline ::std::string* mutable_m_bluestar_lv();
  inline ::std::string* release_m_bluestar_lv();
  inline void set_allocated_m_bluestar_lv(::std::string* m_bluestar_lv);

  // optional string m_bluestar_number = 18;
  inline bool has_m_bluestar_number() const;
  inline void clear_m_bluestar_number();
  static const int kMBluestarNumberFieldNumber = 18;
  inline const ::std::string& m_bluestar_number() const;
  inline void set_m_bluestar_number(const ::std::string& value);
  inline void set_m_bluestar_number(const char* value);
  inline void set_m_bluestar_number(const char* value, size_t size);
  inline ::std::string* mutable_m_bluestar_number();
  inline ::std::string* release_m_bluestar_number();
  inline void set_allocated_m_bluestar_number(::std::string* m_bluestar_number);

  // optional int32 m_iscanbind = 19;
  inline bool has_m_iscanbind() const;
  inline void clear_m_iscanbind();
  static const int kMIscanbindFieldNumber = 19;
  inline ::google::protobuf::int32 m_iscanbind() const;
  inline void set_m_iscanbind(::google::protobuf::int32 value);

  // optional int32 m_istradebind = 20;
  inline bool has_m_istradebind() const;
  inline void clear_m_istradebind();
  static const int kMIstradebindFieldNumber = 20;
  inline ::google::protobuf::int32 m_istradebind() const;
  inline void set_m_istradebind(::google::protobuf::int32 value);

  // optional int32 m_sellprice = 21;
  inline bool has_m_sellprice() const;
  inline void clear_m_sellprice();
  static const int kMSellpriceFieldNumber = 21;
  inline ::google::protobuf::int32 m_sellprice() const;
  inline void set_m_sellprice(::google::protobuf::int32 value);

  // optional string m_icon = 22;
  inline bool has_m_icon() const;
  inline void clear_m_icon();
  static const int kMIconFieldNumber = 22;
  inline const ::std::string& m_icon() const;
  inline void set_m_icon(const ::std::string& value);
  inline void set_m_icon(const char* value);
  inline void set_m_icon(const char* value, size_t size);
  inline ::std::string* mutable_m_icon();
  inline ::std::string* release_m_icon();
  inline void set_allocated_m_icon(::std::string* m_icon);

  // optional int32 m_time = 23;
  inline bool has_m_time() const;
  inline void clear_m_time();
  static const int kMTimeFieldNumber = 23;
  inline ::google::protobuf::int32 m_time() const;
  inline void set_m_time(::google::protobuf::int32 value);

  // optional int32 m_broadcast = 24;
  inline bool has_m_broadcast() const;
  inline void clear_m_broadcast();
  static const int kMBroadcastFieldNumber = 24;
  inline ::google::protobuf::int32 m_broadcast() const;
  inline void set_m_broadcast(::google::protobuf::int32 value);

  // optional string m_meltingresult = 25;
  inline bool has_m_meltingresult() const;
  inline void clear_m_meltingresult();
  static const int kMMeltingresultFieldNumber = 25;
  inline const ::std::string& m_meltingresult() const;
  inline void set_m_meltingresult(const ::std::string& value);
  inline void set_m_meltingresult(const char* value);
  inline void set_m_meltingresult(const char* value, size_t size);
  inline ::std::string* mutable_m_meltingresult();
  inline ::std::string* release_m_meltingresult();
  inline void set_allocated_m_meltingresult(::std::string* m_meltingresult);

  // optional int32 m_specialattributedown = 26;
  inline bool has_m_specialattributedown() const;
  inline void clear_m_specialattributedown();
  static const int kMSpecialattributedownFieldNumber = 26;
  inline ::google::protobuf::int32 m_specialattributedown() const;
  inline void set_m_specialattributedown(::google::protobuf::int32 value);

  // optional int32 m_specialattributeup = 27;
  inline bool has_m_specialattributeup() const;
  inline void clear_m_specialattributeup();
  static const int kMSpecialattributeupFieldNumber = 27;
  inline ::google::protobuf::int32 m_specialattributeup() const;
  inline void set_m_specialattributeup(::google::protobuf::int32 value);

  // optional string m_specialattribute_typelibrary = 28;
  inline bool has_m_specialattribute_typelibrary() const;
  inline void clear_m_specialattribute_typelibrary();
  static const int kMSpecialattributeTypelibraryFieldNumber = 28;
  inline const ::std::string& m_specialattribute_typelibrary() const;
  inline void set_m_specialattribute_typelibrary(const ::std::string& value);
  inline void set_m_specialattribute_typelibrary(const char* value);
  inline void set_m_specialattribute_typelibrary(const char* value, size_t size);
  inline ::std::string* mutable_m_specialattribute_typelibrary();
  inline ::std::string* release_m_specialattribute_typelibrary();
  inline void set_allocated_m_specialattribute_typelibrary(::std::string* m_specialattribute_typelibrary);

  // optional string m_specialattribute_valuemin = 29;
  inline bool has_m_specialattribute_valuemin() const;
  inline void clear_m_specialattribute_valuemin();
  static const int kMSpecialattributeValueminFieldNumber = 29;
  inline const ::std::string& m_specialattribute_valuemin() const;
  inline void set_m_specialattribute_valuemin(const ::std::string& value);
  inline void set_m_specialattribute_valuemin(const char* value);
  inline void set_m_specialattribute_valuemin(const char* value, size_t size);
  inline ::std::string* mutable_m_specialattribute_valuemin();
  inline ::std::string* release_m_specialattribute_valuemin();
  inline void set_allocated_m_specialattribute_valuemin(::std::string* m_specialattribute_valuemin);

  // optional string m_specialattribute_valuemax = 30;
  inline bool has_m_specialattribute_valuemax() const;
  inline void clear_m_specialattribute_valuemax();
  static const int kMSpecialattributeValuemaxFieldNumber = 30;
  inline const ::std::string& m_specialattribute_valuemax() const;
  inline void set_m_specialattribute_valuemax(const ::std::string& value);
  inline void set_m_specialattribute_valuemax(const char* value);
  inline void set_m_specialattribute_valuemax(const char* value, size_t size);
  inline ::std::string* mutable_m_specialattribute_valuemax();
  inline ::std::string* release_m_specialattribute_valuemax();
  inline void set_allocated_m_specialattribute_valuemax(::std::string* m_specialattribute_valuemax);

  // optional string m_skillid = 31;
  inline bool has_m_skillid() const;
  inline void clear_m_skillid();
  static const int kMSkillidFieldNumber = 31;
  inline const ::std::string& m_skillid() const;
  inline void set_m_skillid(const ::std::string& value);
  inline void set_m_skillid(const char* value);
  inline void set_m_skillid(const char* value, size_t size);
  inline ::std::string* mutable_m_skillid();
  inline ::std::string* release_m_skillid();
  inline void set_allocated_m_skillid(::std::string* m_skillid);

  // repeated .proto_ff.E_EquipEquipAttributeDesc m_attribute = 32;
  inline int m_attribute_size() const;
  inline void clear_m_attribute();
  static const int kMAttributeFieldNumber = 32;
  inline const ::proto_ff::E_EquipEquipAttributeDesc& m_attribute(int index) const;
  inline ::proto_ff::E_EquipEquipAttributeDesc* mutable_m_attribute(int index);
  inline ::proto_ff::E_EquipEquipAttributeDesc* add_m_attribute();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipEquipAttributeDesc >&
      m_attribute() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipEquipAttributeDesc >*
      mutable_m_attribute();

  // repeated .proto_ff.E_EquipEquipGodattributeDesc m_godattribute = 33;
  inline int m_godattribute_size() const;
  inline void clear_m_godattribute();
  static const int kMGodattributeFieldNumber = 33;
  inline const ::proto_ff::E_EquipEquipGodattributeDesc& m_godattribute(int index) const;
  inline ::proto_ff::E_EquipEquipGodattributeDesc* mutable_m_godattribute(int index);
  inline ::proto_ff::E_EquipEquipGodattributeDesc* add_m_godattribute();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipEquipGodattributeDesc >&
      m_godattribute() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipEquipGodattributeDesc >*
      mutable_m_godattribute();

  // @@protoc_insertion_point(class_scope:proto_ff.E_EquipEquip)
 private:
  inline void set_has_m_id();
  inline void clear_has_m_id();
  inline void set_has_m_name();
  inline void clear_has_m_name();
  inline void set_has_m_wearquality();
  inline void clear_has_m_wearquality();
  inline void set_has_m_position();
  inline void clear_has_m_position();
  inline void set_has_m_profession();
  inline void clear_has_m_profession();
  inline void set_has_m_professionlv();
  inline void clear_has_m_professionlv();
  inline void set_has_m_level();
  inline void clear_has_m_level();
  inline void set_has_m_quality();
  inline void clear_has_m_quality();
  inline void set_has_m_star();
  inline void clear_has_m_star();
  inline void set_has_m_refineattributedown();
  inline void clear_has_m_refineattributedown();
  inline void set_has_m_refineattributeup();
  inline void clear_has_m_refineattributeup();
  inline void set_has_m_refineattribute_typelibrary();
  inline void clear_has_m_refineattribute_typelibrary();
  inline void set_has_m_refineattribute_valuemin();
  inline void clear_has_m_refineattribute_valuemin();
  inline void set_has_m_refineattribute_valuemax();
  inline void clear_has_m_refineattribute_valuemax();
  inline void set_has_m_bluestarnum();
  inline void clear_has_m_bluestarnum();
  inline void set_has_m_bluestar_type();
  inline void clear_has_m_bluestar_type();
  inline void set_has_m_bluestar_lv();
  inline void clear_has_m_bluestar_lv();
  inline void set_has_m_bluestar_number();
  inline void clear_has_m_bluestar_number();
  inline void set_has_m_iscanbind();
  inline void clear_has_m_iscanbind();
  inline void set_has_m_istradebind();
  inline void clear_has_m_istradebind();
  inline void set_has_m_sellprice();
  inline void clear_has_m_sellprice();
  inline void set_has_m_icon();
  inline void clear_has_m_icon();
  inline void set_has_m_time();
  inline void clear_has_m_time();
  inline void set_has_m_broadcast();
  inline void clear_has_m_broadcast();
  inline void set_has_m_meltingresult();
  inline void clear_has_m_meltingresult();
  inline void set_has_m_specialattributedown();
  inline void clear_has_m_specialattributedown();
  inline void set_has_m_specialattributeup();
  inline void clear_has_m_specialattributeup();
  inline void set_has_m_specialattribute_typelibrary();
  inline void clear_has_m_specialattribute_typelibrary();
  inline void set_has_m_specialattribute_valuemin();
  inline void clear_has_m_specialattribute_valuemin();
  inline void set_has_m_specialattribute_valuemax();
  inline void clear_has_m_specialattribute_valuemax();
  inline void set_has_m_skillid();
  inline void clear_has_m_skillid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 m_id_;
  ::std::string* m_name_;
  ::google::protobuf::int32 m_wearquality_;
  ::google::protobuf::int32 m_position_;
  ::std::string* m_profession_;
  ::google::protobuf::int32 m_professionlv_;
  ::google::protobuf::int32 m_level_;
  ::google::protobuf::int32 m_quality_;
  ::google::protobuf::int32 m_star_;
  ::google::protobuf::int32 m_refineattributedown_;
  ::google::protobuf::int32 m_refineattributeup_;
  ::std::string* m_refineattribute_typelibrary_;
  ::std::string* m_refineattribute_valuemin_;
  ::std::string* m_refineattribute_valuemax_;
  ::std::string* m_bluestar_type_;
  ::std::string* m_bluestar_lv_;
  ::google::protobuf::int32 m_bluestarnum_;
  ::google::protobuf::int32 m_iscanbind_;
  ::std::string* m_bluestar_number_;
  ::google::protobuf::int32 m_istradebind_;
  ::google::protobuf::int32 m_sellprice_;
  ::std::string* m_icon_;
  ::google::protobuf::int32 m_time_;
  ::google::protobuf::int32 m_broadcast_;
  ::std::string* m_meltingresult_;
  ::google::protobuf::int32 m_specialattributedown_;
  ::google::protobuf::int32 m_specialattributeup_;
  ::std::string* m_specialattribute_typelibrary_;
  ::std::string* m_specialattribute_valuemin_;
  ::std::string* m_specialattribute_valuemax_;
  ::std::string* m_skillid_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipEquipAttributeDesc > m_attribute_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipEquipGodattributeDesc > m_godattribute_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(33 + 31) / 32];

  friend void  protobuf_AddDesc_equip_2eproto();
  friend void protobuf_AssignDesc_equip_2eproto();
  friend void protobuf_ShutdownFile_equip_2eproto();

  void InitAsDefaultInstance();
  static E_EquipEquip* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_EquipEquip : public ::google::protobuf::Message {
 public:
  Sheet_EquipEquip();
  virtual ~Sheet_EquipEquip();

  Sheet_EquipEquip(const Sheet_EquipEquip& from);

  inline Sheet_EquipEquip& operator=(const Sheet_EquipEquip& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_EquipEquip& default_instance();

  void Swap(Sheet_EquipEquip* other);

  // implements Message ----------------------------------------------

  Sheet_EquipEquip* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_EquipEquip& from);
  void MergeFrom(const Sheet_EquipEquip& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.E_EquipEquip E_EquipEquip_List = 1;
  inline int e_equipequip_list_size() const;
  inline void clear_e_equipequip_list();
  static const int kEEquipEquipListFieldNumber = 1;
  inline const ::proto_ff::E_EquipEquip& e_equipequip_list(int index) const;
  inline ::proto_ff::E_EquipEquip* mutable_e_equipequip_list(int index);
  inline ::proto_ff::E_EquipEquip* add_e_equipequip_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipEquip >&
      e_equipequip_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipEquip >*
      mutable_e_equipequip_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_EquipEquip)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipEquip > e_equipequip_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_equip_2eproto();
  friend void protobuf_AssignDesc_equip_2eproto();
  friend void protobuf_ShutdownFile_equip_2eproto();

  void InitAsDefaultInstance();
  static Sheet_EquipEquip* default_instance_;
};
// -------------------------------------------------------------------

class E_EquipStrongTypeDesc : public ::google::protobuf::Message {
 public:
  E_EquipStrongTypeDesc();
  virtual ~E_EquipStrongTypeDesc();

  E_EquipStrongTypeDesc(const E_EquipStrongTypeDesc& from);

  inline E_EquipStrongTypeDesc& operator=(const E_EquipStrongTypeDesc& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_EquipStrongTypeDesc& default_instance();

  void Swap(E_EquipStrongTypeDesc* other);

  // implements Message ----------------------------------------------

  E_EquipStrongTypeDesc* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_EquipStrongTypeDesc& from);
  void MergeFrom(const E_EquipStrongTypeDesc& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string m_num = 1;
  inline bool has_m_num() const;
  inline void clear_m_num();
  static const int kMNumFieldNumber = 1;
  inline const ::std::string& m_num() const;
  inline void set_m_num(const ::std::string& value);
  inline void set_m_num(const char* value);
  inline void set_m_num(const char* value, size_t size);
  inline ::std::string* mutable_m_num();
  inline ::std::string* release_m_num();
  inline void set_allocated_m_num(::std::string* m_num);

  // optional int32 m_id = 2;
  inline bool has_m_id() const;
  inline void clear_m_id();
  static const int kMIdFieldNumber = 2;
  inline ::google::protobuf::int32 m_id() const;
  inline void set_m_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.E_EquipStrongTypeDesc)
 private:
  inline void set_has_m_num();
  inline void clear_has_m_num();
  inline void set_has_m_id();
  inline void clear_has_m_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* m_num_;
  ::google::protobuf::int32 m_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_equip_2eproto();
  friend void protobuf_AssignDesc_equip_2eproto();
  friend void protobuf_ShutdownFile_equip_2eproto();

  void InitAsDefaultInstance();
  static E_EquipStrongTypeDesc* default_instance_;
};
// -------------------------------------------------------------------

class E_EquipStrong : public ::google::protobuf::Message {
 public:
  E_EquipStrong();
  virtual ~E_EquipStrong();

  E_EquipStrong(const E_EquipStrong& from);

  inline E_EquipStrong& operator=(const E_EquipStrong& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_EquipStrong& default_instance();

  void Swap(E_EquipStrong* other);

  // implements Message ----------------------------------------------

  E_EquipStrong* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_EquipStrong& from);
  void MergeFrom(const E_EquipStrong& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 m_id = 1;
  inline bool has_m_id() const;
  inline void clear_m_id();
  static const int kMIdFieldNumber = 1;
  inline ::google::protobuf::int64 m_id() const;
  inline void set_m_id(::google::protobuf::int64 value);

  // optional int32 m_position = 2;
  inline bool has_m_position() const;
  inline void clear_m_position();
  static const int kMPositionFieldNumber = 2;
  inline ::google::protobuf::int32 m_position() const;
  inline void set_m_position(::google::protobuf::int32 value);

  // optional int32 m_wearquality = 3;
  inline bool has_m_wearquality() const;
  inline void clear_m_wearquality();
  static const int kMWearqualityFieldNumber = 3;
  inline ::google::protobuf::int32 m_wearquality() const;
  inline void set_m_wearquality(::google::protobuf::int32 value);

  // optional int32 m_srtongup = 4;
  inline bool has_m_srtongup() const;
  inline void clear_m_srtongup();
  static const int kMSrtongupFieldNumber = 4;
  inline ::google::protobuf::int32 m_srtongup() const;
  inline void set_m_srtongup(::google::protobuf::int32 value);

  // repeated .proto_ff.E_EquipStrongTypeDesc m_type = 5;
  inline int m_type_size() const;
  inline void clear_m_type();
  static const int kMTypeFieldNumber = 5;
  inline const ::proto_ff::E_EquipStrongTypeDesc& m_type(int index) const;
  inline ::proto_ff::E_EquipStrongTypeDesc* mutable_m_type(int index);
  inline ::proto_ff::E_EquipStrongTypeDesc* add_m_type();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipStrongTypeDesc >&
      m_type() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipStrongTypeDesc >*
      mutable_m_type();

  // @@protoc_insertion_point(class_scope:proto_ff.E_EquipStrong)
 private:
  inline void set_has_m_id();
  inline void clear_has_m_id();
  inline void set_has_m_position();
  inline void clear_has_m_position();
  inline void set_has_m_wearquality();
  inline void clear_has_m_wearquality();
  inline void set_has_m_srtongup();
  inline void clear_has_m_srtongup();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 m_id_;
  ::google::protobuf::int32 m_position_;
  ::google::protobuf::int32 m_wearquality_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipStrongTypeDesc > m_type_;
  ::google::protobuf::int32 m_srtongup_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_equip_2eproto();
  friend void protobuf_AssignDesc_equip_2eproto();
  friend void protobuf_ShutdownFile_equip_2eproto();

  void InitAsDefaultInstance();
  static E_EquipStrong* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_EquipStrong : public ::google::protobuf::Message {
 public:
  Sheet_EquipStrong();
  virtual ~Sheet_EquipStrong();

  Sheet_EquipStrong(const Sheet_EquipStrong& from);

  inline Sheet_EquipStrong& operator=(const Sheet_EquipStrong& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_EquipStrong& default_instance();

  void Swap(Sheet_EquipStrong* other);

  // implements Message ----------------------------------------------

  Sheet_EquipStrong* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_EquipStrong& from);
  void MergeFrom(const Sheet_EquipStrong& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.E_EquipStrong E_EquipStrong_List = 1;
  inline int e_equipstrong_list_size() const;
  inline void clear_e_equipstrong_list();
  static const int kEEquipStrongListFieldNumber = 1;
  inline const ::proto_ff::E_EquipStrong& e_equipstrong_list(int index) const;
  inline ::proto_ff::E_EquipStrong* mutable_e_equipstrong_list(int index);
  inline ::proto_ff::E_EquipStrong* add_e_equipstrong_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipStrong >&
      e_equipstrong_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipStrong >*
      mutable_e_equipstrong_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_EquipStrong)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipStrong > e_equipstrong_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_equip_2eproto();
  friend void protobuf_AssignDesc_equip_2eproto();
  friend void protobuf_ShutdownFile_equip_2eproto();

  void InitAsDefaultInstance();
  static Sheet_EquipStrong* default_instance_;
};
// -------------------------------------------------------------------

class E_EquipStrongexp : public ::google::protobuf::Message {
 public:
  E_EquipStrongexp();
  virtual ~E_EquipStrongexp();

  E_EquipStrongexp(const E_EquipStrongexp& from);

  inline E_EquipStrongexp& operator=(const E_EquipStrongexp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_EquipStrongexp& default_instance();

  void Swap(E_EquipStrongexp* other);

  // implements Message ----------------------------------------------

  E_EquipStrongexp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_EquipStrongexp& from);
  void MergeFrom(const E_EquipStrongexp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 m_lv = 1;
  inline bool has_m_lv() const;
  inline void clear_m_lv();
  static const int kMLvFieldNumber = 1;
  inline ::google::protobuf::int32 m_lv() const;
  inline void set_m_lv(::google::protobuf::int32 value);

  // optional int32 m_gold = 2;
  inline bool has_m_gold() const;
  inline void clear_m_gold();
  static const int kMGoldFieldNumber = 2;
  inline ::google::protobuf::int32 m_gold() const;
  inline void set_m_gold(::google::protobuf::int32 value);

  // repeated int32 m_costitem = 3;
  inline int m_costitem_size() const;
  inline void clear_m_costitem();
  static const int kMCostitemFieldNumber = 3;
  inline ::google::protobuf::int32 m_costitem(int index) const;
  inline void set_m_costitem(int index, ::google::protobuf::int32 value);
  inline void add_m_costitem(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      m_costitem() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_m_costitem();

  // repeated string m_positiontype = 4;
  inline int m_positiontype_size() const;
  inline void clear_m_positiontype();
  static const int kMPositiontypeFieldNumber = 4;
  inline const ::std::string& m_positiontype(int index) const;
  inline ::std::string* mutable_m_positiontype(int index);
  inline void set_m_positiontype(int index, const ::std::string& value);
  inline void set_m_positiontype(int index, const char* value);
  inline void set_m_positiontype(int index, const char* value, size_t size);
  inline ::std::string* add_m_positiontype();
  inline void add_m_positiontype(const ::std::string& value);
  inline void add_m_positiontype(const char* value);
  inline void add_m_positiontype(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& m_positiontype() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_m_positiontype();

  // repeated int32 m_costnum = 5;
  inline int m_costnum_size() const;
  inline void clear_m_costnum();
  static const int kMCostnumFieldNumber = 5;
  inline ::google::protobuf::int32 m_costnum(int index) const;
  inline void set_m_costnum(int index, ::google::protobuf::int32 value);
  inline void add_m_costnum(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      m_costnum() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_m_costnum();

  // @@protoc_insertion_point(class_scope:proto_ff.E_EquipStrongexp)
 private:
  inline void set_has_m_lv();
  inline void clear_has_m_lv();
  inline void set_has_m_gold();
  inline void clear_has_m_gold();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_lv_;
  ::google::protobuf::int32 m_gold_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > m_costitem_;
  ::google::protobuf::RepeatedPtrField< ::std::string> m_positiontype_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > m_costnum_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_equip_2eproto();
  friend void protobuf_AssignDesc_equip_2eproto();
  friend void protobuf_ShutdownFile_equip_2eproto();

  void InitAsDefaultInstance();
  static E_EquipStrongexp* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_EquipStrongexp : public ::google::protobuf::Message {
 public:
  Sheet_EquipStrongexp();
  virtual ~Sheet_EquipStrongexp();

  Sheet_EquipStrongexp(const Sheet_EquipStrongexp& from);

  inline Sheet_EquipStrongexp& operator=(const Sheet_EquipStrongexp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_EquipStrongexp& default_instance();

  void Swap(Sheet_EquipStrongexp* other);

  // implements Message ----------------------------------------------

  Sheet_EquipStrongexp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_EquipStrongexp& from);
  void MergeFrom(const Sheet_EquipStrongexp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.E_EquipStrongexp E_EquipStrongexp_List = 1;
  inline int e_equipstrongexp_list_size() const;
  inline void clear_e_equipstrongexp_list();
  static const int kEEquipStrongexpListFieldNumber = 1;
  inline const ::proto_ff::E_EquipStrongexp& e_equipstrongexp_list(int index) const;
  inline ::proto_ff::E_EquipStrongexp* mutable_e_equipstrongexp_list(int index);
  inline ::proto_ff::E_EquipStrongexp* add_e_equipstrongexp_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipStrongexp >&
      e_equipstrongexp_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipStrongexp >*
      mutable_e_equipstrongexp_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_EquipStrongexp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipStrongexp > e_equipstrongexp_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_equip_2eproto();
  friend void protobuf_AssignDesc_equip_2eproto();
  friend void protobuf_ShutdownFile_equip_2eproto();

  void InitAsDefaultInstance();
  static Sheet_EquipStrongexp* default_instance_;
};
// -------------------------------------------------------------------

class E_EquipStrongtotalAttributeDesc : public ::google::protobuf::Message {
 public:
  E_EquipStrongtotalAttributeDesc();
  virtual ~E_EquipStrongtotalAttributeDesc();

  E_EquipStrongtotalAttributeDesc(const E_EquipStrongtotalAttributeDesc& from);

  inline E_EquipStrongtotalAttributeDesc& operator=(const E_EquipStrongtotalAttributeDesc& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_EquipStrongtotalAttributeDesc& default_instance();

  void Swap(E_EquipStrongtotalAttributeDesc* other);

  // implements Message ----------------------------------------------

  E_EquipStrongtotalAttributeDesc* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_EquipStrongtotalAttributeDesc& from);
  void MergeFrom(const E_EquipStrongtotalAttributeDesc& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 m_type = 1;
  inline bool has_m_type() const;
  inline void clear_m_type();
  static const int kMTypeFieldNumber = 1;
  inline ::google::protobuf::int32 m_type() const;
  inline void set_m_type(::google::protobuf::int32 value);

  // optional int32 m_value = 2;
  inline bool has_m_value() const;
  inline void clear_m_value();
  static const int kMValueFieldNumber = 2;
  inline ::google::protobuf::int32 m_value() const;
  inline void set_m_value(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.E_EquipStrongtotalAttributeDesc)
 private:
  inline void set_has_m_type();
  inline void clear_has_m_type();
  inline void set_has_m_value();
  inline void clear_has_m_value();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_type_;
  ::google::protobuf::int32 m_value_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_equip_2eproto();
  friend void protobuf_AssignDesc_equip_2eproto();
  friend void protobuf_ShutdownFile_equip_2eproto();

  void InitAsDefaultInstance();
  static E_EquipStrongtotalAttributeDesc* default_instance_;
};
// -------------------------------------------------------------------

class E_EquipStrongtotal : public ::google::protobuf::Message {
 public:
  E_EquipStrongtotal();
  virtual ~E_EquipStrongtotal();

  E_EquipStrongtotal(const E_EquipStrongtotal& from);

  inline E_EquipStrongtotal& operator=(const E_EquipStrongtotal& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_EquipStrongtotal& default_instance();

  void Swap(E_EquipStrongtotal* other);

  // implements Message ----------------------------------------------

  E_EquipStrongtotal* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_EquipStrongtotal& from);
  void MergeFrom(const E_EquipStrongtotal& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 m_id = 1;
  inline bool has_m_id() const;
  inline void clear_m_id();
  static const int kMIdFieldNumber = 1;
  inline ::google::protobuf::int64 m_id() const;
  inline void set_m_id(::google::protobuf::int64 value);

  // optional int32 m_idtype = 2;
  inline bool has_m_idtype() const;
  inline void clear_m_idtype();
  static const int kMIdtypeFieldNumber = 2;
  inline ::google::protobuf::int32 m_idtype() const;
  inline void set_m_idtype(::google::protobuf::int32 value);

  // optional int32 m_idnum = 3;
  inline bool has_m_idnum() const;
  inline void clear_m_idnum();
  static const int kMIdnumFieldNumber = 3;
  inline ::google::protobuf::int32 m_idnum() const;
  inline void set_m_idnum(::google::protobuf::int32 value);

  // repeated .proto_ff.E_EquipStrongtotalAttributeDesc m_attribute = 4;
  inline int m_attribute_size() const;
  inline void clear_m_attribute();
  static const int kMAttributeFieldNumber = 4;
  inline const ::proto_ff::E_EquipStrongtotalAttributeDesc& m_attribute(int index) const;
  inline ::proto_ff::E_EquipStrongtotalAttributeDesc* mutable_m_attribute(int index);
  inline ::proto_ff::E_EquipStrongtotalAttributeDesc* add_m_attribute();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipStrongtotalAttributeDesc >&
      m_attribute() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipStrongtotalAttributeDesc >*
      mutable_m_attribute();

  // @@protoc_insertion_point(class_scope:proto_ff.E_EquipStrongtotal)
 private:
  inline void set_has_m_id();
  inline void clear_has_m_id();
  inline void set_has_m_idtype();
  inline void clear_has_m_idtype();
  inline void set_has_m_idnum();
  inline void clear_has_m_idnum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 m_id_;
  ::google::protobuf::int32 m_idtype_;
  ::google::protobuf::int32 m_idnum_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipStrongtotalAttributeDesc > m_attribute_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_equip_2eproto();
  friend void protobuf_AssignDesc_equip_2eproto();
  friend void protobuf_ShutdownFile_equip_2eproto();

  void InitAsDefaultInstance();
  static E_EquipStrongtotal* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_EquipStrongtotal : public ::google::protobuf::Message {
 public:
  Sheet_EquipStrongtotal();
  virtual ~Sheet_EquipStrongtotal();

  Sheet_EquipStrongtotal(const Sheet_EquipStrongtotal& from);

  inline Sheet_EquipStrongtotal& operator=(const Sheet_EquipStrongtotal& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_EquipStrongtotal& default_instance();

  void Swap(Sheet_EquipStrongtotal* other);

  // implements Message ----------------------------------------------

  Sheet_EquipStrongtotal* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_EquipStrongtotal& from);
  void MergeFrom(const Sheet_EquipStrongtotal& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.E_EquipStrongtotal E_EquipStrongtotal_List = 1;
  inline int e_equipstrongtotal_list_size() const;
  inline void clear_e_equipstrongtotal_list();
  static const int kEEquipStrongtotalListFieldNumber = 1;
  inline const ::proto_ff::E_EquipStrongtotal& e_equipstrongtotal_list(int index) const;
  inline ::proto_ff::E_EquipStrongtotal* mutable_e_equipstrongtotal_list(int index);
  inline ::proto_ff::E_EquipStrongtotal* add_e_equipstrongtotal_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipStrongtotal >&
      e_equipstrongtotal_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipStrongtotal >*
      mutable_e_equipstrongtotal_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_EquipStrongtotal)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipStrongtotal > e_equipstrongtotal_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_equip_2eproto();
  friend void protobuf_AssignDesc_equip_2eproto();
  friend void protobuf_ShutdownFile_equip_2eproto();

  void InitAsDefaultInstance();
  static Sheet_EquipStrongtotal* default_instance_;
};
// -------------------------------------------------------------------

class E_EquipGem : public ::google::protobuf::Message {
 public:
  E_EquipGem();
  virtual ~E_EquipGem();

  E_EquipGem(const E_EquipGem& from);

  inline E_EquipGem& operator=(const E_EquipGem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_EquipGem& default_instance();

  void Swap(E_EquipGem* other);

  // implements Message ----------------------------------------------

  E_EquipGem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_EquipGem& from);
  void MergeFrom(const E_EquipGem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 m_position = 1;
  inline bool has_m_position() const;
  inline void clear_m_position();
  static const int kMPositionFieldNumber = 1;
  inline ::google::protobuf::int32 m_position() const;
  inline void set_m_position(::google::protobuf::int32 value);

  // optional string m_gemtype = 2;
  inline bool has_m_gemtype() const;
  inline void clear_m_gemtype();
  static const int kMGemtypeFieldNumber = 2;
  inline const ::std::string& m_gemtype() const;
  inline void set_m_gemtype(const ::std::string& value);
  inline void set_m_gemtype(const char* value);
  inline void set_m_gemtype(const char* value, size_t size);
  inline ::std::string* mutable_m_gemtype();
  inline ::std::string* release_m_gemtype();
  inline void set_allocated_m_gemtype(::std::string* m_gemtype);

  // optional int32 m_speciallygemtype = 3;
  inline bool has_m_speciallygemtype() const;
  inline void clear_m_speciallygemtype();
  static const int kMSpeciallygemtypeFieldNumber = 3;
  inline ::google::protobuf::int32 m_speciallygemtype() const;
  inline void set_m_speciallygemtype(::google::protobuf::int32 value);

  // optional int32 m_payunlockitem = 4;
  inline bool has_m_payunlockitem() const;
  inline void clear_m_payunlockitem();
  static const int kMPayunlockitemFieldNumber = 4;
  inline ::google::protobuf::int32 m_payunlockitem() const;
  inline void set_m_payunlockitem(::google::protobuf::int32 value);

  // optional int32 m_payunlocknnm = 5;
  inline bool has_m_payunlocknnm() const;
  inline void clear_m_payunlocknnm();
  static const int kMPayunlocknnmFieldNumber = 5;
  inline ::google::protobuf::int32 m_payunlocknnm() const;
  inline void set_m_payunlocknnm(::google::protobuf::int32 value);

  // repeated int32 m_gemunlock = 6;
  inline int m_gemunlock_size() const;
  inline void clear_m_gemunlock();
  static const int kMGemunlockFieldNumber = 6;
  inline ::google::protobuf::int32 m_gemunlock(int index) const;
  inline void set_m_gemunlock(int index, ::google::protobuf::int32 value);
  inline void add_m_gemunlock(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      m_gemunlock() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_m_gemunlock();

  // @@protoc_insertion_point(class_scope:proto_ff.E_EquipGem)
 private:
  inline void set_has_m_position();
  inline void clear_has_m_position();
  inline void set_has_m_gemtype();
  inline void clear_has_m_gemtype();
  inline void set_has_m_speciallygemtype();
  inline void clear_has_m_speciallygemtype();
  inline void set_has_m_payunlockitem();
  inline void clear_has_m_payunlockitem();
  inline void set_has_m_payunlocknnm();
  inline void clear_has_m_payunlocknnm();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* m_gemtype_;
  ::google::protobuf::int32 m_position_;
  ::google::protobuf::int32 m_speciallygemtype_;
  ::google::protobuf::int32 m_payunlockitem_;
  ::google::protobuf::int32 m_payunlocknnm_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > m_gemunlock_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_equip_2eproto();
  friend void protobuf_AssignDesc_equip_2eproto();
  friend void protobuf_ShutdownFile_equip_2eproto();

  void InitAsDefaultInstance();
  static E_EquipGem* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_EquipGem : public ::google::protobuf::Message {
 public:
  Sheet_EquipGem();
  virtual ~Sheet_EquipGem();

  Sheet_EquipGem(const Sheet_EquipGem& from);

  inline Sheet_EquipGem& operator=(const Sheet_EquipGem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_EquipGem& default_instance();

  void Swap(Sheet_EquipGem* other);

  // implements Message ----------------------------------------------

  Sheet_EquipGem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_EquipGem& from);
  void MergeFrom(const Sheet_EquipGem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.E_EquipGem E_EquipGem_List = 1;
  inline int e_equipgem_list_size() const;
  inline void clear_e_equipgem_list();
  static const int kEEquipGemListFieldNumber = 1;
  inline const ::proto_ff::E_EquipGem& e_equipgem_list(int index) const;
  inline ::proto_ff::E_EquipGem* mutable_e_equipgem_list(int index);
  inline ::proto_ff::E_EquipGem* add_e_equipgem_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipGem >&
      e_equipgem_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipGem >*
      mutable_e_equipgem_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_EquipGem)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipGem > e_equipgem_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_equip_2eproto();
  friend void protobuf_AssignDesc_equip_2eproto();
  friend void protobuf_ShutdownFile_equip_2eproto();

  void InitAsDefaultInstance();
  static Sheet_EquipGem* default_instance_;
};
// -------------------------------------------------------------------

class E_EquipStoveattAttributeDesc : public ::google::protobuf::Message {
 public:
  E_EquipStoveattAttributeDesc();
  virtual ~E_EquipStoveattAttributeDesc();

  E_EquipStoveattAttributeDesc(const E_EquipStoveattAttributeDesc& from);

  inline E_EquipStoveattAttributeDesc& operator=(const E_EquipStoveattAttributeDesc& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_EquipStoveattAttributeDesc& default_instance();

  void Swap(E_EquipStoveattAttributeDesc* other);

  // implements Message ----------------------------------------------

  E_EquipStoveattAttributeDesc* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_EquipStoveattAttributeDesc& from);
  void MergeFrom(const E_EquipStoveattAttributeDesc& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 m_type = 1;
  inline bool has_m_type() const;
  inline void clear_m_type();
  static const int kMTypeFieldNumber = 1;
  inline ::google::protobuf::int32 m_type() const;
  inline void set_m_type(::google::protobuf::int32 value);

  // optional int32 m_value = 2;
  inline bool has_m_value() const;
  inline void clear_m_value();
  static const int kMValueFieldNumber = 2;
  inline ::google::protobuf::int32 m_value() const;
  inline void set_m_value(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.E_EquipStoveattAttributeDesc)
 private:
  inline void set_has_m_type();
  inline void clear_has_m_type();
  inline void set_has_m_value();
  inline void clear_has_m_value();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_type_;
  ::google::protobuf::int32 m_value_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_equip_2eproto();
  friend void protobuf_AssignDesc_equip_2eproto();
  friend void protobuf_ShutdownFile_equip_2eproto();

  void InitAsDefaultInstance();
  static E_EquipStoveattAttributeDesc* default_instance_;
};
// -------------------------------------------------------------------

class E_EquipStoveatt : public ::google::protobuf::Message {
 public:
  E_EquipStoveatt();
  virtual ~E_EquipStoveatt();

  E_EquipStoveatt(const E_EquipStoveatt& from);

  inline E_EquipStoveatt& operator=(const E_EquipStoveatt& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_EquipStoveatt& default_instance();

  void Swap(E_EquipStoveatt* other);

  // implements Message ----------------------------------------------

  E_EquipStoveatt* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_EquipStoveatt& from);
  void MergeFrom(const E_EquipStoveatt& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 m_lv = 1;
  inline bool has_m_lv() const;
  inline void clear_m_lv();
  static const int kMLvFieldNumber = 1;
  inline ::google::protobuf::int32 m_lv() const;
  inline void set_m_lv(::google::protobuf::int32 value);

  // optional int64 m_exp = 2;
  inline bool has_m_exp() const;
  inline void clear_m_exp();
  static const int kMExpFieldNumber = 2;
  inline ::google::protobuf::int64 m_exp() const;
  inline void set_m_exp(::google::protobuf::int64 value);

  // repeated .proto_ff.E_EquipStoveattAttributeDesc m_attribute = 3;
  inline int m_attribute_size() const;
  inline void clear_m_attribute();
  static const int kMAttributeFieldNumber = 3;
  inline const ::proto_ff::E_EquipStoveattAttributeDesc& m_attribute(int index) const;
  inline ::proto_ff::E_EquipStoveattAttributeDesc* mutable_m_attribute(int index);
  inline ::proto_ff::E_EquipStoveattAttributeDesc* add_m_attribute();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipStoveattAttributeDesc >&
      m_attribute() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipStoveattAttributeDesc >*
      mutable_m_attribute();

  // @@protoc_insertion_point(class_scope:proto_ff.E_EquipStoveatt)
 private:
  inline void set_has_m_lv();
  inline void clear_has_m_lv();
  inline void set_has_m_exp();
  inline void clear_has_m_exp();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 m_exp_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipStoveattAttributeDesc > m_attribute_;
  ::google::protobuf::int32 m_lv_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_equip_2eproto();
  friend void protobuf_AssignDesc_equip_2eproto();
  friend void protobuf_ShutdownFile_equip_2eproto();

  void InitAsDefaultInstance();
  static E_EquipStoveatt* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_EquipStoveatt : public ::google::protobuf::Message {
 public:
  Sheet_EquipStoveatt();
  virtual ~Sheet_EquipStoveatt();

  Sheet_EquipStoveatt(const Sheet_EquipStoveatt& from);

  inline Sheet_EquipStoveatt& operator=(const Sheet_EquipStoveatt& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_EquipStoveatt& default_instance();

  void Swap(Sheet_EquipStoveatt* other);

  // implements Message ----------------------------------------------

  Sheet_EquipStoveatt* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_EquipStoveatt& from);
  void MergeFrom(const Sheet_EquipStoveatt& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.E_EquipStoveatt E_EquipStoveatt_List = 1;
  inline int e_equipstoveatt_list_size() const;
  inline void clear_e_equipstoveatt_list();
  static const int kEEquipStoveattListFieldNumber = 1;
  inline const ::proto_ff::E_EquipStoveatt& e_equipstoveatt_list(int index) const;
  inline ::proto_ff::E_EquipStoveatt* mutable_e_equipstoveatt_list(int index);
  inline ::proto_ff::E_EquipStoveatt* add_e_equipstoveatt_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipStoveatt >&
      e_equipstoveatt_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipStoveatt >*
      mutable_e_equipstoveatt_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_EquipStoveatt)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipStoveatt > e_equipstoveatt_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_equip_2eproto();
  friend void protobuf_AssignDesc_equip_2eproto();
  friend void protobuf_ShutdownFile_equip_2eproto();

  void InitAsDefaultInstance();
  static Sheet_EquipStoveatt* default_instance_;
};
// -------------------------------------------------------------------

class E_EquipStoveexp : public ::google::protobuf::Message {
 public:
  E_EquipStoveexp();
  virtual ~E_EquipStoveexp();

  E_EquipStoveexp(const E_EquipStoveexp& from);

  inline E_EquipStoveexp& operator=(const E_EquipStoveexp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_EquipStoveexp& default_instance();

  void Swap(E_EquipStoveexp* other);

  // implements Message ----------------------------------------------

  E_EquipStoveexp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_EquipStoveexp& from);
  void MergeFrom(const E_EquipStoveexp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 m_id = 1;
  inline bool has_m_id() const;
  inline void clear_m_id();
  static const int kMIdFieldNumber = 1;
  inline ::google::protobuf::int32 m_id() const;
  inline void set_m_id(::google::protobuf::int32 value);

  // optional int32 m_exp = 2;
  inline bool has_m_exp() const;
  inline void clear_m_exp();
  static const int kMExpFieldNumber = 2;
  inline ::google::protobuf::int32 m_exp() const;
  inline void set_m_exp(::google::protobuf::int32 value);

  // optional int32 m_wearquality = 3;
  inline bool has_m_wearquality() const;
  inline void clear_m_wearquality();
  static const int kMWearqualityFieldNumber = 3;
  inline ::google::protobuf::int32 m_wearquality() const;
  inline void set_m_wearquality(::google::protobuf::int32 value);

  // optional int32 m_quality = 4;
  inline bool has_m_quality() const;
  inline void clear_m_quality();
  static const int kMQualityFieldNumber = 4;
  inline ::google::protobuf::int32 m_quality() const;
  inline void set_m_quality(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.E_EquipStoveexp)
 private:
  inline void set_has_m_id();
  inline void clear_has_m_id();
  inline void set_has_m_exp();
  inline void clear_has_m_exp();
  inline void set_has_m_wearquality();
  inline void clear_has_m_wearquality();
  inline void set_has_m_quality();
  inline void clear_has_m_quality();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_id_;
  ::google::protobuf::int32 m_exp_;
  ::google::protobuf::int32 m_wearquality_;
  ::google::protobuf::int32 m_quality_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_equip_2eproto();
  friend void protobuf_AssignDesc_equip_2eproto();
  friend void protobuf_ShutdownFile_equip_2eproto();

  void InitAsDefaultInstance();
  static E_EquipStoveexp* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_EquipStoveexp : public ::google::protobuf::Message {
 public:
  Sheet_EquipStoveexp();
  virtual ~Sheet_EquipStoveexp();

  Sheet_EquipStoveexp(const Sheet_EquipStoveexp& from);

  inline Sheet_EquipStoveexp& operator=(const Sheet_EquipStoveexp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_EquipStoveexp& default_instance();

  void Swap(Sheet_EquipStoveexp* other);

  // implements Message ----------------------------------------------

  Sheet_EquipStoveexp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_EquipStoveexp& from);
  void MergeFrom(const Sheet_EquipStoveexp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.E_EquipStoveexp E_EquipStoveexp_List = 1;
  inline int e_equipstoveexp_list_size() const;
  inline void clear_e_equipstoveexp_list();
  static const int kEEquipStoveexpListFieldNumber = 1;
  inline const ::proto_ff::E_EquipStoveexp& e_equipstoveexp_list(int index) const;
  inline ::proto_ff::E_EquipStoveexp* mutable_e_equipstoveexp_list(int index);
  inline ::proto_ff::E_EquipStoveexp* add_e_equipstoveexp_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipStoveexp >&
      e_equipstoveexp_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipStoveexp >*
      mutable_e_equipstoveexp_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_EquipStoveexp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipStoveexp > e_equipstoveexp_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_equip_2eproto();
  friend void protobuf_AssignDesc_equip_2eproto();
  friend void protobuf_ShutdownFile_equip_2eproto();

  void InitAsDefaultInstance();
  static Sheet_EquipStoveexp* default_instance_;
};
// -------------------------------------------------------------------

class E_EquipGrade : public ::google::protobuf::Message {
 public:
  E_EquipGrade();
  virtual ~E_EquipGrade();

  E_EquipGrade(const E_EquipGrade& from);

  inline E_EquipGrade& operator=(const E_EquipGrade& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_EquipGrade& default_instance();

  void Swap(E_EquipGrade* other);

  // implements Message ----------------------------------------------

  E_EquipGrade* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_EquipGrade& from);
  void MergeFrom(const E_EquipGrade& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 m_id = 1;
  inline bool has_m_id() const;
  inline void clear_m_id();
  static const int kMIdFieldNumber = 1;
  inline ::google::protobuf::int32 m_id() const;
  inline void set_m_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.E_EquipGrade)
 private:
  inline void set_has_m_id();
  inline void clear_has_m_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_equip_2eproto();
  friend void protobuf_AssignDesc_equip_2eproto();
  friend void protobuf_ShutdownFile_equip_2eproto();

  void InitAsDefaultInstance();
  static E_EquipGrade* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_EquipGrade : public ::google::protobuf::Message {
 public:
  Sheet_EquipGrade();
  virtual ~Sheet_EquipGrade();

  Sheet_EquipGrade(const Sheet_EquipGrade& from);

  inline Sheet_EquipGrade& operator=(const Sheet_EquipGrade& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_EquipGrade& default_instance();

  void Swap(Sheet_EquipGrade* other);

  // implements Message ----------------------------------------------

  Sheet_EquipGrade* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_EquipGrade& from);
  void MergeFrom(const Sheet_EquipGrade& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.E_EquipGrade E_EquipGrade_List = 1;
  inline int e_equipgrade_list_size() const;
  inline void clear_e_equipgrade_list();
  static const int kEEquipGradeListFieldNumber = 1;
  inline const ::proto_ff::E_EquipGrade& e_equipgrade_list(int index) const;
  inline ::proto_ff::E_EquipGrade* mutable_e_equipgrade_list(int index);
  inline ::proto_ff::E_EquipGrade* add_e_equipgrade_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipGrade >&
      e_equipgrade_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipGrade >*
      mutable_e_equipgrade_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_EquipGrade)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipGrade > e_equipgrade_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_equip_2eproto();
  friend void protobuf_AssignDesc_equip_2eproto();
  friend void protobuf_ShutdownFile_equip_2eproto();

  void InitAsDefaultInstance();
  static Sheet_EquipGrade* default_instance_;
};
// ===================================================================


// ===================================================================

// E_EquipEquipAttributeDesc

// optional int32 m_valuemin = 1;
inline bool E_EquipEquipAttributeDesc::has_m_valuemin() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_EquipEquipAttributeDesc::set_has_m_valuemin() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_EquipEquipAttributeDesc::clear_has_m_valuemin() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_EquipEquipAttributeDesc::clear_m_valuemin() {
  m_valuemin_ = 0;
  clear_has_m_valuemin();
}
inline ::google::protobuf::int32 E_EquipEquipAttributeDesc::m_valuemin() const {
  return m_valuemin_;
}
inline void E_EquipEquipAttributeDesc::set_m_valuemin(::google::protobuf::int32 value) {
  set_has_m_valuemin();
  m_valuemin_ = value;
}

// optional int32 m_type = 2;
inline bool E_EquipEquipAttributeDesc::has_m_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_EquipEquipAttributeDesc::set_has_m_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_EquipEquipAttributeDesc::clear_has_m_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_EquipEquipAttributeDesc::clear_m_type() {
  m_type_ = 0;
  clear_has_m_type();
}
inline ::google::protobuf::int32 E_EquipEquipAttributeDesc::m_type() const {
  return m_type_;
}
inline void E_EquipEquipAttributeDesc::set_m_type(::google::protobuf::int32 value) {
  set_has_m_type();
  m_type_ = value;
}

// optional int32 m_valuemax = 3;
inline bool E_EquipEquipAttributeDesc::has_m_valuemax() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void E_EquipEquipAttributeDesc::set_has_m_valuemax() {
  _has_bits_[0] |= 0x00000004u;
}
inline void E_EquipEquipAttributeDesc::clear_has_m_valuemax() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void E_EquipEquipAttributeDesc::clear_m_valuemax() {
  m_valuemax_ = 0;
  clear_has_m_valuemax();
}
inline ::google::protobuf::int32 E_EquipEquipAttributeDesc::m_valuemax() const {
  return m_valuemax_;
}
inline void E_EquipEquipAttributeDesc::set_m_valuemax(::google::protobuf::int32 value) {
  set_has_m_valuemax();
  m_valuemax_ = value;
}

// -------------------------------------------------------------------

// E_EquipEquipGodattributeDesc

// optional int32 m_valuemin = 1;
inline bool E_EquipEquipGodattributeDesc::has_m_valuemin() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_EquipEquipGodattributeDesc::set_has_m_valuemin() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_EquipEquipGodattributeDesc::clear_has_m_valuemin() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_EquipEquipGodattributeDesc::clear_m_valuemin() {
  m_valuemin_ = 0;
  clear_has_m_valuemin();
}
inline ::google::protobuf::int32 E_EquipEquipGodattributeDesc::m_valuemin() const {
  return m_valuemin_;
}
inline void E_EquipEquipGodattributeDesc::set_m_valuemin(::google::protobuf::int32 value) {
  set_has_m_valuemin();
  m_valuemin_ = value;
}

// optional int32 m_type = 2;
inline bool E_EquipEquipGodattributeDesc::has_m_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_EquipEquipGodattributeDesc::set_has_m_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_EquipEquipGodattributeDesc::clear_has_m_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_EquipEquipGodattributeDesc::clear_m_type() {
  m_type_ = 0;
  clear_has_m_type();
}
inline ::google::protobuf::int32 E_EquipEquipGodattributeDesc::m_type() const {
  return m_type_;
}
inline void E_EquipEquipGodattributeDesc::set_m_type(::google::protobuf::int32 value) {
  set_has_m_type();
  m_type_ = value;
}

// optional int32 m_valuemax = 3;
inline bool E_EquipEquipGodattributeDesc::has_m_valuemax() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void E_EquipEquipGodattributeDesc::set_has_m_valuemax() {
  _has_bits_[0] |= 0x00000004u;
}
inline void E_EquipEquipGodattributeDesc::clear_has_m_valuemax() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void E_EquipEquipGodattributeDesc::clear_m_valuemax() {
  m_valuemax_ = 0;
  clear_has_m_valuemax();
}
inline ::google::protobuf::int32 E_EquipEquipGodattributeDesc::m_valuemax() const {
  return m_valuemax_;
}
inline void E_EquipEquipGodattributeDesc::set_m_valuemax(::google::protobuf::int32 value) {
  set_has_m_valuemax();
  m_valuemax_ = value;
}

// -------------------------------------------------------------------

// E_EquipEquip

// optional int64 m_id = 1;
inline bool E_EquipEquip::has_m_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_EquipEquip::set_has_m_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_EquipEquip::clear_has_m_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_EquipEquip::clear_m_id() {
  m_id_ = GOOGLE_LONGLONG(0);
  clear_has_m_id();
}
inline ::google::protobuf::int64 E_EquipEquip::m_id() const {
  return m_id_;
}
inline void E_EquipEquip::set_m_id(::google::protobuf::int64 value) {
  set_has_m_id();
  m_id_ = value;
}

// optional string m_name = 2;
inline bool E_EquipEquip::has_m_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_EquipEquip::set_has_m_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_EquipEquip::clear_has_m_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_EquipEquip::clear_m_name() {
  if (m_name_ != &::google::protobuf::internal::kEmptyString) {
    m_name_->clear();
  }
  clear_has_m_name();
}
inline const ::std::string& E_EquipEquip::m_name() const {
  return *m_name_;
}
inline void E_EquipEquip::set_m_name(const ::std::string& value) {
  set_has_m_name();
  if (m_name_ == &::google::protobuf::internal::kEmptyString) {
    m_name_ = new ::std::string;
  }
  m_name_->assign(value);
}
inline void E_EquipEquip::set_m_name(const char* value) {
  set_has_m_name();
  if (m_name_ == &::google::protobuf::internal::kEmptyString) {
    m_name_ = new ::std::string;
  }
  m_name_->assign(value);
}
inline void E_EquipEquip::set_m_name(const char* value, size_t size) {
  set_has_m_name();
  if (m_name_ == &::google::protobuf::internal::kEmptyString) {
    m_name_ = new ::std::string;
  }
  m_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* E_EquipEquip::mutable_m_name() {
  set_has_m_name();
  if (m_name_ == &::google::protobuf::internal::kEmptyString) {
    m_name_ = new ::std::string;
  }
  return m_name_;
}
inline ::std::string* E_EquipEquip::release_m_name() {
  clear_has_m_name();
  if (m_name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = m_name_;
    m_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void E_EquipEquip::set_allocated_m_name(::std::string* m_name) {
  if (m_name_ != &::google::protobuf::internal::kEmptyString) {
    delete m_name_;
  }
  if (m_name) {
    set_has_m_name();
    m_name_ = m_name;
  } else {
    clear_has_m_name();
    m_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 m_wearquality = 3;
inline bool E_EquipEquip::has_m_wearquality() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void E_EquipEquip::set_has_m_wearquality() {
  _has_bits_[0] |= 0x00000004u;
}
inline void E_EquipEquip::clear_has_m_wearquality() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void E_EquipEquip::clear_m_wearquality() {
  m_wearquality_ = 0;
  clear_has_m_wearquality();
}
inline ::google::protobuf::int32 E_EquipEquip::m_wearquality() const {
  return m_wearquality_;
}
inline void E_EquipEquip::set_m_wearquality(::google::protobuf::int32 value) {
  set_has_m_wearquality();
  m_wearquality_ = value;
}

// optional int32 m_position = 4;
inline bool E_EquipEquip::has_m_position() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void E_EquipEquip::set_has_m_position() {
  _has_bits_[0] |= 0x00000008u;
}
inline void E_EquipEquip::clear_has_m_position() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void E_EquipEquip::clear_m_position() {
  m_position_ = 0;
  clear_has_m_position();
}
inline ::google::protobuf::int32 E_EquipEquip::m_position() const {
  return m_position_;
}
inline void E_EquipEquip::set_m_position(::google::protobuf::int32 value) {
  set_has_m_position();
  m_position_ = value;
}

// optional string m_profession = 5;
inline bool E_EquipEquip::has_m_profession() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void E_EquipEquip::set_has_m_profession() {
  _has_bits_[0] |= 0x00000010u;
}
inline void E_EquipEquip::clear_has_m_profession() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void E_EquipEquip::clear_m_profession() {
  if (m_profession_ != &::google::protobuf::internal::kEmptyString) {
    m_profession_->clear();
  }
  clear_has_m_profession();
}
inline const ::std::string& E_EquipEquip::m_profession() const {
  return *m_profession_;
}
inline void E_EquipEquip::set_m_profession(const ::std::string& value) {
  set_has_m_profession();
  if (m_profession_ == &::google::protobuf::internal::kEmptyString) {
    m_profession_ = new ::std::string;
  }
  m_profession_->assign(value);
}
inline void E_EquipEquip::set_m_profession(const char* value) {
  set_has_m_profession();
  if (m_profession_ == &::google::protobuf::internal::kEmptyString) {
    m_profession_ = new ::std::string;
  }
  m_profession_->assign(value);
}
inline void E_EquipEquip::set_m_profession(const char* value, size_t size) {
  set_has_m_profession();
  if (m_profession_ == &::google::protobuf::internal::kEmptyString) {
    m_profession_ = new ::std::string;
  }
  m_profession_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* E_EquipEquip::mutable_m_profession() {
  set_has_m_profession();
  if (m_profession_ == &::google::protobuf::internal::kEmptyString) {
    m_profession_ = new ::std::string;
  }
  return m_profession_;
}
inline ::std::string* E_EquipEquip::release_m_profession() {
  clear_has_m_profession();
  if (m_profession_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = m_profession_;
    m_profession_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void E_EquipEquip::set_allocated_m_profession(::std::string* m_profession) {
  if (m_profession_ != &::google::protobuf::internal::kEmptyString) {
    delete m_profession_;
  }
  if (m_profession) {
    set_has_m_profession();
    m_profession_ = m_profession;
  } else {
    clear_has_m_profession();
    m_profession_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 m_professionlv = 6;
inline bool E_EquipEquip::has_m_professionlv() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void E_EquipEquip::set_has_m_professionlv() {
  _has_bits_[0] |= 0x00000020u;
}
inline void E_EquipEquip::clear_has_m_professionlv() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void E_EquipEquip::clear_m_professionlv() {
  m_professionlv_ = 0;
  clear_has_m_professionlv();
}
inline ::google::protobuf::int32 E_EquipEquip::m_professionlv() const {
  return m_professionlv_;
}
inline void E_EquipEquip::set_m_professionlv(::google::protobuf::int32 value) {
  set_has_m_professionlv();
  m_professionlv_ = value;
}

// optional int32 m_level = 7;
inline bool E_EquipEquip::has_m_level() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void E_EquipEquip::set_has_m_level() {
  _has_bits_[0] |= 0x00000040u;
}
inline void E_EquipEquip::clear_has_m_level() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void E_EquipEquip::clear_m_level() {
  m_level_ = 0;
  clear_has_m_level();
}
inline ::google::protobuf::int32 E_EquipEquip::m_level() const {
  return m_level_;
}
inline void E_EquipEquip::set_m_level(::google::protobuf::int32 value) {
  set_has_m_level();
  m_level_ = value;
}

// optional int32 m_quality = 8;
inline bool E_EquipEquip::has_m_quality() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void E_EquipEquip::set_has_m_quality() {
  _has_bits_[0] |= 0x00000080u;
}
inline void E_EquipEquip::clear_has_m_quality() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void E_EquipEquip::clear_m_quality() {
  m_quality_ = 0;
  clear_has_m_quality();
}
inline ::google::protobuf::int32 E_EquipEquip::m_quality() const {
  return m_quality_;
}
inline void E_EquipEquip::set_m_quality(::google::protobuf::int32 value) {
  set_has_m_quality();
  m_quality_ = value;
}

// optional int32 m_star = 9;
inline bool E_EquipEquip::has_m_star() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void E_EquipEquip::set_has_m_star() {
  _has_bits_[0] |= 0x00000100u;
}
inline void E_EquipEquip::clear_has_m_star() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void E_EquipEquip::clear_m_star() {
  m_star_ = 0;
  clear_has_m_star();
}
inline ::google::protobuf::int32 E_EquipEquip::m_star() const {
  return m_star_;
}
inline void E_EquipEquip::set_m_star(::google::protobuf::int32 value) {
  set_has_m_star();
  m_star_ = value;
}

// optional int32 m_refineattributedown = 10;
inline bool E_EquipEquip::has_m_refineattributedown() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void E_EquipEquip::set_has_m_refineattributedown() {
  _has_bits_[0] |= 0x00000200u;
}
inline void E_EquipEquip::clear_has_m_refineattributedown() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void E_EquipEquip::clear_m_refineattributedown() {
  m_refineattributedown_ = 0;
  clear_has_m_refineattributedown();
}
inline ::google::protobuf::int32 E_EquipEquip::m_refineattributedown() const {
  return m_refineattributedown_;
}
inline void E_EquipEquip::set_m_refineattributedown(::google::protobuf::int32 value) {
  set_has_m_refineattributedown();
  m_refineattributedown_ = value;
}

// optional int32 m_refineattributeup = 11;
inline bool E_EquipEquip::has_m_refineattributeup() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void E_EquipEquip::set_has_m_refineattributeup() {
  _has_bits_[0] |= 0x00000400u;
}
inline void E_EquipEquip::clear_has_m_refineattributeup() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void E_EquipEquip::clear_m_refineattributeup() {
  m_refineattributeup_ = 0;
  clear_has_m_refineattributeup();
}
inline ::google::protobuf::int32 E_EquipEquip::m_refineattributeup() const {
  return m_refineattributeup_;
}
inline void E_EquipEquip::set_m_refineattributeup(::google::protobuf::int32 value) {
  set_has_m_refineattributeup();
  m_refineattributeup_ = value;
}

// optional string m_refineattribute_typelibrary = 12;
inline bool E_EquipEquip::has_m_refineattribute_typelibrary() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void E_EquipEquip::set_has_m_refineattribute_typelibrary() {
  _has_bits_[0] |= 0x00000800u;
}
inline void E_EquipEquip::clear_has_m_refineattribute_typelibrary() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void E_EquipEquip::clear_m_refineattribute_typelibrary() {
  if (m_refineattribute_typelibrary_ != &::google::protobuf::internal::kEmptyString) {
    m_refineattribute_typelibrary_->clear();
  }
  clear_has_m_refineattribute_typelibrary();
}
inline const ::std::string& E_EquipEquip::m_refineattribute_typelibrary() const {
  return *m_refineattribute_typelibrary_;
}
inline void E_EquipEquip::set_m_refineattribute_typelibrary(const ::std::string& value) {
  set_has_m_refineattribute_typelibrary();
  if (m_refineattribute_typelibrary_ == &::google::protobuf::internal::kEmptyString) {
    m_refineattribute_typelibrary_ = new ::std::string;
  }
  m_refineattribute_typelibrary_->assign(value);
}
inline void E_EquipEquip::set_m_refineattribute_typelibrary(const char* value) {
  set_has_m_refineattribute_typelibrary();
  if (m_refineattribute_typelibrary_ == &::google::protobuf::internal::kEmptyString) {
    m_refineattribute_typelibrary_ = new ::std::string;
  }
  m_refineattribute_typelibrary_->assign(value);
}
inline void E_EquipEquip::set_m_refineattribute_typelibrary(const char* value, size_t size) {
  set_has_m_refineattribute_typelibrary();
  if (m_refineattribute_typelibrary_ == &::google::protobuf::internal::kEmptyString) {
    m_refineattribute_typelibrary_ = new ::std::string;
  }
  m_refineattribute_typelibrary_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* E_EquipEquip::mutable_m_refineattribute_typelibrary() {
  set_has_m_refineattribute_typelibrary();
  if (m_refineattribute_typelibrary_ == &::google::protobuf::internal::kEmptyString) {
    m_refineattribute_typelibrary_ = new ::std::string;
  }
  return m_refineattribute_typelibrary_;
}
inline ::std::string* E_EquipEquip::release_m_refineattribute_typelibrary() {
  clear_has_m_refineattribute_typelibrary();
  if (m_refineattribute_typelibrary_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = m_refineattribute_typelibrary_;
    m_refineattribute_typelibrary_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void E_EquipEquip::set_allocated_m_refineattribute_typelibrary(::std::string* m_refineattribute_typelibrary) {
  if (m_refineattribute_typelibrary_ != &::google::protobuf::internal::kEmptyString) {
    delete m_refineattribute_typelibrary_;
  }
  if (m_refineattribute_typelibrary) {
    set_has_m_refineattribute_typelibrary();
    m_refineattribute_typelibrary_ = m_refineattribute_typelibrary;
  } else {
    clear_has_m_refineattribute_typelibrary();
    m_refineattribute_typelibrary_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string m_refineattribute_valuemin = 13;
inline bool E_EquipEquip::has_m_refineattribute_valuemin() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void E_EquipEquip::set_has_m_refineattribute_valuemin() {
  _has_bits_[0] |= 0x00001000u;
}
inline void E_EquipEquip::clear_has_m_refineattribute_valuemin() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void E_EquipEquip::clear_m_refineattribute_valuemin() {
  if (m_refineattribute_valuemin_ != &::google::protobuf::internal::kEmptyString) {
    m_refineattribute_valuemin_->clear();
  }
  clear_has_m_refineattribute_valuemin();
}
inline const ::std::string& E_EquipEquip::m_refineattribute_valuemin() const {
  return *m_refineattribute_valuemin_;
}
inline void E_EquipEquip::set_m_refineattribute_valuemin(const ::std::string& value) {
  set_has_m_refineattribute_valuemin();
  if (m_refineattribute_valuemin_ == &::google::protobuf::internal::kEmptyString) {
    m_refineattribute_valuemin_ = new ::std::string;
  }
  m_refineattribute_valuemin_->assign(value);
}
inline void E_EquipEquip::set_m_refineattribute_valuemin(const char* value) {
  set_has_m_refineattribute_valuemin();
  if (m_refineattribute_valuemin_ == &::google::protobuf::internal::kEmptyString) {
    m_refineattribute_valuemin_ = new ::std::string;
  }
  m_refineattribute_valuemin_->assign(value);
}
inline void E_EquipEquip::set_m_refineattribute_valuemin(const char* value, size_t size) {
  set_has_m_refineattribute_valuemin();
  if (m_refineattribute_valuemin_ == &::google::protobuf::internal::kEmptyString) {
    m_refineattribute_valuemin_ = new ::std::string;
  }
  m_refineattribute_valuemin_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* E_EquipEquip::mutable_m_refineattribute_valuemin() {
  set_has_m_refineattribute_valuemin();
  if (m_refineattribute_valuemin_ == &::google::protobuf::internal::kEmptyString) {
    m_refineattribute_valuemin_ = new ::std::string;
  }
  return m_refineattribute_valuemin_;
}
inline ::std::string* E_EquipEquip::release_m_refineattribute_valuemin() {
  clear_has_m_refineattribute_valuemin();
  if (m_refineattribute_valuemin_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = m_refineattribute_valuemin_;
    m_refineattribute_valuemin_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void E_EquipEquip::set_allocated_m_refineattribute_valuemin(::std::string* m_refineattribute_valuemin) {
  if (m_refineattribute_valuemin_ != &::google::protobuf::internal::kEmptyString) {
    delete m_refineattribute_valuemin_;
  }
  if (m_refineattribute_valuemin) {
    set_has_m_refineattribute_valuemin();
    m_refineattribute_valuemin_ = m_refineattribute_valuemin;
  } else {
    clear_has_m_refineattribute_valuemin();
    m_refineattribute_valuemin_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string m_refineattribute_valuemax = 14;
inline bool E_EquipEquip::has_m_refineattribute_valuemax() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void E_EquipEquip::set_has_m_refineattribute_valuemax() {
  _has_bits_[0] |= 0x00002000u;
}
inline void E_EquipEquip::clear_has_m_refineattribute_valuemax() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void E_EquipEquip::clear_m_refineattribute_valuemax() {
  if (m_refineattribute_valuemax_ != &::google::protobuf::internal::kEmptyString) {
    m_refineattribute_valuemax_->clear();
  }
  clear_has_m_refineattribute_valuemax();
}
inline const ::std::string& E_EquipEquip::m_refineattribute_valuemax() const {
  return *m_refineattribute_valuemax_;
}
inline void E_EquipEquip::set_m_refineattribute_valuemax(const ::std::string& value) {
  set_has_m_refineattribute_valuemax();
  if (m_refineattribute_valuemax_ == &::google::protobuf::internal::kEmptyString) {
    m_refineattribute_valuemax_ = new ::std::string;
  }
  m_refineattribute_valuemax_->assign(value);
}
inline void E_EquipEquip::set_m_refineattribute_valuemax(const char* value) {
  set_has_m_refineattribute_valuemax();
  if (m_refineattribute_valuemax_ == &::google::protobuf::internal::kEmptyString) {
    m_refineattribute_valuemax_ = new ::std::string;
  }
  m_refineattribute_valuemax_->assign(value);
}
inline void E_EquipEquip::set_m_refineattribute_valuemax(const char* value, size_t size) {
  set_has_m_refineattribute_valuemax();
  if (m_refineattribute_valuemax_ == &::google::protobuf::internal::kEmptyString) {
    m_refineattribute_valuemax_ = new ::std::string;
  }
  m_refineattribute_valuemax_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* E_EquipEquip::mutable_m_refineattribute_valuemax() {
  set_has_m_refineattribute_valuemax();
  if (m_refineattribute_valuemax_ == &::google::protobuf::internal::kEmptyString) {
    m_refineattribute_valuemax_ = new ::std::string;
  }
  return m_refineattribute_valuemax_;
}
inline ::std::string* E_EquipEquip::release_m_refineattribute_valuemax() {
  clear_has_m_refineattribute_valuemax();
  if (m_refineattribute_valuemax_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = m_refineattribute_valuemax_;
    m_refineattribute_valuemax_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void E_EquipEquip::set_allocated_m_refineattribute_valuemax(::std::string* m_refineattribute_valuemax) {
  if (m_refineattribute_valuemax_ != &::google::protobuf::internal::kEmptyString) {
    delete m_refineattribute_valuemax_;
  }
  if (m_refineattribute_valuemax) {
    set_has_m_refineattribute_valuemax();
    m_refineattribute_valuemax_ = m_refineattribute_valuemax;
  } else {
    clear_has_m_refineattribute_valuemax();
    m_refineattribute_valuemax_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 m_bluestarnum = 15;
inline bool E_EquipEquip::has_m_bluestarnum() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void E_EquipEquip::set_has_m_bluestarnum() {
  _has_bits_[0] |= 0x00004000u;
}
inline void E_EquipEquip::clear_has_m_bluestarnum() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void E_EquipEquip::clear_m_bluestarnum() {
  m_bluestarnum_ = 0;
  clear_has_m_bluestarnum();
}
inline ::google::protobuf::int32 E_EquipEquip::m_bluestarnum() const {
  return m_bluestarnum_;
}
inline void E_EquipEquip::set_m_bluestarnum(::google::protobuf::int32 value) {
  set_has_m_bluestarnum();
  m_bluestarnum_ = value;
}

// optional string m_bluestar_type = 16;
inline bool E_EquipEquip::has_m_bluestar_type() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void E_EquipEquip::set_has_m_bluestar_type() {
  _has_bits_[0] |= 0x00008000u;
}
inline void E_EquipEquip::clear_has_m_bluestar_type() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void E_EquipEquip::clear_m_bluestar_type() {
  if (m_bluestar_type_ != &::google::protobuf::internal::kEmptyString) {
    m_bluestar_type_->clear();
  }
  clear_has_m_bluestar_type();
}
inline const ::std::string& E_EquipEquip::m_bluestar_type() const {
  return *m_bluestar_type_;
}
inline void E_EquipEquip::set_m_bluestar_type(const ::std::string& value) {
  set_has_m_bluestar_type();
  if (m_bluestar_type_ == &::google::protobuf::internal::kEmptyString) {
    m_bluestar_type_ = new ::std::string;
  }
  m_bluestar_type_->assign(value);
}
inline void E_EquipEquip::set_m_bluestar_type(const char* value) {
  set_has_m_bluestar_type();
  if (m_bluestar_type_ == &::google::protobuf::internal::kEmptyString) {
    m_bluestar_type_ = new ::std::string;
  }
  m_bluestar_type_->assign(value);
}
inline void E_EquipEquip::set_m_bluestar_type(const char* value, size_t size) {
  set_has_m_bluestar_type();
  if (m_bluestar_type_ == &::google::protobuf::internal::kEmptyString) {
    m_bluestar_type_ = new ::std::string;
  }
  m_bluestar_type_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* E_EquipEquip::mutable_m_bluestar_type() {
  set_has_m_bluestar_type();
  if (m_bluestar_type_ == &::google::protobuf::internal::kEmptyString) {
    m_bluestar_type_ = new ::std::string;
  }
  return m_bluestar_type_;
}
inline ::std::string* E_EquipEquip::release_m_bluestar_type() {
  clear_has_m_bluestar_type();
  if (m_bluestar_type_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = m_bluestar_type_;
    m_bluestar_type_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void E_EquipEquip::set_allocated_m_bluestar_type(::std::string* m_bluestar_type) {
  if (m_bluestar_type_ != &::google::protobuf::internal::kEmptyString) {
    delete m_bluestar_type_;
  }
  if (m_bluestar_type) {
    set_has_m_bluestar_type();
    m_bluestar_type_ = m_bluestar_type;
  } else {
    clear_has_m_bluestar_type();
    m_bluestar_type_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string m_bluestar_lv = 17;
inline bool E_EquipEquip::has_m_bluestar_lv() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void E_EquipEquip::set_has_m_bluestar_lv() {
  _has_bits_[0] |= 0x00010000u;
}
inline void E_EquipEquip::clear_has_m_bluestar_lv() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void E_EquipEquip::clear_m_bluestar_lv() {
  if (m_bluestar_lv_ != &::google::protobuf::internal::kEmptyString) {
    m_bluestar_lv_->clear();
  }
  clear_has_m_bluestar_lv();
}
inline const ::std::string& E_EquipEquip::m_bluestar_lv() const {
  return *m_bluestar_lv_;
}
inline void E_EquipEquip::set_m_bluestar_lv(const ::std::string& value) {
  set_has_m_bluestar_lv();
  if (m_bluestar_lv_ == &::google::protobuf::internal::kEmptyString) {
    m_bluestar_lv_ = new ::std::string;
  }
  m_bluestar_lv_->assign(value);
}
inline void E_EquipEquip::set_m_bluestar_lv(const char* value) {
  set_has_m_bluestar_lv();
  if (m_bluestar_lv_ == &::google::protobuf::internal::kEmptyString) {
    m_bluestar_lv_ = new ::std::string;
  }
  m_bluestar_lv_->assign(value);
}
inline void E_EquipEquip::set_m_bluestar_lv(const char* value, size_t size) {
  set_has_m_bluestar_lv();
  if (m_bluestar_lv_ == &::google::protobuf::internal::kEmptyString) {
    m_bluestar_lv_ = new ::std::string;
  }
  m_bluestar_lv_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* E_EquipEquip::mutable_m_bluestar_lv() {
  set_has_m_bluestar_lv();
  if (m_bluestar_lv_ == &::google::protobuf::internal::kEmptyString) {
    m_bluestar_lv_ = new ::std::string;
  }
  return m_bluestar_lv_;
}
inline ::std::string* E_EquipEquip::release_m_bluestar_lv() {
  clear_has_m_bluestar_lv();
  if (m_bluestar_lv_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = m_bluestar_lv_;
    m_bluestar_lv_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void E_EquipEquip::set_allocated_m_bluestar_lv(::std::string* m_bluestar_lv) {
  if (m_bluestar_lv_ != &::google::protobuf::internal::kEmptyString) {
    delete m_bluestar_lv_;
  }
  if (m_bluestar_lv) {
    set_has_m_bluestar_lv();
    m_bluestar_lv_ = m_bluestar_lv;
  } else {
    clear_has_m_bluestar_lv();
    m_bluestar_lv_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string m_bluestar_number = 18;
inline bool E_EquipEquip::has_m_bluestar_number() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void E_EquipEquip::set_has_m_bluestar_number() {
  _has_bits_[0] |= 0x00020000u;
}
inline void E_EquipEquip::clear_has_m_bluestar_number() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void E_EquipEquip::clear_m_bluestar_number() {
  if (m_bluestar_number_ != &::google::protobuf::internal::kEmptyString) {
    m_bluestar_number_->clear();
  }
  clear_has_m_bluestar_number();
}
inline const ::std::string& E_EquipEquip::m_bluestar_number() const {
  return *m_bluestar_number_;
}
inline void E_EquipEquip::set_m_bluestar_number(const ::std::string& value) {
  set_has_m_bluestar_number();
  if (m_bluestar_number_ == &::google::protobuf::internal::kEmptyString) {
    m_bluestar_number_ = new ::std::string;
  }
  m_bluestar_number_->assign(value);
}
inline void E_EquipEquip::set_m_bluestar_number(const char* value) {
  set_has_m_bluestar_number();
  if (m_bluestar_number_ == &::google::protobuf::internal::kEmptyString) {
    m_bluestar_number_ = new ::std::string;
  }
  m_bluestar_number_->assign(value);
}
inline void E_EquipEquip::set_m_bluestar_number(const char* value, size_t size) {
  set_has_m_bluestar_number();
  if (m_bluestar_number_ == &::google::protobuf::internal::kEmptyString) {
    m_bluestar_number_ = new ::std::string;
  }
  m_bluestar_number_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* E_EquipEquip::mutable_m_bluestar_number() {
  set_has_m_bluestar_number();
  if (m_bluestar_number_ == &::google::protobuf::internal::kEmptyString) {
    m_bluestar_number_ = new ::std::string;
  }
  return m_bluestar_number_;
}
inline ::std::string* E_EquipEquip::release_m_bluestar_number() {
  clear_has_m_bluestar_number();
  if (m_bluestar_number_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = m_bluestar_number_;
    m_bluestar_number_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void E_EquipEquip::set_allocated_m_bluestar_number(::std::string* m_bluestar_number) {
  if (m_bluestar_number_ != &::google::protobuf::internal::kEmptyString) {
    delete m_bluestar_number_;
  }
  if (m_bluestar_number) {
    set_has_m_bluestar_number();
    m_bluestar_number_ = m_bluestar_number;
  } else {
    clear_has_m_bluestar_number();
    m_bluestar_number_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 m_iscanbind = 19;
inline bool E_EquipEquip::has_m_iscanbind() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void E_EquipEquip::set_has_m_iscanbind() {
  _has_bits_[0] |= 0x00040000u;
}
inline void E_EquipEquip::clear_has_m_iscanbind() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void E_EquipEquip::clear_m_iscanbind() {
  m_iscanbind_ = 0;
  clear_has_m_iscanbind();
}
inline ::google::protobuf::int32 E_EquipEquip::m_iscanbind() const {
  return m_iscanbind_;
}
inline void E_EquipEquip::set_m_iscanbind(::google::protobuf::int32 value) {
  set_has_m_iscanbind();
  m_iscanbind_ = value;
}

// optional int32 m_istradebind = 20;
inline bool E_EquipEquip::has_m_istradebind() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void E_EquipEquip::set_has_m_istradebind() {
  _has_bits_[0] |= 0x00080000u;
}
inline void E_EquipEquip::clear_has_m_istradebind() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void E_EquipEquip::clear_m_istradebind() {
  m_istradebind_ = 0;
  clear_has_m_istradebind();
}
inline ::google::protobuf::int32 E_EquipEquip::m_istradebind() const {
  return m_istradebind_;
}
inline void E_EquipEquip::set_m_istradebind(::google::protobuf::int32 value) {
  set_has_m_istradebind();
  m_istradebind_ = value;
}

// optional int32 m_sellprice = 21;
inline bool E_EquipEquip::has_m_sellprice() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void E_EquipEquip::set_has_m_sellprice() {
  _has_bits_[0] |= 0x00100000u;
}
inline void E_EquipEquip::clear_has_m_sellprice() {
  _has_bits_[0] &= ~0x00100000u;
}
inline void E_EquipEquip::clear_m_sellprice() {
  m_sellprice_ = 0;
  clear_has_m_sellprice();
}
inline ::google::protobuf::int32 E_EquipEquip::m_sellprice() const {
  return m_sellprice_;
}
inline void E_EquipEquip::set_m_sellprice(::google::protobuf::int32 value) {
  set_has_m_sellprice();
  m_sellprice_ = value;
}

// optional string m_icon = 22;
inline bool E_EquipEquip::has_m_icon() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
inline void E_EquipEquip::set_has_m_icon() {
  _has_bits_[0] |= 0x00200000u;
}
inline void E_EquipEquip::clear_has_m_icon() {
  _has_bits_[0] &= ~0x00200000u;
}
inline void E_EquipEquip::clear_m_icon() {
  if (m_icon_ != &::google::protobuf::internal::kEmptyString) {
    m_icon_->clear();
  }
  clear_has_m_icon();
}
inline const ::std::string& E_EquipEquip::m_icon() const {
  return *m_icon_;
}
inline void E_EquipEquip::set_m_icon(const ::std::string& value) {
  set_has_m_icon();
  if (m_icon_ == &::google::protobuf::internal::kEmptyString) {
    m_icon_ = new ::std::string;
  }
  m_icon_->assign(value);
}
inline void E_EquipEquip::set_m_icon(const char* value) {
  set_has_m_icon();
  if (m_icon_ == &::google::protobuf::internal::kEmptyString) {
    m_icon_ = new ::std::string;
  }
  m_icon_->assign(value);
}
inline void E_EquipEquip::set_m_icon(const char* value, size_t size) {
  set_has_m_icon();
  if (m_icon_ == &::google::protobuf::internal::kEmptyString) {
    m_icon_ = new ::std::string;
  }
  m_icon_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* E_EquipEquip::mutable_m_icon() {
  set_has_m_icon();
  if (m_icon_ == &::google::protobuf::internal::kEmptyString) {
    m_icon_ = new ::std::string;
  }
  return m_icon_;
}
inline ::std::string* E_EquipEquip::release_m_icon() {
  clear_has_m_icon();
  if (m_icon_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = m_icon_;
    m_icon_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void E_EquipEquip::set_allocated_m_icon(::std::string* m_icon) {
  if (m_icon_ != &::google::protobuf::internal::kEmptyString) {
    delete m_icon_;
  }
  if (m_icon) {
    set_has_m_icon();
    m_icon_ = m_icon;
  } else {
    clear_has_m_icon();
    m_icon_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 m_time = 23;
inline bool E_EquipEquip::has_m_time() const {
  return (_has_bits_[0] & 0x00400000u) != 0;
}
inline void E_EquipEquip::set_has_m_time() {
  _has_bits_[0] |= 0x00400000u;
}
inline void E_EquipEquip::clear_has_m_time() {
  _has_bits_[0] &= ~0x00400000u;
}
inline void E_EquipEquip::clear_m_time() {
  m_time_ = 0;
  clear_has_m_time();
}
inline ::google::protobuf::int32 E_EquipEquip::m_time() const {
  return m_time_;
}
inline void E_EquipEquip::set_m_time(::google::protobuf::int32 value) {
  set_has_m_time();
  m_time_ = value;
}

// optional int32 m_broadcast = 24;
inline bool E_EquipEquip::has_m_broadcast() const {
  return (_has_bits_[0] & 0x00800000u) != 0;
}
inline void E_EquipEquip::set_has_m_broadcast() {
  _has_bits_[0] |= 0x00800000u;
}
inline void E_EquipEquip::clear_has_m_broadcast() {
  _has_bits_[0] &= ~0x00800000u;
}
inline void E_EquipEquip::clear_m_broadcast() {
  m_broadcast_ = 0;
  clear_has_m_broadcast();
}
inline ::google::protobuf::int32 E_EquipEquip::m_broadcast() const {
  return m_broadcast_;
}
inline void E_EquipEquip::set_m_broadcast(::google::protobuf::int32 value) {
  set_has_m_broadcast();
  m_broadcast_ = value;
}

// optional string m_meltingresult = 25;
inline bool E_EquipEquip::has_m_meltingresult() const {
  return (_has_bits_[0] & 0x01000000u) != 0;
}
inline void E_EquipEquip::set_has_m_meltingresult() {
  _has_bits_[0] |= 0x01000000u;
}
inline void E_EquipEquip::clear_has_m_meltingresult() {
  _has_bits_[0] &= ~0x01000000u;
}
inline void E_EquipEquip::clear_m_meltingresult() {
  if (m_meltingresult_ != &::google::protobuf::internal::kEmptyString) {
    m_meltingresult_->clear();
  }
  clear_has_m_meltingresult();
}
inline const ::std::string& E_EquipEquip::m_meltingresult() const {
  return *m_meltingresult_;
}
inline void E_EquipEquip::set_m_meltingresult(const ::std::string& value) {
  set_has_m_meltingresult();
  if (m_meltingresult_ == &::google::protobuf::internal::kEmptyString) {
    m_meltingresult_ = new ::std::string;
  }
  m_meltingresult_->assign(value);
}
inline void E_EquipEquip::set_m_meltingresult(const char* value) {
  set_has_m_meltingresult();
  if (m_meltingresult_ == &::google::protobuf::internal::kEmptyString) {
    m_meltingresult_ = new ::std::string;
  }
  m_meltingresult_->assign(value);
}
inline void E_EquipEquip::set_m_meltingresult(const char* value, size_t size) {
  set_has_m_meltingresult();
  if (m_meltingresult_ == &::google::protobuf::internal::kEmptyString) {
    m_meltingresult_ = new ::std::string;
  }
  m_meltingresult_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* E_EquipEquip::mutable_m_meltingresult() {
  set_has_m_meltingresult();
  if (m_meltingresult_ == &::google::protobuf::internal::kEmptyString) {
    m_meltingresult_ = new ::std::string;
  }
  return m_meltingresult_;
}
inline ::std::string* E_EquipEquip::release_m_meltingresult() {
  clear_has_m_meltingresult();
  if (m_meltingresult_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = m_meltingresult_;
    m_meltingresult_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void E_EquipEquip::set_allocated_m_meltingresult(::std::string* m_meltingresult) {
  if (m_meltingresult_ != &::google::protobuf::internal::kEmptyString) {
    delete m_meltingresult_;
  }
  if (m_meltingresult) {
    set_has_m_meltingresult();
    m_meltingresult_ = m_meltingresult;
  } else {
    clear_has_m_meltingresult();
    m_meltingresult_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 m_specialattributedown = 26;
inline bool E_EquipEquip::has_m_specialattributedown() const {
  return (_has_bits_[0] & 0x02000000u) != 0;
}
inline void E_EquipEquip::set_has_m_specialattributedown() {
  _has_bits_[0] |= 0x02000000u;
}
inline void E_EquipEquip::clear_has_m_specialattributedown() {
  _has_bits_[0] &= ~0x02000000u;
}
inline void E_EquipEquip::clear_m_specialattributedown() {
  m_specialattributedown_ = 0;
  clear_has_m_specialattributedown();
}
inline ::google::protobuf::int32 E_EquipEquip::m_specialattributedown() const {
  return m_specialattributedown_;
}
inline void E_EquipEquip::set_m_specialattributedown(::google::protobuf::int32 value) {
  set_has_m_specialattributedown();
  m_specialattributedown_ = value;
}

// optional int32 m_specialattributeup = 27;
inline bool E_EquipEquip::has_m_specialattributeup() const {
  return (_has_bits_[0] & 0x04000000u) != 0;
}
inline void E_EquipEquip::set_has_m_specialattributeup() {
  _has_bits_[0] |= 0x04000000u;
}
inline void E_EquipEquip::clear_has_m_specialattributeup() {
  _has_bits_[0] &= ~0x04000000u;
}
inline void E_EquipEquip::clear_m_specialattributeup() {
  m_specialattributeup_ = 0;
  clear_has_m_specialattributeup();
}
inline ::google::protobuf::int32 E_EquipEquip::m_specialattributeup() const {
  return m_specialattributeup_;
}
inline void E_EquipEquip::set_m_specialattributeup(::google::protobuf::int32 value) {
  set_has_m_specialattributeup();
  m_specialattributeup_ = value;
}

// optional string m_specialattribute_typelibrary = 28;
inline bool E_EquipEquip::has_m_specialattribute_typelibrary() const {
  return (_has_bits_[0] & 0x08000000u) != 0;
}
inline void E_EquipEquip::set_has_m_specialattribute_typelibrary() {
  _has_bits_[0] |= 0x08000000u;
}
inline void E_EquipEquip::clear_has_m_specialattribute_typelibrary() {
  _has_bits_[0] &= ~0x08000000u;
}
inline void E_EquipEquip::clear_m_specialattribute_typelibrary() {
  if (m_specialattribute_typelibrary_ != &::google::protobuf::internal::kEmptyString) {
    m_specialattribute_typelibrary_->clear();
  }
  clear_has_m_specialattribute_typelibrary();
}
inline const ::std::string& E_EquipEquip::m_specialattribute_typelibrary() const {
  return *m_specialattribute_typelibrary_;
}
inline void E_EquipEquip::set_m_specialattribute_typelibrary(const ::std::string& value) {
  set_has_m_specialattribute_typelibrary();
  if (m_specialattribute_typelibrary_ == &::google::protobuf::internal::kEmptyString) {
    m_specialattribute_typelibrary_ = new ::std::string;
  }
  m_specialattribute_typelibrary_->assign(value);
}
inline void E_EquipEquip::set_m_specialattribute_typelibrary(const char* value) {
  set_has_m_specialattribute_typelibrary();
  if (m_specialattribute_typelibrary_ == &::google::protobuf::internal::kEmptyString) {
    m_specialattribute_typelibrary_ = new ::std::string;
  }
  m_specialattribute_typelibrary_->assign(value);
}
inline void E_EquipEquip::set_m_specialattribute_typelibrary(const char* value, size_t size) {
  set_has_m_specialattribute_typelibrary();
  if (m_specialattribute_typelibrary_ == &::google::protobuf::internal::kEmptyString) {
    m_specialattribute_typelibrary_ = new ::std::string;
  }
  m_specialattribute_typelibrary_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* E_EquipEquip::mutable_m_specialattribute_typelibrary() {
  set_has_m_specialattribute_typelibrary();
  if (m_specialattribute_typelibrary_ == &::google::protobuf::internal::kEmptyString) {
    m_specialattribute_typelibrary_ = new ::std::string;
  }
  return m_specialattribute_typelibrary_;
}
inline ::std::string* E_EquipEquip::release_m_specialattribute_typelibrary() {
  clear_has_m_specialattribute_typelibrary();
  if (m_specialattribute_typelibrary_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = m_specialattribute_typelibrary_;
    m_specialattribute_typelibrary_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void E_EquipEquip::set_allocated_m_specialattribute_typelibrary(::std::string* m_specialattribute_typelibrary) {
  if (m_specialattribute_typelibrary_ != &::google::protobuf::internal::kEmptyString) {
    delete m_specialattribute_typelibrary_;
  }
  if (m_specialattribute_typelibrary) {
    set_has_m_specialattribute_typelibrary();
    m_specialattribute_typelibrary_ = m_specialattribute_typelibrary;
  } else {
    clear_has_m_specialattribute_typelibrary();
    m_specialattribute_typelibrary_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string m_specialattribute_valuemin = 29;
inline bool E_EquipEquip::has_m_specialattribute_valuemin() const {
  return (_has_bits_[0] & 0x10000000u) != 0;
}
inline void E_EquipEquip::set_has_m_specialattribute_valuemin() {
  _has_bits_[0] |= 0x10000000u;
}
inline void E_EquipEquip::clear_has_m_specialattribute_valuemin() {
  _has_bits_[0] &= ~0x10000000u;
}
inline void E_EquipEquip::clear_m_specialattribute_valuemin() {
  if (m_specialattribute_valuemin_ != &::google::protobuf::internal::kEmptyString) {
    m_specialattribute_valuemin_->clear();
  }
  clear_has_m_specialattribute_valuemin();
}
inline const ::std::string& E_EquipEquip::m_specialattribute_valuemin() const {
  return *m_specialattribute_valuemin_;
}
inline void E_EquipEquip::set_m_specialattribute_valuemin(const ::std::string& value) {
  set_has_m_specialattribute_valuemin();
  if (m_specialattribute_valuemin_ == &::google::protobuf::internal::kEmptyString) {
    m_specialattribute_valuemin_ = new ::std::string;
  }
  m_specialattribute_valuemin_->assign(value);
}
inline void E_EquipEquip::set_m_specialattribute_valuemin(const char* value) {
  set_has_m_specialattribute_valuemin();
  if (m_specialattribute_valuemin_ == &::google::protobuf::internal::kEmptyString) {
    m_specialattribute_valuemin_ = new ::std::string;
  }
  m_specialattribute_valuemin_->assign(value);
}
inline void E_EquipEquip::set_m_specialattribute_valuemin(const char* value, size_t size) {
  set_has_m_specialattribute_valuemin();
  if (m_specialattribute_valuemin_ == &::google::protobuf::internal::kEmptyString) {
    m_specialattribute_valuemin_ = new ::std::string;
  }
  m_specialattribute_valuemin_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* E_EquipEquip::mutable_m_specialattribute_valuemin() {
  set_has_m_specialattribute_valuemin();
  if (m_specialattribute_valuemin_ == &::google::protobuf::internal::kEmptyString) {
    m_specialattribute_valuemin_ = new ::std::string;
  }
  return m_specialattribute_valuemin_;
}
inline ::std::string* E_EquipEquip::release_m_specialattribute_valuemin() {
  clear_has_m_specialattribute_valuemin();
  if (m_specialattribute_valuemin_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = m_specialattribute_valuemin_;
    m_specialattribute_valuemin_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void E_EquipEquip::set_allocated_m_specialattribute_valuemin(::std::string* m_specialattribute_valuemin) {
  if (m_specialattribute_valuemin_ != &::google::protobuf::internal::kEmptyString) {
    delete m_specialattribute_valuemin_;
  }
  if (m_specialattribute_valuemin) {
    set_has_m_specialattribute_valuemin();
    m_specialattribute_valuemin_ = m_specialattribute_valuemin;
  } else {
    clear_has_m_specialattribute_valuemin();
    m_specialattribute_valuemin_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string m_specialattribute_valuemax = 30;
inline bool E_EquipEquip::has_m_specialattribute_valuemax() const {
  return (_has_bits_[0] & 0x20000000u) != 0;
}
inline void E_EquipEquip::set_has_m_specialattribute_valuemax() {
  _has_bits_[0] |= 0x20000000u;
}
inline void E_EquipEquip::clear_has_m_specialattribute_valuemax() {
  _has_bits_[0] &= ~0x20000000u;
}
inline void E_EquipEquip::clear_m_specialattribute_valuemax() {
  if (m_specialattribute_valuemax_ != &::google::protobuf::internal::kEmptyString) {
    m_specialattribute_valuemax_->clear();
  }
  clear_has_m_specialattribute_valuemax();
}
inline const ::std::string& E_EquipEquip::m_specialattribute_valuemax() const {
  return *m_specialattribute_valuemax_;
}
inline void E_EquipEquip::set_m_specialattribute_valuemax(const ::std::string& value) {
  set_has_m_specialattribute_valuemax();
  if (m_specialattribute_valuemax_ == &::google::protobuf::internal::kEmptyString) {
    m_specialattribute_valuemax_ = new ::std::string;
  }
  m_specialattribute_valuemax_->assign(value);
}
inline void E_EquipEquip::set_m_specialattribute_valuemax(const char* value) {
  set_has_m_specialattribute_valuemax();
  if (m_specialattribute_valuemax_ == &::google::protobuf::internal::kEmptyString) {
    m_specialattribute_valuemax_ = new ::std::string;
  }
  m_specialattribute_valuemax_->assign(value);
}
inline void E_EquipEquip::set_m_specialattribute_valuemax(const char* value, size_t size) {
  set_has_m_specialattribute_valuemax();
  if (m_specialattribute_valuemax_ == &::google::protobuf::internal::kEmptyString) {
    m_specialattribute_valuemax_ = new ::std::string;
  }
  m_specialattribute_valuemax_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* E_EquipEquip::mutable_m_specialattribute_valuemax() {
  set_has_m_specialattribute_valuemax();
  if (m_specialattribute_valuemax_ == &::google::protobuf::internal::kEmptyString) {
    m_specialattribute_valuemax_ = new ::std::string;
  }
  return m_specialattribute_valuemax_;
}
inline ::std::string* E_EquipEquip::release_m_specialattribute_valuemax() {
  clear_has_m_specialattribute_valuemax();
  if (m_specialattribute_valuemax_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = m_specialattribute_valuemax_;
    m_specialattribute_valuemax_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void E_EquipEquip::set_allocated_m_specialattribute_valuemax(::std::string* m_specialattribute_valuemax) {
  if (m_specialattribute_valuemax_ != &::google::protobuf::internal::kEmptyString) {
    delete m_specialattribute_valuemax_;
  }
  if (m_specialattribute_valuemax) {
    set_has_m_specialattribute_valuemax();
    m_specialattribute_valuemax_ = m_specialattribute_valuemax;
  } else {
    clear_has_m_specialattribute_valuemax();
    m_specialattribute_valuemax_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string m_skillid = 31;
inline bool E_EquipEquip::has_m_skillid() const {
  return (_has_bits_[0] & 0x40000000u) != 0;
}
inline void E_EquipEquip::set_has_m_skillid() {
  _has_bits_[0] |= 0x40000000u;
}
inline void E_EquipEquip::clear_has_m_skillid() {
  _has_bits_[0] &= ~0x40000000u;
}
inline void E_EquipEquip::clear_m_skillid() {
  if (m_skillid_ != &::google::protobuf::internal::kEmptyString) {
    m_skillid_->clear();
  }
  clear_has_m_skillid();
}
inline const ::std::string& E_EquipEquip::m_skillid() const {
  return *m_skillid_;
}
inline void E_EquipEquip::set_m_skillid(const ::std::string& value) {
  set_has_m_skillid();
  if (m_skillid_ == &::google::protobuf::internal::kEmptyString) {
    m_skillid_ = new ::std::string;
  }
  m_skillid_->assign(value);
}
inline void E_EquipEquip::set_m_skillid(const char* value) {
  set_has_m_skillid();
  if (m_skillid_ == &::google::protobuf::internal::kEmptyString) {
    m_skillid_ = new ::std::string;
  }
  m_skillid_->assign(value);
}
inline void E_EquipEquip::set_m_skillid(const char* value, size_t size) {
  set_has_m_skillid();
  if (m_skillid_ == &::google::protobuf::internal::kEmptyString) {
    m_skillid_ = new ::std::string;
  }
  m_skillid_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* E_EquipEquip::mutable_m_skillid() {
  set_has_m_skillid();
  if (m_skillid_ == &::google::protobuf::internal::kEmptyString) {
    m_skillid_ = new ::std::string;
  }
  return m_skillid_;
}
inline ::std::string* E_EquipEquip::release_m_skillid() {
  clear_has_m_skillid();
  if (m_skillid_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = m_skillid_;
    m_skillid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void E_EquipEquip::set_allocated_m_skillid(::std::string* m_skillid) {
  if (m_skillid_ != &::google::protobuf::internal::kEmptyString) {
    delete m_skillid_;
  }
  if (m_skillid) {
    set_has_m_skillid();
    m_skillid_ = m_skillid;
  } else {
    clear_has_m_skillid();
    m_skillid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// repeated .proto_ff.E_EquipEquipAttributeDesc m_attribute = 32;
inline int E_EquipEquip::m_attribute_size() const {
  return m_attribute_.size();
}
inline void E_EquipEquip::clear_m_attribute() {
  m_attribute_.Clear();
}
inline const ::proto_ff::E_EquipEquipAttributeDesc& E_EquipEquip::m_attribute(int index) const {
  return m_attribute_.Get(index);
}
inline ::proto_ff::E_EquipEquipAttributeDesc* E_EquipEquip::mutable_m_attribute(int index) {
  return m_attribute_.Mutable(index);
}
inline ::proto_ff::E_EquipEquipAttributeDesc* E_EquipEquip::add_m_attribute() {
  return m_attribute_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipEquipAttributeDesc >&
E_EquipEquip::m_attribute() const {
  return m_attribute_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipEquipAttributeDesc >*
E_EquipEquip::mutable_m_attribute() {
  return &m_attribute_;
}

// repeated .proto_ff.E_EquipEquipGodattributeDesc m_godattribute = 33;
inline int E_EquipEquip::m_godattribute_size() const {
  return m_godattribute_.size();
}
inline void E_EquipEquip::clear_m_godattribute() {
  m_godattribute_.Clear();
}
inline const ::proto_ff::E_EquipEquipGodattributeDesc& E_EquipEquip::m_godattribute(int index) const {
  return m_godattribute_.Get(index);
}
inline ::proto_ff::E_EquipEquipGodattributeDesc* E_EquipEquip::mutable_m_godattribute(int index) {
  return m_godattribute_.Mutable(index);
}
inline ::proto_ff::E_EquipEquipGodattributeDesc* E_EquipEquip::add_m_godattribute() {
  return m_godattribute_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipEquipGodattributeDesc >&
E_EquipEquip::m_godattribute() const {
  return m_godattribute_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipEquipGodattributeDesc >*
E_EquipEquip::mutable_m_godattribute() {
  return &m_godattribute_;
}

// -------------------------------------------------------------------

// Sheet_EquipEquip

// repeated .proto_ff.E_EquipEquip E_EquipEquip_List = 1;
inline int Sheet_EquipEquip::e_equipequip_list_size() const {
  return e_equipequip_list_.size();
}
inline void Sheet_EquipEquip::clear_e_equipequip_list() {
  e_equipequip_list_.Clear();
}
inline const ::proto_ff::E_EquipEquip& Sheet_EquipEquip::e_equipequip_list(int index) const {
  return e_equipequip_list_.Get(index);
}
inline ::proto_ff::E_EquipEquip* Sheet_EquipEquip::mutable_e_equipequip_list(int index) {
  return e_equipequip_list_.Mutable(index);
}
inline ::proto_ff::E_EquipEquip* Sheet_EquipEquip::add_e_equipequip_list() {
  return e_equipequip_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipEquip >&
Sheet_EquipEquip::e_equipequip_list() const {
  return e_equipequip_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipEquip >*
Sheet_EquipEquip::mutable_e_equipequip_list() {
  return &e_equipequip_list_;
}

// -------------------------------------------------------------------

// E_EquipStrongTypeDesc

// optional string m_num = 1;
inline bool E_EquipStrongTypeDesc::has_m_num() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_EquipStrongTypeDesc::set_has_m_num() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_EquipStrongTypeDesc::clear_has_m_num() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_EquipStrongTypeDesc::clear_m_num() {
  if (m_num_ != &::google::protobuf::internal::kEmptyString) {
    m_num_->clear();
  }
  clear_has_m_num();
}
inline const ::std::string& E_EquipStrongTypeDesc::m_num() const {
  return *m_num_;
}
inline void E_EquipStrongTypeDesc::set_m_num(const ::std::string& value) {
  set_has_m_num();
  if (m_num_ == &::google::protobuf::internal::kEmptyString) {
    m_num_ = new ::std::string;
  }
  m_num_->assign(value);
}
inline void E_EquipStrongTypeDesc::set_m_num(const char* value) {
  set_has_m_num();
  if (m_num_ == &::google::protobuf::internal::kEmptyString) {
    m_num_ = new ::std::string;
  }
  m_num_->assign(value);
}
inline void E_EquipStrongTypeDesc::set_m_num(const char* value, size_t size) {
  set_has_m_num();
  if (m_num_ == &::google::protobuf::internal::kEmptyString) {
    m_num_ = new ::std::string;
  }
  m_num_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* E_EquipStrongTypeDesc::mutable_m_num() {
  set_has_m_num();
  if (m_num_ == &::google::protobuf::internal::kEmptyString) {
    m_num_ = new ::std::string;
  }
  return m_num_;
}
inline ::std::string* E_EquipStrongTypeDesc::release_m_num() {
  clear_has_m_num();
  if (m_num_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = m_num_;
    m_num_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void E_EquipStrongTypeDesc::set_allocated_m_num(::std::string* m_num) {
  if (m_num_ != &::google::protobuf::internal::kEmptyString) {
    delete m_num_;
  }
  if (m_num) {
    set_has_m_num();
    m_num_ = m_num;
  } else {
    clear_has_m_num();
    m_num_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 m_id = 2;
inline bool E_EquipStrongTypeDesc::has_m_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_EquipStrongTypeDesc::set_has_m_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_EquipStrongTypeDesc::clear_has_m_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_EquipStrongTypeDesc::clear_m_id() {
  m_id_ = 0;
  clear_has_m_id();
}
inline ::google::protobuf::int32 E_EquipStrongTypeDesc::m_id() const {
  return m_id_;
}
inline void E_EquipStrongTypeDesc::set_m_id(::google::protobuf::int32 value) {
  set_has_m_id();
  m_id_ = value;
}

// -------------------------------------------------------------------

// E_EquipStrong

// optional int64 m_id = 1;
inline bool E_EquipStrong::has_m_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_EquipStrong::set_has_m_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_EquipStrong::clear_has_m_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_EquipStrong::clear_m_id() {
  m_id_ = GOOGLE_LONGLONG(0);
  clear_has_m_id();
}
inline ::google::protobuf::int64 E_EquipStrong::m_id() const {
  return m_id_;
}
inline void E_EquipStrong::set_m_id(::google::protobuf::int64 value) {
  set_has_m_id();
  m_id_ = value;
}

// optional int32 m_position = 2;
inline bool E_EquipStrong::has_m_position() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_EquipStrong::set_has_m_position() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_EquipStrong::clear_has_m_position() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_EquipStrong::clear_m_position() {
  m_position_ = 0;
  clear_has_m_position();
}
inline ::google::protobuf::int32 E_EquipStrong::m_position() const {
  return m_position_;
}
inline void E_EquipStrong::set_m_position(::google::protobuf::int32 value) {
  set_has_m_position();
  m_position_ = value;
}

// optional int32 m_wearquality = 3;
inline bool E_EquipStrong::has_m_wearquality() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void E_EquipStrong::set_has_m_wearquality() {
  _has_bits_[0] |= 0x00000004u;
}
inline void E_EquipStrong::clear_has_m_wearquality() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void E_EquipStrong::clear_m_wearquality() {
  m_wearquality_ = 0;
  clear_has_m_wearquality();
}
inline ::google::protobuf::int32 E_EquipStrong::m_wearquality() const {
  return m_wearquality_;
}
inline void E_EquipStrong::set_m_wearquality(::google::protobuf::int32 value) {
  set_has_m_wearquality();
  m_wearquality_ = value;
}

// optional int32 m_srtongup = 4;
inline bool E_EquipStrong::has_m_srtongup() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void E_EquipStrong::set_has_m_srtongup() {
  _has_bits_[0] |= 0x00000008u;
}
inline void E_EquipStrong::clear_has_m_srtongup() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void E_EquipStrong::clear_m_srtongup() {
  m_srtongup_ = 0;
  clear_has_m_srtongup();
}
inline ::google::protobuf::int32 E_EquipStrong::m_srtongup() const {
  return m_srtongup_;
}
inline void E_EquipStrong::set_m_srtongup(::google::protobuf::int32 value) {
  set_has_m_srtongup();
  m_srtongup_ = value;
}

// repeated .proto_ff.E_EquipStrongTypeDesc m_type = 5;
inline int E_EquipStrong::m_type_size() const {
  return m_type_.size();
}
inline void E_EquipStrong::clear_m_type() {
  m_type_.Clear();
}
inline const ::proto_ff::E_EquipStrongTypeDesc& E_EquipStrong::m_type(int index) const {
  return m_type_.Get(index);
}
inline ::proto_ff::E_EquipStrongTypeDesc* E_EquipStrong::mutable_m_type(int index) {
  return m_type_.Mutable(index);
}
inline ::proto_ff::E_EquipStrongTypeDesc* E_EquipStrong::add_m_type() {
  return m_type_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipStrongTypeDesc >&
E_EquipStrong::m_type() const {
  return m_type_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipStrongTypeDesc >*
E_EquipStrong::mutable_m_type() {
  return &m_type_;
}

// -------------------------------------------------------------------

// Sheet_EquipStrong

// repeated .proto_ff.E_EquipStrong E_EquipStrong_List = 1;
inline int Sheet_EquipStrong::e_equipstrong_list_size() const {
  return e_equipstrong_list_.size();
}
inline void Sheet_EquipStrong::clear_e_equipstrong_list() {
  e_equipstrong_list_.Clear();
}
inline const ::proto_ff::E_EquipStrong& Sheet_EquipStrong::e_equipstrong_list(int index) const {
  return e_equipstrong_list_.Get(index);
}
inline ::proto_ff::E_EquipStrong* Sheet_EquipStrong::mutable_e_equipstrong_list(int index) {
  return e_equipstrong_list_.Mutable(index);
}
inline ::proto_ff::E_EquipStrong* Sheet_EquipStrong::add_e_equipstrong_list() {
  return e_equipstrong_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipStrong >&
Sheet_EquipStrong::e_equipstrong_list() const {
  return e_equipstrong_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipStrong >*
Sheet_EquipStrong::mutable_e_equipstrong_list() {
  return &e_equipstrong_list_;
}

// -------------------------------------------------------------------

// E_EquipStrongexp

// optional int32 m_lv = 1;
inline bool E_EquipStrongexp::has_m_lv() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_EquipStrongexp::set_has_m_lv() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_EquipStrongexp::clear_has_m_lv() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_EquipStrongexp::clear_m_lv() {
  m_lv_ = 0;
  clear_has_m_lv();
}
inline ::google::protobuf::int32 E_EquipStrongexp::m_lv() const {
  return m_lv_;
}
inline void E_EquipStrongexp::set_m_lv(::google::protobuf::int32 value) {
  set_has_m_lv();
  m_lv_ = value;
}

// optional int32 m_gold = 2;
inline bool E_EquipStrongexp::has_m_gold() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_EquipStrongexp::set_has_m_gold() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_EquipStrongexp::clear_has_m_gold() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_EquipStrongexp::clear_m_gold() {
  m_gold_ = 0;
  clear_has_m_gold();
}
inline ::google::protobuf::int32 E_EquipStrongexp::m_gold() const {
  return m_gold_;
}
inline void E_EquipStrongexp::set_m_gold(::google::protobuf::int32 value) {
  set_has_m_gold();
  m_gold_ = value;
}

// repeated int32 m_costitem = 3;
inline int E_EquipStrongexp::m_costitem_size() const {
  return m_costitem_.size();
}
inline void E_EquipStrongexp::clear_m_costitem() {
  m_costitem_.Clear();
}
inline ::google::protobuf::int32 E_EquipStrongexp::m_costitem(int index) const {
  return m_costitem_.Get(index);
}
inline void E_EquipStrongexp::set_m_costitem(int index, ::google::protobuf::int32 value) {
  m_costitem_.Set(index, value);
}
inline void E_EquipStrongexp::add_m_costitem(::google::protobuf::int32 value) {
  m_costitem_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
E_EquipStrongexp::m_costitem() const {
  return m_costitem_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
E_EquipStrongexp::mutable_m_costitem() {
  return &m_costitem_;
}

// repeated string m_positiontype = 4;
inline int E_EquipStrongexp::m_positiontype_size() const {
  return m_positiontype_.size();
}
inline void E_EquipStrongexp::clear_m_positiontype() {
  m_positiontype_.Clear();
}
inline const ::std::string& E_EquipStrongexp::m_positiontype(int index) const {
  return m_positiontype_.Get(index);
}
inline ::std::string* E_EquipStrongexp::mutable_m_positiontype(int index) {
  return m_positiontype_.Mutable(index);
}
inline void E_EquipStrongexp::set_m_positiontype(int index, const ::std::string& value) {
  m_positiontype_.Mutable(index)->assign(value);
}
inline void E_EquipStrongexp::set_m_positiontype(int index, const char* value) {
  m_positiontype_.Mutable(index)->assign(value);
}
inline void E_EquipStrongexp::set_m_positiontype(int index, const char* value, size_t size) {
  m_positiontype_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* E_EquipStrongexp::add_m_positiontype() {
  return m_positiontype_.Add();
}
inline void E_EquipStrongexp::add_m_positiontype(const ::std::string& value) {
  m_positiontype_.Add()->assign(value);
}
inline void E_EquipStrongexp::add_m_positiontype(const char* value) {
  m_positiontype_.Add()->assign(value);
}
inline void E_EquipStrongexp::add_m_positiontype(const char* value, size_t size) {
  m_positiontype_.Add()->assign(reinterpret_cast<const char*>(value), size);
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
E_EquipStrongexp::m_positiontype() const {
  return m_positiontype_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
E_EquipStrongexp::mutable_m_positiontype() {
  return &m_positiontype_;
}

// repeated int32 m_costnum = 5;
inline int E_EquipStrongexp::m_costnum_size() const {
  return m_costnum_.size();
}
inline void E_EquipStrongexp::clear_m_costnum() {
  m_costnum_.Clear();
}
inline ::google::protobuf::int32 E_EquipStrongexp::m_costnum(int index) const {
  return m_costnum_.Get(index);
}
inline void E_EquipStrongexp::set_m_costnum(int index, ::google::protobuf::int32 value) {
  m_costnum_.Set(index, value);
}
inline void E_EquipStrongexp::add_m_costnum(::google::protobuf::int32 value) {
  m_costnum_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
E_EquipStrongexp::m_costnum() const {
  return m_costnum_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
E_EquipStrongexp::mutable_m_costnum() {
  return &m_costnum_;
}

// -------------------------------------------------------------------

// Sheet_EquipStrongexp

// repeated .proto_ff.E_EquipStrongexp E_EquipStrongexp_List = 1;
inline int Sheet_EquipStrongexp::e_equipstrongexp_list_size() const {
  return e_equipstrongexp_list_.size();
}
inline void Sheet_EquipStrongexp::clear_e_equipstrongexp_list() {
  e_equipstrongexp_list_.Clear();
}
inline const ::proto_ff::E_EquipStrongexp& Sheet_EquipStrongexp::e_equipstrongexp_list(int index) const {
  return e_equipstrongexp_list_.Get(index);
}
inline ::proto_ff::E_EquipStrongexp* Sheet_EquipStrongexp::mutable_e_equipstrongexp_list(int index) {
  return e_equipstrongexp_list_.Mutable(index);
}
inline ::proto_ff::E_EquipStrongexp* Sheet_EquipStrongexp::add_e_equipstrongexp_list() {
  return e_equipstrongexp_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipStrongexp >&
Sheet_EquipStrongexp::e_equipstrongexp_list() const {
  return e_equipstrongexp_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipStrongexp >*
Sheet_EquipStrongexp::mutable_e_equipstrongexp_list() {
  return &e_equipstrongexp_list_;
}

// -------------------------------------------------------------------

// E_EquipStrongtotalAttributeDesc

// optional int32 m_type = 1;
inline bool E_EquipStrongtotalAttributeDesc::has_m_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_EquipStrongtotalAttributeDesc::set_has_m_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_EquipStrongtotalAttributeDesc::clear_has_m_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_EquipStrongtotalAttributeDesc::clear_m_type() {
  m_type_ = 0;
  clear_has_m_type();
}
inline ::google::protobuf::int32 E_EquipStrongtotalAttributeDesc::m_type() const {
  return m_type_;
}
inline void E_EquipStrongtotalAttributeDesc::set_m_type(::google::protobuf::int32 value) {
  set_has_m_type();
  m_type_ = value;
}

// optional int32 m_value = 2;
inline bool E_EquipStrongtotalAttributeDesc::has_m_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_EquipStrongtotalAttributeDesc::set_has_m_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_EquipStrongtotalAttributeDesc::clear_has_m_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_EquipStrongtotalAttributeDesc::clear_m_value() {
  m_value_ = 0;
  clear_has_m_value();
}
inline ::google::protobuf::int32 E_EquipStrongtotalAttributeDesc::m_value() const {
  return m_value_;
}
inline void E_EquipStrongtotalAttributeDesc::set_m_value(::google::protobuf::int32 value) {
  set_has_m_value();
  m_value_ = value;
}

// -------------------------------------------------------------------

// E_EquipStrongtotal

// optional int64 m_id = 1;
inline bool E_EquipStrongtotal::has_m_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_EquipStrongtotal::set_has_m_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_EquipStrongtotal::clear_has_m_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_EquipStrongtotal::clear_m_id() {
  m_id_ = GOOGLE_LONGLONG(0);
  clear_has_m_id();
}
inline ::google::protobuf::int64 E_EquipStrongtotal::m_id() const {
  return m_id_;
}
inline void E_EquipStrongtotal::set_m_id(::google::protobuf::int64 value) {
  set_has_m_id();
  m_id_ = value;
}

// optional int32 m_idtype = 2;
inline bool E_EquipStrongtotal::has_m_idtype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_EquipStrongtotal::set_has_m_idtype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_EquipStrongtotal::clear_has_m_idtype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_EquipStrongtotal::clear_m_idtype() {
  m_idtype_ = 0;
  clear_has_m_idtype();
}
inline ::google::protobuf::int32 E_EquipStrongtotal::m_idtype() const {
  return m_idtype_;
}
inline void E_EquipStrongtotal::set_m_idtype(::google::protobuf::int32 value) {
  set_has_m_idtype();
  m_idtype_ = value;
}

// optional int32 m_idnum = 3;
inline bool E_EquipStrongtotal::has_m_idnum() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void E_EquipStrongtotal::set_has_m_idnum() {
  _has_bits_[0] |= 0x00000004u;
}
inline void E_EquipStrongtotal::clear_has_m_idnum() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void E_EquipStrongtotal::clear_m_idnum() {
  m_idnum_ = 0;
  clear_has_m_idnum();
}
inline ::google::protobuf::int32 E_EquipStrongtotal::m_idnum() const {
  return m_idnum_;
}
inline void E_EquipStrongtotal::set_m_idnum(::google::protobuf::int32 value) {
  set_has_m_idnum();
  m_idnum_ = value;
}

// repeated .proto_ff.E_EquipStrongtotalAttributeDesc m_attribute = 4;
inline int E_EquipStrongtotal::m_attribute_size() const {
  return m_attribute_.size();
}
inline void E_EquipStrongtotal::clear_m_attribute() {
  m_attribute_.Clear();
}
inline const ::proto_ff::E_EquipStrongtotalAttributeDesc& E_EquipStrongtotal::m_attribute(int index) const {
  return m_attribute_.Get(index);
}
inline ::proto_ff::E_EquipStrongtotalAttributeDesc* E_EquipStrongtotal::mutable_m_attribute(int index) {
  return m_attribute_.Mutable(index);
}
inline ::proto_ff::E_EquipStrongtotalAttributeDesc* E_EquipStrongtotal::add_m_attribute() {
  return m_attribute_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipStrongtotalAttributeDesc >&
E_EquipStrongtotal::m_attribute() const {
  return m_attribute_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipStrongtotalAttributeDesc >*
E_EquipStrongtotal::mutable_m_attribute() {
  return &m_attribute_;
}

// -------------------------------------------------------------------

// Sheet_EquipStrongtotal

// repeated .proto_ff.E_EquipStrongtotal E_EquipStrongtotal_List = 1;
inline int Sheet_EquipStrongtotal::e_equipstrongtotal_list_size() const {
  return e_equipstrongtotal_list_.size();
}
inline void Sheet_EquipStrongtotal::clear_e_equipstrongtotal_list() {
  e_equipstrongtotal_list_.Clear();
}
inline const ::proto_ff::E_EquipStrongtotal& Sheet_EquipStrongtotal::e_equipstrongtotal_list(int index) const {
  return e_equipstrongtotal_list_.Get(index);
}
inline ::proto_ff::E_EquipStrongtotal* Sheet_EquipStrongtotal::mutable_e_equipstrongtotal_list(int index) {
  return e_equipstrongtotal_list_.Mutable(index);
}
inline ::proto_ff::E_EquipStrongtotal* Sheet_EquipStrongtotal::add_e_equipstrongtotal_list() {
  return e_equipstrongtotal_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipStrongtotal >&
Sheet_EquipStrongtotal::e_equipstrongtotal_list() const {
  return e_equipstrongtotal_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipStrongtotal >*
Sheet_EquipStrongtotal::mutable_e_equipstrongtotal_list() {
  return &e_equipstrongtotal_list_;
}

// -------------------------------------------------------------------

// E_EquipGem

// optional int32 m_position = 1;
inline bool E_EquipGem::has_m_position() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_EquipGem::set_has_m_position() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_EquipGem::clear_has_m_position() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_EquipGem::clear_m_position() {
  m_position_ = 0;
  clear_has_m_position();
}
inline ::google::protobuf::int32 E_EquipGem::m_position() const {
  return m_position_;
}
inline void E_EquipGem::set_m_position(::google::protobuf::int32 value) {
  set_has_m_position();
  m_position_ = value;
}

// optional string m_gemtype = 2;
inline bool E_EquipGem::has_m_gemtype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_EquipGem::set_has_m_gemtype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_EquipGem::clear_has_m_gemtype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_EquipGem::clear_m_gemtype() {
  if (m_gemtype_ != &::google::protobuf::internal::kEmptyString) {
    m_gemtype_->clear();
  }
  clear_has_m_gemtype();
}
inline const ::std::string& E_EquipGem::m_gemtype() const {
  return *m_gemtype_;
}
inline void E_EquipGem::set_m_gemtype(const ::std::string& value) {
  set_has_m_gemtype();
  if (m_gemtype_ == &::google::protobuf::internal::kEmptyString) {
    m_gemtype_ = new ::std::string;
  }
  m_gemtype_->assign(value);
}
inline void E_EquipGem::set_m_gemtype(const char* value) {
  set_has_m_gemtype();
  if (m_gemtype_ == &::google::protobuf::internal::kEmptyString) {
    m_gemtype_ = new ::std::string;
  }
  m_gemtype_->assign(value);
}
inline void E_EquipGem::set_m_gemtype(const char* value, size_t size) {
  set_has_m_gemtype();
  if (m_gemtype_ == &::google::protobuf::internal::kEmptyString) {
    m_gemtype_ = new ::std::string;
  }
  m_gemtype_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* E_EquipGem::mutable_m_gemtype() {
  set_has_m_gemtype();
  if (m_gemtype_ == &::google::protobuf::internal::kEmptyString) {
    m_gemtype_ = new ::std::string;
  }
  return m_gemtype_;
}
inline ::std::string* E_EquipGem::release_m_gemtype() {
  clear_has_m_gemtype();
  if (m_gemtype_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = m_gemtype_;
    m_gemtype_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void E_EquipGem::set_allocated_m_gemtype(::std::string* m_gemtype) {
  if (m_gemtype_ != &::google::protobuf::internal::kEmptyString) {
    delete m_gemtype_;
  }
  if (m_gemtype) {
    set_has_m_gemtype();
    m_gemtype_ = m_gemtype;
  } else {
    clear_has_m_gemtype();
    m_gemtype_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 m_speciallygemtype = 3;
inline bool E_EquipGem::has_m_speciallygemtype() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void E_EquipGem::set_has_m_speciallygemtype() {
  _has_bits_[0] |= 0x00000004u;
}
inline void E_EquipGem::clear_has_m_speciallygemtype() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void E_EquipGem::clear_m_speciallygemtype() {
  m_speciallygemtype_ = 0;
  clear_has_m_speciallygemtype();
}
inline ::google::protobuf::int32 E_EquipGem::m_speciallygemtype() const {
  return m_speciallygemtype_;
}
inline void E_EquipGem::set_m_speciallygemtype(::google::protobuf::int32 value) {
  set_has_m_speciallygemtype();
  m_speciallygemtype_ = value;
}

// optional int32 m_payunlockitem = 4;
inline bool E_EquipGem::has_m_payunlockitem() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void E_EquipGem::set_has_m_payunlockitem() {
  _has_bits_[0] |= 0x00000008u;
}
inline void E_EquipGem::clear_has_m_payunlockitem() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void E_EquipGem::clear_m_payunlockitem() {
  m_payunlockitem_ = 0;
  clear_has_m_payunlockitem();
}
inline ::google::protobuf::int32 E_EquipGem::m_payunlockitem() const {
  return m_payunlockitem_;
}
inline void E_EquipGem::set_m_payunlockitem(::google::protobuf::int32 value) {
  set_has_m_payunlockitem();
  m_payunlockitem_ = value;
}

// optional int32 m_payunlocknnm = 5;
inline bool E_EquipGem::has_m_payunlocknnm() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void E_EquipGem::set_has_m_payunlocknnm() {
  _has_bits_[0] |= 0x00000010u;
}
inline void E_EquipGem::clear_has_m_payunlocknnm() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void E_EquipGem::clear_m_payunlocknnm() {
  m_payunlocknnm_ = 0;
  clear_has_m_payunlocknnm();
}
inline ::google::protobuf::int32 E_EquipGem::m_payunlocknnm() const {
  return m_payunlocknnm_;
}
inline void E_EquipGem::set_m_payunlocknnm(::google::protobuf::int32 value) {
  set_has_m_payunlocknnm();
  m_payunlocknnm_ = value;
}

// repeated int32 m_gemunlock = 6;
inline int E_EquipGem::m_gemunlock_size() const {
  return m_gemunlock_.size();
}
inline void E_EquipGem::clear_m_gemunlock() {
  m_gemunlock_.Clear();
}
inline ::google::protobuf::int32 E_EquipGem::m_gemunlock(int index) const {
  return m_gemunlock_.Get(index);
}
inline void E_EquipGem::set_m_gemunlock(int index, ::google::protobuf::int32 value) {
  m_gemunlock_.Set(index, value);
}
inline void E_EquipGem::add_m_gemunlock(::google::protobuf::int32 value) {
  m_gemunlock_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
E_EquipGem::m_gemunlock() const {
  return m_gemunlock_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
E_EquipGem::mutable_m_gemunlock() {
  return &m_gemunlock_;
}

// -------------------------------------------------------------------

// Sheet_EquipGem

// repeated .proto_ff.E_EquipGem E_EquipGem_List = 1;
inline int Sheet_EquipGem::e_equipgem_list_size() const {
  return e_equipgem_list_.size();
}
inline void Sheet_EquipGem::clear_e_equipgem_list() {
  e_equipgem_list_.Clear();
}
inline const ::proto_ff::E_EquipGem& Sheet_EquipGem::e_equipgem_list(int index) const {
  return e_equipgem_list_.Get(index);
}
inline ::proto_ff::E_EquipGem* Sheet_EquipGem::mutable_e_equipgem_list(int index) {
  return e_equipgem_list_.Mutable(index);
}
inline ::proto_ff::E_EquipGem* Sheet_EquipGem::add_e_equipgem_list() {
  return e_equipgem_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipGem >&
Sheet_EquipGem::e_equipgem_list() const {
  return e_equipgem_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipGem >*
Sheet_EquipGem::mutable_e_equipgem_list() {
  return &e_equipgem_list_;
}

// -------------------------------------------------------------------

// E_EquipStoveattAttributeDesc

// optional int32 m_type = 1;
inline bool E_EquipStoveattAttributeDesc::has_m_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_EquipStoveattAttributeDesc::set_has_m_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_EquipStoveattAttributeDesc::clear_has_m_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_EquipStoveattAttributeDesc::clear_m_type() {
  m_type_ = 0;
  clear_has_m_type();
}
inline ::google::protobuf::int32 E_EquipStoveattAttributeDesc::m_type() const {
  return m_type_;
}
inline void E_EquipStoveattAttributeDesc::set_m_type(::google::protobuf::int32 value) {
  set_has_m_type();
  m_type_ = value;
}

// optional int32 m_value = 2;
inline bool E_EquipStoveattAttributeDesc::has_m_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_EquipStoveattAttributeDesc::set_has_m_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_EquipStoveattAttributeDesc::clear_has_m_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_EquipStoveattAttributeDesc::clear_m_value() {
  m_value_ = 0;
  clear_has_m_value();
}
inline ::google::protobuf::int32 E_EquipStoveattAttributeDesc::m_value() const {
  return m_value_;
}
inline void E_EquipStoveattAttributeDesc::set_m_value(::google::protobuf::int32 value) {
  set_has_m_value();
  m_value_ = value;
}

// -------------------------------------------------------------------

// E_EquipStoveatt

// optional int32 m_lv = 1;
inline bool E_EquipStoveatt::has_m_lv() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_EquipStoveatt::set_has_m_lv() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_EquipStoveatt::clear_has_m_lv() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_EquipStoveatt::clear_m_lv() {
  m_lv_ = 0;
  clear_has_m_lv();
}
inline ::google::protobuf::int32 E_EquipStoveatt::m_lv() const {
  return m_lv_;
}
inline void E_EquipStoveatt::set_m_lv(::google::protobuf::int32 value) {
  set_has_m_lv();
  m_lv_ = value;
}

// optional int64 m_exp = 2;
inline bool E_EquipStoveatt::has_m_exp() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_EquipStoveatt::set_has_m_exp() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_EquipStoveatt::clear_has_m_exp() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_EquipStoveatt::clear_m_exp() {
  m_exp_ = GOOGLE_LONGLONG(0);
  clear_has_m_exp();
}
inline ::google::protobuf::int64 E_EquipStoveatt::m_exp() const {
  return m_exp_;
}
inline void E_EquipStoveatt::set_m_exp(::google::protobuf::int64 value) {
  set_has_m_exp();
  m_exp_ = value;
}

// repeated .proto_ff.E_EquipStoveattAttributeDesc m_attribute = 3;
inline int E_EquipStoveatt::m_attribute_size() const {
  return m_attribute_.size();
}
inline void E_EquipStoveatt::clear_m_attribute() {
  m_attribute_.Clear();
}
inline const ::proto_ff::E_EquipStoveattAttributeDesc& E_EquipStoveatt::m_attribute(int index) const {
  return m_attribute_.Get(index);
}
inline ::proto_ff::E_EquipStoveattAttributeDesc* E_EquipStoveatt::mutable_m_attribute(int index) {
  return m_attribute_.Mutable(index);
}
inline ::proto_ff::E_EquipStoveattAttributeDesc* E_EquipStoveatt::add_m_attribute() {
  return m_attribute_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipStoveattAttributeDesc >&
E_EquipStoveatt::m_attribute() const {
  return m_attribute_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipStoveattAttributeDesc >*
E_EquipStoveatt::mutable_m_attribute() {
  return &m_attribute_;
}

// -------------------------------------------------------------------

// Sheet_EquipStoveatt

// repeated .proto_ff.E_EquipStoveatt E_EquipStoveatt_List = 1;
inline int Sheet_EquipStoveatt::e_equipstoveatt_list_size() const {
  return e_equipstoveatt_list_.size();
}
inline void Sheet_EquipStoveatt::clear_e_equipstoveatt_list() {
  e_equipstoveatt_list_.Clear();
}
inline const ::proto_ff::E_EquipStoveatt& Sheet_EquipStoveatt::e_equipstoveatt_list(int index) const {
  return e_equipstoveatt_list_.Get(index);
}
inline ::proto_ff::E_EquipStoveatt* Sheet_EquipStoveatt::mutable_e_equipstoveatt_list(int index) {
  return e_equipstoveatt_list_.Mutable(index);
}
inline ::proto_ff::E_EquipStoveatt* Sheet_EquipStoveatt::add_e_equipstoveatt_list() {
  return e_equipstoveatt_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipStoveatt >&
Sheet_EquipStoveatt::e_equipstoveatt_list() const {
  return e_equipstoveatt_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipStoveatt >*
Sheet_EquipStoveatt::mutable_e_equipstoveatt_list() {
  return &e_equipstoveatt_list_;
}

// -------------------------------------------------------------------

// E_EquipStoveexp

// optional int32 m_id = 1;
inline bool E_EquipStoveexp::has_m_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_EquipStoveexp::set_has_m_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_EquipStoveexp::clear_has_m_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_EquipStoveexp::clear_m_id() {
  m_id_ = 0;
  clear_has_m_id();
}
inline ::google::protobuf::int32 E_EquipStoveexp::m_id() const {
  return m_id_;
}
inline void E_EquipStoveexp::set_m_id(::google::protobuf::int32 value) {
  set_has_m_id();
  m_id_ = value;
}

// optional int32 m_exp = 2;
inline bool E_EquipStoveexp::has_m_exp() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_EquipStoveexp::set_has_m_exp() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_EquipStoveexp::clear_has_m_exp() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_EquipStoveexp::clear_m_exp() {
  m_exp_ = 0;
  clear_has_m_exp();
}
inline ::google::protobuf::int32 E_EquipStoveexp::m_exp() const {
  return m_exp_;
}
inline void E_EquipStoveexp::set_m_exp(::google::protobuf::int32 value) {
  set_has_m_exp();
  m_exp_ = value;
}

// optional int32 m_wearquality = 3;
inline bool E_EquipStoveexp::has_m_wearquality() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void E_EquipStoveexp::set_has_m_wearquality() {
  _has_bits_[0] |= 0x00000004u;
}
inline void E_EquipStoveexp::clear_has_m_wearquality() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void E_EquipStoveexp::clear_m_wearquality() {
  m_wearquality_ = 0;
  clear_has_m_wearquality();
}
inline ::google::protobuf::int32 E_EquipStoveexp::m_wearquality() const {
  return m_wearquality_;
}
inline void E_EquipStoveexp::set_m_wearquality(::google::protobuf::int32 value) {
  set_has_m_wearquality();
  m_wearquality_ = value;
}

// optional int32 m_quality = 4;
inline bool E_EquipStoveexp::has_m_quality() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void E_EquipStoveexp::set_has_m_quality() {
  _has_bits_[0] |= 0x00000008u;
}
inline void E_EquipStoveexp::clear_has_m_quality() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void E_EquipStoveexp::clear_m_quality() {
  m_quality_ = 0;
  clear_has_m_quality();
}
inline ::google::protobuf::int32 E_EquipStoveexp::m_quality() const {
  return m_quality_;
}
inline void E_EquipStoveexp::set_m_quality(::google::protobuf::int32 value) {
  set_has_m_quality();
  m_quality_ = value;
}

// -------------------------------------------------------------------

// Sheet_EquipStoveexp

// repeated .proto_ff.E_EquipStoveexp E_EquipStoveexp_List = 1;
inline int Sheet_EquipStoveexp::e_equipstoveexp_list_size() const {
  return e_equipstoveexp_list_.size();
}
inline void Sheet_EquipStoveexp::clear_e_equipstoveexp_list() {
  e_equipstoveexp_list_.Clear();
}
inline const ::proto_ff::E_EquipStoveexp& Sheet_EquipStoveexp::e_equipstoveexp_list(int index) const {
  return e_equipstoveexp_list_.Get(index);
}
inline ::proto_ff::E_EquipStoveexp* Sheet_EquipStoveexp::mutable_e_equipstoveexp_list(int index) {
  return e_equipstoveexp_list_.Mutable(index);
}
inline ::proto_ff::E_EquipStoveexp* Sheet_EquipStoveexp::add_e_equipstoveexp_list() {
  return e_equipstoveexp_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipStoveexp >&
Sheet_EquipStoveexp::e_equipstoveexp_list() const {
  return e_equipstoveexp_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipStoveexp >*
Sheet_EquipStoveexp::mutable_e_equipstoveexp_list() {
  return &e_equipstoveexp_list_;
}

// -------------------------------------------------------------------

// E_EquipGrade

// optional int32 m_id = 1;
inline bool E_EquipGrade::has_m_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_EquipGrade::set_has_m_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_EquipGrade::clear_has_m_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_EquipGrade::clear_m_id() {
  m_id_ = 0;
  clear_has_m_id();
}
inline ::google::protobuf::int32 E_EquipGrade::m_id() const {
  return m_id_;
}
inline void E_EquipGrade::set_m_id(::google::protobuf::int32 value) {
  set_has_m_id();
  m_id_ = value;
}

// -------------------------------------------------------------------

// Sheet_EquipGrade

// repeated .proto_ff.E_EquipGrade E_EquipGrade_List = 1;
inline int Sheet_EquipGrade::e_equipgrade_list_size() const {
  return e_equipgrade_list_.size();
}
inline void Sheet_EquipGrade::clear_e_equipgrade_list() {
  e_equipgrade_list_.Clear();
}
inline const ::proto_ff::E_EquipGrade& Sheet_EquipGrade::e_equipgrade_list(int index) const {
  return e_equipgrade_list_.Get(index);
}
inline ::proto_ff::E_EquipGrade* Sheet_EquipGrade::mutable_e_equipgrade_list(int index) {
  return e_equipgrade_list_.Mutable(index);
}
inline ::proto_ff::E_EquipGrade* Sheet_EquipGrade::add_e_equipgrade_list() {
  return e_equipgrade_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipGrade >&
Sheet_EquipGrade::e_equipgrade_list() const {
  return e_equipgrade_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipGrade >*
Sheet_EquipGrade::mutable_e_equipgrade_list() {
  return &e_equipgrade_list_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto_ff

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_equip_2eproto__INCLUDED
