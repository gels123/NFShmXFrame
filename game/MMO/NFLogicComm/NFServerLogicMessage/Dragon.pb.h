// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Dragon.proto

#ifndef PROTOBUF_Dragon_2eproto__INCLUDED
#define PROTOBUF_Dragon_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "Com.pb.h"
#include "ComDefine.pb.h"
// @@protoc_insertion_point(includes)

namespace proto_ff {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_Dragon_2eproto();
void protobuf_AssignDesc_Dragon_2eproto();
void protobuf_ShutdownFile_Dragon_2eproto();

class ShadowProto;
class HaloProto;
class Dragon_InfoReq;
class Dragon_InfoRsp;
class Dragon_UpgradeReq;
class Dragon_UpgradeRsp;
class Dragon_UseFragReq;
class Dragon_UseFragRsp;
class Dragon_StarReq;
class Dragon_StarRsp;
class Dragon_FatansyReq;
class Dragon_FatansyRsp;
class Dragon_ShadowInfoRsp;
class Dragon_HaloInfoRsp;

// ===================================================================

class ShadowProto : public ::google::protobuf::Message {
 public:
  ShadowProto();
  virtual ~ShadowProto();

  ShadowProto(const ShadowProto& from);

  inline ShadowProto& operator=(const ShadowProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ShadowProto& default_instance();

  void Swap(ShadowProto* other);

  // implements Message ----------------------------------------------

  ShadowProto* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ShadowProto& from);
  void MergeFrom(const ShadowProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 lev = 1;
  inline bool has_lev() const;
  inline void clear_lev();
  static const int kLevFieldNumber = 1;
  inline ::google::protobuf::int32 lev() const;
  inline void set_lev(::google::protobuf::int32 value);

  // optional int32 exp = 2;
  inline bool has_exp() const;
  inline void clear_exp();
  static const int kExpFieldNumber = 2;
  inline ::google::protobuf::int32 exp() const;
  inline void set_exp(::google::protobuf::int32 value);

  // optional int32 star = 3;
  inline bool has_star() const;
  inline void clear_star();
  static const int kStarFieldNumber = 3;
  inline ::google::protobuf::int32 star() const;
  inline void set_star(::google::protobuf::int32 value);

  // optional int32 lucky = 4;
  inline bool has_lucky() const;
  inline void clear_lucky();
  static const int kLuckyFieldNumber = 4;
  inline ::google::protobuf::int32 lucky() const;
  inline void set_lucky(::google::protobuf::int32 value);

  // repeated .proto_ff.ComPair frag = 5;
  inline int frag_size() const;
  inline void clear_frag();
  static const int kFragFieldNumber = 5;
  inline const ::proto_ff::ComPair& frag(int index) const;
  inline ::proto_ff::ComPair* mutable_frag(int index);
  inline ::proto_ff::ComPair* add_frag();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair >&
      frag() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair >*
      mutable_frag();

  // optional int32 curstar = 6;
  inline bool has_curstar() const;
  inline void clear_curstar();
  static const int kCurstarFieldNumber = 6;
  inline ::google::protobuf::int32 curstar() const;
  inline void set_curstar(::google::protobuf::int32 value);

  // repeated .proto_ff.ComPair64 skill = 7;
  inline int skill_size() const;
  inline void clear_skill();
  static const int kSkillFieldNumber = 7;
  inline const ::proto_ff::ComPair64& skill(int index) const;
  inline ::proto_ff::ComPair64* mutable_skill(int index);
  inline ::proto_ff::ComPair64* add_skill();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair64 >&
      skill() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair64 >*
      mutable_skill();

  // @@protoc_insertion_point(class_scope:proto_ff.ShadowProto)
 private:
  inline void set_has_lev();
  inline void clear_has_lev();
  inline void set_has_exp();
  inline void clear_has_exp();
  inline void set_has_star();
  inline void clear_has_star();
  inline void set_has_lucky();
  inline void clear_has_lucky();
  inline void set_has_curstar();
  inline void clear_has_curstar();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 lev_;
  ::google::protobuf::int32 exp_;
  ::google::protobuf::int32 star_;
  ::google::protobuf::int32 lucky_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair > frag_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair64 > skill_;
  ::google::protobuf::int32 curstar_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  friend void  protobuf_AddDesc_Dragon_2eproto();
  friend void protobuf_AssignDesc_Dragon_2eproto();
  friend void protobuf_ShutdownFile_Dragon_2eproto();

  void InitAsDefaultInstance();
  static ShadowProto* default_instance_;
};
// -------------------------------------------------------------------

class HaloProto : public ::google::protobuf::Message {
 public:
  HaloProto();
  virtual ~HaloProto();

  HaloProto(const HaloProto& from);

  inline HaloProto& operator=(const HaloProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HaloProto& default_instance();

  void Swap(HaloProto* other);

  // implements Message ----------------------------------------------

  HaloProto* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HaloProto& from);
  void MergeFrom(const HaloProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.ComPair info = 1;
  inline int info_size() const;
  inline void clear_info();
  static const int kInfoFieldNumber = 1;
  inline const ::proto_ff::ComPair& info(int index) const;
  inline ::proto_ff::ComPair* mutable_info(int index);
  inline ::proto_ff::ComPair* add_info();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair >&
      info() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair >*
      mutable_info();

  // optional int32 curid = 2;
  inline bool has_curid() const;
  inline void clear_curid();
  static const int kCuridFieldNumber = 2;
  inline ::google::protobuf::int32 curid() const;
  inline void set_curid(::google::protobuf::int32 value);

  // optional int32 curstar = 3;
  inline bool has_curstar() const;
  inline void clear_curstar();
  static const int kCurstarFieldNumber = 3;
  inline ::google::protobuf::int32 curstar() const;
  inline void set_curstar(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.HaloProto)
 private:
  inline void set_has_curid();
  inline void clear_has_curid();
  inline void set_has_curstar();
  inline void clear_has_curstar();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair > info_;
  ::google::protobuf::int32 curid_;
  ::google::protobuf::int32 curstar_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_Dragon_2eproto();
  friend void protobuf_AssignDesc_Dragon_2eproto();
  friend void protobuf_ShutdownFile_Dragon_2eproto();

  void InitAsDefaultInstance();
  static HaloProto* default_instance_;
};
// -------------------------------------------------------------------

class Dragon_InfoReq : public ::google::protobuf::Message {
 public:
  Dragon_InfoReq();
  virtual ~Dragon_InfoReq();

  Dragon_InfoReq(const Dragon_InfoReq& from);

  inline Dragon_InfoReq& operator=(const Dragon_InfoReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Dragon_InfoReq& default_instance();

  void Swap(Dragon_InfoReq* other);

  // implements Message ----------------------------------------------

  Dragon_InfoReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Dragon_InfoReq& from);
  void MergeFrom(const Dragon_InfoReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto_ff.Dragon_InfoReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_Dragon_2eproto();
  friend void protobuf_AssignDesc_Dragon_2eproto();
  friend void protobuf_ShutdownFile_Dragon_2eproto();

  void InitAsDefaultInstance();
  static Dragon_InfoReq* default_instance_;
};
// -------------------------------------------------------------------

class Dragon_InfoRsp : public ::google::protobuf::Message {
 public:
  Dragon_InfoRsp();
  virtual ~Dragon_InfoRsp();

  Dragon_InfoRsp(const Dragon_InfoRsp& from);

  inline Dragon_InfoRsp& operator=(const Dragon_InfoRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Dragon_InfoRsp& default_instance();

  void Swap(Dragon_InfoRsp* other);

  // implements Message ----------------------------------------------

  Dragon_InfoRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Dragon_InfoRsp& from);
  void MergeFrom(const Dragon_InfoRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .proto_ff.ShadowProto shadow = 1;
  inline bool has_shadow() const;
  inline void clear_shadow();
  static const int kShadowFieldNumber = 1;
  inline const ::proto_ff::ShadowProto& shadow() const;
  inline ::proto_ff::ShadowProto* mutable_shadow();
  inline ::proto_ff::ShadowProto* release_shadow();
  inline void set_allocated_shadow(::proto_ff::ShadowProto* shadow);

  // optional .proto_ff.HaloProto halo = 2;
  inline bool has_halo() const;
  inline void clear_halo();
  static const int kHaloFieldNumber = 2;
  inline const ::proto_ff::HaloProto& halo() const;
  inline ::proto_ff::HaloProto* mutable_halo();
  inline ::proto_ff::HaloProto* release_halo();
  inline void set_allocated_halo(::proto_ff::HaloProto* halo);

  // @@protoc_insertion_point(class_scope:proto_ff.Dragon_InfoRsp)
 private:
  inline void set_has_shadow();
  inline void clear_has_shadow();
  inline void set_has_halo();
  inline void clear_has_halo();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::proto_ff::ShadowProto* shadow_;
  ::proto_ff::HaloProto* halo_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Dragon_2eproto();
  friend void protobuf_AssignDesc_Dragon_2eproto();
  friend void protobuf_ShutdownFile_Dragon_2eproto();

  void InitAsDefaultInstance();
  static Dragon_InfoRsp* default_instance_;
};
// -------------------------------------------------------------------

class Dragon_UpgradeReq : public ::google::protobuf::Message {
 public:
  Dragon_UpgradeReq();
  virtual ~Dragon_UpgradeReq();

  Dragon_UpgradeReq(const Dragon_UpgradeReq& from);

  inline Dragon_UpgradeReq& operator=(const Dragon_UpgradeReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Dragon_UpgradeReq& default_instance();

  void Swap(Dragon_UpgradeReq* other);

  // implements Message ----------------------------------------------

  Dragon_UpgradeReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Dragon_UpgradeReq& from);
  void MergeFrom(const Dragon_UpgradeReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto_ff.Dragon_UpgradeReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_Dragon_2eproto();
  friend void protobuf_AssignDesc_Dragon_2eproto();
  friend void protobuf_ShutdownFile_Dragon_2eproto();

  void InitAsDefaultInstance();
  static Dragon_UpgradeReq* default_instance_;
};
// -------------------------------------------------------------------

class Dragon_UpgradeRsp : public ::google::protobuf::Message {
 public:
  Dragon_UpgradeRsp();
  virtual ~Dragon_UpgradeRsp();

  Dragon_UpgradeRsp(const Dragon_UpgradeRsp& from);

  inline Dragon_UpgradeRsp& operator=(const Dragon_UpgradeRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Dragon_UpgradeRsp& default_instance();

  void Swap(Dragon_UpgradeRsp* other);

  // implements Message ----------------------------------------------

  Dragon_UpgradeRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Dragon_UpgradeRsp& from);
  void MergeFrom(const Dragon_UpgradeRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 ret = 1;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 1;
  inline ::google::protobuf::int32 ret() const;
  inline void set_ret(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.Dragon_UpgradeRsp)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 ret_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Dragon_2eproto();
  friend void protobuf_AssignDesc_Dragon_2eproto();
  friend void protobuf_ShutdownFile_Dragon_2eproto();

  void InitAsDefaultInstance();
  static Dragon_UpgradeRsp* default_instance_;
};
// -------------------------------------------------------------------

class Dragon_UseFragReq : public ::google::protobuf::Message {
 public:
  Dragon_UseFragReq();
  virtual ~Dragon_UseFragReq();

  Dragon_UseFragReq(const Dragon_UseFragReq& from);

  inline Dragon_UseFragReq& operator=(const Dragon_UseFragReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Dragon_UseFragReq& default_instance();

  void Swap(Dragon_UseFragReq* other);

  // implements Message ----------------------------------------------

  Dragon_UseFragReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Dragon_UseFragReq& from);
  void MergeFrom(const Dragon_UseFragReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 fragid = 1;
  inline bool has_fragid() const;
  inline void clear_fragid();
  static const int kFragidFieldNumber = 1;
  inline ::google::protobuf::int64 fragid() const;
  inline void set_fragid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.Dragon_UseFragReq)
 private:
  inline void set_has_fragid();
  inline void clear_has_fragid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 fragid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Dragon_2eproto();
  friend void protobuf_AssignDesc_Dragon_2eproto();
  friend void protobuf_ShutdownFile_Dragon_2eproto();

  void InitAsDefaultInstance();
  static Dragon_UseFragReq* default_instance_;
};
// -------------------------------------------------------------------

class Dragon_UseFragRsp : public ::google::protobuf::Message {
 public:
  Dragon_UseFragRsp();
  virtual ~Dragon_UseFragRsp();

  Dragon_UseFragRsp(const Dragon_UseFragRsp& from);

  inline Dragon_UseFragRsp& operator=(const Dragon_UseFragRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Dragon_UseFragRsp& default_instance();

  void Swap(Dragon_UseFragRsp* other);

  // implements Message ----------------------------------------------

  Dragon_UseFragRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Dragon_UseFragRsp& from);
  void MergeFrom(const Dragon_UseFragRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 ret = 1;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 1;
  inline ::google::protobuf::int32 ret() const;
  inline void set_ret(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.Dragon_UseFragRsp)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 ret_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Dragon_2eproto();
  friend void protobuf_AssignDesc_Dragon_2eproto();
  friend void protobuf_ShutdownFile_Dragon_2eproto();

  void InitAsDefaultInstance();
  static Dragon_UseFragRsp* default_instance_;
};
// -------------------------------------------------------------------

class Dragon_StarReq : public ::google::protobuf::Message {
 public:
  Dragon_StarReq();
  virtual ~Dragon_StarReq();

  Dragon_StarReq(const Dragon_StarReq& from);

  inline Dragon_StarReq& operator=(const Dragon_StarReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Dragon_StarReq& default_instance();

  void Swap(Dragon_StarReq* other);

  // implements Message ----------------------------------------------

  Dragon_StarReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Dragon_StarReq& from);
  void MergeFrom(const Dragon_StarReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.Dragon_StarReq)
 private:
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Dragon_2eproto();
  friend void protobuf_AssignDesc_Dragon_2eproto();
  friend void protobuf_ShutdownFile_Dragon_2eproto();

  void InitAsDefaultInstance();
  static Dragon_StarReq* default_instance_;
};
// -------------------------------------------------------------------

class Dragon_StarRsp : public ::google::protobuf::Message {
 public:
  Dragon_StarRsp();
  virtual ~Dragon_StarRsp();

  Dragon_StarRsp(const Dragon_StarRsp& from);

  inline Dragon_StarRsp& operator=(const Dragon_StarRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Dragon_StarRsp& default_instance();

  void Swap(Dragon_StarRsp* other);

  // implements Message ----------------------------------------------

  Dragon_StarRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Dragon_StarRsp& from);
  void MergeFrom(const Dragon_StarRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 ret = 1;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 1;
  inline ::google::protobuf::int32 ret() const;
  inline void set_ret(::google::protobuf::int32 value);

  // optional int32 id = 2;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 2;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // optional int32 star = 3;
  inline bool has_star() const;
  inline void clear_star();
  static const int kStarFieldNumber = 3;
  inline ::google::protobuf::int32 star() const;
  inline void set_star(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.Dragon_StarRsp)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_star();
  inline void clear_has_star();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 ret_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 star_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_Dragon_2eproto();
  friend void protobuf_AssignDesc_Dragon_2eproto();
  friend void protobuf_ShutdownFile_Dragon_2eproto();

  void InitAsDefaultInstance();
  static Dragon_StarRsp* default_instance_;
};
// -------------------------------------------------------------------

class Dragon_FatansyReq : public ::google::protobuf::Message {
 public:
  Dragon_FatansyReq();
  virtual ~Dragon_FatansyReq();

  Dragon_FatansyReq(const Dragon_FatansyReq& from);

  inline Dragon_FatansyReq& operator=(const Dragon_FatansyReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Dragon_FatansyReq& default_instance();

  void Swap(Dragon_FatansyReq* other);

  // implements Message ----------------------------------------------

  Dragon_FatansyReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Dragon_FatansyReq& from);
  void MergeFrom(const Dragon_FatansyReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // optional int32 star = 2;
  inline bool has_star() const;
  inline void clear_star();
  static const int kStarFieldNumber = 2;
  inline ::google::protobuf::int32 star() const;
  inline void set_star(::google::protobuf::int32 value);

  // optional int32 undress = 3;
  inline bool has_undress() const;
  inline void clear_undress();
  static const int kUndressFieldNumber = 3;
  inline ::google::protobuf::int32 undress() const;
  inline void set_undress(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.Dragon_FatansyReq)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_star();
  inline void clear_has_star();
  inline void set_has_undress();
  inline void clear_has_undress();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 star_;
  ::google::protobuf::int32 undress_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_Dragon_2eproto();
  friend void protobuf_AssignDesc_Dragon_2eproto();
  friend void protobuf_ShutdownFile_Dragon_2eproto();

  void InitAsDefaultInstance();
  static Dragon_FatansyReq* default_instance_;
};
// -------------------------------------------------------------------

class Dragon_FatansyRsp : public ::google::protobuf::Message {
 public:
  Dragon_FatansyRsp();
  virtual ~Dragon_FatansyRsp();

  Dragon_FatansyRsp(const Dragon_FatansyRsp& from);

  inline Dragon_FatansyRsp& operator=(const Dragon_FatansyRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Dragon_FatansyRsp& default_instance();

  void Swap(Dragon_FatansyRsp* other);

  // implements Message ----------------------------------------------

  Dragon_FatansyRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Dragon_FatansyRsp& from);
  void MergeFrom(const Dragon_FatansyRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 ret = 1;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 1;
  inline ::google::protobuf::int32 ret() const;
  inline void set_ret(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.Dragon_FatansyRsp)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 ret_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Dragon_2eproto();
  friend void protobuf_AssignDesc_Dragon_2eproto();
  friend void protobuf_ShutdownFile_Dragon_2eproto();

  void InitAsDefaultInstance();
  static Dragon_FatansyRsp* default_instance_;
};
// -------------------------------------------------------------------

class Dragon_ShadowInfoRsp : public ::google::protobuf::Message {
 public:
  Dragon_ShadowInfoRsp();
  virtual ~Dragon_ShadowInfoRsp();

  Dragon_ShadowInfoRsp(const Dragon_ShadowInfoRsp& from);

  inline Dragon_ShadowInfoRsp& operator=(const Dragon_ShadowInfoRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Dragon_ShadowInfoRsp& default_instance();

  void Swap(Dragon_ShadowInfoRsp* other);

  // implements Message ----------------------------------------------

  Dragon_ShadowInfoRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Dragon_ShadowInfoRsp& from);
  void MergeFrom(const Dragon_ShadowInfoRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .proto_ff.ShadowProto shadow = 1;
  inline bool has_shadow() const;
  inline void clear_shadow();
  static const int kShadowFieldNumber = 1;
  inline const ::proto_ff::ShadowProto& shadow() const;
  inline ::proto_ff::ShadowProto* mutable_shadow();
  inline ::proto_ff::ShadowProto* release_shadow();
  inline void set_allocated_shadow(::proto_ff::ShadowProto* shadow);

  // @@protoc_insertion_point(class_scope:proto_ff.Dragon_ShadowInfoRsp)
 private:
  inline void set_has_shadow();
  inline void clear_has_shadow();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::proto_ff::ShadowProto* shadow_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Dragon_2eproto();
  friend void protobuf_AssignDesc_Dragon_2eproto();
  friend void protobuf_ShutdownFile_Dragon_2eproto();

  void InitAsDefaultInstance();
  static Dragon_ShadowInfoRsp* default_instance_;
};
// -------------------------------------------------------------------

class Dragon_HaloInfoRsp : public ::google::protobuf::Message {
 public:
  Dragon_HaloInfoRsp();
  virtual ~Dragon_HaloInfoRsp();

  Dragon_HaloInfoRsp(const Dragon_HaloInfoRsp& from);

  inline Dragon_HaloInfoRsp& operator=(const Dragon_HaloInfoRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Dragon_HaloInfoRsp& default_instance();

  void Swap(Dragon_HaloInfoRsp* other);

  // implements Message ----------------------------------------------

  Dragon_HaloInfoRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Dragon_HaloInfoRsp& from);
  void MergeFrom(const Dragon_HaloInfoRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .proto_ff.HaloProto halo = 1;
  inline bool has_halo() const;
  inline void clear_halo();
  static const int kHaloFieldNumber = 1;
  inline const ::proto_ff::HaloProto& halo() const;
  inline ::proto_ff::HaloProto* mutable_halo();
  inline ::proto_ff::HaloProto* release_halo();
  inline void set_allocated_halo(::proto_ff::HaloProto* halo);

  // @@protoc_insertion_point(class_scope:proto_ff.Dragon_HaloInfoRsp)
 private:
  inline void set_has_halo();
  inline void clear_has_halo();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::proto_ff::HaloProto* halo_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Dragon_2eproto();
  friend void protobuf_AssignDesc_Dragon_2eproto();
  friend void protobuf_ShutdownFile_Dragon_2eproto();

  void InitAsDefaultInstance();
  static Dragon_HaloInfoRsp* default_instance_;
};
// ===================================================================


// ===================================================================

// ShadowProto

// optional int32 lev = 1;
inline bool ShadowProto::has_lev() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ShadowProto::set_has_lev() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ShadowProto::clear_has_lev() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ShadowProto::clear_lev() {
  lev_ = 0;
  clear_has_lev();
}
inline ::google::protobuf::int32 ShadowProto::lev() const {
  return lev_;
}
inline void ShadowProto::set_lev(::google::protobuf::int32 value) {
  set_has_lev();
  lev_ = value;
}

// optional int32 exp = 2;
inline bool ShadowProto::has_exp() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ShadowProto::set_has_exp() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ShadowProto::clear_has_exp() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ShadowProto::clear_exp() {
  exp_ = 0;
  clear_has_exp();
}
inline ::google::protobuf::int32 ShadowProto::exp() const {
  return exp_;
}
inline void ShadowProto::set_exp(::google::protobuf::int32 value) {
  set_has_exp();
  exp_ = value;
}

// optional int32 star = 3;
inline bool ShadowProto::has_star() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ShadowProto::set_has_star() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ShadowProto::clear_has_star() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ShadowProto::clear_star() {
  star_ = 0;
  clear_has_star();
}
inline ::google::protobuf::int32 ShadowProto::star() const {
  return star_;
}
inline void ShadowProto::set_star(::google::protobuf::int32 value) {
  set_has_star();
  star_ = value;
}

// optional int32 lucky = 4;
inline bool ShadowProto::has_lucky() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ShadowProto::set_has_lucky() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ShadowProto::clear_has_lucky() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ShadowProto::clear_lucky() {
  lucky_ = 0;
  clear_has_lucky();
}
inline ::google::protobuf::int32 ShadowProto::lucky() const {
  return lucky_;
}
inline void ShadowProto::set_lucky(::google::protobuf::int32 value) {
  set_has_lucky();
  lucky_ = value;
}

// repeated .proto_ff.ComPair frag = 5;
inline int ShadowProto::frag_size() const {
  return frag_.size();
}
inline void ShadowProto::clear_frag() {
  frag_.Clear();
}
inline const ::proto_ff::ComPair& ShadowProto::frag(int index) const {
  return frag_.Get(index);
}
inline ::proto_ff::ComPair* ShadowProto::mutable_frag(int index) {
  return frag_.Mutable(index);
}
inline ::proto_ff::ComPair* ShadowProto::add_frag() {
  return frag_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair >&
ShadowProto::frag() const {
  return frag_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair >*
ShadowProto::mutable_frag() {
  return &frag_;
}

// optional int32 curstar = 6;
inline bool ShadowProto::has_curstar() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ShadowProto::set_has_curstar() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ShadowProto::clear_has_curstar() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ShadowProto::clear_curstar() {
  curstar_ = 0;
  clear_has_curstar();
}
inline ::google::protobuf::int32 ShadowProto::curstar() const {
  return curstar_;
}
inline void ShadowProto::set_curstar(::google::protobuf::int32 value) {
  set_has_curstar();
  curstar_ = value;
}

// repeated .proto_ff.ComPair64 skill = 7;
inline int ShadowProto::skill_size() const {
  return skill_.size();
}
inline void ShadowProto::clear_skill() {
  skill_.Clear();
}
inline const ::proto_ff::ComPair64& ShadowProto::skill(int index) const {
  return skill_.Get(index);
}
inline ::proto_ff::ComPair64* ShadowProto::mutable_skill(int index) {
  return skill_.Mutable(index);
}
inline ::proto_ff::ComPair64* ShadowProto::add_skill() {
  return skill_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair64 >&
ShadowProto::skill() const {
  return skill_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair64 >*
ShadowProto::mutable_skill() {
  return &skill_;
}

// -------------------------------------------------------------------

// HaloProto

// repeated .proto_ff.ComPair info = 1;
inline int HaloProto::info_size() const {
  return info_.size();
}
inline void HaloProto::clear_info() {
  info_.Clear();
}
inline const ::proto_ff::ComPair& HaloProto::info(int index) const {
  return info_.Get(index);
}
inline ::proto_ff::ComPair* HaloProto::mutable_info(int index) {
  return info_.Mutable(index);
}
inline ::proto_ff::ComPair* HaloProto::add_info() {
  return info_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair >&
HaloProto::info() const {
  return info_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair >*
HaloProto::mutable_info() {
  return &info_;
}

// optional int32 curid = 2;
inline bool HaloProto::has_curid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void HaloProto::set_has_curid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void HaloProto::clear_has_curid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void HaloProto::clear_curid() {
  curid_ = 0;
  clear_has_curid();
}
inline ::google::protobuf::int32 HaloProto::curid() const {
  return curid_;
}
inline void HaloProto::set_curid(::google::protobuf::int32 value) {
  set_has_curid();
  curid_ = value;
}

// optional int32 curstar = 3;
inline bool HaloProto::has_curstar() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void HaloProto::set_has_curstar() {
  _has_bits_[0] |= 0x00000004u;
}
inline void HaloProto::clear_has_curstar() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void HaloProto::clear_curstar() {
  curstar_ = 0;
  clear_has_curstar();
}
inline ::google::protobuf::int32 HaloProto::curstar() const {
  return curstar_;
}
inline void HaloProto::set_curstar(::google::protobuf::int32 value) {
  set_has_curstar();
  curstar_ = value;
}

// -------------------------------------------------------------------

// Dragon_InfoReq

// -------------------------------------------------------------------

// Dragon_InfoRsp

// optional .proto_ff.ShadowProto shadow = 1;
inline bool Dragon_InfoRsp::has_shadow() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Dragon_InfoRsp::set_has_shadow() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Dragon_InfoRsp::clear_has_shadow() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Dragon_InfoRsp::clear_shadow() {
  if (shadow_ != NULL) shadow_->::proto_ff::ShadowProto::Clear();
  clear_has_shadow();
}
inline const ::proto_ff::ShadowProto& Dragon_InfoRsp::shadow() const {
  return shadow_ != NULL ? *shadow_ : *default_instance_->shadow_;
}
inline ::proto_ff::ShadowProto* Dragon_InfoRsp::mutable_shadow() {
  set_has_shadow();
  if (shadow_ == NULL) shadow_ = new ::proto_ff::ShadowProto;
  return shadow_;
}
inline ::proto_ff::ShadowProto* Dragon_InfoRsp::release_shadow() {
  clear_has_shadow();
  ::proto_ff::ShadowProto* temp = shadow_;
  shadow_ = NULL;
  return temp;
}
inline void Dragon_InfoRsp::set_allocated_shadow(::proto_ff::ShadowProto* shadow) {
  delete shadow_;
  shadow_ = shadow;
  if (shadow) {
    set_has_shadow();
  } else {
    clear_has_shadow();
  }
}

// optional .proto_ff.HaloProto halo = 2;
inline bool Dragon_InfoRsp::has_halo() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Dragon_InfoRsp::set_has_halo() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Dragon_InfoRsp::clear_has_halo() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Dragon_InfoRsp::clear_halo() {
  if (halo_ != NULL) halo_->::proto_ff::HaloProto::Clear();
  clear_has_halo();
}
inline const ::proto_ff::HaloProto& Dragon_InfoRsp::halo() const {
  return halo_ != NULL ? *halo_ : *default_instance_->halo_;
}
inline ::proto_ff::HaloProto* Dragon_InfoRsp::mutable_halo() {
  set_has_halo();
  if (halo_ == NULL) halo_ = new ::proto_ff::HaloProto;
  return halo_;
}
inline ::proto_ff::HaloProto* Dragon_InfoRsp::release_halo() {
  clear_has_halo();
  ::proto_ff::HaloProto* temp = halo_;
  halo_ = NULL;
  return temp;
}
inline void Dragon_InfoRsp::set_allocated_halo(::proto_ff::HaloProto* halo) {
  delete halo_;
  halo_ = halo;
  if (halo) {
    set_has_halo();
  } else {
    clear_has_halo();
  }
}

// -------------------------------------------------------------------

// Dragon_UpgradeReq

// -------------------------------------------------------------------

// Dragon_UpgradeRsp

// required int32 ret = 1;
inline bool Dragon_UpgradeRsp::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Dragon_UpgradeRsp::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Dragon_UpgradeRsp::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Dragon_UpgradeRsp::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
inline ::google::protobuf::int32 Dragon_UpgradeRsp::ret() const {
  return ret_;
}
inline void Dragon_UpgradeRsp::set_ret(::google::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
}

// -------------------------------------------------------------------

// Dragon_UseFragReq

// optional int64 fragid = 1;
inline bool Dragon_UseFragReq::has_fragid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Dragon_UseFragReq::set_has_fragid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Dragon_UseFragReq::clear_has_fragid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Dragon_UseFragReq::clear_fragid() {
  fragid_ = GOOGLE_LONGLONG(0);
  clear_has_fragid();
}
inline ::google::protobuf::int64 Dragon_UseFragReq::fragid() const {
  return fragid_;
}
inline void Dragon_UseFragReq::set_fragid(::google::protobuf::int64 value) {
  set_has_fragid();
  fragid_ = value;
}

// -------------------------------------------------------------------

// Dragon_UseFragRsp

// required int32 ret = 1;
inline bool Dragon_UseFragRsp::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Dragon_UseFragRsp::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Dragon_UseFragRsp::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Dragon_UseFragRsp::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
inline ::google::protobuf::int32 Dragon_UseFragRsp::ret() const {
  return ret_;
}
inline void Dragon_UseFragRsp::set_ret(::google::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
}

// -------------------------------------------------------------------

// Dragon_StarReq

// optional int32 id = 1;
inline bool Dragon_StarReq::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Dragon_StarReq::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Dragon_StarReq::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Dragon_StarReq::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 Dragon_StarReq::id() const {
  return id_;
}
inline void Dragon_StarReq::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// -------------------------------------------------------------------

// Dragon_StarRsp

// required int32 ret = 1;
inline bool Dragon_StarRsp::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Dragon_StarRsp::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Dragon_StarRsp::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Dragon_StarRsp::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
inline ::google::protobuf::int32 Dragon_StarRsp::ret() const {
  return ret_;
}
inline void Dragon_StarRsp::set_ret(::google::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
}

// optional int32 id = 2;
inline bool Dragon_StarRsp::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Dragon_StarRsp::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Dragon_StarRsp::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Dragon_StarRsp::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 Dragon_StarRsp::id() const {
  return id_;
}
inline void Dragon_StarRsp::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// optional int32 star = 3;
inline bool Dragon_StarRsp::has_star() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Dragon_StarRsp::set_has_star() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Dragon_StarRsp::clear_has_star() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Dragon_StarRsp::clear_star() {
  star_ = 0;
  clear_has_star();
}
inline ::google::protobuf::int32 Dragon_StarRsp::star() const {
  return star_;
}
inline void Dragon_StarRsp::set_star(::google::protobuf::int32 value) {
  set_has_star();
  star_ = value;
}

// -------------------------------------------------------------------

// Dragon_FatansyReq

// optional int32 id = 1;
inline bool Dragon_FatansyReq::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Dragon_FatansyReq::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Dragon_FatansyReq::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Dragon_FatansyReq::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 Dragon_FatansyReq::id() const {
  return id_;
}
inline void Dragon_FatansyReq::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// optional int32 star = 2;
inline bool Dragon_FatansyReq::has_star() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Dragon_FatansyReq::set_has_star() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Dragon_FatansyReq::clear_has_star() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Dragon_FatansyReq::clear_star() {
  star_ = 0;
  clear_has_star();
}
inline ::google::protobuf::int32 Dragon_FatansyReq::star() const {
  return star_;
}
inline void Dragon_FatansyReq::set_star(::google::protobuf::int32 value) {
  set_has_star();
  star_ = value;
}

// optional int32 undress = 3;
inline bool Dragon_FatansyReq::has_undress() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Dragon_FatansyReq::set_has_undress() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Dragon_FatansyReq::clear_has_undress() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Dragon_FatansyReq::clear_undress() {
  undress_ = 0;
  clear_has_undress();
}
inline ::google::protobuf::int32 Dragon_FatansyReq::undress() const {
  return undress_;
}
inline void Dragon_FatansyReq::set_undress(::google::protobuf::int32 value) {
  set_has_undress();
  undress_ = value;
}

// -------------------------------------------------------------------

// Dragon_FatansyRsp

// required int32 ret = 1;
inline bool Dragon_FatansyRsp::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Dragon_FatansyRsp::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Dragon_FatansyRsp::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Dragon_FatansyRsp::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
inline ::google::protobuf::int32 Dragon_FatansyRsp::ret() const {
  return ret_;
}
inline void Dragon_FatansyRsp::set_ret(::google::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
}

// -------------------------------------------------------------------

// Dragon_ShadowInfoRsp

// optional .proto_ff.ShadowProto shadow = 1;
inline bool Dragon_ShadowInfoRsp::has_shadow() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Dragon_ShadowInfoRsp::set_has_shadow() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Dragon_ShadowInfoRsp::clear_has_shadow() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Dragon_ShadowInfoRsp::clear_shadow() {
  if (shadow_ != NULL) shadow_->::proto_ff::ShadowProto::Clear();
  clear_has_shadow();
}
inline const ::proto_ff::ShadowProto& Dragon_ShadowInfoRsp::shadow() const {
  return shadow_ != NULL ? *shadow_ : *default_instance_->shadow_;
}
inline ::proto_ff::ShadowProto* Dragon_ShadowInfoRsp::mutable_shadow() {
  set_has_shadow();
  if (shadow_ == NULL) shadow_ = new ::proto_ff::ShadowProto;
  return shadow_;
}
inline ::proto_ff::ShadowProto* Dragon_ShadowInfoRsp::release_shadow() {
  clear_has_shadow();
  ::proto_ff::ShadowProto* temp = shadow_;
  shadow_ = NULL;
  return temp;
}
inline void Dragon_ShadowInfoRsp::set_allocated_shadow(::proto_ff::ShadowProto* shadow) {
  delete shadow_;
  shadow_ = shadow;
  if (shadow) {
    set_has_shadow();
  } else {
    clear_has_shadow();
  }
}

// -------------------------------------------------------------------

// Dragon_HaloInfoRsp

// optional .proto_ff.HaloProto halo = 1;
inline bool Dragon_HaloInfoRsp::has_halo() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Dragon_HaloInfoRsp::set_has_halo() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Dragon_HaloInfoRsp::clear_has_halo() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Dragon_HaloInfoRsp::clear_halo() {
  if (halo_ != NULL) halo_->::proto_ff::HaloProto::Clear();
  clear_has_halo();
}
inline const ::proto_ff::HaloProto& Dragon_HaloInfoRsp::halo() const {
  return halo_ != NULL ? *halo_ : *default_instance_->halo_;
}
inline ::proto_ff::HaloProto* Dragon_HaloInfoRsp::mutable_halo() {
  set_has_halo();
  if (halo_ == NULL) halo_ = new ::proto_ff::HaloProto;
  return halo_;
}
inline ::proto_ff::HaloProto* Dragon_HaloInfoRsp::release_halo() {
  clear_has_halo();
  ::proto_ff::HaloProto* temp = halo_;
  halo_ = NULL;
  return temp;
}
inline void Dragon_HaloInfoRsp::set_allocated_halo(::proto_ff::HaloProto* halo) {
  delete halo_;
  halo_ = halo;
  if (halo) {
    set_has_halo();
  } else {
    clear_has_halo();
  }
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto_ff

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_Dragon_2eproto__INCLUDED
