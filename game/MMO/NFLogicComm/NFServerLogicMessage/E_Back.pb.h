// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: E_Back.proto

#ifndef PROTOBUF_E_5fBack_2eproto__INCLUDED
#define PROTOBUF_E_5fBack_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "yd_fieldoptions.pb.h"
// @@protoc_insertion_point(includes)

namespace proto_ff {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_E_5fBack_2eproto();
void protobuf_AssignDesc_E_5fBack_2eproto();
void protobuf_ShutdownFile_E_5fBack_2eproto();

class E_BackBack;
class Sheet_BackBack;

// ===================================================================

class E_BackBack : public ::google::protobuf::Message {
 public:
  E_BackBack();
  virtual ~E_BackBack();

  E_BackBack(const E_BackBack& from);

  inline E_BackBack& operator=(const E_BackBack& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_BackBack& default_instance();

  void Swap(E_BackBack* other);

  // implements Message ----------------------------------------------

  E_BackBack* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_BackBack& from);
  void MergeFrom(const E_BackBack& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 m_id = 1;
  inline bool has_m_id() const;
  inline void clear_m_id();
  static const int kMIdFieldNumber = 1;
  inline ::google::protobuf::int32 m_id() const;
  inline void set_m_id(::google::protobuf::int32 value);

  // optional int32 m_type = 2;
  inline bool has_m_type() const;
  inline void clear_m_type();
  static const int kMTypeFieldNumber = 2;
  inline ::google::protobuf::int32 m_type() const;
  inline void set_m_type(::google::protobuf::int32 value);

  // optional int32 m_typeParam = 3;
  inline bool has_m_typeparam() const;
  inline void clear_m_typeparam();
  static const int kMTypeParamFieldNumber = 3;
  inline ::google::protobuf::int32 m_typeparam() const;
  inline void set_m_typeparam(::google::protobuf::int32 value);

  // optional string m_name = 4;
  inline bool has_m_name() const;
  inline void clear_m_name();
  static const int kMNameFieldNumber = 4;
  inline const ::std::string& m_name() const;
  inline void set_m_name(const ::std::string& value);
  inline void set_m_name(const char* value);
  inline void set_m_name(const char* value, size_t size);
  inline ::std::string* mutable_m_name();
  inline ::std::string* release_m_name();
  inline void set_allocated_m_name(::std::string* m_name);

  // optional int32 m_group = 5;
  inline bool has_m_group() const;
  inline void clear_m_group();
  static const int kMGroupFieldNumber = 5;
  inline ::google::protobuf::int32 m_group() const;
  inline void set_m_group(::google::protobuf::int32 value);

  // optional int32 m_functionUnlock = 6;
  inline bool has_m_functionunlock() const;
  inline void clear_m_functionunlock();
  static const int kMFunctionUnlockFieldNumber = 6;
  inline ::google::protobuf::int32 m_functionunlock() const;
  inline void set_m_functionunlock(::google::protobuf::int32 value);

  // optional int32 m_levelLimit = 7;
  inline bool has_m_levellimit() const;
  inline void clear_m_levellimit();
  static const int kMLevelLimitFieldNumber = 7;
  inline ::google::protobuf::int32 m_levellimit() const;
  inline void set_m_levellimit(::google::protobuf::int32 value);

  // optional int64 m_PboxId = 8;
  inline bool has_m_pboxid() const;
  inline void clear_m_pboxid();
  static const int kMPboxIdFieldNumber = 8;
  inline ::google::protobuf::int64 m_pboxid() const;
  inline void set_m_pboxid(::google::protobuf::int64 value);

  // optional int64 m_boxId = 9;
  inline bool has_m_boxid() const;
  inline void clear_m_boxid();
  static const int kMBoxIdFieldNumber = 9;
  inline ::google::protobuf::int64 m_boxid() const;
  inline void set_m_boxid(::google::protobuf::int64 value);

  // optional int32 m_backDay = 10;
  inline bool has_m_backday() const;
  inline void clear_m_backday();
  static const int kMBackDayFieldNumber = 10;
  inline ::google::protobuf::int32 m_backday() const;
  inline void set_m_backday(::google::protobuf::int32 value);

  // optional int32 m_costItemID = 11;
  inline bool has_m_costitemid() const;
  inline void clear_m_costitemid();
  static const int kMCostItemIDFieldNumber = 11;
  inline ::google::protobuf::int32 m_costitemid() const;
  inline void set_m_costitemid(::google::protobuf::int32 value);

  // optional int32 m_costNum = 12;
  inline bool has_m_costnum() const;
  inline void clear_m_costnum();
  static const int kMCostNumFieldNumber = 12;
  inline ::google::protobuf::int32 m_costnum() const;
  inline void set_m_costnum(::google::protobuf::int32 value);

  // optional int32 m_PcostItemID = 13;
  inline bool has_m_pcostitemid() const;
  inline void clear_m_pcostitemid();
  static const int kMPcostItemIDFieldNumber = 13;
  inline ::google::protobuf::int32 m_pcostitemid() const;
  inline void set_m_pcostitemid(::google::protobuf::int32 value);

  // optional int32 m_PcostNum = 14;
  inline bool has_m_pcostnum() const;
  inline void clear_m_pcostnum();
  static const int kMPcostNumFieldNumber = 14;
  inline ::google::protobuf::int32 m_pcostnum() const;
  inline void set_m_pcostnum(::google::protobuf::int32 value);

  // optional int32 m_AcostItemID = 15;
  inline bool has_m_acostitemid() const;
  inline void clear_m_acostitemid();
  static const int kMAcostItemIDFieldNumber = 15;
  inline ::google::protobuf::int32 m_acostitemid() const;
  inline void set_m_acostitemid(::google::protobuf::int32 value);

  // optional int32 m_AcostNum = 16;
  inline bool has_m_acostnum() const;
  inline void clear_m_acostnum();
  static const int kMAcostNumFieldNumber = 16;
  inline ::google::protobuf::int32 m_acostnum() const;
  inline void set_m_acostnum(::google::protobuf::int32 value);

  // repeated int32 m_param = 17;
  inline int m_param_size() const;
  inline void clear_m_param();
  static const int kMParamFieldNumber = 17;
  inline ::google::protobuf::int32 m_param(int index) const;
  inline void set_m_param(int index, ::google::protobuf::int32 value);
  inline void add_m_param(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      m_param() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_m_param();

  // @@protoc_insertion_point(class_scope:proto_ff.E_BackBack)
 private:
  inline void set_has_m_id();
  inline void clear_has_m_id();
  inline void set_has_m_type();
  inline void clear_has_m_type();
  inline void set_has_m_typeparam();
  inline void clear_has_m_typeparam();
  inline void set_has_m_name();
  inline void clear_has_m_name();
  inline void set_has_m_group();
  inline void clear_has_m_group();
  inline void set_has_m_functionunlock();
  inline void clear_has_m_functionunlock();
  inline void set_has_m_levellimit();
  inline void clear_has_m_levellimit();
  inline void set_has_m_pboxid();
  inline void clear_has_m_pboxid();
  inline void set_has_m_boxid();
  inline void clear_has_m_boxid();
  inline void set_has_m_backday();
  inline void clear_has_m_backday();
  inline void set_has_m_costitemid();
  inline void clear_has_m_costitemid();
  inline void set_has_m_costnum();
  inline void clear_has_m_costnum();
  inline void set_has_m_pcostitemid();
  inline void clear_has_m_pcostitemid();
  inline void set_has_m_pcostnum();
  inline void clear_has_m_pcostnum();
  inline void set_has_m_acostitemid();
  inline void clear_has_m_acostitemid();
  inline void set_has_m_acostnum();
  inline void clear_has_m_acostnum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_id_;
  ::google::protobuf::int32 m_type_;
  ::std::string* m_name_;
  ::google::protobuf::int32 m_typeparam_;
  ::google::protobuf::int32 m_group_;
  ::google::protobuf::int32 m_functionunlock_;
  ::google::protobuf::int32 m_levellimit_;
  ::google::protobuf::int64 m_pboxid_;
  ::google::protobuf::int64 m_boxid_;
  ::google::protobuf::int32 m_backday_;
  ::google::protobuf::int32 m_costitemid_;
  ::google::protobuf::int32 m_costnum_;
  ::google::protobuf::int32 m_pcostitemid_;
  ::google::protobuf::int32 m_pcostnum_;
  ::google::protobuf::int32 m_acostitemid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > m_param_;
  ::google::protobuf::int32 m_acostnum_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(17 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fBack_2eproto();
  friend void protobuf_AssignDesc_E_5fBack_2eproto();
  friend void protobuf_ShutdownFile_E_5fBack_2eproto();

  void InitAsDefaultInstance();
  static E_BackBack* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_BackBack : public ::google::protobuf::Message {
 public:
  Sheet_BackBack();
  virtual ~Sheet_BackBack();

  Sheet_BackBack(const Sheet_BackBack& from);

  inline Sheet_BackBack& operator=(const Sheet_BackBack& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_BackBack& default_instance();

  void Swap(Sheet_BackBack* other);

  // implements Message ----------------------------------------------

  Sheet_BackBack* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_BackBack& from);
  void MergeFrom(const Sheet_BackBack& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.E_BackBack E_BackBack_List = 1;
  inline int e_backback_list_size() const;
  inline void clear_e_backback_list();
  static const int kEBackBackListFieldNumber = 1;
  inline const ::proto_ff::E_BackBack& e_backback_list(int index) const;
  inline ::proto_ff::E_BackBack* mutable_e_backback_list(int index);
  inline ::proto_ff::E_BackBack* add_e_backback_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_BackBack >&
      e_backback_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_BackBack >*
      mutable_e_backback_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_BackBack)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_BackBack > e_backback_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fBack_2eproto();
  friend void protobuf_AssignDesc_E_5fBack_2eproto();
  friend void protobuf_ShutdownFile_E_5fBack_2eproto();

  void InitAsDefaultInstance();
  static Sheet_BackBack* default_instance_;
};
// ===================================================================


// ===================================================================

// E_BackBack

// optional int32 m_id = 1;
inline bool E_BackBack::has_m_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_BackBack::set_has_m_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_BackBack::clear_has_m_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_BackBack::clear_m_id() {
  m_id_ = 0;
  clear_has_m_id();
}
inline ::google::protobuf::int32 E_BackBack::m_id() const {
  return m_id_;
}
inline void E_BackBack::set_m_id(::google::protobuf::int32 value) {
  set_has_m_id();
  m_id_ = value;
}

// optional int32 m_type = 2;
inline bool E_BackBack::has_m_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_BackBack::set_has_m_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_BackBack::clear_has_m_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_BackBack::clear_m_type() {
  m_type_ = 0;
  clear_has_m_type();
}
inline ::google::protobuf::int32 E_BackBack::m_type() const {
  return m_type_;
}
inline void E_BackBack::set_m_type(::google::protobuf::int32 value) {
  set_has_m_type();
  m_type_ = value;
}

// optional int32 m_typeParam = 3;
inline bool E_BackBack::has_m_typeparam() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void E_BackBack::set_has_m_typeparam() {
  _has_bits_[0] |= 0x00000004u;
}
inline void E_BackBack::clear_has_m_typeparam() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void E_BackBack::clear_m_typeparam() {
  m_typeparam_ = 0;
  clear_has_m_typeparam();
}
inline ::google::protobuf::int32 E_BackBack::m_typeparam() const {
  return m_typeparam_;
}
inline void E_BackBack::set_m_typeparam(::google::protobuf::int32 value) {
  set_has_m_typeparam();
  m_typeparam_ = value;
}

// optional string m_name = 4;
inline bool E_BackBack::has_m_name() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void E_BackBack::set_has_m_name() {
  _has_bits_[0] |= 0x00000008u;
}
inline void E_BackBack::clear_has_m_name() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void E_BackBack::clear_m_name() {
  if (m_name_ != &::google::protobuf::internal::kEmptyString) {
    m_name_->clear();
  }
  clear_has_m_name();
}
inline const ::std::string& E_BackBack::m_name() const {
  return *m_name_;
}
inline void E_BackBack::set_m_name(const ::std::string& value) {
  set_has_m_name();
  if (m_name_ == &::google::protobuf::internal::kEmptyString) {
    m_name_ = new ::std::string;
  }
  m_name_->assign(value);
}
inline void E_BackBack::set_m_name(const char* value) {
  set_has_m_name();
  if (m_name_ == &::google::protobuf::internal::kEmptyString) {
    m_name_ = new ::std::string;
  }
  m_name_->assign(value);
}
inline void E_BackBack::set_m_name(const char* value, size_t size) {
  set_has_m_name();
  if (m_name_ == &::google::protobuf::internal::kEmptyString) {
    m_name_ = new ::std::string;
  }
  m_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* E_BackBack::mutable_m_name() {
  set_has_m_name();
  if (m_name_ == &::google::protobuf::internal::kEmptyString) {
    m_name_ = new ::std::string;
  }
  return m_name_;
}
inline ::std::string* E_BackBack::release_m_name() {
  clear_has_m_name();
  if (m_name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = m_name_;
    m_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void E_BackBack::set_allocated_m_name(::std::string* m_name) {
  if (m_name_ != &::google::protobuf::internal::kEmptyString) {
    delete m_name_;
  }
  if (m_name) {
    set_has_m_name();
    m_name_ = m_name;
  } else {
    clear_has_m_name();
    m_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 m_group = 5;
inline bool E_BackBack::has_m_group() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void E_BackBack::set_has_m_group() {
  _has_bits_[0] |= 0x00000010u;
}
inline void E_BackBack::clear_has_m_group() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void E_BackBack::clear_m_group() {
  m_group_ = 0;
  clear_has_m_group();
}
inline ::google::protobuf::int32 E_BackBack::m_group() const {
  return m_group_;
}
inline void E_BackBack::set_m_group(::google::protobuf::int32 value) {
  set_has_m_group();
  m_group_ = value;
}

// optional int32 m_functionUnlock = 6;
inline bool E_BackBack::has_m_functionunlock() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void E_BackBack::set_has_m_functionunlock() {
  _has_bits_[0] |= 0x00000020u;
}
inline void E_BackBack::clear_has_m_functionunlock() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void E_BackBack::clear_m_functionunlock() {
  m_functionunlock_ = 0;
  clear_has_m_functionunlock();
}
inline ::google::protobuf::int32 E_BackBack::m_functionunlock() const {
  return m_functionunlock_;
}
inline void E_BackBack::set_m_functionunlock(::google::protobuf::int32 value) {
  set_has_m_functionunlock();
  m_functionunlock_ = value;
}

// optional int32 m_levelLimit = 7;
inline bool E_BackBack::has_m_levellimit() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void E_BackBack::set_has_m_levellimit() {
  _has_bits_[0] |= 0x00000040u;
}
inline void E_BackBack::clear_has_m_levellimit() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void E_BackBack::clear_m_levellimit() {
  m_levellimit_ = 0;
  clear_has_m_levellimit();
}
inline ::google::protobuf::int32 E_BackBack::m_levellimit() const {
  return m_levellimit_;
}
inline void E_BackBack::set_m_levellimit(::google::protobuf::int32 value) {
  set_has_m_levellimit();
  m_levellimit_ = value;
}

// optional int64 m_PboxId = 8;
inline bool E_BackBack::has_m_pboxid() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void E_BackBack::set_has_m_pboxid() {
  _has_bits_[0] |= 0x00000080u;
}
inline void E_BackBack::clear_has_m_pboxid() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void E_BackBack::clear_m_pboxid() {
  m_pboxid_ = GOOGLE_LONGLONG(0);
  clear_has_m_pboxid();
}
inline ::google::protobuf::int64 E_BackBack::m_pboxid() const {
  return m_pboxid_;
}
inline void E_BackBack::set_m_pboxid(::google::protobuf::int64 value) {
  set_has_m_pboxid();
  m_pboxid_ = value;
}

// optional int64 m_boxId = 9;
inline bool E_BackBack::has_m_boxid() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void E_BackBack::set_has_m_boxid() {
  _has_bits_[0] |= 0x00000100u;
}
inline void E_BackBack::clear_has_m_boxid() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void E_BackBack::clear_m_boxid() {
  m_boxid_ = GOOGLE_LONGLONG(0);
  clear_has_m_boxid();
}
inline ::google::protobuf::int64 E_BackBack::m_boxid() const {
  return m_boxid_;
}
inline void E_BackBack::set_m_boxid(::google::protobuf::int64 value) {
  set_has_m_boxid();
  m_boxid_ = value;
}

// optional int32 m_backDay = 10;
inline bool E_BackBack::has_m_backday() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void E_BackBack::set_has_m_backday() {
  _has_bits_[0] |= 0x00000200u;
}
inline void E_BackBack::clear_has_m_backday() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void E_BackBack::clear_m_backday() {
  m_backday_ = 0;
  clear_has_m_backday();
}
inline ::google::protobuf::int32 E_BackBack::m_backday() const {
  return m_backday_;
}
inline void E_BackBack::set_m_backday(::google::protobuf::int32 value) {
  set_has_m_backday();
  m_backday_ = value;
}

// optional int32 m_costItemID = 11;
inline bool E_BackBack::has_m_costitemid() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void E_BackBack::set_has_m_costitemid() {
  _has_bits_[0] |= 0x00000400u;
}
inline void E_BackBack::clear_has_m_costitemid() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void E_BackBack::clear_m_costitemid() {
  m_costitemid_ = 0;
  clear_has_m_costitemid();
}
inline ::google::protobuf::int32 E_BackBack::m_costitemid() const {
  return m_costitemid_;
}
inline void E_BackBack::set_m_costitemid(::google::protobuf::int32 value) {
  set_has_m_costitemid();
  m_costitemid_ = value;
}

// optional int32 m_costNum = 12;
inline bool E_BackBack::has_m_costnum() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void E_BackBack::set_has_m_costnum() {
  _has_bits_[0] |= 0x00000800u;
}
inline void E_BackBack::clear_has_m_costnum() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void E_BackBack::clear_m_costnum() {
  m_costnum_ = 0;
  clear_has_m_costnum();
}
inline ::google::protobuf::int32 E_BackBack::m_costnum() const {
  return m_costnum_;
}
inline void E_BackBack::set_m_costnum(::google::protobuf::int32 value) {
  set_has_m_costnum();
  m_costnum_ = value;
}

// optional int32 m_PcostItemID = 13;
inline bool E_BackBack::has_m_pcostitemid() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void E_BackBack::set_has_m_pcostitemid() {
  _has_bits_[0] |= 0x00001000u;
}
inline void E_BackBack::clear_has_m_pcostitemid() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void E_BackBack::clear_m_pcostitemid() {
  m_pcostitemid_ = 0;
  clear_has_m_pcostitemid();
}
inline ::google::protobuf::int32 E_BackBack::m_pcostitemid() const {
  return m_pcostitemid_;
}
inline void E_BackBack::set_m_pcostitemid(::google::protobuf::int32 value) {
  set_has_m_pcostitemid();
  m_pcostitemid_ = value;
}

// optional int32 m_PcostNum = 14;
inline bool E_BackBack::has_m_pcostnum() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void E_BackBack::set_has_m_pcostnum() {
  _has_bits_[0] |= 0x00002000u;
}
inline void E_BackBack::clear_has_m_pcostnum() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void E_BackBack::clear_m_pcostnum() {
  m_pcostnum_ = 0;
  clear_has_m_pcostnum();
}
inline ::google::protobuf::int32 E_BackBack::m_pcostnum() const {
  return m_pcostnum_;
}
inline void E_BackBack::set_m_pcostnum(::google::protobuf::int32 value) {
  set_has_m_pcostnum();
  m_pcostnum_ = value;
}

// optional int32 m_AcostItemID = 15;
inline bool E_BackBack::has_m_acostitemid() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void E_BackBack::set_has_m_acostitemid() {
  _has_bits_[0] |= 0x00004000u;
}
inline void E_BackBack::clear_has_m_acostitemid() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void E_BackBack::clear_m_acostitemid() {
  m_acostitemid_ = 0;
  clear_has_m_acostitemid();
}
inline ::google::protobuf::int32 E_BackBack::m_acostitemid() const {
  return m_acostitemid_;
}
inline void E_BackBack::set_m_acostitemid(::google::protobuf::int32 value) {
  set_has_m_acostitemid();
  m_acostitemid_ = value;
}

// optional int32 m_AcostNum = 16;
inline bool E_BackBack::has_m_acostnum() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void E_BackBack::set_has_m_acostnum() {
  _has_bits_[0] |= 0x00008000u;
}
inline void E_BackBack::clear_has_m_acostnum() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void E_BackBack::clear_m_acostnum() {
  m_acostnum_ = 0;
  clear_has_m_acostnum();
}
inline ::google::protobuf::int32 E_BackBack::m_acostnum() const {
  return m_acostnum_;
}
inline void E_BackBack::set_m_acostnum(::google::protobuf::int32 value) {
  set_has_m_acostnum();
  m_acostnum_ = value;
}

// repeated int32 m_param = 17;
inline int E_BackBack::m_param_size() const {
  return m_param_.size();
}
inline void E_BackBack::clear_m_param() {
  m_param_.Clear();
}
inline ::google::protobuf::int32 E_BackBack::m_param(int index) const {
  return m_param_.Get(index);
}
inline void E_BackBack::set_m_param(int index, ::google::protobuf::int32 value) {
  m_param_.Set(index, value);
}
inline void E_BackBack::add_m_param(::google::protobuf::int32 value) {
  m_param_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
E_BackBack::m_param() const {
  return m_param_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
E_BackBack::mutable_m_param() {
  return &m_param_;
}

// -------------------------------------------------------------------

// Sheet_BackBack

// repeated .proto_ff.E_BackBack E_BackBack_List = 1;
inline int Sheet_BackBack::e_backback_list_size() const {
  return e_backback_list_.size();
}
inline void Sheet_BackBack::clear_e_backback_list() {
  e_backback_list_.Clear();
}
inline const ::proto_ff::E_BackBack& Sheet_BackBack::e_backback_list(int index) const {
  return e_backback_list_.Get(index);
}
inline ::proto_ff::E_BackBack* Sheet_BackBack::mutable_e_backback_list(int index) {
  return e_backback_list_.Mutable(index);
}
inline ::proto_ff::E_BackBack* Sheet_BackBack::add_e_backback_list() {
  return e_backback_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_BackBack >&
Sheet_BackBack::e_backback_list() const {
  return e_backback_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_BackBack >*
Sheet_BackBack::mutable_e_backback_list() {
  return &e_backback_list_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto_ff

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_E_5fBack_2eproto__INCLUDED
