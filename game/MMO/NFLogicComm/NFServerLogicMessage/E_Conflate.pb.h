// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: E_Conflate.proto

#ifndef PROTOBUF_E_5fConflate_2eproto__INCLUDED
#define PROTOBUF_E_5fConflate_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "yd_fieldoptions.pb.h"
// @@protoc_insertion_point(includes)

namespace proto_ff {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_E_5fConflate_2eproto();
void protobuf_AssignDesc_E_5fConflate_2eproto();
void protobuf_ShutdownFile_E_5fConflate_2eproto();

class E_ConflateEquipElemDesc;
class E_ConflateEquip;
class Sheet_ConflateEquip;
class E_ConflateGrouptype;
class Sheet_ConflateGrouptype;
class E_ConflateSubtype;
class Sheet_ConflateSubtype;
class E_ConflatePropReplaceDesc;
class E_ConflatePropElemDesc;
class E_ConflateProp;
class Sheet_ConflateProp;
class E_ConflateJewelry_spElemDesc;
class E_ConflateJewelry_sp;
class Sheet_ConflateJewelry_sp;
class E_ConflateJewelry_zlElemDesc;
class E_ConflateJewelry_zl;
class Sheet_ConflateJewelry_zl;
class E_ConflateJewelry_sjElemDesc;
class E_ConflateJewelry_sj;
class Sheet_ConflateJewelry_sj;

// ===================================================================

class E_ConflateEquipElemDesc : public ::google::protobuf::Message {
 public:
  E_ConflateEquipElemDesc();
  virtual ~E_ConflateEquipElemDesc();

  E_ConflateEquipElemDesc(const E_ConflateEquipElemDesc& from);

  inline E_ConflateEquipElemDesc& operator=(const E_ConflateEquipElemDesc& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_ConflateEquipElemDesc& default_instance();

  void Swap(E_ConflateEquipElemDesc* other);

  // implements Message ----------------------------------------------

  E_ConflateEquipElemDesc* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_ConflateEquipElemDesc& from);
  void MergeFrom(const E_ConflateEquipElemDesc& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 m_num = 1;
  inline bool has_m_num() const;
  inline void clear_m_num();
  static const int kMNumFieldNumber = 1;
  inline ::google::protobuf::int32 m_num() const;
  inline void set_m_num(::google::protobuf::int32 value);

  // optional int32 m_id = 2;
  inline bool has_m_id() const;
  inline void clear_m_id();
  static const int kMIdFieldNumber = 2;
  inline ::google::protobuf::int32 m_id() const;
  inline void set_m_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.E_ConflateEquipElemDesc)
 private:
  inline void set_has_m_num();
  inline void clear_has_m_num();
  inline void set_has_m_id();
  inline void clear_has_m_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_num_;
  ::google::protobuf::int32 m_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fConflate_2eproto();
  friend void protobuf_AssignDesc_E_5fConflate_2eproto();
  friend void protobuf_ShutdownFile_E_5fConflate_2eproto();

  void InitAsDefaultInstance();
  static E_ConflateEquipElemDesc* default_instance_;
};
// -------------------------------------------------------------------

class E_ConflateEquip : public ::google::protobuf::Message {
 public:
  E_ConflateEquip();
  virtual ~E_ConflateEquip();

  E_ConflateEquip(const E_ConflateEquip& from);

  inline E_ConflateEquip& operator=(const E_ConflateEquip& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_ConflateEquip& default_instance();

  void Swap(E_ConflateEquip* other);

  // implements Message ----------------------------------------------

  E_ConflateEquip* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_ConflateEquip& from);
  void MergeFrom(const E_ConflateEquip& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 m_id = 1;
  inline bool has_m_id() const;
  inline void clear_m_id();
  static const int kMIdFieldNumber = 1;
  inline ::google::protobuf::int32 m_id() const;
  inline void set_m_id(::google::protobuf::int32 value);

  // optional int32 m_openlv = 2;
  inline bool has_m_openlv() const;
  inline void clear_m_openlv();
  static const int kMOpenlvFieldNumber = 2;
  inline ::google::protobuf::int32 m_openlv() const;
  inline void set_m_openlv(::google::protobuf::int32 value);

  // optional int32 m_grouptype = 3;
  inline bool has_m_grouptype() const;
  inline void clear_m_grouptype();
  static const int kMGrouptypeFieldNumber = 3;
  inline ::google::protobuf::int32 m_grouptype() const;
  inline void set_m_grouptype(::google::protobuf::int32 value);

  // optional int32 m_subtype = 4;
  inline bool has_m_subtype() const;
  inline void clear_m_subtype();
  static const int kMSubtypeFieldNumber = 4;
  inline ::google::protobuf::int32 m_subtype() const;
  inline void set_m_subtype(::google::protobuf::int32 value);

  // optional int32 m_needsameposition = 5;
  inline bool has_m_needsameposition() const;
  inline void clear_m_needsameposition();
  static const int kMNeedsamepositionFieldNumber = 5;
  inline ::google::protobuf::int32 m_needsameposition() const;
  inline void set_m_needsameposition(::google::protobuf::int32 value);

  // optional int32 m_star = 6;
  inline bool has_m_star() const;
  inline void clear_m_star();
  static const int kMStarFieldNumber = 6;
  inline ::google::protobuf::int32 m_star() const;
  inline void set_m_star(::google::protobuf::int32 value);

  // optional int32 m_quality = 7;
  inline bool has_m_quality() const;
  inline void clear_m_quality();
  static const int kMQualityFieldNumber = 7;
  inline ::google::protobuf::int32 m_quality() const;
  inline void set_m_quality(::google::protobuf::int32 value);

  // optional int32 m_wearquality = 8;
  inline bool has_m_wearquality() const;
  inline void clear_m_wearquality();
  static const int kMWearqualityFieldNumber = 8;
  inline ::google::protobuf::int32 m_wearquality() const;
  inline void set_m_wearquality(::google::protobuf::int32 value);

  // optional int32 m_elemstar = 9;
  inline bool has_m_elemstar() const;
  inline void clear_m_elemstar();
  static const int kMElemstarFieldNumber = 9;
  inline ::google::protobuf::int32 m_elemstar() const;
  inline void set_m_elemstar(::google::protobuf::int32 value);

  // optional int32 m_elemquality = 10;
  inline bool has_m_elemquality() const;
  inline void clear_m_elemquality();
  static const int kMElemqualityFieldNumber = 10;
  inline ::google::protobuf::int32 m_elemquality() const;
  inline void set_m_elemquality(::google::protobuf::int32 value);

  // optional int32 m_elemwearquality = 11;
  inline bool has_m_elemwearquality() const;
  inline void clear_m_elemwearquality();
  static const int kMElemwearqualityFieldNumber = 11;
  inline ::google::protobuf::int32 m_elemwearquality() const;
  inline void set_m_elemwearquality(::google::protobuf::int32 value);

  // optional int32 m_minimum = 12;
  inline bool has_m_minimum() const;
  inline void clear_m_minimum();
  static const int kMMinimumFieldNumber = 12;
  inline ::google::protobuf::int32 m_minimum() const;
  inline void set_m_minimum(::google::protobuf::int32 value);

  // optional int32 m_minisuccessrate = 13;
  inline bool has_m_minisuccessrate() const;
  inline void clear_m_minisuccessrate();
  static const int kMMinisuccessrateFieldNumber = 13;
  inline ::google::protobuf::int32 m_minisuccessrate() const;
  inline void set_m_minisuccessrate(::google::protobuf::int32 value);

  // optional int32 m_maxmum = 14;
  inline bool has_m_maxmum() const;
  inline void clear_m_maxmum();
  static const int kMMaxmumFieldNumber = 14;
  inline ::google::protobuf::int32 m_maxmum() const;
  inline void set_m_maxmum(::google::protobuf::int32 value);

  // optional int32 m_maxsuccessrate = 15;
  inline bool has_m_maxsuccessrate() const;
  inline void clear_m_maxsuccessrate();
  static const int kMMaxsuccessrateFieldNumber = 15;
  inline ::google::protobuf::int32 m_maxsuccessrate() const;
  inline void set_m_maxsuccessrate(::google::protobuf::int32 value);

  // optional int32 m_muststar = 16;
  inline bool has_m_muststar() const;
  inline void clear_m_muststar();
  static const int kMMuststarFieldNumber = 16;
  inline ::google::protobuf::int32 m_muststar() const;
  inline void set_m_muststar(::google::protobuf::int32 value);

  // optional int32 m_mustquality = 17;
  inline bool has_m_mustquality() const;
  inline void clear_m_mustquality();
  static const int kMMustqualityFieldNumber = 17;
  inline ::google::protobuf::int32 m_mustquality() const;
  inline void set_m_mustquality(::google::protobuf::int32 value);

  // optional int32 m_mustwearquality = 18;
  inline bool has_m_mustwearquality() const;
  inline void clear_m_mustwearquality();
  static const int kMMustwearqualityFieldNumber = 18;
  inline ::google::protobuf::int32 m_mustwearquality() const;
  inline void set_m_mustwearquality(::google::protobuf::int32 value);

  // optional int32 m_mustnum = 19;
  inline bool has_m_mustnum() const;
  inline void clear_m_mustnum();
  static const int kMMustnumFieldNumber = 19;
  inline ::google::protobuf::int32 m_mustnum() const;
  inline void set_m_mustnum(::google::protobuf::int32 value);

  // optional int32 m_usemoney = 20;
  inline bool has_m_usemoney() const;
  inline void clear_m_usemoney();
  static const int kMUsemoneyFieldNumber = 20;
  inline ::google::protobuf::int32 m_usemoney() const;
  inline void set_m_usemoney(::google::protobuf::int32 value);

  // optional int32 m_cost = 21;
  inline bool has_m_cost() const;
  inline void clear_m_cost();
  static const int kMCostFieldNumber = 21;
  inline ::google::protobuf::int32 m_cost() const;
  inline void set_m_cost(::google::protobuf::int32 value);

  // repeated .proto_ff.E_ConflateEquipElemDesc m_elem = 22;
  inline int m_elem_size() const;
  inline void clear_m_elem();
  static const int kMElemFieldNumber = 22;
  inline const ::proto_ff::E_ConflateEquipElemDesc& m_elem(int index) const;
  inline ::proto_ff::E_ConflateEquipElemDesc* mutable_m_elem(int index);
  inline ::proto_ff::E_ConflateEquipElemDesc* add_m_elem();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_ConflateEquipElemDesc >&
      m_elem() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_ConflateEquipElemDesc >*
      mutable_m_elem();

  // @@protoc_insertion_point(class_scope:proto_ff.E_ConflateEquip)
 private:
  inline void set_has_m_id();
  inline void clear_has_m_id();
  inline void set_has_m_openlv();
  inline void clear_has_m_openlv();
  inline void set_has_m_grouptype();
  inline void clear_has_m_grouptype();
  inline void set_has_m_subtype();
  inline void clear_has_m_subtype();
  inline void set_has_m_needsameposition();
  inline void clear_has_m_needsameposition();
  inline void set_has_m_star();
  inline void clear_has_m_star();
  inline void set_has_m_quality();
  inline void clear_has_m_quality();
  inline void set_has_m_wearquality();
  inline void clear_has_m_wearquality();
  inline void set_has_m_elemstar();
  inline void clear_has_m_elemstar();
  inline void set_has_m_elemquality();
  inline void clear_has_m_elemquality();
  inline void set_has_m_elemwearquality();
  inline void clear_has_m_elemwearquality();
  inline void set_has_m_minimum();
  inline void clear_has_m_minimum();
  inline void set_has_m_minisuccessrate();
  inline void clear_has_m_minisuccessrate();
  inline void set_has_m_maxmum();
  inline void clear_has_m_maxmum();
  inline void set_has_m_maxsuccessrate();
  inline void clear_has_m_maxsuccessrate();
  inline void set_has_m_muststar();
  inline void clear_has_m_muststar();
  inline void set_has_m_mustquality();
  inline void clear_has_m_mustquality();
  inline void set_has_m_mustwearquality();
  inline void clear_has_m_mustwearquality();
  inline void set_has_m_mustnum();
  inline void clear_has_m_mustnum();
  inline void set_has_m_usemoney();
  inline void clear_has_m_usemoney();
  inline void set_has_m_cost();
  inline void clear_has_m_cost();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_id_;
  ::google::protobuf::int32 m_openlv_;
  ::google::protobuf::int32 m_grouptype_;
  ::google::protobuf::int32 m_subtype_;
  ::google::protobuf::int32 m_needsameposition_;
  ::google::protobuf::int32 m_star_;
  ::google::protobuf::int32 m_quality_;
  ::google::protobuf::int32 m_wearquality_;
  ::google::protobuf::int32 m_elemstar_;
  ::google::protobuf::int32 m_elemquality_;
  ::google::protobuf::int32 m_elemwearquality_;
  ::google::protobuf::int32 m_minimum_;
  ::google::protobuf::int32 m_minisuccessrate_;
  ::google::protobuf::int32 m_maxmum_;
  ::google::protobuf::int32 m_maxsuccessrate_;
  ::google::protobuf::int32 m_muststar_;
  ::google::protobuf::int32 m_mustquality_;
  ::google::protobuf::int32 m_mustwearquality_;
  ::google::protobuf::int32 m_mustnum_;
  ::google::protobuf::int32 m_usemoney_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_ConflateEquipElemDesc > m_elem_;
  ::google::protobuf::int32 m_cost_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(22 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fConflate_2eproto();
  friend void protobuf_AssignDesc_E_5fConflate_2eproto();
  friend void protobuf_ShutdownFile_E_5fConflate_2eproto();

  void InitAsDefaultInstance();
  static E_ConflateEquip* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_ConflateEquip : public ::google::protobuf::Message {
 public:
  Sheet_ConflateEquip();
  virtual ~Sheet_ConflateEquip();

  Sheet_ConflateEquip(const Sheet_ConflateEquip& from);

  inline Sheet_ConflateEquip& operator=(const Sheet_ConflateEquip& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_ConflateEquip& default_instance();

  void Swap(Sheet_ConflateEquip* other);

  // implements Message ----------------------------------------------

  Sheet_ConflateEquip* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_ConflateEquip& from);
  void MergeFrom(const Sheet_ConflateEquip& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.E_ConflateEquip E_ConflateEquip_List = 1;
  inline int e_conflateequip_list_size() const;
  inline void clear_e_conflateequip_list();
  static const int kEConflateEquipListFieldNumber = 1;
  inline const ::proto_ff::E_ConflateEquip& e_conflateequip_list(int index) const;
  inline ::proto_ff::E_ConflateEquip* mutable_e_conflateequip_list(int index);
  inline ::proto_ff::E_ConflateEquip* add_e_conflateequip_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_ConflateEquip >&
      e_conflateequip_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_ConflateEquip >*
      mutable_e_conflateequip_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_ConflateEquip)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_ConflateEquip > e_conflateequip_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fConflate_2eproto();
  friend void protobuf_AssignDesc_E_5fConflate_2eproto();
  friend void protobuf_ShutdownFile_E_5fConflate_2eproto();

  void InitAsDefaultInstance();
  static Sheet_ConflateEquip* default_instance_;
};
// -------------------------------------------------------------------

class E_ConflateGrouptype : public ::google::protobuf::Message {
 public:
  E_ConflateGrouptype();
  virtual ~E_ConflateGrouptype();

  E_ConflateGrouptype(const E_ConflateGrouptype& from);

  inline E_ConflateGrouptype& operator=(const E_ConflateGrouptype& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_ConflateGrouptype& default_instance();

  void Swap(E_ConflateGrouptype* other);

  // implements Message ----------------------------------------------

  E_ConflateGrouptype* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_ConflateGrouptype& from);
  void MergeFrom(const E_ConflateGrouptype& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 m_id = 1;
  inline bool has_m_id() const;
  inline void clear_m_id();
  static const int kMIdFieldNumber = 1;
  inline ::google::protobuf::int32 m_id() const;
  inline void set_m_id(::google::protobuf::int32 value);

  // optional string m_position = 2;
  inline bool has_m_position() const;
  inline void clear_m_position();
  static const int kMPositionFieldNumber = 2;
  inline const ::std::string& m_position() const;
  inline void set_m_position(const ::std::string& value);
  inline void set_m_position(const char* value);
  inline void set_m_position(const char* value, size_t size);
  inline ::std::string* mutable_m_position();
  inline ::std::string* release_m_position();
  inline void set_allocated_m_position(::std::string* m_position);

  // optional string m_profession = 3;
  inline bool has_m_profession() const;
  inline void clear_m_profession();
  static const int kMProfessionFieldNumber = 3;
  inline const ::std::string& m_profession() const;
  inline void set_m_profession(const ::std::string& value);
  inline void set_m_profession(const char* value);
  inline void set_m_profession(const char* value, size_t size);
  inline ::std::string* mutable_m_profession();
  inline ::std::string* release_m_profession();
  inline void set_allocated_m_profession(::std::string* m_profession);

  // optional string m_typename = 4;
  inline bool has_m_typename() const;
  inline void clear_m_typename();
  static const int kMTypenameFieldNumber = 4;
  inline const ::std::string& m_typename() const;
  inline void set_m_typename(const ::std::string& value);
  inline void set_m_typename(const char* value);
  inline void set_m_typename(const char* value, size_t size);
  inline ::std::string* mutable_m_typename();
  inline ::std::string* release_m_typename();
  inline void set_allocated_m_typename(::std::string* m_typename);

  // optional int32 m_unlockid = 5;
  inline bool has_m_unlockid() const;
  inline void clear_m_unlockid();
  static const int kMUnlockidFieldNumber = 5;
  inline ::google::protobuf::int32 m_unlockid() const;
  inline void set_m_unlockid(::google::protobuf::int32 value);

  // optional int32 m_entry = 6;
  inline bool has_m_entry() const;
  inline void clear_m_entry();
  static const int kMEntryFieldNumber = 6;
  inline ::google::protobuf::int32 m_entry() const;
  inline void set_m_entry(::google::protobuf::int32 value);

  // optional int32 m_rule = 7;
  inline bool has_m_rule() const;
  inline void clear_m_rule();
  static const int kMRuleFieldNumber = 7;
  inline ::google::protobuf::int32 m_rule() const;
  inline void set_m_rule(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.E_ConflateGrouptype)
 private:
  inline void set_has_m_id();
  inline void clear_has_m_id();
  inline void set_has_m_position();
  inline void clear_has_m_position();
  inline void set_has_m_profession();
  inline void clear_has_m_profession();
  inline void set_has_m_typename();
  inline void clear_has_m_typename();
  inline void set_has_m_unlockid();
  inline void clear_has_m_unlockid();
  inline void set_has_m_entry();
  inline void clear_has_m_entry();
  inline void set_has_m_rule();
  inline void clear_has_m_rule();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* m_position_;
  ::std::string* m_profession_;
  ::google::protobuf::int32 m_id_;
  ::google::protobuf::int32 m_unlockid_;
  ::std::string* m_typename_;
  ::google::protobuf::int32 m_entry_;
  ::google::protobuf::int32 m_rule_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fConflate_2eproto();
  friend void protobuf_AssignDesc_E_5fConflate_2eproto();
  friend void protobuf_ShutdownFile_E_5fConflate_2eproto();

  void InitAsDefaultInstance();
  static E_ConflateGrouptype* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_ConflateGrouptype : public ::google::protobuf::Message {
 public:
  Sheet_ConflateGrouptype();
  virtual ~Sheet_ConflateGrouptype();

  Sheet_ConflateGrouptype(const Sheet_ConflateGrouptype& from);

  inline Sheet_ConflateGrouptype& operator=(const Sheet_ConflateGrouptype& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_ConflateGrouptype& default_instance();

  void Swap(Sheet_ConflateGrouptype* other);

  // implements Message ----------------------------------------------

  Sheet_ConflateGrouptype* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_ConflateGrouptype& from);
  void MergeFrom(const Sheet_ConflateGrouptype& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.E_ConflateGrouptype E_ConflateGrouptype_List = 1;
  inline int e_conflategrouptype_list_size() const;
  inline void clear_e_conflategrouptype_list();
  static const int kEConflateGrouptypeListFieldNumber = 1;
  inline const ::proto_ff::E_ConflateGrouptype& e_conflategrouptype_list(int index) const;
  inline ::proto_ff::E_ConflateGrouptype* mutable_e_conflategrouptype_list(int index);
  inline ::proto_ff::E_ConflateGrouptype* add_e_conflategrouptype_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_ConflateGrouptype >&
      e_conflategrouptype_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_ConflateGrouptype >*
      mutable_e_conflategrouptype_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_ConflateGrouptype)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_ConflateGrouptype > e_conflategrouptype_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fConflate_2eproto();
  friend void protobuf_AssignDesc_E_5fConflate_2eproto();
  friend void protobuf_ShutdownFile_E_5fConflate_2eproto();

  void InitAsDefaultInstance();
  static Sheet_ConflateGrouptype* default_instance_;
};
// -------------------------------------------------------------------

class E_ConflateSubtype : public ::google::protobuf::Message {
 public:
  E_ConflateSubtype();
  virtual ~E_ConflateSubtype();

  E_ConflateSubtype(const E_ConflateSubtype& from);

  inline E_ConflateSubtype& operator=(const E_ConflateSubtype& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_ConflateSubtype& default_instance();

  void Swap(E_ConflateSubtype* other);

  // implements Message ----------------------------------------------

  E_ConflateSubtype* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_ConflateSubtype& from);
  void MergeFrom(const E_ConflateSubtype& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 m_id = 1;
  inline bool has_m_id() const;
  inline void clear_m_id();
  static const int kMIdFieldNumber = 1;
  inline ::google::protobuf::int32 m_id() const;
  inline void set_m_id(::google::protobuf::int32 value);

  // optional string m_subname = 2;
  inline bool has_m_subname() const;
  inline void clear_m_subname();
  static const int kMSubnameFieldNumber = 2;
  inline const ::std::string& m_subname() const;
  inline void set_m_subname(const ::std::string& value);
  inline void set_m_subname(const char* value);
  inline void set_m_subname(const char* value, size_t size);
  inline ::std::string* mutable_m_subname();
  inline ::std::string* release_m_subname();
  inline void set_allocated_m_subname(::std::string* m_subname);

  // optional int32 m_groupid = 3;
  inline bool has_m_groupid() const;
  inline void clear_m_groupid();
  static const int kMGroupidFieldNumber = 3;
  inline ::google::protobuf::int32 m_groupid() const;
  inline void set_m_groupid(::google::protobuf::int32 value);

  // optional int32 m_openlv = 4;
  inline bool has_m_openlv() const;
  inline void clear_m_openlv();
  static const int kMOpenlvFieldNumber = 4;
  inline ::google::protobuf::int32 m_openlv() const;
  inline void set_m_openlv(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.E_ConflateSubtype)
 private:
  inline void set_has_m_id();
  inline void clear_has_m_id();
  inline void set_has_m_subname();
  inline void clear_has_m_subname();
  inline void set_has_m_groupid();
  inline void clear_has_m_groupid();
  inline void set_has_m_openlv();
  inline void clear_has_m_openlv();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* m_subname_;
  ::google::protobuf::int32 m_id_;
  ::google::protobuf::int32 m_groupid_;
  ::google::protobuf::int32 m_openlv_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fConflate_2eproto();
  friend void protobuf_AssignDesc_E_5fConflate_2eproto();
  friend void protobuf_ShutdownFile_E_5fConflate_2eproto();

  void InitAsDefaultInstance();
  static E_ConflateSubtype* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_ConflateSubtype : public ::google::protobuf::Message {
 public:
  Sheet_ConflateSubtype();
  virtual ~Sheet_ConflateSubtype();

  Sheet_ConflateSubtype(const Sheet_ConflateSubtype& from);

  inline Sheet_ConflateSubtype& operator=(const Sheet_ConflateSubtype& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_ConflateSubtype& default_instance();

  void Swap(Sheet_ConflateSubtype* other);

  // implements Message ----------------------------------------------

  Sheet_ConflateSubtype* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_ConflateSubtype& from);
  void MergeFrom(const Sheet_ConflateSubtype& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.E_ConflateSubtype E_ConflateSubtype_List = 1;
  inline int e_conflatesubtype_list_size() const;
  inline void clear_e_conflatesubtype_list();
  static const int kEConflateSubtypeListFieldNumber = 1;
  inline const ::proto_ff::E_ConflateSubtype& e_conflatesubtype_list(int index) const;
  inline ::proto_ff::E_ConflateSubtype* mutable_e_conflatesubtype_list(int index);
  inline ::proto_ff::E_ConflateSubtype* add_e_conflatesubtype_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_ConflateSubtype >&
      e_conflatesubtype_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_ConflateSubtype >*
      mutable_e_conflatesubtype_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_ConflateSubtype)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_ConflateSubtype > e_conflatesubtype_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fConflate_2eproto();
  friend void protobuf_AssignDesc_E_5fConflate_2eproto();
  friend void protobuf_ShutdownFile_E_5fConflate_2eproto();

  void InitAsDefaultInstance();
  static Sheet_ConflateSubtype* default_instance_;
};
// -------------------------------------------------------------------

class E_ConflatePropReplaceDesc : public ::google::protobuf::Message {
 public:
  E_ConflatePropReplaceDesc();
  virtual ~E_ConflatePropReplaceDesc();

  E_ConflatePropReplaceDesc(const E_ConflatePropReplaceDesc& from);

  inline E_ConflatePropReplaceDesc& operator=(const E_ConflatePropReplaceDesc& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_ConflatePropReplaceDesc& default_instance();

  void Swap(E_ConflatePropReplaceDesc* other);

  // implements Message ----------------------------------------------

  E_ConflatePropReplaceDesc* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_ConflatePropReplaceDesc& from);
  void MergeFrom(const E_ConflatePropReplaceDesc& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 m_num = 1;
  inline bool has_m_num() const;
  inline void clear_m_num();
  static const int kMNumFieldNumber = 1;
  inline ::google::protobuf::int32 m_num() const;
  inline void set_m_num(::google::protobuf::int32 value);

  // optional int32 m_id = 2;
  inline bool has_m_id() const;
  inline void clear_m_id();
  static const int kMIdFieldNumber = 2;
  inline ::google::protobuf::int32 m_id() const;
  inline void set_m_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.E_ConflatePropReplaceDesc)
 private:
  inline void set_has_m_num();
  inline void clear_has_m_num();
  inline void set_has_m_id();
  inline void clear_has_m_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_num_;
  ::google::protobuf::int32 m_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fConflate_2eproto();
  friend void protobuf_AssignDesc_E_5fConflate_2eproto();
  friend void protobuf_ShutdownFile_E_5fConflate_2eproto();

  void InitAsDefaultInstance();
  static E_ConflatePropReplaceDesc* default_instance_;
};
// -------------------------------------------------------------------

class E_ConflatePropElemDesc : public ::google::protobuf::Message {
 public:
  E_ConflatePropElemDesc();
  virtual ~E_ConflatePropElemDesc();

  E_ConflatePropElemDesc(const E_ConflatePropElemDesc& from);

  inline E_ConflatePropElemDesc& operator=(const E_ConflatePropElemDesc& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_ConflatePropElemDesc& default_instance();

  void Swap(E_ConflatePropElemDesc* other);

  // implements Message ----------------------------------------------

  E_ConflatePropElemDesc* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_ConflatePropElemDesc& from);
  void MergeFrom(const E_ConflatePropElemDesc& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 m_num = 1;
  inline bool has_m_num() const;
  inline void clear_m_num();
  static const int kMNumFieldNumber = 1;
  inline ::google::protobuf::int32 m_num() const;
  inline void set_m_num(::google::protobuf::int32 value);

  // optional int32 m_id = 2;
  inline bool has_m_id() const;
  inline void clear_m_id();
  static const int kMIdFieldNumber = 2;
  inline ::google::protobuf::int32 m_id() const;
  inline void set_m_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.E_ConflatePropElemDesc)
 private:
  inline void set_has_m_num();
  inline void clear_has_m_num();
  inline void set_has_m_id();
  inline void clear_has_m_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_num_;
  ::google::protobuf::int32 m_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fConflate_2eproto();
  friend void protobuf_AssignDesc_E_5fConflate_2eproto();
  friend void protobuf_ShutdownFile_E_5fConflate_2eproto();

  void InitAsDefaultInstance();
  static E_ConflatePropElemDesc* default_instance_;
};
// -------------------------------------------------------------------

class E_ConflateProp : public ::google::protobuf::Message {
 public:
  E_ConflateProp();
  virtual ~E_ConflateProp();

  E_ConflateProp(const E_ConflateProp& from);

  inline E_ConflateProp& operator=(const E_ConflateProp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_ConflateProp& default_instance();

  void Swap(E_ConflateProp* other);

  // implements Message ----------------------------------------------

  E_ConflateProp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_ConflateProp& from);
  void MergeFrom(const E_ConflateProp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 m_target = 1;
  inline bool has_m_target() const;
  inline void clear_m_target();
  static const int kMTargetFieldNumber = 1;
  inline ::google::protobuf::int32 m_target() const;
  inline void set_m_target(::google::protobuf::int32 value);

  // optional int32 m_openlv = 2;
  inline bool has_m_openlv() const;
  inline void clear_m_openlv();
  static const int kMOpenlvFieldNumber = 2;
  inline ::google::protobuf::int32 m_openlv() const;
  inline void set_m_openlv(::google::protobuf::int32 value);

  // optional int32 m_subtype = 3;
  inline bool has_m_subtype() const;
  inline void clear_m_subtype();
  static const int kMSubtypeFieldNumber = 3;
  inline ::google::protobuf::int32 m_subtype() const;
  inline void set_m_subtype(::google::protobuf::int32 value);

  // optional int32 m_order = 4;
  inline bool has_m_order() const;
  inline void clear_m_order();
  static const int kMOrderFieldNumber = 4;
  inline ::google::protobuf::int32 m_order() const;
  inline void set_m_order(::google::protobuf::int32 value);

  // optional int32 m_activate = 5;
  inline bool has_m_activate() const;
  inline void clear_m_activate();
  static const int kMActivateFieldNumber = 5;
  inline ::google::protobuf::int32 m_activate() const;
  inline void set_m_activate(::google::protobuf::int32 value);

  // optional int32 m_display = 6;
  inline bool has_m_display() const;
  inline void clear_m_display();
  static const int kMDisplayFieldNumber = 6;
  inline ::google::protobuf::int32 m_display() const;
  inline void set_m_display(::google::protobuf::int32 value);

  // optional int32 m_replacetype = 7;
  inline bool has_m_replacetype() const;
  inline void clear_m_replacetype();
  static const int kMReplacetypeFieldNumber = 7;
  inline ::google::protobuf::int32 m_replacetype() const;
  inline void set_m_replacetype(::google::protobuf::int32 value);

  // optional int32 m_culture = 8;
  inline bool has_m_culture() const;
  inline void clear_m_culture();
  static const int kMCultureFieldNumber = 8;
  inline ::google::protobuf::int32 m_culture() const;
  inline void set_m_culture(::google::protobuf::int32 value);

  // optional int32 m_usemoney = 9;
  inline bool has_m_usemoney() const;
  inline void clear_m_usemoney();
  static const int kMUsemoneyFieldNumber = 9;
  inline ::google::protobuf::int32 m_usemoney() const;
  inline void set_m_usemoney(::google::protobuf::int32 value);

  // optional int32 m_cost = 10;
  inline bool has_m_cost() const;
  inline void clear_m_cost();
  static const int kMCostFieldNumber = 10;
  inline ::google::protobuf::int32 m_cost() const;
  inline void set_m_cost(::google::protobuf::int32 value);

  // repeated .proto_ff.E_ConflatePropReplaceDesc m_replace = 11;
  inline int m_replace_size() const;
  inline void clear_m_replace();
  static const int kMReplaceFieldNumber = 11;
  inline const ::proto_ff::E_ConflatePropReplaceDesc& m_replace(int index) const;
  inline ::proto_ff::E_ConflatePropReplaceDesc* mutable_m_replace(int index);
  inline ::proto_ff::E_ConflatePropReplaceDesc* add_m_replace();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_ConflatePropReplaceDesc >&
      m_replace() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_ConflatePropReplaceDesc >*
      mutable_m_replace();

  // repeated .proto_ff.E_ConflatePropElemDesc m_elem = 12;
  inline int m_elem_size() const;
  inline void clear_m_elem();
  static const int kMElemFieldNumber = 12;
  inline const ::proto_ff::E_ConflatePropElemDesc& m_elem(int index) const;
  inline ::proto_ff::E_ConflatePropElemDesc* mutable_m_elem(int index);
  inline ::proto_ff::E_ConflatePropElemDesc* add_m_elem();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_ConflatePropElemDesc >&
      m_elem() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_ConflatePropElemDesc >*
      mutable_m_elem();

  // @@protoc_insertion_point(class_scope:proto_ff.E_ConflateProp)
 private:
  inline void set_has_m_target();
  inline void clear_has_m_target();
  inline void set_has_m_openlv();
  inline void clear_has_m_openlv();
  inline void set_has_m_subtype();
  inline void clear_has_m_subtype();
  inline void set_has_m_order();
  inline void clear_has_m_order();
  inline void set_has_m_activate();
  inline void clear_has_m_activate();
  inline void set_has_m_display();
  inline void clear_has_m_display();
  inline void set_has_m_replacetype();
  inline void clear_has_m_replacetype();
  inline void set_has_m_culture();
  inline void clear_has_m_culture();
  inline void set_has_m_usemoney();
  inline void clear_has_m_usemoney();
  inline void set_has_m_cost();
  inline void clear_has_m_cost();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_target_;
  ::google::protobuf::int32 m_openlv_;
  ::google::protobuf::int32 m_subtype_;
  ::google::protobuf::int32 m_order_;
  ::google::protobuf::int32 m_activate_;
  ::google::protobuf::int32 m_display_;
  ::google::protobuf::int32 m_replacetype_;
  ::google::protobuf::int32 m_culture_;
  ::google::protobuf::int32 m_usemoney_;
  ::google::protobuf::int32 m_cost_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_ConflatePropReplaceDesc > m_replace_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_ConflatePropElemDesc > m_elem_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(12 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fConflate_2eproto();
  friend void protobuf_AssignDesc_E_5fConflate_2eproto();
  friend void protobuf_ShutdownFile_E_5fConflate_2eproto();

  void InitAsDefaultInstance();
  static E_ConflateProp* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_ConflateProp : public ::google::protobuf::Message {
 public:
  Sheet_ConflateProp();
  virtual ~Sheet_ConflateProp();

  Sheet_ConflateProp(const Sheet_ConflateProp& from);

  inline Sheet_ConflateProp& operator=(const Sheet_ConflateProp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_ConflateProp& default_instance();

  void Swap(Sheet_ConflateProp* other);

  // implements Message ----------------------------------------------

  Sheet_ConflateProp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_ConflateProp& from);
  void MergeFrom(const Sheet_ConflateProp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.E_ConflateProp E_ConflateProp_List = 1;
  inline int e_conflateprop_list_size() const;
  inline void clear_e_conflateprop_list();
  static const int kEConflatePropListFieldNumber = 1;
  inline const ::proto_ff::E_ConflateProp& e_conflateprop_list(int index) const;
  inline ::proto_ff::E_ConflateProp* mutable_e_conflateprop_list(int index);
  inline ::proto_ff::E_ConflateProp* add_e_conflateprop_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_ConflateProp >&
      e_conflateprop_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_ConflateProp >*
      mutable_e_conflateprop_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_ConflateProp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_ConflateProp > e_conflateprop_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fConflate_2eproto();
  friend void protobuf_AssignDesc_E_5fConflate_2eproto();
  friend void protobuf_ShutdownFile_E_5fConflate_2eproto();

  void InitAsDefaultInstance();
  static Sheet_ConflateProp* default_instance_;
};
// -------------------------------------------------------------------

class E_ConflateJewelry_spElemDesc : public ::google::protobuf::Message {
 public:
  E_ConflateJewelry_spElemDesc();
  virtual ~E_ConflateJewelry_spElemDesc();

  E_ConflateJewelry_spElemDesc(const E_ConflateJewelry_spElemDesc& from);

  inline E_ConflateJewelry_spElemDesc& operator=(const E_ConflateJewelry_spElemDesc& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_ConflateJewelry_spElemDesc& default_instance();

  void Swap(E_ConflateJewelry_spElemDesc* other);

  // implements Message ----------------------------------------------

  E_ConflateJewelry_spElemDesc* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_ConflateJewelry_spElemDesc& from);
  void MergeFrom(const E_ConflateJewelry_spElemDesc& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 m_num = 1;
  inline bool has_m_num() const;
  inline void clear_m_num();
  static const int kMNumFieldNumber = 1;
  inline ::google::protobuf::int32 m_num() const;
  inline void set_m_num(::google::protobuf::int32 value);

  // optional int32 m_id = 2;
  inline bool has_m_id() const;
  inline void clear_m_id();
  static const int kMIdFieldNumber = 2;
  inline ::google::protobuf::int32 m_id() const;
  inline void set_m_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.E_ConflateJewelry_spElemDesc)
 private:
  inline void set_has_m_num();
  inline void clear_has_m_num();
  inline void set_has_m_id();
  inline void clear_has_m_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_num_;
  ::google::protobuf::int32 m_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fConflate_2eproto();
  friend void protobuf_AssignDesc_E_5fConflate_2eproto();
  friend void protobuf_ShutdownFile_E_5fConflate_2eproto();

  void InitAsDefaultInstance();
  static E_ConflateJewelry_spElemDesc* default_instance_;
};
// -------------------------------------------------------------------

class E_ConflateJewelry_sp : public ::google::protobuf::Message {
 public:
  E_ConflateJewelry_sp();
  virtual ~E_ConflateJewelry_sp();

  E_ConflateJewelry_sp(const E_ConflateJewelry_sp& from);

  inline E_ConflateJewelry_sp& operator=(const E_ConflateJewelry_sp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_ConflateJewelry_sp& default_instance();

  void Swap(E_ConflateJewelry_sp* other);

  // implements Message ----------------------------------------------

  E_ConflateJewelry_sp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_ConflateJewelry_sp& from);
  void MergeFrom(const E_ConflateJewelry_sp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 m_id = 1;
  inline bool has_m_id() const;
  inline void clear_m_id();
  static const int kMIdFieldNumber = 1;
  inline ::google::protobuf::int32 m_id() const;
  inline void set_m_id(::google::protobuf::int32 value);

  // optional int32 m_grouptype = 2;
  inline bool has_m_grouptype() const;
  inline void clear_m_grouptype();
  static const int kMGrouptypeFieldNumber = 2;
  inline ::google::protobuf::int32 m_grouptype() const;
  inline void set_m_grouptype(::google::protobuf::int32 value);

  // optional int32 m_openwearquality = 3;
  inline bool has_m_openwearquality() const;
  inline void clear_m_openwearquality();
  static const int kMOpenwearqualityFieldNumber = 3;
  inline ::google::protobuf::int32 m_openwearquality() const;
  inline void set_m_openwearquality(::google::protobuf::int32 value);

  // optional int32 m_openspecial = 4;
  inline bool has_m_openspecial() const;
  inline void clear_m_openspecial();
  static const int kMOpenspecialFieldNumber = 4;
  inline ::google::protobuf::int32 m_openspecial() const;
  inline void set_m_openspecial(::google::protobuf::int32 value);

  // optional int32 m_position = 5;
  inline bool has_m_position() const;
  inline void clear_m_position();
  static const int kMPositionFieldNumber = 5;
  inline ::google::protobuf::int32 m_position() const;
  inline void set_m_position(::google::protobuf::int32 value);

  // optional int32 m_quality = 6;
  inline bool has_m_quality() const;
  inline void clear_m_quality();
  static const int kMQualityFieldNumber = 6;
  inline ::google::protobuf::int32 m_quality() const;
  inline void set_m_quality(::google::protobuf::int32 value);

  // optional int32 m_star = 7;
  inline bool has_m_star() const;
  inline void clear_m_star();
  static const int kMStarFieldNumber = 7;
  inline ::google::protobuf::int32 m_star() const;
  inline void set_m_star(::google::protobuf::int32 value);

  // optional int32 m_next = 8;
  inline bool has_m_next() const;
  inline void clear_m_next();
  static const int kMNextFieldNumber = 8;
  inline ::google::protobuf::int32 m_next() const;
  inline void set_m_next(::google::protobuf::int32 value);

  // repeated .proto_ff.E_ConflateJewelry_spElemDesc m_elem = 9;
  inline int m_elem_size() const;
  inline void clear_m_elem();
  static const int kMElemFieldNumber = 9;
  inline const ::proto_ff::E_ConflateJewelry_spElemDesc& m_elem(int index) const;
  inline ::proto_ff::E_ConflateJewelry_spElemDesc* mutable_m_elem(int index);
  inline ::proto_ff::E_ConflateJewelry_spElemDesc* add_m_elem();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_ConflateJewelry_spElemDesc >&
      m_elem() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_ConflateJewelry_spElemDesc >*
      mutable_m_elem();

  // @@protoc_insertion_point(class_scope:proto_ff.E_ConflateJewelry_sp)
 private:
  inline void set_has_m_id();
  inline void clear_has_m_id();
  inline void set_has_m_grouptype();
  inline void clear_has_m_grouptype();
  inline void set_has_m_openwearquality();
  inline void clear_has_m_openwearquality();
  inline void set_has_m_openspecial();
  inline void clear_has_m_openspecial();
  inline void set_has_m_position();
  inline void clear_has_m_position();
  inline void set_has_m_quality();
  inline void clear_has_m_quality();
  inline void set_has_m_star();
  inline void clear_has_m_star();
  inline void set_has_m_next();
  inline void clear_has_m_next();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_id_;
  ::google::protobuf::int32 m_grouptype_;
  ::google::protobuf::int32 m_openwearquality_;
  ::google::protobuf::int32 m_openspecial_;
  ::google::protobuf::int32 m_position_;
  ::google::protobuf::int32 m_quality_;
  ::google::protobuf::int32 m_star_;
  ::google::protobuf::int32 m_next_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_ConflateJewelry_spElemDesc > m_elem_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(9 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fConflate_2eproto();
  friend void protobuf_AssignDesc_E_5fConflate_2eproto();
  friend void protobuf_ShutdownFile_E_5fConflate_2eproto();

  void InitAsDefaultInstance();
  static E_ConflateJewelry_sp* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_ConflateJewelry_sp : public ::google::protobuf::Message {
 public:
  Sheet_ConflateJewelry_sp();
  virtual ~Sheet_ConflateJewelry_sp();

  Sheet_ConflateJewelry_sp(const Sheet_ConflateJewelry_sp& from);

  inline Sheet_ConflateJewelry_sp& operator=(const Sheet_ConflateJewelry_sp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_ConflateJewelry_sp& default_instance();

  void Swap(Sheet_ConflateJewelry_sp* other);

  // implements Message ----------------------------------------------

  Sheet_ConflateJewelry_sp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_ConflateJewelry_sp& from);
  void MergeFrom(const Sheet_ConflateJewelry_sp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.E_ConflateJewelry_sp E_ConflateJewelry_sp_List = 1;
  inline int e_conflatejewelry_sp_list_size() const;
  inline void clear_e_conflatejewelry_sp_list();
  static const int kEConflateJewelrySpListFieldNumber = 1;
  inline const ::proto_ff::E_ConflateJewelry_sp& e_conflatejewelry_sp_list(int index) const;
  inline ::proto_ff::E_ConflateJewelry_sp* mutable_e_conflatejewelry_sp_list(int index);
  inline ::proto_ff::E_ConflateJewelry_sp* add_e_conflatejewelry_sp_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_ConflateJewelry_sp >&
      e_conflatejewelry_sp_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_ConflateJewelry_sp >*
      mutable_e_conflatejewelry_sp_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_ConflateJewelry_sp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_ConflateJewelry_sp > e_conflatejewelry_sp_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fConflate_2eproto();
  friend void protobuf_AssignDesc_E_5fConflate_2eproto();
  friend void protobuf_ShutdownFile_E_5fConflate_2eproto();

  void InitAsDefaultInstance();
  static Sheet_ConflateJewelry_sp* default_instance_;
};
// -------------------------------------------------------------------

class E_ConflateJewelry_zlElemDesc : public ::google::protobuf::Message {
 public:
  E_ConflateJewelry_zlElemDesc();
  virtual ~E_ConflateJewelry_zlElemDesc();

  E_ConflateJewelry_zlElemDesc(const E_ConflateJewelry_zlElemDesc& from);

  inline E_ConflateJewelry_zlElemDesc& operator=(const E_ConflateJewelry_zlElemDesc& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_ConflateJewelry_zlElemDesc& default_instance();

  void Swap(E_ConflateJewelry_zlElemDesc* other);

  // implements Message ----------------------------------------------

  E_ConflateJewelry_zlElemDesc* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_ConflateJewelry_zlElemDesc& from);
  void MergeFrom(const E_ConflateJewelry_zlElemDesc& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 m_num = 1;
  inline bool has_m_num() const;
  inline void clear_m_num();
  static const int kMNumFieldNumber = 1;
  inline ::google::protobuf::int32 m_num() const;
  inline void set_m_num(::google::protobuf::int32 value);

  // optional int32 m_id = 2;
  inline bool has_m_id() const;
  inline void clear_m_id();
  static const int kMIdFieldNumber = 2;
  inline ::google::protobuf::int32 m_id() const;
  inline void set_m_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.E_ConflateJewelry_zlElemDesc)
 private:
  inline void set_has_m_num();
  inline void clear_has_m_num();
  inline void set_has_m_id();
  inline void clear_has_m_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_num_;
  ::google::protobuf::int32 m_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fConflate_2eproto();
  friend void protobuf_AssignDesc_E_5fConflate_2eproto();
  friend void protobuf_ShutdownFile_E_5fConflate_2eproto();

  void InitAsDefaultInstance();
  static E_ConflateJewelry_zlElemDesc* default_instance_;
};
// -------------------------------------------------------------------

class E_ConflateJewelry_zl : public ::google::protobuf::Message {
 public:
  E_ConflateJewelry_zl();
  virtual ~E_ConflateJewelry_zl();

  E_ConflateJewelry_zl(const E_ConflateJewelry_zl& from);

  inline E_ConflateJewelry_zl& operator=(const E_ConflateJewelry_zl& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_ConflateJewelry_zl& default_instance();

  void Swap(E_ConflateJewelry_zl* other);

  // implements Message ----------------------------------------------

  E_ConflateJewelry_zl* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_ConflateJewelry_zl& from);
  void MergeFrom(const E_ConflateJewelry_zl& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 m_id = 1;
  inline bool has_m_id() const;
  inline void clear_m_id();
  static const int kMIdFieldNumber = 1;
  inline ::google::protobuf::int32 m_id() const;
  inline void set_m_id(::google::protobuf::int32 value);

  // optional int32 m_openquality = 2;
  inline bool has_m_openquality() const;
  inline void clear_m_openquality();
  static const int kMOpenqualityFieldNumber = 2;
  inline ::google::protobuf::int32 m_openquality() const;
  inline void set_m_openquality(::google::protobuf::int32 value);

  // optional int32 m_grouptype = 3;
  inline bool has_m_grouptype() const;
  inline void clear_m_grouptype();
  static const int kMGrouptypeFieldNumber = 3;
  inline ::google::protobuf::int32 m_grouptype() const;
  inline void set_m_grouptype(::google::protobuf::int32 value);

  // optional int32 m_position = 4;
  inline bool has_m_position() const;
  inline void clear_m_position();
  static const int kMPositionFieldNumber = 4;
  inline ::google::protobuf::int32 m_position() const;
  inline void set_m_position(::google::protobuf::int32 value);

  // optional int32 m_zllv = 5;
  inline bool has_m_zllv() const;
  inline void clear_m_zllv();
  static const int kMZllvFieldNumber = 5;
  inline ::google::protobuf::int32 m_zllv() const;
  inline void set_m_zllv(::google::protobuf::int32 value);

  // optional int32 m_next = 6;
  inline bool has_m_next() const;
  inline void clear_m_next();
  static const int kMNextFieldNumber = 6;
  inline ::google::protobuf::int32 m_next() const;
  inline void set_m_next(::google::protobuf::int32 value);

  // optional string m_zlname = 7;
  inline bool has_m_zlname() const;
  inline void clear_m_zlname();
  static const int kMZlnameFieldNumber = 7;
  inline const ::std::string& m_zlname() const;
  inline void set_m_zlname(const ::std::string& value);
  inline void set_m_zlname(const char* value);
  inline void set_m_zlname(const char* value, size_t size);
  inline ::std::string* mutable_m_zlname();
  inline ::std::string* release_m_zlname();
  inline void set_allocated_m_zlname(::std::string* m_zlname);

  // repeated .proto_ff.E_ConflateJewelry_zlElemDesc m_elem = 8;
  inline int m_elem_size() const;
  inline void clear_m_elem();
  static const int kMElemFieldNumber = 8;
  inline const ::proto_ff::E_ConflateJewelry_zlElemDesc& m_elem(int index) const;
  inline ::proto_ff::E_ConflateJewelry_zlElemDesc* mutable_m_elem(int index);
  inline ::proto_ff::E_ConflateJewelry_zlElemDesc* add_m_elem();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_ConflateJewelry_zlElemDesc >&
      m_elem() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_ConflateJewelry_zlElemDesc >*
      mutable_m_elem();

  // @@protoc_insertion_point(class_scope:proto_ff.E_ConflateJewelry_zl)
 private:
  inline void set_has_m_id();
  inline void clear_has_m_id();
  inline void set_has_m_openquality();
  inline void clear_has_m_openquality();
  inline void set_has_m_grouptype();
  inline void clear_has_m_grouptype();
  inline void set_has_m_position();
  inline void clear_has_m_position();
  inline void set_has_m_zllv();
  inline void clear_has_m_zllv();
  inline void set_has_m_next();
  inline void clear_has_m_next();
  inline void set_has_m_zlname();
  inline void clear_has_m_zlname();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_id_;
  ::google::protobuf::int32 m_openquality_;
  ::google::protobuf::int32 m_grouptype_;
  ::google::protobuf::int32 m_position_;
  ::google::protobuf::int32 m_zllv_;
  ::google::protobuf::int32 m_next_;
  ::std::string* m_zlname_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_ConflateJewelry_zlElemDesc > m_elem_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fConflate_2eproto();
  friend void protobuf_AssignDesc_E_5fConflate_2eproto();
  friend void protobuf_ShutdownFile_E_5fConflate_2eproto();

  void InitAsDefaultInstance();
  static E_ConflateJewelry_zl* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_ConflateJewelry_zl : public ::google::protobuf::Message {
 public:
  Sheet_ConflateJewelry_zl();
  virtual ~Sheet_ConflateJewelry_zl();

  Sheet_ConflateJewelry_zl(const Sheet_ConflateJewelry_zl& from);

  inline Sheet_ConflateJewelry_zl& operator=(const Sheet_ConflateJewelry_zl& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_ConflateJewelry_zl& default_instance();

  void Swap(Sheet_ConflateJewelry_zl* other);

  // implements Message ----------------------------------------------

  Sheet_ConflateJewelry_zl* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_ConflateJewelry_zl& from);
  void MergeFrom(const Sheet_ConflateJewelry_zl& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.E_ConflateJewelry_zl E_ConflateJewelry_zl_List = 1;
  inline int e_conflatejewelry_zl_list_size() const;
  inline void clear_e_conflatejewelry_zl_list();
  static const int kEConflateJewelryZlListFieldNumber = 1;
  inline const ::proto_ff::E_ConflateJewelry_zl& e_conflatejewelry_zl_list(int index) const;
  inline ::proto_ff::E_ConflateJewelry_zl* mutable_e_conflatejewelry_zl_list(int index);
  inline ::proto_ff::E_ConflateJewelry_zl* add_e_conflatejewelry_zl_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_ConflateJewelry_zl >&
      e_conflatejewelry_zl_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_ConflateJewelry_zl >*
      mutable_e_conflatejewelry_zl_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_ConflateJewelry_zl)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_ConflateJewelry_zl > e_conflatejewelry_zl_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fConflate_2eproto();
  friend void protobuf_AssignDesc_E_5fConflate_2eproto();
  friend void protobuf_ShutdownFile_E_5fConflate_2eproto();

  void InitAsDefaultInstance();
  static Sheet_ConflateJewelry_zl* default_instance_;
};
// -------------------------------------------------------------------

class E_ConflateJewelry_sjElemDesc : public ::google::protobuf::Message {
 public:
  E_ConflateJewelry_sjElemDesc();
  virtual ~E_ConflateJewelry_sjElemDesc();

  E_ConflateJewelry_sjElemDesc(const E_ConflateJewelry_sjElemDesc& from);

  inline E_ConflateJewelry_sjElemDesc& operator=(const E_ConflateJewelry_sjElemDesc& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_ConflateJewelry_sjElemDesc& default_instance();

  void Swap(E_ConflateJewelry_sjElemDesc* other);

  // implements Message ----------------------------------------------

  E_ConflateJewelry_sjElemDesc* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_ConflateJewelry_sjElemDesc& from);
  void MergeFrom(const E_ConflateJewelry_sjElemDesc& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 m_num = 1;
  inline bool has_m_num() const;
  inline void clear_m_num();
  static const int kMNumFieldNumber = 1;
  inline ::google::protobuf::int32 m_num() const;
  inline void set_m_num(::google::protobuf::int32 value);

  // optional int32 m_id = 2;
  inline bool has_m_id() const;
  inline void clear_m_id();
  static const int kMIdFieldNumber = 2;
  inline ::google::protobuf::int32 m_id() const;
  inline void set_m_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.E_ConflateJewelry_sjElemDesc)
 private:
  inline void set_has_m_num();
  inline void clear_has_m_num();
  inline void set_has_m_id();
  inline void clear_has_m_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_num_;
  ::google::protobuf::int32 m_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fConflate_2eproto();
  friend void protobuf_AssignDesc_E_5fConflate_2eproto();
  friend void protobuf_ShutdownFile_E_5fConflate_2eproto();

  void InitAsDefaultInstance();
  static E_ConflateJewelry_sjElemDesc* default_instance_;
};
// -------------------------------------------------------------------

class E_ConflateJewelry_sj : public ::google::protobuf::Message {
 public:
  E_ConflateJewelry_sj();
  virtual ~E_ConflateJewelry_sj();

  E_ConflateJewelry_sj(const E_ConflateJewelry_sj& from);

  inline E_ConflateJewelry_sj& operator=(const E_ConflateJewelry_sj& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_ConflateJewelry_sj& default_instance();

  void Swap(E_ConflateJewelry_sj* other);

  // implements Message ----------------------------------------------

  E_ConflateJewelry_sj* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_ConflateJewelry_sj& from);
  void MergeFrom(const E_ConflateJewelry_sj& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 m_id = 1;
  inline bool has_m_id() const;
  inline void clear_m_id();
  static const int kMIdFieldNumber = 1;
  inline ::google::protobuf::int32 m_id() const;
  inline void set_m_id(::google::protobuf::int32 value);

  // optional int32 m_grouptype = 2;
  inline bool has_m_grouptype() const;
  inline void clear_m_grouptype();
  static const int kMGrouptypeFieldNumber = 2;
  inline ::google::protobuf::int32 m_grouptype() const;
  inline void set_m_grouptype(::google::protobuf::int32 value);

  // optional int32 m_position = 3;
  inline bool has_m_position() const;
  inline void clear_m_position();
  static const int kMPositionFieldNumber = 3;
  inline ::google::protobuf::int32 m_position() const;
  inline void set_m_position(::google::protobuf::int32 value);

  // optional int32 m_wearquality = 4;
  inline bool has_m_wearquality() const;
  inline void clear_m_wearquality();
  static const int kMWearqualityFieldNumber = 4;
  inline ::google::protobuf::int32 m_wearquality() const;
  inline void set_m_wearquality(::google::protobuf::int32 value);

  // optional int32 m_next = 5;
  inline bool has_m_next() const;
  inline void clear_m_next();
  static const int kMNextFieldNumber = 5;
  inline ::google::protobuf::int32 m_next() const;
  inline void set_m_next(::google::protobuf::int32 value);

  // optional int32 m_openlv = 6;
  inline bool has_m_openlv() const;
  inline void clear_m_openlv();
  static const int kMOpenlvFieldNumber = 6;
  inline ::google::protobuf::int32 m_openlv() const;
  inline void set_m_openlv(::google::protobuf::int32 value);

  // repeated .proto_ff.E_ConflateJewelry_sjElemDesc m_elem = 7;
  inline int m_elem_size() const;
  inline void clear_m_elem();
  static const int kMElemFieldNumber = 7;
  inline const ::proto_ff::E_ConflateJewelry_sjElemDesc& m_elem(int index) const;
  inline ::proto_ff::E_ConflateJewelry_sjElemDesc* mutable_m_elem(int index);
  inline ::proto_ff::E_ConflateJewelry_sjElemDesc* add_m_elem();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_ConflateJewelry_sjElemDesc >&
      m_elem() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_ConflateJewelry_sjElemDesc >*
      mutable_m_elem();

  // @@protoc_insertion_point(class_scope:proto_ff.E_ConflateJewelry_sj)
 private:
  inline void set_has_m_id();
  inline void clear_has_m_id();
  inline void set_has_m_grouptype();
  inline void clear_has_m_grouptype();
  inline void set_has_m_position();
  inline void clear_has_m_position();
  inline void set_has_m_wearquality();
  inline void clear_has_m_wearquality();
  inline void set_has_m_next();
  inline void clear_has_m_next();
  inline void set_has_m_openlv();
  inline void clear_has_m_openlv();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_id_;
  ::google::protobuf::int32 m_grouptype_;
  ::google::protobuf::int32 m_position_;
  ::google::protobuf::int32 m_wearquality_;
  ::google::protobuf::int32 m_next_;
  ::google::protobuf::int32 m_openlv_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_ConflateJewelry_sjElemDesc > m_elem_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fConflate_2eproto();
  friend void protobuf_AssignDesc_E_5fConflate_2eproto();
  friend void protobuf_ShutdownFile_E_5fConflate_2eproto();

  void InitAsDefaultInstance();
  static E_ConflateJewelry_sj* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_ConflateJewelry_sj : public ::google::protobuf::Message {
 public:
  Sheet_ConflateJewelry_sj();
  virtual ~Sheet_ConflateJewelry_sj();

  Sheet_ConflateJewelry_sj(const Sheet_ConflateJewelry_sj& from);

  inline Sheet_ConflateJewelry_sj& operator=(const Sheet_ConflateJewelry_sj& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_ConflateJewelry_sj& default_instance();

  void Swap(Sheet_ConflateJewelry_sj* other);

  // implements Message ----------------------------------------------

  Sheet_ConflateJewelry_sj* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_ConflateJewelry_sj& from);
  void MergeFrom(const Sheet_ConflateJewelry_sj& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.E_ConflateJewelry_sj E_ConflateJewelry_sj_List = 1;
  inline int e_conflatejewelry_sj_list_size() const;
  inline void clear_e_conflatejewelry_sj_list();
  static const int kEConflateJewelrySjListFieldNumber = 1;
  inline const ::proto_ff::E_ConflateJewelry_sj& e_conflatejewelry_sj_list(int index) const;
  inline ::proto_ff::E_ConflateJewelry_sj* mutable_e_conflatejewelry_sj_list(int index);
  inline ::proto_ff::E_ConflateJewelry_sj* add_e_conflatejewelry_sj_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_ConflateJewelry_sj >&
      e_conflatejewelry_sj_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_ConflateJewelry_sj >*
      mutable_e_conflatejewelry_sj_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_ConflateJewelry_sj)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_ConflateJewelry_sj > e_conflatejewelry_sj_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fConflate_2eproto();
  friend void protobuf_AssignDesc_E_5fConflate_2eproto();
  friend void protobuf_ShutdownFile_E_5fConflate_2eproto();

  void InitAsDefaultInstance();
  static Sheet_ConflateJewelry_sj* default_instance_;
};
// ===================================================================


// ===================================================================

// E_ConflateEquipElemDesc

// optional int32 m_num = 1;
inline bool E_ConflateEquipElemDesc::has_m_num() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_ConflateEquipElemDesc::set_has_m_num() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_ConflateEquipElemDesc::clear_has_m_num() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_ConflateEquipElemDesc::clear_m_num() {
  m_num_ = 0;
  clear_has_m_num();
}
inline ::google::protobuf::int32 E_ConflateEquipElemDesc::m_num() const {
  return m_num_;
}
inline void E_ConflateEquipElemDesc::set_m_num(::google::protobuf::int32 value) {
  set_has_m_num();
  m_num_ = value;
}

// optional int32 m_id = 2;
inline bool E_ConflateEquipElemDesc::has_m_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_ConflateEquipElemDesc::set_has_m_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_ConflateEquipElemDesc::clear_has_m_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_ConflateEquipElemDesc::clear_m_id() {
  m_id_ = 0;
  clear_has_m_id();
}
inline ::google::protobuf::int32 E_ConflateEquipElemDesc::m_id() const {
  return m_id_;
}
inline void E_ConflateEquipElemDesc::set_m_id(::google::protobuf::int32 value) {
  set_has_m_id();
  m_id_ = value;
}

// -------------------------------------------------------------------

// E_ConflateEquip

// optional int32 m_id = 1;
inline bool E_ConflateEquip::has_m_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_ConflateEquip::set_has_m_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_ConflateEquip::clear_has_m_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_ConflateEquip::clear_m_id() {
  m_id_ = 0;
  clear_has_m_id();
}
inline ::google::protobuf::int32 E_ConflateEquip::m_id() const {
  return m_id_;
}
inline void E_ConflateEquip::set_m_id(::google::protobuf::int32 value) {
  set_has_m_id();
  m_id_ = value;
}

// optional int32 m_openlv = 2;
inline bool E_ConflateEquip::has_m_openlv() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_ConflateEquip::set_has_m_openlv() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_ConflateEquip::clear_has_m_openlv() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_ConflateEquip::clear_m_openlv() {
  m_openlv_ = 0;
  clear_has_m_openlv();
}
inline ::google::protobuf::int32 E_ConflateEquip::m_openlv() const {
  return m_openlv_;
}
inline void E_ConflateEquip::set_m_openlv(::google::protobuf::int32 value) {
  set_has_m_openlv();
  m_openlv_ = value;
}

// optional int32 m_grouptype = 3;
inline bool E_ConflateEquip::has_m_grouptype() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void E_ConflateEquip::set_has_m_grouptype() {
  _has_bits_[0] |= 0x00000004u;
}
inline void E_ConflateEquip::clear_has_m_grouptype() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void E_ConflateEquip::clear_m_grouptype() {
  m_grouptype_ = 0;
  clear_has_m_grouptype();
}
inline ::google::protobuf::int32 E_ConflateEquip::m_grouptype() const {
  return m_grouptype_;
}
inline void E_ConflateEquip::set_m_grouptype(::google::protobuf::int32 value) {
  set_has_m_grouptype();
  m_grouptype_ = value;
}

// optional int32 m_subtype = 4;
inline bool E_ConflateEquip::has_m_subtype() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void E_ConflateEquip::set_has_m_subtype() {
  _has_bits_[0] |= 0x00000008u;
}
inline void E_ConflateEquip::clear_has_m_subtype() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void E_ConflateEquip::clear_m_subtype() {
  m_subtype_ = 0;
  clear_has_m_subtype();
}
inline ::google::protobuf::int32 E_ConflateEquip::m_subtype() const {
  return m_subtype_;
}
inline void E_ConflateEquip::set_m_subtype(::google::protobuf::int32 value) {
  set_has_m_subtype();
  m_subtype_ = value;
}

// optional int32 m_needsameposition = 5;
inline bool E_ConflateEquip::has_m_needsameposition() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void E_ConflateEquip::set_has_m_needsameposition() {
  _has_bits_[0] |= 0x00000010u;
}
inline void E_ConflateEquip::clear_has_m_needsameposition() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void E_ConflateEquip::clear_m_needsameposition() {
  m_needsameposition_ = 0;
  clear_has_m_needsameposition();
}
inline ::google::protobuf::int32 E_ConflateEquip::m_needsameposition() const {
  return m_needsameposition_;
}
inline void E_ConflateEquip::set_m_needsameposition(::google::protobuf::int32 value) {
  set_has_m_needsameposition();
  m_needsameposition_ = value;
}

// optional int32 m_star = 6;
inline bool E_ConflateEquip::has_m_star() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void E_ConflateEquip::set_has_m_star() {
  _has_bits_[0] |= 0x00000020u;
}
inline void E_ConflateEquip::clear_has_m_star() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void E_ConflateEquip::clear_m_star() {
  m_star_ = 0;
  clear_has_m_star();
}
inline ::google::protobuf::int32 E_ConflateEquip::m_star() const {
  return m_star_;
}
inline void E_ConflateEquip::set_m_star(::google::protobuf::int32 value) {
  set_has_m_star();
  m_star_ = value;
}

// optional int32 m_quality = 7;
inline bool E_ConflateEquip::has_m_quality() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void E_ConflateEquip::set_has_m_quality() {
  _has_bits_[0] |= 0x00000040u;
}
inline void E_ConflateEquip::clear_has_m_quality() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void E_ConflateEquip::clear_m_quality() {
  m_quality_ = 0;
  clear_has_m_quality();
}
inline ::google::protobuf::int32 E_ConflateEquip::m_quality() const {
  return m_quality_;
}
inline void E_ConflateEquip::set_m_quality(::google::protobuf::int32 value) {
  set_has_m_quality();
  m_quality_ = value;
}

// optional int32 m_wearquality = 8;
inline bool E_ConflateEquip::has_m_wearquality() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void E_ConflateEquip::set_has_m_wearquality() {
  _has_bits_[0] |= 0x00000080u;
}
inline void E_ConflateEquip::clear_has_m_wearquality() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void E_ConflateEquip::clear_m_wearquality() {
  m_wearquality_ = 0;
  clear_has_m_wearquality();
}
inline ::google::protobuf::int32 E_ConflateEquip::m_wearquality() const {
  return m_wearquality_;
}
inline void E_ConflateEquip::set_m_wearquality(::google::protobuf::int32 value) {
  set_has_m_wearquality();
  m_wearquality_ = value;
}

// optional int32 m_elemstar = 9;
inline bool E_ConflateEquip::has_m_elemstar() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void E_ConflateEquip::set_has_m_elemstar() {
  _has_bits_[0] |= 0x00000100u;
}
inline void E_ConflateEquip::clear_has_m_elemstar() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void E_ConflateEquip::clear_m_elemstar() {
  m_elemstar_ = 0;
  clear_has_m_elemstar();
}
inline ::google::protobuf::int32 E_ConflateEquip::m_elemstar() const {
  return m_elemstar_;
}
inline void E_ConflateEquip::set_m_elemstar(::google::protobuf::int32 value) {
  set_has_m_elemstar();
  m_elemstar_ = value;
}

// optional int32 m_elemquality = 10;
inline bool E_ConflateEquip::has_m_elemquality() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void E_ConflateEquip::set_has_m_elemquality() {
  _has_bits_[0] |= 0x00000200u;
}
inline void E_ConflateEquip::clear_has_m_elemquality() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void E_ConflateEquip::clear_m_elemquality() {
  m_elemquality_ = 0;
  clear_has_m_elemquality();
}
inline ::google::protobuf::int32 E_ConflateEquip::m_elemquality() const {
  return m_elemquality_;
}
inline void E_ConflateEquip::set_m_elemquality(::google::protobuf::int32 value) {
  set_has_m_elemquality();
  m_elemquality_ = value;
}

// optional int32 m_elemwearquality = 11;
inline bool E_ConflateEquip::has_m_elemwearquality() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void E_ConflateEquip::set_has_m_elemwearquality() {
  _has_bits_[0] |= 0x00000400u;
}
inline void E_ConflateEquip::clear_has_m_elemwearquality() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void E_ConflateEquip::clear_m_elemwearquality() {
  m_elemwearquality_ = 0;
  clear_has_m_elemwearquality();
}
inline ::google::protobuf::int32 E_ConflateEquip::m_elemwearquality() const {
  return m_elemwearquality_;
}
inline void E_ConflateEquip::set_m_elemwearquality(::google::protobuf::int32 value) {
  set_has_m_elemwearquality();
  m_elemwearquality_ = value;
}

// optional int32 m_minimum = 12;
inline bool E_ConflateEquip::has_m_minimum() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void E_ConflateEquip::set_has_m_minimum() {
  _has_bits_[0] |= 0x00000800u;
}
inline void E_ConflateEquip::clear_has_m_minimum() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void E_ConflateEquip::clear_m_minimum() {
  m_minimum_ = 0;
  clear_has_m_minimum();
}
inline ::google::protobuf::int32 E_ConflateEquip::m_minimum() const {
  return m_minimum_;
}
inline void E_ConflateEquip::set_m_minimum(::google::protobuf::int32 value) {
  set_has_m_minimum();
  m_minimum_ = value;
}

// optional int32 m_minisuccessrate = 13;
inline bool E_ConflateEquip::has_m_minisuccessrate() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void E_ConflateEquip::set_has_m_minisuccessrate() {
  _has_bits_[0] |= 0x00001000u;
}
inline void E_ConflateEquip::clear_has_m_minisuccessrate() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void E_ConflateEquip::clear_m_minisuccessrate() {
  m_minisuccessrate_ = 0;
  clear_has_m_minisuccessrate();
}
inline ::google::protobuf::int32 E_ConflateEquip::m_minisuccessrate() const {
  return m_minisuccessrate_;
}
inline void E_ConflateEquip::set_m_minisuccessrate(::google::protobuf::int32 value) {
  set_has_m_minisuccessrate();
  m_minisuccessrate_ = value;
}

// optional int32 m_maxmum = 14;
inline bool E_ConflateEquip::has_m_maxmum() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void E_ConflateEquip::set_has_m_maxmum() {
  _has_bits_[0] |= 0x00002000u;
}
inline void E_ConflateEquip::clear_has_m_maxmum() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void E_ConflateEquip::clear_m_maxmum() {
  m_maxmum_ = 0;
  clear_has_m_maxmum();
}
inline ::google::protobuf::int32 E_ConflateEquip::m_maxmum() const {
  return m_maxmum_;
}
inline void E_ConflateEquip::set_m_maxmum(::google::protobuf::int32 value) {
  set_has_m_maxmum();
  m_maxmum_ = value;
}

// optional int32 m_maxsuccessrate = 15;
inline bool E_ConflateEquip::has_m_maxsuccessrate() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void E_ConflateEquip::set_has_m_maxsuccessrate() {
  _has_bits_[0] |= 0x00004000u;
}
inline void E_ConflateEquip::clear_has_m_maxsuccessrate() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void E_ConflateEquip::clear_m_maxsuccessrate() {
  m_maxsuccessrate_ = 0;
  clear_has_m_maxsuccessrate();
}
inline ::google::protobuf::int32 E_ConflateEquip::m_maxsuccessrate() const {
  return m_maxsuccessrate_;
}
inline void E_ConflateEquip::set_m_maxsuccessrate(::google::protobuf::int32 value) {
  set_has_m_maxsuccessrate();
  m_maxsuccessrate_ = value;
}

// optional int32 m_muststar = 16;
inline bool E_ConflateEquip::has_m_muststar() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void E_ConflateEquip::set_has_m_muststar() {
  _has_bits_[0] |= 0x00008000u;
}
inline void E_ConflateEquip::clear_has_m_muststar() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void E_ConflateEquip::clear_m_muststar() {
  m_muststar_ = 0;
  clear_has_m_muststar();
}
inline ::google::protobuf::int32 E_ConflateEquip::m_muststar() const {
  return m_muststar_;
}
inline void E_ConflateEquip::set_m_muststar(::google::protobuf::int32 value) {
  set_has_m_muststar();
  m_muststar_ = value;
}

// optional int32 m_mustquality = 17;
inline bool E_ConflateEquip::has_m_mustquality() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void E_ConflateEquip::set_has_m_mustquality() {
  _has_bits_[0] |= 0x00010000u;
}
inline void E_ConflateEquip::clear_has_m_mustquality() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void E_ConflateEquip::clear_m_mustquality() {
  m_mustquality_ = 0;
  clear_has_m_mustquality();
}
inline ::google::protobuf::int32 E_ConflateEquip::m_mustquality() const {
  return m_mustquality_;
}
inline void E_ConflateEquip::set_m_mustquality(::google::protobuf::int32 value) {
  set_has_m_mustquality();
  m_mustquality_ = value;
}

// optional int32 m_mustwearquality = 18;
inline bool E_ConflateEquip::has_m_mustwearquality() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void E_ConflateEquip::set_has_m_mustwearquality() {
  _has_bits_[0] |= 0x00020000u;
}
inline void E_ConflateEquip::clear_has_m_mustwearquality() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void E_ConflateEquip::clear_m_mustwearquality() {
  m_mustwearquality_ = 0;
  clear_has_m_mustwearquality();
}
inline ::google::protobuf::int32 E_ConflateEquip::m_mustwearquality() const {
  return m_mustwearquality_;
}
inline void E_ConflateEquip::set_m_mustwearquality(::google::protobuf::int32 value) {
  set_has_m_mustwearquality();
  m_mustwearquality_ = value;
}

// optional int32 m_mustnum = 19;
inline bool E_ConflateEquip::has_m_mustnum() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void E_ConflateEquip::set_has_m_mustnum() {
  _has_bits_[0] |= 0x00040000u;
}
inline void E_ConflateEquip::clear_has_m_mustnum() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void E_ConflateEquip::clear_m_mustnum() {
  m_mustnum_ = 0;
  clear_has_m_mustnum();
}
inline ::google::protobuf::int32 E_ConflateEquip::m_mustnum() const {
  return m_mustnum_;
}
inline void E_ConflateEquip::set_m_mustnum(::google::protobuf::int32 value) {
  set_has_m_mustnum();
  m_mustnum_ = value;
}

// optional int32 m_usemoney = 20;
inline bool E_ConflateEquip::has_m_usemoney() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void E_ConflateEquip::set_has_m_usemoney() {
  _has_bits_[0] |= 0x00080000u;
}
inline void E_ConflateEquip::clear_has_m_usemoney() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void E_ConflateEquip::clear_m_usemoney() {
  m_usemoney_ = 0;
  clear_has_m_usemoney();
}
inline ::google::protobuf::int32 E_ConflateEquip::m_usemoney() const {
  return m_usemoney_;
}
inline void E_ConflateEquip::set_m_usemoney(::google::protobuf::int32 value) {
  set_has_m_usemoney();
  m_usemoney_ = value;
}

// optional int32 m_cost = 21;
inline bool E_ConflateEquip::has_m_cost() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void E_ConflateEquip::set_has_m_cost() {
  _has_bits_[0] |= 0x00100000u;
}
inline void E_ConflateEquip::clear_has_m_cost() {
  _has_bits_[0] &= ~0x00100000u;
}
inline void E_ConflateEquip::clear_m_cost() {
  m_cost_ = 0;
  clear_has_m_cost();
}
inline ::google::protobuf::int32 E_ConflateEquip::m_cost() const {
  return m_cost_;
}
inline void E_ConflateEquip::set_m_cost(::google::protobuf::int32 value) {
  set_has_m_cost();
  m_cost_ = value;
}

// repeated .proto_ff.E_ConflateEquipElemDesc m_elem = 22;
inline int E_ConflateEquip::m_elem_size() const {
  return m_elem_.size();
}
inline void E_ConflateEquip::clear_m_elem() {
  m_elem_.Clear();
}
inline const ::proto_ff::E_ConflateEquipElemDesc& E_ConflateEquip::m_elem(int index) const {
  return m_elem_.Get(index);
}
inline ::proto_ff::E_ConflateEquipElemDesc* E_ConflateEquip::mutable_m_elem(int index) {
  return m_elem_.Mutable(index);
}
inline ::proto_ff::E_ConflateEquipElemDesc* E_ConflateEquip::add_m_elem() {
  return m_elem_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_ConflateEquipElemDesc >&
E_ConflateEquip::m_elem() const {
  return m_elem_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_ConflateEquipElemDesc >*
E_ConflateEquip::mutable_m_elem() {
  return &m_elem_;
}

// -------------------------------------------------------------------

// Sheet_ConflateEquip

// repeated .proto_ff.E_ConflateEquip E_ConflateEquip_List = 1;
inline int Sheet_ConflateEquip::e_conflateequip_list_size() const {
  return e_conflateequip_list_.size();
}
inline void Sheet_ConflateEquip::clear_e_conflateequip_list() {
  e_conflateequip_list_.Clear();
}
inline const ::proto_ff::E_ConflateEquip& Sheet_ConflateEquip::e_conflateequip_list(int index) const {
  return e_conflateequip_list_.Get(index);
}
inline ::proto_ff::E_ConflateEquip* Sheet_ConflateEquip::mutable_e_conflateequip_list(int index) {
  return e_conflateequip_list_.Mutable(index);
}
inline ::proto_ff::E_ConflateEquip* Sheet_ConflateEquip::add_e_conflateequip_list() {
  return e_conflateequip_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_ConflateEquip >&
Sheet_ConflateEquip::e_conflateequip_list() const {
  return e_conflateequip_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_ConflateEquip >*
Sheet_ConflateEquip::mutable_e_conflateequip_list() {
  return &e_conflateequip_list_;
}

// -------------------------------------------------------------------

// E_ConflateGrouptype

// optional int32 m_id = 1;
inline bool E_ConflateGrouptype::has_m_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_ConflateGrouptype::set_has_m_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_ConflateGrouptype::clear_has_m_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_ConflateGrouptype::clear_m_id() {
  m_id_ = 0;
  clear_has_m_id();
}
inline ::google::protobuf::int32 E_ConflateGrouptype::m_id() const {
  return m_id_;
}
inline void E_ConflateGrouptype::set_m_id(::google::protobuf::int32 value) {
  set_has_m_id();
  m_id_ = value;
}

// optional string m_position = 2;
inline bool E_ConflateGrouptype::has_m_position() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_ConflateGrouptype::set_has_m_position() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_ConflateGrouptype::clear_has_m_position() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_ConflateGrouptype::clear_m_position() {
  if (m_position_ != &::google::protobuf::internal::kEmptyString) {
    m_position_->clear();
  }
  clear_has_m_position();
}
inline const ::std::string& E_ConflateGrouptype::m_position() const {
  return *m_position_;
}
inline void E_ConflateGrouptype::set_m_position(const ::std::string& value) {
  set_has_m_position();
  if (m_position_ == &::google::protobuf::internal::kEmptyString) {
    m_position_ = new ::std::string;
  }
  m_position_->assign(value);
}
inline void E_ConflateGrouptype::set_m_position(const char* value) {
  set_has_m_position();
  if (m_position_ == &::google::protobuf::internal::kEmptyString) {
    m_position_ = new ::std::string;
  }
  m_position_->assign(value);
}
inline void E_ConflateGrouptype::set_m_position(const char* value, size_t size) {
  set_has_m_position();
  if (m_position_ == &::google::protobuf::internal::kEmptyString) {
    m_position_ = new ::std::string;
  }
  m_position_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* E_ConflateGrouptype::mutable_m_position() {
  set_has_m_position();
  if (m_position_ == &::google::protobuf::internal::kEmptyString) {
    m_position_ = new ::std::string;
  }
  return m_position_;
}
inline ::std::string* E_ConflateGrouptype::release_m_position() {
  clear_has_m_position();
  if (m_position_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = m_position_;
    m_position_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void E_ConflateGrouptype::set_allocated_m_position(::std::string* m_position) {
  if (m_position_ != &::google::protobuf::internal::kEmptyString) {
    delete m_position_;
  }
  if (m_position) {
    set_has_m_position();
    m_position_ = m_position;
  } else {
    clear_has_m_position();
    m_position_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string m_profession = 3;
inline bool E_ConflateGrouptype::has_m_profession() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void E_ConflateGrouptype::set_has_m_profession() {
  _has_bits_[0] |= 0x00000004u;
}
inline void E_ConflateGrouptype::clear_has_m_profession() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void E_ConflateGrouptype::clear_m_profession() {
  if (m_profession_ != &::google::protobuf::internal::kEmptyString) {
    m_profession_->clear();
  }
  clear_has_m_profession();
}
inline const ::std::string& E_ConflateGrouptype::m_profession() const {
  return *m_profession_;
}
inline void E_ConflateGrouptype::set_m_profession(const ::std::string& value) {
  set_has_m_profession();
  if (m_profession_ == &::google::protobuf::internal::kEmptyString) {
    m_profession_ = new ::std::string;
  }
  m_profession_->assign(value);
}
inline void E_ConflateGrouptype::set_m_profession(const char* value) {
  set_has_m_profession();
  if (m_profession_ == &::google::protobuf::internal::kEmptyString) {
    m_profession_ = new ::std::string;
  }
  m_profession_->assign(value);
}
inline void E_ConflateGrouptype::set_m_profession(const char* value, size_t size) {
  set_has_m_profession();
  if (m_profession_ == &::google::protobuf::internal::kEmptyString) {
    m_profession_ = new ::std::string;
  }
  m_profession_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* E_ConflateGrouptype::mutable_m_profession() {
  set_has_m_profession();
  if (m_profession_ == &::google::protobuf::internal::kEmptyString) {
    m_profession_ = new ::std::string;
  }
  return m_profession_;
}
inline ::std::string* E_ConflateGrouptype::release_m_profession() {
  clear_has_m_profession();
  if (m_profession_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = m_profession_;
    m_profession_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void E_ConflateGrouptype::set_allocated_m_profession(::std::string* m_profession) {
  if (m_profession_ != &::google::protobuf::internal::kEmptyString) {
    delete m_profession_;
  }
  if (m_profession) {
    set_has_m_profession();
    m_profession_ = m_profession;
  } else {
    clear_has_m_profession();
    m_profession_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string m_typename = 4;
inline bool E_ConflateGrouptype::has_m_typename() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void E_ConflateGrouptype::set_has_m_typename() {
  _has_bits_[0] |= 0x00000008u;
}
inline void E_ConflateGrouptype::clear_has_m_typename() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void E_ConflateGrouptype::clear_m_typename() {
  if (m_typename_ != &::google::protobuf::internal::kEmptyString) {
    m_typename_->clear();
  }
  clear_has_m_typename();
}
inline const ::std::string& E_ConflateGrouptype::m_typename() const {
  return *m_typename_;
}
inline void E_ConflateGrouptype::set_m_typename(const ::std::string& value) {
  set_has_m_typename();
  if (m_typename_ == &::google::protobuf::internal::kEmptyString) {
    m_typename_ = new ::std::string;
  }
  m_typename_->assign(value);
}
inline void E_ConflateGrouptype::set_m_typename(const char* value) {
  set_has_m_typename();
  if (m_typename_ == &::google::protobuf::internal::kEmptyString) {
    m_typename_ = new ::std::string;
  }
  m_typename_->assign(value);
}
inline void E_ConflateGrouptype::set_m_typename(const char* value, size_t size) {
  set_has_m_typename();
  if (m_typename_ == &::google::protobuf::internal::kEmptyString) {
    m_typename_ = new ::std::string;
  }
  m_typename_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* E_ConflateGrouptype::mutable_m_typename() {
  set_has_m_typename();
  if (m_typename_ == &::google::protobuf::internal::kEmptyString) {
    m_typename_ = new ::std::string;
  }
  return m_typename_;
}
inline ::std::string* E_ConflateGrouptype::release_m_typename() {
  clear_has_m_typename();
  if (m_typename_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = m_typename_;
    m_typename_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void E_ConflateGrouptype::set_allocated_m_typename(::std::string* m_typename) {
  if (m_typename_ != &::google::protobuf::internal::kEmptyString) {
    delete m_typename_;
  }
  if (m_typename) {
    set_has_m_typename();
    m_typename_ = m_typename;
  } else {
    clear_has_m_typename();
    m_typename_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 m_unlockid = 5;
inline bool E_ConflateGrouptype::has_m_unlockid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void E_ConflateGrouptype::set_has_m_unlockid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void E_ConflateGrouptype::clear_has_m_unlockid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void E_ConflateGrouptype::clear_m_unlockid() {
  m_unlockid_ = 0;
  clear_has_m_unlockid();
}
inline ::google::protobuf::int32 E_ConflateGrouptype::m_unlockid() const {
  return m_unlockid_;
}
inline void E_ConflateGrouptype::set_m_unlockid(::google::protobuf::int32 value) {
  set_has_m_unlockid();
  m_unlockid_ = value;
}

// optional int32 m_entry = 6;
inline bool E_ConflateGrouptype::has_m_entry() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void E_ConflateGrouptype::set_has_m_entry() {
  _has_bits_[0] |= 0x00000020u;
}
inline void E_ConflateGrouptype::clear_has_m_entry() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void E_ConflateGrouptype::clear_m_entry() {
  m_entry_ = 0;
  clear_has_m_entry();
}
inline ::google::protobuf::int32 E_ConflateGrouptype::m_entry() const {
  return m_entry_;
}
inline void E_ConflateGrouptype::set_m_entry(::google::protobuf::int32 value) {
  set_has_m_entry();
  m_entry_ = value;
}

// optional int32 m_rule = 7;
inline bool E_ConflateGrouptype::has_m_rule() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void E_ConflateGrouptype::set_has_m_rule() {
  _has_bits_[0] |= 0x00000040u;
}
inline void E_ConflateGrouptype::clear_has_m_rule() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void E_ConflateGrouptype::clear_m_rule() {
  m_rule_ = 0;
  clear_has_m_rule();
}
inline ::google::protobuf::int32 E_ConflateGrouptype::m_rule() const {
  return m_rule_;
}
inline void E_ConflateGrouptype::set_m_rule(::google::protobuf::int32 value) {
  set_has_m_rule();
  m_rule_ = value;
}

// -------------------------------------------------------------------

// Sheet_ConflateGrouptype

// repeated .proto_ff.E_ConflateGrouptype E_ConflateGrouptype_List = 1;
inline int Sheet_ConflateGrouptype::e_conflategrouptype_list_size() const {
  return e_conflategrouptype_list_.size();
}
inline void Sheet_ConflateGrouptype::clear_e_conflategrouptype_list() {
  e_conflategrouptype_list_.Clear();
}
inline const ::proto_ff::E_ConflateGrouptype& Sheet_ConflateGrouptype::e_conflategrouptype_list(int index) const {
  return e_conflategrouptype_list_.Get(index);
}
inline ::proto_ff::E_ConflateGrouptype* Sheet_ConflateGrouptype::mutable_e_conflategrouptype_list(int index) {
  return e_conflategrouptype_list_.Mutable(index);
}
inline ::proto_ff::E_ConflateGrouptype* Sheet_ConflateGrouptype::add_e_conflategrouptype_list() {
  return e_conflategrouptype_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_ConflateGrouptype >&
Sheet_ConflateGrouptype::e_conflategrouptype_list() const {
  return e_conflategrouptype_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_ConflateGrouptype >*
Sheet_ConflateGrouptype::mutable_e_conflategrouptype_list() {
  return &e_conflategrouptype_list_;
}

// -------------------------------------------------------------------

// E_ConflateSubtype

// optional int32 m_id = 1;
inline bool E_ConflateSubtype::has_m_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_ConflateSubtype::set_has_m_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_ConflateSubtype::clear_has_m_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_ConflateSubtype::clear_m_id() {
  m_id_ = 0;
  clear_has_m_id();
}
inline ::google::protobuf::int32 E_ConflateSubtype::m_id() const {
  return m_id_;
}
inline void E_ConflateSubtype::set_m_id(::google::protobuf::int32 value) {
  set_has_m_id();
  m_id_ = value;
}

// optional string m_subname = 2;
inline bool E_ConflateSubtype::has_m_subname() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_ConflateSubtype::set_has_m_subname() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_ConflateSubtype::clear_has_m_subname() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_ConflateSubtype::clear_m_subname() {
  if (m_subname_ != &::google::protobuf::internal::kEmptyString) {
    m_subname_->clear();
  }
  clear_has_m_subname();
}
inline const ::std::string& E_ConflateSubtype::m_subname() const {
  return *m_subname_;
}
inline void E_ConflateSubtype::set_m_subname(const ::std::string& value) {
  set_has_m_subname();
  if (m_subname_ == &::google::protobuf::internal::kEmptyString) {
    m_subname_ = new ::std::string;
  }
  m_subname_->assign(value);
}
inline void E_ConflateSubtype::set_m_subname(const char* value) {
  set_has_m_subname();
  if (m_subname_ == &::google::protobuf::internal::kEmptyString) {
    m_subname_ = new ::std::string;
  }
  m_subname_->assign(value);
}
inline void E_ConflateSubtype::set_m_subname(const char* value, size_t size) {
  set_has_m_subname();
  if (m_subname_ == &::google::protobuf::internal::kEmptyString) {
    m_subname_ = new ::std::string;
  }
  m_subname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* E_ConflateSubtype::mutable_m_subname() {
  set_has_m_subname();
  if (m_subname_ == &::google::protobuf::internal::kEmptyString) {
    m_subname_ = new ::std::string;
  }
  return m_subname_;
}
inline ::std::string* E_ConflateSubtype::release_m_subname() {
  clear_has_m_subname();
  if (m_subname_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = m_subname_;
    m_subname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void E_ConflateSubtype::set_allocated_m_subname(::std::string* m_subname) {
  if (m_subname_ != &::google::protobuf::internal::kEmptyString) {
    delete m_subname_;
  }
  if (m_subname) {
    set_has_m_subname();
    m_subname_ = m_subname;
  } else {
    clear_has_m_subname();
    m_subname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 m_groupid = 3;
inline bool E_ConflateSubtype::has_m_groupid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void E_ConflateSubtype::set_has_m_groupid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void E_ConflateSubtype::clear_has_m_groupid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void E_ConflateSubtype::clear_m_groupid() {
  m_groupid_ = 0;
  clear_has_m_groupid();
}
inline ::google::protobuf::int32 E_ConflateSubtype::m_groupid() const {
  return m_groupid_;
}
inline void E_ConflateSubtype::set_m_groupid(::google::protobuf::int32 value) {
  set_has_m_groupid();
  m_groupid_ = value;
}

// optional int32 m_openlv = 4;
inline bool E_ConflateSubtype::has_m_openlv() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void E_ConflateSubtype::set_has_m_openlv() {
  _has_bits_[0] |= 0x00000008u;
}
inline void E_ConflateSubtype::clear_has_m_openlv() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void E_ConflateSubtype::clear_m_openlv() {
  m_openlv_ = 0;
  clear_has_m_openlv();
}
inline ::google::protobuf::int32 E_ConflateSubtype::m_openlv() const {
  return m_openlv_;
}
inline void E_ConflateSubtype::set_m_openlv(::google::protobuf::int32 value) {
  set_has_m_openlv();
  m_openlv_ = value;
}

// -------------------------------------------------------------------

// Sheet_ConflateSubtype

// repeated .proto_ff.E_ConflateSubtype E_ConflateSubtype_List = 1;
inline int Sheet_ConflateSubtype::e_conflatesubtype_list_size() const {
  return e_conflatesubtype_list_.size();
}
inline void Sheet_ConflateSubtype::clear_e_conflatesubtype_list() {
  e_conflatesubtype_list_.Clear();
}
inline const ::proto_ff::E_ConflateSubtype& Sheet_ConflateSubtype::e_conflatesubtype_list(int index) const {
  return e_conflatesubtype_list_.Get(index);
}
inline ::proto_ff::E_ConflateSubtype* Sheet_ConflateSubtype::mutable_e_conflatesubtype_list(int index) {
  return e_conflatesubtype_list_.Mutable(index);
}
inline ::proto_ff::E_ConflateSubtype* Sheet_ConflateSubtype::add_e_conflatesubtype_list() {
  return e_conflatesubtype_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_ConflateSubtype >&
Sheet_ConflateSubtype::e_conflatesubtype_list() const {
  return e_conflatesubtype_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_ConflateSubtype >*
Sheet_ConflateSubtype::mutable_e_conflatesubtype_list() {
  return &e_conflatesubtype_list_;
}

// -------------------------------------------------------------------

// E_ConflatePropReplaceDesc

// optional int32 m_num = 1;
inline bool E_ConflatePropReplaceDesc::has_m_num() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_ConflatePropReplaceDesc::set_has_m_num() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_ConflatePropReplaceDesc::clear_has_m_num() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_ConflatePropReplaceDesc::clear_m_num() {
  m_num_ = 0;
  clear_has_m_num();
}
inline ::google::protobuf::int32 E_ConflatePropReplaceDesc::m_num() const {
  return m_num_;
}
inline void E_ConflatePropReplaceDesc::set_m_num(::google::protobuf::int32 value) {
  set_has_m_num();
  m_num_ = value;
}

// optional int32 m_id = 2;
inline bool E_ConflatePropReplaceDesc::has_m_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_ConflatePropReplaceDesc::set_has_m_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_ConflatePropReplaceDesc::clear_has_m_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_ConflatePropReplaceDesc::clear_m_id() {
  m_id_ = 0;
  clear_has_m_id();
}
inline ::google::protobuf::int32 E_ConflatePropReplaceDesc::m_id() const {
  return m_id_;
}
inline void E_ConflatePropReplaceDesc::set_m_id(::google::protobuf::int32 value) {
  set_has_m_id();
  m_id_ = value;
}

// -------------------------------------------------------------------

// E_ConflatePropElemDesc

// optional int32 m_num = 1;
inline bool E_ConflatePropElemDesc::has_m_num() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_ConflatePropElemDesc::set_has_m_num() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_ConflatePropElemDesc::clear_has_m_num() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_ConflatePropElemDesc::clear_m_num() {
  m_num_ = 0;
  clear_has_m_num();
}
inline ::google::protobuf::int32 E_ConflatePropElemDesc::m_num() const {
  return m_num_;
}
inline void E_ConflatePropElemDesc::set_m_num(::google::protobuf::int32 value) {
  set_has_m_num();
  m_num_ = value;
}

// optional int32 m_id = 2;
inline bool E_ConflatePropElemDesc::has_m_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_ConflatePropElemDesc::set_has_m_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_ConflatePropElemDesc::clear_has_m_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_ConflatePropElemDesc::clear_m_id() {
  m_id_ = 0;
  clear_has_m_id();
}
inline ::google::protobuf::int32 E_ConflatePropElemDesc::m_id() const {
  return m_id_;
}
inline void E_ConflatePropElemDesc::set_m_id(::google::protobuf::int32 value) {
  set_has_m_id();
  m_id_ = value;
}

// -------------------------------------------------------------------

// E_ConflateProp

// optional int32 m_target = 1;
inline bool E_ConflateProp::has_m_target() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_ConflateProp::set_has_m_target() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_ConflateProp::clear_has_m_target() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_ConflateProp::clear_m_target() {
  m_target_ = 0;
  clear_has_m_target();
}
inline ::google::protobuf::int32 E_ConflateProp::m_target() const {
  return m_target_;
}
inline void E_ConflateProp::set_m_target(::google::protobuf::int32 value) {
  set_has_m_target();
  m_target_ = value;
}

// optional int32 m_openlv = 2;
inline bool E_ConflateProp::has_m_openlv() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_ConflateProp::set_has_m_openlv() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_ConflateProp::clear_has_m_openlv() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_ConflateProp::clear_m_openlv() {
  m_openlv_ = 0;
  clear_has_m_openlv();
}
inline ::google::protobuf::int32 E_ConflateProp::m_openlv() const {
  return m_openlv_;
}
inline void E_ConflateProp::set_m_openlv(::google::protobuf::int32 value) {
  set_has_m_openlv();
  m_openlv_ = value;
}

// optional int32 m_subtype = 3;
inline bool E_ConflateProp::has_m_subtype() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void E_ConflateProp::set_has_m_subtype() {
  _has_bits_[0] |= 0x00000004u;
}
inline void E_ConflateProp::clear_has_m_subtype() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void E_ConflateProp::clear_m_subtype() {
  m_subtype_ = 0;
  clear_has_m_subtype();
}
inline ::google::protobuf::int32 E_ConflateProp::m_subtype() const {
  return m_subtype_;
}
inline void E_ConflateProp::set_m_subtype(::google::protobuf::int32 value) {
  set_has_m_subtype();
  m_subtype_ = value;
}

// optional int32 m_order = 4;
inline bool E_ConflateProp::has_m_order() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void E_ConflateProp::set_has_m_order() {
  _has_bits_[0] |= 0x00000008u;
}
inline void E_ConflateProp::clear_has_m_order() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void E_ConflateProp::clear_m_order() {
  m_order_ = 0;
  clear_has_m_order();
}
inline ::google::protobuf::int32 E_ConflateProp::m_order() const {
  return m_order_;
}
inline void E_ConflateProp::set_m_order(::google::protobuf::int32 value) {
  set_has_m_order();
  m_order_ = value;
}

// optional int32 m_activate = 5;
inline bool E_ConflateProp::has_m_activate() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void E_ConflateProp::set_has_m_activate() {
  _has_bits_[0] |= 0x00000010u;
}
inline void E_ConflateProp::clear_has_m_activate() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void E_ConflateProp::clear_m_activate() {
  m_activate_ = 0;
  clear_has_m_activate();
}
inline ::google::protobuf::int32 E_ConflateProp::m_activate() const {
  return m_activate_;
}
inline void E_ConflateProp::set_m_activate(::google::protobuf::int32 value) {
  set_has_m_activate();
  m_activate_ = value;
}

// optional int32 m_display = 6;
inline bool E_ConflateProp::has_m_display() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void E_ConflateProp::set_has_m_display() {
  _has_bits_[0] |= 0x00000020u;
}
inline void E_ConflateProp::clear_has_m_display() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void E_ConflateProp::clear_m_display() {
  m_display_ = 0;
  clear_has_m_display();
}
inline ::google::protobuf::int32 E_ConflateProp::m_display() const {
  return m_display_;
}
inline void E_ConflateProp::set_m_display(::google::protobuf::int32 value) {
  set_has_m_display();
  m_display_ = value;
}

// optional int32 m_replacetype = 7;
inline bool E_ConflateProp::has_m_replacetype() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void E_ConflateProp::set_has_m_replacetype() {
  _has_bits_[0] |= 0x00000040u;
}
inline void E_ConflateProp::clear_has_m_replacetype() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void E_ConflateProp::clear_m_replacetype() {
  m_replacetype_ = 0;
  clear_has_m_replacetype();
}
inline ::google::protobuf::int32 E_ConflateProp::m_replacetype() const {
  return m_replacetype_;
}
inline void E_ConflateProp::set_m_replacetype(::google::protobuf::int32 value) {
  set_has_m_replacetype();
  m_replacetype_ = value;
}

// optional int32 m_culture = 8;
inline bool E_ConflateProp::has_m_culture() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void E_ConflateProp::set_has_m_culture() {
  _has_bits_[0] |= 0x00000080u;
}
inline void E_ConflateProp::clear_has_m_culture() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void E_ConflateProp::clear_m_culture() {
  m_culture_ = 0;
  clear_has_m_culture();
}
inline ::google::protobuf::int32 E_ConflateProp::m_culture() const {
  return m_culture_;
}
inline void E_ConflateProp::set_m_culture(::google::protobuf::int32 value) {
  set_has_m_culture();
  m_culture_ = value;
}

// optional int32 m_usemoney = 9;
inline bool E_ConflateProp::has_m_usemoney() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void E_ConflateProp::set_has_m_usemoney() {
  _has_bits_[0] |= 0x00000100u;
}
inline void E_ConflateProp::clear_has_m_usemoney() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void E_ConflateProp::clear_m_usemoney() {
  m_usemoney_ = 0;
  clear_has_m_usemoney();
}
inline ::google::protobuf::int32 E_ConflateProp::m_usemoney() const {
  return m_usemoney_;
}
inline void E_ConflateProp::set_m_usemoney(::google::protobuf::int32 value) {
  set_has_m_usemoney();
  m_usemoney_ = value;
}

// optional int32 m_cost = 10;
inline bool E_ConflateProp::has_m_cost() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void E_ConflateProp::set_has_m_cost() {
  _has_bits_[0] |= 0x00000200u;
}
inline void E_ConflateProp::clear_has_m_cost() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void E_ConflateProp::clear_m_cost() {
  m_cost_ = 0;
  clear_has_m_cost();
}
inline ::google::protobuf::int32 E_ConflateProp::m_cost() const {
  return m_cost_;
}
inline void E_ConflateProp::set_m_cost(::google::protobuf::int32 value) {
  set_has_m_cost();
  m_cost_ = value;
}

// repeated .proto_ff.E_ConflatePropReplaceDesc m_replace = 11;
inline int E_ConflateProp::m_replace_size() const {
  return m_replace_.size();
}
inline void E_ConflateProp::clear_m_replace() {
  m_replace_.Clear();
}
inline const ::proto_ff::E_ConflatePropReplaceDesc& E_ConflateProp::m_replace(int index) const {
  return m_replace_.Get(index);
}
inline ::proto_ff::E_ConflatePropReplaceDesc* E_ConflateProp::mutable_m_replace(int index) {
  return m_replace_.Mutable(index);
}
inline ::proto_ff::E_ConflatePropReplaceDesc* E_ConflateProp::add_m_replace() {
  return m_replace_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_ConflatePropReplaceDesc >&
E_ConflateProp::m_replace() const {
  return m_replace_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_ConflatePropReplaceDesc >*
E_ConflateProp::mutable_m_replace() {
  return &m_replace_;
}

// repeated .proto_ff.E_ConflatePropElemDesc m_elem = 12;
inline int E_ConflateProp::m_elem_size() const {
  return m_elem_.size();
}
inline void E_ConflateProp::clear_m_elem() {
  m_elem_.Clear();
}
inline const ::proto_ff::E_ConflatePropElemDesc& E_ConflateProp::m_elem(int index) const {
  return m_elem_.Get(index);
}
inline ::proto_ff::E_ConflatePropElemDesc* E_ConflateProp::mutable_m_elem(int index) {
  return m_elem_.Mutable(index);
}
inline ::proto_ff::E_ConflatePropElemDesc* E_ConflateProp::add_m_elem() {
  return m_elem_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_ConflatePropElemDesc >&
E_ConflateProp::m_elem() const {
  return m_elem_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_ConflatePropElemDesc >*
E_ConflateProp::mutable_m_elem() {
  return &m_elem_;
}

// -------------------------------------------------------------------

// Sheet_ConflateProp

// repeated .proto_ff.E_ConflateProp E_ConflateProp_List = 1;
inline int Sheet_ConflateProp::e_conflateprop_list_size() const {
  return e_conflateprop_list_.size();
}
inline void Sheet_ConflateProp::clear_e_conflateprop_list() {
  e_conflateprop_list_.Clear();
}
inline const ::proto_ff::E_ConflateProp& Sheet_ConflateProp::e_conflateprop_list(int index) const {
  return e_conflateprop_list_.Get(index);
}
inline ::proto_ff::E_ConflateProp* Sheet_ConflateProp::mutable_e_conflateprop_list(int index) {
  return e_conflateprop_list_.Mutable(index);
}
inline ::proto_ff::E_ConflateProp* Sheet_ConflateProp::add_e_conflateprop_list() {
  return e_conflateprop_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_ConflateProp >&
Sheet_ConflateProp::e_conflateprop_list() const {
  return e_conflateprop_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_ConflateProp >*
Sheet_ConflateProp::mutable_e_conflateprop_list() {
  return &e_conflateprop_list_;
}

// -------------------------------------------------------------------

// E_ConflateJewelry_spElemDesc

// optional int32 m_num = 1;
inline bool E_ConflateJewelry_spElemDesc::has_m_num() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_ConflateJewelry_spElemDesc::set_has_m_num() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_ConflateJewelry_spElemDesc::clear_has_m_num() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_ConflateJewelry_spElemDesc::clear_m_num() {
  m_num_ = 0;
  clear_has_m_num();
}
inline ::google::protobuf::int32 E_ConflateJewelry_spElemDesc::m_num() const {
  return m_num_;
}
inline void E_ConflateJewelry_spElemDesc::set_m_num(::google::protobuf::int32 value) {
  set_has_m_num();
  m_num_ = value;
}

// optional int32 m_id = 2;
inline bool E_ConflateJewelry_spElemDesc::has_m_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_ConflateJewelry_spElemDesc::set_has_m_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_ConflateJewelry_spElemDesc::clear_has_m_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_ConflateJewelry_spElemDesc::clear_m_id() {
  m_id_ = 0;
  clear_has_m_id();
}
inline ::google::protobuf::int32 E_ConflateJewelry_spElemDesc::m_id() const {
  return m_id_;
}
inline void E_ConflateJewelry_spElemDesc::set_m_id(::google::protobuf::int32 value) {
  set_has_m_id();
  m_id_ = value;
}

// -------------------------------------------------------------------

// E_ConflateJewelry_sp

// optional int32 m_id = 1;
inline bool E_ConflateJewelry_sp::has_m_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_ConflateJewelry_sp::set_has_m_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_ConflateJewelry_sp::clear_has_m_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_ConflateJewelry_sp::clear_m_id() {
  m_id_ = 0;
  clear_has_m_id();
}
inline ::google::protobuf::int32 E_ConflateJewelry_sp::m_id() const {
  return m_id_;
}
inline void E_ConflateJewelry_sp::set_m_id(::google::protobuf::int32 value) {
  set_has_m_id();
  m_id_ = value;
}

// optional int32 m_grouptype = 2;
inline bool E_ConflateJewelry_sp::has_m_grouptype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_ConflateJewelry_sp::set_has_m_grouptype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_ConflateJewelry_sp::clear_has_m_grouptype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_ConflateJewelry_sp::clear_m_grouptype() {
  m_grouptype_ = 0;
  clear_has_m_grouptype();
}
inline ::google::protobuf::int32 E_ConflateJewelry_sp::m_grouptype() const {
  return m_grouptype_;
}
inline void E_ConflateJewelry_sp::set_m_grouptype(::google::protobuf::int32 value) {
  set_has_m_grouptype();
  m_grouptype_ = value;
}

// optional int32 m_openwearquality = 3;
inline bool E_ConflateJewelry_sp::has_m_openwearquality() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void E_ConflateJewelry_sp::set_has_m_openwearquality() {
  _has_bits_[0] |= 0x00000004u;
}
inline void E_ConflateJewelry_sp::clear_has_m_openwearquality() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void E_ConflateJewelry_sp::clear_m_openwearquality() {
  m_openwearquality_ = 0;
  clear_has_m_openwearquality();
}
inline ::google::protobuf::int32 E_ConflateJewelry_sp::m_openwearquality() const {
  return m_openwearquality_;
}
inline void E_ConflateJewelry_sp::set_m_openwearquality(::google::protobuf::int32 value) {
  set_has_m_openwearquality();
  m_openwearquality_ = value;
}

// optional int32 m_openspecial = 4;
inline bool E_ConflateJewelry_sp::has_m_openspecial() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void E_ConflateJewelry_sp::set_has_m_openspecial() {
  _has_bits_[0] |= 0x00000008u;
}
inline void E_ConflateJewelry_sp::clear_has_m_openspecial() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void E_ConflateJewelry_sp::clear_m_openspecial() {
  m_openspecial_ = 0;
  clear_has_m_openspecial();
}
inline ::google::protobuf::int32 E_ConflateJewelry_sp::m_openspecial() const {
  return m_openspecial_;
}
inline void E_ConflateJewelry_sp::set_m_openspecial(::google::protobuf::int32 value) {
  set_has_m_openspecial();
  m_openspecial_ = value;
}

// optional int32 m_position = 5;
inline bool E_ConflateJewelry_sp::has_m_position() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void E_ConflateJewelry_sp::set_has_m_position() {
  _has_bits_[0] |= 0x00000010u;
}
inline void E_ConflateJewelry_sp::clear_has_m_position() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void E_ConflateJewelry_sp::clear_m_position() {
  m_position_ = 0;
  clear_has_m_position();
}
inline ::google::protobuf::int32 E_ConflateJewelry_sp::m_position() const {
  return m_position_;
}
inline void E_ConflateJewelry_sp::set_m_position(::google::protobuf::int32 value) {
  set_has_m_position();
  m_position_ = value;
}

// optional int32 m_quality = 6;
inline bool E_ConflateJewelry_sp::has_m_quality() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void E_ConflateJewelry_sp::set_has_m_quality() {
  _has_bits_[0] |= 0x00000020u;
}
inline void E_ConflateJewelry_sp::clear_has_m_quality() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void E_ConflateJewelry_sp::clear_m_quality() {
  m_quality_ = 0;
  clear_has_m_quality();
}
inline ::google::protobuf::int32 E_ConflateJewelry_sp::m_quality() const {
  return m_quality_;
}
inline void E_ConflateJewelry_sp::set_m_quality(::google::protobuf::int32 value) {
  set_has_m_quality();
  m_quality_ = value;
}

// optional int32 m_star = 7;
inline bool E_ConflateJewelry_sp::has_m_star() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void E_ConflateJewelry_sp::set_has_m_star() {
  _has_bits_[0] |= 0x00000040u;
}
inline void E_ConflateJewelry_sp::clear_has_m_star() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void E_ConflateJewelry_sp::clear_m_star() {
  m_star_ = 0;
  clear_has_m_star();
}
inline ::google::protobuf::int32 E_ConflateJewelry_sp::m_star() const {
  return m_star_;
}
inline void E_ConflateJewelry_sp::set_m_star(::google::protobuf::int32 value) {
  set_has_m_star();
  m_star_ = value;
}

// optional int32 m_next = 8;
inline bool E_ConflateJewelry_sp::has_m_next() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void E_ConflateJewelry_sp::set_has_m_next() {
  _has_bits_[0] |= 0x00000080u;
}
inline void E_ConflateJewelry_sp::clear_has_m_next() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void E_ConflateJewelry_sp::clear_m_next() {
  m_next_ = 0;
  clear_has_m_next();
}
inline ::google::protobuf::int32 E_ConflateJewelry_sp::m_next() const {
  return m_next_;
}
inline void E_ConflateJewelry_sp::set_m_next(::google::protobuf::int32 value) {
  set_has_m_next();
  m_next_ = value;
}

// repeated .proto_ff.E_ConflateJewelry_spElemDesc m_elem = 9;
inline int E_ConflateJewelry_sp::m_elem_size() const {
  return m_elem_.size();
}
inline void E_ConflateJewelry_sp::clear_m_elem() {
  m_elem_.Clear();
}
inline const ::proto_ff::E_ConflateJewelry_spElemDesc& E_ConflateJewelry_sp::m_elem(int index) const {
  return m_elem_.Get(index);
}
inline ::proto_ff::E_ConflateJewelry_spElemDesc* E_ConflateJewelry_sp::mutable_m_elem(int index) {
  return m_elem_.Mutable(index);
}
inline ::proto_ff::E_ConflateJewelry_spElemDesc* E_ConflateJewelry_sp::add_m_elem() {
  return m_elem_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_ConflateJewelry_spElemDesc >&
E_ConflateJewelry_sp::m_elem() const {
  return m_elem_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_ConflateJewelry_spElemDesc >*
E_ConflateJewelry_sp::mutable_m_elem() {
  return &m_elem_;
}

// -------------------------------------------------------------------

// Sheet_ConflateJewelry_sp

// repeated .proto_ff.E_ConflateJewelry_sp E_ConflateJewelry_sp_List = 1;
inline int Sheet_ConflateJewelry_sp::e_conflatejewelry_sp_list_size() const {
  return e_conflatejewelry_sp_list_.size();
}
inline void Sheet_ConflateJewelry_sp::clear_e_conflatejewelry_sp_list() {
  e_conflatejewelry_sp_list_.Clear();
}
inline const ::proto_ff::E_ConflateJewelry_sp& Sheet_ConflateJewelry_sp::e_conflatejewelry_sp_list(int index) const {
  return e_conflatejewelry_sp_list_.Get(index);
}
inline ::proto_ff::E_ConflateJewelry_sp* Sheet_ConflateJewelry_sp::mutable_e_conflatejewelry_sp_list(int index) {
  return e_conflatejewelry_sp_list_.Mutable(index);
}
inline ::proto_ff::E_ConflateJewelry_sp* Sheet_ConflateJewelry_sp::add_e_conflatejewelry_sp_list() {
  return e_conflatejewelry_sp_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_ConflateJewelry_sp >&
Sheet_ConflateJewelry_sp::e_conflatejewelry_sp_list() const {
  return e_conflatejewelry_sp_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_ConflateJewelry_sp >*
Sheet_ConflateJewelry_sp::mutable_e_conflatejewelry_sp_list() {
  return &e_conflatejewelry_sp_list_;
}

// -------------------------------------------------------------------

// E_ConflateJewelry_zlElemDesc

// optional int32 m_num = 1;
inline bool E_ConflateJewelry_zlElemDesc::has_m_num() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_ConflateJewelry_zlElemDesc::set_has_m_num() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_ConflateJewelry_zlElemDesc::clear_has_m_num() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_ConflateJewelry_zlElemDesc::clear_m_num() {
  m_num_ = 0;
  clear_has_m_num();
}
inline ::google::protobuf::int32 E_ConflateJewelry_zlElemDesc::m_num() const {
  return m_num_;
}
inline void E_ConflateJewelry_zlElemDesc::set_m_num(::google::protobuf::int32 value) {
  set_has_m_num();
  m_num_ = value;
}

// optional int32 m_id = 2;
inline bool E_ConflateJewelry_zlElemDesc::has_m_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_ConflateJewelry_zlElemDesc::set_has_m_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_ConflateJewelry_zlElemDesc::clear_has_m_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_ConflateJewelry_zlElemDesc::clear_m_id() {
  m_id_ = 0;
  clear_has_m_id();
}
inline ::google::protobuf::int32 E_ConflateJewelry_zlElemDesc::m_id() const {
  return m_id_;
}
inline void E_ConflateJewelry_zlElemDesc::set_m_id(::google::protobuf::int32 value) {
  set_has_m_id();
  m_id_ = value;
}

// -------------------------------------------------------------------

// E_ConflateJewelry_zl

// optional int32 m_id = 1;
inline bool E_ConflateJewelry_zl::has_m_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_ConflateJewelry_zl::set_has_m_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_ConflateJewelry_zl::clear_has_m_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_ConflateJewelry_zl::clear_m_id() {
  m_id_ = 0;
  clear_has_m_id();
}
inline ::google::protobuf::int32 E_ConflateJewelry_zl::m_id() const {
  return m_id_;
}
inline void E_ConflateJewelry_zl::set_m_id(::google::protobuf::int32 value) {
  set_has_m_id();
  m_id_ = value;
}

// optional int32 m_openquality = 2;
inline bool E_ConflateJewelry_zl::has_m_openquality() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_ConflateJewelry_zl::set_has_m_openquality() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_ConflateJewelry_zl::clear_has_m_openquality() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_ConflateJewelry_zl::clear_m_openquality() {
  m_openquality_ = 0;
  clear_has_m_openquality();
}
inline ::google::protobuf::int32 E_ConflateJewelry_zl::m_openquality() const {
  return m_openquality_;
}
inline void E_ConflateJewelry_zl::set_m_openquality(::google::protobuf::int32 value) {
  set_has_m_openquality();
  m_openquality_ = value;
}

// optional int32 m_grouptype = 3;
inline bool E_ConflateJewelry_zl::has_m_grouptype() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void E_ConflateJewelry_zl::set_has_m_grouptype() {
  _has_bits_[0] |= 0x00000004u;
}
inline void E_ConflateJewelry_zl::clear_has_m_grouptype() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void E_ConflateJewelry_zl::clear_m_grouptype() {
  m_grouptype_ = 0;
  clear_has_m_grouptype();
}
inline ::google::protobuf::int32 E_ConflateJewelry_zl::m_grouptype() const {
  return m_grouptype_;
}
inline void E_ConflateJewelry_zl::set_m_grouptype(::google::protobuf::int32 value) {
  set_has_m_grouptype();
  m_grouptype_ = value;
}

// optional int32 m_position = 4;
inline bool E_ConflateJewelry_zl::has_m_position() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void E_ConflateJewelry_zl::set_has_m_position() {
  _has_bits_[0] |= 0x00000008u;
}
inline void E_ConflateJewelry_zl::clear_has_m_position() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void E_ConflateJewelry_zl::clear_m_position() {
  m_position_ = 0;
  clear_has_m_position();
}
inline ::google::protobuf::int32 E_ConflateJewelry_zl::m_position() const {
  return m_position_;
}
inline void E_ConflateJewelry_zl::set_m_position(::google::protobuf::int32 value) {
  set_has_m_position();
  m_position_ = value;
}

// optional int32 m_zllv = 5;
inline bool E_ConflateJewelry_zl::has_m_zllv() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void E_ConflateJewelry_zl::set_has_m_zllv() {
  _has_bits_[0] |= 0x00000010u;
}
inline void E_ConflateJewelry_zl::clear_has_m_zllv() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void E_ConflateJewelry_zl::clear_m_zllv() {
  m_zllv_ = 0;
  clear_has_m_zllv();
}
inline ::google::protobuf::int32 E_ConflateJewelry_zl::m_zllv() const {
  return m_zllv_;
}
inline void E_ConflateJewelry_zl::set_m_zllv(::google::protobuf::int32 value) {
  set_has_m_zllv();
  m_zllv_ = value;
}

// optional int32 m_next = 6;
inline bool E_ConflateJewelry_zl::has_m_next() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void E_ConflateJewelry_zl::set_has_m_next() {
  _has_bits_[0] |= 0x00000020u;
}
inline void E_ConflateJewelry_zl::clear_has_m_next() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void E_ConflateJewelry_zl::clear_m_next() {
  m_next_ = 0;
  clear_has_m_next();
}
inline ::google::protobuf::int32 E_ConflateJewelry_zl::m_next() const {
  return m_next_;
}
inline void E_ConflateJewelry_zl::set_m_next(::google::protobuf::int32 value) {
  set_has_m_next();
  m_next_ = value;
}

// optional string m_zlname = 7;
inline bool E_ConflateJewelry_zl::has_m_zlname() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void E_ConflateJewelry_zl::set_has_m_zlname() {
  _has_bits_[0] |= 0x00000040u;
}
inline void E_ConflateJewelry_zl::clear_has_m_zlname() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void E_ConflateJewelry_zl::clear_m_zlname() {
  if (m_zlname_ != &::google::protobuf::internal::kEmptyString) {
    m_zlname_->clear();
  }
  clear_has_m_zlname();
}
inline const ::std::string& E_ConflateJewelry_zl::m_zlname() const {
  return *m_zlname_;
}
inline void E_ConflateJewelry_zl::set_m_zlname(const ::std::string& value) {
  set_has_m_zlname();
  if (m_zlname_ == &::google::protobuf::internal::kEmptyString) {
    m_zlname_ = new ::std::string;
  }
  m_zlname_->assign(value);
}
inline void E_ConflateJewelry_zl::set_m_zlname(const char* value) {
  set_has_m_zlname();
  if (m_zlname_ == &::google::protobuf::internal::kEmptyString) {
    m_zlname_ = new ::std::string;
  }
  m_zlname_->assign(value);
}
inline void E_ConflateJewelry_zl::set_m_zlname(const char* value, size_t size) {
  set_has_m_zlname();
  if (m_zlname_ == &::google::protobuf::internal::kEmptyString) {
    m_zlname_ = new ::std::string;
  }
  m_zlname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* E_ConflateJewelry_zl::mutable_m_zlname() {
  set_has_m_zlname();
  if (m_zlname_ == &::google::protobuf::internal::kEmptyString) {
    m_zlname_ = new ::std::string;
  }
  return m_zlname_;
}
inline ::std::string* E_ConflateJewelry_zl::release_m_zlname() {
  clear_has_m_zlname();
  if (m_zlname_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = m_zlname_;
    m_zlname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void E_ConflateJewelry_zl::set_allocated_m_zlname(::std::string* m_zlname) {
  if (m_zlname_ != &::google::protobuf::internal::kEmptyString) {
    delete m_zlname_;
  }
  if (m_zlname) {
    set_has_m_zlname();
    m_zlname_ = m_zlname;
  } else {
    clear_has_m_zlname();
    m_zlname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// repeated .proto_ff.E_ConflateJewelry_zlElemDesc m_elem = 8;
inline int E_ConflateJewelry_zl::m_elem_size() const {
  return m_elem_.size();
}
inline void E_ConflateJewelry_zl::clear_m_elem() {
  m_elem_.Clear();
}
inline const ::proto_ff::E_ConflateJewelry_zlElemDesc& E_ConflateJewelry_zl::m_elem(int index) const {
  return m_elem_.Get(index);
}
inline ::proto_ff::E_ConflateJewelry_zlElemDesc* E_ConflateJewelry_zl::mutable_m_elem(int index) {
  return m_elem_.Mutable(index);
}
inline ::proto_ff::E_ConflateJewelry_zlElemDesc* E_ConflateJewelry_zl::add_m_elem() {
  return m_elem_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_ConflateJewelry_zlElemDesc >&
E_ConflateJewelry_zl::m_elem() const {
  return m_elem_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_ConflateJewelry_zlElemDesc >*
E_ConflateJewelry_zl::mutable_m_elem() {
  return &m_elem_;
}

// -------------------------------------------------------------------

// Sheet_ConflateJewelry_zl

// repeated .proto_ff.E_ConflateJewelry_zl E_ConflateJewelry_zl_List = 1;
inline int Sheet_ConflateJewelry_zl::e_conflatejewelry_zl_list_size() const {
  return e_conflatejewelry_zl_list_.size();
}
inline void Sheet_ConflateJewelry_zl::clear_e_conflatejewelry_zl_list() {
  e_conflatejewelry_zl_list_.Clear();
}
inline const ::proto_ff::E_ConflateJewelry_zl& Sheet_ConflateJewelry_zl::e_conflatejewelry_zl_list(int index) const {
  return e_conflatejewelry_zl_list_.Get(index);
}
inline ::proto_ff::E_ConflateJewelry_zl* Sheet_ConflateJewelry_zl::mutable_e_conflatejewelry_zl_list(int index) {
  return e_conflatejewelry_zl_list_.Mutable(index);
}
inline ::proto_ff::E_ConflateJewelry_zl* Sheet_ConflateJewelry_zl::add_e_conflatejewelry_zl_list() {
  return e_conflatejewelry_zl_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_ConflateJewelry_zl >&
Sheet_ConflateJewelry_zl::e_conflatejewelry_zl_list() const {
  return e_conflatejewelry_zl_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_ConflateJewelry_zl >*
Sheet_ConflateJewelry_zl::mutable_e_conflatejewelry_zl_list() {
  return &e_conflatejewelry_zl_list_;
}

// -------------------------------------------------------------------

// E_ConflateJewelry_sjElemDesc

// optional int32 m_num = 1;
inline bool E_ConflateJewelry_sjElemDesc::has_m_num() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_ConflateJewelry_sjElemDesc::set_has_m_num() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_ConflateJewelry_sjElemDesc::clear_has_m_num() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_ConflateJewelry_sjElemDesc::clear_m_num() {
  m_num_ = 0;
  clear_has_m_num();
}
inline ::google::protobuf::int32 E_ConflateJewelry_sjElemDesc::m_num() const {
  return m_num_;
}
inline void E_ConflateJewelry_sjElemDesc::set_m_num(::google::protobuf::int32 value) {
  set_has_m_num();
  m_num_ = value;
}

// optional int32 m_id = 2;
inline bool E_ConflateJewelry_sjElemDesc::has_m_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_ConflateJewelry_sjElemDesc::set_has_m_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_ConflateJewelry_sjElemDesc::clear_has_m_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_ConflateJewelry_sjElemDesc::clear_m_id() {
  m_id_ = 0;
  clear_has_m_id();
}
inline ::google::protobuf::int32 E_ConflateJewelry_sjElemDesc::m_id() const {
  return m_id_;
}
inline void E_ConflateJewelry_sjElemDesc::set_m_id(::google::protobuf::int32 value) {
  set_has_m_id();
  m_id_ = value;
}

// -------------------------------------------------------------------

// E_ConflateJewelry_sj

// optional int32 m_id = 1;
inline bool E_ConflateJewelry_sj::has_m_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_ConflateJewelry_sj::set_has_m_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_ConflateJewelry_sj::clear_has_m_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_ConflateJewelry_sj::clear_m_id() {
  m_id_ = 0;
  clear_has_m_id();
}
inline ::google::protobuf::int32 E_ConflateJewelry_sj::m_id() const {
  return m_id_;
}
inline void E_ConflateJewelry_sj::set_m_id(::google::protobuf::int32 value) {
  set_has_m_id();
  m_id_ = value;
}

// optional int32 m_grouptype = 2;
inline bool E_ConflateJewelry_sj::has_m_grouptype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_ConflateJewelry_sj::set_has_m_grouptype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_ConflateJewelry_sj::clear_has_m_grouptype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_ConflateJewelry_sj::clear_m_grouptype() {
  m_grouptype_ = 0;
  clear_has_m_grouptype();
}
inline ::google::protobuf::int32 E_ConflateJewelry_sj::m_grouptype() const {
  return m_grouptype_;
}
inline void E_ConflateJewelry_sj::set_m_grouptype(::google::protobuf::int32 value) {
  set_has_m_grouptype();
  m_grouptype_ = value;
}

// optional int32 m_position = 3;
inline bool E_ConflateJewelry_sj::has_m_position() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void E_ConflateJewelry_sj::set_has_m_position() {
  _has_bits_[0] |= 0x00000004u;
}
inline void E_ConflateJewelry_sj::clear_has_m_position() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void E_ConflateJewelry_sj::clear_m_position() {
  m_position_ = 0;
  clear_has_m_position();
}
inline ::google::protobuf::int32 E_ConflateJewelry_sj::m_position() const {
  return m_position_;
}
inline void E_ConflateJewelry_sj::set_m_position(::google::protobuf::int32 value) {
  set_has_m_position();
  m_position_ = value;
}

// optional int32 m_wearquality = 4;
inline bool E_ConflateJewelry_sj::has_m_wearquality() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void E_ConflateJewelry_sj::set_has_m_wearquality() {
  _has_bits_[0] |= 0x00000008u;
}
inline void E_ConflateJewelry_sj::clear_has_m_wearquality() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void E_ConflateJewelry_sj::clear_m_wearquality() {
  m_wearquality_ = 0;
  clear_has_m_wearquality();
}
inline ::google::protobuf::int32 E_ConflateJewelry_sj::m_wearquality() const {
  return m_wearquality_;
}
inline void E_ConflateJewelry_sj::set_m_wearquality(::google::protobuf::int32 value) {
  set_has_m_wearquality();
  m_wearquality_ = value;
}

// optional int32 m_next = 5;
inline bool E_ConflateJewelry_sj::has_m_next() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void E_ConflateJewelry_sj::set_has_m_next() {
  _has_bits_[0] |= 0x00000010u;
}
inline void E_ConflateJewelry_sj::clear_has_m_next() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void E_ConflateJewelry_sj::clear_m_next() {
  m_next_ = 0;
  clear_has_m_next();
}
inline ::google::protobuf::int32 E_ConflateJewelry_sj::m_next() const {
  return m_next_;
}
inline void E_ConflateJewelry_sj::set_m_next(::google::protobuf::int32 value) {
  set_has_m_next();
  m_next_ = value;
}

// optional int32 m_openlv = 6;
inline bool E_ConflateJewelry_sj::has_m_openlv() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void E_ConflateJewelry_sj::set_has_m_openlv() {
  _has_bits_[0] |= 0x00000020u;
}
inline void E_ConflateJewelry_sj::clear_has_m_openlv() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void E_ConflateJewelry_sj::clear_m_openlv() {
  m_openlv_ = 0;
  clear_has_m_openlv();
}
inline ::google::protobuf::int32 E_ConflateJewelry_sj::m_openlv() const {
  return m_openlv_;
}
inline void E_ConflateJewelry_sj::set_m_openlv(::google::protobuf::int32 value) {
  set_has_m_openlv();
  m_openlv_ = value;
}

// repeated .proto_ff.E_ConflateJewelry_sjElemDesc m_elem = 7;
inline int E_ConflateJewelry_sj::m_elem_size() const {
  return m_elem_.size();
}
inline void E_ConflateJewelry_sj::clear_m_elem() {
  m_elem_.Clear();
}
inline const ::proto_ff::E_ConflateJewelry_sjElemDesc& E_ConflateJewelry_sj::m_elem(int index) const {
  return m_elem_.Get(index);
}
inline ::proto_ff::E_ConflateJewelry_sjElemDesc* E_ConflateJewelry_sj::mutable_m_elem(int index) {
  return m_elem_.Mutable(index);
}
inline ::proto_ff::E_ConflateJewelry_sjElemDesc* E_ConflateJewelry_sj::add_m_elem() {
  return m_elem_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_ConflateJewelry_sjElemDesc >&
E_ConflateJewelry_sj::m_elem() const {
  return m_elem_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_ConflateJewelry_sjElemDesc >*
E_ConflateJewelry_sj::mutable_m_elem() {
  return &m_elem_;
}

// -------------------------------------------------------------------

// Sheet_ConflateJewelry_sj

// repeated .proto_ff.E_ConflateJewelry_sj E_ConflateJewelry_sj_List = 1;
inline int Sheet_ConflateJewelry_sj::e_conflatejewelry_sj_list_size() const {
  return e_conflatejewelry_sj_list_.size();
}
inline void Sheet_ConflateJewelry_sj::clear_e_conflatejewelry_sj_list() {
  e_conflatejewelry_sj_list_.Clear();
}
inline const ::proto_ff::E_ConflateJewelry_sj& Sheet_ConflateJewelry_sj::e_conflatejewelry_sj_list(int index) const {
  return e_conflatejewelry_sj_list_.Get(index);
}
inline ::proto_ff::E_ConflateJewelry_sj* Sheet_ConflateJewelry_sj::mutable_e_conflatejewelry_sj_list(int index) {
  return e_conflatejewelry_sj_list_.Mutable(index);
}
inline ::proto_ff::E_ConflateJewelry_sj* Sheet_ConflateJewelry_sj::add_e_conflatejewelry_sj_list() {
  return e_conflatejewelry_sj_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_ConflateJewelry_sj >&
Sheet_ConflateJewelry_sj::e_conflatejewelry_sj_list() const {
  return e_conflatejewelry_sj_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_ConflateJewelry_sj >*
Sheet_ConflateJewelry_sj::mutable_e_conflatejewelry_sj_list() {
  return &e_conflatejewelry_sj_list_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto_ff

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_E_5fConflate_2eproto__INCLUDED
