// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: E_Tianxiafirst.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "E_Tianxiafirst.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace proto_ff {

namespace {

const ::google::protobuf::Descriptor* E_TianxiafirstActivateAttDesc_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_TianxiafirstActivateAttDesc_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_TianxiafirstActivateModelDesc_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_TianxiafirstActivateModelDesc_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_TianxiafirstActivate_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_TianxiafirstActivate_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_TianxiafirstActivate_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_TianxiafirstActivate_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_TianxiafirstStrongTypeDesc_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_TianxiafirstStrongTypeDesc_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_TianxiafirstStrong_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_TianxiafirstStrong_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_TianxiafirstStrong_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_TianxiafirstStrong_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_TianxiafirstStrongitem_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_TianxiafirstStrongitem_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_TianxiafirstStrongitem_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_TianxiafirstStrongitem_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_TianxiafirstRefineAttDesc_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_TianxiafirstRefineAttDesc_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_TianxiafirstRefine_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_TianxiafirstRefine_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_TianxiafirstRefine_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_TianxiafirstRefine_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_TianxiafirstSqskill_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_TianxiafirstSqskill_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_TianxiafirstSqskill_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_TianxiafirstSqskill_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_E_5fTianxiafirst_2eproto() {
  protobuf_AddDesc_E_5fTianxiafirst_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "E_Tianxiafirst.proto");
  GOOGLE_CHECK(file != NULL);
  E_TianxiafirstActivateAttDesc_descriptor_ = file->message_type(0);
  static const int E_TianxiafirstActivateAttDesc_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TianxiafirstActivateAttDesc, m_value_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TianxiafirstActivateAttDesc, m_id_),
  };
  E_TianxiafirstActivateAttDesc_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_TianxiafirstActivateAttDesc_descriptor_,
      E_TianxiafirstActivateAttDesc::default_instance_,
      E_TianxiafirstActivateAttDesc_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TianxiafirstActivateAttDesc, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TianxiafirstActivateAttDesc, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_TianxiafirstActivateAttDesc));
  E_TianxiafirstActivateModelDesc_descriptor_ = file->message_type(1);
  static const int E_TianxiafirstActivateModelDesc_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TianxiafirstActivateModelDesc, m_condition_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TianxiafirstActivateModelDesc, m_id_),
  };
  E_TianxiafirstActivateModelDesc_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_TianxiafirstActivateModelDesc_descriptor_,
      E_TianxiafirstActivateModelDesc::default_instance_,
      E_TianxiafirstActivateModelDesc_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TianxiafirstActivateModelDesc, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TianxiafirstActivateModelDesc, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_TianxiafirstActivateModelDesc));
  E_TianxiafirstActivate_descriptor_ = file->message_type(2);
  static const int E_TianxiafirstActivate_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TianxiafirstActivate, m_artifactid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TianxiafirstActivate, m_preid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TianxiafirstActivate, m_condition_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TianxiafirstActivate, m_att_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TianxiafirstActivate, m_model_),
  };
  E_TianxiafirstActivate_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_TianxiafirstActivate_descriptor_,
      E_TianxiafirstActivate::default_instance_,
      E_TianxiafirstActivate_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TianxiafirstActivate, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TianxiafirstActivate, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_TianxiafirstActivate));
  Sheet_TianxiafirstActivate_descriptor_ = file->message_type(3);
  static const int Sheet_TianxiafirstActivate_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_TianxiafirstActivate, e_tianxiafirstactivate_list_),
  };
  Sheet_TianxiafirstActivate_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_TianxiafirstActivate_descriptor_,
      Sheet_TianxiafirstActivate::default_instance_,
      Sheet_TianxiafirstActivate_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_TianxiafirstActivate, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_TianxiafirstActivate, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_TianxiafirstActivate));
  E_TianxiafirstStrongTypeDesc_descriptor_ = file->message_type(4);
  static const int E_TianxiafirstStrongTypeDesc_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TianxiafirstStrongTypeDesc, m_num_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TianxiafirstStrongTypeDesc, m_id_),
  };
  E_TianxiafirstStrongTypeDesc_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_TianxiafirstStrongTypeDesc_descriptor_,
      E_TianxiafirstStrongTypeDesc::default_instance_,
      E_TianxiafirstStrongTypeDesc_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TianxiafirstStrongTypeDesc, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TianxiafirstStrongTypeDesc, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_TianxiafirstStrongTypeDesc));
  E_TianxiafirstStrong_descriptor_ = file->message_type(5);
  static const int E_TianxiafirstStrong_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TianxiafirstStrong, m_artifactid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TianxiafirstStrong, m_strongup_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TianxiafirstStrong, m_exp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TianxiafirstStrong, m_type_),
  };
  E_TianxiafirstStrong_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_TianxiafirstStrong_descriptor_,
      E_TianxiafirstStrong::default_instance_,
      E_TianxiafirstStrong_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TianxiafirstStrong, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TianxiafirstStrong, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_TianxiafirstStrong));
  Sheet_TianxiafirstStrong_descriptor_ = file->message_type(6);
  static const int Sheet_TianxiafirstStrong_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_TianxiafirstStrong, e_tianxiafirststrong_list_),
  };
  Sheet_TianxiafirstStrong_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_TianxiafirstStrong_descriptor_,
      Sheet_TianxiafirstStrong::default_instance_,
      Sheet_TianxiafirstStrong_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_TianxiafirstStrong, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_TianxiafirstStrong, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_TianxiafirstStrong));
  E_TianxiafirstStrongitem_descriptor_ = file->message_type(7);
  static const int E_TianxiafirstStrongitem_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TianxiafirstStrongitem, m_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TianxiafirstStrongitem, m_addexp_),
  };
  E_TianxiafirstStrongitem_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_TianxiafirstStrongitem_descriptor_,
      E_TianxiafirstStrongitem::default_instance_,
      E_TianxiafirstStrongitem_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TianxiafirstStrongitem, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TianxiafirstStrongitem, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_TianxiafirstStrongitem));
  Sheet_TianxiafirstStrongitem_descriptor_ = file->message_type(8);
  static const int Sheet_TianxiafirstStrongitem_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_TianxiafirstStrongitem, e_tianxiafirststrongitem_list_),
  };
  Sheet_TianxiafirstStrongitem_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_TianxiafirstStrongitem_descriptor_,
      Sheet_TianxiafirstStrongitem::default_instance_,
      Sheet_TianxiafirstStrongitem_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_TianxiafirstStrongitem, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_TianxiafirstStrongitem, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_TianxiafirstStrongitem));
  E_TianxiafirstRefineAttDesc_descriptor_ = file->message_type(9);
  static const int E_TianxiafirstRefineAttDesc_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TianxiafirstRefineAttDesc, m_num_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TianxiafirstRefineAttDesc, m_id_),
  };
  E_TianxiafirstRefineAttDesc_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_TianxiafirstRefineAttDesc_descriptor_,
      E_TianxiafirstRefineAttDesc::default_instance_,
      E_TianxiafirstRefineAttDesc_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TianxiafirstRefineAttDesc, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TianxiafirstRefineAttDesc, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_TianxiafirstRefineAttDesc));
  E_TianxiafirstRefine_descriptor_ = file->message_type(10);
  static const int E_TianxiafirstRefine_offsets_[9] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TianxiafirstRefine, m_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TianxiafirstRefine, m_artifactid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TianxiafirstRefine, m_stage_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TianxiafirstRefine, m_star_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TianxiafirstRefine, m_success_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TianxiafirstRefine, m_consumeitem_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TianxiafirstRefine, m_consumenum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TianxiafirstRefine, m_guarant_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TianxiafirstRefine, m_att_),
  };
  E_TianxiafirstRefine_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_TianxiafirstRefine_descriptor_,
      E_TianxiafirstRefine::default_instance_,
      E_TianxiafirstRefine_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TianxiafirstRefine, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TianxiafirstRefine, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_TianxiafirstRefine));
  Sheet_TianxiafirstRefine_descriptor_ = file->message_type(11);
  static const int Sheet_TianxiafirstRefine_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_TianxiafirstRefine, e_tianxiafirstrefine_list_),
  };
  Sheet_TianxiafirstRefine_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_TianxiafirstRefine_descriptor_,
      Sheet_TianxiafirstRefine::default_instance_,
      Sheet_TianxiafirstRefine_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_TianxiafirstRefine, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_TianxiafirstRefine, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_TianxiafirstRefine));
  E_TianxiafirstSqskill_descriptor_ = file->message_type(12);
  static const int E_TianxiafirstSqskill_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TianxiafirstSqskill, m_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TianxiafirstSqskill, m_artifactid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TianxiafirstSqskill, m_skillid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TianxiafirstSqskill, m_level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TianxiafirstSqskill, m_condition_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TianxiafirstSqskill, m_score_),
  };
  E_TianxiafirstSqskill_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_TianxiafirstSqskill_descriptor_,
      E_TianxiafirstSqskill::default_instance_,
      E_TianxiafirstSqskill_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TianxiafirstSqskill, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TianxiafirstSqskill, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_TianxiafirstSqskill));
  Sheet_TianxiafirstSqskill_descriptor_ = file->message_type(13);
  static const int Sheet_TianxiafirstSqskill_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_TianxiafirstSqskill, e_tianxiafirstsqskill_list_),
  };
  Sheet_TianxiafirstSqskill_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_TianxiafirstSqskill_descriptor_,
      Sheet_TianxiafirstSqskill::default_instance_,
      Sheet_TianxiafirstSqskill_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_TianxiafirstSqskill, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_TianxiafirstSqskill, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_TianxiafirstSqskill));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_E_5fTianxiafirst_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_TianxiafirstActivateAttDesc_descriptor_, &E_TianxiafirstActivateAttDesc::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_TianxiafirstActivateModelDesc_descriptor_, &E_TianxiafirstActivateModelDesc::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_TianxiafirstActivate_descriptor_, &E_TianxiafirstActivate::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_TianxiafirstActivate_descriptor_, &Sheet_TianxiafirstActivate::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_TianxiafirstStrongTypeDesc_descriptor_, &E_TianxiafirstStrongTypeDesc::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_TianxiafirstStrong_descriptor_, &E_TianxiafirstStrong::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_TianxiafirstStrong_descriptor_, &Sheet_TianxiafirstStrong::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_TianxiafirstStrongitem_descriptor_, &E_TianxiafirstStrongitem::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_TianxiafirstStrongitem_descriptor_, &Sheet_TianxiafirstStrongitem::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_TianxiafirstRefineAttDesc_descriptor_, &E_TianxiafirstRefineAttDesc::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_TianxiafirstRefine_descriptor_, &E_TianxiafirstRefine::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_TianxiafirstRefine_descriptor_, &Sheet_TianxiafirstRefine::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_TianxiafirstSqskill_descriptor_, &E_TianxiafirstSqskill::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_TianxiafirstSqskill_descriptor_, &Sheet_TianxiafirstSqskill::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_E_5fTianxiafirst_2eproto() {
  delete E_TianxiafirstActivateAttDesc::default_instance_;
  delete E_TianxiafirstActivateAttDesc_reflection_;
  delete E_TianxiafirstActivateModelDesc::default_instance_;
  delete E_TianxiafirstActivateModelDesc_reflection_;
  delete E_TianxiafirstActivate::default_instance_;
  delete E_TianxiafirstActivate_reflection_;
  delete Sheet_TianxiafirstActivate::default_instance_;
  delete Sheet_TianxiafirstActivate_reflection_;
  delete E_TianxiafirstStrongTypeDesc::default_instance_;
  delete E_TianxiafirstStrongTypeDesc_reflection_;
  delete E_TianxiafirstStrong::default_instance_;
  delete E_TianxiafirstStrong_reflection_;
  delete Sheet_TianxiafirstStrong::default_instance_;
  delete Sheet_TianxiafirstStrong_reflection_;
  delete E_TianxiafirstStrongitem::default_instance_;
  delete E_TianxiafirstStrongitem_reflection_;
  delete Sheet_TianxiafirstStrongitem::default_instance_;
  delete Sheet_TianxiafirstStrongitem_reflection_;
  delete E_TianxiafirstRefineAttDesc::default_instance_;
  delete E_TianxiafirstRefineAttDesc_reflection_;
  delete E_TianxiafirstRefine::default_instance_;
  delete E_TianxiafirstRefine_reflection_;
  delete Sheet_TianxiafirstRefine::default_instance_;
  delete Sheet_TianxiafirstRefine_reflection_;
  delete E_TianxiafirstSqskill::default_instance_;
  delete E_TianxiafirstSqskill_reflection_;
  delete Sheet_TianxiafirstSqskill::default_instance_;
  delete Sheet_TianxiafirstSqskill_reflection_;
}

void protobuf_AddDesc_E_5fTianxiafirst_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::yd_fieldoptions::protobuf_AddDesc_yd_5ffieldoptions_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\024E_Tianxiafirst.proto\022\010proto_ff\032\025yd_fie"
    "ldoptions.proto\"O\n\035E_TianxiafirstActivat"
    "eAttDesc\022\030\n\007m_value\030\001 \001(\005B\007\302\377\024\003\345\200\274\022\024\n\004m_"
    "id\030\002 \001(\005B\006\302\377\024\002id\"^\n\037E_TianxiafirstActiva"
    "teModelDesc\022%\n\013m_condition\030\001 \001(\005B\020\302\377\024\014\346\277"
    "\200\346\264\273\346\235\241\344\273\266\022\024\n\004m_id\030\002 \001(\005B\006\302\377\024\002id\"\257\002\n\026E_T"
    "ianxiafirstActivate\022\"\n\014m_artifactId\030\001 \001("
    "\005B\014\302\377\024\010\347\245\236\345\231\250id\022*\n\007m_preId\030\002 \001(\005B\031\302\377\024\025\346\277"
    "\200\346\264\273\346\235\241\344\273\266-\345\211\215\347\275\256id\022%\n\013m_condition\030\003 \001(\005"
    "B\020\302\377\024\014\346\277\200\346\264\273\346\235\241\344\273\266\022L\n\005m_att\030\004 \003(\0132\'.prot"
    "o_ff.E_TianxiafirstActivateAttDescB\024\302\377\024\014"
    "\346\277\200\346\264\273\345\261\236\346\200\247\210\301\024\005\022P\n\007m_model\030\005 \003(\0132).prot"
    "o_ff.E_TianxiafirstActivateModelDescB\024\302\377"
    "\024\014\347\245\236\345\231\250\345\244\226\350\247\202\210\301\024\006\"i\n\032Sheet_Tianxiafirst"
    "Activate\022K\n\033E_TianxiafirstActivate_List\030"
    "\001 \003(\0132 .proto_ff.E_TianxiafirstActivateB"
    "\004\210\301\024\020\"P\n\034E_TianxiafirstStrongTypeDesc\022\032\n"
    "\005m_num\030\001 \001(\tB\013\302\377\024\003\345\200\274\220\301\024@\022\024\n\004m_id\030\002 \001(\005B"
    "\006\302\377\024\002ID\"\323\001\n\024E_TianxiafirstStrong\022\"\n\014m_ar"
    "tifactId\030\001 \001(\005B\014\302\377\024\010\347\245\236\345\231\250id\022$\n\nm_strong"
    "Up\030\002 \001(\005B\020\302\377\024\014\345\274\272\345\214\226\344\270\212\351\231\220\022)\n\005m_exp\030\003 \001("
    "\tB\032\302\377\024\022\345\274\272\345\214\226\346\211\200\351\234\200\347\273\217\351\252\214\220\301\024@\022F\n\006m_type\030"
    "\004 \003(\0132&.proto_ff.E_TianxiafirstStrongTyp"
    "eDescB\016\302\377\024\006\345\261\236\346\200\247\210\301\024\005\"c\n\030Sheet_Tianxiafi"
    "rstStrong\022G\n\031E_TianxiafirstStrong_List\030\001"
    " \003(\0132\036.proto_ff.E_TianxiafirstStrongB\004\210\301"
    "\024\010\"f\n\030E_TianxiafirstStrongitem\022 \n\004m_id\030\001"
    " \001(\005B\022\302\377\024\016\345\274\272\345\214\226\351\201\223\345\205\267id\022(\n\010m_addExp\030\002 \001"
    "(\005B\026\302\377\024\022\345\242\236\345\212\240\345\274\272\345\214\226\347\273\217\351\252\214\"o\n\034Sheet_Tian"
    "xiafirstStrongitem\022O\n\035E_TianxiafirstStro"
    "ngitem_List\030\001 \003(\0132\".proto_ff.E_Tianxiafi"
    "rstStrongitemB\004\210\301\024\004\"K\n\033E_TianxiafirstRef"
    "ineAttDesc\022\026\n\005m_num\030\001 \001(\005B\007\302\377\024\003\345\200\274\022\024\n\004m_"
    "id\030\002 \001(\005B\006\302\377\024\002id\"\371\002\n\024E_TianxiafirstRefin"
    "e\022\024\n\004m_id\030\001 \001(\005B\006\302\377\024\002id\022\"\n\014m_artifactId\030"
    "\002 \001(\005B\014\302\377\024\010\347\245\236\345\231\250id\022!\n\007m_stage\030\003 \001(\005B\020\302\377"
    "\024\014\347\262\276\347\202\274\351\230\266\347\272\247\022 \n\006m_star\030\004 \001(\005B\020\302\377\024\014\347\262\276\347"
    "\202\274\346\230\237\346\225\260\022 \n\tm_success\030\005 \001(\005B\r\302\377\024\t\346\210\220\345\212\237\347"
    "\216\207\022\'\n\rm_consumeItem\030\006 \001(\005B\020\302\377\024\014\346\266\210\350\200\227\347\211\251"
    "\345\223\201\022&\n\014m_consumeNum\030\007 \001(\005B\020\302\377\024\014\346\266\210\350\200\227\346\225\260"
    "\351\207\217\022#\n\tm_guarant\030\010 \001(\005B\020\302\377\024\014\344\277\235\345\272\225\346\254\241\346\225\260"
    "\022J\n\005m_att\030\t \003(\0132%.proto_ff.E_Tianxiafirs"
    "tRefineAttDescB\024\302\377\024\014\347\262\276\347\202\274\345\261\236\346\200\247\210\301\024\005\"d\n\030"
    "Sheet_TianxiafirstRefine\022H\n\031E_Tianxiafir"
    "stRefine_List\030\001 \003(\0132\036.proto_ff.E_Tianxia"
    "firstRefineB\005\210\301\024\200\001\"\346\001\n\025E_TianxiafirstSqs"
    "kill\022\024\n\004m_id\030\001 \001(\005B\006\302\377\024\002id\022\"\n\014m_artifact"
    "Id\030\002 \001(\005B\014\302\377\024\010\347\245\236\345\231\250id\022\037\n\tm_skillId\030\003 \001("
    "\005B\014\302\377\024\010\346\212\200\350\203\275id\022!\n\007m_level\030\004 \001(\005B\020\302\377\024\014\346\212"
    "\200\350\203\275\347\255\211\347\272\247\022,\n\013m_condition\030\005 \001(\005B\027\302\377\024\023\346\277\200"
    "\346\264\273/\345\215\207\347\272\247\346\235\241\344\273\266\022!\n\007m_score\030\006 \001(\005B\020\302\377\024\014\346"
    "\212\200\350\203\275\350\257\204\345\210\206\"f\n\031Sheet_TianxiafirstSqskill"
    "\022I\n\032E_TianxiafirstSqskill_List\030\001 \003(\0132\037.p"
    "roto_ff.E_TianxiafirstSqskillB\004\210\301\024@", 2155);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "E_Tianxiafirst.proto", &protobuf_RegisterTypes);
  E_TianxiafirstActivateAttDesc::default_instance_ = new E_TianxiafirstActivateAttDesc();
  E_TianxiafirstActivateModelDesc::default_instance_ = new E_TianxiafirstActivateModelDesc();
  E_TianxiafirstActivate::default_instance_ = new E_TianxiafirstActivate();
  Sheet_TianxiafirstActivate::default_instance_ = new Sheet_TianxiafirstActivate();
  E_TianxiafirstStrongTypeDesc::default_instance_ = new E_TianxiafirstStrongTypeDesc();
  E_TianxiafirstStrong::default_instance_ = new E_TianxiafirstStrong();
  Sheet_TianxiafirstStrong::default_instance_ = new Sheet_TianxiafirstStrong();
  E_TianxiafirstStrongitem::default_instance_ = new E_TianxiafirstStrongitem();
  Sheet_TianxiafirstStrongitem::default_instance_ = new Sheet_TianxiafirstStrongitem();
  E_TianxiafirstRefineAttDesc::default_instance_ = new E_TianxiafirstRefineAttDesc();
  E_TianxiafirstRefine::default_instance_ = new E_TianxiafirstRefine();
  Sheet_TianxiafirstRefine::default_instance_ = new Sheet_TianxiafirstRefine();
  E_TianxiafirstSqskill::default_instance_ = new E_TianxiafirstSqskill();
  Sheet_TianxiafirstSqskill::default_instance_ = new Sheet_TianxiafirstSqskill();
  E_TianxiafirstActivateAttDesc::default_instance_->InitAsDefaultInstance();
  E_TianxiafirstActivateModelDesc::default_instance_->InitAsDefaultInstance();
  E_TianxiafirstActivate::default_instance_->InitAsDefaultInstance();
  Sheet_TianxiafirstActivate::default_instance_->InitAsDefaultInstance();
  E_TianxiafirstStrongTypeDesc::default_instance_->InitAsDefaultInstance();
  E_TianxiafirstStrong::default_instance_->InitAsDefaultInstance();
  Sheet_TianxiafirstStrong::default_instance_->InitAsDefaultInstance();
  E_TianxiafirstStrongitem::default_instance_->InitAsDefaultInstance();
  Sheet_TianxiafirstStrongitem::default_instance_->InitAsDefaultInstance();
  E_TianxiafirstRefineAttDesc::default_instance_->InitAsDefaultInstance();
  E_TianxiafirstRefine::default_instance_->InitAsDefaultInstance();
  Sheet_TianxiafirstRefine::default_instance_->InitAsDefaultInstance();
  E_TianxiafirstSqskill::default_instance_->InitAsDefaultInstance();
  Sheet_TianxiafirstSqskill::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_E_5fTianxiafirst_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_E_5fTianxiafirst_2eproto {
  StaticDescriptorInitializer_E_5fTianxiafirst_2eproto() {
    protobuf_AddDesc_E_5fTianxiafirst_2eproto();
  }
} static_descriptor_initializer_E_5fTianxiafirst_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int E_TianxiafirstActivateAttDesc::kMValueFieldNumber;
const int E_TianxiafirstActivateAttDesc::kMIdFieldNumber;
#endif  // !_MSC_VER

E_TianxiafirstActivateAttDesc::E_TianxiafirstActivateAttDesc()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_TianxiafirstActivateAttDesc::InitAsDefaultInstance() {
}

E_TianxiafirstActivateAttDesc::E_TianxiafirstActivateAttDesc(const E_TianxiafirstActivateAttDesc& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_TianxiafirstActivateAttDesc::SharedCtor() {
  _cached_size_ = 0;
  m_value_ = 0;
  m_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_TianxiafirstActivateAttDesc::~E_TianxiafirstActivateAttDesc() {
  SharedDtor();
}

void E_TianxiafirstActivateAttDesc::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_TianxiafirstActivateAttDesc::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_TianxiafirstActivateAttDesc::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_TianxiafirstActivateAttDesc_descriptor_;
}

const E_TianxiafirstActivateAttDesc& E_TianxiafirstActivateAttDesc::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fTianxiafirst_2eproto();
  return *default_instance_;
}

E_TianxiafirstActivateAttDesc* E_TianxiafirstActivateAttDesc::default_instance_ = NULL;

E_TianxiafirstActivateAttDesc* E_TianxiafirstActivateAttDesc::New() const {
  return new E_TianxiafirstActivateAttDesc;
}

void E_TianxiafirstActivateAttDesc::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_value_ = 0;
    m_id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_TianxiafirstActivateAttDesc::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_value = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_value_)));
          set_has_m_value();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_id;
        break;
      }

      // optional int32 m_id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_id_)));
          set_has_m_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_TianxiafirstActivateAttDesc::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_value = 1;
  if (has_m_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_value(), output);
  }

  // optional int32 m_id = 2;
  if (has_m_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_TianxiafirstActivateAttDesc::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_value = 1;
  if (has_m_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_value(), target);
  }

  // optional int32 m_id = 2;
  if (has_m_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_TianxiafirstActivateAttDesc::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_value = 1;
    if (has_m_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_value());
    }

    // optional int32 m_id = 2;
    if (has_m_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_id());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_TianxiafirstActivateAttDesc::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_TianxiafirstActivateAttDesc* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_TianxiafirstActivateAttDesc*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_TianxiafirstActivateAttDesc::MergeFrom(const E_TianxiafirstActivateAttDesc& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_value()) {
      set_m_value(from.m_value());
    }
    if (from.has_m_id()) {
      set_m_id(from.m_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_TianxiafirstActivateAttDesc::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_TianxiafirstActivateAttDesc::CopyFrom(const E_TianxiafirstActivateAttDesc& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_TianxiafirstActivateAttDesc::IsInitialized() const {

  return true;
}

void E_TianxiafirstActivateAttDesc::Swap(E_TianxiafirstActivateAttDesc* other) {
  if (other != this) {
    std::swap(m_value_, other->m_value_);
    std::swap(m_id_, other->m_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_TianxiafirstActivateAttDesc::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_TianxiafirstActivateAttDesc_descriptor_;
  metadata.reflection = E_TianxiafirstActivateAttDesc_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_TianxiafirstActivateModelDesc::kMConditionFieldNumber;
const int E_TianxiafirstActivateModelDesc::kMIdFieldNumber;
#endif  // !_MSC_VER

E_TianxiafirstActivateModelDesc::E_TianxiafirstActivateModelDesc()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_TianxiafirstActivateModelDesc::InitAsDefaultInstance() {
}

E_TianxiafirstActivateModelDesc::E_TianxiafirstActivateModelDesc(const E_TianxiafirstActivateModelDesc& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_TianxiafirstActivateModelDesc::SharedCtor() {
  _cached_size_ = 0;
  m_condition_ = 0;
  m_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_TianxiafirstActivateModelDesc::~E_TianxiafirstActivateModelDesc() {
  SharedDtor();
}

void E_TianxiafirstActivateModelDesc::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_TianxiafirstActivateModelDesc::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_TianxiafirstActivateModelDesc::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_TianxiafirstActivateModelDesc_descriptor_;
}

const E_TianxiafirstActivateModelDesc& E_TianxiafirstActivateModelDesc::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fTianxiafirst_2eproto();
  return *default_instance_;
}

E_TianxiafirstActivateModelDesc* E_TianxiafirstActivateModelDesc::default_instance_ = NULL;

E_TianxiafirstActivateModelDesc* E_TianxiafirstActivateModelDesc::New() const {
  return new E_TianxiafirstActivateModelDesc;
}

void E_TianxiafirstActivateModelDesc::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_condition_ = 0;
    m_id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_TianxiafirstActivateModelDesc::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_condition = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_condition_)));
          set_has_m_condition();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_id;
        break;
      }

      // optional int32 m_id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_id_)));
          set_has_m_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_TianxiafirstActivateModelDesc::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_condition = 1;
  if (has_m_condition()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_condition(), output);
  }

  // optional int32 m_id = 2;
  if (has_m_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_TianxiafirstActivateModelDesc::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_condition = 1;
  if (has_m_condition()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_condition(), target);
  }

  // optional int32 m_id = 2;
  if (has_m_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_TianxiafirstActivateModelDesc::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_condition = 1;
    if (has_m_condition()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_condition());
    }

    // optional int32 m_id = 2;
    if (has_m_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_id());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_TianxiafirstActivateModelDesc::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_TianxiafirstActivateModelDesc* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_TianxiafirstActivateModelDesc*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_TianxiafirstActivateModelDesc::MergeFrom(const E_TianxiafirstActivateModelDesc& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_condition()) {
      set_m_condition(from.m_condition());
    }
    if (from.has_m_id()) {
      set_m_id(from.m_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_TianxiafirstActivateModelDesc::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_TianxiafirstActivateModelDesc::CopyFrom(const E_TianxiafirstActivateModelDesc& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_TianxiafirstActivateModelDesc::IsInitialized() const {

  return true;
}

void E_TianxiafirstActivateModelDesc::Swap(E_TianxiafirstActivateModelDesc* other) {
  if (other != this) {
    std::swap(m_condition_, other->m_condition_);
    std::swap(m_id_, other->m_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_TianxiafirstActivateModelDesc::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_TianxiafirstActivateModelDesc_descriptor_;
  metadata.reflection = E_TianxiafirstActivateModelDesc_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_TianxiafirstActivate::kMArtifactIdFieldNumber;
const int E_TianxiafirstActivate::kMPreIdFieldNumber;
const int E_TianxiafirstActivate::kMConditionFieldNumber;
const int E_TianxiafirstActivate::kMAttFieldNumber;
const int E_TianxiafirstActivate::kMModelFieldNumber;
#endif  // !_MSC_VER

E_TianxiafirstActivate::E_TianxiafirstActivate()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_TianxiafirstActivate::InitAsDefaultInstance() {
}

E_TianxiafirstActivate::E_TianxiafirstActivate(const E_TianxiafirstActivate& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_TianxiafirstActivate::SharedCtor() {
  _cached_size_ = 0;
  m_artifactid_ = 0;
  m_preid_ = 0;
  m_condition_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_TianxiafirstActivate::~E_TianxiafirstActivate() {
  SharedDtor();
}

void E_TianxiafirstActivate::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_TianxiafirstActivate::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_TianxiafirstActivate::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_TianxiafirstActivate_descriptor_;
}

const E_TianxiafirstActivate& E_TianxiafirstActivate::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fTianxiafirst_2eproto();
  return *default_instance_;
}

E_TianxiafirstActivate* E_TianxiafirstActivate::default_instance_ = NULL;

E_TianxiafirstActivate* E_TianxiafirstActivate::New() const {
  return new E_TianxiafirstActivate;
}

void E_TianxiafirstActivate::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_artifactid_ = 0;
    m_preid_ = 0;
    m_condition_ = 0;
  }
  m_att_.Clear();
  m_model_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_TianxiafirstActivate::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_artifactId = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_artifactid_)));
          set_has_m_artifactid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_preId;
        break;
      }

      // optional int32 m_preId = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_preId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_preid_)));
          set_has_m_preid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_m_condition;
        break;
      }

      // optional int32 m_condition = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_condition:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_condition_)));
          set_has_m_condition();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_m_att;
        break;
      }

      // repeated .proto_ff.E_TianxiafirstActivateAttDesc m_att = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_att:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_m_att()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_m_att;
        if (input->ExpectTag(42)) goto parse_m_model;
        break;
      }

      // repeated .proto_ff.E_TianxiafirstActivateModelDesc m_model = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_model:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_m_model()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_m_model;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_TianxiafirstActivate::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_artifactId = 1;
  if (has_m_artifactid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_artifactid(), output);
  }

  // optional int32 m_preId = 2;
  if (has_m_preid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_preid(), output);
  }

  // optional int32 m_condition = 3;
  if (has_m_condition()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->m_condition(), output);
  }

  // repeated .proto_ff.E_TianxiafirstActivateAttDesc m_att = 4;
  for (int i = 0; i < this->m_att_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->m_att(i), output);
  }

  // repeated .proto_ff.E_TianxiafirstActivateModelDesc m_model = 5;
  for (int i = 0; i < this->m_model_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->m_model(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_TianxiafirstActivate::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_artifactId = 1;
  if (has_m_artifactid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_artifactid(), target);
  }

  // optional int32 m_preId = 2;
  if (has_m_preid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_preid(), target);
  }

  // optional int32 m_condition = 3;
  if (has_m_condition()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->m_condition(), target);
  }

  // repeated .proto_ff.E_TianxiafirstActivateAttDesc m_att = 4;
  for (int i = 0; i < this->m_att_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->m_att(i), target);
  }

  // repeated .proto_ff.E_TianxiafirstActivateModelDesc m_model = 5;
  for (int i = 0; i < this->m_model_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->m_model(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_TianxiafirstActivate::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_artifactId = 1;
    if (has_m_artifactid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_artifactid());
    }

    // optional int32 m_preId = 2;
    if (has_m_preid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_preid());
    }

    // optional int32 m_condition = 3;
    if (has_m_condition()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_condition());
    }

  }
  // repeated .proto_ff.E_TianxiafirstActivateAttDesc m_att = 4;
  total_size += 1 * this->m_att_size();
  for (int i = 0; i < this->m_att_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->m_att(i));
  }

  // repeated .proto_ff.E_TianxiafirstActivateModelDesc m_model = 5;
  total_size += 1 * this->m_model_size();
  for (int i = 0; i < this->m_model_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->m_model(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_TianxiafirstActivate::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_TianxiafirstActivate* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_TianxiafirstActivate*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_TianxiafirstActivate::MergeFrom(const E_TianxiafirstActivate& from) {
  GOOGLE_CHECK_NE(&from, this);
  m_att_.MergeFrom(from.m_att_);
  m_model_.MergeFrom(from.m_model_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_artifactid()) {
      set_m_artifactid(from.m_artifactid());
    }
    if (from.has_m_preid()) {
      set_m_preid(from.m_preid());
    }
    if (from.has_m_condition()) {
      set_m_condition(from.m_condition());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_TianxiafirstActivate::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_TianxiafirstActivate::CopyFrom(const E_TianxiafirstActivate& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_TianxiafirstActivate::IsInitialized() const {

  return true;
}

void E_TianxiafirstActivate::Swap(E_TianxiafirstActivate* other) {
  if (other != this) {
    std::swap(m_artifactid_, other->m_artifactid_);
    std::swap(m_preid_, other->m_preid_);
    std::swap(m_condition_, other->m_condition_);
    m_att_.Swap(&other->m_att_);
    m_model_.Swap(&other->m_model_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_TianxiafirstActivate::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_TianxiafirstActivate_descriptor_;
  metadata.reflection = E_TianxiafirstActivate_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_TianxiafirstActivate::kETianxiafirstActivateListFieldNumber;
#endif  // !_MSC_VER

Sheet_TianxiafirstActivate::Sheet_TianxiafirstActivate()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_TianxiafirstActivate::InitAsDefaultInstance() {
}

Sheet_TianxiafirstActivate::Sheet_TianxiafirstActivate(const Sheet_TianxiafirstActivate& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_TianxiafirstActivate::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_TianxiafirstActivate::~Sheet_TianxiafirstActivate() {
  SharedDtor();
}

void Sheet_TianxiafirstActivate::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_TianxiafirstActivate::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_TianxiafirstActivate::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_TianxiafirstActivate_descriptor_;
}

const Sheet_TianxiafirstActivate& Sheet_TianxiafirstActivate::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fTianxiafirst_2eproto();
  return *default_instance_;
}

Sheet_TianxiafirstActivate* Sheet_TianxiafirstActivate::default_instance_ = NULL;

Sheet_TianxiafirstActivate* Sheet_TianxiafirstActivate::New() const {
  return new Sheet_TianxiafirstActivate;
}

void Sheet_TianxiafirstActivate::Clear() {
  e_tianxiafirstactivate_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_TianxiafirstActivate::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.E_TianxiafirstActivate E_TianxiafirstActivate_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_E_TianxiafirstActivate_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_e_tianxiafirstactivate_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_E_TianxiafirstActivate_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_TianxiafirstActivate::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.E_TianxiafirstActivate E_TianxiafirstActivate_List = 1;
  for (int i = 0; i < this->e_tianxiafirstactivate_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->e_tianxiafirstactivate_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_TianxiafirstActivate::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.E_TianxiafirstActivate E_TianxiafirstActivate_List = 1;
  for (int i = 0; i < this->e_tianxiafirstactivate_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->e_tianxiafirstactivate_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_TianxiafirstActivate::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.E_TianxiafirstActivate E_TianxiafirstActivate_List = 1;
  total_size += 1 * this->e_tianxiafirstactivate_list_size();
  for (int i = 0; i < this->e_tianxiafirstactivate_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->e_tianxiafirstactivate_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_TianxiafirstActivate::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_TianxiafirstActivate* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_TianxiafirstActivate*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_TianxiafirstActivate::MergeFrom(const Sheet_TianxiafirstActivate& from) {
  GOOGLE_CHECK_NE(&from, this);
  e_tianxiafirstactivate_list_.MergeFrom(from.e_tianxiafirstactivate_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_TianxiafirstActivate::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_TianxiafirstActivate::CopyFrom(const Sheet_TianxiafirstActivate& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_TianxiafirstActivate::IsInitialized() const {

  return true;
}

void Sheet_TianxiafirstActivate::Swap(Sheet_TianxiafirstActivate* other) {
  if (other != this) {
    e_tianxiafirstactivate_list_.Swap(&other->e_tianxiafirstactivate_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_TianxiafirstActivate::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_TianxiafirstActivate_descriptor_;
  metadata.reflection = Sheet_TianxiafirstActivate_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_TianxiafirstStrongTypeDesc::kMNumFieldNumber;
const int E_TianxiafirstStrongTypeDesc::kMIdFieldNumber;
#endif  // !_MSC_VER

E_TianxiafirstStrongTypeDesc::E_TianxiafirstStrongTypeDesc()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_TianxiafirstStrongTypeDesc::InitAsDefaultInstance() {
}

E_TianxiafirstStrongTypeDesc::E_TianxiafirstStrongTypeDesc(const E_TianxiafirstStrongTypeDesc& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_TianxiafirstStrongTypeDesc::SharedCtor() {
  _cached_size_ = 0;
  m_num_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  m_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_TianxiafirstStrongTypeDesc::~E_TianxiafirstStrongTypeDesc() {
  SharedDtor();
}

void E_TianxiafirstStrongTypeDesc::SharedDtor() {
  if (m_num_ != &::google::protobuf::internal::kEmptyString) {
    delete m_num_;
  }
  if (this != default_instance_) {
  }
}

void E_TianxiafirstStrongTypeDesc::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_TianxiafirstStrongTypeDesc::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_TianxiafirstStrongTypeDesc_descriptor_;
}

const E_TianxiafirstStrongTypeDesc& E_TianxiafirstStrongTypeDesc::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fTianxiafirst_2eproto();
  return *default_instance_;
}

E_TianxiafirstStrongTypeDesc* E_TianxiafirstStrongTypeDesc::default_instance_ = NULL;

E_TianxiafirstStrongTypeDesc* E_TianxiafirstStrongTypeDesc::New() const {
  return new E_TianxiafirstStrongTypeDesc;
}

void E_TianxiafirstStrongTypeDesc::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_m_num()) {
      if (m_num_ != &::google::protobuf::internal::kEmptyString) {
        m_num_->clear();
      }
    }
    m_id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_TianxiafirstStrongTypeDesc::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string m_num = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_m_num()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->m_num().data(), this->m_num().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_id;
        break;
      }

      // optional int32 m_id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_id_)));
          set_has_m_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_TianxiafirstStrongTypeDesc::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional string m_num = 1;
  if (has_m_num()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_num().data(), this->m_num().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->m_num(), output);
  }

  // optional int32 m_id = 2;
  if (has_m_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_TianxiafirstStrongTypeDesc::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional string m_num = 1;
  if (has_m_num()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_num().data(), this->m_num().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->m_num(), target);
  }

  // optional int32 m_id = 2;
  if (has_m_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_TianxiafirstStrongTypeDesc::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string m_num = 1;
    if (has_m_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->m_num());
    }

    // optional int32 m_id = 2;
    if (has_m_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_id());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_TianxiafirstStrongTypeDesc::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_TianxiafirstStrongTypeDesc* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_TianxiafirstStrongTypeDesc*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_TianxiafirstStrongTypeDesc::MergeFrom(const E_TianxiafirstStrongTypeDesc& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_num()) {
      set_m_num(from.m_num());
    }
    if (from.has_m_id()) {
      set_m_id(from.m_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_TianxiafirstStrongTypeDesc::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_TianxiafirstStrongTypeDesc::CopyFrom(const E_TianxiafirstStrongTypeDesc& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_TianxiafirstStrongTypeDesc::IsInitialized() const {

  return true;
}

void E_TianxiafirstStrongTypeDesc::Swap(E_TianxiafirstStrongTypeDesc* other) {
  if (other != this) {
    std::swap(m_num_, other->m_num_);
    std::swap(m_id_, other->m_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_TianxiafirstStrongTypeDesc::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_TianxiafirstStrongTypeDesc_descriptor_;
  metadata.reflection = E_TianxiafirstStrongTypeDesc_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_TianxiafirstStrong::kMArtifactIdFieldNumber;
const int E_TianxiafirstStrong::kMStrongUpFieldNumber;
const int E_TianxiafirstStrong::kMExpFieldNumber;
const int E_TianxiafirstStrong::kMTypeFieldNumber;
#endif  // !_MSC_VER

E_TianxiafirstStrong::E_TianxiafirstStrong()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_TianxiafirstStrong::InitAsDefaultInstance() {
}

E_TianxiafirstStrong::E_TianxiafirstStrong(const E_TianxiafirstStrong& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_TianxiafirstStrong::SharedCtor() {
  _cached_size_ = 0;
  m_artifactid_ = 0;
  m_strongup_ = 0;
  m_exp_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_TianxiafirstStrong::~E_TianxiafirstStrong() {
  SharedDtor();
}

void E_TianxiafirstStrong::SharedDtor() {
  if (m_exp_ != &::google::protobuf::internal::kEmptyString) {
    delete m_exp_;
  }
  if (this != default_instance_) {
  }
}

void E_TianxiafirstStrong::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_TianxiafirstStrong::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_TianxiafirstStrong_descriptor_;
}

const E_TianxiafirstStrong& E_TianxiafirstStrong::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fTianxiafirst_2eproto();
  return *default_instance_;
}

E_TianxiafirstStrong* E_TianxiafirstStrong::default_instance_ = NULL;

E_TianxiafirstStrong* E_TianxiafirstStrong::New() const {
  return new E_TianxiafirstStrong;
}

void E_TianxiafirstStrong::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_artifactid_ = 0;
    m_strongup_ = 0;
    if (has_m_exp()) {
      if (m_exp_ != &::google::protobuf::internal::kEmptyString) {
        m_exp_->clear();
      }
    }
  }
  m_type_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_TianxiafirstStrong::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_artifactId = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_artifactid_)));
          set_has_m_artifactid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_strongUp;
        break;
      }

      // optional int32 m_strongUp = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_strongUp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_strongup_)));
          set_has_m_strongup();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_m_exp;
        break;
      }

      // optional string m_exp = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_exp:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_m_exp()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->m_exp().data(), this->m_exp().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_m_type;
        break;
      }

      // repeated .proto_ff.E_TianxiafirstStrongTypeDesc m_type = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_type:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_m_type()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_m_type;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_TianxiafirstStrong::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_artifactId = 1;
  if (has_m_artifactid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_artifactid(), output);
  }

  // optional int32 m_strongUp = 2;
  if (has_m_strongup()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_strongup(), output);
  }

  // optional string m_exp = 3;
  if (has_m_exp()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_exp().data(), this->m_exp().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->m_exp(), output);
  }

  // repeated .proto_ff.E_TianxiafirstStrongTypeDesc m_type = 4;
  for (int i = 0; i < this->m_type_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->m_type(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_TianxiafirstStrong::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_artifactId = 1;
  if (has_m_artifactid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_artifactid(), target);
  }

  // optional int32 m_strongUp = 2;
  if (has_m_strongup()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_strongup(), target);
  }

  // optional string m_exp = 3;
  if (has_m_exp()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_exp().data(), this->m_exp().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->m_exp(), target);
  }

  // repeated .proto_ff.E_TianxiafirstStrongTypeDesc m_type = 4;
  for (int i = 0; i < this->m_type_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->m_type(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_TianxiafirstStrong::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_artifactId = 1;
    if (has_m_artifactid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_artifactid());
    }

    // optional int32 m_strongUp = 2;
    if (has_m_strongup()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_strongup());
    }

    // optional string m_exp = 3;
    if (has_m_exp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->m_exp());
    }

  }
  // repeated .proto_ff.E_TianxiafirstStrongTypeDesc m_type = 4;
  total_size += 1 * this->m_type_size();
  for (int i = 0; i < this->m_type_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->m_type(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_TianxiafirstStrong::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_TianxiafirstStrong* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_TianxiafirstStrong*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_TianxiafirstStrong::MergeFrom(const E_TianxiafirstStrong& from) {
  GOOGLE_CHECK_NE(&from, this);
  m_type_.MergeFrom(from.m_type_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_artifactid()) {
      set_m_artifactid(from.m_artifactid());
    }
    if (from.has_m_strongup()) {
      set_m_strongup(from.m_strongup());
    }
    if (from.has_m_exp()) {
      set_m_exp(from.m_exp());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_TianxiafirstStrong::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_TianxiafirstStrong::CopyFrom(const E_TianxiafirstStrong& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_TianxiafirstStrong::IsInitialized() const {

  return true;
}

void E_TianxiafirstStrong::Swap(E_TianxiafirstStrong* other) {
  if (other != this) {
    std::swap(m_artifactid_, other->m_artifactid_);
    std::swap(m_strongup_, other->m_strongup_);
    std::swap(m_exp_, other->m_exp_);
    m_type_.Swap(&other->m_type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_TianxiafirstStrong::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_TianxiafirstStrong_descriptor_;
  metadata.reflection = E_TianxiafirstStrong_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_TianxiafirstStrong::kETianxiafirstStrongListFieldNumber;
#endif  // !_MSC_VER

Sheet_TianxiafirstStrong::Sheet_TianxiafirstStrong()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_TianxiafirstStrong::InitAsDefaultInstance() {
}

Sheet_TianxiafirstStrong::Sheet_TianxiafirstStrong(const Sheet_TianxiafirstStrong& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_TianxiafirstStrong::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_TianxiafirstStrong::~Sheet_TianxiafirstStrong() {
  SharedDtor();
}

void Sheet_TianxiafirstStrong::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_TianxiafirstStrong::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_TianxiafirstStrong::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_TianxiafirstStrong_descriptor_;
}

const Sheet_TianxiafirstStrong& Sheet_TianxiafirstStrong::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fTianxiafirst_2eproto();
  return *default_instance_;
}

Sheet_TianxiafirstStrong* Sheet_TianxiafirstStrong::default_instance_ = NULL;

Sheet_TianxiafirstStrong* Sheet_TianxiafirstStrong::New() const {
  return new Sheet_TianxiafirstStrong;
}

void Sheet_TianxiafirstStrong::Clear() {
  e_tianxiafirststrong_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_TianxiafirstStrong::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.E_TianxiafirstStrong E_TianxiafirstStrong_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_E_TianxiafirstStrong_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_e_tianxiafirststrong_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_E_TianxiafirstStrong_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_TianxiafirstStrong::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.E_TianxiafirstStrong E_TianxiafirstStrong_List = 1;
  for (int i = 0; i < this->e_tianxiafirststrong_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->e_tianxiafirststrong_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_TianxiafirstStrong::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.E_TianxiafirstStrong E_TianxiafirstStrong_List = 1;
  for (int i = 0; i < this->e_tianxiafirststrong_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->e_tianxiafirststrong_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_TianxiafirstStrong::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.E_TianxiafirstStrong E_TianxiafirstStrong_List = 1;
  total_size += 1 * this->e_tianxiafirststrong_list_size();
  for (int i = 0; i < this->e_tianxiafirststrong_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->e_tianxiafirststrong_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_TianxiafirstStrong::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_TianxiafirstStrong* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_TianxiafirstStrong*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_TianxiafirstStrong::MergeFrom(const Sheet_TianxiafirstStrong& from) {
  GOOGLE_CHECK_NE(&from, this);
  e_tianxiafirststrong_list_.MergeFrom(from.e_tianxiafirststrong_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_TianxiafirstStrong::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_TianxiafirstStrong::CopyFrom(const Sheet_TianxiafirstStrong& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_TianxiafirstStrong::IsInitialized() const {

  return true;
}

void Sheet_TianxiafirstStrong::Swap(Sheet_TianxiafirstStrong* other) {
  if (other != this) {
    e_tianxiafirststrong_list_.Swap(&other->e_tianxiafirststrong_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_TianxiafirstStrong::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_TianxiafirstStrong_descriptor_;
  metadata.reflection = Sheet_TianxiafirstStrong_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_TianxiafirstStrongitem::kMIdFieldNumber;
const int E_TianxiafirstStrongitem::kMAddExpFieldNumber;
#endif  // !_MSC_VER

E_TianxiafirstStrongitem::E_TianxiafirstStrongitem()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_TianxiafirstStrongitem::InitAsDefaultInstance() {
}

E_TianxiafirstStrongitem::E_TianxiafirstStrongitem(const E_TianxiafirstStrongitem& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_TianxiafirstStrongitem::SharedCtor() {
  _cached_size_ = 0;
  m_id_ = 0;
  m_addexp_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_TianxiafirstStrongitem::~E_TianxiafirstStrongitem() {
  SharedDtor();
}

void E_TianxiafirstStrongitem::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_TianxiafirstStrongitem::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_TianxiafirstStrongitem::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_TianxiafirstStrongitem_descriptor_;
}

const E_TianxiafirstStrongitem& E_TianxiafirstStrongitem::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fTianxiafirst_2eproto();
  return *default_instance_;
}

E_TianxiafirstStrongitem* E_TianxiafirstStrongitem::default_instance_ = NULL;

E_TianxiafirstStrongitem* E_TianxiafirstStrongitem::New() const {
  return new E_TianxiafirstStrongitem;
}

void E_TianxiafirstStrongitem::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_id_ = 0;
    m_addexp_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_TianxiafirstStrongitem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_id_)));
          set_has_m_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_addExp;
        break;
      }

      // optional int32 m_addExp = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_addExp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_addexp_)));
          set_has_m_addexp();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_TianxiafirstStrongitem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_id(), output);
  }

  // optional int32 m_addExp = 2;
  if (has_m_addexp()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_addexp(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_TianxiafirstStrongitem::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_id(), target);
  }

  // optional int32 m_addExp = 2;
  if (has_m_addexp()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_addexp(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_TianxiafirstStrongitem::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_id = 1;
    if (has_m_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_id());
    }

    // optional int32 m_addExp = 2;
    if (has_m_addexp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_addexp());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_TianxiafirstStrongitem::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_TianxiafirstStrongitem* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_TianxiafirstStrongitem*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_TianxiafirstStrongitem::MergeFrom(const E_TianxiafirstStrongitem& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_id()) {
      set_m_id(from.m_id());
    }
    if (from.has_m_addexp()) {
      set_m_addexp(from.m_addexp());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_TianxiafirstStrongitem::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_TianxiafirstStrongitem::CopyFrom(const E_TianxiafirstStrongitem& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_TianxiafirstStrongitem::IsInitialized() const {

  return true;
}

void E_TianxiafirstStrongitem::Swap(E_TianxiafirstStrongitem* other) {
  if (other != this) {
    std::swap(m_id_, other->m_id_);
    std::swap(m_addexp_, other->m_addexp_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_TianxiafirstStrongitem::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_TianxiafirstStrongitem_descriptor_;
  metadata.reflection = E_TianxiafirstStrongitem_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_TianxiafirstStrongitem::kETianxiafirstStrongitemListFieldNumber;
#endif  // !_MSC_VER

Sheet_TianxiafirstStrongitem::Sheet_TianxiafirstStrongitem()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_TianxiafirstStrongitem::InitAsDefaultInstance() {
}

Sheet_TianxiafirstStrongitem::Sheet_TianxiafirstStrongitem(const Sheet_TianxiafirstStrongitem& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_TianxiafirstStrongitem::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_TianxiafirstStrongitem::~Sheet_TianxiafirstStrongitem() {
  SharedDtor();
}

void Sheet_TianxiafirstStrongitem::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_TianxiafirstStrongitem::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_TianxiafirstStrongitem::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_TianxiafirstStrongitem_descriptor_;
}

const Sheet_TianxiafirstStrongitem& Sheet_TianxiafirstStrongitem::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fTianxiafirst_2eproto();
  return *default_instance_;
}

Sheet_TianxiafirstStrongitem* Sheet_TianxiafirstStrongitem::default_instance_ = NULL;

Sheet_TianxiafirstStrongitem* Sheet_TianxiafirstStrongitem::New() const {
  return new Sheet_TianxiafirstStrongitem;
}

void Sheet_TianxiafirstStrongitem::Clear() {
  e_tianxiafirststrongitem_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_TianxiafirstStrongitem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.E_TianxiafirstStrongitem E_TianxiafirstStrongitem_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_E_TianxiafirstStrongitem_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_e_tianxiafirststrongitem_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_E_TianxiafirstStrongitem_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_TianxiafirstStrongitem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.E_TianxiafirstStrongitem E_TianxiafirstStrongitem_List = 1;
  for (int i = 0; i < this->e_tianxiafirststrongitem_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->e_tianxiafirststrongitem_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_TianxiafirstStrongitem::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.E_TianxiafirstStrongitem E_TianxiafirstStrongitem_List = 1;
  for (int i = 0; i < this->e_tianxiafirststrongitem_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->e_tianxiafirststrongitem_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_TianxiafirstStrongitem::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.E_TianxiafirstStrongitem E_TianxiafirstStrongitem_List = 1;
  total_size += 1 * this->e_tianxiafirststrongitem_list_size();
  for (int i = 0; i < this->e_tianxiafirststrongitem_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->e_tianxiafirststrongitem_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_TianxiafirstStrongitem::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_TianxiafirstStrongitem* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_TianxiafirstStrongitem*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_TianxiafirstStrongitem::MergeFrom(const Sheet_TianxiafirstStrongitem& from) {
  GOOGLE_CHECK_NE(&from, this);
  e_tianxiafirststrongitem_list_.MergeFrom(from.e_tianxiafirststrongitem_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_TianxiafirstStrongitem::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_TianxiafirstStrongitem::CopyFrom(const Sheet_TianxiafirstStrongitem& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_TianxiafirstStrongitem::IsInitialized() const {

  return true;
}

void Sheet_TianxiafirstStrongitem::Swap(Sheet_TianxiafirstStrongitem* other) {
  if (other != this) {
    e_tianxiafirststrongitem_list_.Swap(&other->e_tianxiafirststrongitem_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_TianxiafirstStrongitem::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_TianxiafirstStrongitem_descriptor_;
  metadata.reflection = Sheet_TianxiafirstStrongitem_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_TianxiafirstRefineAttDesc::kMNumFieldNumber;
const int E_TianxiafirstRefineAttDesc::kMIdFieldNumber;
#endif  // !_MSC_VER

E_TianxiafirstRefineAttDesc::E_TianxiafirstRefineAttDesc()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_TianxiafirstRefineAttDesc::InitAsDefaultInstance() {
}

E_TianxiafirstRefineAttDesc::E_TianxiafirstRefineAttDesc(const E_TianxiafirstRefineAttDesc& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_TianxiafirstRefineAttDesc::SharedCtor() {
  _cached_size_ = 0;
  m_num_ = 0;
  m_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_TianxiafirstRefineAttDesc::~E_TianxiafirstRefineAttDesc() {
  SharedDtor();
}

void E_TianxiafirstRefineAttDesc::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_TianxiafirstRefineAttDesc::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_TianxiafirstRefineAttDesc::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_TianxiafirstRefineAttDesc_descriptor_;
}

const E_TianxiafirstRefineAttDesc& E_TianxiafirstRefineAttDesc::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fTianxiafirst_2eproto();
  return *default_instance_;
}

E_TianxiafirstRefineAttDesc* E_TianxiafirstRefineAttDesc::default_instance_ = NULL;

E_TianxiafirstRefineAttDesc* E_TianxiafirstRefineAttDesc::New() const {
  return new E_TianxiafirstRefineAttDesc;
}

void E_TianxiafirstRefineAttDesc::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_num_ = 0;
    m_id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_TianxiafirstRefineAttDesc::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_num = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_num_)));
          set_has_m_num();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_id;
        break;
      }

      // optional int32 m_id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_id_)));
          set_has_m_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_TianxiafirstRefineAttDesc::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_num = 1;
  if (has_m_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_num(), output);
  }

  // optional int32 m_id = 2;
  if (has_m_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_TianxiafirstRefineAttDesc::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_num = 1;
  if (has_m_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_num(), target);
  }

  // optional int32 m_id = 2;
  if (has_m_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_TianxiafirstRefineAttDesc::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_num = 1;
    if (has_m_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_num());
    }

    // optional int32 m_id = 2;
    if (has_m_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_id());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_TianxiafirstRefineAttDesc::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_TianxiafirstRefineAttDesc* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_TianxiafirstRefineAttDesc*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_TianxiafirstRefineAttDesc::MergeFrom(const E_TianxiafirstRefineAttDesc& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_num()) {
      set_m_num(from.m_num());
    }
    if (from.has_m_id()) {
      set_m_id(from.m_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_TianxiafirstRefineAttDesc::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_TianxiafirstRefineAttDesc::CopyFrom(const E_TianxiafirstRefineAttDesc& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_TianxiafirstRefineAttDesc::IsInitialized() const {

  return true;
}

void E_TianxiafirstRefineAttDesc::Swap(E_TianxiafirstRefineAttDesc* other) {
  if (other != this) {
    std::swap(m_num_, other->m_num_);
    std::swap(m_id_, other->m_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_TianxiafirstRefineAttDesc::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_TianxiafirstRefineAttDesc_descriptor_;
  metadata.reflection = E_TianxiafirstRefineAttDesc_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_TianxiafirstRefine::kMIdFieldNumber;
const int E_TianxiafirstRefine::kMArtifactIdFieldNumber;
const int E_TianxiafirstRefine::kMStageFieldNumber;
const int E_TianxiafirstRefine::kMStarFieldNumber;
const int E_TianxiafirstRefine::kMSuccessFieldNumber;
const int E_TianxiafirstRefine::kMConsumeItemFieldNumber;
const int E_TianxiafirstRefine::kMConsumeNumFieldNumber;
const int E_TianxiafirstRefine::kMGuarantFieldNumber;
const int E_TianxiafirstRefine::kMAttFieldNumber;
#endif  // !_MSC_VER

E_TianxiafirstRefine::E_TianxiafirstRefine()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_TianxiafirstRefine::InitAsDefaultInstance() {
}

E_TianxiafirstRefine::E_TianxiafirstRefine(const E_TianxiafirstRefine& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_TianxiafirstRefine::SharedCtor() {
  _cached_size_ = 0;
  m_id_ = 0;
  m_artifactid_ = 0;
  m_stage_ = 0;
  m_star_ = 0;
  m_success_ = 0;
  m_consumeitem_ = 0;
  m_consumenum_ = 0;
  m_guarant_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_TianxiafirstRefine::~E_TianxiafirstRefine() {
  SharedDtor();
}

void E_TianxiafirstRefine::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_TianxiafirstRefine::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_TianxiafirstRefine::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_TianxiafirstRefine_descriptor_;
}

const E_TianxiafirstRefine& E_TianxiafirstRefine::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fTianxiafirst_2eproto();
  return *default_instance_;
}

E_TianxiafirstRefine* E_TianxiafirstRefine::default_instance_ = NULL;

E_TianxiafirstRefine* E_TianxiafirstRefine::New() const {
  return new E_TianxiafirstRefine;
}

void E_TianxiafirstRefine::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_id_ = 0;
    m_artifactid_ = 0;
    m_stage_ = 0;
    m_star_ = 0;
    m_success_ = 0;
    m_consumeitem_ = 0;
    m_consumenum_ = 0;
    m_guarant_ = 0;
  }
  m_att_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_TianxiafirstRefine::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_id_)));
          set_has_m_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_artifactId;
        break;
      }

      // optional int32 m_artifactId = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_artifactId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_artifactid_)));
          set_has_m_artifactid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_m_stage;
        break;
      }

      // optional int32 m_stage = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_stage:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_stage_)));
          set_has_m_stage();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_m_star;
        break;
      }

      // optional int32 m_star = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_star:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_star_)));
          set_has_m_star();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_m_success;
        break;
      }

      // optional int32 m_success = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_success:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_success_)));
          set_has_m_success();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_m_consumeItem;
        break;
      }

      // optional int32 m_consumeItem = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_consumeItem:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_consumeitem_)));
          set_has_m_consumeitem();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_m_consumeNum;
        break;
      }

      // optional int32 m_consumeNum = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_consumeNum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_consumenum_)));
          set_has_m_consumenum();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(64)) goto parse_m_guarant;
        break;
      }

      // optional int32 m_guarant = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_guarant:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_guarant_)));
          set_has_m_guarant();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(74)) goto parse_m_att;
        break;
      }

      // repeated .proto_ff.E_TianxiafirstRefineAttDesc m_att = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_att:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_m_att()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(74)) goto parse_m_att;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_TianxiafirstRefine::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_id(), output);
  }

  // optional int32 m_artifactId = 2;
  if (has_m_artifactid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_artifactid(), output);
  }

  // optional int32 m_stage = 3;
  if (has_m_stage()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->m_stage(), output);
  }

  // optional int32 m_star = 4;
  if (has_m_star()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->m_star(), output);
  }

  // optional int32 m_success = 5;
  if (has_m_success()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->m_success(), output);
  }

  // optional int32 m_consumeItem = 6;
  if (has_m_consumeitem()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->m_consumeitem(), output);
  }

  // optional int32 m_consumeNum = 7;
  if (has_m_consumenum()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->m_consumenum(), output);
  }

  // optional int32 m_guarant = 8;
  if (has_m_guarant()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->m_guarant(), output);
  }

  // repeated .proto_ff.E_TianxiafirstRefineAttDesc m_att = 9;
  for (int i = 0; i < this->m_att_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->m_att(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_TianxiafirstRefine::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_id(), target);
  }

  // optional int32 m_artifactId = 2;
  if (has_m_artifactid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_artifactid(), target);
  }

  // optional int32 m_stage = 3;
  if (has_m_stage()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->m_stage(), target);
  }

  // optional int32 m_star = 4;
  if (has_m_star()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->m_star(), target);
  }

  // optional int32 m_success = 5;
  if (has_m_success()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->m_success(), target);
  }

  // optional int32 m_consumeItem = 6;
  if (has_m_consumeitem()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->m_consumeitem(), target);
  }

  // optional int32 m_consumeNum = 7;
  if (has_m_consumenum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->m_consumenum(), target);
  }

  // optional int32 m_guarant = 8;
  if (has_m_guarant()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->m_guarant(), target);
  }

  // repeated .proto_ff.E_TianxiafirstRefineAttDesc m_att = 9;
  for (int i = 0; i < this->m_att_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        9, this->m_att(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_TianxiafirstRefine::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_id = 1;
    if (has_m_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_id());
    }

    // optional int32 m_artifactId = 2;
    if (has_m_artifactid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_artifactid());
    }

    // optional int32 m_stage = 3;
    if (has_m_stage()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_stage());
    }

    // optional int32 m_star = 4;
    if (has_m_star()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_star());
    }

    // optional int32 m_success = 5;
    if (has_m_success()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_success());
    }

    // optional int32 m_consumeItem = 6;
    if (has_m_consumeitem()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_consumeitem());
    }

    // optional int32 m_consumeNum = 7;
    if (has_m_consumenum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_consumenum());
    }

    // optional int32 m_guarant = 8;
    if (has_m_guarant()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_guarant());
    }

  }
  // repeated .proto_ff.E_TianxiafirstRefineAttDesc m_att = 9;
  total_size += 1 * this->m_att_size();
  for (int i = 0; i < this->m_att_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->m_att(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_TianxiafirstRefine::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_TianxiafirstRefine* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_TianxiafirstRefine*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_TianxiafirstRefine::MergeFrom(const E_TianxiafirstRefine& from) {
  GOOGLE_CHECK_NE(&from, this);
  m_att_.MergeFrom(from.m_att_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_id()) {
      set_m_id(from.m_id());
    }
    if (from.has_m_artifactid()) {
      set_m_artifactid(from.m_artifactid());
    }
    if (from.has_m_stage()) {
      set_m_stage(from.m_stage());
    }
    if (from.has_m_star()) {
      set_m_star(from.m_star());
    }
    if (from.has_m_success()) {
      set_m_success(from.m_success());
    }
    if (from.has_m_consumeitem()) {
      set_m_consumeitem(from.m_consumeitem());
    }
    if (from.has_m_consumenum()) {
      set_m_consumenum(from.m_consumenum());
    }
    if (from.has_m_guarant()) {
      set_m_guarant(from.m_guarant());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_TianxiafirstRefine::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_TianxiafirstRefine::CopyFrom(const E_TianxiafirstRefine& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_TianxiafirstRefine::IsInitialized() const {

  return true;
}

void E_TianxiafirstRefine::Swap(E_TianxiafirstRefine* other) {
  if (other != this) {
    std::swap(m_id_, other->m_id_);
    std::swap(m_artifactid_, other->m_artifactid_);
    std::swap(m_stage_, other->m_stage_);
    std::swap(m_star_, other->m_star_);
    std::swap(m_success_, other->m_success_);
    std::swap(m_consumeitem_, other->m_consumeitem_);
    std::swap(m_consumenum_, other->m_consumenum_);
    std::swap(m_guarant_, other->m_guarant_);
    m_att_.Swap(&other->m_att_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_TianxiafirstRefine::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_TianxiafirstRefine_descriptor_;
  metadata.reflection = E_TianxiafirstRefine_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_TianxiafirstRefine::kETianxiafirstRefineListFieldNumber;
#endif  // !_MSC_VER

Sheet_TianxiafirstRefine::Sheet_TianxiafirstRefine()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_TianxiafirstRefine::InitAsDefaultInstance() {
}

Sheet_TianxiafirstRefine::Sheet_TianxiafirstRefine(const Sheet_TianxiafirstRefine& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_TianxiafirstRefine::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_TianxiafirstRefine::~Sheet_TianxiafirstRefine() {
  SharedDtor();
}

void Sheet_TianxiafirstRefine::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_TianxiafirstRefine::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_TianxiafirstRefine::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_TianxiafirstRefine_descriptor_;
}

const Sheet_TianxiafirstRefine& Sheet_TianxiafirstRefine::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fTianxiafirst_2eproto();
  return *default_instance_;
}

Sheet_TianxiafirstRefine* Sheet_TianxiafirstRefine::default_instance_ = NULL;

Sheet_TianxiafirstRefine* Sheet_TianxiafirstRefine::New() const {
  return new Sheet_TianxiafirstRefine;
}

void Sheet_TianxiafirstRefine::Clear() {
  e_tianxiafirstrefine_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_TianxiafirstRefine::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.E_TianxiafirstRefine E_TianxiafirstRefine_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_E_TianxiafirstRefine_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_e_tianxiafirstrefine_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_E_TianxiafirstRefine_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_TianxiafirstRefine::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.E_TianxiafirstRefine E_TianxiafirstRefine_List = 1;
  for (int i = 0; i < this->e_tianxiafirstrefine_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->e_tianxiafirstrefine_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_TianxiafirstRefine::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.E_TianxiafirstRefine E_TianxiafirstRefine_List = 1;
  for (int i = 0; i < this->e_tianxiafirstrefine_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->e_tianxiafirstrefine_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_TianxiafirstRefine::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.E_TianxiafirstRefine E_TianxiafirstRefine_List = 1;
  total_size += 1 * this->e_tianxiafirstrefine_list_size();
  for (int i = 0; i < this->e_tianxiafirstrefine_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->e_tianxiafirstrefine_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_TianxiafirstRefine::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_TianxiafirstRefine* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_TianxiafirstRefine*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_TianxiafirstRefine::MergeFrom(const Sheet_TianxiafirstRefine& from) {
  GOOGLE_CHECK_NE(&from, this);
  e_tianxiafirstrefine_list_.MergeFrom(from.e_tianxiafirstrefine_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_TianxiafirstRefine::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_TianxiafirstRefine::CopyFrom(const Sheet_TianxiafirstRefine& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_TianxiafirstRefine::IsInitialized() const {

  return true;
}

void Sheet_TianxiafirstRefine::Swap(Sheet_TianxiafirstRefine* other) {
  if (other != this) {
    e_tianxiafirstrefine_list_.Swap(&other->e_tianxiafirstrefine_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_TianxiafirstRefine::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_TianxiafirstRefine_descriptor_;
  metadata.reflection = Sheet_TianxiafirstRefine_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_TianxiafirstSqskill::kMIdFieldNumber;
const int E_TianxiafirstSqskill::kMArtifactIdFieldNumber;
const int E_TianxiafirstSqskill::kMSkillIdFieldNumber;
const int E_TianxiafirstSqskill::kMLevelFieldNumber;
const int E_TianxiafirstSqskill::kMConditionFieldNumber;
const int E_TianxiafirstSqskill::kMScoreFieldNumber;
#endif  // !_MSC_VER

E_TianxiafirstSqskill::E_TianxiafirstSqskill()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_TianxiafirstSqskill::InitAsDefaultInstance() {
}

E_TianxiafirstSqskill::E_TianxiafirstSqskill(const E_TianxiafirstSqskill& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_TianxiafirstSqskill::SharedCtor() {
  _cached_size_ = 0;
  m_id_ = 0;
  m_artifactid_ = 0;
  m_skillid_ = 0;
  m_level_ = 0;
  m_condition_ = 0;
  m_score_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_TianxiafirstSqskill::~E_TianxiafirstSqskill() {
  SharedDtor();
}

void E_TianxiafirstSqskill::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_TianxiafirstSqskill::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_TianxiafirstSqskill::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_TianxiafirstSqskill_descriptor_;
}

const E_TianxiafirstSqskill& E_TianxiafirstSqskill::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fTianxiafirst_2eproto();
  return *default_instance_;
}

E_TianxiafirstSqskill* E_TianxiafirstSqskill::default_instance_ = NULL;

E_TianxiafirstSqskill* E_TianxiafirstSqskill::New() const {
  return new E_TianxiafirstSqskill;
}

void E_TianxiafirstSqskill::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_id_ = 0;
    m_artifactid_ = 0;
    m_skillid_ = 0;
    m_level_ = 0;
    m_condition_ = 0;
    m_score_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_TianxiafirstSqskill::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_id_)));
          set_has_m_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_artifactId;
        break;
      }

      // optional int32 m_artifactId = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_artifactId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_artifactid_)));
          set_has_m_artifactid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_m_skillId;
        break;
      }

      // optional int32 m_skillId = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_skillId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_skillid_)));
          set_has_m_skillid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_m_level;
        break;
      }

      // optional int32 m_level = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_level:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_level_)));
          set_has_m_level();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_m_condition;
        break;
      }

      // optional int32 m_condition = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_condition:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_condition_)));
          set_has_m_condition();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_m_score;
        break;
      }

      // optional int32 m_score = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_score:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_score_)));
          set_has_m_score();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_TianxiafirstSqskill::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_id(), output);
  }

  // optional int32 m_artifactId = 2;
  if (has_m_artifactid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_artifactid(), output);
  }

  // optional int32 m_skillId = 3;
  if (has_m_skillid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->m_skillid(), output);
  }

  // optional int32 m_level = 4;
  if (has_m_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->m_level(), output);
  }

  // optional int32 m_condition = 5;
  if (has_m_condition()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->m_condition(), output);
  }

  // optional int32 m_score = 6;
  if (has_m_score()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->m_score(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_TianxiafirstSqskill::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_id(), target);
  }

  // optional int32 m_artifactId = 2;
  if (has_m_artifactid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_artifactid(), target);
  }

  // optional int32 m_skillId = 3;
  if (has_m_skillid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->m_skillid(), target);
  }

  // optional int32 m_level = 4;
  if (has_m_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->m_level(), target);
  }

  // optional int32 m_condition = 5;
  if (has_m_condition()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->m_condition(), target);
  }

  // optional int32 m_score = 6;
  if (has_m_score()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->m_score(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_TianxiafirstSqskill::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_id = 1;
    if (has_m_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_id());
    }

    // optional int32 m_artifactId = 2;
    if (has_m_artifactid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_artifactid());
    }

    // optional int32 m_skillId = 3;
    if (has_m_skillid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_skillid());
    }

    // optional int32 m_level = 4;
    if (has_m_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_level());
    }

    // optional int32 m_condition = 5;
    if (has_m_condition()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_condition());
    }

    // optional int32 m_score = 6;
    if (has_m_score()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_score());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_TianxiafirstSqskill::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_TianxiafirstSqskill* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_TianxiafirstSqskill*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_TianxiafirstSqskill::MergeFrom(const E_TianxiafirstSqskill& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_id()) {
      set_m_id(from.m_id());
    }
    if (from.has_m_artifactid()) {
      set_m_artifactid(from.m_artifactid());
    }
    if (from.has_m_skillid()) {
      set_m_skillid(from.m_skillid());
    }
    if (from.has_m_level()) {
      set_m_level(from.m_level());
    }
    if (from.has_m_condition()) {
      set_m_condition(from.m_condition());
    }
    if (from.has_m_score()) {
      set_m_score(from.m_score());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_TianxiafirstSqskill::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_TianxiafirstSqskill::CopyFrom(const E_TianxiafirstSqskill& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_TianxiafirstSqskill::IsInitialized() const {

  return true;
}

void E_TianxiafirstSqskill::Swap(E_TianxiafirstSqskill* other) {
  if (other != this) {
    std::swap(m_id_, other->m_id_);
    std::swap(m_artifactid_, other->m_artifactid_);
    std::swap(m_skillid_, other->m_skillid_);
    std::swap(m_level_, other->m_level_);
    std::swap(m_condition_, other->m_condition_);
    std::swap(m_score_, other->m_score_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_TianxiafirstSqskill::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_TianxiafirstSqskill_descriptor_;
  metadata.reflection = E_TianxiafirstSqskill_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_TianxiafirstSqskill::kETianxiafirstSqskillListFieldNumber;
#endif  // !_MSC_VER

Sheet_TianxiafirstSqskill::Sheet_TianxiafirstSqskill()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_TianxiafirstSqskill::InitAsDefaultInstance() {
}

Sheet_TianxiafirstSqskill::Sheet_TianxiafirstSqskill(const Sheet_TianxiafirstSqskill& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_TianxiafirstSqskill::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_TianxiafirstSqskill::~Sheet_TianxiafirstSqskill() {
  SharedDtor();
}

void Sheet_TianxiafirstSqskill::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_TianxiafirstSqskill::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_TianxiafirstSqskill::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_TianxiafirstSqskill_descriptor_;
}

const Sheet_TianxiafirstSqskill& Sheet_TianxiafirstSqskill::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fTianxiafirst_2eproto();
  return *default_instance_;
}

Sheet_TianxiafirstSqskill* Sheet_TianxiafirstSqskill::default_instance_ = NULL;

Sheet_TianxiafirstSqskill* Sheet_TianxiafirstSqskill::New() const {
  return new Sheet_TianxiafirstSqskill;
}

void Sheet_TianxiafirstSqskill::Clear() {
  e_tianxiafirstsqskill_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_TianxiafirstSqskill::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.E_TianxiafirstSqskill E_TianxiafirstSqskill_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_E_TianxiafirstSqskill_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_e_tianxiafirstsqskill_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_E_TianxiafirstSqskill_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_TianxiafirstSqskill::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.E_TianxiafirstSqskill E_TianxiafirstSqskill_List = 1;
  for (int i = 0; i < this->e_tianxiafirstsqskill_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->e_tianxiafirstsqskill_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_TianxiafirstSqskill::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.E_TianxiafirstSqskill E_TianxiafirstSqskill_List = 1;
  for (int i = 0; i < this->e_tianxiafirstsqskill_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->e_tianxiafirstsqskill_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_TianxiafirstSqskill::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.E_TianxiafirstSqskill E_TianxiafirstSqskill_List = 1;
  total_size += 1 * this->e_tianxiafirstsqskill_list_size();
  for (int i = 0; i < this->e_tianxiafirstsqskill_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->e_tianxiafirstsqskill_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_TianxiafirstSqskill::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_TianxiafirstSqskill* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_TianxiafirstSqskill*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_TianxiafirstSqskill::MergeFrom(const Sheet_TianxiafirstSqskill& from) {
  GOOGLE_CHECK_NE(&from, this);
  e_tianxiafirstsqskill_list_.MergeFrom(from.e_tianxiafirstsqskill_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_TianxiafirstSqskill::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_TianxiafirstSqskill::CopyFrom(const Sheet_TianxiafirstSqskill& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_TianxiafirstSqskill::IsInitialized() const {

  return true;
}

void Sheet_TianxiafirstSqskill::Swap(Sheet_TianxiafirstSqskill* other) {
  if (other != this) {
    e_tianxiafirstsqskill_list_.Swap(&other->e_tianxiafirstsqskill_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_TianxiafirstSqskill::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_TianxiafirstSqskill_descriptor_;
  metadata.reflection = Sheet_TianxiafirstSqskill_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto_ff

// @@protoc_insertion_point(global_scope)
