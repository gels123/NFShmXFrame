// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: E_Tianxiafirst.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "E_Tianxiafirst.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace proto_ff {

namespace {

const ::google::protobuf::Descriptor* E_TianxiafirstConstant_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_TianxiafirstConstant_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_TianxiafirstConstant_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_TianxiafirstConstant_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_TianxiafirstBattle_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_TianxiafirstBattle_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_TianxiafirstBattle_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_TianxiafirstBattle_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_TianxiafirstArtifactAttDesc_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_TianxiafirstArtifactAttDesc_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_TianxiafirstArtifact_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_TianxiafirstArtifact_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_TianxiafirstArtifact_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_TianxiafirstArtifact_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_TianxiafirstStrongTypeDesc_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_TianxiafirstStrongTypeDesc_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_TianxiafirstStrong_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_TianxiafirstStrong_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_TianxiafirstStrong_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_TianxiafirstStrong_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_TianxiafirstStrongitem_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_TianxiafirstStrongitem_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_TianxiafirstStrongitem_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_TianxiafirstStrongitem_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_TianxiafirstRefineAttDesc_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_TianxiafirstRefineAttDesc_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_TianxiafirstRefine_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_TianxiafirstRefine_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_TianxiafirstRefine_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_TianxiafirstRefine_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_TianxiafirstSqskill_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_TianxiafirstSqskill_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_TianxiafirstSqskill_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_TianxiafirstSqskill_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_TianxiafirstGrade_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_TianxiafirstGrade_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_TianxiafirstGrade_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_TianxiafirstGrade_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_TianxiafirstGraderewardRewardDesc_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_TianxiafirstGraderewardRewardDesc_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_TianxiafirstGradereward_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_TianxiafirstGradereward_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_TianxiafirstGradereward_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_TianxiafirstGradereward_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_TianxiafirstRankrewardRewardDesc_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_TianxiafirstRankrewardRewardDesc_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_TianxiafirstRankreward_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_TianxiafirstRankreward_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_TianxiafirstRankreward_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_TianxiafirstRankreward_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_TianxiafirstWatchrewardRewardDesc_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_TianxiafirstWatchrewardRewardDesc_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_TianxiafirstWatchreward_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_TianxiafirstWatchreward_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_TianxiafirstWatchreward_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_TianxiafirstWatchreward_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_TianxiafirstLuckyrewardRewardDesc_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_TianxiafirstLuckyrewardRewardDesc_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_TianxiafirstLuckyreward_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_TianxiafirstLuckyreward_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_TianxiafirstLuckyreward_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_TianxiafirstLuckyreward_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_TianxiafirstMatchtimesrewardRewardDesc_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_TianxiafirstMatchtimesrewardRewardDesc_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_TianxiafirstMatchtimesreward_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_TianxiafirstMatchtimesreward_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_TianxiafirstMatchtimesreward_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_TianxiafirstMatchtimesreward_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_TianxiafirstMatchresultrewardRewardDesc_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_TianxiafirstMatchresultrewardRewardDesc_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_TianxiafirstMatchresultreward_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_TianxiafirstMatchresultreward_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_TianxiafirstMatchresultreward_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_TianxiafirstMatchresultreward_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_TianxiafirstExtraaddattrAttributeDesc_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_TianxiafirstExtraaddattrAttributeDesc_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_TianxiafirstExtraaddattr_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_TianxiafirstExtraaddattr_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_TianxiafirstExtraaddattr_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_TianxiafirstExtraaddattr_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_TianxiafirstFirstaddattrAttributeDesc_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_TianxiafirstFirstaddattrAttributeDesc_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_TianxiafirstFirstaddattr_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_TianxiafirstFirstaddattr_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_TianxiafirstFirstaddattr_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_TianxiafirstFirstaddattr_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_TianxiafirstShop_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_TianxiafirstShop_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_TianxiafirstShop_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_TianxiafirstShop_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_TianxiafirstDanmaku_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_TianxiafirstDanmaku_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_TianxiafirstDanmaku_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_TianxiafirstDanmaku_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_E_5fTianxiafirst_2eproto() {
  protobuf_AddDesc_E_5fTianxiafirst_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "E_Tianxiafirst.proto");
  GOOGLE_CHECK(file != NULL);
  E_TianxiafirstConstant_descriptor_ = file->message_type(0);
  static const int E_TianxiafirstConstant_offsets_[27] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TianxiafirstConstant, m_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TianxiafirstConstant, m_teammember_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TianxiafirstConstant, m_cedetime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TianxiafirstConstant, m_punishtime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TianxiafirstConstant, m_breaktime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TianxiafirstConstant, m_unitname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TianxiafirstConstant, m_unitcost_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TianxiafirstConstant, m_entrtimes_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TianxiafirstConstant, m_mvpreward_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TianxiafirstConstant, m_matchtime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TianxiafirstConstant, m_automatchtime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TianxiafirstConstant, m_endtipstime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TianxiafirstConstant, m_readytime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TianxiafirstConstant, m_summonitem_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TianxiafirstConstant, m_summonnum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TianxiafirstConstant, m_showreward_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TianxiafirstConstant, m_robotname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TianxiafirstConstant, m_matetime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TianxiafirstConstant, m_addtime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TianxiafirstConstant, m_initialnotice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TianxiafirstConstant, m_freetime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TianxiafirstConstant, m_expenditem_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TianxiafirstConstant, m_addserve_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TianxiafirstConstant, m_servetitle_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TianxiafirstConstant, m_guesslimit_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TianxiafirstConstant, m_exchangeratio_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TianxiafirstConstant, m_group_),
  };
  E_TianxiafirstConstant_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_TianxiafirstConstant_descriptor_,
      E_TianxiafirstConstant::default_instance_,
      E_TianxiafirstConstant_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TianxiafirstConstant, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TianxiafirstConstant, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_TianxiafirstConstant));
  Sheet_TianxiafirstConstant_descriptor_ = file->message_type(1);
  static const int Sheet_TianxiafirstConstant_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_TianxiafirstConstant, e_tianxiafirstconstant_list_),
  };
  Sheet_TianxiafirstConstant_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_TianxiafirstConstant_descriptor_,
      Sheet_TianxiafirstConstant::default_instance_,
      Sheet_TianxiafirstConstant_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_TianxiafirstConstant, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_TianxiafirstConstant, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_TianxiafirstConstant));
  E_TianxiafirstBattle_descriptor_ = file->message_type(2);
  static const int E_TianxiafirstBattle_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TianxiafirstBattle, m_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TianxiafirstBattle, m_gamemod_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TianxiafirstBattle, m_matchtime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TianxiafirstBattle, m_revive_),
  };
  E_TianxiafirstBattle_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_TianxiafirstBattle_descriptor_,
      E_TianxiafirstBattle::default_instance_,
      E_TianxiafirstBattle_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TianxiafirstBattle, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TianxiafirstBattle, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_TianxiafirstBattle));
  Sheet_TianxiafirstBattle_descriptor_ = file->message_type(3);
  static const int Sheet_TianxiafirstBattle_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_TianxiafirstBattle, e_tianxiafirstbattle_list_),
  };
  Sheet_TianxiafirstBattle_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_TianxiafirstBattle_descriptor_,
      Sheet_TianxiafirstBattle::default_instance_,
      Sheet_TianxiafirstBattle_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_TianxiafirstBattle, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_TianxiafirstBattle, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_TianxiafirstBattle));
  E_TianxiafirstArtifactAttDesc_descriptor_ = file->message_type(4);
  static const int E_TianxiafirstArtifactAttDesc_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TianxiafirstArtifactAttDesc, m_value_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TianxiafirstArtifactAttDesc, m_id_),
  };
  E_TianxiafirstArtifactAttDesc_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_TianxiafirstArtifactAttDesc_descriptor_,
      E_TianxiafirstArtifactAttDesc::default_instance_,
      E_TianxiafirstArtifactAttDesc_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TianxiafirstArtifactAttDesc, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TianxiafirstArtifactAttDesc, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_TianxiafirstArtifactAttDesc));
  E_TianxiafirstArtifact_descriptor_ = file->message_type(5);
  static const int E_TianxiafirstArtifact_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TianxiafirstArtifact, m_artifactid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TianxiafirstArtifact, m_preid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TianxiafirstArtifact, m_condition_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TianxiafirstArtifact, m_att_),
  };
  E_TianxiafirstArtifact_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_TianxiafirstArtifact_descriptor_,
      E_TianxiafirstArtifact::default_instance_,
      E_TianxiafirstArtifact_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TianxiafirstArtifact, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TianxiafirstArtifact, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_TianxiafirstArtifact));
  Sheet_TianxiafirstArtifact_descriptor_ = file->message_type(6);
  static const int Sheet_TianxiafirstArtifact_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_TianxiafirstArtifact, e_tianxiafirstartifact_list_),
  };
  Sheet_TianxiafirstArtifact_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_TianxiafirstArtifact_descriptor_,
      Sheet_TianxiafirstArtifact::default_instance_,
      Sheet_TianxiafirstArtifact_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_TianxiafirstArtifact, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_TianxiafirstArtifact, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_TianxiafirstArtifact));
  E_TianxiafirstStrongTypeDesc_descriptor_ = file->message_type(7);
  static const int E_TianxiafirstStrongTypeDesc_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TianxiafirstStrongTypeDesc, m_num_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TianxiafirstStrongTypeDesc, m_id_),
  };
  E_TianxiafirstStrongTypeDesc_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_TianxiafirstStrongTypeDesc_descriptor_,
      E_TianxiafirstStrongTypeDesc::default_instance_,
      E_TianxiafirstStrongTypeDesc_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TianxiafirstStrongTypeDesc, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TianxiafirstStrongTypeDesc, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_TianxiafirstStrongTypeDesc));
  E_TianxiafirstStrong_descriptor_ = file->message_type(8);
  static const int E_TianxiafirstStrong_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TianxiafirstStrong, m_artifactid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TianxiafirstStrong, m_strongup_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TianxiafirstStrong, m_exp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TianxiafirstStrong, m_type_),
  };
  E_TianxiafirstStrong_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_TianxiafirstStrong_descriptor_,
      E_TianxiafirstStrong::default_instance_,
      E_TianxiafirstStrong_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TianxiafirstStrong, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TianxiafirstStrong, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_TianxiafirstStrong));
  Sheet_TianxiafirstStrong_descriptor_ = file->message_type(9);
  static const int Sheet_TianxiafirstStrong_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_TianxiafirstStrong, e_tianxiafirststrong_list_),
  };
  Sheet_TianxiafirstStrong_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_TianxiafirstStrong_descriptor_,
      Sheet_TianxiafirstStrong::default_instance_,
      Sheet_TianxiafirstStrong_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_TianxiafirstStrong, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_TianxiafirstStrong, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_TianxiafirstStrong));
  E_TianxiafirstStrongitem_descriptor_ = file->message_type(10);
  static const int E_TianxiafirstStrongitem_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TianxiafirstStrongitem, m_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TianxiafirstStrongitem, m_addexp_),
  };
  E_TianxiafirstStrongitem_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_TianxiafirstStrongitem_descriptor_,
      E_TianxiafirstStrongitem::default_instance_,
      E_TianxiafirstStrongitem_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TianxiafirstStrongitem, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TianxiafirstStrongitem, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_TianxiafirstStrongitem));
  Sheet_TianxiafirstStrongitem_descriptor_ = file->message_type(11);
  static const int Sheet_TianxiafirstStrongitem_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_TianxiafirstStrongitem, e_tianxiafirststrongitem_list_),
  };
  Sheet_TianxiafirstStrongitem_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_TianxiafirstStrongitem_descriptor_,
      Sheet_TianxiafirstStrongitem::default_instance_,
      Sheet_TianxiafirstStrongitem_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_TianxiafirstStrongitem, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_TianxiafirstStrongitem, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_TianxiafirstStrongitem));
  E_TianxiafirstRefineAttDesc_descriptor_ = file->message_type(12);
  static const int E_TianxiafirstRefineAttDesc_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TianxiafirstRefineAttDesc, m_num_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TianxiafirstRefineAttDesc, m_id_),
  };
  E_TianxiafirstRefineAttDesc_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_TianxiafirstRefineAttDesc_descriptor_,
      E_TianxiafirstRefineAttDesc::default_instance_,
      E_TianxiafirstRefineAttDesc_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TianxiafirstRefineAttDesc, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TianxiafirstRefineAttDesc, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_TianxiafirstRefineAttDesc));
  E_TianxiafirstRefine_descriptor_ = file->message_type(13);
  static const int E_TianxiafirstRefine_offsets_[9] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TianxiafirstRefine, m_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TianxiafirstRefine, m_artifactid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TianxiafirstRefine, m_stage_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TianxiafirstRefine, m_star_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TianxiafirstRefine, m_success_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TianxiafirstRefine, m_consumeitem_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TianxiafirstRefine, m_consumenum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TianxiafirstRefine, m_guarant_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TianxiafirstRefine, m_att_),
  };
  E_TianxiafirstRefine_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_TianxiafirstRefine_descriptor_,
      E_TianxiafirstRefine::default_instance_,
      E_TianxiafirstRefine_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TianxiafirstRefine, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TianxiafirstRefine, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_TianxiafirstRefine));
  Sheet_TianxiafirstRefine_descriptor_ = file->message_type(14);
  static const int Sheet_TianxiafirstRefine_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_TianxiafirstRefine, e_tianxiafirstrefine_list_),
  };
  Sheet_TianxiafirstRefine_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_TianxiafirstRefine_descriptor_,
      Sheet_TianxiafirstRefine::default_instance_,
      Sheet_TianxiafirstRefine_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_TianxiafirstRefine, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_TianxiafirstRefine, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_TianxiafirstRefine));
  E_TianxiafirstSqskill_descriptor_ = file->message_type(15);
  static const int E_TianxiafirstSqskill_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TianxiafirstSqskill, m_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TianxiafirstSqskill, m_artifactid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TianxiafirstSqskill, m_skillid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TianxiafirstSqskill, m_level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TianxiafirstSqskill, m_condition_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TianxiafirstSqskill, m_score_),
  };
  E_TianxiafirstSqskill_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_TianxiafirstSqskill_descriptor_,
      E_TianxiafirstSqskill::default_instance_,
      E_TianxiafirstSqskill_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TianxiafirstSqskill, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TianxiafirstSqskill, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_TianxiafirstSqskill));
  Sheet_TianxiafirstSqskill_descriptor_ = file->message_type(16);
  static const int Sheet_TianxiafirstSqskill_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_TianxiafirstSqskill, e_tianxiafirstsqskill_list_),
  };
  Sheet_TianxiafirstSqskill_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_TianxiafirstSqskill_descriptor_,
      Sheet_TianxiafirstSqskill::default_instance_,
      Sheet_TianxiafirstSqskill_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_TianxiafirstSqskill, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_TianxiafirstSqskill, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_TianxiafirstSqskill));
  E_TianxiafirstGrade_descriptor_ = file->message_type(17);
  static const int E_TianxiafirstGrade_offsets_[11] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TianxiafirstGrade, m_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TianxiafirstGrade, m_grade_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TianxiafirstGrade, m_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TianxiafirstGrade, m_star_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TianxiafirstGrade, m_score_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TianxiafirstGrade, m_scoreadd_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TianxiafirstGrade, m_scoringsub_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TianxiafirstGrade, m_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TianxiafirstGrade, m_downlimit_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TianxiafirstGrade, m_uplimit_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TianxiafirstGrade, m_substitutetime_),
  };
  E_TianxiafirstGrade_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_TianxiafirstGrade_descriptor_,
      E_TianxiafirstGrade::default_instance_,
      E_TianxiafirstGrade_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TianxiafirstGrade, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TianxiafirstGrade, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_TianxiafirstGrade));
  Sheet_TianxiafirstGrade_descriptor_ = file->message_type(18);
  static const int Sheet_TianxiafirstGrade_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_TianxiafirstGrade, e_tianxiafirstgrade_list_),
  };
  Sheet_TianxiafirstGrade_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_TianxiafirstGrade_descriptor_,
      Sheet_TianxiafirstGrade::default_instance_,
      Sheet_TianxiafirstGrade_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_TianxiafirstGrade, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_TianxiafirstGrade, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_TianxiafirstGrade));
  E_TianxiafirstGraderewardRewardDesc_descriptor_ = file->message_type(19);
  static const int E_TianxiafirstGraderewardRewardDesc_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TianxiafirstGraderewardRewardDesc, m_num_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TianxiafirstGraderewardRewardDesc, m_id_),
  };
  E_TianxiafirstGraderewardRewardDesc_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_TianxiafirstGraderewardRewardDesc_descriptor_,
      E_TianxiafirstGraderewardRewardDesc::default_instance_,
      E_TianxiafirstGraderewardRewardDesc_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TianxiafirstGraderewardRewardDesc, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TianxiafirstGraderewardRewardDesc, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_TianxiafirstGraderewardRewardDesc));
  E_TianxiafirstGradereward_descriptor_ = file->message_type(20);
  static const int E_TianxiafirstGradereward_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TianxiafirstGradereward, m_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TianxiafirstGradereward, m_scoremin_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TianxiafirstGradereward, m_matchtimes_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TianxiafirstGradereward, m_reward_),
  };
  E_TianxiafirstGradereward_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_TianxiafirstGradereward_descriptor_,
      E_TianxiafirstGradereward::default_instance_,
      E_TianxiafirstGradereward_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TianxiafirstGradereward, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TianxiafirstGradereward, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_TianxiafirstGradereward));
  Sheet_TianxiafirstGradereward_descriptor_ = file->message_type(21);
  static const int Sheet_TianxiafirstGradereward_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_TianxiafirstGradereward, e_tianxiafirstgradereward_list_),
  };
  Sheet_TianxiafirstGradereward_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_TianxiafirstGradereward_descriptor_,
      Sheet_TianxiafirstGradereward::default_instance_,
      Sheet_TianxiafirstGradereward_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_TianxiafirstGradereward, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_TianxiafirstGradereward, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_TianxiafirstGradereward));
  E_TianxiafirstRankrewardRewardDesc_descriptor_ = file->message_type(22);
  static const int E_TianxiafirstRankrewardRewardDesc_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TianxiafirstRankrewardRewardDesc, m_num_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TianxiafirstRankrewardRewardDesc, m_id_),
  };
  E_TianxiafirstRankrewardRewardDesc_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_TianxiafirstRankrewardRewardDesc_descriptor_,
      E_TianxiafirstRankrewardRewardDesc::default_instance_,
      E_TianxiafirstRankrewardRewardDesc_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TianxiafirstRankrewardRewardDesc, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TianxiafirstRankrewardRewardDesc, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_TianxiafirstRankrewardRewardDesc));
  E_TianxiafirstRankreward_descriptor_ = file->message_type(23);
  static const int E_TianxiafirstRankreward_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TianxiafirstRankreward, m_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TianxiafirstRankreward, m_rank_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TianxiafirstRankreward, m_reward_),
  };
  E_TianxiafirstRankreward_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_TianxiafirstRankreward_descriptor_,
      E_TianxiafirstRankreward::default_instance_,
      E_TianxiafirstRankreward_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TianxiafirstRankreward, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TianxiafirstRankreward, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_TianxiafirstRankreward));
  Sheet_TianxiafirstRankreward_descriptor_ = file->message_type(24);
  static const int Sheet_TianxiafirstRankreward_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_TianxiafirstRankreward, e_tianxiafirstrankreward_list_),
  };
  Sheet_TianxiafirstRankreward_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_TianxiafirstRankreward_descriptor_,
      Sheet_TianxiafirstRankreward::default_instance_,
      Sheet_TianxiafirstRankreward_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_TianxiafirstRankreward, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_TianxiafirstRankreward, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_TianxiafirstRankreward));
  E_TianxiafirstWatchrewardRewardDesc_descriptor_ = file->message_type(25);
  static const int E_TianxiafirstWatchrewardRewardDesc_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TianxiafirstWatchrewardRewardDesc, m_num_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TianxiafirstWatchrewardRewardDesc, m_id_),
  };
  E_TianxiafirstWatchrewardRewardDesc_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_TianxiafirstWatchrewardRewardDesc_descriptor_,
      E_TianxiafirstWatchrewardRewardDesc::default_instance_,
      E_TianxiafirstWatchrewardRewardDesc_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TianxiafirstWatchrewardRewardDesc, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TianxiafirstWatchrewardRewardDesc, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_TianxiafirstWatchrewardRewardDesc));
  E_TianxiafirstWatchreward_descriptor_ = file->message_type(26);
  static const int E_TianxiafirstWatchreward_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TianxiafirstWatchreward, m_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TianxiafirstWatchreward, m_matchstate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TianxiafirstWatchreward, m_reward_),
  };
  E_TianxiafirstWatchreward_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_TianxiafirstWatchreward_descriptor_,
      E_TianxiafirstWatchreward::default_instance_,
      E_TianxiafirstWatchreward_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TianxiafirstWatchreward, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TianxiafirstWatchreward, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_TianxiafirstWatchreward));
  Sheet_TianxiafirstWatchreward_descriptor_ = file->message_type(27);
  static const int Sheet_TianxiafirstWatchreward_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_TianxiafirstWatchreward, e_tianxiafirstwatchreward_list_),
  };
  Sheet_TianxiafirstWatchreward_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_TianxiafirstWatchreward_descriptor_,
      Sheet_TianxiafirstWatchreward::default_instance_,
      Sheet_TianxiafirstWatchreward_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_TianxiafirstWatchreward, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_TianxiafirstWatchreward, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_TianxiafirstWatchreward));
  E_TianxiafirstLuckyrewardRewardDesc_descriptor_ = file->message_type(28);
  static const int E_TianxiafirstLuckyrewardRewardDesc_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TianxiafirstLuckyrewardRewardDesc, m_num_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TianxiafirstLuckyrewardRewardDesc, m_id_),
  };
  E_TianxiafirstLuckyrewardRewardDesc_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_TianxiafirstLuckyrewardRewardDesc_descriptor_,
      E_TianxiafirstLuckyrewardRewardDesc::default_instance_,
      E_TianxiafirstLuckyrewardRewardDesc_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TianxiafirstLuckyrewardRewardDesc, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TianxiafirstLuckyrewardRewardDesc, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_TianxiafirstLuckyrewardRewardDesc));
  E_TianxiafirstLuckyreward_descriptor_ = file->message_type(29);
  static const int E_TianxiafirstLuckyreward_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TianxiafirstLuckyreward, m_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TianxiafirstLuckyreward, m_nummin_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TianxiafirstLuckyreward, m_nummax_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TianxiafirstLuckyreward, m_reward_),
  };
  E_TianxiafirstLuckyreward_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_TianxiafirstLuckyreward_descriptor_,
      E_TianxiafirstLuckyreward::default_instance_,
      E_TianxiafirstLuckyreward_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TianxiafirstLuckyreward, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TianxiafirstLuckyreward, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_TianxiafirstLuckyreward));
  Sheet_TianxiafirstLuckyreward_descriptor_ = file->message_type(30);
  static const int Sheet_TianxiafirstLuckyreward_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_TianxiafirstLuckyreward, e_tianxiafirstluckyreward_list_),
  };
  Sheet_TianxiafirstLuckyreward_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_TianxiafirstLuckyreward_descriptor_,
      Sheet_TianxiafirstLuckyreward::default_instance_,
      Sheet_TianxiafirstLuckyreward_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_TianxiafirstLuckyreward, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_TianxiafirstLuckyreward, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_TianxiafirstLuckyreward));
  E_TianxiafirstMatchtimesrewardRewardDesc_descriptor_ = file->message_type(31);
  static const int E_TianxiafirstMatchtimesrewardRewardDesc_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TianxiafirstMatchtimesrewardRewardDesc, m_num_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TianxiafirstMatchtimesrewardRewardDesc, m_id_),
  };
  E_TianxiafirstMatchtimesrewardRewardDesc_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_TianxiafirstMatchtimesrewardRewardDesc_descriptor_,
      E_TianxiafirstMatchtimesrewardRewardDesc::default_instance_,
      E_TianxiafirstMatchtimesrewardRewardDesc_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TianxiafirstMatchtimesrewardRewardDesc, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TianxiafirstMatchtimesrewardRewardDesc, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_TianxiafirstMatchtimesrewardRewardDesc));
  E_TianxiafirstMatchtimesreward_descriptor_ = file->message_type(32);
  static const int E_TianxiafirstMatchtimesreward_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TianxiafirstMatchtimesreward, m_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TianxiafirstMatchtimesreward, m_matchtimes_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TianxiafirstMatchtimesreward, m_reward_),
  };
  E_TianxiafirstMatchtimesreward_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_TianxiafirstMatchtimesreward_descriptor_,
      E_TianxiafirstMatchtimesreward::default_instance_,
      E_TianxiafirstMatchtimesreward_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TianxiafirstMatchtimesreward, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TianxiafirstMatchtimesreward, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_TianxiafirstMatchtimesreward));
  Sheet_TianxiafirstMatchtimesreward_descriptor_ = file->message_type(33);
  static const int Sheet_TianxiafirstMatchtimesreward_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_TianxiafirstMatchtimesreward, e_tianxiafirstmatchtimesreward_list_),
  };
  Sheet_TianxiafirstMatchtimesreward_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_TianxiafirstMatchtimesreward_descriptor_,
      Sheet_TianxiafirstMatchtimesreward::default_instance_,
      Sheet_TianxiafirstMatchtimesreward_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_TianxiafirstMatchtimesreward, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_TianxiafirstMatchtimesreward, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_TianxiafirstMatchtimesreward));
  E_TianxiafirstMatchresultrewardRewardDesc_descriptor_ = file->message_type(34);
  static const int E_TianxiafirstMatchresultrewardRewardDesc_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TianxiafirstMatchresultrewardRewardDesc, m_num_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TianxiafirstMatchresultrewardRewardDesc, m_id_),
  };
  E_TianxiafirstMatchresultrewardRewardDesc_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_TianxiafirstMatchresultrewardRewardDesc_descriptor_,
      E_TianxiafirstMatchresultrewardRewardDesc::default_instance_,
      E_TianxiafirstMatchresultrewardRewardDesc_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TianxiafirstMatchresultrewardRewardDesc, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TianxiafirstMatchresultrewardRewardDesc, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_TianxiafirstMatchresultrewardRewardDesc));
  E_TianxiafirstMatchresultreward_descriptor_ = file->message_type(35);
  static const int E_TianxiafirstMatchresultreward_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TianxiafirstMatchresultreward, m_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TianxiafirstMatchresultreward, m_matchstate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TianxiafirstMatchresultreward, m_result_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TianxiafirstMatchresultreward, m_reward_),
  };
  E_TianxiafirstMatchresultreward_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_TianxiafirstMatchresultreward_descriptor_,
      E_TianxiafirstMatchresultreward::default_instance_,
      E_TianxiafirstMatchresultreward_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TianxiafirstMatchresultreward, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TianxiafirstMatchresultreward, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_TianxiafirstMatchresultreward));
  Sheet_TianxiafirstMatchresultreward_descriptor_ = file->message_type(36);
  static const int Sheet_TianxiafirstMatchresultreward_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_TianxiafirstMatchresultreward, e_tianxiafirstmatchresultreward_list_),
  };
  Sheet_TianxiafirstMatchresultreward_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_TianxiafirstMatchresultreward_descriptor_,
      Sheet_TianxiafirstMatchresultreward::default_instance_,
      Sheet_TianxiafirstMatchresultreward_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_TianxiafirstMatchresultreward, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_TianxiafirstMatchresultreward, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_TianxiafirstMatchresultreward));
  E_TianxiafirstExtraaddattrAttributeDesc_descriptor_ = file->message_type(37);
  static const int E_TianxiafirstExtraaddattrAttributeDesc_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TianxiafirstExtraaddattrAttributeDesc, m_value_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TianxiafirstExtraaddattrAttributeDesc, m_type_),
  };
  E_TianxiafirstExtraaddattrAttributeDesc_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_TianxiafirstExtraaddattrAttributeDesc_descriptor_,
      E_TianxiafirstExtraaddattrAttributeDesc::default_instance_,
      E_TianxiafirstExtraaddattrAttributeDesc_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TianxiafirstExtraaddattrAttributeDesc, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TianxiafirstExtraaddattrAttributeDesc, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_TianxiafirstExtraaddattrAttributeDesc));
  E_TianxiafirstExtraaddattr_descriptor_ = file->message_type(38);
  static const int E_TianxiafirstExtraaddattr_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TianxiafirstExtraaddattr, m_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TianxiafirstExtraaddattr, m_value_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TianxiafirstExtraaddattr, m_attribute_),
  };
  E_TianxiafirstExtraaddattr_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_TianxiafirstExtraaddattr_descriptor_,
      E_TianxiafirstExtraaddattr::default_instance_,
      E_TianxiafirstExtraaddattr_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TianxiafirstExtraaddattr, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TianxiafirstExtraaddattr, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_TianxiafirstExtraaddattr));
  Sheet_TianxiafirstExtraaddattr_descriptor_ = file->message_type(39);
  static const int Sheet_TianxiafirstExtraaddattr_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_TianxiafirstExtraaddattr, e_tianxiafirstextraaddattr_list_),
  };
  Sheet_TianxiafirstExtraaddattr_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_TianxiafirstExtraaddattr_descriptor_,
      Sheet_TianxiafirstExtraaddattr::default_instance_,
      Sheet_TianxiafirstExtraaddattr_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_TianxiafirstExtraaddattr, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_TianxiafirstExtraaddattr, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_TianxiafirstExtraaddattr));
  E_TianxiafirstFirstaddattrAttributeDesc_descriptor_ = file->message_type(40);
  static const int E_TianxiafirstFirstaddattrAttributeDesc_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TianxiafirstFirstaddattrAttributeDesc, m_value_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TianxiafirstFirstaddattrAttributeDesc, m_type_),
  };
  E_TianxiafirstFirstaddattrAttributeDesc_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_TianxiafirstFirstaddattrAttributeDesc_descriptor_,
      E_TianxiafirstFirstaddattrAttributeDesc::default_instance_,
      E_TianxiafirstFirstaddattrAttributeDesc_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TianxiafirstFirstaddattrAttributeDesc, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TianxiafirstFirstaddattrAttributeDesc, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_TianxiafirstFirstaddattrAttributeDesc));
  E_TianxiafirstFirstaddattr_descriptor_ = file->message_type(41);
  static const int E_TianxiafirstFirstaddattr_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TianxiafirstFirstaddattr, m_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TianxiafirstFirstaddattr, m_value_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TianxiafirstFirstaddattr, m_attribute_),
  };
  E_TianxiafirstFirstaddattr_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_TianxiafirstFirstaddattr_descriptor_,
      E_TianxiafirstFirstaddattr::default_instance_,
      E_TianxiafirstFirstaddattr_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TianxiafirstFirstaddattr, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TianxiafirstFirstaddattr, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_TianxiafirstFirstaddattr));
  Sheet_TianxiafirstFirstaddattr_descriptor_ = file->message_type(42);
  static const int Sheet_TianxiafirstFirstaddattr_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_TianxiafirstFirstaddattr, e_tianxiafirstfirstaddattr_list_),
  };
  Sheet_TianxiafirstFirstaddattr_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_TianxiafirstFirstaddattr_descriptor_,
      Sheet_TianxiafirstFirstaddattr::default_instance_,
      Sheet_TianxiafirstFirstaddattr_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_TianxiafirstFirstaddattr, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_TianxiafirstFirstaddattr, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_TianxiafirstFirstaddattr));
  E_TianxiafirstShop_descriptor_ = file->message_type(43);
  static const int E_TianxiafirstShop_offsets_[8] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TianxiafirstShop, m_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TianxiafirstShop, m_itemid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TianxiafirstShop, m_costitem_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TianxiafirstShop, m_costnum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TianxiafirstShop, m_count_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TianxiafirstShop, m_limittype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TianxiafirstShop, m_condition_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TianxiafirstShop, m_conditionparam_),
  };
  E_TianxiafirstShop_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_TianxiafirstShop_descriptor_,
      E_TianxiafirstShop::default_instance_,
      E_TianxiafirstShop_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TianxiafirstShop, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TianxiafirstShop, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_TianxiafirstShop));
  Sheet_TianxiafirstShop_descriptor_ = file->message_type(44);
  static const int Sheet_TianxiafirstShop_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_TianxiafirstShop, e_tianxiafirstshop_list_),
  };
  Sheet_TianxiafirstShop_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_TianxiafirstShop_descriptor_,
      Sheet_TianxiafirstShop::default_instance_,
      Sheet_TianxiafirstShop_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_TianxiafirstShop, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_TianxiafirstShop, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_TianxiafirstShop));
  E_TianxiafirstDanmaku_descriptor_ = file->message_type(45);
  static const int E_TianxiafirstDanmaku_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TianxiafirstDanmaku, m_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TianxiafirstDanmaku, m_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TianxiafirstDanmaku, m_danmaku_),
  };
  E_TianxiafirstDanmaku_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_TianxiafirstDanmaku_descriptor_,
      E_TianxiafirstDanmaku::default_instance_,
      E_TianxiafirstDanmaku_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TianxiafirstDanmaku, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TianxiafirstDanmaku, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_TianxiafirstDanmaku));
  Sheet_TianxiafirstDanmaku_descriptor_ = file->message_type(46);
  static const int Sheet_TianxiafirstDanmaku_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_TianxiafirstDanmaku, e_tianxiafirstdanmaku_list_),
  };
  Sheet_TianxiafirstDanmaku_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_TianxiafirstDanmaku_descriptor_,
      Sheet_TianxiafirstDanmaku::default_instance_,
      Sheet_TianxiafirstDanmaku_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_TianxiafirstDanmaku, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_TianxiafirstDanmaku, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_TianxiafirstDanmaku));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_E_5fTianxiafirst_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_TianxiafirstConstant_descriptor_, &E_TianxiafirstConstant::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_TianxiafirstConstant_descriptor_, &Sheet_TianxiafirstConstant::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_TianxiafirstBattle_descriptor_, &E_TianxiafirstBattle::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_TianxiafirstBattle_descriptor_, &Sheet_TianxiafirstBattle::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_TianxiafirstArtifactAttDesc_descriptor_, &E_TianxiafirstArtifactAttDesc::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_TianxiafirstArtifact_descriptor_, &E_TianxiafirstArtifact::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_TianxiafirstArtifact_descriptor_, &Sheet_TianxiafirstArtifact::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_TianxiafirstStrongTypeDesc_descriptor_, &E_TianxiafirstStrongTypeDesc::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_TianxiafirstStrong_descriptor_, &E_TianxiafirstStrong::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_TianxiafirstStrong_descriptor_, &Sheet_TianxiafirstStrong::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_TianxiafirstStrongitem_descriptor_, &E_TianxiafirstStrongitem::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_TianxiafirstStrongitem_descriptor_, &Sheet_TianxiafirstStrongitem::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_TianxiafirstRefineAttDesc_descriptor_, &E_TianxiafirstRefineAttDesc::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_TianxiafirstRefine_descriptor_, &E_TianxiafirstRefine::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_TianxiafirstRefine_descriptor_, &Sheet_TianxiafirstRefine::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_TianxiafirstSqskill_descriptor_, &E_TianxiafirstSqskill::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_TianxiafirstSqskill_descriptor_, &Sheet_TianxiafirstSqskill::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_TianxiafirstGrade_descriptor_, &E_TianxiafirstGrade::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_TianxiafirstGrade_descriptor_, &Sheet_TianxiafirstGrade::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_TianxiafirstGraderewardRewardDesc_descriptor_, &E_TianxiafirstGraderewardRewardDesc::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_TianxiafirstGradereward_descriptor_, &E_TianxiafirstGradereward::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_TianxiafirstGradereward_descriptor_, &Sheet_TianxiafirstGradereward::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_TianxiafirstRankrewardRewardDesc_descriptor_, &E_TianxiafirstRankrewardRewardDesc::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_TianxiafirstRankreward_descriptor_, &E_TianxiafirstRankreward::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_TianxiafirstRankreward_descriptor_, &Sheet_TianxiafirstRankreward::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_TianxiafirstWatchrewardRewardDesc_descriptor_, &E_TianxiafirstWatchrewardRewardDesc::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_TianxiafirstWatchreward_descriptor_, &E_TianxiafirstWatchreward::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_TianxiafirstWatchreward_descriptor_, &Sheet_TianxiafirstWatchreward::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_TianxiafirstLuckyrewardRewardDesc_descriptor_, &E_TianxiafirstLuckyrewardRewardDesc::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_TianxiafirstLuckyreward_descriptor_, &E_TianxiafirstLuckyreward::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_TianxiafirstLuckyreward_descriptor_, &Sheet_TianxiafirstLuckyreward::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_TianxiafirstMatchtimesrewardRewardDesc_descriptor_, &E_TianxiafirstMatchtimesrewardRewardDesc::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_TianxiafirstMatchtimesreward_descriptor_, &E_TianxiafirstMatchtimesreward::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_TianxiafirstMatchtimesreward_descriptor_, &Sheet_TianxiafirstMatchtimesreward::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_TianxiafirstMatchresultrewardRewardDesc_descriptor_, &E_TianxiafirstMatchresultrewardRewardDesc::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_TianxiafirstMatchresultreward_descriptor_, &E_TianxiafirstMatchresultreward::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_TianxiafirstMatchresultreward_descriptor_, &Sheet_TianxiafirstMatchresultreward::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_TianxiafirstExtraaddattrAttributeDesc_descriptor_, &E_TianxiafirstExtraaddattrAttributeDesc::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_TianxiafirstExtraaddattr_descriptor_, &E_TianxiafirstExtraaddattr::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_TianxiafirstExtraaddattr_descriptor_, &Sheet_TianxiafirstExtraaddattr::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_TianxiafirstFirstaddattrAttributeDesc_descriptor_, &E_TianxiafirstFirstaddattrAttributeDesc::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_TianxiafirstFirstaddattr_descriptor_, &E_TianxiafirstFirstaddattr::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_TianxiafirstFirstaddattr_descriptor_, &Sheet_TianxiafirstFirstaddattr::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_TianxiafirstShop_descriptor_, &E_TianxiafirstShop::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_TianxiafirstShop_descriptor_, &Sheet_TianxiafirstShop::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_TianxiafirstDanmaku_descriptor_, &E_TianxiafirstDanmaku::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_TianxiafirstDanmaku_descriptor_, &Sheet_TianxiafirstDanmaku::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_E_5fTianxiafirst_2eproto() {
  delete E_TianxiafirstConstant::default_instance_;
  delete E_TianxiafirstConstant_reflection_;
  delete Sheet_TianxiafirstConstant::default_instance_;
  delete Sheet_TianxiafirstConstant_reflection_;
  delete E_TianxiafirstBattle::default_instance_;
  delete E_TianxiafirstBattle_reflection_;
  delete Sheet_TianxiafirstBattle::default_instance_;
  delete Sheet_TianxiafirstBattle_reflection_;
  delete E_TianxiafirstArtifactAttDesc::default_instance_;
  delete E_TianxiafirstArtifactAttDesc_reflection_;
  delete E_TianxiafirstArtifact::default_instance_;
  delete E_TianxiafirstArtifact_reflection_;
  delete Sheet_TianxiafirstArtifact::default_instance_;
  delete Sheet_TianxiafirstArtifact_reflection_;
  delete E_TianxiafirstStrongTypeDesc::default_instance_;
  delete E_TianxiafirstStrongTypeDesc_reflection_;
  delete E_TianxiafirstStrong::default_instance_;
  delete E_TianxiafirstStrong_reflection_;
  delete Sheet_TianxiafirstStrong::default_instance_;
  delete Sheet_TianxiafirstStrong_reflection_;
  delete E_TianxiafirstStrongitem::default_instance_;
  delete E_TianxiafirstStrongitem_reflection_;
  delete Sheet_TianxiafirstStrongitem::default_instance_;
  delete Sheet_TianxiafirstStrongitem_reflection_;
  delete E_TianxiafirstRefineAttDesc::default_instance_;
  delete E_TianxiafirstRefineAttDesc_reflection_;
  delete E_TianxiafirstRefine::default_instance_;
  delete E_TianxiafirstRefine_reflection_;
  delete Sheet_TianxiafirstRefine::default_instance_;
  delete Sheet_TianxiafirstRefine_reflection_;
  delete E_TianxiafirstSqskill::default_instance_;
  delete E_TianxiafirstSqskill_reflection_;
  delete Sheet_TianxiafirstSqskill::default_instance_;
  delete Sheet_TianxiafirstSqskill_reflection_;
  delete E_TianxiafirstGrade::default_instance_;
  delete E_TianxiafirstGrade_reflection_;
  delete Sheet_TianxiafirstGrade::default_instance_;
  delete Sheet_TianxiafirstGrade_reflection_;
  delete E_TianxiafirstGraderewardRewardDesc::default_instance_;
  delete E_TianxiafirstGraderewardRewardDesc_reflection_;
  delete E_TianxiafirstGradereward::default_instance_;
  delete E_TianxiafirstGradereward_reflection_;
  delete Sheet_TianxiafirstGradereward::default_instance_;
  delete Sheet_TianxiafirstGradereward_reflection_;
  delete E_TianxiafirstRankrewardRewardDesc::default_instance_;
  delete E_TianxiafirstRankrewardRewardDesc_reflection_;
  delete E_TianxiafirstRankreward::default_instance_;
  delete E_TianxiafirstRankreward_reflection_;
  delete Sheet_TianxiafirstRankreward::default_instance_;
  delete Sheet_TianxiafirstRankreward_reflection_;
  delete E_TianxiafirstWatchrewardRewardDesc::default_instance_;
  delete E_TianxiafirstWatchrewardRewardDesc_reflection_;
  delete E_TianxiafirstWatchreward::default_instance_;
  delete E_TianxiafirstWatchreward_reflection_;
  delete Sheet_TianxiafirstWatchreward::default_instance_;
  delete Sheet_TianxiafirstWatchreward_reflection_;
  delete E_TianxiafirstLuckyrewardRewardDesc::default_instance_;
  delete E_TianxiafirstLuckyrewardRewardDesc_reflection_;
  delete E_TianxiafirstLuckyreward::default_instance_;
  delete E_TianxiafirstLuckyreward_reflection_;
  delete Sheet_TianxiafirstLuckyreward::default_instance_;
  delete Sheet_TianxiafirstLuckyreward_reflection_;
  delete E_TianxiafirstMatchtimesrewardRewardDesc::default_instance_;
  delete E_TianxiafirstMatchtimesrewardRewardDesc_reflection_;
  delete E_TianxiafirstMatchtimesreward::default_instance_;
  delete E_TianxiafirstMatchtimesreward_reflection_;
  delete Sheet_TianxiafirstMatchtimesreward::default_instance_;
  delete Sheet_TianxiafirstMatchtimesreward_reflection_;
  delete E_TianxiafirstMatchresultrewardRewardDesc::default_instance_;
  delete E_TianxiafirstMatchresultrewardRewardDesc_reflection_;
  delete E_TianxiafirstMatchresultreward::default_instance_;
  delete E_TianxiafirstMatchresultreward_reflection_;
  delete Sheet_TianxiafirstMatchresultreward::default_instance_;
  delete Sheet_TianxiafirstMatchresultreward_reflection_;
  delete E_TianxiafirstExtraaddattrAttributeDesc::default_instance_;
  delete E_TianxiafirstExtraaddattrAttributeDesc_reflection_;
  delete E_TianxiafirstExtraaddattr::default_instance_;
  delete E_TianxiafirstExtraaddattr_reflection_;
  delete Sheet_TianxiafirstExtraaddattr::default_instance_;
  delete Sheet_TianxiafirstExtraaddattr_reflection_;
  delete E_TianxiafirstFirstaddattrAttributeDesc::default_instance_;
  delete E_TianxiafirstFirstaddattrAttributeDesc_reflection_;
  delete E_TianxiafirstFirstaddattr::default_instance_;
  delete E_TianxiafirstFirstaddattr_reflection_;
  delete Sheet_TianxiafirstFirstaddattr::default_instance_;
  delete Sheet_TianxiafirstFirstaddattr_reflection_;
  delete E_TianxiafirstShop::default_instance_;
  delete E_TianxiafirstShop_reflection_;
  delete Sheet_TianxiafirstShop::default_instance_;
  delete Sheet_TianxiafirstShop_reflection_;
  delete E_TianxiafirstDanmaku::default_instance_;
  delete E_TianxiafirstDanmaku_reflection_;
  delete Sheet_TianxiafirstDanmaku::default_instance_;
  delete Sheet_TianxiafirstDanmaku_reflection_;
}

void protobuf_AddDesc_E_5fTianxiafirst_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::yd_fieldoptions::protobuf_AddDesc_yd_5ffieldoptions_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\024E_Tianxiafirst.proto\022\010proto_ff\032\025yd_fie"
    "ldoptions.proto\"\206\n\n\026E_TianxiafirstConsta"
    "nt\022\030\n\004m_id\030\001 \001(\005B\n\302\377\024\006\345\272\217\345\217\267\022,\n\014m_teamMe"
    "mber\030\002 \001(\005B\026\302\377\024\022\346\210\230\351\230\237\344\272\272\346\225\260\344\270\212\351\231\220\022*\n\nm_"
    "cedeTime\030\003 \001(\005B\026\302\377\024\022\350\275\254\350\256\251\351\230\237\351\225\277\346\254\241\346\225\260\022,"
    "\n\014m_punishTime\030\004 \001(\005B\026\302\377\024\022\347\246\273\351\230\237\346\203\251\347\275\232\346\227"
    "\266\351\227\264\022+\n\013m_breakTime\030\005 \001(\005B\026\302\377\024\022\346\210\230\351\230\237\350\247\243"
    "\346\225\243\346\227\266\351\227\264\022*\n\nm_unitName\030\006 \001(\005B\026\302\377\024\022\344\277\256\346\224"
    "\271\346\210\230\351\230\237\345\220\215\347\247\260\022*\n\nm_unitCost\030\007 \001(\005B\026\302\377\024\022\344"
    "\277\256\346\224\271\350\212\261\350\264\271\346\225\260\351\207\217\0224\n\013m_entrTimes\030\010 \001(\005B\037"
    "\302\377\024\033\347\247\257\345\210\206\350\265\233\345\217\202\350\265\233\350\216\267\345\245\226\346\254\241\346\225\260\022+\n\013m_mvp"
    "Reward\030\t \001(\005B\026\302\377\024\022\347\247\257\345\210\206\350\265\233mvp\345\245\226\345\212\261\022.\n\013"
    "m_matchTime\030\n \001(\005B\031\302\377\024\025\347\247\257\345\210\206\350\265\233\345\215\225\345\234\272\346\227"
    "\266\351\227\264\0228\n\017m_autoMatchTime\030\013 \001(\005B\037\302\377\024\033\347\247\257\345\210"
    "\206\350\265\233\350\207\252\345\212\250\345\214\271\351\205\215\346\227\266\351\227\264\0226\n\rm_endTipsTime\030"
    "\014 \001(\005B\037\302\377\024\033\347\247\257\345\210\206\350\265\233\347\273\223\346\235\237\346\217\220\347\244\272\346\227\266\351\227\264\022."
    "\n\013m_readyTime\030\r \001(\005B\031\302\377\024\025\344\272\211\345\244\272\350\265\233\345\207\206\345\244\207"
    "\346\227\266\351\227\264\022,\n\014m_summonItem\030\016 \001(\005B\026\302\377\024\022\345\217\254\345\224\244"
    "\345\210\206\350\272\253\350\264\247\345\270\201\0221\n\013m_summonNum\030\017 \001(\005B\034\302\377\024\030\345"
    "\217\254\345\224\244\345\210\206\350\272\253\350\264\247\345\270\201\346\225\260\351\207\217\022&\n\014m_showReward\030"
    "\020 \001(\005B\020\302\377\024\014\345\261\225\347\244\272\345\245\226\345\212\261\022,\n\013m_robotName\030\021"
    " \001(\tB\027\302\377\024\017\346\234\272\345\231\250\344\272\272\345\220\215\347\247\260\220\301\024@\022*\n\nm_mateT"
    "ime\030\022 \001(\005B\026\302\377\024\022\345\214\271\351\205\215\351\242\204\350\256\241\346\227\266\351\227\264\022)\n\tm_a"
    "ddTime\030\023 \001(\005B\026\302\377\024\022\345\214\271\351\205\215\345\242\236\351\207\217\346\227\266\351\227\264\022.\n\017"
    "m_initialNotice\030\024 \001(\tB\025\302\377\024\014\345\210\235\345\247\213\345\205\254\345\221\212\220"
    "\301\024\200\002\022*\n\nm_freeTime\030\025 \001(\005B\026\302\377\024\022\345\205\215\350\264\271\344\276\233\345"
    "\245\211\346\254\241\346\225\260\022,\n\014m_expendItem\030\026 \001(\005B\026\302\377\024\022\344\276\233\345"
    "\245\211\346\266\210\350\200\227\351\201\223\345\205\267\022-\n\nm_addServe\030\027 \001(\005B\031\302\377\024\025"
    "\344\276\233\345\245\211\345\242\236\345\212\240\344\276\233\345\245\211\345\200\274\022/\n\014m_serveTitle\030\030 "
    "\001(\005B\031\302\377\024\025\344\276\233\345\245\211\347\247\260\345\217\267\346\211\200\351\234\200\345\200\274\0228\n\014m_gues"
    "sLimit\030\031 \001(\005B\"\302\377\024\036\345\215\225\344\270\252\346\210\230\345\233\242\346\234\200\345\244\247\347\253\236\347"
    "\214\234\347\247\257\345\210\206\0223\n\017m_exchangeRatio\030\032 \001(\tB\032\302\377\024\022\347"
    "\247\257\345\210\206\345\205\221\346\215\242\346\257\224\344\276\213\220\301\024@\022)\n\007m_group\030\033 \003(\tB\030"
    "\302\377\024\014\345\260\217\347\273\204\351\230\237\344\274\215\210\301\024\004\220\301\024@\"i\n\032Sheet_Tianxi"
    "afirstConstant\022K\n\033E_TianxiafirstConstant"
    "_List\030\001 \003(\0132 .proto_ff.E_TianxiafirstCon"
    "stantB\004\210\301\024\002\"\240\001\n\024E_TianxiafirstBattle\022\030\n\004"
    "m_id\030\001 \001(\005B\n\302\377\024\006\345\272\217\345\217\267\022#\n\tm_gamemod\030\002 \001("
    "\005B\020\302\377\024\014\346\257\224\350\265\233\346\250\241\345\274\217\022%\n\013m_matchTime\030\003 \001(\005"
    "B\020\302\377\024\014\345\215\225\345\234\272\346\227\266\351\227\264\022\"\n\010m_revive\030\004 \001(\005B\020\302\377"
    "\024\014\345\244\215\346\264\273\346\254\241\346\225\260\"c\n\030Sheet_TianxiafirstBatt"
    "le\022G\n\031E_TianxiafirstBattle_List\030\001 \003(\0132\036."
    "proto_ff.E_TianxiafirstBattleB\004\210\301\024\010\"O\n\035E"
    "_TianxiafirstArtifactAttDesc\022\030\n\007m_value\030"
    "\001 \001(\005B\007\302\377\024\003\345\200\274\022\024\n\004m_id\030\002 \001(\005B\006\302\377\024\002id\"\335\001\n"
    "\026E_TianxiafirstArtifact\022\"\n\014m_artifactId\030"
    "\001 \001(\005B\014\302\377\024\010\347\245\236\345\231\250id\022*\n\007m_preId\030\002 \001(\005B\031\302\377"
    "\024\025\346\277\200\346\264\273\346\235\241\344\273\266-\345\211\215\347\275\256id\022%\n\013m_condition\030\003"
    " \001(\005B\020\302\377\024\014\346\277\200\346\264\273\346\235\241\344\273\266\022L\n\005m_att\030\004 \003(\0132\'."
    "proto_ff.E_TianxiafirstArtifactAttDescB\024"
    "\302\377\024\014\346\277\200\346\264\273\345\261\236\346\200\247\210\301\024\005\"i\n\032Sheet_Tianxiafir"
    "stArtifact\022K\n\033E_TianxiafirstArtifact_Lis"
    "t\030\001 \003(\0132 .proto_ff.E_TianxiafirstArtifac"
    "tB\004\210\301\024\004\"P\n\034E_TianxiafirstStrongTypeDesc\022"
    "\032\n\005m_num\030\001 \001(\tB\013\302\377\024\003\345\200\274\220\301\024@\022\024\n\004m_id\030\002 \001("
    "\005B\006\302\377\024\002ID\"\323\001\n\024E_TianxiafirstStrong\022\"\n\014m_"
    "artifactId\030\001 \001(\005B\014\302\377\024\010\347\245\236\345\231\250id\022$\n\nm_stro"
    "ngUp\030\002 \001(\005B\020\302\377\024\014\345\274\272\345\214\226\344\270\212\351\231\220\022)\n\005m_exp\030\003 "
    "\001(\tB\032\302\377\024\022\345\274\272\345\214\226\346\211\200\351\234\200\347\273\217\351\252\214\220\301\024@\022F\n\006m_typ"
    "e\030\004 \003(\0132&.proto_ff.E_TianxiafirstStrongT"
    "ypeDescB\016\302\377\024\006\345\261\236\346\200\247\210\301\024\005\"c\n\030Sheet_Tianxia"
    "firstStrong\022G\n\031E_TianxiafirstStrong_List"
    "\030\001 \003(\0132\036.proto_ff.E_TianxiafirstStrongB\004"
    "\210\301\024\010\"f\n\030E_TianxiafirstStrongitem\022 \n\004m_id"
    "\030\001 \001(\005B\022\302\377\024\016\345\274\272\345\214\226\351\201\223\345\205\267id\022(\n\010m_addExp\030\002"
    " \001(\005B\026\302\377\024\022\345\242\236\345\212\240\345\274\272\345\214\226\347\273\217\351\252\214\"o\n\034Sheet_Ti"
    "anxiafirstStrongitem\022O\n\035E_TianxiafirstSt"
    "rongitem_List\030\001 \003(\0132\".proto_ff.E_Tianxia"
    "firstStrongitemB\004\210\301\024\004\"K\n\033E_TianxiafirstR"
    "efineAttDesc\022\026\n\005m_num\030\001 \001(\005B\007\302\377\024\003\345\200\274\022\024\n\004"
    "m_id\030\002 \001(\005B\006\302\377\024\002id\"\371\002\n\024E_TianxiafirstRef"
    "ine\022\024\n\004m_id\030\001 \001(\005B\006\302\377\024\002id\022\"\n\014m_artifactI"
    "d\030\002 \001(\005B\014\302\377\024\010\347\245\236\345\231\250id\022!\n\007m_stage\030\003 \001(\005B\020"
    "\302\377\024\014\347\262\276\347\202\274\351\230\266\347\272\247\022 \n\006m_star\030\004 \001(\005B\020\302\377\024\014\347\262"
    "\276\347\202\274\346\230\237\346\225\260\022 \n\tm_success\030\005 \001(\005B\r\302\377\024\t\346\210\220\345\212"
    "\237\347\216\207\022\'\n\rm_consumeItem\030\006 \001(\005B\020\302\377\024\014\346\266\210\350\200\227\347"
    "\211\251\345\223\201\022&\n\014m_consumeNum\030\007 \001(\005B\020\302\377\024\014\346\266\210\350\200\227\346"
    "\225\260\351\207\217\022#\n\tm_guarant\030\010 \001(\005B\020\302\377\024\014\344\277\235\345\272\225\346\254\241\346"
    "\225\260\022J\n\005m_att\030\t \003(\0132%.proto_ff.E_Tianxiafi"
    "rstRefineAttDescB\024\302\377\024\014\347\262\276\347\202\274\345\261\236\346\200\247\210\301\024\005\"d"
    "\n\030Sheet_TianxiafirstRefine\022H\n\031E_Tianxiaf"
    "irstRefine_List\030\001 \003(\0132\036.proto_ff.E_Tianx"
    "iafirstRefineB\005\210\301\024\200\001\"\346\001\n\025E_TianxiafirstS"
    "qskill\022\024\n\004m_id\030\001 \001(\005B\006\302\377\024\002id\022\"\n\014m_artifa"
    "ctId\030\002 \001(\005B\014\302\377\024\010\347\245\236\345\231\250id\022\037\n\tm_skillId\030\003 "
    "\001(\005B\014\302\377\024\010\346\212\200\350\203\275id\022!\n\007m_level\030\004 \001(\005B\020\302\377\024\014"
    "\346\212\200\350\203\275\347\255\211\347\272\247\022,\n\013m_condition\030\005 \001(\005B\027\302\377\024\023\346"
    "\277\200\346\264\273/\345\215\207\347\272\247\346\235\241\344\273\266\022!\n\007m_score\030\006 \001(\005B\020\302\377\024"
    "\014\346\212\200\350\203\275\350\257\204\345\210\206\"f\n\031Sheet_TianxiafirstSqski"
    "ll\022I\n\032E_TianxiafirstSqskill_List\030\001 \003(\0132\037"
    ".proto_ff.E_TianxiafirstSqskillB\004\210\301\024@\"\305\003"
    "\n\023E_TianxiafirstGrade\022\032\n\004m_id\030\001 \001(\005B\014\302\377\024"
    "\010\345\224\257\344\270\200id\022!\n\007m_grade\030\002 \001(\005B\020\302\377\024\014\346\256\265\344\275\215\347\261"
    "\273\345\236\213\022$\n\006m_name\030\003 \001(\tB\024\302\377\024\014\346\256\265\344\275\215\345\220\215\347\247\260\220\301"
    "\024@\022 \n\006m_star\030\004 \001(\005B\020\302\377\024\014\346\230\237\346\230\237\346\225\260\351\207\217\022\036\n\007"
    "m_score\030\005 \001(\005B\r\302\377\024\t\347\247\257\345\210\206\345\200\274\022*\n\nm_scoreA"
    "dd\030\006 \001(\005B\026\302\377\024\022\350\203\234\345\234\272\347\247\257\345\210\206\345\245\226\345\212\261\022,\n\014m_sc"
    "oringSub\030\007 \001(\005B\026\302\377\024\022\350\264\237\345\234\272\347\247\257\345\210\206\346\211\243\351\231\244\022 "
    "\n\006m_Time\030\010 \001(\005B\020\302\377\024\014\350\267\250\346\261\240\346\227\266\351\227\264\022+\n\013m_do"
    "wnLimit\030\t \001(\005B\026\302\377\024\022\346\234\200\345\260\217\345\214\271\351\205\215\346\256\265\344\275\215\022)\n"
    "\tm_upLimit\030\n \001(\005B\026\302\377\024\022\346\234\200\345\244\247\345\214\271\351\205\215\346\256\265\344\275\215"
    "\0223\n\020m_substituteTime\030\013 \001(\005B\031\302\377\024\025\346\234\272\345\231\250\344\272"
    "\272\350\241\245\344\275\215\346\227\266\351\227\264\"`\n\027Sheet_TianxiafirstGrade"
    "\022E\n\030E_TianxiafirstGrade_List\030\001 \003(\0132\035.pro"
    "to_ff.E_TianxiafirstGradeB\004\210\301\024 \"V\n#E_Tia"
    "nxiafirstGraderewardRewardDesc\022\031\n\005m_Num\030"
    "\001 \001(\005B\n\302\377\024\006\346\225\260\351\207\217\022\024\n\004m_ID\030\002 \001(\003B\006\302\377\024\002ID\""
    "\327\001\n\031E_TianxiafirstGradereward\022\030\n\004m_id\030\001 "
    "\001(\005B\n\302\377\024\006\345\272\217\345\217\267\022\'\n\nm_scoreMin\030\002 \001(\005B\023\302\377\024"
    "\017\351\234\200\350\246\201\347\232\204\347\247\257\345\210\206\022&\n\014m_matchTimes\030\003 \001(\005B\020"
    "\302\377\024\014\345\217\202\350\265\233\345\234\272\346\254\241\022O\n\010m_reward\030\004 \003(\0132-.pro"
    "to_ff.E_TianxiafirstGraderewardRewardDes"
    "cB\016\302\377\024\006\345\245\226\345\212\261\210\301\024\010\"r\n\035Sheet_TianxiafirstG"
    "radereward\022Q\n\036E_TianxiafirstGradereward_"
    "List\030\001 \003(\0132#.proto_ff.E_TianxiafirstGrad"
    "erewardB\004\210\301\024\010\"U\n\"E_TianxiafirstRankrewar"
    "dRewardDesc\022\031\n\005m_Num\030\001 \001(\005B\n\302\377\024\006\346\225\260\351\207\217\022\024"
    "\n\004m_ID\030\002 \001(\003B\006\302\377\024\002ID\"\240\001\n\030E_TianxiafirstR"
    "ankreward\022\030\n\004m_id\030\001 \001(\005B\n\302\377\024\006\345\272\217\345\217\267\022\032\n\006m"
    "_rank\030\002 \001(\005B\n\302\377\024\006\346\216\222\345\220\215\022N\n\010m_reward\030\003 \003("
    "\0132,.proto_ff.E_TianxiafirstRankrewardRew"
    "ardDescB\016\302\377\024\006\345\245\226\345\212\261\210\301\024\010\"o\n\034Sheet_Tianxia"
    "firstRankreward\022O\n\035E_TianxiafirstRankrew"
    "ard_List\030\001 \003(\0132\".proto_ff.E_Tianxiafirst"
    "RankrewardB\004\210\301\024 \"V\n#E_TianxiafirstWatchr"
    "ewardRewardDesc\022\031\n\005m_Num\030\001 \001(\005B\n\302\377\024\006\346\225\260\351"
    "\207\217\022\024\n\004m_ID\030\002 \001(\003B\006\302\377\024\002ID\"\256\001\n\031E_Tianxiafi"
    "rstWatchreward\022\030\n\004m_id\030\001 \001(\005B\n\302\377\024\006\345\272\217\345\217\267"
    "\022&\n\014m_matchState\030\002 \001(\005B\020\302\377\024\014\346\257\224\350\265\233\351\230\266\346\256\265"
    "\022O\n\010m_reward\030\003 \003(\0132-.proto_ff.E_Tianxiaf"
    "irstWatchrewardRewardDescB\016\302\377\024\006\345\245\226\345\212\261\210\301\024"
    "\010\"r\n\035Sheet_TianxiafirstWatchreward\022Q\n\036E_"
    "TianxiafirstWatchreward_List\030\001 \003(\0132#.pro"
    "to_ff.E_TianxiafirstWatchrewardB\004\210\301\024\010\"V\n"
    "#E_TianxiafirstLuckyrewardRewardDesc\022\031\n\005"
    "m_Num\030\001 \001(\005B\n\302\377\024\006\346\225\260\351\207\217\022\024\n\004m_ID\030\002 \001(\003B\006\302"
    "\377\024\002ID\"\332\001\n\031E_TianxiafirstLuckyreward\022\030\n\004m"
    "_id\030\001 \001(\005B\n\302\377\024\006\345\272\217\345\217\267\022(\n\010m_numMin\030\002 \001(\005B"
    "\026\302\377\024\022\346\234\200\345\260\217\346\212\275\345\245\226\344\272\272\346\225\260\022(\n\010m_numMax\030\003 \001("
    "\005B\026\302\377\024\022\346\234\200\345\244\247\346\212\275\345\245\226\344\272\272\346\225\260\022O\n\010m_reward\030\004 "
    "\003(\0132-.proto_ff.E_TianxiafirstLuckyreward"
    "RewardDescB\016\302\377\024\006\345\245\226\345\212\261\210\301\024\010\"r\n\035Sheet_Tian"
    "xiafirstLuckyreward\022Q\n\036E_TianxiafirstLuc"
    "kyreward_List\030\001 \003(\0132#.proto_ff.E_Tianxia"
    "firstLuckyrewardB\004\210\301\024\010\"[\n(E_Tianxiafirst"
    "MatchtimesrewardRewardDesc\022\031\n\005m_Num\030\001 \001("
    "\005B\n\302\377\024\006\346\225\260\351\207\217\022\024\n\004m_ID\030\002 \001(\003B\006\302\377\024\002ID\"\276\001\n\036"
    "E_TianxiafirstMatchtimesreward\022\030\n\004m_id\030\001"
    " \001(\005B\n\302\377\024\006\345\272\217\345\217\267\022,\n\014m_matchTimes\030\002 \001(\005B\026"
    "\302\377\024\022\345\217\202\344\270\216\346\257\224\350\265\233\346\254\241\346\225\260\022T\n\010m_reward\030\003 \003(\013"
    "22.proto_ff.E_TianxiafirstMatchtimesrewa"
    "rdRewardDescB\016\302\377\024\006\345\245\226\345\212\261\210\301\024\010\"\201\001\n\"Sheet_T"
    "ianxiafirstMatchtimesreward\022[\n#E_Tianxia"
    "firstMatchtimesreward_List\030\001 \003(\0132(.proto"
    "_ff.E_TianxiafirstMatchtimesrewardB\004\210\301\024\010"
    "\"\\\n)E_TianxiafirstMatchresultrewardRewar"
    "dDesc\022\031\n\005m_Num\030\001 \001(\005B\n\302\377\024\006\346\225\260\351\207\217\022\024\n\004m_ID"
    "\030\002 \001(\003B\006\302\377\024\002ID\"\336\001\n\037E_TianxiafirstMatchre"
    "sultreward\022\030\n\004m_id\030\001 \001(\005B\n\302\377\024\006\345\272\217\345\217\267\022&\n\014"
    "m_matchState\030\002 \001(\005B\020\302\377\024\014\346\257\224\350\265\233\351\230\266\346\256\265\022\"\n\010"
    "m_result\030\003 \001(\005B\020\302\377\024\014\346\257\224\350\265\233\347\273\223\346\236\234\022U\n\010m_re"
    "ward\030\004 \003(\01323.proto_ff.E_TianxiafirstMatc"
    "hresultrewardRewardDescB\016\302\377\024\006\345\245\226\345\212\261\210\301\024\010\""
    "\204\001\n#Sheet_TianxiafirstMatchresultreward\022"
    "]\n$E_TianxiafirstMatchresultreward_List\030"
    "\001 \003(\0132).proto_ff.E_TianxiafirstMatchresu"
    "ltrewardB\004\210\301\024\010\"[\n\'E_TianxiafirstExtraadd"
    "attrAttributeDesc\022\030\n\007m_value\030\001 \001(\005B\007\302\377\024\003"
    "\345\200\274\022\026\n\006m_type\030\002 \001(\005B\006\302\377\024\002ID\"\256\001\n\032E_Tianxi"
    "afirstExtraaddattr\022\030\n\004m_id\030\001 \001(\005B\n\302\377\024\006\345\272"
    "\217\345\217\267\022\036\n\007m_value\030\002 \001(\005B\r\302\377\024\t\344\276\233\345\245\211\345\200\274\022V\n\013"
    "m_attribute\030\003 \003(\01321.proto_ff.E_Tianxiafi"
    "rstExtraaddattrAttributeDescB\016\302\377\024\006\345\261\236\346\200\247"
    "\210\301\024\006\"u\n\036Sheet_TianxiafirstExtraaddattr\022S"
    "\n\037E_TianxiafirstExtraaddattr_List\030\001 \003(\0132"
    "$.proto_ff.E_TianxiafirstExtraaddattrB\004\210"
    "\301\024@\"[\n\'E_TianxiafirstFirstaddattrAttribu"
    "teDesc\022\030\n\007m_value\030\001 \001(\005B\007\302\377\024\003\345\200\274\022\026\n\006m_ty"
    "pe\030\002 \001(\005B\006\302\377\024\002ID\"\256\001\n\032E_TianxiafirstFirst"
    "addattr\022\030\n\004m_id\030\001 \001(\005B\n\302\377\024\006\345\272\217\345\217\267\022\036\n\007m_v"
    "alue\030\002 \001(\005B\r\302\377\024\t\344\276\233\345\245\211\345\200\274\022V\n\013m_attribute"
    "\030\003 \003(\01321.proto_ff.E_TianxiafirstFirstadd"
    "attrAttributeDescB\016\302\377\024\006\345\261\236\346\200\247\210\301\024\006\"u\n\036She"
    "et_TianxiafirstFirstaddattr\022S\n\037E_Tianxia"
    "firstFirstaddattr_List\030\001 \003(\0132$.proto_ff."
    "E_TianxiafirstFirstaddattrB\004\210\301\024\002\"\306\002\n\022E_T"
    "ianxiafirstShop\022\024\n\004m_id\030\001 \001(\005B\006\302\377\024\002id\022\036\n"
    "\010m_itemId\030\002 \001(\005B\014\302\377\024\010\347\211\251\345\223\201id\022,\n\nm_costI"
    "tem\030\003 \001(\005B\030\302\377\024\024\350\264\255\344\271\260\346\266\210\350\200\227\347\211\251\345\223\201id\022)\n\tm"
    "_costNum\030\004 \001(\005B\026\302\377\024\022\350\264\255\344\271\260\346\266\210\350\200\227\346\225\260\351\207\217\022!"
    "\n\007m_count\030\005 \001(\005B\020\302\377\024\014\351\231\220\350\264\255\346\225\260\351\207\217\022%\n\013m_l"
    "imitType\030\006 \001(\005B\020\302\377\024\014\351\231\220\350\264\255\347\261\273\345\236\213\022%\n\013m_co"
    "ndition\030\007 \001(\005B\020\302\377\024\014\350\264\255\344\271\260\346\235\241\344\273\266\0220\n\020m_con"
    "ditionParam\030\010 \001(\005B\026\302\377\024\022\350\264\255\344\271\260\346\235\241\344\273\266\345\217\202\346\225"
    "\260\"]\n\026Sheet_TianxiafirstShop\022C\n\027E_Tianxia"
    "firstShop_List\030\001 \003(\0132\034.proto_ff.E_Tianxi"
    "afirstShopB\004\210\301\024\020\"r\n\025E_TianxiafirstDanmak"
    "u\022\024\n\004m_id\030\001 \001(\005B\006\302\377\024\002id\022\032\n\006m_type\030\002 \001(\005B"
    "\n\302\377\024\006\347\261\273\345\236\213\022\'\n\tm_danmaku\030\003 \001(\tB\024\302\377\024\014\345\274\271\345"
    "\271\225\345\206\205\345\256\271\220\301\024@\"f\n\031Sheet_TianxiafirstDanmak"
    "u\022I\n\032E_TianxiafirstDanmaku_List\030\001 \003(\0132\037."
    "proto_ff.E_TianxiafirstDanmakuB\004\210\301\024\020", 8076);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "E_Tianxiafirst.proto", &protobuf_RegisterTypes);
  E_TianxiafirstConstant::default_instance_ = new E_TianxiafirstConstant();
  Sheet_TianxiafirstConstant::default_instance_ = new Sheet_TianxiafirstConstant();
  E_TianxiafirstBattle::default_instance_ = new E_TianxiafirstBattle();
  Sheet_TianxiafirstBattle::default_instance_ = new Sheet_TianxiafirstBattle();
  E_TianxiafirstArtifactAttDesc::default_instance_ = new E_TianxiafirstArtifactAttDesc();
  E_TianxiafirstArtifact::default_instance_ = new E_TianxiafirstArtifact();
  Sheet_TianxiafirstArtifact::default_instance_ = new Sheet_TianxiafirstArtifact();
  E_TianxiafirstStrongTypeDesc::default_instance_ = new E_TianxiafirstStrongTypeDesc();
  E_TianxiafirstStrong::default_instance_ = new E_TianxiafirstStrong();
  Sheet_TianxiafirstStrong::default_instance_ = new Sheet_TianxiafirstStrong();
  E_TianxiafirstStrongitem::default_instance_ = new E_TianxiafirstStrongitem();
  Sheet_TianxiafirstStrongitem::default_instance_ = new Sheet_TianxiafirstStrongitem();
  E_TianxiafirstRefineAttDesc::default_instance_ = new E_TianxiafirstRefineAttDesc();
  E_TianxiafirstRefine::default_instance_ = new E_TianxiafirstRefine();
  Sheet_TianxiafirstRefine::default_instance_ = new Sheet_TianxiafirstRefine();
  E_TianxiafirstSqskill::default_instance_ = new E_TianxiafirstSqskill();
  Sheet_TianxiafirstSqskill::default_instance_ = new Sheet_TianxiafirstSqskill();
  E_TianxiafirstGrade::default_instance_ = new E_TianxiafirstGrade();
  Sheet_TianxiafirstGrade::default_instance_ = new Sheet_TianxiafirstGrade();
  E_TianxiafirstGraderewardRewardDesc::default_instance_ = new E_TianxiafirstGraderewardRewardDesc();
  E_TianxiafirstGradereward::default_instance_ = new E_TianxiafirstGradereward();
  Sheet_TianxiafirstGradereward::default_instance_ = new Sheet_TianxiafirstGradereward();
  E_TianxiafirstRankrewardRewardDesc::default_instance_ = new E_TianxiafirstRankrewardRewardDesc();
  E_TianxiafirstRankreward::default_instance_ = new E_TianxiafirstRankreward();
  Sheet_TianxiafirstRankreward::default_instance_ = new Sheet_TianxiafirstRankreward();
  E_TianxiafirstWatchrewardRewardDesc::default_instance_ = new E_TianxiafirstWatchrewardRewardDesc();
  E_TianxiafirstWatchreward::default_instance_ = new E_TianxiafirstWatchreward();
  Sheet_TianxiafirstWatchreward::default_instance_ = new Sheet_TianxiafirstWatchreward();
  E_TianxiafirstLuckyrewardRewardDesc::default_instance_ = new E_TianxiafirstLuckyrewardRewardDesc();
  E_TianxiafirstLuckyreward::default_instance_ = new E_TianxiafirstLuckyreward();
  Sheet_TianxiafirstLuckyreward::default_instance_ = new Sheet_TianxiafirstLuckyreward();
  E_TianxiafirstMatchtimesrewardRewardDesc::default_instance_ = new E_TianxiafirstMatchtimesrewardRewardDesc();
  E_TianxiafirstMatchtimesreward::default_instance_ = new E_TianxiafirstMatchtimesreward();
  Sheet_TianxiafirstMatchtimesreward::default_instance_ = new Sheet_TianxiafirstMatchtimesreward();
  E_TianxiafirstMatchresultrewardRewardDesc::default_instance_ = new E_TianxiafirstMatchresultrewardRewardDesc();
  E_TianxiafirstMatchresultreward::default_instance_ = new E_TianxiafirstMatchresultreward();
  Sheet_TianxiafirstMatchresultreward::default_instance_ = new Sheet_TianxiafirstMatchresultreward();
  E_TianxiafirstExtraaddattrAttributeDesc::default_instance_ = new E_TianxiafirstExtraaddattrAttributeDesc();
  E_TianxiafirstExtraaddattr::default_instance_ = new E_TianxiafirstExtraaddattr();
  Sheet_TianxiafirstExtraaddattr::default_instance_ = new Sheet_TianxiafirstExtraaddattr();
  E_TianxiafirstFirstaddattrAttributeDesc::default_instance_ = new E_TianxiafirstFirstaddattrAttributeDesc();
  E_TianxiafirstFirstaddattr::default_instance_ = new E_TianxiafirstFirstaddattr();
  Sheet_TianxiafirstFirstaddattr::default_instance_ = new Sheet_TianxiafirstFirstaddattr();
  E_TianxiafirstShop::default_instance_ = new E_TianxiafirstShop();
  Sheet_TianxiafirstShop::default_instance_ = new Sheet_TianxiafirstShop();
  E_TianxiafirstDanmaku::default_instance_ = new E_TianxiafirstDanmaku();
  Sheet_TianxiafirstDanmaku::default_instance_ = new Sheet_TianxiafirstDanmaku();
  E_TianxiafirstConstant::default_instance_->InitAsDefaultInstance();
  Sheet_TianxiafirstConstant::default_instance_->InitAsDefaultInstance();
  E_TianxiafirstBattle::default_instance_->InitAsDefaultInstance();
  Sheet_TianxiafirstBattle::default_instance_->InitAsDefaultInstance();
  E_TianxiafirstArtifactAttDesc::default_instance_->InitAsDefaultInstance();
  E_TianxiafirstArtifact::default_instance_->InitAsDefaultInstance();
  Sheet_TianxiafirstArtifact::default_instance_->InitAsDefaultInstance();
  E_TianxiafirstStrongTypeDesc::default_instance_->InitAsDefaultInstance();
  E_TianxiafirstStrong::default_instance_->InitAsDefaultInstance();
  Sheet_TianxiafirstStrong::default_instance_->InitAsDefaultInstance();
  E_TianxiafirstStrongitem::default_instance_->InitAsDefaultInstance();
  Sheet_TianxiafirstStrongitem::default_instance_->InitAsDefaultInstance();
  E_TianxiafirstRefineAttDesc::default_instance_->InitAsDefaultInstance();
  E_TianxiafirstRefine::default_instance_->InitAsDefaultInstance();
  Sheet_TianxiafirstRefine::default_instance_->InitAsDefaultInstance();
  E_TianxiafirstSqskill::default_instance_->InitAsDefaultInstance();
  Sheet_TianxiafirstSqskill::default_instance_->InitAsDefaultInstance();
  E_TianxiafirstGrade::default_instance_->InitAsDefaultInstance();
  Sheet_TianxiafirstGrade::default_instance_->InitAsDefaultInstance();
  E_TianxiafirstGraderewardRewardDesc::default_instance_->InitAsDefaultInstance();
  E_TianxiafirstGradereward::default_instance_->InitAsDefaultInstance();
  Sheet_TianxiafirstGradereward::default_instance_->InitAsDefaultInstance();
  E_TianxiafirstRankrewardRewardDesc::default_instance_->InitAsDefaultInstance();
  E_TianxiafirstRankreward::default_instance_->InitAsDefaultInstance();
  Sheet_TianxiafirstRankreward::default_instance_->InitAsDefaultInstance();
  E_TianxiafirstWatchrewardRewardDesc::default_instance_->InitAsDefaultInstance();
  E_TianxiafirstWatchreward::default_instance_->InitAsDefaultInstance();
  Sheet_TianxiafirstWatchreward::default_instance_->InitAsDefaultInstance();
  E_TianxiafirstLuckyrewardRewardDesc::default_instance_->InitAsDefaultInstance();
  E_TianxiafirstLuckyreward::default_instance_->InitAsDefaultInstance();
  Sheet_TianxiafirstLuckyreward::default_instance_->InitAsDefaultInstance();
  E_TianxiafirstMatchtimesrewardRewardDesc::default_instance_->InitAsDefaultInstance();
  E_TianxiafirstMatchtimesreward::default_instance_->InitAsDefaultInstance();
  Sheet_TianxiafirstMatchtimesreward::default_instance_->InitAsDefaultInstance();
  E_TianxiafirstMatchresultrewardRewardDesc::default_instance_->InitAsDefaultInstance();
  E_TianxiafirstMatchresultreward::default_instance_->InitAsDefaultInstance();
  Sheet_TianxiafirstMatchresultreward::default_instance_->InitAsDefaultInstance();
  E_TianxiafirstExtraaddattrAttributeDesc::default_instance_->InitAsDefaultInstance();
  E_TianxiafirstExtraaddattr::default_instance_->InitAsDefaultInstance();
  Sheet_TianxiafirstExtraaddattr::default_instance_->InitAsDefaultInstance();
  E_TianxiafirstFirstaddattrAttributeDesc::default_instance_->InitAsDefaultInstance();
  E_TianxiafirstFirstaddattr::default_instance_->InitAsDefaultInstance();
  Sheet_TianxiafirstFirstaddattr::default_instance_->InitAsDefaultInstance();
  E_TianxiafirstShop::default_instance_->InitAsDefaultInstance();
  Sheet_TianxiafirstShop::default_instance_->InitAsDefaultInstance();
  E_TianxiafirstDanmaku::default_instance_->InitAsDefaultInstance();
  Sheet_TianxiafirstDanmaku::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_E_5fTianxiafirst_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_E_5fTianxiafirst_2eproto {
  StaticDescriptorInitializer_E_5fTianxiafirst_2eproto() {
    protobuf_AddDesc_E_5fTianxiafirst_2eproto();
  }
} static_descriptor_initializer_E_5fTianxiafirst_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int E_TianxiafirstConstant::kMIdFieldNumber;
const int E_TianxiafirstConstant::kMTeamMemberFieldNumber;
const int E_TianxiafirstConstant::kMCedeTimeFieldNumber;
const int E_TianxiafirstConstant::kMPunishTimeFieldNumber;
const int E_TianxiafirstConstant::kMBreakTimeFieldNumber;
const int E_TianxiafirstConstant::kMUnitNameFieldNumber;
const int E_TianxiafirstConstant::kMUnitCostFieldNumber;
const int E_TianxiafirstConstant::kMEntrTimesFieldNumber;
const int E_TianxiafirstConstant::kMMvpRewardFieldNumber;
const int E_TianxiafirstConstant::kMMatchTimeFieldNumber;
const int E_TianxiafirstConstant::kMAutoMatchTimeFieldNumber;
const int E_TianxiafirstConstant::kMEndTipsTimeFieldNumber;
const int E_TianxiafirstConstant::kMReadyTimeFieldNumber;
const int E_TianxiafirstConstant::kMSummonItemFieldNumber;
const int E_TianxiafirstConstant::kMSummonNumFieldNumber;
const int E_TianxiafirstConstant::kMShowRewardFieldNumber;
const int E_TianxiafirstConstant::kMRobotNameFieldNumber;
const int E_TianxiafirstConstant::kMMateTimeFieldNumber;
const int E_TianxiafirstConstant::kMAddTimeFieldNumber;
const int E_TianxiafirstConstant::kMInitialNoticeFieldNumber;
const int E_TianxiafirstConstant::kMFreeTimeFieldNumber;
const int E_TianxiafirstConstant::kMExpendItemFieldNumber;
const int E_TianxiafirstConstant::kMAddServeFieldNumber;
const int E_TianxiafirstConstant::kMServeTitleFieldNumber;
const int E_TianxiafirstConstant::kMGuessLimitFieldNumber;
const int E_TianxiafirstConstant::kMExchangeRatioFieldNumber;
const int E_TianxiafirstConstant::kMGroupFieldNumber;
#endif  // !_MSC_VER

E_TianxiafirstConstant::E_TianxiafirstConstant()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_TianxiafirstConstant::InitAsDefaultInstance() {
}

E_TianxiafirstConstant::E_TianxiafirstConstant(const E_TianxiafirstConstant& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_TianxiafirstConstant::SharedCtor() {
  _cached_size_ = 0;
  m_id_ = 0;
  m_teammember_ = 0;
  m_cedetime_ = 0;
  m_punishtime_ = 0;
  m_breaktime_ = 0;
  m_unitname_ = 0;
  m_unitcost_ = 0;
  m_entrtimes_ = 0;
  m_mvpreward_ = 0;
  m_matchtime_ = 0;
  m_automatchtime_ = 0;
  m_endtipstime_ = 0;
  m_readytime_ = 0;
  m_summonitem_ = 0;
  m_summonnum_ = 0;
  m_showreward_ = 0;
  m_robotname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  m_matetime_ = 0;
  m_addtime_ = 0;
  m_initialnotice_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  m_freetime_ = 0;
  m_expenditem_ = 0;
  m_addserve_ = 0;
  m_servetitle_ = 0;
  m_guesslimit_ = 0;
  m_exchangeratio_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_TianxiafirstConstant::~E_TianxiafirstConstant() {
  SharedDtor();
}

void E_TianxiafirstConstant::SharedDtor() {
  if (m_robotname_ != &::google::protobuf::internal::kEmptyString) {
    delete m_robotname_;
  }
  if (m_initialnotice_ != &::google::protobuf::internal::kEmptyString) {
    delete m_initialnotice_;
  }
  if (m_exchangeratio_ != &::google::protobuf::internal::kEmptyString) {
    delete m_exchangeratio_;
  }
  if (this != default_instance_) {
  }
}

void E_TianxiafirstConstant::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_TianxiafirstConstant::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_TianxiafirstConstant_descriptor_;
}

const E_TianxiafirstConstant& E_TianxiafirstConstant::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fTianxiafirst_2eproto();
  return *default_instance_;
}

E_TianxiafirstConstant* E_TianxiafirstConstant::default_instance_ = NULL;

E_TianxiafirstConstant* E_TianxiafirstConstant::New() const {
  return new E_TianxiafirstConstant;
}

void E_TianxiafirstConstant::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_id_ = 0;
    m_teammember_ = 0;
    m_cedetime_ = 0;
    m_punishtime_ = 0;
    m_breaktime_ = 0;
    m_unitname_ = 0;
    m_unitcost_ = 0;
    m_entrtimes_ = 0;
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    m_mvpreward_ = 0;
    m_matchtime_ = 0;
    m_automatchtime_ = 0;
    m_endtipstime_ = 0;
    m_readytime_ = 0;
    m_summonitem_ = 0;
    m_summonnum_ = 0;
    m_showreward_ = 0;
  }
  if (_has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    if (has_m_robotname()) {
      if (m_robotname_ != &::google::protobuf::internal::kEmptyString) {
        m_robotname_->clear();
      }
    }
    m_matetime_ = 0;
    m_addtime_ = 0;
    if (has_m_initialnotice()) {
      if (m_initialnotice_ != &::google::protobuf::internal::kEmptyString) {
        m_initialnotice_->clear();
      }
    }
    m_freetime_ = 0;
    m_expenditem_ = 0;
    m_addserve_ = 0;
    m_servetitle_ = 0;
  }
  if (_has_bits_[24 / 32] & (0xffu << (24 % 32))) {
    m_guesslimit_ = 0;
    if (has_m_exchangeratio()) {
      if (m_exchangeratio_ != &::google::protobuf::internal::kEmptyString) {
        m_exchangeratio_->clear();
      }
    }
  }
  m_group_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_TianxiafirstConstant::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_id_)));
          set_has_m_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_teamMember;
        break;
      }

      // optional int32 m_teamMember = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_teamMember:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_teammember_)));
          set_has_m_teammember();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_m_cedeTime;
        break;
      }

      // optional int32 m_cedeTime = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_cedeTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_cedetime_)));
          set_has_m_cedetime();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_m_punishTime;
        break;
      }

      // optional int32 m_punishTime = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_punishTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_punishtime_)));
          set_has_m_punishtime();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_m_breakTime;
        break;
      }

      // optional int32 m_breakTime = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_breakTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_breaktime_)));
          set_has_m_breaktime();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_m_unitName;
        break;
      }

      // optional int32 m_unitName = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_unitName:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_unitname_)));
          set_has_m_unitname();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_m_unitCost;
        break;
      }

      // optional int32 m_unitCost = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_unitCost:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_unitcost_)));
          set_has_m_unitcost();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(64)) goto parse_m_entrTimes;
        break;
      }

      // optional int32 m_entrTimes = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_entrTimes:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_entrtimes_)));
          set_has_m_entrtimes();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(72)) goto parse_m_mvpReward;
        break;
      }

      // optional int32 m_mvpReward = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_mvpReward:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_mvpreward_)));
          set_has_m_mvpreward();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(80)) goto parse_m_matchTime;
        break;
      }

      // optional int32 m_matchTime = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_matchTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_matchtime_)));
          set_has_m_matchtime();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(88)) goto parse_m_autoMatchTime;
        break;
      }

      // optional int32 m_autoMatchTime = 11;
      case 11: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_autoMatchTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_automatchtime_)));
          set_has_m_automatchtime();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(96)) goto parse_m_endTipsTime;
        break;
      }

      // optional int32 m_endTipsTime = 12;
      case 12: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_endTipsTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_endtipstime_)));
          set_has_m_endtipstime();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(104)) goto parse_m_readyTime;
        break;
      }

      // optional int32 m_readyTime = 13;
      case 13: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_readyTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_readytime_)));
          set_has_m_readytime();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(112)) goto parse_m_summonItem;
        break;
      }

      // optional int32 m_summonItem = 14;
      case 14: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_summonItem:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_summonitem_)));
          set_has_m_summonitem();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(120)) goto parse_m_summonNum;
        break;
      }

      // optional int32 m_summonNum = 15;
      case 15: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_summonNum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_summonnum_)));
          set_has_m_summonnum();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(128)) goto parse_m_showReward;
        break;
      }

      // optional int32 m_showReward = 16;
      case 16: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_showReward:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_showreward_)));
          set_has_m_showreward();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(138)) goto parse_m_robotName;
        break;
      }

      // optional string m_robotName = 17;
      case 17: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_robotName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_m_robotname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->m_robotname().data(), this->m_robotname().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(144)) goto parse_m_mateTime;
        break;
      }

      // optional int32 m_mateTime = 18;
      case 18: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_mateTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_matetime_)));
          set_has_m_matetime();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(152)) goto parse_m_addTime;
        break;
      }

      // optional int32 m_addTime = 19;
      case 19: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_addTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_addtime_)));
          set_has_m_addtime();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(162)) goto parse_m_initialNotice;
        break;
      }

      // optional string m_initialNotice = 20;
      case 20: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_initialNotice:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_m_initialnotice()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->m_initialnotice().data(), this->m_initialnotice().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(168)) goto parse_m_freeTime;
        break;
      }

      // optional int32 m_freeTime = 21;
      case 21: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_freeTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_freetime_)));
          set_has_m_freetime();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(176)) goto parse_m_expendItem;
        break;
      }

      // optional int32 m_expendItem = 22;
      case 22: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_expendItem:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_expenditem_)));
          set_has_m_expenditem();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(184)) goto parse_m_addServe;
        break;
      }

      // optional int32 m_addServe = 23;
      case 23: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_addServe:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_addserve_)));
          set_has_m_addserve();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(192)) goto parse_m_serveTitle;
        break;
      }

      // optional int32 m_serveTitle = 24;
      case 24: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_serveTitle:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_servetitle_)));
          set_has_m_servetitle();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(200)) goto parse_m_guessLimit;
        break;
      }

      // optional int32 m_guessLimit = 25;
      case 25: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_guessLimit:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_guesslimit_)));
          set_has_m_guesslimit();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(210)) goto parse_m_exchangeRatio;
        break;
      }

      // optional string m_exchangeRatio = 26;
      case 26: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_exchangeRatio:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_m_exchangeratio()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->m_exchangeratio().data(), this->m_exchangeratio().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(218)) goto parse_m_group;
        break;
      }

      // repeated string m_group = 27;
      case 27: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_group:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_m_group()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->m_group(this->m_group_size() - 1).data(),
            this->m_group(this->m_group_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(218)) goto parse_m_group;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_TianxiafirstConstant::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_id(), output);
  }

  // optional int32 m_teamMember = 2;
  if (has_m_teammember()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_teammember(), output);
  }

  // optional int32 m_cedeTime = 3;
  if (has_m_cedetime()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->m_cedetime(), output);
  }

  // optional int32 m_punishTime = 4;
  if (has_m_punishtime()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->m_punishtime(), output);
  }

  // optional int32 m_breakTime = 5;
  if (has_m_breaktime()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->m_breaktime(), output);
  }

  // optional int32 m_unitName = 6;
  if (has_m_unitname()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->m_unitname(), output);
  }

  // optional int32 m_unitCost = 7;
  if (has_m_unitcost()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->m_unitcost(), output);
  }

  // optional int32 m_entrTimes = 8;
  if (has_m_entrtimes()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->m_entrtimes(), output);
  }

  // optional int32 m_mvpReward = 9;
  if (has_m_mvpreward()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->m_mvpreward(), output);
  }

  // optional int32 m_matchTime = 10;
  if (has_m_matchtime()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->m_matchtime(), output);
  }

  // optional int32 m_autoMatchTime = 11;
  if (has_m_automatchtime()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->m_automatchtime(), output);
  }

  // optional int32 m_endTipsTime = 12;
  if (has_m_endtipstime()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(12, this->m_endtipstime(), output);
  }

  // optional int32 m_readyTime = 13;
  if (has_m_readytime()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(13, this->m_readytime(), output);
  }

  // optional int32 m_summonItem = 14;
  if (has_m_summonitem()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(14, this->m_summonitem(), output);
  }

  // optional int32 m_summonNum = 15;
  if (has_m_summonnum()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(15, this->m_summonnum(), output);
  }

  // optional int32 m_showReward = 16;
  if (has_m_showreward()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(16, this->m_showreward(), output);
  }

  // optional string m_robotName = 17;
  if (has_m_robotname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_robotname().data(), this->m_robotname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      17, this->m_robotname(), output);
  }

  // optional int32 m_mateTime = 18;
  if (has_m_matetime()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(18, this->m_matetime(), output);
  }

  // optional int32 m_addTime = 19;
  if (has_m_addtime()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(19, this->m_addtime(), output);
  }

  // optional string m_initialNotice = 20;
  if (has_m_initialnotice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_initialnotice().data(), this->m_initialnotice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      20, this->m_initialnotice(), output);
  }

  // optional int32 m_freeTime = 21;
  if (has_m_freetime()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(21, this->m_freetime(), output);
  }

  // optional int32 m_expendItem = 22;
  if (has_m_expenditem()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(22, this->m_expenditem(), output);
  }

  // optional int32 m_addServe = 23;
  if (has_m_addserve()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(23, this->m_addserve(), output);
  }

  // optional int32 m_serveTitle = 24;
  if (has_m_servetitle()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(24, this->m_servetitle(), output);
  }

  // optional int32 m_guessLimit = 25;
  if (has_m_guesslimit()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(25, this->m_guesslimit(), output);
  }

  // optional string m_exchangeRatio = 26;
  if (has_m_exchangeratio()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_exchangeratio().data(), this->m_exchangeratio().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      26, this->m_exchangeratio(), output);
  }

  // repeated string m_group = 27;
  for (int i = 0; i < this->m_group_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8String(
    this->m_group(i).data(), this->m_group(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      27, this->m_group(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_TianxiafirstConstant::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_id(), target);
  }

  // optional int32 m_teamMember = 2;
  if (has_m_teammember()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_teammember(), target);
  }

  // optional int32 m_cedeTime = 3;
  if (has_m_cedetime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->m_cedetime(), target);
  }

  // optional int32 m_punishTime = 4;
  if (has_m_punishtime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->m_punishtime(), target);
  }

  // optional int32 m_breakTime = 5;
  if (has_m_breaktime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->m_breaktime(), target);
  }

  // optional int32 m_unitName = 6;
  if (has_m_unitname()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->m_unitname(), target);
  }

  // optional int32 m_unitCost = 7;
  if (has_m_unitcost()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->m_unitcost(), target);
  }

  // optional int32 m_entrTimes = 8;
  if (has_m_entrtimes()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->m_entrtimes(), target);
  }

  // optional int32 m_mvpReward = 9;
  if (has_m_mvpreward()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->m_mvpreward(), target);
  }

  // optional int32 m_matchTime = 10;
  if (has_m_matchtime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->m_matchtime(), target);
  }

  // optional int32 m_autoMatchTime = 11;
  if (has_m_automatchtime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->m_automatchtime(), target);
  }

  // optional int32 m_endTipsTime = 12;
  if (has_m_endtipstime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(12, this->m_endtipstime(), target);
  }

  // optional int32 m_readyTime = 13;
  if (has_m_readytime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(13, this->m_readytime(), target);
  }

  // optional int32 m_summonItem = 14;
  if (has_m_summonitem()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(14, this->m_summonitem(), target);
  }

  // optional int32 m_summonNum = 15;
  if (has_m_summonnum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(15, this->m_summonnum(), target);
  }

  // optional int32 m_showReward = 16;
  if (has_m_showreward()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(16, this->m_showreward(), target);
  }

  // optional string m_robotName = 17;
  if (has_m_robotname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_robotname().data(), this->m_robotname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        17, this->m_robotname(), target);
  }

  // optional int32 m_mateTime = 18;
  if (has_m_matetime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(18, this->m_matetime(), target);
  }

  // optional int32 m_addTime = 19;
  if (has_m_addtime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(19, this->m_addtime(), target);
  }

  // optional string m_initialNotice = 20;
  if (has_m_initialnotice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_initialnotice().data(), this->m_initialnotice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        20, this->m_initialnotice(), target);
  }

  // optional int32 m_freeTime = 21;
  if (has_m_freetime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(21, this->m_freetime(), target);
  }

  // optional int32 m_expendItem = 22;
  if (has_m_expenditem()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(22, this->m_expenditem(), target);
  }

  // optional int32 m_addServe = 23;
  if (has_m_addserve()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(23, this->m_addserve(), target);
  }

  // optional int32 m_serveTitle = 24;
  if (has_m_servetitle()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(24, this->m_servetitle(), target);
  }

  // optional int32 m_guessLimit = 25;
  if (has_m_guesslimit()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(25, this->m_guesslimit(), target);
  }

  // optional string m_exchangeRatio = 26;
  if (has_m_exchangeratio()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_exchangeratio().data(), this->m_exchangeratio().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        26, this->m_exchangeratio(), target);
  }

  // repeated string m_group = 27;
  for (int i = 0; i < this->m_group_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_group(i).data(), this->m_group(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(27, this->m_group(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_TianxiafirstConstant::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_id = 1;
    if (has_m_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_id());
    }

    // optional int32 m_teamMember = 2;
    if (has_m_teammember()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_teammember());
    }

    // optional int32 m_cedeTime = 3;
    if (has_m_cedetime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_cedetime());
    }

    // optional int32 m_punishTime = 4;
    if (has_m_punishtime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_punishtime());
    }

    // optional int32 m_breakTime = 5;
    if (has_m_breaktime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_breaktime());
    }

    // optional int32 m_unitName = 6;
    if (has_m_unitname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_unitname());
    }

    // optional int32 m_unitCost = 7;
    if (has_m_unitcost()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_unitcost());
    }

    // optional int32 m_entrTimes = 8;
    if (has_m_entrtimes()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_entrtimes());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional int32 m_mvpReward = 9;
    if (has_m_mvpreward()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_mvpreward());
    }

    // optional int32 m_matchTime = 10;
    if (has_m_matchtime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_matchtime());
    }

    // optional int32 m_autoMatchTime = 11;
    if (has_m_automatchtime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_automatchtime());
    }

    // optional int32 m_endTipsTime = 12;
    if (has_m_endtipstime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_endtipstime());
    }

    // optional int32 m_readyTime = 13;
    if (has_m_readytime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_readytime());
    }

    // optional int32 m_summonItem = 14;
    if (has_m_summonitem()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_summonitem());
    }

    // optional int32 m_summonNum = 15;
    if (has_m_summonnum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_summonnum());
    }

    // optional int32 m_showReward = 16;
    if (has_m_showreward()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_showreward());
    }

  }
  if (_has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    // optional string m_robotName = 17;
    if (has_m_robotname()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->m_robotname());
    }

    // optional int32 m_mateTime = 18;
    if (has_m_matetime()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_matetime());
    }

    // optional int32 m_addTime = 19;
    if (has_m_addtime()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_addtime());
    }

    // optional string m_initialNotice = 20;
    if (has_m_initialnotice()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->m_initialnotice());
    }

    // optional int32 m_freeTime = 21;
    if (has_m_freetime()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_freetime());
    }

    // optional int32 m_expendItem = 22;
    if (has_m_expenditem()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_expenditem());
    }

    // optional int32 m_addServe = 23;
    if (has_m_addserve()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_addserve());
    }

    // optional int32 m_serveTitle = 24;
    if (has_m_servetitle()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_servetitle());
    }

  }
  if (_has_bits_[24 / 32] & (0xffu << (24 % 32))) {
    // optional int32 m_guessLimit = 25;
    if (has_m_guesslimit()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_guesslimit());
    }

    // optional string m_exchangeRatio = 26;
    if (has_m_exchangeratio()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->m_exchangeratio());
    }

  }
  // repeated string m_group = 27;
  total_size += 2 * this->m_group_size();
  for (int i = 0; i < this->m_group_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->m_group(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_TianxiafirstConstant::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_TianxiafirstConstant* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_TianxiafirstConstant*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_TianxiafirstConstant::MergeFrom(const E_TianxiafirstConstant& from) {
  GOOGLE_CHECK_NE(&from, this);
  m_group_.MergeFrom(from.m_group_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_id()) {
      set_m_id(from.m_id());
    }
    if (from.has_m_teammember()) {
      set_m_teammember(from.m_teammember());
    }
    if (from.has_m_cedetime()) {
      set_m_cedetime(from.m_cedetime());
    }
    if (from.has_m_punishtime()) {
      set_m_punishtime(from.m_punishtime());
    }
    if (from.has_m_breaktime()) {
      set_m_breaktime(from.m_breaktime());
    }
    if (from.has_m_unitname()) {
      set_m_unitname(from.m_unitname());
    }
    if (from.has_m_unitcost()) {
      set_m_unitcost(from.m_unitcost());
    }
    if (from.has_m_entrtimes()) {
      set_m_entrtimes(from.m_entrtimes());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_m_mvpreward()) {
      set_m_mvpreward(from.m_mvpreward());
    }
    if (from.has_m_matchtime()) {
      set_m_matchtime(from.m_matchtime());
    }
    if (from.has_m_automatchtime()) {
      set_m_automatchtime(from.m_automatchtime());
    }
    if (from.has_m_endtipstime()) {
      set_m_endtipstime(from.m_endtipstime());
    }
    if (from.has_m_readytime()) {
      set_m_readytime(from.m_readytime());
    }
    if (from.has_m_summonitem()) {
      set_m_summonitem(from.m_summonitem());
    }
    if (from.has_m_summonnum()) {
      set_m_summonnum(from.m_summonnum());
    }
    if (from.has_m_showreward()) {
      set_m_showreward(from.m_showreward());
    }
  }
  if (from._has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    if (from.has_m_robotname()) {
      set_m_robotname(from.m_robotname());
    }
    if (from.has_m_matetime()) {
      set_m_matetime(from.m_matetime());
    }
    if (from.has_m_addtime()) {
      set_m_addtime(from.m_addtime());
    }
    if (from.has_m_initialnotice()) {
      set_m_initialnotice(from.m_initialnotice());
    }
    if (from.has_m_freetime()) {
      set_m_freetime(from.m_freetime());
    }
    if (from.has_m_expenditem()) {
      set_m_expenditem(from.m_expenditem());
    }
    if (from.has_m_addserve()) {
      set_m_addserve(from.m_addserve());
    }
    if (from.has_m_servetitle()) {
      set_m_servetitle(from.m_servetitle());
    }
  }
  if (from._has_bits_[24 / 32] & (0xffu << (24 % 32))) {
    if (from.has_m_guesslimit()) {
      set_m_guesslimit(from.m_guesslimit());
    }
    if (from.has_m_exchangeratio()) {
      set_m_exchangeratio(from.m_exchangeratio());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_TianxiafirstConstant::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_TianxiafirstConstant::CopyFrom(const E_TianxiafirstConstant& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_TianxiafirstConstant::IsInitialized() const {

  return true;
}

void E_TianxiafirstConstant::Swap(E_TianxiafirstConstant* other) {
  if (other != this) {
    std::swap(m_id_, other->m_id_);
    std::swap(m_teammember_, other->m_teammember_);
    std::swap(m_cedetime_, other->m_cedetime_);
    std::swap(m_punishtime_, other->m_punishtime_);
    std::swap(m_breaktime_, other->m_breaktime_);
    std::swap(m_unitname_, other->m_unitname_);
    std::swap(m_unitcost_, other->m_unitcost_);
    std::swap(m_entrtimes_, other->m_entrtimes_);
    std::swap(m_mvpreward_, other->m_mvpreward_);
    std::swap(m_matchtime_, other->m_matchtime_);
    std::swap(m_automatchtime_, other->m_automatchtime_);
    std::swap(m_endtipstime_, other->m_endtipstime_);
    std::swap(m_readytime_, other->m_readytime_);
    std::swap(m_summonitem_, other->m_summonitem_);
    std::swap(m_summonnum_, other->m_summonnum_);
    std::swap(m_showreward_, other->m_showreward_);
    std::swap(m_robotname_, other->m_robotname_);
    std::swap(m_matetime_, other->m_matetime_);
    std::swap(m_addtime_, other->m_addtime_);
    std::swap(m_initialnotice_, other->m_initialnotice_);
    std::swap(m_freetime_, other->m_freetime_);
    std::swap(m_expenditem_, other->m_expenditem_);
    std::swap(m_addserve_, other->m_addserve_);
    std::swap(m_servetitle_, other->m_servetitle_);
    std::swap(m_guesslimit_, other->m_guesslimit_);
    std::swap(m_exchangeratio_, other->m_exchangeratio_);
    m_group_.Swap(&other->m_group_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_TianxiafirstConstant::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_TianxiafirstConstant_descriptor_;
  metadata.reflection = E_TianxiafirstConstant_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_TianxiafirstConstant::kETianxiafirstConstantListFieldNumber;
#endif  // !_MSC_VER

Sheet_TianxiafirstConstant::Sheet_TianxiafirstConstant()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_TianxiafirstConstant::InitAsDefaultInstance() {
}

Sheet_TianxiafirstConstant::Sheet_TianxiafirstConstant(const Sheet_TianxiafirstConstant& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_TianxiafirstConstant::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_TianxiafirstConstant::~Sheet_TianxiafirstConstant() {
  SharedDtor();
}

void Sheet_TianxiafirstConstant::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_TianxiafirstConstant::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_TianxiafirstConstant::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_TianxiafirstConstant_descriptor_;
}

const Sheet_TianxiafirstConstant& Sheet_TianxiafirstConstant::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fTianxiafirst_2eproto();
  return *default_instance_;
}

Sheet_TianxiafirstConstant* Sheet_TianxiafirstConstant::default_instance_ = NULL;

Sheet_TianxiafirstConstant* Sheet_TianxiafirstConstant::New() const {
  return new Sheet_TianxiafirstConstant;
}

void Sheet_TianxiafirstConstant::Clear() {
  e_tianxiafirstconstant_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_TianxiafirstConstant::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.E_TianxiafirstConstant E_TianxiafirstConstant_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_E_TianxiafirstConstant_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_e_tianxiafirstconstant_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_E_TianxiafirstConstant_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_TianxiafirstConstant::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.E_TianxiafirstConstant E_TianxiafirstConstant_List = 1;
  for (int i = 0; i < this->e_tianxiafirstconstant_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->e_tianxiafirstconstant_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_TianxiafirstConstant::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.E_TianxiafirstConstant E_TianxiafirstConstant_List = 1;
  for (int i = 0; i < this->e_tianxiafirstconstant_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->e_tianxiafirstconstant_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_TianxiafirstConstant::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.E_TianxiafirstConstant E_TianxiafirstConstant_List = 1;
  total_size += 1 * this->e_tianxiafirstconstant_list_size();
  for (int i = 0; i < this->e_tianxiafirstconstant_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->e_tianxiafirstconstant_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_TianxiafirstConstant::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_TianxiafirstConstant* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_TianxiafirstConstant*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_TianxiafirstConstant::MergeFrom(const Sheet_TianxiafirstConstant& from) {
  GOOGLE_CHECK_NE(&from, this);
  e_tianxiafirstconstant_list_.MergeFrom(from.e_tianxiafirstconstant_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_TianxiafirstConstant::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_TianxiafirstConstant::CopyFrom(const Sheet_TianxiafirstConstant& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_TianxiafirstConstant::IsInitialized() const {

  return true;
}

void Sheet_TianxiafirstConstant::Swap(Sheet_TianxiafirstConstant* other) {
  if (other != this) {
    e_tianxiafirstconstant_list_.Swap(&other->e_tianxiafirstconstant_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_TianxiafirstConstant::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_TianxiafirstConstant_descriptor_;
  metadata.reflection = Sheet_TianxiafirstConstant_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_TianxiafirstBattle::kMIdFieldNumber;
const int E_TianxiafirstBattle::kMGamemodFieldNumber;
const int E_TianxiafirstBattle::kMMatchTimeFieldNumber;
const int E_TianxiafirstBattle::kMReviveFieldNumber;
#endif  // !_MSC_VER

E_TianxiafirstBattle::E_TianxiafirstBattle()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_TianxiafirstBattle::InitAsDefaultInstance() {
}

E_TianxiafirstBattle::E_TianxiafirstBattle(const E_TianxiafirstBattle& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_TianxiafirstBattle::SharedCtor() {
  _cached_size_ = 0;
  m_id_ = 0;
  m_gamemod_ = 0;
  m_matchtime_ = 0;
  m_revive_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_TianxiafirstBattle::~E_TianxiafirstBattle() {
  SharedDtor();
}

void E_TianxiafirstBattle::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_TianxiafirstBattle::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_TianxiafirstBattle::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_TianxiafirstBattle_descriptor_;
}

const E_TianxiafirstBattle& E_TianxiafirstBattle::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fTianxiafirst_2eproto();
  return *default_instance_;
}

E_TianxiafirstBattle* E_TianxiafirstBattle::default_instance_ = NULL;

E_TianxiafirstBattle* E_TianxiafirstBattle::New() const {
  return new E_TianxiafirstBattle;
}

void E_TianxiafirstBattle::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_id_ = 0;
    m_gamemod_ = 0;
    m_matchtime_ = 0;
    m_revive_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_TianxiafirstBattle::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_id_)));
          set_has_m_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_gamemod;
        break;
      }

      // optional int32 m_gamemod = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_gamemod:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_gamemod_)));
          set_has_m_gamemod();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_m_matchTime;
        break;
      }

      // optional int32 m_matchTime = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_matchTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_matchtime_)));
          set_has_m_matchtime();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_m_revive;
        break;
      }

      // optional int32 m_revive = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_revive:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_revive_)));
          set_has_m_revive();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_TianxiafirstBattle::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_id(), output);
  }

  // optional int32 m_gamemod = 2;
  if (has_m_gamemod()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_gamemod(), output);
  }

  // optional int32 m_matchTime = 3;
  if (has_m_matchtime()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->m_matchtime(), output);
  }

  // optional int32 m_revive = 4;
  if (has_m_revive()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->m_revive(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_TianxiafirstBattle::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_id(), target);
  }

  // optional int32 m_gamemod = 2;
  if (has_m_gamemod()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_gamemod(), target);
  }

  // optional int32 m_matchTime = 3;
  if (has_m_matchtime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->m_matchtime(), target);
  }

  // optional int32 m_revive = 4;
  if (has_m_revive()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->m_revive(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_TianxiafirstBattle::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_id = 1;
    if (has_m_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_id());
    }

    // optional int32 m_gamemod = 2;
    if (has_m_gamemod()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_gamemod());
    }

    // optional int32 m_matchTime = 3;
    if (has_m_matchtime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_matchtime());
    }

    // optional int32 m_revive = 4;
    if (has_m_revive()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_revive());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_TianxiafirstBattle::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_TianxiafirstBattle* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_TianxiafirstBattle*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_TianxiafirstBattle::MergeFrom(const E_TianxiafirstBattle& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_id()) {
      set_m_id(from.m_id());
    }
    if (from.has_m_gamemod()) {
      set_m_gamemod(from.m_gamemod());
    }
    if (from.has_m_matchtime()) {
      set_m_matchtime(from.m_matchtime());
    }
    if (from.has_m_revive()) {
      set_m_revive(from.m_revive());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_TianxiafirstBattle::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_TianxiafirstBattle::CopyFrom(const E_TianxiafirstBattle& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_TianxiafirstBattle::IsInitialized() const {

  return true;
}

void E_TianxiafirstBattle::Swap(E_TianxiafirstBattle* other) {
  if (other != this) {
    std::swap(m_id_, other->m_id_);
    std::swap(m_gamemod_, other->m_gamemod_);
    std::swap(m_matchtime_, other->m_matchtime_);
    std::swap(m_revive_, other->m_revive_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_TianxiafirstBattle::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_TianxiafirstBattle_descriptor_;
  metadata.reflection = E_TianxiafirstBattle_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_TianxiafirstBattle::kETianxiafirstBattleListFieldNumber;
#endif  // !_MSC_VER

Sheet_TianxiafirstBattle::Sheet_TianxiafirstBattle()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_TianxiafirstBattle::InitAsDefaultInstance() {
}

Sheet_TianxiafirstBattle::Sheet_TianxiafirstBattle(const Sheet_TianxiafirstBattle& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_TianxiafirstBattle::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_TianxiafirstBattle::~Sheet_TianxiafirstBattle() {
  SharedDtor();
}

void Sheet_TianxiafirstBattle::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_TianxiafirstBattle::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_TianxiafirstBattle::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_TianxiafirstBattle_descriptor_;
}

const Sheet_TianxiafirstBattle& Sheet_TianxiafirstBattle::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fTianxiafirst_2eproto();
  return *default_instance_;
}

Sheet_TianxiafirstBattle* Sheet_TianxiafirstBattle::default_instance_ = NULL;

Sheet_TianxiafirstBattle* Sheet_TianxiafirstBattle::New() const {
  return new Sheet_TianxiafirstBattle;
}

void Sheet_TianxiafirstBattle::Clear() {
  e_tianxiafirstbattle_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_TianxiafirstBattle::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.E_TianxiafirstBattle E_TianxiafirstBattle_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_E_TianxiafirstBattle_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_e_tianxiafirstbattle_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_E_TianxiafirstBattle_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_TianxiafirstBattle::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.E_TianxiafirstBattle E_TianxiafirstBattle_List = 1;
  for (int i = 0; i < this->e_tianxiafirstbattle_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->e_tianxiafirstbattle_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_TianxiafirstBattle::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.E_TianxiafirstBattle E_TianxiafirstBattle_List = 1;
  for (int i = 0; i < this->e_tianxiafirstbattle_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->e_tianxiafirstbattle_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_TianxiafirstBattle::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.E_TianxiafirstBattle E_TianxiafirstBattle_List = 1;
  total_size += 1 * this->e_tianxiafirstbattle_list_size();
  for (int i = 0; i < this->e_tianxiafirstbattle_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->e_tianxiafirstbattle_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_TianxiafirstBattle::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_TianxiafirstBattle* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_TianxiafirstBattle*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_TianxiafirstBattle::MergeFrom(const Sheet_TianxiafirstBattle& from) {
  GOOGLE_CHECK_NE(&from, this);
  e_tianxiafirstbattle_list_.MergeFrom(from.e_tianxiafirstbattle_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_TianxiafirstBattle::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_TianxiafirstBattle::CopyFrom(const Sheet_TianxiafirstBattle& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_TianxiafirstBattle::IsInitialized() const {

  return true;
}

void Sheet_TianxiafirstBattle::Swap(Sheet_TianxiafirstBattle* other) {
  if (other != this) {
    e_tianxiafirstbattle_list_.Swap(&other->e_tianxiafirstbattle_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_TianxiafirstBattle::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_TianxiafirstBattle_descriptor_;
  metadata.reflection = Sheet_TianxiafirstBattle_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_TianxiafirstArtifactAttDesc::kMValueFieldNumber;
const int E_TianxiafirstArtifactAttDesc::kMIdFieldNumber;
#endif  // !_MSC_VER

E_TianxiafirstArtifactAttDesc::E_TianxiafirstArtifactAttDesc()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_TianxiafirstArtifactAttDesc::InitAsDefaultInstance() {
}

E_TianxiafirstArtifactAttDesc::E_TianxiafirstArtifactAttDesc(const E_TianxiafirstArtifactAttDesc& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_TianxiafirstArtifactAttDesc::SharedCtor() {
  _cached_size_ = 0;
  m_value_ = 0;
  m_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_TianxiafirstArtifactAttDesc::~E_TianxiafirstArtifactAttDesc() {
  SharedDtor();
}

void E_TianxiafirstArtifactAttDesc::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_TianxiafirstArtifactAttDesc::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_TianxiafirstArtifactAttDesc::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_TianxiafirstArtifactAttDesc_descriptor_;
}

const E_TianxiafirstArtifactAttDesc& E_TianxiafirstArtifactAttDesc::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fTianxiafirst_2eproto();
  return *default_instance_;
}

E_TianxiafirstArtifactAttDesc* E_TianxiafirstArtifactAttDesc::default_instance_ = NULL;

E_TianxiafirstArtifactAttDesc* E_TianxiafirstArtifactAttDesc::New() const {
  return new E_TianxiafirstArtifactAttDesc;
}

void E_TianxiafirstArtifactAttDesc::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_value_ = 0;
    m_id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_TianxiafirstArtifactAttDesc::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_value = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_value_)));
          set_has_m_value();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_id;
        break;
      }

      // optional int32 m_id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_id_)));
          set_has_m_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_TianxiafirstArtifactAttDesc::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_value = 1;
  if (has_m_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_value(), output);
  }

  // optional int32 m_id = 2;
  if (has_m_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_TianxiafirstArtifactAttDesc::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_value = 1;
  if (has_m_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_value(), target);
  }

  // optional int32 m_id = 2;
  if (has_m_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_TianxiafirstArtifactAttDesc::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_value = 1;
    if (has_m_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_value());
    }

    // optional int32 m_id = 2;
    if (has_m_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_id());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_TianxiafirstArtifactAttDesc::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_TianxiafirstArtifactAttDesc* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_TianxiafirstArtifactAttDesc*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_TianxiafirstArtifactAttDesc::MergeFrom(const E_TianxiafirstArtifactAttDesc& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_value()) {
      set_m_value(from.m_value());
    }
    if (from.has_m_id()) {
      set_m_id(from.m_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_TianxiafirstArtifactAttDesc::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_TianxiafirstArtifactAttDesc::CopyFrom(const E_TianxiafirstArtifactAttDesc& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_TianxiafirstArtifactAttDesc::IsInitialized() const {

  return true;
}

void E_TianxiafirstArtifactAttDesc::Swap(E_TianxiafirstArtifactAttDesc* other) {
  if (other != this) {
    std::swap(m_value_, other->m_value_);
    std::swap(m_id_, other->m_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_TianxiafirstArtifactAttDesc::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_TianxiafirstArtifactAttDesc_descriptor_;
  metadata.reflection = E_TianxiafirstArtifactAttDesc_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_TianxiafirstArtifact::kMArtifactIdFieldNumber;
const int E_TianxiafirstArtifact::kMPreIdFieldNumber;
const int E_TianxiafirstArtifact::kMConditionFieldNumber;
const int E_TianxiafirstArtifact::kMAttFieldNumber;
#endif  // !_MSC_VER

E_TianxiafirstArtifact::E_TianxiafirstArtifact()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_TianxiafirstArtifact::InitAsDefaultInstance() {
}

E_TianxiafirstArtifact::E_TianxiafirstArtifact(const E_TianxiafirstArtifact& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_TianxiafirstArtifact::SharedCtor() {
  _cached_size_ = 0;
  m_artifactid_ = 0;
  m_preid_ = 0;
  m_condition_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_TianxiafirstArtifact::~E_TianxiafirstArtifact() {
  SharedDtor();
}

void E_TianxiafirstArtifact::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_TianxiafirstArtifact::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_TianxiafirstArtifact::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_TianxiafirstArtifact_descriptor_;
}

const E_TianxiafirstArtifact& E_TianxiafirstArtifact::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fTianxiafirst_2eproto();
  return *default_instance_;
}

E_TianxiafirstArtifact* E_TianxiafirstArtifact::default_instance_ = NULL;

E_TianxiafirstArtifact* E_TianxiafirstArtifact::New() const {
  return new E_TianxiafirstArtifact;
}

void E_TianxiafirstArtifact::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_artifactid_ = 0;
    m_preid_ = 0;
    m_condition_ = 0;
  }
  m_att_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_TianxiafirstArtifact::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_artifactId = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_artifactid_)));
          set_has_m_artifactid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_preId;
        break;
      }

      // optional int32 m_preId = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_preId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_preid_)));
          set_has_m_preid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_m_condition;
        break;
      }

      // optional int32 m_condition = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_condition:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_condition_)));
          set_has_m_condition();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_m_att;
        break;
      }

      // repeated .proto_ff.E_TianxiafirstArtifactAttDesc m_att = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_att:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_m_att()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_m_att;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_TianxiafirstArtifact::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_artifactId = 1;
  if (has_m_artifactid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_artifactid(), output);
  }

  // optional int32 m_preId = 2;
  if (has_m_preid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_preid(), output);
  }

  // optional int32 m_condition = 3;
  if (has_m_condition()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->m_condition(), output);
  }

  // repeated .proto_ff.E_TianxiafirstArtifactAttDesc m_att = 4;
  for (int i = 0; i < this->m_att_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->m_att(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_TianxiafirstArtifact::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_artifactId = 1;
  if (has_m_artifactid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_artifactid(), target);
  }

  // optional int32 m_preId = 2;
  if (has_m_preid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_preid(), target);
  }

  // optional int32 m_condition = 3;
  if (has_m_condition()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->m_condition(), target);
  }

  // repeated .proto_ff.E_TianxiafirstArtifactAttDesc m_att = 4;
  for (int i = 0; i < this->m_att_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->m_att(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_TianxiafirstArtifact::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_artifactId = 1;
    if (has_m_artifactid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_artifactid());
    }

    // optional int32 m_preId = 2;
    if (has_m_preid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_preid());
    }

    // optional int32 m_condition = 3;
    if (has_m_condition()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_condition());
    }

  }
  // repeated .proto_ff.E_TianxiafirstArtifactAttDesc m_att = 4;
  total_size += 1 * this->m_att_size();
  for (int i = 0; i < this->m_att_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->m_att(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_TianxiafirstArtifact::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_TianxiafirstArtifact* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_TianxiafirstArtifact*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_TianxiafirstArtifact::MergeFrom(const E_TianxiafirstArtifact& from) {
  GOOGLE_CHECK_NE(&from, this);
  m_att_.MergeFrom(from.m_att_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_artifactid()) {
      set_m_artifactid(from.m_artifactid());
    }
    if (from.has_m_preid()) {
      set_m_preid(from.m_preid());
    }
    if (from.has_m_condition()) {
      set_m_condition(from.m_condition());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_TianxiafirstArtifact::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_TianxiafirstArtifact::CopyFrom(const E_TianxiafirstArtifact& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_TianxiafirstArtifact::IsInitialized() const {

  return true;
}

void E_TianxiafirstArtifact::Swap(E_TianxiafirstArtifact* other) {
  if (other != this) {
    std::swap(m_artifactid_, other->m_artifactid_);
    std::swap(m_preid_, other->m_preid_);
    std::swap(m_condition_, other->m_condition_);
    m_att_.Swap(&other->m_att_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_TianxiafirstArtifact::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_TianxiafirstArtifact_descriptor_;
  metadata.reflection = E_TianxiafirstArtifact_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_TianxiafirstArtifact::kETianxiafirstArtifactListFieldNumber;
#endif  // !_MSC_VER

Sheet_TianxiafirstArtifact::Sheet_TianxiafirstArtifact()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_TianxiafirstArtifact::InitAsDefaultInstance() {
}

Sheet_TianxiafirstArtifact::Sheet_TianxiafirstArtifact(const Sheet_TianxiafirstArtifact& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_TianxiafirstArtifact::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_TianxiafirstArtifact::~Sheet_TianxiafirstArtifact() {
  SharedDtor();
}

void Sheet_TianxiafirstArtifact::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_TianxiafirstArtifact::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_TianxiafirstArtifact::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_TianxiafirstArtifact_descriptor_;
}

const Sheet_TianxiafirstArtifact& Sheet_TianxiafirstArtifact::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fTianxiafirst_2eproto();
  return *default_instance_;
}

Sheet_TianxiafirstArtifact* Sheet_TianxiafirstArtifact::default_instance_ = NULL;

Sheet_TianxiafirstArtifact* Sheet_TianxiafirstArtifact::New() const {
  return new Sheet_TianxiafirstArtifact;
}

void Sheet_TianxiafirstArtifact::Clear() {
  e_tianxiafirstartifact_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_TianxiafirstArtifact::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.E_TianxiafirstArtifact E_TianxiafirstArtifact_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_E_TianxiafirstArtifact_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_e_tianxiafirstartifact_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_E_TianxiafirstArtifact_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_TianxiafirstArtifact::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.E_TianxiafirstArtifact E_TianxiafirstArtifact_List = 1;
  for (int i = 0; i < this->e_tianxiafirstartifact_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->e_tianxiafirstartifact_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_TianxiafirstArtifact::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.E_TianxiafirstArtifact E_TianxiafirstArtifact_List = 1;
  for (int i = 0; i < this->e_tianxiafirstartifact_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->e_tianxiafirstartifact_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_TianxiafirstArtifact::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.E_TianxiafirstArtifact E_TianxiafirstArtifact_List = 1;
  total_size += 1 * this->e_tianxiafirstartifact_list_size();
  for (int i = 0; i < this->e_tianxiafirstartifact_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->e_tianxiafirstartifact_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_TianxiafirstArtifact::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_TianxiafirstArtifact* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_TianxiafirstArtifact*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_TianxiafirstArtifact::MergeFrom(const Sheet_TianxiafirstArtifact& from) {
  GOOGLE_CHECK_NE(&from, this);
  e_tianxiafirstartifact_list_.MergeFrom(from.e_tianxiafirstartifact_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_TianxiafirstArtifact::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_TianxiafirstArtifact::CopyFrom(const Sheet_TianxiafirstArtifact& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_TianxiafirstArtifact::IsInitialized() const {

  return true;
}

void Sheet_TianxiafirstArtifact::Swap(Sheet_TianxiafirstArtifact* other) {
  if (other != this) {
    e_tianxiafirstartifact_list_.Swap(&other->e_tianxiafirstartifact_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_TianxiafirstArtifact::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_TianxiafirstArtifact_descriptor_;
  metadata.reflection = Sheet_TianxiafirstArtifact_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_TianxiafirstStrongTypeDesc::kMNumFieldNumber;
const int E_TianxiafirstStrongTypeDesc::kMIdFieldNumber;
#endif  // !_MSC_VER

E_TianxiafirstStrongTypeDesc::E_TianxiafirstStrongTypeDesc()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_TianxiafirstStrongTypeDesc::InitAsDefaultInstance() {
}

E_TianxiafirstStrongTypeDesc::E_TianxiafirstStrongTypeDesc(const E_TianxiafirstStrongTypeDesc& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_TianxiafirstStrongTypeDesc::SharedCtor() {
  _cached_size_ = 0;
  m_num_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  m_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_TianxiafirstStrongTypeDesc::~E_TianxiafirstStrongTypeDesc() {
  SharedDtor();
}

void E_TianxiafirstStrongTypeDesc::SharedDtor() {
  if (m_num_ != &::google::protobuf::internal::kEmptyString) {
    delete m_num_;
  }
  if (this != default_instance_) {
  }
}

void E_TianxiafirstStrongTypeDesc::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_TianxiafirstStrongTypeDesc::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_TianxiafirstStrongTypeDesc_descriptor_;
}

const E_TianxiafirstStrongTypeDesc& E_TianxiafirstStrongTypeDesc::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fTianxiafirst_2eproto();
  return *default_instance_;
}

E_TianxiafirstStrongTypeDesc* E_TianxiafirstStrongTypeDesc::default_instance_ = NULL;

E_TianxiafirstStrongTypeDesc* E_TianxiafirstStrongTypeDesc::New() const {
  return new E_TianxiafirstStrongTypeDesc;
}

void E_TianxiafirstStrongTypeDesc::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_m_num()) {
      if (m_num_ != &::google::protobuf::internal::kEmptyString) {
        m_num_->clear();
      }
    }
    m_id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_TianxiafirstStrongTypeDesc::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string m_num = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_m_num()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->m_num().data(), this->m_num().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_id;
        break;
      }

      // optional int32 m_id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_id_)));
          set_has_m_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_TianxiafirstStrongTypeDesc::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional string m_num = 1;
  if (has_m_num()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_num().data(), this->m_num().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->m_num(), output);
  }

  // optional int32 m_id = 2;
  if (has_m_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_TianxiafirstStrongTypeDesc::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional string m_num = 1;
  if (has_m_num()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_num().data(), this->m_num().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->m_num(), target);
  }

  // optional int32 m_id = 2;
  if (has_m_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_TianxiafirstStrongTypeDesc::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string m_num = 1;
    if (has_m_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->m_num());
    }

    // optional int32 m_id = 2;
    if (has_m_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_id());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_TianxiafirstStrongTypeDesc::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_TianxiafirstStrongTypeDesc* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_TianxiafirstStrongTypeDesc*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_TianxiafirstStrongTypeDesc::MergeFrom(const E_TianxiafirstStrongTypeDesc& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_num()) {
      set_m_num(from.m_num());
    }
    if (from.has_m_id()) {
      set_m_id(from.m_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_TianxiafirstStrongTypeDesc::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_TianxiafirstStrongTypeDesc::CopyFrom(const E_TianxiafirstStrongTypeDesc& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_TianxiafirstStrongTypeDesc::IsInitialized() const {

  return true;
}

void E_TianxiafirstStrongTypeDesc::Swap(E_TianxiafirstStrongTypeDesc* other) {
  if (other != this) {
    std::swap(m_num_, other->m_num_);
    std::swap(m_id_, other->m_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_TianxiafirstStrongTypeDesc::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_TianxiafirstStrongTypeDesc_descriptor_;
  metadata.reflection = E_TianxiafirstStrongTypeDesc_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_TianxiafirstStrong::kMArtifactIdFieldNumber;
const int E_TianxiafirstStrong::kMStrongUpFieldNumber;
const int E_TianxiafirstStrong::kMExpFieldNumber;
const int E_TianxiafirstStrong::kMTypeFieldNumber;
#endif  // !_MSC_VER

E_TianxiafirstStrong::E_TianxiafirstStrong()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_TianxiafirstStrong::InitAsDefaultInstance() {
}

E_TianxiafirstStrong::E_TianxiafirstStrong(const E_TianxiafirstStrong& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_TianxiafirstStrong::SharedCtor() {
  _cached_size_ = 0;
  m_artifactid_ = 0;
  m_strongup_ = 0;
  m_exp_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_TianxiafirstStrong::~E_TianxiafirstStrong() {
  SharedDtor();
}

void E_TianxiafirstStrong::SharedDtor() {
  if (m_exp_ != &::google::protobuf::internal::kEmptyString) {
    delete m_exp_;
  }
  if (this != default_instance_) {
  }
}

void E_TianxiafirstStrong::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_TianxiafirstStrong::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_TianxiafirstStrong_descriptor_;
}

const E_TianxiafirstStrong& E_TianxiafirstStrong::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fTianxiafirst_2eproto();
  return *default_instance_;
}

E_TianxiafirstStrong* E_TianxiafirstStrong::default_instance_ = NULL;

E_TianxiafirstStrong* E_TianxiafirstStrong::New() const {
  return new E_TianxiafirstStrong;
}

void E_TianxiafirstStrong::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_artifactid_ = 0;
    m_strongup_ = 0;
    if (has_m_exp()) {
      if (m_exp_ != &::google::protobuf::internal::kEmptyString) {
        m_exp_->clear();
      }
    }
  }
  m_type_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_TianxiafirstStrong::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_artifactId = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_artifactid_)));
          set_has_m_artifactid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_strongUp;
        break;
      }

      // optional int32 m_strongUp = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_strongUp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_strongup_)));
          set_has_m_strongup();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_m_exp;
        break;
      }

      // optional string m_exp = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_exp:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_m_exp()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->m_exp().data(), this->m_exp().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_m_type;
        break;
      }

      // repeated .proto_ff.E_TianxiafirstStrongTypeDesc m_type = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_type:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_m_type()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_m_type;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_TianxiafirstStrong::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_artifactId = 1;
  if (has_m_artifactid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_artifactid(), output);
  }

  // optional int32 m_strongUp = 2;
  if (has_m_strongup()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_strongup(), output);
  }

  // optional string m_exp = 3;
  if (has_m_exp()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_exp().data(), this->m_exp().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->m_exp(), output);
  }

  // repeated .proto_ff.E_TianxiafirstStrongTypeDesc m_type = 4;
  for (int i = 0; i < this->m_type_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->m_type(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_TianxiafirstStrong::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_artifactId = 1;
  if (has_m_artifactid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_artifactid(), target);
  }

  // optional int32 m_strongUp = 2;
  if (has_m_strongup()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_strongup(), target);
  }

  // optional string m_exp = 3;
  if (has_m_exp()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_exp().data(), this->m_exp().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->m_exp(), target);
  }

  // repeated .proto_ff.E_TianxiafirstStrongTypeDesc m_type = 4;
  for (int i = 0; i < this->m_type_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->m_type(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_TianxiafirstStrong::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_artifactId = 1;
    if (has_m_artifactid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_artifactid());
    }

    // optional int32 m_strongUp = 2;
    if (has_m_strongup()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_strongup());
    }

    // optional string m_exp = 3;
    if (has_m_exp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->m_exp());
    }

  }
  // repeated .proto_ff.E_TianxiafirstStrongTypeDesc m_type = 4;
  total_size += 1 * this->m_type_size();
  for (int i = 0; i < this->m_type_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->m_type(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_TianxiafirstStrong::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_TianxiafirstStrong* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_TianxiafirstStrong*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_TianxiafirstStrong::MergeFrom(const E_TianxiafirstStrong& from) {
  GOOGLE_CHECK_NE(&from, this);
  m_type_.MergeFrom(from.m_type_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_artifactid()) {
      set_m_artifactid(from.m_artifactid());
    }
    if (from.has_m_strongup()) {
      set_m_strongup(from.m_strongup());
    }
    if (from.has_m_exp()) {
      set_m_exp(from.m_exp());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_TianxiafirstStrong::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_TianxiafirstStrong::CopyFrom(const E_TianxiafirstStrong& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_TianxiafirstStrong::IsInitialized() const {

  return true;
}

void E_TianxiafirstStrong::Swap(E_TianxiafirstStrong* other) {
  if (other != this) {
    std::swap(m_artifactid_, other->m_artifactid_);
    std::swap(m_strongup_, other->m_strongup_);
    std::swap(m_exp_, other->m_exp_);
    m_type_.Swap(&other->m_type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_TianxiafirstStrong::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_TianxiafirstStrong_descriptor_;
  metadata.reflection = E_TianxiafirstStrong_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_TianxiafirstStrong::kETianxiafirstStrongListFieldNumber;
#endif  // !_MSC_VER

Sheet_TianxiafirstStrong::Sheet_TianxiafirstStrong()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_TianxiafirstStrong::InitAsDefaultInstance() {
}

Sheet_TianxiafirstStrong::Sheet_TianxiafirstStrong(const Sheet_TianxiafirstStrong& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_TianxiafirstStrong::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_TianxiafirstStrong::~Sheet_TianxiafirstStrong() {
  SharedDtor();
}

void Sheet_TianxiafirstStrong::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_TianxiafirstStrong::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_TianxiafirstStrong::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_TianxiafirstStrong_descriptor_;
}

const Sheet_TianxiafirstStrong& Sheet_TianxiafirstStrong::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fTianxiafirst_2eproto();
  return *default_instance_;
}

Sheet_TianxiafirstStrong* Sheet_TianxiafirstStrong::default_instance_ = NULL;

Sheet_TianxiafirstStrong* Sheet_TianxiafirstStrong::New() const {
  return new Sheet_TianxiafirstStrong;
}

void Sheet_TianxiafirstStrong::Clear() {
  e_tianxiafirststrong_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_TianxiafirstStrong::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.E_TianxiafirstStrong E_TianxiafirstStrong_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_E_TianxiafirstStrong_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_e_tianxiafirststrong_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_E_TianxiafirstStrong_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_TianxiafirstStrong::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.E_TianxiafirstStrong E_TianxiafirstStrong_List = 1;
  for (int i = 0; i < this->e_tianxiafirststrong_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->e_tianxiafirststrong_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_TianxiafirstStrong::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.E_TianxiafirstStrong E_TianxiafirstStrong_List = 1;
  for (int i = 0; i < this->e_tianxiafirststrong_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->e_tianxiafirststrong_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_TianxiafirstStrong::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.E_TianxiafirstStrong E_TianxiafirstStrong_List = 1;
  total_size += 1 * this->e_tianxiafirststrong_list_size();
  for (int i = 0; i < this->e_tianxiafirststrong_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->e_tianxiafirststrong_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_TianxiafirstStrong::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_TianxiafirstStrong* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_TianxiafirstStrong*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_TianxiafirstStrong::MergeFrom(const Sheet_TianxiafirstStrong& from) {
  GOOGLE_CHECK_NE(&from, this);
  e_tianxiafirststrong_list_.MergeFrom(from.e_tianxiafirststrong_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_TianxiafirstStrong::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_TianxiafirstStrong::CopyFrom(const Sheet_TianxiafirstStrong& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_TianxiafirstStrong::IsInitialized() const {

  return true;
}

void Sheet_TianxiafirstStrong::Swap(Sheet_TianxiafirstStrong* other) {
  if (other != this) {
    e_tianxiafirststrong_list_.Swap(&other->e_tianxiafirststrong_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_TianxiafirstStrong::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_TianxiafirstStrong_descriptor_;
  metadata.reflection = Sheet_TianxiafirstStrong_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_TianxiafirstStrongitem::kMIdFieldNumber;
const int E_TianxiafirstStrongitem::kMAddExpFieldNumber;
#endif  // !_MSC_VER

E_TianxiafirstStrongitem::E_TianxiafirstStrongitem()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_TianxiafirstStrongitem::InitAsDefaultInstance() {
}

E_TianxiafirstStrongitem::E_TianxiafirstStrongitem(const E_TianxiafirstStrongitem& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_TianxiafirstStrongitem::SharedCtor() {
  _cached_size_ = 0;
  m_id_ = 0;
  m_addexp_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_TianxiafirstStrongitem::~E_TianxiafirstStrongitem() {
  SharedDtor();
}

void E_TianxiafirstStrongitem::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_TianxiafirstStrongitem::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_TianxiafirstStrongitem::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_TianxiafirstStrongitem_descriptor_;
}

const E_TianxiafirstStrongitem& E_TianxiafirstStrongitem::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fTianxiafirst_2eproto();
  return *default_instance_;
}

E_TianxiafirstStrongitem* E_TianxiafirstStrongitem::default_instance_ = NULL;

E_TianxiafirstStrongitem* E_TianxiafirstStrongitem::New() const {
  return new E_TianxiafirstStrongitem;
}

void E_TianxiafirstStrongitem::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_id_ = 0;
    m_addexp_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_TianxiafirstStrongitem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_id_)));
          set_has_m_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_addExp;
        break;
      }

      // optional int32 m_addExp = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_addExp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_addexp_)));
          set_has_m_addexp();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_TianxiafirstStrongitem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_id(), output);
  }

  // optional int32 m_addExp = 2;
  if (has_m_addexp()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_addexp(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_TianxiafirstStrongitem::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_id(), target);
  }

  // optional int32 m_addExp = 2;
  if (has_m_addexp()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_addexp(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_TianxiafirstStrongitem::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_id = 1;
    if (has_m_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_id());
    }

    // optional int32 m_addExp = 2;
    if (has_m_addexp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_addexp());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_TianxiafirstStrongitem::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_TianxiafirstStrongitem* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_TianxiafirstStrongitem*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_TianxiafirstStrongitem::MergeFrom(const E_TianxiafirstStrongitem& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_id()) {
      set_m_id(from.m_id());
    }
    if (from.has_m_addexp()) {
      set_m_addexp(from.m_addexp());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_TianxiafirstStrongitem::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_TianxiafirstStrongitem::CopyFrom(const E_TianxiafirstStrongitem& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_TianxiafirstStrongitem::IsInitialized() const {

  return true;
}

void E_TianxiafirstStrongitem::Swap(E_TianxiafirstStrongitem* other) {
  if (other != this) {
    std::swap(m_id_, other->m_id_);
    std::swap(m_addexp_, other->m_addexp_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_TianxiafirstStrongitem::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_TianxiafirstStrongitem_descriptor_;
  metadata.reflection = E_TianxiafirstStrongitem_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_TianxiafirstStrongitem::kETianxiafirstStrongitemListFieldNumber;
#endif  // !_MSC_VER

Sheet_TianxiafirstStrongitem::Sheet_TianxiafirstStrongitem()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_TianxiafirstStrongitem::InitAsDefaultInstance() {
}

Sheet_TianxiafirstStrongitem::Sheet_TianxiafirstStrongitem(const Sheet_TianxiafirstStrongitem& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_TianxiafirstStrongitem::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_TianxiafirstStrongitem::~Sheet_TianxiafirstStrongitem() {
  SharedDtor();
}

void Sheet_TianxiafirstStrongitem::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_TianxiafirstStrongitem::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_TianxiafirstStrongitem::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_TianxiafirstStrongitem_descriptor_;
}

const Sheet_TianxiafirstStrongitem& Sheet_TianxiafirstStrongitem::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fTianxiafirst_2eproto();
  return *default_instance_;
}

Sheet_TianxiafirstStrongitem* Sheet_TianxiafirstStrongitem::default_instance_ = NULL;

Sheet_TianxiafirstStrongitem* Sheet_TianxiafirstStrongitem::New() const {
  return new Sheet_TianxiafirstStrongitem;
}

void Sheet_TianxiafirstStrongitem::Clear() {
  e_tianxiafirststrongitem_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_TianxiafirstStrongitem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.E_TianxiafirstStrongitem E_TianxiafirstStrongitem_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_E_TianxiafirstStrongitem_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_e_tianxiafirststrongitem_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_E_TianxiafirstStrongitem_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_TianxiafirstStrongitem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.E_TianxiafirstStrongitem E_TianxiafirstStrongitem_List = 1;
  for (int i = 0; i < this->e_tianxiafirststrongitem_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->e_tianxiafirststrongitem_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_TianxiafirstStrongitem::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.E_TianxiafirstStrongitem E_TianxiafirstStrongitem_List = 1;
  for (int i = 0; i < this->e_tianxiafirststrongitem_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->e_tianxiafirststrongitem_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_TianxiafirstStrongitem::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.E_TianxiafirstStrongitem E_TianxiafirstStrongitem_List = 1;
  total_size += 1 * this->e_tianxiafirststrongitem_list_size();
  for (int i = 0; i < this->e_tianxiafirststrongitem_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->e_tianxiafirststrongitem_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_TianxiafirstStrongitem::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_TianxiafirstStrongitem* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_TianxiafirstStrongitem*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_TianxiafirstStrongitem::MergeFrom(const Sheet_TianxiafirstStrongitem& from) {
  GOOGLE_CHECK_NE(&from, this);
  e_tianxiafirststrongitem_list_.MergeFrom(from.e_tianxiafirststrongitem_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_TianxiafirstStrongitem::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_TianxiafirstStrongitem::CopyFrom(const Sheet_TianxiafirstStrongitem& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_TianxiafirstStrongitem::IsInitialized() const {

  return true;
}

void Sheet_TianxiafirstStrongitem::Swap(Sheet_TianxiafirstStrongitem* other) {
  if (other != this) {
    e_tianxiafirststrongitem_list_.Swap(&other->e_tianxiafirststrongitem_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_TianxiafirstStrongitem::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_TianxiafirstStrongitem_descriptor_;
  metadata.reflection = Sheet_TianxiafirstStrongitem_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_TianxiafirstRefineAttDesc::kMNumFieldNumber;
const int E_TianxiafirstRefineAttDesc::kMIdFieldNumber;
#endif  // !_MSC_VER

E_TianxiafirstRefineAttDesc::E_TianxiafirstRefineAttDesc()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_TianxiafirstRefineAttDesc::InitAsDefaultInstance() {
}

E_TianxiafirstRefineAttDesc::E_TianxiafirstRefineAttDesc(const E_TianxiafirstRefineAttDesc& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_TianxiafirstRefineAttDesc::SharedCtor() {
  _cached_size_ = 0;
  m_num_ = 0;
  m_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_TianxiafirstRefineAttDesc::~E_TianxiafirstRefineAttDesc() {
  SharedDtor();
}

void E_TianxiafirstRefineAttDesc::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_TianxiafirstRefineAttDesc::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_TianxiafirstRefineAttDesc::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_TianxiafirstRefineAttDesc_descriptor_;
}

const E_TianxiafirstRefineAttDesc& E_TianxiafirstRefineAttDesc::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fTianxiafirst_2eproto();
  return *default_instance_;
}

E_TianxiafirstRefineAttDesc* E_TianxiafirstRefineAttDesc::default_instance_ = NULL;

E_TianxiafirstRefineAttDesc* E_TianxiafirstRefineAttDesc::New() const {
  return new E_TianxiafirstRefineAttDesc;
}

void E_TianxiafirstRefineAttDesc::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_num_ = 0;
    m_id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_TianxiafirstRefineAttDesc::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_num = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_num_)));
          set_has_m_num();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_id;
        break;
      }

      // optional int32 m_id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_id_)));
          set_has_m_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_TianxiafirstRefineAttDesc::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_num = 1;
  if (has_m_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_num(), output);
  }

  // optional int32 m_id = 2;
  if (has_m_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_TianxiafirstRefineAttDesc::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_num = 1;
  if (has_m_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_num(), target);
  }

  // optional int32 m_id = 2;
  if (has_m_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_TianxiafirstRefineAttDesc::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_num = 1;
    if (has_m_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_num());
    }

    // optional int32 m_id = 2;
    if (has_m_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_id());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_TianxiafirstRefineAttDesc::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_TianxiafirstRefineAttDesc* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_TianxiafirstRefineAttDesc*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_TianxiafirstRefineAttDesc::MergeFrom(const E_TianxiafirstRefineAttDesc& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_num()) {
      set_m_num(from.m_num());
    }
    if (from.has_m_id()) {
      set_m_id(from.m_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_TianxiafirstRefineAttDesc::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_TianxiafirstRefineAttDesc::CopyFrom(const E_TianxiafirstRefineAttDesc& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_TianxiafirstRefineAttDesc::IsInitialized() const {

  return true;
}

void E_TianxiafirstRefineAttDesc::Swap(E_TianxiafirstRefineAttDesc* other) {
  if (other != this) {
    std::swap(m_num_, other->m_num_);
    std::swap(m_id_, other->m_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_TianxiafirstRefineAttDesc::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_TianxiafirstRefineAttDesc_descriptor_;
  metadata.reflection = E_TianxiafirstRefineAttDesc_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_TianxiafirstRefine::kMIdFieldNumber;
const int E_TianxiafirstRefine::kMArtifactIdFieldNumber;
const int E_TianxiafirstRefine::kMStageFieldNumber;
const int E_TianxiafirstRefine::kMStarFieldNumber;
const int E_TianxiafirstRefine::kMSuccessFieldNumber;
const int E_TianxiafirstRefine::kMConsumeItemFieldNumber;
const int E_TianxiafirstRefine::kMConsumeNumFieldNumber;
const int E_TianxiafirstRefine::kMGuarantFieldNumber;
const int E_TianxiafirstRefine::kMAttFieldNumber;
#endif  // !_MSC_VER

E_TianxiafirstRefine::E_TianxiafirstRefine()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_TianxiafirstRefine::InitAsDefaultInstance() {
}

E_TianxiafirstRefine::E_TianxiafirstRefine(const E_TianxiafirstRefine& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_TianxiafirstRefine::SharedCtor() {
  _cached_size_ = 0;
  m_id_ = 0;
  m_artifactid_ = 0;
  m_stage_ = 0;
  m_star_ = 0;
  m_success_ = 0;
  m_consumeitem_ = 0;
  m_consumenum_ = 0;
  m_guarant_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_TianxiafirstRefine::~E_TianxiafirstRefine() {
  SharedDtor();
}

void E_TianxiafirstRefine::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_TianxiafirstRefine::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_TianxiafirstRefine::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_TianxiafirstRefine_descriptor_;
}

const E_TianxiafirstRefine& E_TianxiafirstRefine::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fTianxiafirst_2eproto();
  return *default_instance_;
}

E_TianxiafirstRefine* E_TianxiafirstRefine::default_instance_ = NULL;

E_TianxiafirstRefine* E_TianxiafirstRefine::New() const {
  return new E_TianxiafirstRefine;
}

void E_TianxiafirstRefine::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_id_ = 0;
    m_artifactid_ = 0;
    m_stage_ = 0;
    m_star_ = 0;
    m_success_ = 0;
    m_consumeitem_ = 0;
    m_consumenum_ = 0;
    m_guarant_ = 0;
  }
  m_att_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_TianxiafirstRefine::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_id_)));
          set_has_m_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_artifactId;
        break;
      }

      // optional int32 m_artifactId = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_artifactId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_artifactid_)));
          set_has_m_artifactid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_m_stage;
        break;
      }

      // optional int32 m_stage = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_stage:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_stage_)));
          set_has_m_stage();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_m_star;
        break;
      }

      // optional int32 m_star = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_star:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_star_)));
          set_has_m_star();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_m_success;
        break;
      }

      // optional int32 m_success = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_success:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_success_)));
          set_has_m_success();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_m_consumeItem;
        break;
      }

      // optional int32 m_consumeItem = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_consumeItem:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_consumeitem_)));
          set_has_m_consumeitem();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_m_consumeNum;
        break;
      }

      // optional int32 m_consumeNum = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_consumeNum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_consumenum_)));
          set_has_m_consumenum();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(64)) goto parse_m_guarant;
        break;
      }

      // optional int32 m_guarant = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_guarant:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_guarant_)));
          set_has_m_guarant();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(74)) goto parse_m_att;
        break;
      }

      // repeated .proto_ff.E_TianxiafirstRefineAttDesc m_att = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_att:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_m_att()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(74)) goto parse_m_att;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_TianxiafirstRefine::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_id(), output);
  }

  // optional int32 m_artifactId = 2;
  if (has_m_artifactid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_artifactid(), output);
  }

  // optional int32 m_stage = 3;
  if (has_m_stage()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->m_stage(), output);
  }

  // optional int32 m_star = 4;
  if (has_m_star()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->m_star(), output);
  }

  // optional int32 m_success = 5;
  if (has_m_success()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->m_success(), output);
  }

  // optional int32 m_consumeItem = 6;
  if (has_m_consumeitem()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->m_consumeitem(), output);
  }

  // optional int32 m_consumeNum = 7;
  if (has_m_consumenum()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->m_consumenum(), output);
  }

  // optional int32 m_guarant = 8;
  if (has_m_guarant()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->m_guarant(), output);
  }

  // repeated .proto_ff.E_TianxiafirstRefineAttDesc m_att = 9;
  for (int i = 0; i < this->m_att_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->m_att(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_TianxiafirstRefine::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_id(), target);
  }

  // optional int32 m_artifactId = 2;
  if (has_m_artifactid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_artifactid(), target);
  }

  // optional int32 m_stage = 3;
  if (has_m_stage()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->m_stage(), target);
  }

  // optional int32 m_star = 4;
  if (has_m_star()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->m_star(), target);
  }

  // optional int32 m_success = 5;
  if (has_m_success()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->m_success(), target);
  }

  // optional int32 m_consumeItem = 6;
  if (has_m_consumeitem()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->m_consumeitem(), target);
  }

  // optional int32 m_consumeNum = 7;
  if (has_m_consumenum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->m_consumenum(), target);
  }

  // optional int32 m_guarant = 8;
  if (has_m_guarant()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->m_guarant(), target);
  }

  // repeated .proto_ff.E_TianxiafirstRefineAttDesc m_att = 9;
  for (int i = 0; i < this->m_att_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        9, this->m_att(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_TianxiafirstRefine::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_id = 1;
    if (has_m_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_id());
    }

    // optional int32 m_artifactId = 2;
    if (has_m_artifactid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_artifactid());
    }

    // optional int32 m_stage = 3;
    if (has_m_stage()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_stage());
    }

    // optional int32 m_star = 4;
    if (has_m_star()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_star());
    }

    // optional int32 m_success = 5;
    if (has_m_success()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_success());
    }

    // optional int32 m_consumeItem = 6;
    if (has_m_consumeitem()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_consumeitem());
    }

    // optional int32 m_consumeNum = 7;
    if (has_m_consumenum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_consumenum());
    }

    // optional int32 m_guarant = 8;
    if (has_m_guarant()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_guarant());
    }

  }
  // repeated .proto_ff.E_TianxiafirstRefineAttDesc m_att = 9;
  total_size += 1 * this->m_att_size();
  for (int i = 0; i < this->m_att_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->m_att(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_TianxiafirstRefine::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_TianxiafirstRefine* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_TianxiafirstRefine*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_TianxiafirstRefine::MergeFrom(const E_TianxiafirstRefine& from) {
  GOOGLE_CHECK_NE(&from, this);
  m_att_.MergeFrom(from.m_att_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_id()) {
      set_m_id(from.m_id());
    }
    if (from.has_m_artifactid()) {
      set_m_artifactid(from.m_artifactid());
    }
    if (from.has_m_stage()) {
      set_m_stage(from.m_stage());
    }
    if (from.has_m_star()) {
      set_m_star(from.m_star());
    }
    if (from.has_m_success()) {
      set_m_success(from.m_success());
    }
    if (from.has_m_consumeitem()) {
      set_m_consumeitem(from.m_consumeitem());
    }
    if (from.has_m_consumenum()) {
      set_m_consumenum(from.m_consumenum());
    }
    if (from.has_m_guarant()) {
      set_m_guarant(from.m_guarant());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_TianxiafirstRefine::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_TianxiafirstRefine::CopyFrom(const E_TianxiafirstRefine& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_TianxiafirstRefine::IsInitialized() const {

  return true;
}

void E_TianxiafirstRefine::Swap(E_TianxiafirstRefine* other) {
  if (other != this) {
    std::swap(m_id_, other->m_id_);
    std::swap(m_artifactid_, other->m_artifactid_);
    std::swap(m_stage_, other->m_stage_);
    std::swap(m_star_, other->m_star_);
    std::swap(m_success_, other->m_success_);
    std::swap(m_consumeitem_, other->m_consumeitem_);
    std::swap(m_consumenum_, other->m_consumenum_);
    std::swap(m_guarant_, other->m_guarant_);
    m_att_.Swap(&other->m_att_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_TianxiafirstRefine::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_TianxiafirstRefine_descriptor_;
  metadata.reflection = E_TianxiafirstRefine_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_TianxiafirstRefine::kETianxiafirstRefineListFieldNumber;
#endif  // !_MSC_VER

Sheet_TianxiafirstRefine::Sheet_TianxiafirstRefine()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_TianxiafirstRefine::InitAsDefaultInstance() {
}

Sheet_TianxiafirstRefine::Sheet_TianxiafirstRefine(const Sheet_TianxiafirstRefine& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_TianxiafirstRefine::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_TianxiafirstRefine::~Sheet_TianxiafirstRefine() {
  SharedDtor();
}

void Sheet_TianxiafirstRefine::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_TianxiafirstRefine::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_TianxiafirstRefine::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_TianxiafirstRefine_descriptor_;
}

const Sheet_TianxiafirstRefine& Sheet_TianxiafirstRefine::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fTianxiafirst_2eproto();
  return *default_instance_;
}

Sheet_TianxiafirstRefine* Sheet_TianxiafirstRefine::default_instance_ = NULL;

Sheet_TianxiafirstRefine* Sheet_TianxiafirstRefine::New() const {
  return new Sheet_TianxiafirstRefine;
}

void Sheet_TianxiafirstRefine::Clear() {
  e_tianxiafirstrefine_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_TianxiafirstRefine::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.E_TianxiafirstRefine E_TianxiafirstRefine_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_E_TianxiafirstRefine_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_e_tianxiafirstrefine_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_E_TianxiafirstRefine_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_TianxiafirstRefine::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.E_TianxiafirstRefine E_TianxiafirstRefine_List = 1;
  for (int i = 0; i < this->e_tianxiafirstrefine_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->e_tianxiafirstrefine_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_TianxiafirstRefine::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.E_TianxiafirstRefine E_TianxiafirstRefine_List = 1;
  for (int i = 0; i < this->e_tianxiafirstrefine_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->e_tianxiafirstrefine_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_TianxiafirstRefine::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.E_TianxiafirstRefine E_TianxiafirstRefine_List = 1;
  total_size += 1 * this->e_tianxiafirstrefine_list_size();
  for (int i = 0; i < this->e_tianxiafirstrefine_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->e_tianxiafirstrefine_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_TianxiafirstRefine::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_TianxiafirstRefine* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_TianxiafirstRefine*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_TianxiafirstRefine::MergeFrom(const Sheet_TianxiafirstRefine& from) {
  GOOGLE_CHECK_NE(&from, this);
  e_tianxiafirstrefine_list_.MergeFrom(from.e_tianxiafirstrefine_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_TianxiafirstRefine::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_TianxiafirstRefine::CopyFrom(const Sheet_TianxiafirstRefine& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_TianxiafirstRefine::IsInitialized() const {

  return true;
}

void Sheet_TianxiafirstRefine::Swap(Sheet_TianxiafirstRefine* other) {
  if (other != this) {
    e_tianxiafirstrefine_list_.Swap(&other->e_tianxiafirstrefine_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_TianxiafirstRefine::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_TianxiafirstRefine_descriptor_;
  metadata.reflection = Sheet_TianxiafirstRefine_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_TianxiafirstSqskill::kMIdFieldNumber;
const int E_TianxiafirstSqskill::kMArtifactIdFieldNumber;
const int E_TianxiafirstSqskill::kMSkillIdFieldNumber;
const int E_TianxiafirstSqskill::kMLevelFieldNumber;
const int E_TianxiafirstSqskill::kMConditionFieldNumber;
const int E_TianxiafirstSqskill::kMScoreFieldNumber;
#endif  // !_MSC_VER

E_TianxiafirstSqskill::E_TianxiafirstSqskill()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_TianxiafirstSqskill::InitAsDefaultInstance() {
}

E_TianxiafirstSqskill::E_TianxiafirstSqskill(const E_TianxiafirstSqskill& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_TianxiafirstSqskill::SharedCtor() {
  _cached_size_ = 0;
  m_id_ = 0;
  m_artifactid_ = 0;
  m_skillid_ = 0;
  m_level_ = 0;
  m_condition_ = 0;
  m_score_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_TianxiafirstSqskill::~E_TianxiafirstSqskill() {
  SharedDtor();
}

void E_TianxiafirstSqskill::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_TianxiafirstSqskill::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_TianxiafirstSqskill::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_TianxiafirstSqskill_descriptor_;
}

const E_TianxiafirstSqskill& E_TianxiafirstSqskill::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fTianxiafirst_2eproto();
  return *default_instance_;
}

E_TianxiafirstSqskill* E_TianxiafirstSqskill::default_instance_ = NULL;

E_TianxiafirstSqskill* E_TianxiafirstSqskill::New() const {
  return new E_TianxiafirstSqskill;
}

void E_TianxiafirstSqskill::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_id_ = 0;
    m_artifactid_ = 0;
    m_skillid_ = 0;
    m_level_ = 0;
    m_condition_ = 0;
    m_score_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_TianxiafirstSqskill::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_id_)));
          set_has_m_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_artifactId;
        break;
      }

      // optional int32 m_artifactId = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_artifactId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_artifactid_)));
          set_has_m_artifactid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_m_skillId;
        break;
      }

      // optional int32 m_skillId = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_skillId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_skillid_)));
          set_has_m_skillid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_m_level;
        break;
      }

      // optional int32 m_level = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_level:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_level_)));
          set_has_m_level();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_m_condition;
        break;
      }

      // optional int32 m_condition = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_condition:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_condition_)));
          set_has_m_condition();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_m_score;
        break;
      }

      // optional int32 m_score = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_score:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_score_)));
          set_has_m_score();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_TianxiafirstSqskill::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_id(), output);
  }

  // optional int32 m_artifactId = 2;
  if (has_m_artifactid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_artifactid(), output);
  }

  // optional int32 m_skillId = 3;
  if (has_m_skillid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->m_skillid(), output);
  }

  // optional int32 m_level = 4;
  if (has_m_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->m_level(), output);
  }

  // optional int32 m_condition = 5;
  if (has_m_condition()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->m_condition(), output);
  }

  // optional int32 m_score = 6;
  if (has_m_score()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->m_score(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_TianxiafirstSqskill::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_id(), target);
  }

  // optional int32 m_artifactId = 2;
  if (has_m_artifactid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_artifactid(), target);
  }

  // optional int32 m_skillId = 3;
  if (has_m_skillid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->m_skillid(), target);
  }

  // optional int32 m_level = 4;
  if (has_m_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->m_level(), target);
  }

  // optional int32 m_condition = 5;
  if (has_m_condition()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->m_condition(), target);
  }

  // optional int32 m_score = 6;
  if (has_m_score()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->m_score(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_TianxiafirstSqskill::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_id = 1;
    if (has_m_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_id());
    }

    // optional int32 m_artifactId = 2;
    if (has_m_artifactid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_artifactid());
    }

    // optional int32 m_skillId = 3;
    if (has_m_skillid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_skillid());
    }

    // optional int32 m_level = 4;
    if (has_m_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_level());
    }

    // optional int32 m_condition = 5;
    if (has_m_condition()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_condition());
    }

    // optional int32 m_score = 6;
    if (has_m_score()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_score());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_TianxiafirstSqskill::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_TianxiafirstSqskill* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_TianxiafirstSqskill*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_TianxiafirstSqskill::MergeFrom(const E_TianxiafirstSqskill& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_id()) {
      set_m_id(from.m_id());
    }
    if (from.has_m_artifactid()) {
      set_m_artifactid(from.m_artifactid());
    }
    if (from.has_m_skillid()) {
      set_m_skillid(from.m_skillid());
    }
    if (from.has_m_level()) {
      set_m_level(from.m_level());
    }
    if (from.has_m_condition()) {
      set_m_condition(from.m_condition());
    }
    if (from.has_m_score()) {
      set_m_score(from.m_score());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_TianxiafirstSqskill::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_TianxiafirstSqskill::CopyFrom(const E_TianxiafirstSqskill& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_TianxiafirstSqskill::IsInitialized() const {

  return true;
}

void E_TianxiafirstSqskill::Swap(E_TianxiafirstSqskill* other) {
  if (other != this) {
    std::swap(m_id_, other->m_id_);
    std::swap(m_artifactid_, other->m_artifactid_);
    std::swap(m_skillid_, other->m_skillid_);
    std::swap(m_level_, other->m_level_);
    std::swap(m_condition_, other->m_condition_);
    std::swap(m_score_, other->m_score_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_TianxiafirstSqskill::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_TianxiafirstSqskill_descriptor_;
  metadata.reflection = E_TianxiafirstSqskill_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_TianxiafirstSqskill::kETianxiafirstSqskillListFieldNumber;
#endif  // !_MSC_VER

Sheet_TianxiafirstSqskill::Sheet_TianxiafirstSqskill()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_TianxiafirstSqskill::InitAsDefaultInstance() {
}

Sheet_TianxiafirstSqskill::Sheet_TianxiafirstSqskill(const Sheet_TianxiafirstSqskill& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_TianxiafirstSqskill::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_TianxiafirstSqskill::~Sheet_TianxiafirstSqskill() {
  SharedDtor();
}

void Sheet_TianxiafirstSqskill::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_TianxiafirstSqskill::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_TianxiafirstSqskill::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_TianxiafirstSqskill_descriptor_;
}

const Sheet_TianxiafirstSqskill& Sheet_TianxiafirstSqskill::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fTianxiafirst_2eproto();
  return *default_instance_;
}

Sheet_TianxiafirstSqskill* Sheet_TianxiafirstSqskill::default_instance_ = NULL;

Sheet_TianxiafirstSqskill* Sheet_TianxiafirstSqskill::New() const {
  return new Sheet_TianxiafirstSqskill;
}

void Sheet_TianxiafirstSqskill::Clear() {
  e_tianxiafirstsqskill_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_TianxiafirstSqskill::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.E_TianxiafirstSqskill E_TianxiafirstSqskill_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_E_TianxiafirstSqskill_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_e_tianxiafirstsqskill_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_E_TianxiafirstSqskill_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_TianxiafirstSqskill::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.E_TianxiafirstSqskill E_TianxiafirstSqskill_List = 1;
  for (int i = 0; i < this->e_tianxiafirstsqskill_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->e_tianxiafirstsqskill_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_TianxiafirstSqskill::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.E_TianxiafirstSqskill E_TianxiafirstSqskill_List = 1;
  for (int i = 0; i < this->e_tianxiafirstsqskill_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->e_tianxiafirstsqskill_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_TianxiafirstSqskill::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.E_TianxiafirstSqskill E_TianxiafirstSqskill_List = 1;
  total_size += 1 * this->e_tianxiafirstsqskill_list_size();
  for (int i = 0; i < this->e_tianxiafirstsqskill_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->e_tianxiafirstsqskill_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_TianxiafirstSqskill::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_TianxiafirstSqskill* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_TianxiafirstSqskill*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_TianxiafirstSqskill::MergeFrom(const Sheet_TianxiafirstSqskill& from) {
  GOOGLE_CHECK_NE(&from, this);
  e_tianxiafirstsqskill_list_.MergeFrom(from.e_tianxiafirstsqskill_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_TianxiafirstSqskill::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_TianxiafirstSqskill::CopyFrom(const Sheet_TianxiafirstSqskill& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_TianxiafirstSqskill::IsInitialized() const {

  return true;
}

void Sheet_TianxiafirstSqskill::Swap(Sheet_TianxiafirstSqskill* other) {
  if (other != this) {
    e_tianxiafirstsqskill_list_.Swap(&other->e_tianxiafirstsqskill_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_TianxiafirstSqskill::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_TianxiafirstSqskill_descriptor_;
  metadata.reflection = Sheet_TianxiafirstSqskill_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_TianxiafirstGrade::kMIdFieldNumber;
const int E_TianxiafirstGrade::kMGradeFieldNumber;
const int E_TianxiafirstGrade::kMNameFieldNumber;
const int E_TianxiafirstGrade::kMStarFieldNumber;
const int E_TianxiafirstGrade::kMScoreFieldNumber;
const int E_TianxiafirstGrade::kMScoreAddFieldNumber;
const int E_TianxiafirstGrade::kMScoringSubFieldNumber;
const int E_TianxiafirstGrade::kMTimeFieldNumber;
const int E_TianxiafirstGrade::kMDownLimitFieldNumber;
const int E_TianxiafirstGrade::kMUpLimitFieldNumber;
const int E_TianxiafirstGrade::kMSubstituteTimeFieldNumber;
#endif  // !_MSC_VER

E_TianxiafirstGrade::E_TianxiafirstGrade()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_TianxiafirstGrade::InitAsDefaultInstance() {
}

E_TianxiafirstGrade::E_TianxiafirstGrade(const E_TianxiafirstGrade& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_TianxiafirstGrade::SharedCtor() {
  _cached_size_ = 0;
  m_id_ = 0;
  m_grade_ = 0;
  m_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  m_star_ = 0;
  m_score_ = 0;
  m_scoreadd_ = 0;
  m_scoringsub_ = 0;
  m_time_ = 0;
  m_downlimit_ = 0;
  m_uplimit_ = 0;
  m_substitutetime_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_TianxiafirstGrade::~E_TianxiafirstGrade() {
  SharedDtor();
}

void E_TianxiafirstGrade::SharedDtor() {
  if (m_name_ != &::google::protobuf::internal::kEmptyString) {
    delete m_name_;
  }
  if (this != default_instance_) {
  }
}

void E_TianxiafirstGrade::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_TianxiafirstGrade::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_TianxiafirstGrade_descriptor_;
}

const E_TianxiafirstGrade& E_TianxiafirstGrade::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fTianxiafirst_2eproto();
  return *default_instance_;
}

E_TianxiafirstGrade* E_TianxiafirstGrade::default_instance_ = NULL;

E_TianxiafirstGrade* E_TianxiafirstGrade::New() const {
  return new E_TianxiafirstGrade;
}

void E_TianxiafirstGrade::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_id_ = 0;
    m_grade_ = 0;
    if (has_m_name()) {
      if (m_name_ != &::google::protobuf::internal::kEmptyString) {
        m_name_->clear();
      }
    }
    m_star_ = 0;
    m_score_ = 0;
    m_scoreadd_ = 0;
    m_scoringsub_ = 0;
    m_time_ = 0;
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    m_downlimit_ = 0;
    m_uplimit_ = 0;
    m_substitutetime_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_TianxiafirstGrade::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_id_)));
          set_has_m_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_grade;
        break;
      }

      // optional int32 m_grade = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_grade:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_grade_)));
          set_has_m_grade();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_m_name;
        break;
      }

      // optional string m_name = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_m_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->m_name().data(), this->m_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_m_star;
        break;
      }

      // optional int32 m_star = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_star:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_star_)));
          set_has_m_star();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_m_score;
        break;
      }

      // optional int32 m_score = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_score:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_score_)));
          set_has_m_score();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_m_scoreAdd;
        break;
      }

      // optional int32 m_scoreAdd = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_scoreAdd:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_scoreadd_)));
          set_has_m_scoreadd();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_m_scoringSub;
        break;
      }

      // optional int32 m_scoringSub = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_scoringSub:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_scoringsub_)));
          set_has_m_scoringsub();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(64)) goto parse_m_Time;
        break;
      }

      // optional int32 m_Time = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_Time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_time_)));
          set_has_m_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(72)) goto parse_m_downLimit;
        break;
      }

      // optional int32 m_downLimit = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_downLimit:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_downlimit_)));
          set_has_m_downlimit();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(80)) goto parse_m_upLimit;
        break;
      }

      // optional int32 m_upLimit = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_upLimit:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_uplimit_)));
          set_has_m_uplimit();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(88)) goto parse_m_substituteTime;
        break;
      }

      // optional int32 m_substituteTime = 11;
      case 11: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_substituteTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_substitutetime_)));
          set_has_m_substitutetime();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_TianxiafirstGrade::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_id(), output);
  }

  // optional int32 m_grade = 2;
  if (has_m_grade()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_grade(), output);
  }

  // optional string m_name = 3;
  if (has_m_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_name().data(), this->m_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->m_name(), output);
  }

  // optional int32 m_star = 4;
  if (has_m_star()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->m_star(), output);
  }

  // optional int32 m_score = 5;
  if (has_m_score()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->m_score(), output);
  }

  // optional int32 m_scoreAdd = 6;
  if (has_m_scoreadd()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->m_scoreadd(), output);
  }

  // optional int32 m_scoringSub = 7;
  if (has_m_scoringsub()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->m_scoringsub(), output);
  }

  // optional int32 m_Time = 8;
  if (has_m_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->m_time(), output);
  }

  // optional int32 m_downLimit = 9;
  if (has_m_downlimit()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->m_downlimit(), output);
  }

  // optional int32 m_upLimit = 10;
  if (has_m_uplimit()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->m_uplimit(), output);
  }

  // optional int32 m_substituteTime = 11;
  if (has_m_substitutetime()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->m_substitutetime(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_TianxiafirstGrade::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_id(), target);
  }

  // optional int32 m_grade = 2;
  if (has_m_grade()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_grade(), target);
  }

  // optional string m_name = 3;
  if (has_m_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_name().data(), this->m_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->m_name(), target);
  }

  // optional int32 m_star = 4;
  if (has_m_star()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->m_star(), target);
  }

  // optional int32 m_score = 5;
  if (has_m_score()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->m_score(), target);
  }

  // optional int32 m_scoreAdd = 6;
  if (has_m_scoreadd()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->m_scoreadd(), target);
  }

  // optional int32 m_scoringSub = 7;
  if (has_m_scoringsub()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->m_scoringsub(), target);
  }

  // optional int32 m_Time = 8;
  if (has_m_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->m_time(), target);
  }

  // optional int32 m_downLimit = 9;
  if (has_m_downlimit()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->m_downlimit(), target);
  }

  // optional int32 m_upLimit = 10;
  if (has_m_uplimit()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->m_uplimit(), target);
  }

  // optional int32 m_substituteTime = 11;
  if (has_m_substitutetime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->m_substitutetime(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_TianxiafirstGrade::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_id = 1;
    if (has_m_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_id());
    }

    // optional int32 m_grade = 2;
    if (has_m_grade()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_grade());
    }

    // optional string m_name = 3;
    if (has_m_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->m_name());
    }

    // optional int32 m_star = 4;
    if (has_m_star()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_star());
    }

    // optional int32 m_score = 5;
    if (has_m_score()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_score());
    }

    // optional int32 m_scoreAdd = 6;
    if (has_m_scoreadd()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_scoreadd());
    }

    // optional int32 m_scoringSub = 7;
    if (has_m_scoringsub()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_scoringsub());
    }

    // optional int32 m_Time = 8;
    if (has_m_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_time());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional int32 m_downLimit = 9;
    if (has_m_downlimit()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_downlimit());
    }

    // optional int32 m_upLimit = 10;
    if (has_m_uplimit()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_uplimit());
    }

    // optional int32 m_substituteTime = 11;
    if (has_m_substitutetime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_substitutetime());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_TianxiafirstGrade::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_TianxiafirstGrade* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_TianxiafirstGrade*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_TianxiafirstGrade::MergeFrom(const E_TianxiafirstGrade& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_id()) {
      set_m_id(from.m_id());
    }
    if (from.has_m_grade()) {
      set_m_grade(from.m_grade());
    }
    if (from.has_m_name()) {
      set_m_name(from.m_name());
    }
    if (from.has_m_star()) {
      set_m_star(from.m_star());
    }
    if (from.has_m_score()) {
      set_m_score(from.m_score());
    }
    if (from.has_m_scoreadd()) {
      set_m_scoreadd(from.m_scoreadd());
    }
    if (from.has_m_scoringsub()) {
      set_m_scoringsub(from.m_scoringsub());
    }
    if (from.has_m_time()) {
      set_m_time(from.m_time());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_m_downlimit()) {
      set_m_downlimit(from.m_downlimit());
    }
    if (from.has_m_uplimit()) {
      set_m_uplimit(from.m_uplimit());
    }
    if (from.has_m_substitutetime()) {
      set_m_substitutetime(from.m_substitutetime());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_TianxiafirstGrade::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_TianxiafirstGrade::CopyFrom(const E_TianxiafirstGrade& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_TianxiafirstGrade::IsInitialized() const {

  return true;
}

void E_TianxiafirstGrade::Swap(E_TianxiafirstGrade* other) {
  if (other != this) {
    std::swap(m_id_, other->m_id_);
    std::swap(m_grade_, other->m_grade_);
    std::swap(m_name_, other->m_name_);
    std::swap(m_star_, other->m_star_);
    std::swap(m_score_, other->m_score_);
    std::swap(m_scoreadd_, other->m_scoreadd_);
    std::swap(m_scoringsub_, other->m_scoringsub_);
    std::swap(m_time_, other->m_time_);
    std::swap(m_downlimit_, other->m_downlimit_);
    std::swap(m_uplimit_, other->m_uplimit_);
    std::swap(m_substitutetime_, other->m_substitutetime_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_TianxiafirstGrade::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_TianxiafirstGrade_descriptor_;
  metadata.reflection = E_TianxiafirstGrade_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_TianxiafirstGrade::kETianxiafirstGradeListFieldNumber;
#endif  // !_MSC_VER

Sheet_TianxiafirstGrade::Sheet_TianxiafirstGrade()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_TianxiafirstGrade::InitAsDefaultInstance() {
}

Sheet_TianxiafirstGrade::Sheet_TianxiafirstGrade(const Sheet_TianxiafirstGrade& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_TianxiafirstGrade::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_TianxiafirstGrade::~Sheet_TianxiafirstGrade() {
  SharedDtor();
}

void Sheet_TianxiafirstGrade::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_TianxiafirstGrade::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_TianxiafirstGrade::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_TianxiafirstGrade_descriptor_;
}

const Sheet_TianxiafirstGrade& Sheet_TianxiafirstGrade::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fTianxiafirst_2eproto();
  return *default_instance_;
}

Sheet_TianxiafirstGrade* Sheet_TianxiafirstGrade::default_instance_ = NULL;

Sheet_TianxiafirstGrade* Sheet_TianxiafirstGrade::New() const {
  return new Sheet_TianxiafirstGrade;
}

void Sheet_TianxiafirstGrade::Clear() {
  e_tianxiafirstgrade_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_TianxiafirstGrade::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.E_TianxiafirstGrade E_TianxiafirstGrade_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_E_TianxiafirstGrade_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_e_tianxiafirstgrade_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_E_TianxiafirstGrade_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_TianxiafirstGrade::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.E_TianxiafirstGrade E_TianxiafirstGrade_List = 1;
  for (int i = 0; i < this->e_tianxiafirstgrade_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->e_tianxiafirstgrade_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_TianxiafirstGrade::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.E_TianxiafirstGrade E_TianxiafirstGrade_List = 1;
  for (int i = 0; i < this->e_tianxiafirstgrade_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->e_tianxiafirstgrade_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_TianxiafirstGrade::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.E_TianxiafirstGrade E_TianxiafirstGrade_List = 1;
  total_size += 1 * this->e_tianxiafirstgrade_list_size();
  for (int i = 0; i < this->e_tianxiafirstgrade_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->e_tianxiafirstgrade_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_TianxiafirstGrade::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_TianxiafirstGrade* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_TianxiafirstGrade*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_TianxiafirstGrade::MergeFrom(const Sheet_TianxiafirstGrade& from) {
  GOOGLE_CHECK_NE(&from, this);
  e_tianxiafirstgrade_list_.MergeFrom(from.e_tianxiafirstgrade_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_TianxiafirstGrade::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_TianxiafirstGrade::CopyFrom(const Sheet_TianxiafirstGrade& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_TianxiafirstGrade::IsInitialized() const {

  return true;
}

void Sheet_TianxiafirstGrade::Swap(Sheet_TianxiafirstGrade* other) {
  if (other != this) {
    e_tianxiafirstgrade_list_.Swap(&other->e_tianxiafirstgrade_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_TianxiafirstGrade::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_TianxiafirstGrade_descriptor_;
  metadata.reflection = Sheet_TianxiafirstGrade_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_TianxiafirstGraderewardRewardDesc::kMNumFieldNumber;
const int E_TianxiafirstGraderewardRewardDesc::kMIDFieldNumber;
#endif  // !_MSC_VER

E_TianxiafirstGraderewardRewardDesc::E_TianxiafirstGraderewardRewardDesc()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_TianxiafirstGraderewardRewardDesc::InitAsDefaultInstance() {
}

E_TianxiafirstGraderewardRewardDesc::E_TianxiafirstGraderewardRewardDesc(const E_TianxiafirstGraderewardRewardDesc& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_TianxiafirstGraderewardRewardDesc::SharedCtor() {
  _cached_size_ = 0;
  m_num_ = 0;
  m_id_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_TianxiafirstGraderewardRewardDesc::~E_TianxiafirstGraderewardRewardDesc() {
  SharedDtor();
}

void E_TianxiafirstGraderewardRewardDesc::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_TianxiafirstGraderewardRewardDesc::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_TianxiafirstGraderewardRewardDesc::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_TianxiafirstGraderewardRewardDesc_descriptor_;
}

const E_TianxiafirstGraderewardRewardDesc& E_TianxiafirstGraderewardRewardDesc::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fTianxiafirst_2eproto();
  return *default_instance_;
}

E_TianxiafirstGraderewardRewardDesc* E_TianxiafirstGraderewardRewardDesc::default_instance_ = NULL;

E_TianxiafirstGraderewardRewardDesc* E_TianxiafirstGraderewardRewardDesc::New() const {
  return new E_TianxiafirstGraderewardRewardDesc;
}

void E_TianxiafirstGraderewardRewardDesc::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_num_ = 0;
    m_id_ = GOOGLE_LONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_TianxiafirstGraderewardRewardDesc::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_Num = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_num_)));
          set_has_m_num();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_ID;
        break;
      }

      // optional int64 m_ID = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_ID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &m_id_)));
          set_has_m_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_TianxiafirstGraderewardRewardDesc::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_Num = 1;
  if (has_m_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_num(), output);
  }

  // optional int64 m_ID = 2;
  if (has_m_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->m_id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_TianxiafirstGraderewardRewardDesc::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_Num = 1;
  if (has_m_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_num(), target);
  }

  // optional int64 m_ID = 2;
  if (has_m_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->m_id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_TianxiafirstGraderewardRewardDesc::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_Num = 1;
    if (has_m_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_num());
    }

    // optional int64 m_ID = 2;
    if (has_m_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->m_id());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_TianxiafirstGraderewardRewardDesc::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_TianxiafirstGraderewardRewardDesc* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_TianxiafirstGraderewardRewardDesc*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_TianxiafirstGraderewardRewardDesc::MergeFrom(const E_TianxiafirstGraderewardRewardDesc& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_num()) {
      set_m_num(from.m_num());
    }
    if (from.has_m_id()) {
      set_m_id(from.m_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_TianxiafirstGraderewardRewardDesc::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_TianxiafirstGraderewardRewardDesc::CopyFrom(const E_TianxiafirstGraderewardRewardDesc& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_TianxiafirstGraderewardRewardDesc::IsInitialized() const {

  return true;
}

void E_TianxiafirstGraderewardRewardDesc::Swap(E_TianxiafirstGraderewardRewardDesc* other) {
  if (other != this) {
    std::swap(m_num_, other->m_num_);
    std::swap(m_id_, other->m_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_TianxiafirstGraderewardRewardDesc::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_TianxiafirstGraderewardRewardDesc_descriptor_;
  metadata.reflection = E_TianxiafirstGraderewardRewardDesc_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_TianxiafirstGradereward::kMIdFieldNumber;
const int E_TianxiafirstGradereward::kMScoreMinFieldNumber;
const int E_TianxiafirstGradereward::kMMatchTimesFieldNumber;
const int E_TianxiafirstGradereward::kMRewardFieldNumber;
#endif  // !_MSC_VER

E_TianxiafirstGradereward::E_TianxiafirstGradereward()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_TianxiafirstGradereward::InitAsDefaultInstance() {
}

E_TianxiafirstGradereward::E_TianxiafirstGradereward(const E_TianxiafirstGradereward& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_TianxiafirstGradereward::SharedCtor() {
  _cached_size_ = 0;
  m_id_ = 0;
  m_scoremin_ = 0;
  m_matchtimes_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_TianxiafirstGradereward::~E_TianxiafirstGradereward() {
  SharedDtor();
}

void E_TianxiafirstGradereward::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_TianxiafirstGradereward::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_TianxiafirstGradereward::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_TianxiafirstGradereward_descriptor_;
}

const E_TianxiafirstGradereward& E_TianxiafirstGradereward::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fTianxiafirst_2eproto();
  return *default_instance_;
}

E_TianxiafirstGradereward* E_TianxiafirstGradereward::default_instance_ = NULL;

E_TianxiafirstGradereward* E_TianxiafirstGradereward::New() const {
  return new E_TianxiafirstGradereward;
}

void E_TianxiafirstGradereward::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_id_ = 0;
    m_scoremin_ = 0;
    m_matchtimes_ = 0;
  }
  m_reward_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_TianxiafirstGradereward::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_id_)));
          set_has_m_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_scoreMin;
        break;
      }

      // optional int32 m_scoreMin = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_scoreMin:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_scoremin_)));
          set_has_m_scoremin();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_m_matchTimes;
        break;
      }

      // optional int32 m_matchTimes = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_matchTimes:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_matchtimes_)));
          set_has_m_matchtimes();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_m_reward;
        break;
      }

      // repeated .proto_ff.E_TianxiafirstGraderewardRewardDesc m_reward = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_reward:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_m_reward()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_m_reward;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_TianxiafirstGradereward::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_id(), output);
  }

  // optional int32 m_scoreMin = 2;
  if (has_m_scoremin()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_scoremin(), output);
  }

  // optional int32 m_matchTimes = 3;
  if (has_m_matchtimes()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->m_matchtimes(), output);
  }

  // repeated .proto_ff.E_TianxiafirstGraderewardRewardDesc m_reward = 4;
  for (int i = 0; i < this->m_reward_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->m_reward(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_TianxiafirstGradereward::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_id(), target);
  }

  // optional int32 m_scoreMin = 2;
  if (has_m_scoremin()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_scoremin(), target);
  }

  // optional int32 m_matchTimes = 3;
  if (has_m_matchtimes()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->m_matchtimes(), target);
  }

  // repeated .proto_ff.E_TianxiafirstGraderewardRewardDesc m_reward = 4;
  for (int i = 0; i < this->m_reward_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->m_reward(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_TianxiafirstGradereward::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_id = 1;
    if (has_m_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_id());
    }

    // optional int32 m_scoreMin = 2;
    if (has_m_scoremin()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_scoremin());
    }

    // optional int32 m_matchTimes = 3;
    if (has_m_matchtimes()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_matchtimes());
    }

  }
  // repeated .proto_ff.E_TianxiafirstGraderewardRewardDesc m_reward = 4;
  total_size += 1 * this->m_reward_size();
  for (int i = 0; i < this->m_reward_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->m_reward(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_TianxiafirstGradereward::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_TianxiafirstGradereward* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_TianxiafirstGradereward*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_TianxiafirstGradereward::MergeFrom(const E_TianxiafirstGradereward& from) {
  GOOGLE_CHECK_NE(&from, this);
  m_reward_.MergeFrom(from.m_reward_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_id()) {
      set_m_id(from.m_id());
    }
    if (from.has_m_scoremin()) {
      set_m_scoremin(from.m_scoremin());
    }
    if (from.has_m_matchtimes()) {
      set_m_matchtimes(from.m_matchtimes());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_TianxiafirstGradereward::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_TianxiafirstGradereward::CopyFrom(const E_TianxiafirstGradereward& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_TianxiafirstGradereward::IsInitialized() const {

  return true;
}

void E_TianxiafirstGradereward::Swap(E_TianxiafirstGradereward* other) {
  if (other != this) {
    std::swap(m_id_, other->m_id_);
    std::swap(m_scoremin_, other->m_scoremin_);
    std::swap(m_matchtimes_, other->m_matchtimes_);
    m_reward_.Swap(&other->m_reward_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_TianxiafirstGradereward::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_TianxiafirstGradereward_descriptor_;
  metadata.reflection = E_TianxiafirstGradereward_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_TianxiafirstGradereward::kETianxiafirstGraderewardListFieldNumber;
#endif  // !_MSC_VER

Sheet_TianxiafirstGradereward::Sheet_TianxiafirstGradereward()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_TianxiafirstGradereward::InitAsDefaultInstance() {
}

Sheet_TianxiafirstGradereward::Sheet_TianxiafirstGradereward(const Sheet_TianxiafirstGradereward& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_TianxiafirstGradereward::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_TianxiafirstGradereward::~Sheet_TianxiafirstGradereward() {
  SharedDtor();
}

void Sheet_TianxiafirstGradereward::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_TianxiafirstGradereward::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_TianxiafirstGradereward::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_TianxiafirstGradereward_descriptor_;
}

const Sheet_TianxiafirstGradereward& Sheet_TianxiafirstGradereward::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fTianxiafirst_2eproto();
  return *default_instance_;
}

Sheet_TianxiafirstGradereward* Sheet_TianxiafirstGradereward::default_instance_ = NULL;

Sheet_TianxiafirstGradereward* Sheet_TianxiafirstGradereward::New() const {
  return new Sheet_TianxiafirstGradereward;
}

void Sheet_TianxiafirstGradereward::Clear() {
  e_tianxiafirstgradereward_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_TianxiafirstGradereward::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.E_TianxiafirstGradereward E_TianxiafirstGradereward_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_E_TianxiafirstGradereward_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_e_tianxiafirstgradereward_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_E_TianxiafirstGradereward_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_TianxiafirstGradereward::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.E_TianxiafirstGradereward E_TianxiafirstGradereward_List = 1;
  for (int i = 0; i < this->e_tianxiafirstgradereward_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->e_tianxiafirstgradereward_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_TianxiafirstGradereward::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.E_TianxiafirstGradereward E_TianxiafirstGradereward_List = 1;
  for (int i = 0; i < this->e_tianxiafirstgradereward_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->e_tianxiafirstgradereward_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_TianxiafirstGradereward::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.E_TianxiafirstGradereward E_TianxiafirstGradereward_List = 1;
  total_size += 1 * this->e_tianxiafirstgradereward_list_size();
  for (int i = 0; i < this->e_tianxiafirstgradereward_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->e_tianxiafirstgradereward_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_TianxiafirstGradereward::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_TianxiafirstGradereward* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_TianxiafirstGradereward*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_TianxiafirstGradereward::MergeFrom(const Sheet_TianxiafirstGradereward& from) {
  GOOGLE_CHECK_NE(&from, this);
  e_tianxiafirstgradereward_list_.MergeFrom(from.e_tianxiafirstgradereward_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_TianxiafirstGradereward::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_TianxiafirstGradereward::CopyFrom(const Sheet_TianxiafirstGradereward& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_TianxiafirstGradereward::IsInitialized() const {

  return true;
}

void Sheet_TianxiafirstGradereward::Swap(Sheet_TianxiafirstGradereward* other) {
  if (other != this) {
    e_tianxiafirstgradereward_list_.Swap(&other->e_tianxiafirstgradereward_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_TianxiafirstGradereward::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_TianxiafirstGradereward_descriptor_;
  metadata.reflection = Sheet_TianxiafirstGradereward_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_TianxiafirstRankrewardRewardDesc::kMNumFieldNumber;
const int E_TianxiafirstRankrewardRewardDesc::kMIDFieldNumber;
#endif  // !_MSC_VER

E_TianxiafirstRankrewardRewardDesc::E_TianxiafirstRankrewardRewardDesc()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_TianxiafirstRankrewardRewardDesc::InitAsDefaultInstance() {
}

E_TianxiafirstRankrewardRewardDesc::E_TianxiafirstRankrewardRewardDesc(const E_TianxiafirstRankrewardRewardDesc& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_TianxiafirstRankrewardRewardDesc::SharedCtor() {
  _cached_size_ = 0;
  m_num_ = 0;
  m_id_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_TianxiafirstRankrewardRewardDesc::~E_TianxiafirstRankrewardRewardDesc() {
  SharedDtor();
}

void E_TianxiafirstRankrewardRewardDesc::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_TianxiafirstRankrewardRewardDesc::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_TianxiafirstRankrewardRewardDesc::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_TianxiafirstRankrewardRewardDesc_descriptor_;
}

const E_TianxiafirstRankrewardRewardDesc& E_TianxiafirstRankrewardRewardDesc::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fTianxiafirst_2eproto();
  return *default_instance_;
}

E_TianxiafirstRankrewardRewardDesc* E_TianxiafirstRankrewardRewardDesc::default_instance_ = NULL;

E_TianxiafirstRankrewardRewardDesc* E_TianxiafirstRankrewardRewardDesc::New() const {
  return new E_TianxiafirstRankrewardRewardDesc;
}

void E_TianxiafirstRankrewardRewardDesc::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_num_ = 0;
    m_id_ = GOOGLE_LONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_TianxiafirstRankrewardRewardDesc::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_Num = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_num_)));
          set_has_m_num();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_ID;
        break;
      }

      // optional int64 m_ID = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_ID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &m_id_)));
          set_has_m_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_TianxiafirstRankrewardRewardDesc::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_Num = 1;
  if (has_m_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_num(), output);
  }

  // optional int64 m_ID = 2;
  if (has_m_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->m_id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_TianxiafirstRankrewardRewardDesc::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_Num = 1;
  if (has_m_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_num(), target);
  }

  // optional int64 m_ID = 2;
  if (has_m_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->m_id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_TianxiafirstRankrewardRewardDesc::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_Num = 1;
    if (has_m_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_num());
    }

    // optional int64 m_ID = 2;
    if (has_m_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->m_id());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_TianxiafirstRankrewardRewardDesc::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_TianxiafirstRankrewardRewardDesc* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_TianxiafirstRankrewardRewardDesc*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_TianxiafirstRankrewardRewardDesc::MergeFrom(const E_TianxiafirstRankrewardRewardDesc& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_num()) {
      set_m_num(from.m_num());
    }
    if (from.has_m_id()) {
      set_m_id(from.m_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_TianxiafirstRankrewardRewardDesc::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_TianxiafirstRankrewardRewardDesc::CopyFrom(const E_TianxiafirstRankrewardRewardDesc& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_TianxiafirstRankrewardRewardDesc::IsInitialized() const {

  return true;
}

void E_TianxiafirstRankrewardRewardDesc::Swap(E_TianxiafirstRankrewardRewardDesc* other) {
  if (other != this) {
    std::swap(m_num_, other->m_num_);
    std::swap(m_id_, other->m_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_TianxiafirstRankrewardRewardDesc::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_TianxiafirstRankrewardRewardDesc_descriptor_;
  metadata.reflection = E_TianxiafirstRankrewardRewardDesc_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_TianxiafirstRankreward::kMIdFieldNumber;
const int E_TianxiafirstRankreward::kMRankFieldNumber;
const int E_TianxiafirstRankreward::kMRewardFieldNumber;
#endif  // !_MSC_VER

E_TianxiafirstRankreward::E_TianxiafirstRankreward()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_TianxiafirstRankreward::InitAsDefaultInstance() {
}

E_TianxiafirstRankreward::E_TianxiafirstRankreward(const E_TianxiafirstRankreward& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_TianxiafirstRankreward::SharedCtor() {
  _cached_size_ = 0;
  m_id_ = 0;
  m_rank_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_TianxiafirstRankreward::~E_TianxiafirstRankreward() {
  SharedDtor();
}

void E_TianxiafirstRankreward::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_TianxiafirstRankreward::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_TianxiafirstRankreward::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_TianxiafirstRankreward_descriptor_;
}

const E_TianxiafirstRankreward& E_TianxiafirstRankreward::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fTianxiafirst_2eproto();
  return *default_instance_;
}

E_TianxiafirstRankreward* E_TianxiafirstRankreward::default_instance_ = NULL;

E_TianxiafirstRankreward* E_TianxiafirstRankreward::New() const {
  return new E_TianxiafirstRankreward;
}

void E_TianxiafirstRankreward::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_id_ = 0;
    m_rank_ = 0;
  }
  m_reward_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_TianxiafirstRankreward::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_id_)));
          set_has_m_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_rank;
        break;
      }

      // optional int32 m_rank = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_rank:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_rank_)));
          set_has_m_rank();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_m_reward;
        break;
      }

      // repeated .proto_ff.E_TianxiafirstRankrewardRewardDesc m_reward = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_reward:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_m_reward()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_m_reward;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_TianxiafirstRankreward::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_id(), output);
  }

  // optional int32 m_rank = 2;
  if (has_m_rank()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_rank(), output);
  }

  // repeated .proto_ff.E_TianxiafirstRankrewardRewardDesc m_reward = 3;
  for (int i = 0; i < this->m_reward_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->m_reward(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_TianxiafirstRankreward::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_id(), target);
  }

  // optional int32 m_rank = 2;
  if (has_m_rank()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_rank(), target);
  }

  // repeated .proto_ff.E_TianxiafirstRankrewardRewardDesc m_reward = 3;
  for (int i = 0; i < this->m_reward_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->m_reward(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_TianxiafirstRankreward::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_id = 1;
    if (has_m_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_id());
    }

    // optional int32 m_rank = 2;
    if (has_m_rank()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_rank());
    }

  }
  // repeated .proto_ff.E_TianxiafirstRankrewardRewardDesc m_reward = 3;
  total_size += 1 * this->m_reward_size();
  for (int i = 0; i < this->m_reward_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->m_reward(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_TianxiafirstRankreward::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_TianxiafirstRankreward* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_TianxiafirstRankreward*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_TianxiafirstRankreward::MergeFrom(const E_TianxiafirstRankreward& from) {
  GOOGLE_CHECK_NE(&from, this);
  m_reward_.MergeFrom(from.m_reward_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_id()) {
      set_m_id(from.m_id());
    }
    if (from.has_m_rank()) {
      set_m_rank(from.m_rank());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_TianxiafirstRankreward::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_TianxiafirstRankreward::CopyFrom(const E_TianxiafirstRankreward& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_TianxiafirstRankreward::IsInitialized() const {

  return true;
}

void E_TianxiafirstRankreward::Swap(E_TianxiafirstRankreward* other) {
  if (other != this) {
    std::swap(m_id_, other->m_id_);
    std::swap(m_rank_, other->m_rank_);
    m_reward_.Swap(&other->m_reward_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_TianxiafirstRankreward::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_TianxiafirstRankreward_descriptor_;
  metadata.reflection = E_TianxiafirstRankreward_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_TianxiafirstRankreward::kETianxiafirstRankrewardListFieldNumber;
#endif  // !_MSC_VER

Sheet_TianxiafirstRankreward::Sheet_TianxiafirstRankreward()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_TianxiafirstRankreward::InitAsDefaultInstance() {
}

Sheet_TianxiafirstRankreward::Sheet_TianxiafirstRankreward(const Sheet_TianxiafirstRankreward& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_TianxiafirstRankreward::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_TianxiafirstRankreward::~Sheet_TianxiafirstRankreward() {
  SharedDtor();
}

void Sheet_TianxiafirstRankreward::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_TianxiafirstRankreward::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_TianxiafirstRankreward::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_TianxiafirstRankreward_descriptor_;
}

const Sheet_TianxiafirstRankreward& Sheet_TianxiafirstRankreward::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fTianxiafirst_2eproto();
  return *default_instance_;
}

Sheet_TianxiafirstRankreward* Sheet_TianxiafirstRankreward::default_instance_ = NULL;

Sheet_TianxiafirstRankreward* Sheet_TianxiafirstRankreward::New() const {
  return new Sheet_TianxiafirstRankreward;
}

void Sheet_TianxiafirstRankreward::Clear() {
  e_tianxiafirstrankreward_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_TianxiafirstRankreward::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.E_TianxiafirstRankreward E_TianxiafirstRankreward_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_E_TianxiafirstRankreward_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_e_tianxiafirstrankreward_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_E_TianxiafirstRankreward_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_TianxiafirstRankreward::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.E_TianxiafirstRankreward E_TianxiafirstRankreward_List = 1;
  for (int i = 0; i < this->e_tianxiafirstrankreward_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->e_tianxiafirstrankreward_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_TianxiafirstRankreward::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.E_TianxiafirstRankreward E_TianxiafirstRankreward_List = 1;
  for (int i = 0; i < this->e_tianxiafirstrankreward_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->e_tianxiafirstrankreward_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_TianxiafirstRankreward::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.E_TianxiafirstRankreward E_TianxiafirstRankreward_List = 1;
  total_size += 1 * this->e_tianxiafirstrankreward_list_size();
  for (int i = 0; i < this->e_tianxiafirstrankreward_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->e_tianxiafirstrankreward_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_TianxiafirstRankreward::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_TianxiafirstRankreward* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_TianxiafirstRankreward*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_TianxiafirstRankreward::MergeFrom(const Sheet_TianxiafirstRankreward& from) {
  GOOGLE_CHECK_NE(&from, this);
  e_tianxiafirstrankreward_list_.MergeFrom(from.e_tianxiafirstrankreward_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_TianxiafirstRankreward::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_TianxiafirstRankreward::CopyFrom(const Sheet_TianxiafirstRankreward& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_TianxiafirstRankreward::IsInitialized() const {

  return true;
}

void Sheet_TianxiafirstRankreward::Swap(Sheet_TianxiafirstRankreward* other) {
  if (other != this) {
    e_tianxiafirstrankreward_list_.Swap(&other->e_tianxiafirstrankreward_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_TianxiafirstRankreward::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_TianxiafirstRankreward_descriptor_;
  metadata.reflection = Sheet_TianxiafirstRankreward_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_TianxiafirstWatchrewardRewardDesc::kMNumFieldNumber;
const int E_TianxiafirstWatchrewardRewardDesc::kMIDFieldNumber;
#endif  // !_MSC_VER

E_TianxiafirstWatchrewardRewardDesc::E_TianxiafirstWatchrewardRewardDesc()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_TianxiafirstWatchrewardRewardDesc::InitAsDefaultInstance() {
}

E_TianxiafirstWatchrewardRewardDesc::E_TianxiafirstWatchrewardRewardDesc(const E_TianxiafirstWatchrewardRewardDesc& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_TianxiafirstWatchrewardRewardDesc::SharedCtor() {
  _cached_size_ = 0;
  m_num_ = 0;
  m_id_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_TianxiafirstWatchrewardRewardDesc::~E_TianxiafirstWatchrewardRewardDesc() {
  SharedDtor();
}

void E_TianxiafirstWatchrewardRewardDesc::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_TianxiafirstWatchrewardRewardDesc::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_TianxiafirstWatchrewardRewardDesc::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_TianxiafirstWatchrewardRewardDesc_descriptor_;
}

const E_TianxiafirstWatchrewardRewardDesc& E_TianxiafirstWatchrewardRewardDesc::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fTianxiafirst_2eproto();
  return *default_instance_;
}

E_TianxiafirstWatchrewardRewardDesc* E_TianxiafirstWatchrewardRewardDesc::default_instance_ = NULL;

E_TianxiafirstWatchrewardRewardDesc* E_TianxiafirstWatchrewardRewardDesc::New() const {
  return new E_TianxiafirstWatchrewardRewardDesc;
}

void E_TianxiafirstWatchrewardRewardDesc::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_num_ = 0;
    m_id_ = GOOGLE_LONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_TianxiafirstWatchrewardRewardDesc::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_Num = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_num_)));
          set_has_m_num();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_ID;
        break;
      }

      // optional int64 m_ID = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_ID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &m_id_)));
          set_has_m_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_TianxiafirstWatchrewardRewardDesc::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_Num = 1;
  if (has_m_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_num(), output);
  }

  // optional int64 m_ID = 2;
  if (has_m_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->m_id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_TianxiafirstWatchrewardRewardDesc::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_Num = 1;
  if (has_m_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_num(), target);
  }

  // optional int64 m_ID = 2;
  if (has_m_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->m_id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_TianxiafirstWatchrewardRewardDesc::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_Num = 1;
    if (has_m_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_num());
    }

    // optional int64 m_ID = 2;
    if (has_m_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->m_id());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_TianxiafirstWatchrewardRewardDesc::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_TianxiafirstWatchrewardRewardDesc* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_TianxiafirstWatchrewardRewardDesc*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_TianxiafirstWatchrewardRewardDesc::MergeFrom(const E_TianxiafirstWatchrewardRewardDesc& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_num()) {
      set_m_num(from.m_num());
    }
    if (from.has_m_id()) {
      set_m_id(from.m_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_TianxiafirstWatchrewardRewardDesc::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_TianxiafirstWatchrewardRewardDesc::CopyFrom(const E_TianxiafirstWatchrewardRewardDesc& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_TianxiafirstWatchrewardRewardDesc::IsInitialized() const {

  return true;
}

void E_TianxiafirstWatchrewardRewardDesc::Swap(E_TianxiafirstWatchrewardRewardDesc* other) {
  if (other != this) {
    std::swap(m_num_, other->m_num_);
    std::swap(m_id_, other->m_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_TianxiafirstWatchrewardRewardDesc::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_TianxiafirstWatchrewardRewardDesc_descriptor_;
  metadata.reflection = E_TianxiafirstWatchrewardRewardDesc_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_TianxiafirstWatchreward::kMIdFieldNumber;
const int E_TianxiafirstWatchreward::kMMatchStateFieldNumber;
const int E_TianxiafirstWatchreward::kMRewardFieldNumber;
#endif  // !_MSC_VER

E_TianxiafirstWatchreward::E_TianxiafirstWatchreward()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_TianxiafirstWatchreward::InitAsDefaultInstance() {
}

E_TianxiafirstWatchreward::E_TianxiafirstWatchreward(const E_TianxiafirstWatchreward& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_TianxiafirstWatchreward::SharedCtor() {
  _cached_size_ = 0;
  m_id_ = 0;
  m_matchstate_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_TianxiafirstWatchreward::~E_TianxiafirstWatchreward() {
  SharedDtor();
}

void E_TianxiafirstWatchreward::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_TianxiafirstWatchreward::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_TianxiafirstWatchreward::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_TianxiafirstWatchreward_descriptor_;
}

const E_TianxiafirstWatchreward& E_TianxiafirstWatchreward::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fTianxiafirst_2eproto();
  return *default_instance_;
}

E_TianxiafirstWatchreward* E_TianxiafirstWatchreward::default_instance_ = NULL;

E_TianxiafirstWatchreward* E_TianxiafirstWatchreward::New() const {
  return new E_TianxiafirstWatchreward;
}

void E_TianxiafirstWatchreward::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_id_ = 0;
    m_matchstate_ = 0;
  }
  m_reward_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_TianxiafirstWatchreward::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_id_)));
          set_has_m_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_matchState;
        break;
      }

      // optional int32 m_matchState = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_matchState:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_matchstate_)));
          set_has_m_matchstate();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_m_reward;
        break;
      }

      // repeated .proto_ff.E_TianxiafirstWatchrewardRewardDesc m_reward = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_reward:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_m_reward()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_m_reward;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_TianxiafirstWatchreward::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_id(), output);
  }

  // optional int32 m_matchState = 2;
  if (has_m_matchstate()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_matchstate(), output);
  }

  // repeated .proto_ff.E_TianxiafirstWatchrewardRewardDesc m_reward = 3;
  for (int i = 0; i < this->m_reward_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->m_reward(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_TianxiafirstWatchreward::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_id(), target);
  }

  // optional int32 m_matchState = 2;
  if (has_m_matchstate()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_matchstate(), target);
  }

  // repeated .proto_ff.E_TianxiafirstWatchrewardRewardDesc m_reward = 3;
  for (int i = 0; i < this->m_reward_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->m_reward(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_TianxiafirstWatchreward::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_id = 1;
    if (has_m_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_id());
    }

    // optional int32 m_matchState = 2;
    if (has_m_matchstate()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_matchstate());
    }

  }
  // repeated .proto_ff.E_TianxiafirstWatchrewardRewardDesc m_reward = 3;
  total_size += 1 * this->m_reward_size();
  for (int i = 0; i < this->m_reward_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->m_reward(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_TianxiafirstWatchreward::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_TianxiafirstWatchreward* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_TianxiafirstWatchreward*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_TianxiafirstWatchreward::MergeFrom(const E_TianxiafirstWatchreward& from) {
  GOOGLE_CHECK_NE(&from, this);
  m_reward_.MergeFrom(from.m_reward_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_id()) {
      set_m_id(from.m_id());
    }
    if (from.has_m_matchstate()) {
      set_m_matchstate(from.m_matchstate());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_TianxiafirstWatchreward::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_TianxiafirstWatchreward::CopyFrom(const E_TianxiafirstWatchreward& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_TianxiafirstWatchreward::IsInitialized() const {

  return true;
}

void E_TianxiafirstWatchreward::Swap(E_TianxiafirstWatchreward* other) {
  if (other != this) {
    std::swap(m_id_, other->m_id_);
    std::swap(m_matchstate_, other->m_matchstate_);
    m_reward_.Swap(&other->m_reward_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_TianxiafirstWatchreward::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_TianxiafirstWatchreward_descriptor_;
  metadata.reflection = E_TianxiafirstWatchreward_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_TianxiafirstWatchreward::kETianxiafirstWatchrewardListFieldNumber;
#endif  // !_MSC_VER

Sheet_TianxiafirstWatchreward::Sheet_TianxiafirstWatchreward()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_TianxiafirstWatchreward::InitAsDefaultInstance() {
}

Sheet_TianxiafirstWatchreward::Sheet_TianxiafirstWatchreward(const Sheet_TianxiafirstWatchreward& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_TianxiafirstWatchreward::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_TianxiafirstWatchreward::~Sheet_TianxiafirstWatchreward() {
  SharedDtor();
}

void Sheet_TianxiafirstWatchreward::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_TianxiafirstWatchreward::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_TianxiafirstWatchreward::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_TianxiafirstWatchreward_descriptor_;
}

const Sheet_TianxiafirstWatchreward& Sheet_TianxiafirstWatchreward::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fTianxiafirst_2eproto();
  return *default_instance_;
}

Sheet_TianxiafirstWatchreward* Sheet_TianxiafirstWatchreward::default_instance_ = NULL;

Sheet_TianxiafirstWatchreward* Sheet_TianxiafirstWatchreward::New() const {
  return new Sheet_TianxiafirstWatchreward;
}

void Sheet_TianxiafirstWatchreward::Clear() {
  e_tianxiafirstwatchreward_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_TianxiafirstWatchreward::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.E_TianxiafirstWatchreward E_TianxiafirstWatchreward_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_E_TianxiafirstWatchreward_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_e_tianxiafirstwatchreward_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_E_TianxiafirstWatchreward_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_TianxiafirstWatchreward::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.E_TianxiafirstWatchreward E_TianxiafirstWatchreward_List = 1;
  for (int i = 0; i < this->e_tianxiafirstwatchreward_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->e_tianxiafirstwatchreward_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_TianxiafirstWatchreward::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.E_TianxiafirstWatchreward E_TianxiafirstWatchreward_List = 1;
  for (int i = 0; i < this->e_tianxiafirstwatchreward_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->e_tianxiafirstwatchreward_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_TianxiafirstWatchreward::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.E_TianxiafirstWatchreward E_TianxiafirstWatchreward_List = 1;
  total_size += 1 * this->e_tianxiafirstwatchreward_list_size();
  for (int i = 0; i < this->e_tianxiafirstwatchreward_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->e_tianxiafirstwatchreward_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_TianxiafirstWatchreward::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_TianxiafirstWatchreward* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_TianxiafirstWatchreward*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_TianxiafirstWatchreward::MergeFrom(const Sheet_TianxiafirstWatchreward& from) {
  GOOGLE_CHECK_NE(&from, this);
  e_tianxiafirstwatchreward_list_.MergeFrom(from.e_tianxiafirstwatchreward_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_TianxiafirstWatchreward::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_TianxiafirstWatchreward::CopyFrom(const Sheet_TianxiafirstWatchreward& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_TianxiafirstWatchreward::IsInitialized() const {

  return true;
}

void Sheet_TianxiafirstWatchreward::Swap(Sheet_TianxiafirstWatchreward* other) {
  if (other != this) {
    e_tianxiafirstwatchreward_list_.Swap(&other->e_tianxiafirstwatchreward_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_TianxiafirstWatchreward::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_TianxiafirstWatchreward_descriptor_;
  metadata.reflection = Sheet_TianxiafirstWatchreward_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_TianxiafirstLuckyrewardRewardDesc::kMNumFieldNumber;
const int E_TianxiafirstLuckyrewardRewardDesc::kMIDFieldNumber;
#endif  // !_MSC_VER

E_TianxiafirstLuckyrewardRewardDesc::E_TianxiafirstLuckyrewardRewardDesc()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_TianxiafirstLuckyrewardRewardDesc::InitAsDefaultInstance() {
}

E_TianxiafirstLuckyrewardRewardDesc::E_TianxiafirstLuckyrewardRewardDesc(const E_TianxiafirstLuckyrewardRewardDesc& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_TianxiafirstLuckyrewardRewardDesc::SharedCtor() {
  _cached_size_ = 0;
  m_num_ = 0;
  m_id_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_TianxiafirstLuckyrewardRewardDesc::~E_TianxiafirstLuckyrewardRewardDesc() {
  SharedDtor();
}

void E_TianxiafirstLuckyrewardRewardDesc::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_TianxiafirstLuckyrewardRewardDesc::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_TianxiafirstLuckyrewardRewardDesc::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_TianxiafirstLuckyrewardRewardDesc_descriptor_;
}

const E_TianxiafirstLuckyrewardRewardDesc& E_TianxiafirstLuckyrewardRewardDesc::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fTianxiafirst_2eproto();
  return *default_instance_;
}

E_TianxiafirstLuckyrewardRewardDesc* E_TianxiafirstLuckyrewardRewardDesc::default_instance_ = NULL;

E_TianxiafirstLuckyrewardRewardDesc* E_TianxiafirstLuckyrewardRewardDesc::New() const {
  return new E_TianxiafirstLuckyrewardRewardDesc;
}

void E_TianxiafirstLuckyrewardRewardDesc::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_num_ = 0;
    m_id_ = GOOGLE_LONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_TianxiafirstLuckyrewardRewardDesc::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_Num = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_num_)));
          set_has_m_num();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_ID;
        break;
      }

      // optional int64 m_ID = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_ID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &m_id_)));
          set_has_m_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_TianxiafirstLuckyrewardRewardDesc::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_Num = 1;
  if (has_m_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_num(), output);
  }

  // optional int64 m_ID = 2;
  if (has_m_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->m_id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_TianxiafirstLuckyrewardRewardDesc::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_Num = 1;
  if (has_m_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_num(), target);
  }

  // optional int64 m_ID = 2;
  if (has_m_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->m_id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_TianxiafirstLuckyrewardRewardDesc::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_Num = 1;
    if (has_m_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_num());
    }

    // optional int64 m_ID = 2;
    if (has_m_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->m_id());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_TianxiafirstLuckyrewardRewardDesc::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_TianxiafirstLuckyrewardRewardDesc* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_TianxiafirstLuckyrewardRewardDesc*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_TianxiafirstLuckyrewardRewardDesc::MergeFrom(const E_TianxiafirstLuckyrewardRewardDesc& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_num()) {
      set_m_num(from.m_num());
    }
    if (from.has_m_id()) {
      set_m_id(from.m_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_TianxiafirstLuckyrewardRewardDesc::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_TianxiafirstLuckyrewardRewardDesc::CopyFrom(const E_TianxiafirstLuckyrewardRewardDesc& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_TianxiafirstLuckyrewardRewardDesc::IsInitialized() const {

  return true;
}

void E_TianxiafirstLuckyrewardRewardDesc::Swap(E_TianxiafirstLuckyrewardRewardDesc* other) {
  if (other != this) {
    std::swap(m_num_, other->m_num_);
    std::swap(m_id_, other->m_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_TianxiafirstLuckyrewardRewardDesc::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_TianxiafirstLuckyrewardRewardDesc_descriptor_;
  metadata.reflection = E_TianxiafirstLuckyrewardRewardDesc_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_TianxiafirstLuckyreward::kMIdFieldNumber;
const int E_TianxiafirstLuckyreward::kMNumMinFieldNumber;
const int E_TianxiafirstLuckyreward::kMNumMaxFieldNumber;
const int E_TianxiafirstLuckyreward::kMRewardFieldNumber;
#endif  // !_MSC_VER

E_TianxiafirstLuckyreward::E_TianxiafirstLuckyreward()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_TianxiafirstLuckyreward::InitAsDefaultInstance() {
}

E_TianxiafirstLuckyreward::E_TianxiafirstLuckyreward(const E_TianxiafirstLuckyreward& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_TianxiafirstLuckyreward::SharedCtor() {
  _cached_size_ = 0;
  m_id_ = 0;
  m_nummin_ = 0;
  m_nummax_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_TianxiafirstLuckyreward::~E_TianxiafirstLuckyreward() {
  SharedDtor();
}

void E_TianxiafirstLuckyreward::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_TianxiafirstLuckyreward::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_TianxiafirstLuckyreward::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_TianxiafirstLuckyreward_descriptor_;
}

const E_TianxiafirstLuckyreward& E_TianxiafirstLuckyreward::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fTianxiafirst_2eproto();
  return *default_instance_;
}

E_TianxiafirstLuckyreward* E_TianxiafirstLuckyreward::default_instance_ = NULL;

E_TianxiafirstLuckyreward* E_TianxiafirstLuckyreward::New() const {
  return new E_TianxiafirstLuckyreward;
}

void E_TianxiafirstLuckyreward::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_id_ = 0;
    m_nummin_ = 0;
    m_nummax_ = 0;
  }
  m_reward_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_TianxiafirstLuckyreward::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_id_)));
          set_has_m_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_numMin;
        break;
      }

      // optional int32 m_numMin = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_numMin:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_nummin_)));
          set_has_m_nummin();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_m_numMax;
        break;
      }

      // optional int32 m_numMax = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_numMax:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_nummax_)));
          set_has_m_nummax();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_m_reward;
        break;
      }

      // repeated .proto_ff.E_TianxiafirstLuckyrewardRewardDesc m_reward = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_reward:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_m_reward()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_m_reward;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_TianxiafirstLuckyreward::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_id(), output);
  }

  // optional int32 m_numMin = 2;
  if (has_m_nummin()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_nummin(), output);
  }

  // optional int32 m_numMax = 3;
  if (has_m_nummax()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->m_nummax(), output);
  }

  // repeated .proto_ff.E_TianxiafirstLuckyrewardRewardDesc m_reward = 4;
  for (int i = 0; i < this->m_reward_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->m_reward(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_TianxiafirstLuckyreward::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_id(), target);
  }

  // optional int32 m_numMin = 2;
  if (has_m_nummin()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_nummin(), target);
  }

  // optional int32 m_numMax = 3;
  if (has_m_nummax()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->m_nummax(), target);
  }

  // repeated .proto_ff.E_TianxiafirstLuckyrewardRewardDesc m_reward = 4;
  for (int i = 0; i < this->m_reward_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->m_reward(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_TianxiafirstLuckyreward::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_id = 1;
    if (has_m_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_id());
    }

    // optional int32 m_numMin = 2;
    if (has_m_nummin()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_nummin());
    }

    // optional int32 m_numMax = 3;
    if (has_m_nummax()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_nummax());
    }

  }
  // repeated .proto_ff.E_TianxiafirstLuckyrewardRewardDesc m_reward = 4;
  total_size += 1 * this->m_reward_size();
  for (int i = 0; i < this->m_reward_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->m_reward(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_TianxiafirstLuckyreward::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_TianxiafirstLuckyreward* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_TianxiafirstLuckyreward*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_TianxiafirstLuckyreward::MergeFrom(const E_TianxiafirstLuckyreward& from) {
  GOOGLE_CHECK_NE(&from, this);
  m_reward_.MergeFrom(from.m_reward_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_id()) {
      set_m_id(from.m_id());
    }
    if (from.has_m_nummin()) {
      set_m_nummin(from.m_nummin());
    }
    if (from.has_m_nummax()) {
      set_m_nummax(from.m_nummax());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_TianxiafirstLuckyreward::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_TianxiafirstLuckyreward::CopyFrom(const E_TianxiafirstLuckyreward& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_TianxiafirstLuckyreward::IsInitialized() const {

  return true;
}

void E_TianxiafirstLuckyreward::Swap(E_TianxiafirstLuckyreward* other) {
  if (other != this) {
    std::swap(m_id_, other->m_id_);
    std::swap(m_nummin_, other->m_nummin_);
    std::swap(m_nummax_, other->m_nummax_);
    m_reward_.Swap(&other->m_reward_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_TianxiafirstLuckyreward::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_TianxiafirstLuckyreward_descriptor_;
  metadata.reflection = E_TianxiafirstLuckyreward_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_TianxiafirstLuckyreward::kETianxiafirstLuckyrewardListFieldNumber;
#endif  // !_MSC_VER

Sheet_TianxiafirstLuckyreward::Sheet_TianxiafirstLuckyreward()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_TianxiafirstLuckyreward::InitAsDefaultInstance() {
}

Sheet_TianxiafirstLuckyreward::Sheet_TianxiafirstLuckyreward(const Sheet_TianxiafirstLuckyreward& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_TianxiafirstLuckyreward::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_TianxiafirstLuckyreward::~Sheet_TianxiafirstLuckyreward() {
  SharedDtor();
}

void Sheet_TianxiafirstLuckyreward::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_TianxiafirstLuckyreward::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_TianxiafirstLuckyreward::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_TianxiafirstLuckyreward_descriptor_;
}

const Sheet_TianxiafirstLuckyreward& Sheet_TianxiafirstLuckyreward::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fTianxiafirst_2eproto();
  return *default_instance_;
}

Sheet_TianxiafirstLuckyreward* Sheet_TianxiafirstLuckyreward::default_instance_ = NULL;

Sheet_TianxiafirstLuckyreward* Sheet_TianxiafirstLuckyreward::New() const {
  return new Sheet_TianxiafirstLuckyreward;
}

void Sheet_TianxiafirstLuckyreward::Clear() {
  e_tianxiafirstluckyreward_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_TianxiafirstLuckyreward::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.E_TianxiafirstLuckyreward E_TianxiafirstLuckyreward_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_E_TianxiafirstLuckyreward_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_e_tianxiafirstluckyreward_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_E_TianxiafirstLuckyreward_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_TianxiafirstLuckyreward::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.E_TianxiafirstLuckyreward E_TianxiafirstLuckyreward_List = 1;
  for (int i = 0; i < this->e_tianxiafirstluckyreward_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->e_tianxiafirstluckyreward_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_TianxiafirstLuckyreward::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.E_TianxiafirstLuckyreward E_TianxiafirstLuckyreward_List = 1;
  for (int i = 0; i < this->e_tianxiafirstluckyreward_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->e_tianxiafirstluckyreward_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_TianxiafirstLuckyreward::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.E_TianxiafirstLuckyreward E_TianxiafirstLuckyreward_List = 1;
  total_size += 1 * this->e_tianxiafirstluckyreward_list_size();
  for (int i = 0; i < this->e_tianxiafirstluckyreward_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->e_tianxiafirstluckyreward_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_TianxiafirstLuckyreward::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_TianxiafirstLuckyreward* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_TianxiafirstLuckyreward*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_TianxiafirstLuckyreward::MergeFrom(const Sheet_TianxiafirstLuckyreward& from) {
  GOOGLE_CHECK_NE(&from, this);
  e_tianxiafirstluckyreward_list_.MergeFrom(from.e_tianxiafirstluckyreward_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_TianxiafirstLuckyreward::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_TianxiafirstLuckyreward::CopyFrom(const Sheet_TianxiafirstLuckyreward& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_TianxiafirstLuckyreward::IsInitialized() const {

  return true;
}

void Sheet_TianxiafirstLuckyreward::Swap(Sheet_TianxiafirstLuckyreward* other) {
  if (other != this) {
    e_tianxiafirstluckyreward_list_.Swap(&other->e_tianxiafirstluckyreward_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_TianxiafirstLuckyreward::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_TianxiafirstLuckyreward_descriptor_;
  metadata.reflection = Sheet_TianxiafirstLuckyreward_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_TianxiafirstMatchtimesrewardRewardDesc::kMNumFieldNumber;
const int E_TianxiafirstMatchtimesrewardRewardDesc::kMIDFieldNumber;
#endif  // !_MSC_VER

E_TianxiafirstMatchtimesrewardRewardDesc::E_TianxiafirstMatchtimesrewardRewardDesc()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_TianxiafirstMatchtimesrewardRewardDesc::InitAsDefaultInstance() {
}

E_TianxiafirstMatchtimesrewardRewardDesc::E_TianxiafirstMatchtimesrewardRewardDesc(const E_TianxiafirstMatchtimesrewardRewardDesc& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_TianxiafirstMatchtimesrewardRewardDesc::SharedCtor() {
  _cached_size_ = 0;
  m_num_ = 0;
  m_id_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_TianxiafirstMatchtimesrewardRewardDesc::~E_TianxiafirstMatchtimesrewardRewardDesc() {
  SharedDtor();
}

void E_TianxiafirstMatchtimesrewardRewardDesc::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_TianxiafirstMatchtimesrewardRewardDesc::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_TianxiafirstMatchtimesrewardRewardDesc::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_TianxiafirstMatchtimesrewardRewardDesc_descriptor_;
}

const E_TianxiafirstMatchtimesrewardRewardDesc& E_TianxiafirstMatchtimesrewardRewardDesc::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fTianxiafirst_2eproto();
  return *default_instance_;
}

E_TianxiafirstMatchtimesrewardRewardDesc* E_TianxiafirstMatchtimesrewardRewardDesc::default_instance_ = NULL;

E_TianxiafirstMatchtimesrewardRewardDesc* E_TianxiafirstMatchtimesrewardRewardDesc::New() const {
  return new E_TianxiafirstMatchtimesrewardRewardDesc;
}

void E_TianxiafirstMatchtimesrewardRewardDesc::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_num_ = 0;
    m_id_ = GOOGLE_LONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_TianxiafirstMatchtimesrewardRewardDesc::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_Num = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_num_)));
          set_has_m_num();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_ID;
        break;
      }

      // optional int64 m_ID = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_ID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &m_id_)));
          set_has_m_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_TianxiafirstMatchtimesrewardRewardDesc::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_Num = 1;
  if (has_m_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_num(), output);
  }

  // optional int64 m_ID = 2;
  if (has_m_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->m_id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_TianxiafirstMatchtimesrewardRewardDesc::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_Num = 1;
  if (has_m_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_num(), target);
  }

  // optional int64 m_ID = 2;
  if (has_m_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->m_id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_TianxiafirstMatchtimesrewardRewardDesc::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_Num = 1;
    if (has_m_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_num());
    }

    // optional int64 m_ID = 2;
    if (has_m_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->m_id());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_TianxiafirstMatchtimesrewardRewardDesc::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_TianxiafirstMatchtimesrewardRewardDesc* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_TianxiafirstMatchtimesrewardRewardDesc*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_TianxiafirstMatchtimesrewardRewardDesc::MergeFrom(const E_TianxiafirstMatchtimesrewardRewardDesc& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_num()) {
      set_m_num(from.m_num());
    }
    if (from.has_m_id()) {
      set_m_id(from.m_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_TianxiafirstMatchtimesrewardRewardDesc::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_TianxiafirstMatchtimesrewardRewardDesc::CopyFrom(const E_TianxiafirstMatchtimesrewardRewardDesc& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_TianxiafirstMatchtimesrewardRewardDesc::IsInitialized() const {

  return true;
}

void E_TianxiafirstMatchtimesrewardRewardDesc::Swap(E_TianxiafirstMatchtimesrewardRewardDesc* other) {
  if (other != this) {
    std::swap(m_num_, other->m_num_);
    std::swap(m_id_, other->m_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_TianxiafirstMatchtimesrewardRewardDesc::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_TianxiafirstMatchtimesrewardRewardDesc_descriptor_;
  metadata.reflection = E_TianxiafirstMatchtimesrewardRewardDesc_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_TianxiafirstMatchtimesreward::kMIdFieldNumber;
const int E_TianxiafirstMatchtimesreward::kMMatchTimesFieldNumber;
const int E_TianxiafirstMatchtimesreward::kMRewardFieldNumber;
#endif  // !_MSC_VER

E_TianxiafirstMatchtimesreward::E_TianxiafirstMatchtimesreward()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_TianxiafirstMatchtimesreward::InitAsDefaultInstance() {
}

E_TianxiafirstMatchtimesreward::E_TianxiafirstMatchtimesreward(const E_TianxiafirstMatchtimesreward& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_TianxiafirstMatchtimesreward::SharedCtor() {
  _cached_size_ = 0;
  m_id_ = 0;
  m_matchtimes_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_TianxiafirstMatchtimesreward::~E_TianxiafirstMatchtimesreward() {
  SharedDtor();
}

void E_TianxiafirstMatchtimesreward::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_TianxiafirstMatchtimesreward::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_TianxiafirstMatchtimesreward::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_TianxiafirstMatchtimesreward_descriptor_;
}

const E_TianxiafirstMatchtimesreward& E_TianxiafirstMatchtimesreward::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fTianxiafirst_2eproto();
  return *default_instance_;
}

E_TianxiafirstMatchtimesreward* E_TianxiafirstMatchtimesreward::default_instance_ = NULL;

E_TianxiafirstMatchtimesreward* E_TianxiafirstMatchtimesreward::New() const {
  return new E_TianxiafirstMatchtimesreward;
}

void E_TianxiafirstMatchtimesreward::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_id_ = 0;
    m_matchtimes_ = 0;
  }
  m_reward_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_TianxiafirstMatchtimesreward::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_id_)));
          set_has_m_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_matchTimes;
        break;
      }

      // optional int32 m_matchTimes = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_matchTimes:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_matchtimes_)));
          set_has_m_matchtimes();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_m_reward;
        break;
      }

      // repeated .proto_ff.E_TianxiafirstMatchtimesrewardRewardDesc m_reward = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_reward:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_m_reward()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_m_reward;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_TianxiafirstMatchtimesreward::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_id(), output);
  }

  // optional int32 m_matchTimes = 2;
  if (has_m_matchtimes()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_matchtimes(), output);
  }

  // repeated .proto_ff.E_TianxiafirstMatchtimesrewardRewardDesc m_reward = 3;
  for (int i = 0; i < this->m_reward_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->m_reward(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_TianxiafirstMatchtimesreward::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_id(), target);
  }

  // optional int32 m_matchTimes = 2;
  if (has_m_matchtimes()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_matchtimes(), target);
  }

  // repeated .proto_ff.E_TianxiafirstMatchtimesrewardRewardDesc m_reward = 3;
  for (int i = 0; i < this->m_reward_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->m_reward(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_TianxiafirstMatchtimesreward::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_id = 1;
    if (has_m_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_id());
    }

    // optional int32 m_matchTimes = 2;
    if (has_m_matchtimes()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_matchtimes());
    }

  }
  // repeated .proto_ff.E_TianxiafirstMatchtimesrewardRewardDesc m_reward = 3;
  total_size += 1 * this->m_reward_size();
  for (int i = 0; i < this->m_reward_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->m_reward(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_TianxiafirstMatchtimesreward::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_TianxiafirstMatchtimesreward* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_TianxiafirstMatchtimesreward*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_TianxiafirstMatchtimesreward::MergeFrom(const E_TianxiafirstMatchtimesreward& from) {
  GOOGLE_CHECK_NE(&from, this);
  m_reward_.MergeFrom(from.m_reward_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_id()) {
      set_m_id(from.m_id());
    }
    if (from.has_m_matchtimes()) {
      set_m_matchtimes(from.m_matchtimes());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_TianxiafirstMatchtimesreward::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_TianxiafirstMatchtimesreward::CopyFrom(const E_TianxiafirstMatchtimesreward& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_TianxiafirstMatchtimesreward::IsInitialized() const {

  return true;
}

void E_TianxiafirstMatchtimesreward::Swap(E_TianxiafirstMatchtimesreward* other) {
  if (other != this) {
    std::swap(m_id_, other->m_id_);
    std::swap(m_matchtimes_, other->m_matchtimes_);
    m_reward_.Swap(&other->m_reward_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_TianxiafirstMatchtimesreward::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_TianxiafirstMatchtimesreward_descriptor_;
  metadata.reflection = E_TianxiafirstMatchtimesreward_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_TianxiafirstMatchtimesreward::kETianxiafirstMatchtimesrewardListFieldNumber;
#endif  // !_MSC_VER

Sheet_TianxiafirstMatchtimesreward::Sheet_TianxiafirstMatchtimesreward()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_TianxiafirstMatchtimesreward::InitAsDefaultInstance() {
}

Sheet_TianxiafirstMatchtimesreward::Sheet_TianxiafirstMatchtimesreward(const Sheet_TianxiafirstMatchtimesreward& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_TianxiafirstMatchtimesreward::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_TianxiafirstMatchtimesreward::~Sheet_TianxiafirstMatchtimesreward() {
  SharedDtor();
}

void Sheet_TianxiafirstMatchtimesreward::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_TianxiafirstMatchtimesreward::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_TianxiafirstMatchtimesreward::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_TianxiafirstMatchtimesreward_descriptor_;
}

const Sheet_TianxiafirstMatchtimesreward& Sheet_TianxiafirstMatchtimesreward::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fTianxiafirst_2eproto();
  return *default_instance_;
}

Sheet_TianxiafirstMatchtimesreward* Sheet_TianxiafirstMatchtimesreward::default_instance_ = NULL;

Sheet_TianxiafirstMatchtimesreward* Sheet_TianxiafirstMatchtimesreward::New() const {
  return new Sheet_TianxiafirstMatchtimesreward;
}

void Sheet_TianxiafirstMatchtimesreward::Clear() {
  e_tianxiafirstmatchtimesreward_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_TianxiafirstMatchtimesreward::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.E_TianxiafirstMatchtimesreward E_TianxiafirstMatchtimesreward_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_E_TianxiafirstMatchtimesreward_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_e_tianxiafirstmatchtimesreward_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_E_TianxiafirstMatchtimesreward_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_TianxiafirstMatchtimesreward::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.E_TianxiafirstMatchtimesreward E_TianxiafirstMatchtimesreward_List = 1;
  for (int i = 0; i < this->e_tianxiafirstmatchtimesreward_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->e_tianxiafirstmatchtimesreward_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_TianxiafirstMatchtimesreward::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.E_TianxiafirstMatchtimesreward E_TianxiafirstMatchtimesreward_List = 1;
  for (int i = 0; i < this->e_tianxiafirstmatchtimesreward_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->e_tianxiafirstmatchtimesreward_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_TianxiafirstMatchtimesreward::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.E_TianxiafirstMatchtimesreward E_TianxiafirstMatchtimesreward_List = 1;
  total_size += 1 * this->e_tianxiafirstmatchtimesreward_list_size();
  for (int i = 0; i < this->e_tianxiafirstmatchtimesreward_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->e_tianxiafirstmatchtimesreward_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_TianxiafirstMatchtimesreward::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_TianxiafirstMatchtimesreward* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_TianxiafirstMatchtimesreward*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_TianxiafirstMatchtimesreward::MergeFrom(const Sheet_TianxiafirstMatchtimesreward& from) {
  GOOGLE_CHECK_NE(&from, this);
  e_tianxiafirstmatchtimesreward_list_.MergeFrom(from.e_tianxiafirstmatchtimesreward_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_TianxiafirstMatchtimesreward::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_TianxiafirstMatchtimesreward::CopyFrom(const Sheet_TianxiafirstMatchtimesreward& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_TianxiafirstMatchtimesreward::IsInitialized() const {

  return true;
}

void Sheet_TianxiafirstMatchtimesreward::Swap(Sheet_TianxiafirstMatchtimesreward* other) {
  if (other != this) {
    e_tianxiafirstmatchtimesreward_list_.Swap(&other->e_tianxiafirstmatchtimesreward_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_TianxiafirstMatchtimesreward::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_TianxiafirstMatchtimesreward_descriptor_;
  metadata.reflection = Sheet_TianxiafirstMatchtimesreward_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_TianxiafirstMatchresultrewardRewardDesc::kMNumFieldNumber;
const int E_TianxiafirstMatchresultrewardRewardDesc::kMIDFieldNumber;
#endif  // !_MSC_VER

E_TianxiafirstMatchresultrewardRewardDesc::E_TianxiafirstMatchresultrewardRewardDesc()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_TianxiafirstMatchresultrewardRewardDesc::InitAsDefaultInstance() {
}

E_TianxiafirstMatchresultrewardRewardDesc::E_TianxiafirstMatchresultrewardRewardDesc(const E_TianxiafirstMatchresultrewardRewardDesc& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_TianxiafirstMatchresultrewardRewardDesc::SharedCtor() {
  _cached_size_ = 0;
  m_num_ = 0;
  m_id_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_TianxiafirstMatchresultrewardRewardDesc::~E_TianxiafirstMatchresultrewardRewardDesc() {
  SharedDtor();
}

void E_TianxiafirstMatchresultrewardRewardDesc::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_TianxiafirstMatchresultrewardRewardDesc::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_TianxiafirstMatchresultrewardRewardDesc::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_TianxiafirstMatchresultrewardRewardDesc_descriptor_;
}

const E_TianxiafirstMatchresultrewardRewardDesc& E_TianxiafirstMatchresultrewardRewardDesc::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fTianxiafirst_2eproto();
  return *default_instance_;
}

E_TianxiafirstMatchresultrewardRewardDesc* E_TianxiafirstMatchresultrewardRewardDesc::default_instance_ = NULL;

E_TianxiafirstMatchresultrewardRewardDesc* E_TianxiafirstMatchresultrewardRewardDesc::New() const {
  return new E_TianxiafirstMatchresultrewardRewardDesc;
}

void E_TianxiafirstMatchresultrewardRewardDesc::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_num_ = 0;
    m_id_ = GOOGLE_LONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_TianxiafirstMatchresultrewardRewardDesc::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_Num = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_num_)));
          set_has_m_num();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_ID;
        break;
      }

      // optional int64 m_ID = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_ID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &m_id_)));
          set_has_m_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_TianxiafirstMatchresultrewardRewardDesc::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_Num = 1;
  if (has_m_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_num(), output);
  }

  // optional int64 m_ID = 2;
  if (has_m_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->m_id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_TianxiafirstMatchresultrewardRewardDesc::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_Num = 1;
  if (has_m_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_num(), target);
  }

  // optional int64 m_ID = 2;
  if (has_m_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->m_id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_TianxiafirstMatchresultrewardRewardDesc::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_Num = 1;
    if (has_m_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_num());
    }

    // optional int64 m_ID = 2;
    if (has_m_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->m_id());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_TianxiafirstMatchresultrewardRewardDesc::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_TianxiafirstMatchresultrewardRewardDesc* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_TianxiafirstMatchresultrewardRewardDesc*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_TianxiafirstMatchresultrewardRewardDesc::MergeFrom(const E_TianxiafirstMatchresultrewardRewardDesc& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_num()) {
      set_m_num(from.m_num());
    }
    if (from.has_m_id()) {
      set_m_id(from.m_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_TianxiafirstMatchresultrewardRewardDesc::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_TianxiafirstMatchresultrewardRewardDesc::CopyFrom(const E_TianxiafirstMatchresultrewardRewardDesc& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_TianxiafirstMatchresultrewardRewardDesc::IsInitialized() const {

  return true;
}

void E_TianxiafirstMatchresultrewardRewardDesc::Swap(E_TianxiafirstMatchresultrewardRewardDesc* other) {
  if (other != this) {
    std::swap(m_num_, other->m_num_);
    std::swap(m_id_, other->m_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_TianxiafirstMatchresultrewardRewardDesc::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_TianxiafirstMatchresultrewardRewardDesc_descriptor_;
  metadata.reflection = E_TianxiafirstMatchresultrewardRewardDesc_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_TianxiafirstMatchresultreward::kMIdFieldNumber;
const int E_TianxiafirstMatchresultreward::kMMatchStateFieldNumber;
const int E_TianxiafirstMatchresultreward::kMResultFieldNumber;
const int E_TianxiafirstMatchresultreward::kMRewardFieldNumber;
#endif  // !_MSC_VER

E_TianxiafirstMatchresultreward::E_TianxiafirstMatchresultreward()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_TianxiafirstMatchresultreward::InitAsDefaultInstance() {
}

E_TianxiafirstMatchresultreward::E_TianxiafirstMatchresultreward(const E_TianxiafirstMatchresultreward& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_TianxiafirstMatchresultreward::SharedCtor() {
  _cached_size_ = 0;
  m_id_ = 0;
  m_matchstate_ = 0;
  m_result_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_TianxiafirstMatchresultreward::~E_TianxiafirstMatchresultreward() {
  SharedDtor();
}

void E_TianxiafirstMatchresultreward::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_TianxiafirstMatchresultreward::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_TianxiafirstMatchresultreward::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_TianxiafirstMatchresultreward_descriptor_;
}

const E_TianxiafirstMatchresultreward& E_TianxiafirstMatchresultreward::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fTianxiafirst_2eproto();
  return *default_instance_;
}

E_TianxiafirstMatchresultreward* E_TianxiafirstMatchresultreward::default_instance_ = NULL;

E_TianxiafirstMatchresultreward* E_TianxiafirstMatchresultreward::New() const {
  return new E_TianxiafirstMatchresultreward;
}

void E_TianxiafirstMatchresultreward::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_id_ = 0;
    m_matchstate_ = 0;
    m_result_ = 0;
  }
  m_reward_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_TianxiafirstMatchresultreward::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_id_)));
          set_has_m_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_matchState;
        break;
      }

      // optional int32 m_matchState = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_matchState:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_matchstate_)));
          set_has_m_matchstate();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_m_result;
        break;
      }

      // optional int32 m_result = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_result:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_result_)));
          set_has_m_result();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_m_reward;
        break;
      }

      // repeated .proto_ff.E_TianxiafirstMatchresultrewardRewardDesc m_reward = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_reward:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_m_reward()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_m_reward;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_TianxiafirstMatchresultreward::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_id(), output);
  }

  // optional int32 m_matchState = 2;
  if (has_m_matchstate()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_matchstate(), output);
  }

  // optional int32 m_result = 3;
  if (has_m_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->m_result(), output);
  }

  // repeated .proto_ff.E_TianxiafirstMatchresultrewardRewardDesc m_reward = 4;
  for (int i = 0; i < this->m_reward_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->m_reward(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_TianxiafirstMatchresultreward::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_id(), target);
  }

  // optional int32 m_matchState = 2;
  if (has_m_matchstate()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_matchstate(), target);
  }

  // optional int32 m_result = 3;
  if (has_m_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->m_result(), target);
  }

  // repeated .proto_ff.E_TianxiafirstMatchresultrewardRewardDesc m_reward = 4;
  for (int i = 0; i < this->m_reward_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->m_reward(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_TianxiafirstMatchresultreward::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_id = 1;
    if (has_m_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_id());
    }

    // optional int32 m_matchState = 2;
    if (has_m_matchstate()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_matchstate());
    }

    // optional int32 m_result = 3;
    if (has_m_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_result());
    }

  }
  // repeated .proto_ff.E_TianxiafirstMatchresultrewardRewardDesc m_reward = 4;
  total_size += 1 * this->m_reward_size();
  for (int i = 0; i < this->m_reward_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->m_reward(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_TianxiafirstMatchresultreward::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_TianxiafirstMatchresultreward* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_TianxiafirstMatchresultreward*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_TianxiafirstMatchresultreward::MergeFrom(const E_TianxiafirstMatchresultreward& from) {
  GOOGLE_CHECK_NE(&from, this);
  m_reward_.MergeFrom(from.m_reward_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_id()) {
      set_m_id(from.m_id());
    }
    if (from.has_m_matchstate()) {
      set_m_matchstate(from.m_matchstate());
    }
    if (from.has_m_result()) {
      set_m_result(from.m_result());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_TianxiafirstMatchresultreward::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_TianxiafirstMatchresultreward::CopyFrom(const E_TianxiafirstMatchresultreward& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_TianxiafirstMatchresultreward::IsInitialized() const {

  return true;
}

void E_TianxiafirstMatchresultreward::Swap(E_TianxiafirstMatchresultreward* other) {
  if (other != this) {
    std::swap(m_id_, other->m_id_);
    std::swap(m_matchstate_, other->m_matchstate_);
    std::swap(m_result_, other->m_result_);
    m_reward_.Swap(&other->m_reward_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_TianxiafirstMatchresultreward::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_TianxiafirstMatchresultreward_descriptor_;
  metadata.reflection = E_TianxiafirstMatchresultreward_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_TianxiafirstMatchresultreward::kETianxiafirstMatchresultrewardListFieldNumber;
#endif  // !_MSC_VER

Sheet_TianxiafirstMatchresultreward::Sheet_TianxiafirstMatchresultreward()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_TianxiafirstMatchresultreward::InitAsDefaultInstance() {
}

Sheet_TianxiafirstMatchresultreward::Sheet_TianxiafirstMatchresultreward(const Sheet_TianxiafirstMatchresultreward& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_TianxiafirstMatchresultreward::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_TianxiafirstMatchresultreward::~Sheet_TianxiafirstMatchresultreward() {
  SharedDtor();
}

void Sheet_TianxiafirstMatchresultreward::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_TianxiafirstMatchresultreward::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_TianxiafirstMatchresultreward::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_TianxiafirstMatchresultreward_descriptor_;
}

const Sheet_TianxiafirstMatchresultreward& Sheet_TianxiafirstMatchresultreward::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fTianxiafirst_2eproto();
  return *default_instance_;
}

Sheet_TianxiafirstMatchresultreward* Sheet_TianxiafirstMatchresultreward::default_instance_ = NULL;

Sheet_TianxiafirstMatchresultreward* Sheet_TianxiafirstMatchresultreward::New() const {
  return new Sheet_TianxiafirstMatchresultreward;
}

void Sheet_TianxiafirstMatchresultreward::Clear() {
  e_tianxiafirstmatchresultreward_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_TianxiafirstMatchresultreward::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.E_TianxiafirstMatchresultreward E_TianxiafirstMatchresultreward_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_E_TianxiafirstMatchresultreward_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_e_tianxiafirstmatchresultreward_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_E_TianxiafirstMatchresultreward_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_TianxiafirstMatchresultreward::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.E_TianxiafirstMatchresultreward E_TianxiafirstMatchresultreward_List = 1;
  for (int i = 0; i < this->e_tianxiafirstmatchresultreward_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->e_tianxiafirstmatchresultreward_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_TianxiafirstMatchresultreward::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.E_TianxiafirstMatchresultreward E_TianxiafirstMatchresultreward_List = 1;
  for (int i = 0; i < this->e_tianxiafirstmatchresultreward_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->e_tianxiafirstmatchresultreward_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_TianxiafirstMatchresultreward::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.E_TianxiafirstMatchresultreward E_TianxiafirstMatchresultreward_List = 1;
  total_size += 1 * this->e_tianxiafirstmatchresultreward_list_size();
  for (int i = 0; i < this->e_tianxiafirstmatchresultreward_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->e_tianxiafirstmatchresultreward_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_TianxiafirstMatchresultreward::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_TianxiafirstMatchresultreward* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_TianxiafirstMatchresultreward*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_TianxiafirstMatchresultreward::MergeFrom(const Sheet_TianxiafirstMatchresultreward& from) {
  GOOGLE_CHECK_NE(&from, this);
  e_tianxiafirstmatchresultreward_list_.MergeFrom(from.e_tianxiafirstmatchresultreward_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_TianxiafirstMatchresultreward::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_TianxiafirstMatchresultreward::CopyFrom(const Sheet_TianxiafirstMatchresultreward& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_TianxiafirstMatchresultreward::IsInitialized() const {

  return true;
}

void Sheet_TianxiafirstMatchresultreward::Swap(Sheet_TianxiafirstMatchresultreward* other) {
  if (other != this) {
    e_tianxiafirstmatchresultreward_list_.Swap(&other->e_tianxiafirstmatchresultreward_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_TianxiafirstMatchresultreward::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_TianxiafirstMatchresultreward_descriptor_;
  metadata.reflection = Sheet_TianxiafirstMatchresultreward_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_TianxiafirstExtraaddattrAttributeDesc::kMValueFieldNumber;
const int E_TianxiafirstExtraaddattrAttributeDesc::kMTypeFieldNumber;
#endif  // !_MSC_VER

E_TianxiafirstExtraaddattrAttributeDesc::E_TianxiafirstExtraaddattrAttributeDesc()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_TianxiafirstExtraaddattrAttributeDesc::InitAsDefaultInstance() {
}

E_TianxiafirstExtraaddattrAttributeDesc::E_TianxiafirstExtraaddattrAttributeDesc(const E_TianxiafirstExtraaddattrAttributeDesc& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_TianxiafirstExtraaddattrAttributeDesc::SharedCtor() {
  _cached_size_ = 0;
  m_value_ = 0;
  m_type_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_TianxiafirstExtraaddattrAttributeDesc::~E_TianxiafirstExtraaddattrAttributeDesc() {
  SharedDtor();
}

void E_TianxiafirstExtraaddattrAttributeDesc::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_TianxiafirstExtraaddattrAttributeDesc::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_TianxiafirstExtraaddattrAttributeDesc::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_TianxiafirstExtraaddattrAttributeDesc_descriptor_;
}

const E_TianxiafirstExtraaddattrAttributeDesc& E_TianxiafirstExtraaddattrAttributeDesc::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fTianxiafirst_2eproto();
  return *default_instance_;
}

E_TianxiafirstExtraaddattrAttributeDesc* E_TianxiafirstExtraaddattrAttributeDesc::default_instance_ = NULL;

E_TianxiafirstExtraaddattrAttributeDesc* E_TianxiafirstExtraaddattrAttributeDesc::New() const {
  return new E_TianxiafirstExtraaddattrAttributeDesc;
}

void E_TianxiafirstExtraaddattrAttributeDesc::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_value_ = 0;
    m_type_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_TianxiafirstExtraaddattrAttributeDesc::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_value = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_value_)));
          set_has_m_value();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_type;
        break;
      }

      // optional int32 m_type = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_type_)));
          set_has_m_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_TianxiafirstExtraaddattrAttributeDesc::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_value = 1;
  if (has_m_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_value(), output);
  }

  // optional int32 m_type = 2;
  if (has_m_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_type(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_TianxiafirstExtraaddattrAttributeDesc::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_value = 1;
  if (has_m_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_value(), target);
  }

  // optional int32 m_type = 2;
  if (has_m_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_type(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_TianxiafirstExtraaddattrAttributeDesc::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_value = 1;
    if (has_m_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_value());
    }

    // optional int32 m_type = 2;
    if (has_m_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_type());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_TianxiafirstExtraaddattrAttributeDesc::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_TianxiafirstExtraaddattrAttributeDesc* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_TianxiafirstExtraaddattrAttributeDesc*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_TianxiafirstExtraaddattrAttributeDesc::MergeFrom(const E_TianxiafirstExtraaddattrAttributeDesc& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_value()) {
      set_m_value(from.m_value());
    }
    if (from.has_m_type()) {
      set_m_type(from.m_type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_TianxiafirstExtraaddattrAttributeDesc::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_TianxiafirstExtraaddattrAttributeDesc::CopyFrom(const E_TianxiafirstExtraaddattrAttributeDesc& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_TianxiafirstExtraaddattrAttributeDesc::IsInitialized() const {

  return true;
}

void E_TianxiafirstExtraaddattrAttributeDesc::Swap(E_TianxiafirstExtraaddattrAttributeDesc* other) {
  if (other != this) {
    std::swap(m_value_, other->m_value_);
    std::swap(m_type_, other->m_type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_TianxiafirstExtraaddattrAttributeDesc::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_TianxiafirstExtraaddattrAttributeDesc_descriptor_;
  metadata.reflection = E_TianxiafirstExtraaddattrAttributeDesc_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_TianxiafirstExtraaddattr::kMIdFieldNumber;
const int E_TianxiafirstExtraaddattr::kMValueFieldNumber;
const int E_TianxiafirstExtraaddattr::kMAttributeFieldNumber;
#endif  // !_MSC_VER

E_TianxiafirstExtraaddattr::E_TianxiafirstExtraaddattr()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_TianxiafirstExtraaddattr::InitAsDefaultInstance() {
}

E_TianxiafirstExtraaddattr::E_TianxiafirstExtraaddattr(const E_TianxiafirstExtraaddattr& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_TianxiafirstExtraaddattr::SharedCtor() {
  _cached_size_ = 0;
  m_id_ = 0;
  m_value_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_TianxiafirstExtraaddattr::~E_TianxiafirstExtraaddattr() {
  SharedDtor();
}

void E_TianxiafirstExtraaddattr::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_TianxiafirstExtraaddattr::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_TianxiafirstExtraaddattr::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_TianxiafirstExtraaddattr_descriptor_;
}

const E_TianxiafirstExtraaddattr& E_TianxiafirstExtraaddattr::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fTianxiafirst_2eproto();
  return *default_instance_;
}

E_TianxiafirstExtraaddattr* E_TianxiafirstExtraaddattr::default_instance_ = NULL;

E_TianxiafirstExtraaddattr* E_TianxiafirstExtraaddattr::New() const {
  return new E_TianxiafirstExtraaddattr;
}

void E_TianxiafirstExtraaddattr::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_id_ = 0;
    m_value_ = 0;
  }
  m_attribute_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_TianxiafirstExtraaddattr::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_id_)));
          set_has_m_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_value;
        break;
      }

      // optional int32 m_value = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_value:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_value_)));
          set_has_m_value();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_m_attribute;
        break;
      }

      // repeated .proto_ff.E_TianxiafirstExtraaddattrAttributeDesc m_attribute = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_attribute:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_m_attribute()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_m_attribute;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_TianxiafirstExtraaddattr::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_id(), output);
  }

  // optional int32 m_value = 2;
  if (has_m_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_value(), output);
  }

  // repeated .proto_ff.E_TianxiafirstExtraaddattrAttributeDesc m_attribute = 3;
  for (int i = 0; i < this->m_attribute_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->m_attribute(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_TianxiafirstExtraaddattr::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_id(), target);
  }

  // optional int32 m_value = 2;
  if (has_m_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_value(), target);
  }

  // repeated .proto_ff.E_TianxiafirstExtraaddattrAttributeDesc m_attribute = 3;
  for (int i = 0; i < this->m_attribute_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->m_attribute(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_TianxiafirstExtraaddattr::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_id = 1;
    if (has_m_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_id());
    }

    // optional int32 m_value = 2;
    if (has_m_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_value());
    }

  }
  // repeated .proto_ff.E_TianxiafirstExtraaddattrAttributeDesc m_attribute = 3;
  total_size += 1 * this->m_attribute_size();
  for (int i = 0; i < this->m_attribute_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->m_attribute(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_TianxiafirstExtraaddattr::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_TianxiafirstExtraaddattr* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_TianxiafirstExtraaddattr*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_TianxiafirstExtraaddattr::MergeFrom(const E_TianxiafirstExtraaddattr& from) {
  GOOGLE_CHECK_NE(&from, this);
  m_attribute_.MergeFrom(from.m_attribute_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_id()) {
      set_m_id(from.m_id());
    }
    if (from.has_m_value()) {
      set_m_value(from.m_value());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_TianxiafirstExtraaddattr::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_TianxiafirstExtraaddattr::CopyFrom(const E_TianxiafirstExtraaddattr& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_TianxiafirstExtraaddattr::IsInitialized() const {

  return true;
}

void E_TianxiafirstExtraaddattr::Swap(E_TianxiafirstExtraaddattr* other) {
  if (other != this) {
    std::swap(m_id_, other->m_id_);
    std::swap(m_value_, other->m_value_);
    m_attribute_.Swap(&other->m_attribute_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_TianxiafirstExtraaddattr::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_TianxiafirstExtraaddattr_descriptor_;
  metadata.reflection = E_TianxiafirstExtraaddattr_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_TianxiafirstExtraaddattr::kETianxiafirstExtraaddattrListFieldNumber;
#endif  // !_MSC_VER

Sheet_TianxiafirstExtraaddattr::Sheet_TianxiafirstExtraaddattr()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_TianxiafirstExtraaddattr::InitAsDefaultInstance() {
}

Sheet_TianxiafirstExtraaddattr::Sheet_TianxiafirstExtraaddattr(const Sheet_TianxiafirstExtraaddattr& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_TianxiafirstExtraaddattr::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_TianxiafirstExtraaddattr::~Sheet_TianxiafirstExtraaddattr() {
  SharedDtor();
}

void Sheet_TianxiafirstExtraaddattr::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_TianxiafirstExtraaddattr::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_TianxiafirstExtraaddattr::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_TianxiafirstExtraaddattr_descriptor_;
}

const Sheet_TianxiafirstExtraaddattr& Sheet_TianxiafirstExtraaddattr::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fTianxiafirst_2eproto();
  return *default_instance_;
}

Sheet_TianxiafirstExtraaddattr* Sheet_TianxiafirstExtraaddattr::default_instance_ = NULL;

Sheet_TianxiafirstExtraaddattr* Sheet_TianxiafirstExtraaddattr::New() const {
  return new Sheet_TianxiafirstExtraaddattr;
}

void Sheet_TianxiafirstExtraaddattr::Clear() {
  e_tianxiafirstextraaddattr_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_TianxiafirstExtraaddattr::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.E_TianxiafirstExtraaddattr E_TianxiafirstExtraaddattr_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_E_TianxiafirstExtraaddattr_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_e_tianxiafirstextraaddattr_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_E_TianxiafirstExtraaddattr_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_TianxiafirstExtraaddattr::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.E_TianxiafirstExtraaddattr E_TianxiafirstExtraaddattr_List = 1;
  for (int i = 0; i < this->e_tianxiafirstextraaddattr_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->e_tianxiafirstextraaddattr_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_TianxiafirstExtraaddattr::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.E_TianxiafirstExtraaddattr E_TianxiafirstExtraaddattr_List = 1;
  for (int i = 0; i < this->e_tianxiafirstextraaddattr_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->e_tianxiafirstextraaddattr_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_TianxiafirstExtraaddattr::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.E_TianxiafirstExtraaddattr E_TianxiafirstExtraaddattr_List = 1;
  total_size += 1 * this->e_tianxiafirstextraaddattr_list_size();
  for (int i = 0; i < this->e_tianxiafirstextraaddattr_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->e_tianxiafirstextraaddattr_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_TianxiafirstExtraaddattr::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_TianxiafirstExtraaddattr* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_TianxiafirstExtraaddattr*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_TianxiafirstExtraaddattr::MergeFrom(const Sheet_TianxiafirstExtraaddattr& from) {
  GOOGLE_CHECK_NE(&from, this);
  e_tianxiafirstextraaddattr_list_.MergeFrom(from.e_tianxiafirstextraaddattr_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_TianxiafirstExtraaddattr::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_TianxiafirstExtraaddattr::CopyFrom(const Sheet_TianxiafirstExtraaddattr& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_TianxiafirstExtraaddattr::IsInitialized() const {

  return true;
}

void Sheet_TianxiafirstExtraaddattr::Swap(Sheet_TianxiafirstExtraaddattr* other) {
  if (other != this) {
    e_tianxiafirstextraaddattr_list_.Swap(&other->e_tianxiafirstextraaddattr_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_TianxiafirstExtraaddattr::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_TianxiafirstExtraaddattr_descriptor_;
  metadata.reflection = Sheet_TianxiafirstExtraaddattr_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_TianxiafirstFirstaddattrAttributeDesc::kMValueFieldNumber;
const int E_TianxiafirstFirstaddattrAttributeDesc::kMTypeFieldNumber;
#endif  // !_MSC_VER

E_TianxiafirstFirstaddattrAttributeDesc::E_TianxiafirstFirstaddattrAttributeDesc()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_TianxiafirstFirstaddattrAttributeDesc::InitAsDefaultInstance() {
}

E_TianxiafirstFirstaddattrAttributeDesc::E_TianxiafirstFirstaddattrAttributeDesc(const E_TianxiafirstFirstaddattrAttributeDesc& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_TianxiafirstFirstaddattrAttributeDesc::SharedCtor() {
  _cached_size_ = 0;
  m_value_ = 0;
  m_type_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_TianxiafirstFirstaddattrAttributeDesc::~E_TianxiafirstFirstaddattrAttributeDesc() {
  SharedDtor();
}

void E_TianxiafirstFirstaddattrAttributeDesc::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_TianxiafirstFirstaddattrAttributeDesc::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_TianxiafirstFirstaddattrAttributeDesc::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_TianxiafirstFirstaddattrAttributeDesc_descriptor_;
}

const E_TianxiafirstFirstaddattrAttributeDesc& E_TianxiafirstFirstaddattrAttributeDesc::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fTianxiafirst_2eproto();
  return *default_instance_;
}

E_TianxiafirstFirstaddattrAttributeDesc* E_TianxiafirstFirstaddattrAttributeDesc::default_instance_ = NULL;

E_TianxiafirstFirstaddattrAttributeDesc* E_TianxiafirstFirstaddattrAttributeDesc::New() const {
  return new E_TianxiafirstFirstaddattrAttributeDesc;
}

void E_TianxiafirstFirstaddattrAttributeDesc::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_value_ = 0;
    m_type_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_TianxiafirstFirstaddattrAttributeDesc::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_value = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_value_)));
          set_has_m_value();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_type;
        break;
      }

      // optional int32 m_type = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_type_)));
          set_has_m_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_TianxiafirstFirstaddattrAttributeDesc::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_value = 1;
  if (has_m_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_value(), output);
  }

  // optional int32 m_type = 2;
  if (has_m_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_type(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_TianxiafirstFirstaddattrAttributeDesc::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_value = 1;
  if (has_m_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_value(), target);
  }

  // optional int32 m_type = 2;
  if (has_m_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_type(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_TianxiafirstFirstaddattrAttributeDesc::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_value = 1;
    if (has_m_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_value());
    }

    // optional int32 m_type = 2;
    if (has_m_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_type());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_TianxiafirstFirstaddattrAttributeDesc::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_TianxiafirstFirstaddattrAttributeDesc* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_TianxiafirstFirstaddattrAttributeDesc*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_TianxiafirstFirstaddattrAttributeDesc::MergeFrom(const E_TianxiafirstFirstaddattrAttributeDesc& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_value()) {
      set_m_value(from.m_value());
    }
    if (from.has_m_type()) {
      set_m_type(from.m_type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_TianxiafirstFirstaddattrAttributeDesc::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_TianxiafirstFirstaddattrAttributeDesc::CopyFrom(const E_TianxiafirstFirstaddattrAttributeDesc& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_TianxiafirstFirstaddattrAttributeDesc::IsInitialized() const {

  return true;
}

void E_TianxiafirstFirstaddattrAttributeDesc::Swap(E_TianxiafirstFirstaddattrAttributeDesc* other) {
  if (other != this) {
    std::swap(m_value_, other->m_value_);
    std::swap(m_type_, other->m_type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_TianxiafirstFirstaddattrAttributeDesc::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_TianxiafirstFirstaddattrAttributeDesc_descriptor_;
  metadata.reflection = E_TianxiafirstFirstaddattrAttributeDesc_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_TianxiafirstFirstaddattr::kMIdFieldNumber;
const int E_TianxiafirstFirstaddattr::kMValueFieldNumber;
const int E_TianxiafirstFirstaddattr::kMAttributeFieldNumber;
#endif  // !_MSC_VER

E_TianxiafirstFirstaddattr::E_TianxiafirstFirstaddattr()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_TianxiafirstFirstaddattr::InitAsDefaultInstance() {
}

E_TianxiafirstFirstaddattr::E_TianxiafirstFirstaddattr(const E_TianxiafirstFirstaddattr& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_TianxiafirstFirstaddattr::SharedCtor() {
  _cached_size_ = 0;
  m_id_ = 0;
  m_value_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_TianxiafirstFirstaddattr::~E_TianxiafirstFirstaddattr() {
  SharedDtor();
}

void E_TianxiafirstFirstaddattr::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_TianxiafirstFirstaddattr::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_TianxiafirstFirstaddattr::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_TianxiafirstFirstaddattr_descriptor_;
}

const E_TianxiafirstFirstaddattr& E_TianxiafirstFirstaddattr::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fTianxiafirst_2eproto();
  return *default_instance_;
}

E_TianxiafirstFirstaddattr* E_TianxiafirstFirstaddattr::default_instance_ = NULL;

E_TianxiafirstFirstaddattr* E_TianxiafirstFirstaddattr::New() const {
  return new E_TianxiafirstFirstaddattr;
}

void E_TianxiafirstFirstaddattr::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_id_ = 0;
    m_value_ = 0;
  }
  m_attribute_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_TianxiafirstFirstaddattr::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_id_)));
          set_has_m_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_value;
        break;
      }

      // optional int32 m_value = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_value:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_value_)));
          set_has_m_value();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_m_attribute;
        break;
      }

      // repeated .proto_ff.E_TianxiafirstFirstaddattrAttributeDesc m_attribute = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_attribute:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_m_attribute()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_m_attribute;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_TianxiafirstFirstaddattr::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_id(), output);
  }

  // optional int32 m_value = 2;
  if (has_m_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_value(), output);
  }

  // repeated .proto_ff.E_TianxiafirstFirstaddattrAttributeDesc m_attribute = 3;
  for (int i = 0; i < this->m_attribute_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->m_attribute(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_TianxiafirstFirstaddattr::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_id(), target);
  }

  // optional int32 m_value = 2;
  if (has_m_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_value(), target);
  }

  // repeated .proto_ff.E_TianxiafirstFirstaddattrAttributeDesc m_attribute = 3;
  for (int i = 0; i < this->m_attribute_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->m_attribute(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_TianxiafirstFirstaddattr::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_id = 1;
    if (has_m_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_id());
    }

    // optional int32 m_value = 2;
    if (has_m_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_value());
    }

  }
  // repeated .proto_ff.E_TianxiafirstFirstaddattrAttributeDesc m_attribute = 3;
  total_size += 1 * this->m_attribute_size();
  for (int i = 0; i < this->m_attribute_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->m_attribute(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_TianxiafirstFirstaddattr::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_TianxiafirstFirstaddattr* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_TianxiafirstFirstaddattr*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_TianxiafirstFirstaddattr::MergeFrom(const E_TianxiafirstFirstaddattr& from) {
  GOOGLE_CHECK_NE(&from, this);
  m_attribute_.MergeFrom(from.m_attribute_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_id()) {
      set_m_id(from.m_id());
    }
    if (from.has_m_value()) {
      set_m_value(from.m_value());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_TianxiafirstFirstaddattr::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_TianxiafirstFirstaddattr::CopyFrom(const E_TianxiafirstFirstaddattr& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_TianxiafirstFirstaddattr::IsInitialized() const {

  return true;
}

void E_TianxiafirstFirstaddattr::Swap(E_TianxiafirstFirstaddattr* other) {
  if (other != this) {
    std::swap(m_id_, other->m_id_);
    std::swap(m_value_, other->m_value_);
    m_attribute_.Swap(&other->m_attribute_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_TianxiafirstFirstaddattr::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_TianxiafirstFirstaddattr_descriptor_;
  metadata.reflection = E_TianxiafirstFirstaddattr_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_TianxiafirstFirstaddattr::kETianxiafirstFirstaddattrListFieldNumber;
#endif  // !_MSC_VER

Sheet_TianxiafirstFirstaddattr::Sheet_TianxiafirstFirstaddattr()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_TianxiafirstFirstaddattr::InitAsDefaultInstance() {
}

Sheet_TianxiafirstFirstaddattr::Sheet_TianxiafirstFirstaddattr(const Sheet_TianxiafirstFirstaddattr& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_TianxiafirstFirstaddattr::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_TianxiafirstFirstaddattr::~Sheet_TianxiafirstFirstaddattr() {
  SharedDtor();
}

void Sheet_TianxiafirstFirstaddattr::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_TianxiafirstFirstaddattr::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_TianxiafirstFirstaddattr::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_TianxiafirstFirstaddattr_descriptor_;
}

const Sheet_TianxiafirstFirstaddattr& Sheet_TianxiafirstFirstaddattr::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fTianxiafirst_2eproto();
  return *default_instance_;
}

Sheet_TianxiafirstFirstaddattr* Sheet_TianxiafirstFirstaddattr::default_instance_ = NULL;

Sheet_TianxiafirstFirstaddattr* Sheet_TianxiafirstFirstaddattr::New() const {
  return new Sheet_TianxiafirstFirstaddattr;
}

void Sheet_TianxiafirstFirstaddattr::Clear() {
  e_tianxiafirstfirstaddattr_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_TianxiafirstFirstaddattr::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.E_TianxiafirstFirstaddattr E_TianxiafirstFirstaddattr_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_E_TianxiafirstFirstaddattr_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_e_tianxiafirstfirstaddattr_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_E_TianxiafirstFirstaddattr_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_TianxiafirstFirstaddattr::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.E_TianxiafirstFirstaddattr E_TianxiafirstFirstaddattr_List = 1;
  for (int i = 0; i < this->e_tianxiafirstfirstaddattr_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->e_tianxiafirstfirstaddattr_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_TianxiafirstFirstaddattr::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.E_TianxiafirstFirstaddattr E_TianxiafirstFirstaddattr_List = 1;
  for (int i = 0; i < this->e_tianxiafirstfirstaddattr_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->e_tianxiafirstfirstaddattr_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_TianxiafirstFirstaddattr::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.E_TianxiafirstFirstaddattr E_TianxiafirstFirstaddattr_List = 1;
  total_size += 1 * this->e_tianxiafirstfirstaddattr_list_size();
  for (int i = 0; i < this->e_tianxiafirstfirstaddattr_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->e_tianxiafirstfirstaddattr_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_TianxiafirstFirstaddattr::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_TianxiafirstFirstaddattr* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_TianxiafirstFirstaddattr*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_TianxiafirstFirstaddattr::MergeFrom(const Sheet_TianxiafirstFirstaddattr& from) {
  GOOGLE_CHECK_NE(&from, this);
  e_tianxiafirstfirstaddattr_list_.MergeFrom(from.e_tianxiafirstfirstaddattr_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_TianxiafirstFirstaddattr::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_TianxiafirstFirstaddattr::CopyFrom(const Sheet_TianxiafirstFirstaddattr& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_TianxiafirstFirstaddattr::IsInitialized() const {

  return true;
}

void Sheet_TianxiafirstFirstaddattr::Swap(Sheet_TianxiafirstFirstaddattr* other) {
  if (other != this) {
    e_tianxiafirstfirstaddattr_list_.Swap(&other->e_tianxiafirstfirstaddattr_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_TianxiafirstFirstaddattr::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_TianxiafirstFirstaddattr_descriptor_;
  metadata.reflection = Sheet_TianxiafirstFirstaddattr_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_TianxiafirstShop::kMIdFieldNumber;
const int E_TianxiafirstShop::kMItemIdFieldNumber;
const int E_TianxiafirstShop::kMCostItemFieldNumber;
const int E_TianxiafirstShop::kMCostNumFieldNumber;
const int E_TianxiafirstShop::kMCountFieldNumber;
const int E_TianxiafirstShop::kMLimitTypeFieldNumber;
const int E_TianxiafirstShop::kMConditionFieldNumber;
const int E_TianxiafirstShop::kMConditionParamFieldNumber;
#endif  // !_MSC_VER

E_TianxiafirstShop::E_TianxiafirstShop()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_TianxiafirstShop::InitAsDefaultInstance() {
}

E_TianxiafirstShop::E_TianxiafirstShop(const E_TianxiafirstShop& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_TianxiafirstShop::SharedCtor() {
  _cached_size_ = 0;
  m_id_ = 0;
  m_itemid_ = 0;
  m_costitem_ = 0;
  m_costnum_ = 0;
  m_count_ = 0;
  m_limittype_ = 0;
  m_condition_ = 0;
  m_conditionparam_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_TianxiafirstShop::~E_TianxiafirstShop() {
  SharedDtor();
}

void E_TianxiafirstShop::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_TianxiafirstShop::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_TianxiafirstShop::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_TianxiafirstShop_descriptor_;
}

const E_TianxiafirstShop& E_TianxiafirstShop::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fTianxiafirst_2eproto();
  return *default_instance_;
}

E_TianxiafirstShop* E_TianxiafirstShop::default_instance_ = NULL;

E_TianxiafirstShop* E_TianxiafirstShop::New() const {
  return new E_TianxiafirstShop;
}

void E_TianxiafirstShop::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_id_ = 0;
    m_itemid_ = 0;
    m_costitem_ = 0;
    m_costnum_ = 0;
    m_count_ = 0;
    m_limittype_ = 0;
    m_condition_ = 0;
    m_conditionparam_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_TianxiafirstShop::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_id_)));
          set_has_m_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_itemId;
        break;
      }

      // optional int32 m_itemId = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_itemId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_itemid_)));
          set_has_m_itemid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_m_costItem;
        break;
      }

      // optional int32 m_costItem = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_costItem:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_costitem_)));
          set_has_m_costitem();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_m_costNum;
        break;
      }

      // optional int32 m_costNum = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_costNum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_costnum_)));
          set_has_m_costnum();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_m_count;
        break;
      }

      // optional int32 m_count = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_count:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_count_)));
          set_has_m_count();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_m_limitType;
        break;
      }

      // optional int32 m_limitType = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_limitType:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_limittype_)));
          set_has_m_limittype();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_m_condition;
        break;
      }

      // optional int32 m_condition = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_condition:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_condition_)));
          set_has_m_condition();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(64)) goto parse_m_conditionParam;
        break;
      }

      // optional int32 m_conditionParam = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_conditionParam:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_conditionparam_)));
          set_has_m_conditionparam();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_TianxiafirstShop::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_id(), output);
  }

  // optional int32 m_itemId = 2;
  if (has_m_itemid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_itemid(), output);
  }

  // optional int32 m_costItem = 3;
  if (has_m_costitem()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->m_costitem(), output);
  }

  // optional int32 m_costNum = 4;
  if (has_m_costnum()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->m_costnum(), output);
  }

  // optional int32 m_count = 5;
  if (has_m_count()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->m_count(), output);
  }

  // optional int32 m_limitType = 6;
  if (has_m_limittype()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->m_limittype(), output);
  }

  // optional int32 m_condition = 7;
  if (has_m_condition()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->m_condition(), output);
  }

  // optional int32 m_conditionParam = 8;
  if (has_m_conditionparam()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->m_conditionparam(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_TianxiafirstShop::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_id(), target);
  }

  // optional int32 m_itemId = 2;
  if (has_m_itemid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_itemid(), target);
  }

  // optional int32 m_costItem = 3;
  if (has_m_costitem()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->m_costitem(), target);
  }

  // optional int32 m_costNum = 4;
  if (has_m_costnum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->m_costnum(), target);
  }

  // optional int32 m_count = 5;
  if (has_m_count()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->m_count(), target);
  }

  // optional int32 m_limitType = 6;
  if (has_m_limittype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->m_limittype(), target);
  }

  // optional int32 m_condition = 7;
  if (has_m_condition()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->m_condition(), target);
  }

  // optional int32 m_conditionParam = 8;
  if (has_m_conditionparam()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->m_conditionparam(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_TianxiafirstShop::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_id = 1;
    if (has_m_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_id());
    }

    // optional int32 m_itemId = 2;
    if (has_m_itemid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_itemid());
    }

    // optional int32 m_costItem = 3;
    if (has_m_costitem()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_costitem());
    }

    // optional int32 m_costNum = 4;
    if (has_m_costnum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_costnum());
    }

    // optional int32 m_count = 5;
    if (has_m_count()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_count());
    }

    // optional int32 m_limitType = 6;
    if (has_m_limittype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_limittype());
    }

    // optional int32 m_condition = 7;
    if (has_m_condition()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_condition());
    }

    // optional int32 m_conditionParam = 8;
    if (has_m_conditionparam()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_conditionparam());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_TianxiafirstShop::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_TianxiafirstShop* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_TianxiafirstShop*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_TianxiafirstShop::MergeFrom(const E_TianxiafirstShop& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_id()) {
      set_m_id(from.m_id());
    }
    if (from.has_m_itemid()) {
      set_m_itemid(from.m_itemid());
    }
    if (from.has_m_costitem()) {
      set_m_costitem(from.m_costitem());
    }
    if (from.has_m_costnum()) {
      set_m_costnum(from.m_costnum());
    }
    if (from.has_m_count()) {
      set_m_count(from.m_count());
    }
    if (from.has_m_limittype()) {
      set_m_limittype(from.m_limittype());
    }
    if (from.has_m_condition()) {
      set_m_condition(from.m_condition());
    }
    if (from.has_m_conditionparam()) {
      set_m_conditionparam(from.m_conditionparam());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_TianxiafirstShop::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_TianxiafirstShop::CopyFrom(const E_TianxiafirstShop& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_TianxiafirstShop::IsInitialized() const {

  return true;
}

void E_TianxiafirstShop::Swap(E_TianxiafirstShop* other) {
  if (other != this) {
    std::swap(m_id_, other->m_id_);
    std::swap(m_itemid_, other->m_itemid_);
    std::swap(m_costitem_, other->m_costitem_);
    std::swap(m_costnum_, other->m_costnum_);
    std::swap(m_count_, other->m_count_);
    std::swap(m_limittype_, other->m_limittype_);
    std::swap(m_condition_, other->m_condition_);
    std::swap(m_conditionparam_, other->m_conditionparam_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_TianxiafirstShop::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_TianxiafirstShop_descriptor_;
  metadata.reflection = E_TianxiafirstShop_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_TianxiafirstShop::kETianxiafirstShopListFieldNumber;
#endif  // !_MSC_VER

Sheet_TianxiafirstShop::Sheet_TianxiafirstShop()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_TianxiafirstShop::InitAsDefaultInstance() {
}

Sheet_TianxiafirstShop::Sheet_TianxiafirstShop(const Sheet_TianxiafirstShop& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_TianxiafirstShop::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_TianxiafirstShop::~Sheet_TianxiafirstShop() {
  SharedDtor();
}

void Sheet_TianxiafirstShop::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_TianxiafirstShop::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_TianxiafirstShop::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_TianxiafirstShop_descriptor_;
}

const Sheet_TianxiafirstShop& Sheet_TianxiafirstShop::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fTianxiafirst_2eproto();
  return *default_instance_;
}

Sheet_TianxiafirstShop* Sheet_TianxiafirstShop::default_instance_ = NULL;

Sheet_TianxiafirstShop* Sheet_TianxiafirstShop::New() const {
  return new Sheet_TianxiafirstShop;
}

void Sheet_TianxiafirstShop::Clear() {
  e_tianxiafirstshop_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_TianxiafirstShop::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.E_TianxiafirstShop E_TianxiafirstShop_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_E_TianxiafirstShop_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_e_tianxiafirstshop_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_E_TianxiafirstShop_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_TianxiafirstShop::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.E_TianxiafirstShop E_TianxiafirstShop_List = 1;
  for (int i = 0; i < this->e_tianxiafirstshop_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->e_tianxiafirstshop_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_TianxiafirstShop::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.E_TianxiafirstShop E_TianxiafirstShop_List = 1;
  for (int i = 0; i < this->e_tianxiafirstshop_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->e_tianxiafirstshop_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_TianxiafirstShop::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.E_TianxiafirstShop E_TianxiafirstShop_List = 1;
  total_size += 1 * this->e_tianxiafirstshop_list_size();
  for (int i = 0; i < this->e_tianxiafirstshop_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->e_tianxiafirstshop_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_TianxiafirstShop::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_TianxiafirstShop* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_TianxiafirstShop*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_TianxiafirstShop::MergeFrom(const Sheet_TianxiafirstShop& from) {
  GOOGLE_CHECK_NE(&from, this);
  e_tianxiafirstshop_list_.MergeFrom(from.e_tianxiafirstshop_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_TianxiafirstShop::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_TianxiafirstShop::CopyFrom(const Sheet_TianxiafirstShop& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_TianxiafirstShop::IsInitialized() const {

  return true;
}

void Sheet_TianxiafirstShop::Swap(Sheet_TianxiafirstShop* other) {
  if (other != this) {
    e_tianxiafirstshop_list_.Swap(&other->e_tianxiafirstshop_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_TianxiafirstShop::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_TianxiafirstShop_descriptor_;
  metadata.reflection = Sheet_TianxiafirstShop_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_TianxiafirstDanmaku::kMIdFieldNumber;
const int E_TianxiafirstDanmaku::kMTypeFieldNumber;
const int E_TianxiafirstDanmaku::kMDanmakuFieldNumber;
#endif  // !_MSC_VER

E_TianxiafirstDanmaku::E_TianxiafirstDanmaku()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_TianxiafirstDanmaku::InitAsDefaultInstance() {
}

E_TianxiafirstDanmaku::E_TianxiafirstDanmaku(const E_TianxiafirstDanmaku& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_TianxiafirstDanmaku::SharedCtor() {
  _cached_size_ = 0;
  m_id_ = 0;
  m_type_ = 0;
  m_danmaku_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_TianxiafirstDanmaku::~E_TianxiafirstDanmaku() {
  SharedDtor();
}

void E_TianxiafirstDanmaku::SharedDtor() {
  if (m_danmaku_ != &::google::protobuf::internal::kEmptyString) {
    delete m_danmaku_;
  }
  if (this != default_instance_) {
  }
}

void E_TianxiafirstDanmaku::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_TianxiafirstDanmaku::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_TianxiafirstDanmaku_descriptor_;
}

const E_TianxiafirstDanmaku& E_TianxiafirstDanmaku::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fTianxiafirst_2eproto();
  return *default_instance_;
}

E_TianxiafirstDanmaku* E_TianxiafirstDanmaku::default_instance_ = NULL;

E_TianxiafirstDanmaku* E_TianxiafirstDanmaku::New() const {
  return new E_TianxiafirstDanmaku;
}

void E_TianxiafirstDanmaku::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_id_ = 0;
    m_type_ = 0;
    if (has_m_danmaku()) {
      if (m_danmaku_ != &::google::protobuf::internal::kEmptyString) {
        m_danmaku_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_TianxiafirstDanmaku::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_id_)));
          set_has_m_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_type;
        break;
      }

      // optional int32 m_type = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_type_)));
          set_has_m_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_m_danmaku;
        break;
      }

      // optional string m_danmaku = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_danmaku:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_m_danmaku()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->m_danmaku().data(), this->m_danmaku().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_TianxiafirstDanmaku::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_id(), output);
  }

  // optional int32 m_type = 2;
  if (has_m_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_type(), output);
  }

  // optional string m_danmaku = 3;
  if (has_m_danmaku()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_danmaku().data(), this->m_danmaku().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->m_danmaku(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_TianxiafirstDanmaku::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_id(), target);
  }

  // optional int32 m_type = 2;
  if (has_m_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_type(), target);
  }

  // optional string m_danmaku = 3;
  if (has_m_danmaku()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_danmaku().data(), this->m_danmaku().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->m_danmaku(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_TianxiafirstDanmaku::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_id = 1;
    if (has_m_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_id());
    }

    // optional int32 m_type = 2;
    if (has_m_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_type());
    }

    // optional string m_danmaku = 3;
    if (has_m_danmaku()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->m_danmaku());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_TianxiafirstDanmaku::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_TianxiafirstDanmaku* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_TianxiafirstDanmaku*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_TianxiafirstDanmaku::MergeFrom(const E_TianxiafirstDanmaku& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_id()) {
      set_m_id(from.m_id());
    }
    if (from.has_m_type()) {
      set_m_type(from.m_type());
    }
    if (from.has_m_danmaku()) {
      set_m_danmaku(from.m_danmaku());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_TianxiafirstDanmaku::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_TianxiafirstDanmaku::CopyFrom(const E_TianxiafirstDanmaku& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_TianxiafirstDanmaku::IsInitialized() const {

  return true;
}

void E_TianxiafirstDanmaku::Swap(E_TianxiafirstDanmaku* other) {
  if (other != this) {
    std::swap(m_id_, other->m_id_);
    std::swap(m_type_, other->m_type_);
    std::swap(m_danmaku_, other->m_danmaku_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_TianxiafirstDanmaku::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_TianxiafirstDanmaku_descriptor_;
  metadata.reflection = E_TianxiafirstDanmaku_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_TianxiafirstDanmaku::kETianxiafirstDanmakuListFieldNumber;
#endif  // !_MSC_VER

Sheet_TianxiafirstDanmaku::Sheet_TianxiafirstDanmaku()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_TianxiafirstDanmaku::InitAsDefaultInstance() {
}

Sheet_TianxiafirstDanmaku::Sheet_TianxiafirstDanmaku(const Sheet_TianxiafirstDanmaku& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_TianxiafirstDanmaku::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_TianxiafirstDanmaku::~Sheet_TianxiafirstDanmaku() {
  SharedDtor();
}

void Sheet_TianxiafirstDanmaku::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_TianxiafirstDanmaku::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_TianxiafirstDanmaku::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_TianxiafirstDanmaku_descriptor_;
}

const Sheet_TianxiafirstDanmaku& Sheet_TianxiafirstDanmaku::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fTianxiafirst_2eproto();
  return *default_instance_;
}

Sheet_TianxiafirstDanmaku* Sheet_TianxiafirstDanmaku::default_instance_ = NULL;

Sheet_TianxiafirstDanmaku* Sheet_TianxiafirstDanmaku::New() const {
  return new Sheet_TianxiafirstDanmaku;
}

void Sheet_TianxiafirstDanmaku::Clear() {
  e_tianxiafirstdanmaku_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_TianxiafirstDanmaku::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.E_TianxiafirstDanmaku E_TianxiafirstDanmaku_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_E_TianxiafirstDanmaku_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_e_tianxiafirstdanmaku_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_E_TianxiafirstDanmaku_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_TianxiafirstDanmaku::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.E_TianxiafirstDanmaku E_TianxiafirstDanmaku_List = 1;
  for (int i = 0; i < this->e_tianxiafirstdanmaku_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->e_tianxiafirstdanmaku_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_TianxiafirstDanmaku::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.E_TianxiafirstDanmaku E_TianxiafirstDanmaku_List = 1;
  for (int i = 0; i < this->e_tianxiafirstdanmaku_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->e_tianxiafirstdanmaku_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_TianxiafirstDanmaku::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.E_TianxiafirstDanmaku E_TianxiafirstDanmaku_List = 1;
  total_size += 1 * this->e_tianxiafirstdanmaku_list_size();
  for (int i = 0; i < this->e_tianxiafirstdanmaku_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->e_tianxiafirstdanmaku_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_TianxiafirstDanmaku::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_TianxiafirstDanmaku* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_TianxiafirstDanmaku*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_TianxiafirstDanmaku::MergeFrom(const Sheet_TianxiafirstDanmaku& from) {
  GOOGLE_CHECK_NE(&from, this);
  e_tianxiafirstdanmaku_list_.MergeFrom(from.e_tianxiafirstdanmaku_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_TianxiafirstDanmaku::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_TianxiafirstDanmaku::CopyFrom(const Sheet_TianxiafirstDanmaku& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_TianxiafirstDanmaku::IsInitialized() const {

  return true;
}

void Sheet_TianxiafirstDanmaku::Swap(Sheet_TianxiafirstDanmaku* other) {
  if (other != this) {
    e_tianxiafirstdanmaku_list_.Swap(&other->e_tianxiafirstdanmaku_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_TianxiafirstDanmaku::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_TianxiafirstDanmaku_descriptor_;
  metadata.reflection = Sheet_TianxiafirstDanmaku_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto_ff

// @@protoc_insertion_point(global_scope)
