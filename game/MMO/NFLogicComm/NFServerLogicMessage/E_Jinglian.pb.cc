// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: E_Jinglian.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "E_Jinglian.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace proto_ff {

namespace {

const ::google::protobuf::Descriptor* E_JinglianSimple_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_JinglianSimple_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_JinglianSimple_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_JinglianSimple_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_JinglianLvCostDesc_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_JinglianLvCostDesc_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_JinglianLvAttrDesc_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_JinglianLvAttrDesc_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_JinglianLv_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_JinglianLv_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_JinglianLv_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_JinglianLv_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_JinglianRace_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_JinglianRace_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_JinglianRace_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_JinglianRace_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_JinglianCostCostDesc_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_JinglianCostCostDesc_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_JinglianCost_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_JinglianCost_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_JinglianCost_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_JinglianCost_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_JinglianGm_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_JinglianGm_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_JinglianGm_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_JinglianGm_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_E_5fJinglian_2eproto() {
  protobuf_AddDesc_E_5fJinglian_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "E_Jinglian.proto");
  GOOGLE_CHECK(file != NULL);
  E_JinglianSimple_descriptor_ = file->message_type(0);
  static const int E_JinglianSimple_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_JinglianSimple, m_position_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_JinglianSimple, m_groupid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_JinglianSimple, m_openlv_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_JinglianSimple, m_default_attrs_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_JinglianSimple, m_open_attr_),
  };
  E_JinglianSimple_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_JinglianSimple_descriptor_,
      E_JinglianSimple::default_instance_,
      E_JinglianSimple_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_JinglianSimple, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_JinglianSimple, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_JinglianSimple));
  Sheet_JinglianSimple_descriptor_ = file->message_type(1);
  static const int Sheet_JinglianSimple_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_JinglianSimple, e_jingliansimple_list_),
  };
  Sheet_JinglianSimple_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_JinglianSimple_descriptor_,
      Sheet_JinglianSimple::default_instance_,
      Sheet_JinglianSimple_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_JinglianSimple, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_JinglianSimple, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_JinglianSimple));
  E_JinglianLvCostDesc_descriptor_ = file->message_type(2);
  static const int E_JinglianLvCostDesc_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_JinglianLvCostDesc, m_num_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_JinglianLvCostDesc, m_item_),
  };
  E_JinglianLvCostDesc_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_JinglianLvCostDesc_descriptor_,
      E_JinglianLvCostDesc::default_instance_,
      E_JinglianLvCostDesc_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_JinglianLvCostDesc, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_JinglianLvCostDesc, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_JinglianLvCostDesc));
  E_JinglianLvAttrDesc_descriptor_ = file->message_type(3);
  static const int E_JinglianLvAttrDesc_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_JinglianLvAttrDesc, m_value_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_JinglianLvAttrDesc, m_id_),
  };
  E_JinglianLvAttrDesc_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_JinglianLvAttrDesc_descriptor_,
      E_JinglianLvAttrDesc::default_instance_,
      E_JinglianLvAttrDesc_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_JinglianLvAttrDesc, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_JinglianLvAttrDesc, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_JinglianLvAttrDesc));
  E_JinglianLv_descriptor_ = file->message_type(4);
  static const int E_JinglianLv_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_JinglianLv, m_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_JinglianLv, m_groupid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_JinglianLv, m_lv_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_JinglianLv, m_cost_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_JinglianLv, m_attr_),
  };
  E_JinglianLv_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_JinglianLv_descriptor_,
      E_JinglianLv::default_instance_,
      E_JinglianLv_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_JinglianLv, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_JinglianLv, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_JinglianLv));
  Sheet_JinglianLv_descriptor_ = file->message_type(5);
  static const int Sheet_JinglianLv_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_JinglianLv, e_jinglianlv_list_),
  };
  Sheet_JinglianLv_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_JinglianLv_descriptor_,
      Sheet_JinglianLv::default_instance_,
      Sheet_JinglianLv_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_JinglianLv, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_JinglianLv, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_JinglianLv));
  E_JinglianRace_descriptor_ = file->message_type(6);
  static const int E_JinglianRace_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_JinglianRace, m_quality_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_JinglianRace, m_min_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_JinglianRace, m_max_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_JinglianRace, m_quanz_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_JinglianRace, m_min_1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_JinglianRace, m_max_1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_JinglianRace, m_quanz_1_),
  };
  E_JinglianRace_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_JinglianRace_descriptor_,
      E_JinglianRace::default_instance_,
      E_JinglianRace_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_JinglianRace, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_JinglianRace, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_JinglianRace));
  Sheet_JinglianRace_descriptor_ = file->message_type(7);
  static const int Sheet_JinglianRace_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_JinglianRace, e_jinglianrace_list_),
  };
  Sheet_JinglianRace_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_JinglianRace_descriptor_,
      Sheet_JinglianRace::default_instance_,
      Sheet_JinglianRace_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_JinglianRace, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_JinglianRace, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_JinglianRace));
  E_JinglianCostCostDesc_descriptor_ = file->message_type(8);
  static const int E_JinglianCostCostDesc_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_JinglianCostCostDesc, m_num_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_JinglianCostCostDesc, m_item_),
  };
  E_JinglianCostCostDesc_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_JinglianCostCostDesc_descriptor_,
      E_JinglianCostCostDesc::default_instance_,
      E_JinglianCostCostDesc_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_JinglianCostCostDesc, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_JinglianCostCostDesc, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_JinglianCostCostDesc));
  E_JinglianCost_descriptor_ = file->message_type(9);
  static const int E_JinglianCost_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_JinglianCost, m_lockid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_JinglianCost, m_cost_),
  };
  E_JinglianCost_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_JinglianCost_descriptor_,
      E_JinglianCost::default_instance_,
      E_JinglianCost_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_JinglianCost, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_JinglianCost, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_JinglianCost));
  Sheet_JinglianCost_descriptor_ = file->message_type(10);
  static const int Sheet_JinglianCost_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_JinglianCost, e_jingliancost_list_),
  };
  Sheet_JinglianCost_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_JinglianCost_descriptor_,
      Sheet_JinglianCost::default_instance_,
      Sheet_JinglianCost_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_JinglianCost, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_JinglianCost, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_JinglianCost));
  E_JinglianGm_descriptor_ = file->message_type(11);
  static const int E_JinglianGm_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_JinglianGm, m_lv_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_JinglianGm, m_lock_num_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_JinglianGm, m_lock_quality_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_JinglianGm, m_addval_),
  };
  E_JinglianGm_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_JinglianGm_descriptor_,
      E_JinglianGm::default_instance_,
      E_JinglianGm_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_JinglianGm, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_JinglianGm, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_JinglianGm));
  Sheet_JinglianGm_descriptor_ = file->message_type(12);
  static const int Sheet_JinglianGm_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_JinglianGm, e_jingliangm_list_),
  };
  Sheet_JinglianGm_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_JinglianGm_descriptor_,
      Sheet_JinglianGm::default_instance_,
      Sheet_JinglianGm_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_JinglianGm, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_JinglianGm, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_JinglianGm));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_E_5fJinglian_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_JinglianSimple_descriptor_, &E_JinglianSimple::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_JinglianSimple_descriptor_, &Sheet_JinglianSimple::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_JinglianLvCostDesc_descriptor_, &E_JinglianLvCostDesc::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_JinglianLvAttrDesc_descriptor_, &E_JinglianLvAttrDesc::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_JinglianLv_descriptor_, &E_JinglianLv::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_JinglianLv_descriptor_, &Sheet_JinglianLv::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_JinglianRace_descriptor_, &E_JinglianRace::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_JinglianRace_descriptor_, &Sheet_JinglianRace::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_JinglianCostCostDesc_descriptor_, &E_JinglianCostCostDesc::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_JinglianCost_descriptor_, &E_JinglianCost::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_JinglianCost_descriptor_, &Sheet_JinglianCost::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_JinglianGm_descriptor_, &E_JinglianGm::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_JinglianGm_descriptor_, &Sheet_JinglianGm::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_E_5fJinglian_2eproto() {
  delete E_JinglianSimple::default_instance_;
  delete E_JinglianSimple_reflection_;
  delete Sheet_JinglianSimple::default_instance_;
  delete Sheet_JinglianSimple_reflection_;
  delete E_JinglianLvCostDesc::default_instance_;
  delete E_JinglianLvCostDesc_reflection_;
  delete E_JinglianLvAttrDesc::default_instance_;
  delete E_JinglianLvAttrDesc_reflection_;
  delete E_JinglianLv::default_instance_;
  delete E_JinglianLv_reflection_;
  delete Sheet_JinglianLv::default_instance_;
  delete Sheet_JinglianLv_reflection_;
  delete E_JinglianRace::default_instance_;
  delete E_JinglianRace_reflection_;
  delete Sheet_JinglianRace::default_instance_;
  delete Sheet_JinglianRace_reflection_;
  delete E_JinglianCostCostDesc::default_instance_;
  delete E_JinglianCostCostDesc_reflection_;
  delete E_JinglianCost::default_instance_;
  delete E_JinglianCost_reflection_;
  delete Sheet_JinglianCost::default_instance_;
  delete Sheet_JinglianCost_reflection_;
  delete E_JinglianGm::default_instance_;
  delete E_JinglianGm_reflection_;
  delete Sheet_JinglianGm::default_instance_;
  delete Sheet_JinglianGm_reflection_;
}

void protobuf_AddDesc_E_5fJinglian_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::yd_fieldoptions::protobuf_AddDesc_yd_5ffieldoptions_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\020E_Jinglian.proto\022\010proto_ff\032\025yd_fieldop"
    "tions.proto\"\366\001\n\020E_JinglianSimple\022,\n\nm_po"
    "sition\030\001 \001(\005B\030\302\377\024\024\350\243\205\345\244\207\351\203\250\344\275\215\345\257\271\345\272\224ID\022("
    "\n\tm_groupId\030\002 \001(\005B\025\302\377\024\021\345\257\271\345\272\224\345\261\236\346\200\247\347\273\204ID"
    "\022\"\n\010m_openlv\030\003 \001(\005B\020\302\377\024\014\345\274\200\345\220\257\347\255\211\347\272\247\022/\n\017"
    "m_default_attrs\030\004 \001(\005B\026\302\377\024\022\351\273\230\350\256\244\345\261\236\346\200\247\346"
    "\235\241\346\225\260\0225\n\013m_open_attr\030\005 \003(\005B \302\377\024\030\350\247\243\351\224\201\345\261"
    "\236\346\200\247\347\262\276\347\202\274\347\255\211\347\272\247\210\301\024\003\"W\n\024Sheet_JinglianSi"
    "mple\022\?\n\025E_JinglianSimple_List\030\001 \003(\0132\032.pr"
    "oto_ff.E_JinglianSimpleB\004\210\301\024\020\"I\n\024E_Jingl"
    "ianLvCostDesc\022\031\n\005m_num\030\001 \001(\005B\n\302\377\024\006\346\225\260\351\207\217"
    "\022\026\n\006m_item\030\002 \001(\005B\006\302\377\024\002id\"F\n\024E_JinglianLv"
    "AttrDesc\022\030\n\007m_value\030\001 \001(\005B\007\302\377\024\003\345\200\274\022\024\n\004m_"
    "id\030\002 \001(\005B\006\302\377\024\002id\"\356\001\n\014E_JinglianLv\022\024\n\004m_i"
    "d\030\001 \001(\005B\006\302\377\024\002id\022(\n\tm_groupId\030\002 \001(\005B\025\302\377\024\021"
    "\345\257\271\345\272\224\345\261\236\346\200\247\347\273\204ID\022\030\n\004m_lv\030\003 \001(\005B\n\302\377\024\006\347\255\211"
    "\347\272\247\022D\n\006m_cost\030\004 \003(\0132\036.proto_ff.E_Jinglia"
    "nLvCostDescB\024\302\377\024\014\347\262\276\347\202\274\345\215\207\347\272\247\210\301\024\003\022>\n\006m_a"
    "ttr\030\005 \003(\0132\036.proto_ff.E_JinglianLvAttrDes"
    "cB\016\302\377\024\006\345\261\236\346\200\247\210\301\024\006\"L\n\020Sheet_JinglianLv\0228\n"
    "\021E_JinglianLv_List\030\001 \003(\0132\026.proto_ff.E_Ji"
    "nglianLvB\005\210\301\024\200\010\"\251\002\n\016E_JinglianRace\022#\n\tm_"
    "quality\030\001 \001(\005B\020\302\377\024\014\350\257\215\346\235\241\345\223\201\350\264\250\022%\n\005m_min"
    "\030\002 \001(\005B\026\302\377\024\022\350\257\215\346\235\241\345\223\201\350\264\250\350\214\203\345\233\264\022%\n\005m_max\030"
    "\003 \001(\005B\026\302\377\024\022\350\257\215\346\235\241\345\223\201\350\264\250\350\214\203\345\233\264\022\'\n\007m_quanz"
    "\030\004 \001(\005B\026\302\377\024\022\350\257\215\346\235\241\346\212\275\345\217\226\346\235\203\351\207\215\022\'\n\007m_min_"
    "1\030\005 \001(\005B\026\302\377\024\022\350\257\215\346\235\241\345\223\201\350\264\250\350\214\203\345\233\264\022\'\n\007m_max"
    "_1\030\006 \001(\005B\026\302\377\024\022\350\257\215\346\235\241\345\223\201\350\264\250\350\214\203\345\233\264\022)\n\tm_qu"
    "anz_1\030\007 \001(\005B\026\302\377\024\022\350\257\215\346\235\241\346\212\275\345\217\226\346\235\203\351\207\215\"Q\n\022S"
    "heet_JinglianRace\022;\n\023E_JinglianRace_List"
    "\030\001 \003(\0132\030.proto_ff.E_JinglianRaceB\004\210\301\024\010\"K"
    "\n\026E_JinglianCostCostDesc\022\031\n\005m_num\030\001 \001(\005B"
    "\n\302\377\024\006\346\225\260\351\207\217\022\026\n\006m_item\030\002 \001(\005B\006\302\377\024\002id\"\205\001\n\016"
    "E_JinglianCost\022(\n\010m_lockid\030\001 \001(\005B\026\302\377\024\022\351\224"
    "\201\345\256\232\350\257\215\346\235\241\346\225\260\351\207\217\022I\n\006m_cost\030\002 \003(\0132 .proto"
    "_ff.E_JinglianCostCostDescB\027\302\377\024\017\347\262\276\347\202\274\346\264"
    "\227\345\261\236\346\200\247\210\301\024\002\"Q\n\022Sheet_JinglianCost\022;\n\023E_J"
    "inglianCost_List\030\001 \003(\0132\030.proto_ff.E_Jing"
    "lianCostB\004\210\301\024\010\"\253\001\n\014E_JinglianGm\022$\n\004m_lv\030"
    "\001 \001(\005B\026\302\377\024\022\347\262\276\347\202\274\345\205\261\351\270\243\347\255\211\347\272\247\022$\n\nm_lock_"
    "num\030\002 \001(\005B\020\302\377\024\014\350\247\243\351\224\201\346\225\260\351\207\217\022(\n\016m_lock_qu"
    "ality\030\003 \001(\005B\020\302\377\024\014\350\247\243\351\224\201\345\223\201\350\264\250\022%\n\010m_addva"
    "l\030\004 \001(\005B\023\302\377\024\017\345\212\240\346\210\220\344\270\207\345\210\206\346\257\224\"K\n\020Sheet_Ji"
    "nglianGm\0227\n\021E_JinglianGm_List\030\001 \003(\0132\026.pr"
    "oto_ff.E_JinglianGmB\004\210\301\024\020", 1785);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "E_Jinglian.proto", &protobuf_RegisterTypes);
  E_JinglianSimple::default_instance_ = new E_JinglianSimple();
  Sheet_JinglianSimple::default_instance_ = new Sheet_JinglianSimple();
  E_JinglianLvCostDesc::default_instance_ = new E_JinglianLvCostDesc();
  E_JinglianLvAttrDesc::default_instance_ = new E_JinglianLvAttrDesc();
  E_JinglianLv::default_instance_ = new E_JinglianLv();
  Sheet_JinglianLv::default_instance_ = new Sheet_JinglianLv();
  E_JinglianRace::default_instance_ = new E_JinglianRace();
  Sheet_JinglianRace::default_instance_ = new Sheet_JinglianRace();
  E_JinglianCostCostDesc::default_instance_ = new E_JinglianCostCostDesc();
  E_JinglianCost::default_instance_ = new E_JinglianCost();
  Sheet_JinglianCost::default_instance_ = new Sheet_JinglianCost();
  E_JinglianGm::default_instance_ = new E_JinglianGm();
  Sheet_JinglianGm::default_instance_ = new Sheet_JinglianGm();
  E_JinglianSimple::default_instance_->InitAsDefaultInstance();
  Sheet_JinglianSimple::default_instance_->InitAsDefaultInstance();
  E_JinglianLvCostDesc::default_instance_->InitAsDefaultInstance();
  E_JinglianLvAttrDesc::default_instance_->InitAsDefaultInstance();
  E_JinglianLv::default_instance_->InitAsDefaultInstance();
  Sheet_JinglianLv::default_instance_->InitAsDefaultInstance();
  E_JinglianRace::default_instance_->InitAsDefaultInstance();
  Sheet_JinglianRace::default_instance_->InitAsDefaultInstance();
  E_JinglianCostCostDesc::default_instance_->InitAsDefaultInstance();
  E_JinglianCost::default_instance_->InitAsDefaultInstance();
  Sheet_JinglianCost::default_instance_->InitAsDefaultInstance();
  E_JinglianGm::default_instance_->InitAsDefaultInstance();
  Sheet_JinglianGm::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_E_5fJinglian_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_E_5fJinglian_2eproto {
  StaticDescriptorInitializer_E_5fJinglian_2eproto() {
    protobuf_AddDesc_E_5fJinglian_2eproto();
  }
} static_descriptor_initializer_E_5fJinglian_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int E_JinglianSimple::kMPositionFieldNumber;
const int E_JinglianSimple::kMGroupIdFieldNumber;
const int E_JinglianSimple::kMOpenlvFieldNumber;
const int E_JinglianSimple::kMDefaultAttrsFieldNumber;
const int E_JinglianSimple::kMOpenAttrFieldNumber;
#endif  // !_MSC_VER

E_JinglianSimple::E_JinglianSimple()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_JinglianSimple::InitAsDefaultInstance() {
}

E_JinglianSimple::E_JinglianSimple(const E_JinglianSimple& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_JinglianSimple::SharedCtor() {
  _cached_size_ = 0;
  m_position_ = 0;
  m_groupid_ = 0;
  m_openlv_ = 0;
  m_default_attrs_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_JinglianSimple::~E_JinglianSimple() {
  SharedDtor();
}

void E_JinglianSimple::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_JinglianSimple::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_JinglianSimple::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_JinglianSimple_descriptor_;
}

const E_JinglianSimple& E_JinglianSimple::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fJinglian_2eproto();
  return *default_instance_;
}

E_JinglianSimple* E_JinglianSimple::default_instance_ = NULL;

E_JinglianSimple* E_JinglianSimple::New() const {
  return new E_JinglianSimple;
}

void E_JinglianSimple::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_position_ = 0;
    m_groupid_ = 0;
    m_openlv_ = 0;
    m_default_attrs_ = 0;
  }
  m_open_attr_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_JinglianSimple::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_position = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_position_)));
          set_has_m_position();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_groupId;
        break;
      }

      // optional int32 m_groupId = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_groupId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_groupid_)));
          set_has_m_groupid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_m_openlv;
        break;
      }

      // optional int32 m_openlv = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_openlv:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_openlv_)));
          set_has_m_openlv();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_m_default_attrs;
        break;
      }

      // optional int32 m_default_attrs = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_default_attrs:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_default_attrs_)));
          set_has_m_default_attrs();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_m_open_attr;
        break;
      }

      // repeated int32 m_open_attr = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_open_attr:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 40, input, this->mutable_m_open_attr())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_m_open_attr())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_m_open_attr;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_JinglianSimple::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_position = 1;
  if (has_m_position()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_position(), output);
  }

  // optional int32 m_groupId = 2;
  if (has_m_groupid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_groupid(), output);
  }

  // optional int32 m_openlv = 3;
  if (has_m_openlv()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->m_openlv(), output);
  }

  // optional int32 m_default_attrs = 4;
  if (has_m_default_attrs()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->m_default_attrs(), output);
  }

  // repeated int32 m_open_attr = 5;
  for (int i = 0; i < this->m_open_attr_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      5, this->m_open_attr(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_JinglianSimple::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_position = 1;
  if (has_m_position()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_position(), target);
  }

  // optional int32 m_groupId = 2;
  if (has_m_groupid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_groupid(), target);
  }

  // optional int32 m_openlv = 3;
  if (has_m_openlv()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->m_openlv(), target);
  }

  // optional int32 m_default_attrs = 4;
  if (has_m_default_attrs()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->m_default_attrs(), target);
  }

  // repeated int32 m_open_attr = 5;
  for (int i = 0; i < this->m_open_attr_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(5, this->m_open_attr(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_JinglianSimple::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_position = 1;
    if (has_m_position()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_position());
    }

    // optional int32 m_groupId = 2;
    if (has_m_groupid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_groupid());
    }

    // optional int32 m_openlv = 3;
    if (has_m_openlv()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_openlv());
    }

    // optional int32 m_default_attrs = 4;
    if (has_m_default_attrs()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_default_attrs());
    }

  }
  // repeated int32 m_open_attr = 5;
  {
    int data_size = 0;
    for (int i = 0; i < this->m_open_attr_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->m_open_attr(i));
    }
    total_size += 1 * this->m_open_attr_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_JinglianSimple::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_JinglianSimple* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_JinglianSimple*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_JinglianSimple::MergeFrom(const E_JinglianSimple& from) {
  GOOGLE_CHECK_NE(&from, this);
  m_open_attr_.MergeFrom(from.m_open_attr_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_position()) {
      set_m_position(from.m_position());
    }
    if (from.has_m_groupid()) {
      set_m_groupid(from.m_groupid());
    }
    if (from.has_m_openlv()) {
      set_m_openlv(from.m_openlv());
    }
    if (from.has_m_default_attrs()) {
      set_m_default_attrs(from.m_default_attrs());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_JinglianSimple::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_JinglianSimple::CopyFrom(const E_JinglianSimple& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_JinglianSimple::IsInitialized() const {

  return true;
}

void E_JinglianSimple::Swap(E_JinglianSimple* other) {
  if (other != this) {
    std::swap(m_position_, other->m_position_);
    std::swap(m_groupid_, other->m_groupid_);
    std::swap(m_openlv_, other->m_openlv_);
    std::swap(m_default_attrs_, other->m_default_attrs_);
    m_open_attr_.Swap(&other->m_open_attr_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_JinglianSimple::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_JinglianSimple_descriptor_;
  metadata.reflection = E_JinglianSimple_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_JinglianSimple::kEJinglianSimpleListFieldNumber;
#endif  // !_MSC_VER

Sheet_JinglianSimple::Sheet_JinglianSimple()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_JinglianSimple::InitAsDefaultInstance() {
}

Sheet_JinglianSimple::Sheet_JinglianSimple(const Sheet_JinglianSimple& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_JinglianSimple::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_JinglianSimple::~Sheet_JinglianSimple() {
  SharedDtor();
}

void Sheet_JinglianSimple::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_JinglianSimple::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_JinglianSimple::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_JinglianSimple_descriptor_;
}

const Sheet_JinglianSimple& Sheet_JinglianSimple::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fJinglian_2eproto();
  return *default_instance_;
}

Sheet_JinglianSimple* Sheet_JinglianSimple::default_instance_ = NULL;

Sheet_JinglianSimple* Sheet_JinglianSimple::New() const {
  return new Sheet_JinglianSimple;
}

void Sheet_JinglianSimple::Clear() {
  e_jingliansimple_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_JinglianSimple::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.E_JinglianSimple E_JinglianSimple_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_E_JinglianSimple_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_e_jingliansimple_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_E_JinglianSimple_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_JinglianSimple::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.E_JinglianSimple E_JinglianSimple_List = 1;
  for (int i = 0; i < this->e_jingliansimple_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->e_jingliansimple_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_JinglianSimple::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.E_JinglianSimple E_JinglianSimple_List = 1;
  for (int i = 0; i < this->e_jingliansimple_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->e_jingliansimple_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_JinglianSimple::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.E_JinglianSimple E_JinglianSimple_List = 1;
  total_size += 1 * this->e_jingliansimple_list_size();
  for (int i = 0; i < this->e_jingliansimple_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->e_jingliansimple_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_JinglianSimple::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_JinglianSimple* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_JinglianSimple*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_JinglianSimple::MergeFrom(const Sheet_JinglianSimple& from) {
  GOOGLE_CHECK_NE(&from, this);
  e_jingliansimple_list_.MergeFrom(from.e_jingliansimple_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_JinglianSimple::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_JinglianSimple::CopyFrom(const Sheet_JinglianSimple& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_JinglianSimple::IsInitialized() const {

  return true;
}

void Sheet_JinglianSimple::Swap(Sheet_JinglianSimple* other) {
  if (other != this) {
    e_jingliansimple_list_.Swap(&other->e_jingliansimple_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_JinglianSimple::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_JinglianSimple_descriptor_;
  metadata.reflection = Sheet_JinglianSimple_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_JinglianLvCostDesc::kMNumFieldNumber;
const int E_JinglianLvCostDesc::kMItemFieldNumber;
#endif  // !_MSC_VER

E_JinglianLvCostDesc::E_JinglianLvCostDesc()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_JinglianLvCostDesc::InitAsDefaultInstance() {
}

E_JinglianLvCostDesc::E_JinglianLvCostDesc(const E_JinglianLvCostDesc& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_JinglianLvCostDesc::SharedCtor() {
  _cached_size_ = 0;
  m_num_ = 0;
  m_item_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_JinglianLvCostDesc::~E_JinglianLvCostDesc() {
  SharedDtor();
}

void E_JinglianLvCostDesc::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_JinglianLvCostDesc::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_JinglianLvCostDesc::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_JinglianLvCostDesc_descriptor_;
}

const E_JinglianLvCostDesc& E_JinglianLvCostDesc::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fJinglian_2eproto();
  return *default_instance_;
}

E_JinglianLvCostDesc* E_JinglianLvCostDesc::default_instance_ = NULL;

E_JinglianLvCostDesc* E_JinglianLvCostDesc::New() const {
  return new E_JinglianLvCostDesc;
}

void E_JinglianLvCostDesc::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_num_ = 0;
    m_item_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_JinglianLvCostDesc::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_num = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_num_)));
          set_has_m_num();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_item;
        break;
      }

      // optional int32 m_item = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_item:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_item_)));
          set_has_m_item();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_JinglianLvCostDesc::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_num = 1;
  if (has_m_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_num(), output);
  }

  // optional int32 m_item = 2;
  if (has_m_item()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_item(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_JinglianLvCostDesc::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_num = 1;
  if (has_m_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_num(), target);
  }

  // optional int32 m_item = 2;
  if (has_m_item()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_item(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_JinglianLvCostDesc::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_num = 1;
    if (has_m_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_num());
    }

    // optional int32 m_item = 2;
    if (has_m_item()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_item());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_JinglianLvCostDesc::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_JinglianLvCostDesc* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_JinglianLvCostDesc*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_JinglianLvCostDesc::MergeFrom(const E_JinglianLvCostDesc& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_num()) {
      set_m_num(from.m_num());
    }
    if (from.has_m_item()) {
      set_m_item(from.m_item());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_JinglianLvCostDesc::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_JinglianLvCostDesc::CopyFrom(const E_JinglianLvCostDesc& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_JinglianLvCostDesc::IsInitialized() const {

  return true;
}

void E_JinglianLvCostDesc::Swap(E_JinglianLvCostDesc* other) {
  if (other != this) {
    std::swap(m_num_, other->m_num_);
    std::swap(m_item_, other->m_item_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_JinglianLvCostDesc::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_JinglianLvCostDesc_descriptor_;
  metadata.reflection = E_JinglianLvCostDesc_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_JinglianLvAttrDesc::kMValueFieldNumber;
const int E_JinglianLvAttrDesc::kMIdFieldNumber;
#endif  // !_MSC_VER

E_JinglianLvAttrDesc::E_JinglianLvAttrDesc()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_JinglianLvAttrDesc::InitAsDefaultInstance() {
}

E_JinglianLvAttrDesc::E_JinglianLvAttrDesc(const E_JinglianLvAttrDesc& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_JinglianLvAttrDesc::SharedCtor() {
  _cached_size_ = 0;
  m_value_ = 0;
  m_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_JinglianLvAttrDesc::~E_JinglianLvAttrDesc() {
  SharedDtor();
}

void E_JinglianLvAttrDesc::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_JinglianLvAttrDesc::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_JinglianLvAttrDesc::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_JinglianLvAttrDesc_descriptor_;
}

const E_JinglianLvAttrDesc& E_JinglianLvAttrDesc::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fJinglian_2eproto();
  return *default_instance_;
}

E_JinglianLvAttrDesc* E_JinglianLvAttrDesc::default_instance_ = NULL;

E_JinglianLvAttrDesc* E_JinglianLvAttrDesc::New() const {
  return new E_JinglianLvAttrDesc;
}

void E_JinglianLvAttrDesc::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_value_ = 0;
    m_id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_JinglianLvAttrDesc::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_value = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_value_)));
          set_has_m_value();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_id;
        break;
      }

      // optional int32 m_id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_id_)));
          set_has_m_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_JinglianLvAttrDesc::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_value = 1;
  if (has_m_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_value(), output);
  }

  // optional int32 m_id = 2;
  if (has_m_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_JinglianLvAttrDesc::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_value = 1;
  if (has_m_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_value(), target);
  }

  // optional int32 m_id = 2;
  if (has_m_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_JinglianLvAttrDesc::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_value = 1;
    if (has_m_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_value());
    }

    // optional int32 m_id = 2;
    if (has_m_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_id());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_JinglianLvAttrDesc::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_JinglianLvAttrDesc* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_JinglianLvAttrDesc*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_JinglianLvAttrDesc::MergeFrom(const E_JinglianLvAttrDesc& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_value()) {
      set_m_value(from.m_value());
    }
    if (from.has_m_id()) {
      set_m_id(from.m_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_JinglianLvAttrDesc::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_JinglianLvAttrDesc::CopyFrom(const E_JinglianLvAttrDesc& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_JinglianLvAttrDesc::IsInitialized() const {

  return true;
}

void E_JinglianLvAttrDesc::Swap(E_JinglianLvAttrDesc* other) {
  if (other != this) {
    std::swap(m_value_, other->m_value_);
    std::swap(m_id_, other->m_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_JinglianLvAttrDesc::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_JinglianLvAttrDesc_descriptor_;
  metadata.reflection = E_JinglianLvAttrDesc_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_JinglianLv::kMIdFieldNumber;
const int E_JinglianLv::kMGroupIdFieldNumber;
const int E_JinglianLv::kMLvFieldNumber;
const int E_JinglianLv::kMCostFieldNumber;
const int E_JinglianLv::kMAttrFieldNumber;
#endif  // !_MSC_VER

E_JinglianLv::E_JinglianLv()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_JinglianLv::InitAsDefaultInstance() {
}

E_JinglianLv::E_JinglianLv(const E_JinglianLv& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_JinglianLv::SharedCtor() {
  _cached_size_ = 0;
  m_id_ = 0;
  m_groupid_ = 0;
  m_lv_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_JinglianLv::~E_JinglianLv() {
  SharedDtor();
}

void E_JinglianLv::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_JinglianLv::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_JinglianLv::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_JinglianLv_descriptor_;
}

const E_JinglianLv& E_JinglianLv::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fJinglian_2eproto();
  return *default_instance_;
}

E_JinglianLv* E_JinglianLv::default_instance_ = NULL;

E_JinglianLv* E_JinglianLv::New() const {
  return new E_JinglianLv;
}

void E_JinglianLv::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_id_ = 0;
    m_groupid_ = 0;
    m_lv_ = 0;
  }
  m_cost_.Clear();
  m_attr_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_JinglianLv::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_id_)));
          set_has_m_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_groupId;
        break;
      }

      // optional int32 m_groupId = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_groupId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_groupid_)));
          set_has_m_groupid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_m_lv;
        break;
      }

      // optional int32 m_lv = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_lv:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_lv_)));
          set_has_m_lv();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_m_cost;
        break;
      }

      // repeated .proto_ff.E_JinglianLvCostDesc m_cost = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_cost:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_m_cost()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_m_cost;
        if (input->ExpectTag(42)) goto parse_m_attr;
        break;
      }

      // repeated .proto_ff.E_JinglianLvAttrDesc m_attr = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_attr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_m_attr()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_m_attr;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_JinglianLv::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_id(), output);
  }

  // optional int32 m_groupId = 2;
  if (has_m_groupid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_groupid(), output);
  }

  // optional int32 m_lv = 3;
  if (has_m_lv()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->m_lv(), output);
  }

  // repeated .proto_ff.E_JinglianLvCostDesc m_cost = 4;
  for (int i = 0; i < this->m_cost_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->m_cost(i), output);
  }

  // repeated .proto_ff.E_JinglianLvAttrDesc m_attr = 5;
  for (int i = 0; i < this->m_attr_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->m_attr(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_JinglianLv::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_id(), target);
  }

  // optional int32 m_groupId = 2;
  if (has_m_groupid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_groupid(), target);
  }

  // optional int32 m_lv = 3;
  if (has_m_lv()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->m_lv(), target);
  }

  // repeated .proto_ff.E_JinglianLvCostDesc m_cost = 4;
  for (int i = 0; i < this->m_cost_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->m_cost(i), target);
  }

  // repeated .proto_ff.E_JinglianLvAttrDesc m_attr = 5;
  for (int i = 0; i < this->m_attr_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->m_attr(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_JinglianLv::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_id = 1;
    if (has_m_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_id());
    }

    // optional int32 m_groupId = 2;
    if (has_m_groupid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_groupid());
    }

    // optional int32 m_lv = 3;
    if (has_m_lv()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_lv());
    }

  }
  // repeated .proto_ff.E_JinglianLvCostDesc m_cost = 4;
  total_size += 1 * this->m_cost_size();
  for (int i = 0; i < this->m_cost_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->m_cost(i));
  }

  // repeated .proto_ff.E_JinglianLvAttrDesc m_attr = 5;
  total_size += 1 * this->m_attr_size();
  for (int i = 0; i < this->m_attr_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->m_attr(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_JinglianLv::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_JinglianLv* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_JinglianLv*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_JinglianLv::MergeFrom(const E_JinglianLv& from) {
  GOOGLE_CHECK_NE(&from, this);
  m_cost_.MergeFrom(from.m_cost_);
  m_attr_.MergeFrom(from.m_attr_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_id()) {
      set_m_id(from.m_id());
    }
    if (from.has_m_groupid()) {
      set_m_groupid(from.m_groupid());
    }
    if (from.has_m_lv()) {
      set_m_lv(from.m_lv());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_JinglianLv::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_JinglianLv::CopyFrom(const E_JinglianLv& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_JinglianLv::IsInitialized() const {

  return true;
}

void E_JinglianLv::Swap(E_JinglianLv* other) {
  if (other != this) {
    std::swap(m_id_, other->m_id_);
    std::swap(m_groupid_, other->m_groupid_);
    std::swap(m_lv_, other->m_lv_);
    m_cost_.Swap(&other->m_cost_);
    m_attr_.Swap(&other->m_attr_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_JinglianLv::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_JinglianLv_descriptor_;
  metadata.reflection = E_JinglianLv_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_JinglianLv::kEJinglianLvListFieldNumber;
#endif  // !_MSC_VER

Sheet_JinglianLv::Sheet_JinglianLv()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_JinglianLv::InitAsDefaultInstance() {
}

Sheet_JinglianLv::Sheet_JinglianLv(const Sheet_JinglianLv& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_JinglianLv::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_JinglianLv::~Sheet_JinglianLv() {
  SharedDtor();
}

void Sheet_JinglianLv::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_JinglianLv::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_JinglianLv::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_JinglianLv_descriptor_;
}

const Sheet_JinglianLv& Sheet_JinglianLv::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fJinglian_2eproto();
  return *default_instance_;
}

Sheet_JinglianLv* Sheet_JinglianLv::default_instance_ = NULL;

Sheet_JinglianLv* Sheet_JinglianLv::New() const {
  return new Sheet_JinglianLv;
}

void Sheet_JinglianLv::Clear() {
  e_jinglianlv_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_JinglianLv::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.E_JinglianLv E_JinglianLv_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_E_JinglianLv_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_e_jinglianlv_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_E_JinglianLv_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_JinglianLv::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.E_JinglianLv E_JinglianLv_List = 1;
  for (int i = 0; i < this->e_jinglianlv_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->e_jinglianlv_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_JinglianLv::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.E_JinglianLv E_JinglianLv_List = 1;
  for (int i = 0; i < this->e_jinglianlv_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->e_jinglianlv_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_JinglianLv::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.E_JinglianLv E_JinglianLv_List = 1;
  total_size += 1 * this->e_jinglianlv_list_size();
  for (int i = 0; i < this->e_jinglianlv_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->e_jinglianlv_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_JinglianLv::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_JinglianLv* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_JinglianLv*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_JinglianLv::MergeFrom(const Sheet_JinglianLv& from) {
  GOOGLE_CHECK_NE(&from, this);
  e_jinglianlv_list_.MergeFrom(from.e_jinglianlv_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_JinglianLv::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_JinglianLv::CopyFrom(const Sheet_JinglianLv& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_JinglianLv::IsInitialized() const {

  return true;
}

void Sheet_JinglianLv::Swap(Sheet_JinglianLv* other) {
  if (other != this) {
    e_jinglianlv_list_.Swap(&other->e_jinglianlv_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_JinglianLv::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_JinglianLv_descriptor_;
  metadata.reflection = Sheet_JinglianLv_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_JinglianRace::kMQualityFieldNumber;
const int E_JinglianRace::kMMinFieldNumber;
const int E_JinglianRace::kMMaxFieldNumber;
const int E_JinglianRace::kMQuanzFieldNumber;
const int E_JinglianRace::kMMin1FieldNumber;
const int E_JinglianRace::kMMax1FieldNumber;
const int E_JinglianRace::kMQuanz1FieldNumber;
#endif  // !_MSC_VER

E_JinglianRace::E_JinglianRace()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_JinglianRace::InitAsDefaultInstance() {
}

E_JinglianRace::E_JinglianRace(const E_JinglianRace& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_JinglianRace::SharedCtor() {
  _cached_size_ = 0;
  m_quality_ = 0;
  m_min_ = 0;
  m_max_ = 0;
  m_quanz_ = 0;
  m_min_1_ = 0;
  m_max_1_ = 0;
  m_quanz_1_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_JinglianRace::~E_JinglianRace() {
  SharedDtor();
}

void E_JinglianRace::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_JinglianRace::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_JinglianRace::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_JinglianRace_descriptor_;
}

const E_JinglianRace& E_JinglianRace::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fJinglian_2eproto();
  return *default_instance_;
}

E_JinglianRace* E_JinglianRace::default_instance_ = NULL;

E_JinglianRace* E_JinglianRace::New() const {
  return new E_JinglianRace;
}

void E_JinglianRace::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_quality_ = 0;
    m_min_ = 0;
    m_max_ = 0;
    m_quanz_ = 0;
    m_min_1_ = 0;
    m_max_1_ = 0;
    m_quanz_1_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_JinglianRace::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_quality = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_quality_)));
          set_has_m_quality();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_min;
        break;
      }

      // optional int32 m_min = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_min:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_min_)));
          set_has_m_min();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_m_max;
        break;
      }

      // optional int32 m_max = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_max:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_max_)));
          set_has_m_max();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_m_quanz;
        break;
      }

      // optional int32 m_quanz = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_quanz:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_quanz_)));
          set_has_m_quanz();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_m_min_1;
        break;
      }

      // optional int32 m_min_1 = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_min_1:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_min_1_)));
          set_has_m_min_1();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_m_max_1;
        break;
      }

      // optional int32 m_max_1 = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_max_1:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_max_1_)));
          set_has_m_max_1();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_m_quanz_1;
        break;
      }

      // optional int32 m_quanz_1 = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_quanz_1:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_quanz_1_)));
          set_has_m_quanz_1();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_JinglianRace::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_quality = 1;
  if (has_m_quality()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_quality(), output);
  }

  // optional int32 m_min = 2;
  if (has_m_min()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_min(), output);
  }

  // optional int32 m_max = 3;
  if (has_m_max()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->m_max(), output);
  }

  // optional int32 m_quanz = 4;
  if (has_m_quanz()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->m_quanz(), output);
  }

  // optional int32 m_min_1 = 5;
  if (has_m_min_1()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->m_min_1(), output);
  }

  // optional int32 m_max_1 = 6;
  if (has_m_max_1()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->m_max_1(), output);
  }

  // optional int32 m_quanz_1 = 7;
  if (has_m_quanz_1()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->m_quanz_1(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_JinglianRace::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_quality = 1;
  if (has_m_quality()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_quality(), target);
  }

  // optional int32 m_min = 2;
  if (has_m_min()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_min(), target);
  }

  // optional int32 m_max = 3;
  if (has_m_max()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->m_max(), target);
  }

  // optional int32 m_quanz = 4;
  if (has_m_quanz()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->m_quanz(), target);
  }

  // optional int32 m_min_1 = 5;
  if (has_m_min_1()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->m_min_1(), target);
  }

  // optional int32 m_max_1 = 6;
  if (has_m_max_1()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->m_max_1(), target);
  }

  // optional int32 m_quanz_1 = 7;
  if (has_m_quanz_1()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->m_quanz_1(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_JinglianRace::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_quality = 1;
    if (has_m_quality()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_quality());
    }

    // optional int32 m_min = 2;
    if (has_m_min()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_min());
    }

    // optional int32 m_max = 3;
    if (has_m_max()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_max());
    }

    // optional int32 m_quanz = 4;
    if (has_m_quanz()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_quanz());
    }

    // optional int32 m_min_1 = 5;
    if (has_m_min_1()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_min_1());
    }

    // optional int32 m_max_1 = 6;
    if (has_m_max_1()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_max_1());
    }

    // optional int32 m_quanz_1 = 7;
    if (has_m_quanz_1()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_quanz_1());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_JinglianRace::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_JinglianRace* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_JinglianRace*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_JinglianRace::MergeFrom(const E_JinglianRace& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_quality()) {
      set_m_quality(from.m_quality());
    }
    if (from.has_m_min()) {
      set_m_min(from.m_min());
    }
    if (from.has_m_max()) {
      set_m_max(from.m_max());
    }
    if (from.has_m_quanz()) {
      set_m_quanz(from.m_quanz());
    }
    if (from.has_m_min_1()) {
      set_m_min_1(from.m_min_1());
    }
    if (from.has_m_max_1()) {
      set_m_max_1(from.m_max_1());
    }
    if (from.has_m_quanz_1()) {
      set_m_quanz_1(from.m_quanz_1());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_JinglianRace::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_JinglianRace::CopyFrom(const E_JinglianRace& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_JinglianRace::IsInitialized() const {

  return true;
}

void E_JinglianRace::Swap(E_JinglianRace* other) {
  if (other != this) {
    std::swap(m_quality_, other->m_quality_);
    std::swap(m_min_, other->m_min_);
    std::swap(m_max_, other->m_max_);
    std::swap(m_quanz_, other->m_quanz_);
    std::swap(m_min_1_, other->m_min_1_);
    std::swap(m_max_1_, other->m_max_1_);
    std::swap(m_quanz_1_, other->m_quanz_1_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_JinglianRace::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_JinglianRace_descriptor_;
  metadata.reflection = E_JinglianRace_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_JinglianRace::kEJinglianRaceListFieldNumber;
#endif  // !_MSC_VER

Sheet_JinglianRace::Sheet_JinglianRace()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_JinglianRace::InitAsDefaultInstance() {
}

Sheet_JinglianRace::Sheet_JinglianRace(const Sheet_JinglianRace& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_JinglianRace::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_JinglianRace::~Sheet_JinglianRace() {
  SharedDtor();
}

void Sheet_JinglianRace::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_JinglianRace::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_JinglianRace::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_JinglianRace_descriptor_;
}

const Sheet_JinglianRace& Sheet_JinglianRace::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fJinglian_2eproto();
  return *default_instance_;
}

Sheet_JinglianRace* Sheet_JinglianRace::default_instance_ = NULL;

Sheet_JinglianRace* Sheet_JinglianRace::New() const {
  return new Sheet_JinglianRace;
}

void Sheet_JinglianRace::Clear() {
  e_jinglianrace_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_JinglianRace::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.E_JinglianRace E_JinglianRace_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_E_JinglianRace_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_e_jinglianrace_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_E_JinglianRace_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_JinglianRace::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.E_JinglianRace E_JinglianRace_List = 1;
  for (int i = 0; i < this->e_jinglianrace_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->e_jinglianrace_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_JinglianRace::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.E_JinglianRace E_JinglianRace_List = 1;
  for (int i = 0; i < this->e_jinglianrace_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->e_jinglianrace_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_JinglianRace::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.E_JinglianRace E_JinglianRace_List = 1;
  total_size += 1 * this->e_jinglianrace_list_size();
  for (int i = 0; i < this->e_jinglianrace_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->e_jinglianrace_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_JinglianRace::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_JinglianRace* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_JinglianRace*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_JinglianRace::MergeFrom(const Sheet_JinglianRace& from) {
  GOOGLE_CHECK_NE(&from, this);
  e_jinglianrace_list_.MergeFrom(from.e_jinglianrace_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_JinglianRace::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_JinglianRace::CopyFrom(const Sheet_JinglianRace& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_JinglianRace::IsInitialized() const {

  return true;
}

void Sheet_JinglianRace::Swap(Sheet_JinglianRace* other) {
  if (other != this) {
    e_jinglianrace_list_.Swap(&other->e_jinglianrace_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_JinglianRace::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_JinglianRace_descriptor_;
  metadata.reflection = Sheet_JinglianRace_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_JinglianCostCostDesc::kMNumFieldNumber;
const int E_JinglianCostCostDesc::kMItemFieldNumber;
#endif  // !_MSC_VER

E_JinglianCostCostDesc::E_JinglianCostCostDesc()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_JinglianCostCostDesc::InitAsDefaultInstance() {
}

E_JinglianCostCostDesc::E_JinglianCostCostDesc(const E_JinglianCostCostDesc& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_JinglianCostCostDesc::SharedCtor() {
  _cached_size_ = 0;
  m_num_ = 0;
  m_item_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_JinglianCostCostDesc::~E_JinglianCostCostDesc() {
  SharedDtor();
}

void E_JinglianCostCostDesc::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_JinglianCostCostDesc::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_JinglianCostCostDesc::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_JinglianCostCostDesc_descriptor_;
}

const E_JinglianCostCostDesc& E_JinglianCostCostDesc::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fJinglian_2eproto();
  return *default_instance_;
}

E_JinglianCostCostDesc* E_JinglianCostCostDesc::default_instance_ = NULL;

E_JinglianCostCostDesc* E_JinglianCostCostDesc::New() const {
  return new E_JinglianCostCostDesc;
}

void E_JinglianCostCostDesc::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_num_ = 0;
    m_item_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_JinglianCostCostDesc::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_num = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_num_)));
          set_has_m_num();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_item;
        break;
      }

      // optional int32 m_item = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_item:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_item_)));
          set_has_m_item();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_JinglianCostCostDesc::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_num = 1;
  if (has_m_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_num(), output);
  }

  // optional int32 m_item = 2;
  if (has_m_item()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_item(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_JinglianCostCostDesc::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_num = 1;
  if (has_m_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_num(), target);
  }

  // optional int32 m_item = 2;
  if (has_m_item()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_item(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_JinglianCostCostDesc::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_num = 1;
    if (has_m_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_num());
    }

    // optional int32 m_item = 2;
    if (has_m_item()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_item());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_JinglianCostCostDesc::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_JinglianCostCostDesc* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_JinglianCostCostDesc*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_JinglianCostCostDesc::MergeFrom(const E_JinglianCostCostDesc& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_num()) {
      set_m_num(from.m_num());
    }
    if (from.has_m_item()) {
      set_m_item(from.m_item());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_JinglianCostCostDesc::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_JinglianCostCostDesc::CopyFrom(const E_JinglianCostCostDesc& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_JinglianCostCostDesc::IsInitialized() const {

  return true;
}

void E_JinglianCostCostDesc::Swap(E_JinglianCostCostDesc* other) {
  if (other != this) {
    std::swap(m_num_, other->m_num_);
    std::swap(m_item_, other->m_item_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_JinglianCostCostDesc::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_JinglianCostCostDesc_descriptor_;
  metadata.reflection = E_JinglianCostCostDesc_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_JinglianCost::kMLockidFieldNumber;
const int E_JinglianCost::kMCostFieldNumber;
#endif  // !_MSC_VER

E_JinglianCost::E_JinglianCost()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_JinglianCost::InitAsDefaultInstance() {
}

E_JinglianCost::E_JinglianCost(const E_JinglianCost& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_JinglianCost::SharedCtor() {
  _cached_size_ = 0;
  m_lockid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_JinglianCost::~E_JinglianCost() {
  SharedDtor();
}

void E_JinglianCost::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_JinglianCost::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_JinglianCost::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_JinglianCost_descriptor_;
}

const E_JinglianCost& E_JinglianCost::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fJinglian_2eproto();
  return *default_instance_;
}

E_JinglianCost* E_JinglianCost::default_instance_ = NULL;

E_JinglianCost* E_JinglianCost::New() const {
  return new E_JinglianCost;
}

void E_JinglianCost::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_lockid_ = 0;
  }
  m_cost_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_JinglianCost::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_lockid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_lockid_)));
          set_has_m_lockid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_m_cost;
        break;
      }

      // repeated .proto_ff.E_JinglianCostCostDesc m_cost = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_cost:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_m_cost()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_m_cost;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_JinglianCost::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_lockid = 1;
  if (has_m_lockid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_lockid(), output);
  }

  // repeated .proto_ff.E_JinglianCostCostDesc m_cost = 2;
  for (int i = 0; i < this->m_cost_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->m_cost(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_JinglianCost::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_lockid = 1;
  if (has_m_lockid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_lockid(), target);
  }

  // repeated .proto_ff.E_JinglianCostCostDesc m_cost = 2;
  for (int i = 0; i < this->m_cost_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->m_cost(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_JinglianCost::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_lockid = 1;
    if (has_m_lockid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_lockid());
    }

  }
  // repeated .proto_ff.E_JinglianCostCostDesc m_cost = 2;
  total_size += 1 * this->m_cost_size();
  for (int i = 0; i < this->m_cost_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->m_cost(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_JinglianCost::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_JinglianCost* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_JinglianCost*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_JinglianCost::MergeFrom(const E_JinglianCost& from) {
  GOOGLE_CHECK_NE(&from, this);
  m_cost_.MergeFrom(from.m_cost_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_lockid()) {
      set_m_lockid(from.m_lockid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_JinglianCost::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_JinglianCost::CopyFrom(const E_JinglianCost& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_JinglianCost::IsInitialized() const {

  return true;
}

void E_JinglianCost::Swap(E_JinglianCost* other) {
  if (other != this) {
    std::swap(m_lockid_, other->m_lockid_);
    m_cost_.Swap(&other->m_cost_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_JinglianCost::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_JinglianCost_descriptor_;
  metadata.reflection = E_JinglianCost_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_JinglianCost::kEJinglianCostListFieldNumber;
#endif  // !_MSC_VER

Sheet_JinglianCost::Sheet_JinglianCost()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_JinglianCost::InitAsDefaultInstance() {
}

Sheet_JinglianCost::Sheet_JinglianCost(const Sheet_JinglianCost& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_JinglianCost::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_JinglianCost::~Sheet_JinglianCost() {
  SharedDtor();
}

void Sheet_JinglianCost::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_JinglianCost::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_JinglianCost::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_JinglianCost_descriptor_;
}

const Sheet_JinglianCost& Sheet_JinglianCost::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fJinglian_2eproto();
  return *default_instance_;
}

Sheet_JinglianCost* Sheet_JinglianCost::default_instance_ = NULL;

Sheet_JinglianCost* Sheet_JinglianCost::New() const {
  return new Sheet_JinglianCost;
}

void Sheet_JinglianCost::Clear() {
  e_jingliancost_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_JinglianCost::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.E_JinglianCost E_JinglianCost_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_E_JinglianCost_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_e_jingliancost_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_E_JinglianCost_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_JinglianCost::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.E_JinglianCost E_JinglianCost_List = 1;
  for (int i = 0; i < this->e_jingliancost_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->e_jingliancost_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_JinglianCost::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.E_JinglianCost E_JinglianCost_List = 1;
  for (int i = 0; i < this->e_jingliancost_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->e_jingliancost_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_JinglianCost::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.E_JinglianCost E_JinglianCost_List = 1;
  total_size += 1 * this->e_jingliancost_list_size();
  for (int i = 0; i < this->e_jingliancost_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->e_jingliancost_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_JinglianCost::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_JinglianCost* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_JinglianCost*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_JinglianCost::MergeFrom(const Sheet_JinglianCost& from) {
  GOOGLE_CHECK_NE(&from, this);
  e_jingliancost_list_.MergeFrom(from.e_jingliancost_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_JinglianCost::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_JinglianCost::CopyFrom(const Sheet_JinglianCost& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_JinglianCost::IsInitialized() const {

  return true;
}

void Sheet_JinglianCost::Swap(Sheet_JinglianCost* other) {
  if (other != this) {
    e_jingliancost_list_.Swap(&other->e_jingliancost_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_JinglianCost::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_JinglianCost_descriptor_;
  metadata.reflection = Sheet_JinglianCost_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_JinglianGm::kMLvFieldNumber;
const int E_JinglianGm::kMLockNumFieldNumber;
const int E_JinglianGm::kMLockQualityFieldNumber;
const int E_JinglianGm::kMAddvalFieldNumber;
#endif  // !_MSC_VER

E_JinglianGm::E_JinglianGm()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_JinglianGm::InitAsDefaultInstance() {
}

E_JinglianGm::E_JinglianGm(const E_JinglianGm& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_JinglianGm::SharedCtor() {
  _cached_size_ = 0;
  m_lv_ = 0;
  m_lock_num_ = 0;
  m_lock_quality_ = 0;
  m_addval_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_JinglianGm::~E_JinglianGm() {
  SharedDtor();
}

void E_JinglianGm::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_JinglianGm::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_JinglianGm::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_JinglianGm_descriptor_;
}

const E_JinglianGm& E_JinglianGm::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fJinglian_2eproto();
  return *default_instance_;
}

E_JinglianGm* E_JinglianGm::default_instance_ = NULL;

E_JinglianGm* E_JinglianGm::New() const {
  return new E_JinglianGm;
}

void E_JinglianGm::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_lv_ = 0;
    m_lock_num_ = 0;
    m_lock_quality_ = 0;
    m_addval_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_JinglianGm::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_lv = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_lv_)));
          set_has_m_lv();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_lock_num;
        break;
      }

      // optional int32 m_lock_num = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_lock_num:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_lock_num_)));
          set_has_m_lock_num();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_m_lock_quality;
        break;
      }

      // optional int32 m_lock_quality = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_lock_quality:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_lock_quality_)));
          set_has_m_lock_quality();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_m_addval;
        break;
      }

      // optional int32 m_addval = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_addval:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_addval_)));
          set_has_m_addval();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_JinglianGm::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_lv = 1;
  if (has_m_lv()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_lv(), output);
  }

  // optional int32 m_lock_num = 2;
  if (has_m_lock_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_lock_num(), output);
  }

  // optional int32 m_lock_quality = 3;
  if (has_m_lock_quality()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->m_lock_quality(), output);
  }

  // optional int32 m_addval = 4;
  if (has_m_addval()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->m_addval(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_JinglianGm::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_lv = 1;
  if (has_m_lv()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_lv(), target);
  }

  // optional int32 m_lock_num = 2;
  if (has_m_lock_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_lock_num(), target);
  }

  // optional int32 m_lock_quality = 3;
  if (has_m_lock_quality()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->m_lock_quality(), target);
  }

  // optional int32 m_addval = 4;
  if (has_m_addval()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->m_addval(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_JinglianGm::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_lv = 1;
    if (has_m_lv()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_lv());
    }

    // optional int32 m_lock_num = 2;
    if (has_m_lock_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_lock_num());
    }

    // optional int32 m_lock_quality = 3;
    if (has_m_lock_quality()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_lock_quality());
    }

    // optional int32 m_addval = 4;
    if (has_m_addval()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_addval());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_JinglianGm::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_JinglianGm* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_JinglianGm*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_JinglianGm::MergeFrom(const E_JinglianGm& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_lv()) {
      set_m_lv(from.m_lv());
    }
    if (from.has_m_lock_num()) {
      set_m_lock_num(from.m_lock_num());
    }
    if (from.has_m_lock_quality()) {
      set_m_lock_quality(from.m_lock_quality());
    }
    if (from.has_m_addval()) {
      set_m_addval(from.m_addval());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_JinglianGm::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_JinglianGm::CopyFrom(const E_JinglianGm& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_JinglianGm::IsInitialized() const {

  return true;
}

void E_JinglianGm::Swap(E_JinglianGm* other) {
  if (other != this) {
    std::swap(m_lv_, other->m_lv_);
    std::swap(m_lock_num_, other->m_lock_num_);
    std::swap(m_lock_quality_, other->m_lock_quality_);
    std::swap(m_addval_, other->m_addval_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_JinglianGm::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_JinglianGm_descriptor_;
  metadata.reflection = E_JinglianGm_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_JinglianGm::kEJinglianGmListFieldNumber;
#endif  // !_MSC_VER

Sheet_JinglianGm::Sheet_JinglianGm()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_JinglianGm::InitAsDefaultInstance() {
}

Sheet_JinglianGm::Sheet_JinglianGm(const Sheet_JinglianGm& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_JinglianGm::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_JinglianGm::~Sheet_JinglianGm() {
  SharedDtor();
}

void Sheet_JinglianGm::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_JinglianGm::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_JinglianGm::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_JinglianGm_descriptor_;
}

const Sheet_JinglianGm& Sheet_JinglianGm::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fJinglian_2eproto();
  return *default_instance_;
}

Sheet_JinglianGm* Sheet_JinglianGm::default_instance_ = NULL;

Sheet_JinglianGm* Sheet_JinglianGm::New() const {
  return new Sheet_JinglianGm;
}

void Sheet_JinglianGm::Clear() {
  e_jingliangm_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_JinglianGm::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.E_JinglianGm E_JinglianGm_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_E_JinglianGm_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_e_jingliangm_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_E_JinglianGm_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_JinglianGm::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.E_JinglianGm E_JinglianGm_List = 1;
  for (int i = 0; i < this->e_jingliangm_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->e_jingliangm_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_JinglianGm::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.E_JinglianGm E_JinglianGm_List = 1;
  for (int i = 0; i < this->e_jingliangm_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->e_jingliangm_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_JinglianGm::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.E_JinglianGm E_JinglianGm_List = 1;
  total_size += 1 * this->e_jingliangm_list_size();
  for (int i = 0; i < this->e_jingliangm_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->e_jingliangm_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_JinglianGm::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_JinglianGm* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_JinglianGm*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_JinglianGm::MergeFrom(const Sheet_JinglianGm& from) {
  GOOGLE_CHECK_NE(&from, this);
  e_jingliangm_list_.MergeFrom(from.e_jingliangm_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_JinglianGm::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_JinglianGm::CopyFrom(const Sheet_JinglianGm& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_JinglianGm::IsInitialized() const {

  return true;
}

void Sheet_JinglianGm::Swap(Sheet_JinglianGm* other) {
  if (other != this) {
    e_jingliangm_list_.Swap(&other->e_jingliangm_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_JinglianGm::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_JinglianGm_descriptor_;
  metadata.reflection = Sheet_JinglianGm_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto_ff

// @@protoc_insertion_point(global_scope)
