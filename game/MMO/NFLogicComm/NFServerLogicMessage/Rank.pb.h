// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Rank.proto

#ifndef PROTOBUF_Rank_2eproto__INCLUDED
#define PROTOBUF_Rank_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "Com.pb.h"
#include "ComDefine.pb.h"
// @@protoc_insertion_point(includes)

namespace proto_ff {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_Rank_2eproto();
void protobuf_AssignDesc_Rank_2eproto();
void protobuf_ShutdownFile_Rank_2eproto();

class RankDataRequest;
class RankDataResponse;
class GWRankDataReq;
class GWUpdateRankReq;
class GSUpdateRankReq;
class WGRankDataRequest;
class GSRankDataRequest;
class SocialRankOptTitleReq;

// ===================================================================

class RankDataRequest : public ::google::protobuf::Message {
 public:
  RankDataRequest();
  virtual ~RankDataRequest();

  RankDataRequest(const RankDataRequest& from);

  inline RankDataRequest& operator=(const RankDataRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RankDataRequest& default_instance();

  void Swap(RankDataRequest* other);

  // implements Message ----------------------------------------------

  RankDataRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RankDataRequest& from);
  void MergeFrom(const RankDataRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 rankType = 1;
  inline bool has_ranktype() const;
  inline void clear_ranktype();
  static const int kRankTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 ranktype() const;
  inline void set_ranktype(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.RankDataRequest)
 private:
  inline void set_has_ranktype();
  inline void clear_has_ranktype();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 ranktype_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Rank_2eproto();
  friend void protobuf_AssignDesc_Rank_2eproto();
  friend void protobuf_ShutdownFile_Rank_2eproto();

  void InitAsDefaultInstance();
  static RankDataRequest* default_instance_;
};
// -------------------------------------------------------------------

class RankDataResponse : public ::google::protobuf::Message {
 public:
  RankDataResponse();
  virtual ~RankDataResponse();

  RankDataResponse(const RankDataResponse& from);

  inline RankDataResponse& operator=(const RankDataResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RankDataResponse& default_instance();

  void Swap(RankDataResponse* other);

  // implements Message ----------------------------------------------

  RankDataResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RankDataResponse& from);
  void MergeFrom(const RankDataResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .proto_ff.RankDataInfo info = 1;
  inline bool has_info() const;
  inline void clear_info();
  static const int kInfoFieldNumber = 1;
  inline const ::proto_ff::RankDataInfo& info() const;
  inline ::proto_ff::RankDataInfo* mutable_info();
  inline ::proto_ff::RankDataInfo* release_info();
  inline void set_allocated_info(::proto_ff::RankDataInfo* info);

  // @@protoc_insertion_point(class_scope:proto_ff.RankDataResponse)
 private:
  inline void set_has_info();
  inline void clear_has_info();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::proto_ff::RankDataInfo* info_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Rank_2eproto();
  friend void protobuf_AssignDesc_Rank_2eproto();
  friend void protobuf_ShutdownFile_Rank_2eproto();

  void InitAsDefaultInstance();
  static RankDataResponse* default_instance_;
};
// -------------------------------------------------------------------

class GWRankDataReq : public ::google::protobuf::Message {
 public:
  GWRankDataReq();
  virtual ~GWRankDataReq();

  GWRankDataReq(const GWRankDataReq& from);

  inline GWRankDataReq& operator=(const GWRankDataReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GWRankDataReq& default_instance();

  void Swap(GWRankDataReq* other);

  // implements Message ----------------------------------------------

  GWRankDataReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GWRankDataReq& from);
  void MergeFrom(const GWRankDataReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 rankType = 1;
  inline bool has_ranktype() const;
  inline void clear_ranktype();
  static const int kRankTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 ranktype() const;
  inline void set_ranktype(::google::protobuf::uint32 value);

  // required uint64 charId = 2;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIdFieldNumber = 2;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // required uint64 value = 3;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 3;
  inline ::google::protobuf::uint64 value() const;
  inline void set_value(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.GWRankDataReq)
 private:
  inline void set_has_ranktype();
  inline void clear_has_ranktype();
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_value();
  inline void clear_has_value();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 charid_;
  ::google::protobuf::uint64 value_;
  ::google::protobuf::uint32 ranktype_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_Rank_2eproto();
  friend void protobuf_AssignDesc_Rank_2eproto();
  friend void protobuf_ShutdownFile_Rank_2eproto();

  void InitAsDefaultInstance();
  static GWRankDataReq* default_instance_;
};
// -------------------------------------------------------------------

class GWUpdateRankReq : public ::google::protobuf::Message {
 public:
  GWUpdateRankReq();
  virtual ~GWUpdateRankReq();

  GWUpdateRankReq(const GWUpdateRankReq& from);

  inline GWUpdateRankReq& operator=(const GWUpdateRankReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GWUpdateRankReq& default_instance();

  void Swap(GWUpdateRankReq* other);

  // implements Message ----------------------------------------------

  GWUpdateRankReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GWUpdateRankReq& from);
  void MergeFrom(const GWUpdateRankReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 rankType = 1;
  inline bool has_ranktype() const;
  inline void clear_ranktype();
  static const int kRankTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 ranktype() const;
  inline void set_ranktype(::google::protobuf::uint32 value);

  // required uint64 charId = 2;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIdFieldNumber = 2;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // required uint64 value = 3;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 3;
  inline ::google::protobuf::uint64 value() const;
  inline void set_value(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.GWUpdateRankReq)
 private:
  inline void set_has_ranktype();
  inline void clear_has_ranktype();
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_value();
  inline void clear_has_value();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 charid_;
  ::google::protobuf::uint64 value_;
  ::google::protobuf::uint32 ranktype_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_Rank_2eproto();
  friend void protobuf_AssignDesc_Rank_2eproto();
  friend void protobuf_ShutdownFile_Rank_2eproto();

  void InitAsDefaultInstance();
  static GWUpdateRankReq* default_instance_;
};
// -------------------------------------------------------------------

class GSUpdateRankReq : public ::google::protobuf::Message {
 public:
  GSUpdateRankReq();
  virtual ~GSUpdateRankReq();

  GSUpdateRankReq(const GSUpdateRankReq& from);

  inline GSUpdateRankReq& operator=(const GSUpdateRankReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GSUpdateRankReq& default_instance();

  void Swap(GSUpdateRankReq* other);

  // implements Message ----------------------------------------------

  GSUpdateRankReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GSUpdateRankReq& from);
  void MergeFrom(const GSUpdateRankReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 rankType = 1;
  inline bool has_ranktype() const;
  inline void clear_ranktype();
  static const int kRankTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 ranktype() const;
  inline void set_ranktype(::google::protobuf::uint32 value);

  // optional uint64 charId = 2;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIdFieldNumber = 2;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // optional int32 zid = 3;
  inline bool has_zid() const;
  inline void clear_zid();
  static const int kZidFieldNumber = 3;
  inline ::google::protobuf::int32 zid() const;
  inline void set_zid(::google::protobuf::int32 value);

  // optional int64 value = 4;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 4;
  inline ::google::protobuf::int64 value() const;
  inline void set_value(::google::protobuf::int64 value);

  // repeated int64 paramInt = 5;
  inline int paramint_size() const;
  inline void clear_paramint();
  static const int kParamIntFieldNumber = 5;
  inline ::google::protobuf::int64 paramint(int index) const;
  inline void set_paramint(int index, ::google::protobuf::int64 value);
  inline void add_paramint(::google::protobuf::int64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      paramint() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_paramint();

  // repeated string paramStr = 6;
  inline int paramstr_size() const;
  inline void clear_paramstr();
  static const int kParamStrFieldNumber = 6;
  inline const ::std::string& paramstr(int index) const;
  inline ::std::string* mutable_paramstr(int index);
  inline void set_paramstr(int index, const ::std::string& value);
  inline void set_paramstr(int index, const char* value);
  inline void set_paramstr(int index, const char* value, size_t size);
  inline ::std::string* add_paramstr();
  inline void add_paramstr(const ::std::string& value);
  inline void add_paramstr(const char* value);
  inline void add_paramstr(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& paramstr() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_paramstr();

  // @@protoc_insertion_point(class_scope:proto_ff.GSUpdateRankReq)
 private:
  inline void set_has_ranktype();
  inline void clear_has_ranktype();
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_zid();
  inline void clear_has_zid();
  inline void set_has_value();
  inline void clear_has_value();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 charid_;
  ::google::protobuf::uint32 ranktype_;
  ::google::protobuf::int32 zid_;
  ::google::protobuf::int64 value_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > paramint_;
  ::google::protobuf::RepeatedPtrField< ::std::string> paramstr_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_Rank_2eproto();
  friend void protobuf_AssignDesc_Rank_2eproto();
  friend void protobuf_ShutdownFile_Rank_2eproto();

  void InitAsDefaultInstance();
  static GSUpdateRankReq* default_instance_;
};
// -------------------------------------------------------------------

class WGRankDataRequest : public ::google::protobuf::Message {
 public:
  WGRankDataRequest();
  virtual ~WGRankDataRequest();

  WGRankDataRequest(const WGRankDataRequest& from);

  inline WGRankDataRequest& operator=(const WGRankDataRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WGRankDataRequest& default_instance();

  void Swap(WGRankDataRequest* other);

  // implements Message ----------------------------------------------

  WGRankDataRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WGRankDataRequest& from);
  void MergeFrom(const WGRankDataRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 rankType = 1;
  inline bool has_ranktype() const;
  inline void clear_ranktype();
  static const int kRankTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 ranktype() const;
  inline void set_ranktype(::google::protobuf::uint32 value);

  // optional int64 charId = 2;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIdFieldNumber = 2;
  inline ::google::protobuf::int64 charid() const;
  inline void set_charid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.WGRankDataRequest)
 private:
  inline void set_has_ranktype();
  inline void clear_has_ranktype();
  inline void set_has_charid();
  inline void clear_has_charid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 charid_;
  ::google::protobuf::uint32 ranktype_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Rank_2eproto();
  friend void protobuf_AssignDesc_Rank_2eproto();
  friend void protobuf_ShutdownFile_Rank_2eproto();

  void InitAsDefaultInstance();
  static WGRankDataRequest* default_instance_;
};
// -------------------------------------------------------------------

class GSRankDataRequest : public ::google::protobuf::Message {
 public:
  GSRankDataRequest();
  virtual ~GSRankDataRequest();

  GSRankDataRequest(const GSRankDataRequest& from);

  inline GSRankDataRequest& operator=(const GSRankDataRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GSRankDataRequest& default_instance();

  void Swap(GSRankDataRequest* other);

  // implements Message ----------------------------------------------

  GSRankDataRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GSRankDataRequest& from);
  void MergeFrom(const GSRankDataRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 rankType = 1;
  inline bool has_ranktype() const;
  inline void clear_ranktype();
  static const int kRankTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 ranktype() const;
  inline void set_ranktype(::google::protobuf::uint32 value);

  // optional int64 charId = 2;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIdFieldNumber = 2;
  inline ::google::protobuf::int64 charid() const;
  inline void set_charid(::google::protobuf::int64 value);

  // optional string charname = 3;
  inline bool has_charname() const;
  inline void clear_charname();
  static const int kCharnameFieldNumber = 3;
  inline const ::std::string& charname() const;
  inline void set_charname(const ::std::string& value);
  inline void set_charname(const char* value);
  inline void set_charname(const char* value, size_t size);
  inline ::std::string* mutable_charname();
  inline ::std::string* release_charname();
  inline void set_allocated_charname(::std::string* charname);

  // optional int64 value = 4;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 4;
  inline ::google::protobuf::int64 value() const;
  inline void set_value(::google::protobuf::int64 value);

  // repeated int64 paramInt = 5;
  inline int paramint_size() const;
  inline void clear_paramint();
  static const int kParamIntFieldNumber = 5;
  inline ::google::protobuf::int64 paramint(int index) const;
  inline void set_paramint(int index, ::google::protobuf::int64 value);
  inline void add_paramint(::google::protobuf::int64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      paramint() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_paramint();

  // repeated string paramStr = 6;
  inline int paramstr_size() const;
  inline void clear_paramstr();
  static const int kParamStrFieldNumber = 6;
  inline const ::std::string& paramstr(int index) const;
  inline ::std::string* mutable_paramstr(int index);
  inline void set_paramstr(int index, const ::std::string& value);
  inline void set_paramstr(int index, const char* value);
  inline void set_paramstr(int index, const char* value, size_t size);
  inline ::std::string* add_paramstr();
  inline void add_paramstr(const ::std::string& value);
  inline void add_paramstr(const char* value);
  inline void add_paramstr(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& paramstr() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_paramstr();

  // @@protoc_insertion_point(class_scope:proto_ff.GSRankDataRequest)
 private:
  inline void set_has_ranktype();
  inline void clear_has_ranktype();
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_charname();
  inline void clear_has_charname();
  inline void set_has_value();
  inline void clear_has_value();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 charid_;
  ::std::string* charname_;
  ::google::protobuf::int64 value_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > paramint_;
  ::google::protobuf::RepeatedPtrField< ::std::string> paramstr_;
  ::google::protobuf::uint32 ranktype_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_Rank_2eproto();
  friend void protobuf_AssignDesc_Rank_2eproto();
  friend void protobuf_ShutdownFile_Rank_2eproto();

  void InitAsDefaultInstance();
  static GSRankDataRequest* default_instance_;
};
// -------------------------------------------------------------------

class SocialRankOptTitleReq : public ::google::protobuf::Message {
 public:
  SocialRankOptTitleReq();
  virtual ~SocialRankOptTitleReq();

  SocialRankOptTitleReq(const SocialRankOptTitleReq& from);

  inline SocialRankOptTitleReq& operator=(const SocialRankOptTitleReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SocialRankOptTitleReq& default_instance();

  void Swap(SocialRankOptTitleReq* other);

  // implements Message ----------------------------------------------

  SocialRankOptTitleReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SocialRankOptTitleReq& from);
  void MergeFrom(const SocialRankOptTitleReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 charId = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIdFieldNumber = 1;
  inline ::google::protobuf::int64 charid() const;
  inline void set_charid(::google::protobuf::int64 value);

  // optional int64 title = 2;
  inline bool has_title() const;
  inline void clear_title();
  static const int kTitleFieldNumber = 2;
  inline ::google::protobuf::int64 title() const;
  inline void set_title(::google::protobuf::int64 value);

  // optional int32 opt = 3;
  inline bool has_opt() const;
  inline void clear_opt();
  static const int kOptFieldNumber = 3;
  inline ::google::protobuf::int32 opt() const;
  inline void set_opt(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.SocialRankOptTitleReq)
 private:
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_title();
  inline void clear_has_title();
  inline void set_has_opt();
  inline void clear_has_opt();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 charid_;
  ::google::protobuf::int64 title_;
  ::google::protobuf::int32 opt_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_Rank_2eproto();
  friend void protobuf_AssignDesc_Rank_2eproto();
  friend void protobuf_ShutdownFile_Rank_2eproto();

  void InitAsDefaultInstance();
  static SocialRankOptTitleReq* default_instance_;
};
// ===================================================================


// ===================================================================

// RankDataRequest

// required uint32 rankType = 1;
inline bool RankDataRequest::has_ranktype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RankDataRequest::set_has_ranktype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RankDataRequest::clear_has_ranktype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RankDataRequest::clear_ranktype() {
  ranktype_ = 0u;
  clear_has_ranktype();
}
inline ::google::protobuf::uint32 RankDataRequest::ranktype() const {
  return ranktype_;
}
inline void RankDataRequest::set_ranktype(::google::protobuf::uint32 value) {
  set_has_ranktype();
  ranktype_ = value;
}

// -------------------------------------------------------------------

// RankDataResponse

// optional .proto_ff.RankDataInfo info = 1;
inline bool RankDataResponse::has_info() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RankDataResponse::set_has_info() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RankDataResponse::clear_has_info() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RankDataResponse::clear_info() {
  if (info_ != NULL) info_->::proto_ff::RankDataInfo::Clear();
  clear_has_info();
}
inline const ::proto_ff::RankDataInfo& RankDataResponse::info() const {
  return info_ != NULL ? *info_ : *default_instance_->info_;
}
inline ::proto_ff::RankDataInfo* RankDataResponse::mutable_info() {
  set_has_info();
  if (info_ == NULL) info_ = new ::proto_ff::RankDataInfo;
  return info_;
}
inline ::proto_ff::RankDataInfo* RankDataResponse::release_info() {
  clear_has_info();
  ::proto_ff::RankDataInfo* temp = info_;
  info_ = NULL;
  return temp;
}
inline void RankDataResponse::set_allocated_info(::proto_ff::RankDataInfo* info) {
  delete info_;
  info_ = info;
  if (info) {
    set_has_info();
  } else {
    clear_has_info();
  }
}

// -------------------------------------------------------------------

// GWRankDataReq

// required uint32 rankType = 1;
inline bool GWRankDataReq::has_ranktype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GWRankDataReq::set_has_ranktype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GWRankDataReq::clear_has_ranktype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GWRankDataReq::clear_ranktype() {
  ranktype_ = 0u;
  clear_has_ranktype();
}
inline ::google::protobuf::uint32 GWRankDataReq::ranktype() const {
  return ranktype_;
}
inline void GWRankDataReq::set_ranktype(::google::protobuf::uint32 value) {
  set_has_ranktype();
  ranktype_ = value;
}

// required uint64 charId = 2;
inline bool GWRankDataReq::has_charid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GWRankDataReq::set_has_charid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GWRankDataReq::clear_has_charid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GWRankDataReq::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 GWRankDataReq::charid() const {
  return charid_;
}
inline void GWRankDataReq::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
}

// required uint64 value = 3;
inline bool GWRankDataReq::has_value() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GWRankDataReq::set_has_value() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GWRankDataReq::clear_has_value() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GWRankDataReq::clear_value() {
  value_ = GOOGLE_ULONGLONG(0);
  clear_has_value();
}
inline ::google::protobuf::uint64 GWRankDataReq::value() const {
  return value_;
}
inline void GWRankDataReq::set_value(::google::protobuf::uint64 value) {
  set_has_value();
  value_ = value;
}

// -------------------------------------------------------------------

// GWUpdateRankReq

// required uint32 rankType = 1;
inline bool GWUpdateRankReq::has_ranktype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GWUpdateRankReq::set_has_ranktype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GWUpdateRankReq::clear_has_ranktype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GWUpdateRankReq::clear_ranktype() {
  ranktype_ = 0u;
  clear_has_ranktype();
}
inline ::google::protobuf::uint32 GWUpdateRankReq::ranktype() const {
  return ranktype_;
}
inline void GWUpdateRankReq::set_ranktype(::google::protobuf::uint32 value) {
  set_has_ranktype();
  ranktype_ = value;
}

// required uint64 charId = 2;
inline bool GWUpdateRankReq::has_charid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GWUpdateRankReq::set_has_charid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GWUpdateRankReq::clear_has_charid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GWUpdateRankReq::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 GWUpdateRankReq::charid() const {
  return charid_;
}
inline void GWUpdateRankReq::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
}

// required uint64 value = 3;
inline bool GWUpdateRankReq::has_value() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GWUpdateRankReq::set_has_value() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GWUpdateRankReq::clear_has_value() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GWUpdateRankReq::clear_value() {
  value_ = GOOGLE_ULONGLONG(0);
  clear_has_value();
}
inline ::google::protobuf::uint64 GWUpdateRankReq::value() const {
  return value_;
}
inline void GWUpdateRankReq::set_value(::google::protobuf::uint64 value) {
  set_has_value();
  value_ = value;
}

// -------------------------------------------------------------------

// GSUpdateRankReq

// optional uint32 rankType = 1;
inline bool GSUpdateRankReq::has_ranktype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GSUpdateRankReq::set_has_ranktype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GSUpdateRankReq::clear_has_ranktype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GSUpdateRankReq::clear_ranktype() {
  ranktype_ = 0u;
  clear_has_ranktype();
}
inline ::google::protobuf::uint32 GSUpdateRankReq::ranktype() const {
  return ranktype_;
}
inline void GSUpdateRankReq::set_ranktype(::google::protobuf::uint32 value) {
  set_has_ranktype();
  ranktype_ = value;
}

// optional uint64 charId = 2;
inline bool GSUpdateRankReq::has_charid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GSUpdateRankReq::set_has_charid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GSUpdateRankReq::clear_has_charid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GSUpdateRankReq::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 GSUpdateRankReq::charid() const {
  return charid_;
}
inline void GSUpdateRankReq::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
}

// optional int32 zid = 3;
inline bool GSUpdateRankReq::has_zid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GSUpdateRankReq::set_has_zid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GSUpdateRankReq::clear_has_zid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GSUpdateRankReq::clear_zid() {
  zid_ = 0;
  clear_has_zid();
}
inline ::google::protobuf::int32 GSUpdateRankReq::zid() const {
  return zid_;
}
inline void GSUpdateRankReq::set_zid(::google::protobuf::int32 value) {
  set_has_zid();
  zid_ = value;
}

// optional int64 value = 4;
inline bool GSUpdateRankReq::has_value() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GSUpdateRankReq::set_has_value() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GSUpdateRankReq::clear_has_value() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GSUpdateRankReq::clear_value() {
  value_ = GOOGLE_LONGLONG(0);
  clear_has_value();
}
inline ::google::protobuf::int64 GSUpdateRankReq::value() const {
  return value_;
}
inline void GSUpdateRankReq::set_value(::google::protobuf::int64 value) {
  set_has_value();
  value_ = value;
}

// repeated int64 paramInt = 5;
inline int GSUpdateRankReq::paramint_size() const {
  return paramint_.size();
}
inline void GSUpdateRankReq::clear_paramint() {
  paramint_.Clear();
}
inline ::google::protobuf::int64 GSUpdateRankReq::paramint(int index) const {
  return paramint_.Get(index);
}
inline void GSUpdateRankReq::set_paramint(int index, ::google::protobuf::int64 value) {
  paramint_.Set(index, value);
}
inline void GSUpdateRankReq::add_paramint(::google::protobuf::int64 value) {
  paramint_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
GSUpdateRankReq::paramint() const {
  return paramint_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
GSUpdateRankReq::mutable_paramint() {
  return &paramint_;
}

// repeated string paramStr = 6;
inline int GSUpdateRankReq::paramstr_size() const {
  return paramstr_.size();
}
inline void GSUpdateRankReq::clear_paramstr() {
  paramstr_.Clear();
}
inline const ::std::string& GSUpdateRankReq::paramstr(int index) const {
  return paramstr_.Get(index);
}
inline ::std::string* GSUpdateRankReq::mutable_paramstr(int index) {
  return paramstr_.Mutable(index);
}
inline void GSUpdateRankReq::set_paramstr(int index, const ::std::string& value) {
  paramstr_.Mutable(index)->assign(value);
}
inline void GSUpdateRankReq::set_paramstr(int index, const char* value) {
  paramstr_.Mutable(index)->assign(value);
}
inline void GSUpdateRankReq::set_paramstr(int index, const char* value, size_t size) {
  paramstr_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GSUpdateRankReq::add_paramstr() {
  return paramstr_.Add();
}
inline void GSUpdateRankReq::add_paramstr(const ::std::string& value) {
  paramstr_.Add()->assign(value);
}
inline void GSUpdateRankReq::add_paramstr(const char* value) {
  paramstr_.Add()->assign(value);
}
inline void GSUpdateRankReq::add_paramstr(const char* value, size_t size) {
  paramstr_.Add()->assign(reinterpret_cast<const char*>(value), size);
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
GSUpdateRankReq::paramstr() const {
  return paramstr_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
GSUpdateRankReq::mutable_paramstr() {
  return &paramstr_;
}

// -------------------------------------------------------------------

// WGRankDataRequest

// required uint32 rankType = 1;
inline bool WGRankDataRequest::has_ranktype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WGRankDataRequest::set_has_ranktype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WGRankDataRequest::clear_has_ranktype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WGRankDataRequest::clear_ranktype() {
  ranktype_ = 0u;
  clear_has_ranktype();
}
inline ::google::protobuf::uint32 WGRankDataRequest::ranktype() const {
  return ranktype_;
}
inline void WGRankDataRequest::set_ranktype(::google::protobuf::uint32 value) {
  set_has_ranktype();
  ranktype_ = value;
}

// optional int64 charId = 2;
inline bool WGRankDataRequest::has_charid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void WGRankDataRequest::set_has_charid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void WGRankDataRequest::clear_has_charid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void WGRankDataRequest::clear_charid() {
  charid_ = GOOGLE_LONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::int64 WGRankDataRequest::charid() const {
  return charid_;
}
inline void WGRankDataRequest::set_charid(::google::protobuf::int64 value) {
  set_has_charid();
  charid_ = value;
}

// -------------------------------------------------------------------

// GSRankDataRequest

// required uint32 rankType = 1;
inline bool GSRankDataRequest::has_ranktype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GSRankDataRequest::set_has_ranktype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GSRankDataRequest::clear_has_ranktype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GSRankDataRequest::clear_ranktype() {
  ranktype_ = 0u;
  clear_has_ranktype();
}
inline ::google::protobuf::uint32 GSRankDataRequest::ranktype() const {
  return ranktype_;
}
inline void GSRankDataRequest::set_ranktype(::google::protobuf::uint32 value) {
  set_has_ranktype();
  ranktype_ = value;
}

// optional int64 charId = 2;
inline bool GSRankDataRequest::has_charid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GSRankDataRequest::set_has_charid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GSRankDataRequest::clear_has_charid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GSRankDataRequest::clear_charid() {
  charid_ = GOOGLE_LONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::int64 GSRankDataRequest::charid() const {
  return charid_;
}
inline void GSRankDataRequest::set_charid(::google::protobuf::int64 value) {
  set_has_charid();
  charid_ = value;
}

// optional string charname = 3;
inline bool GSRankDataRequest::has_charname() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GSRankDataRequest::set_has_charname() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GSRankDataRequest::clear_has_charname() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GSRankDataRequest::clear_charname() {
  if (charname_ != &::google::protobuf::internal::kEmptyString) {
    charname_->clear();
  }
  clear_has_charname();
}
inline const ::std::string& GSRankDataRequest::charname() const {
  return *charname_;
}
inline void GSRankDataRequest::set_charname(const ::std::string& value) {
  set_has_charname();
  if (charname_ == &::google::protobuf::internal::kEmptyString) {
    charname_ = new ::std::string;
  }
  charname_->assign(value);
}
inline void GSRankDataRequest::set_charname(const char* value) {
  set_has_charname();
  if (charname_ == &::google::protobuf::internal::kEmptyString) {
    charname_ = new ::std::string;
  }
  charname_->assign(value);
}
inline void GSRankDataRequest::set_charname(const char* value, size_t size) {
  set_has_charname();
  if (charname_ == &::google::protobuf::internal::kEmptyString) {
    charname_ = new ::std::string;
  }
  charname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GSRankDataRequest::mutable_charname() {
  set_has_charname();
  if (charname_ == &::google::protobuf::internal::kEmptyString) {
    charname_ = new ::std::string;
  }
  return charname_;
}
inline ::std::string* GSRankDataRequest::release_charname() {
  clear_has_charname();
  if (charname_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = charname_;
    charname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GSRankDataRequest::set_allocated_charname(::std::string* charname) {
  if (charname_ != &::google::protobuf::internal::kEmptyString) {
    delete charname_;
  }
  if (charname) {
    set_has_charname();
    charname_ = charname;
  } else {
    clear_has_charname();
    charname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int64 value = 4;
inline bool GSRankDataRequest::has_value() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GSRankDataRequest::set_has_value() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GSRankDataRequest::clear_has_value() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GSRankDataRequest::clear_value() {
  value_ = GOOGLE_LONGLONG(0);
  clear_has_value();
}
inline ::google::protobuf::int64 GSRankDataRequest::value() const {
  return value_;
}
inline void GSRankDataRequest::set_value(::google::protobuf::int64 value) {
  set_has_value();
  value_ = value;
}

// repeated int64 paramInt = 5;
inline int GSRankDataRequest::paramint_size() const {
  return paramint_.size();
}
inline void GSRankDataRequest::clear_paramint() {
  paramint_.Clear();
}
inline ::google::protobuf::int64 GSRankDataRequest::paramint(int index) const {
  return paramint_.Get(index);
}
inline void GSRankDataRequest::set_paramint(int index, ::google::protobuf::int64 value) {
  paramint_.Set(index, value);
}
inline void GSRankDataRequest::add_paramint(::google::protobuf::int64 value) {
  paramint_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
GSRankDataRequest::paramint() const {
  return paramint_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
GSRankDataRequest::mutable_paramint() {
  return &paramint_;
}

// repeated string paramStr = 6;
inline int GSRankDataRequest::paramstr_size() const {
  return paramstr_.size();
}
inline void GSRankDataRequest::clear_paramstr() {
  paramstr_.Clear();
}
inline const ::std::string& GSRankDataRequest::paramstr(int index) const {
  return paramstr_.Get(index);
}
inline ::std::string* GSRankDataRequest::mutable_paramstr(int index) {
  return paramstr_.Mutable(index);
}
inline void GSRankDataRequest::set_paramstr(int index, const ::std::string& value) {
  paramstr_.Mutable(index)->assign(value);
}
inline void GSRankDataRequest::set_paramstr(int index, const char* value) {
  paramstr_.Mutable(index)->assign(value);
}
inline void GSRankDataRequest::set_paramstr(int index, const char* value, size_t size) {
  paramstr_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GSRankDataRequest::add_paramstr() {
  return paramstr_.Add();
}
inline void GSRankDataRequest::add_paramstr(const ::std::string& value) {
  paramstr_.Add()->assign(value);
}
inline void GSRankDataRequest::add_paramstr(const char* value) {
  paramstr_.Add()->assign(value);
}
inline void GSRankDataRequest::add_paramstr(const char* value, size_t size) {
  paramstr_.Add()->assign(reinterpret_cast<const char*>(value), size);
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
GSRankDataRequest::paramstr() const {
  return paramstr_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
GSRankDataRequest::mutable_paramstr() {
  return &paramstr_;
}

// -------------------------------------------------------------------

// SocialRankOptTitleReq

// optional int64 charId = 1;
inline bool SocialRankOptTitleReq::has_charid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SocialRankOptTitleReq::set_has_charid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SocialRankOptTitleReq::clear_has_charid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SocialRankOptTitleReq::clear_charid() {
  charid_ = GOOGLE_LONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::int64 SocialRankOptTitleReq::charid() const {
  return charid_;
}
inline void SocialRankOptTitleReq::set_charid(::google::protobuf::int64 value) {
  set_has_charid();
  charid_ = value;
}

// optional int64 title = 2;
inline bool SocialRankOptTitleReq::has_title() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SocialRankOptTitleReq::set_has_title() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SocialRankOptTitleReq::clear_has_title() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SocialRankOptTitleReq::clear_title() {
  title_ = GOOGLE_LONGLONG(0);
  clear_has_title();
}
inline ::google::protobuf::int64 SocialRankOptTitleReq::title() const {
  return title_;
}
inline void SocialRankOptTitleReq::set_title(::google::protobuf::int64 value) {
  set_has_title();
  title_ = value;
}

// optional int32 opt = 3;
inline bool SocialRankOptTitleReq::has_opt() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SocialRankOptTitleReq::set_has_opt() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SocialRankOptTitleReq::clear_has_opt() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SocialRankOptTitleReq::clear_opt() {
  opt_ = 0;
  clear_has_opt();
}
inline ::google::protobuf::int32 SocialRankOptTitleReq::opt() const {
  return opt_;
}
inline void SocialRankOptTitleReq::set_opt(::google::protobuf::int32 value) {
  set_has_opt();
  opt_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto_ff

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_Rank_2eproto__INCLUDED
