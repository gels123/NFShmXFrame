// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: E_Talent.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "E_Talent.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace proto_ff {

namespace {

const ::google::protobuf::Descriptor* E_TalentTalent_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_TalentTalent_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_TalentTalent_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_TalentTalent_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_TalentTalenttype_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_TalentTalenttype_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_TalentTalenttype_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_TalentTalenttype_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_E_5fTalent_2eproto() {
  protobuf_AddDesc_E_5fTalent_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "E_Talent.proto");
  GOOGLE_CHECK(file != NULL);
  E_TalentTalent_descriptor_ = file->message_type(0);
  static const int E_TalentTalent_offsets_[9] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TalentTalent, m_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TalentTalent, m_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TalentTalent, m_skillid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TalentTalent, m_lvlimit_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TalentTalent, m_aheadskill_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TalentTalent, m_aheadlv_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TalentTalent, m_needtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TalentTalent, m_typenum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TalentTalent, m_cost_),
  };
  E_TalentTalent_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_TalentTalent_descriptor_,
      E_TalentTalent::default_instance_,
      E_TalentTalent_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TalentTalent, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TalentTalent, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_TalentTalent));
  Sheet_TalentTalent_descriptor_ = file->message_type(1);
  static const int Sheet_TalentTalent_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_TalentTalent, e_talenttalent_list_),
  };
  Sheet_TalentTalent_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_TalentTalent_descriptor_,
      Sheet_TalentTalent::default_instance_,
      Sheet_TalentTalent_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_TalentTalent, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_TalentTalent, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_TalentTalent));
  E_TalentTalenttype_descriptor_ = file->message_type(2);
  static const int E_TalentTalenttype_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TalentTalenttype, m_type_),
  };
  E_TalentTalenttype_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_TalentTalenttype_descriptor_,
      E_TalentTalenttype::default_instance_,
      E_TalentTalenttype_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TalentTalenttype, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TalentTalenttype, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_TalentTalenttype));
  Sheet_TalentTalenttype_descriptor_ = file->message_type(3);
  static const int Sheet_TalentTalenttype_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_TalentTalenttype, e_talenttalenttype_list_),
  };
  Sheet_TalentTalenttype_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_TalentTalenttype_descriptor_,
      Sheet_TalentTalenttype::default_instance_,
      Sheet_TalentTalenttype_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_TalentTalenttype, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_TalentTalenttype, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_TalentTalenttype));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_E_5fTalent_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_TalentTalent_descriptor_, &E_TalentTalent::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_TalentTalent_descriptor_, &Sheet_TalentTalent::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_TalentTalenttype_descriptor_, &E_TalentTalenttype::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_TalentTalenttype_descriptor_, &Sheet_TalentTalenttype::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_E_5fTalent_2eproto() {
  delete E_TalentTalent::default_instance_;
  delete E_TalentTalent_reflection_;
  delete Sheet_TalentTalent::default_instance_;
  delete Sheet_TalentTalent_reflection_;
  delete E_TalentTalenttype::default_instance_;
  delete E_TalentTalenttype_reflection_;
  delete Sheet_TalentTalenttype::default_instance_;
  delete Sheet_TalentTalenttype_reflection_;
}

void protobuf_AddDesc_E_5fTalent_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::yd_fieldoptions::protobuf_AddDesc_yd_5ffieldoptions_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\016E_Talent.proto\022\010proto_ff\032\025yd_fieldopti"
    "ons.proto\"\351\002\n\016E_TalentTalent\022\032\n\004m_id\030\001 \001"
    "(\005B\014\302\377\024\010\345\244\251\350\265\213ID\022 \n\006m_type\030\002 \001(\005B\020\302\377\024\014\345\244"
    "\251\350\265\213\345\244\247\347\261\273\022\037\n\tm_skillid\030\003 \001(\005B\014\302\377\024\010\346\212\200\350\203"
    "\275ID\022#\n\tm_lvlimit\030\004 \001(\005B\020\302\377\024\014\347\255\211\347\272\247\344\270\212\351\231\220"
    "\022&\n\014m_aheadskill\030\005 \001(\005B\020\302\377\024\014\345\211\215\347\275\256\346\212\200\350\203\275"
    "\022)\n\tm_aheadlv\030\006 \001(\005B\026\302\377\024\022\345\211\215\347\275\256\346\212\200\350\203\275\347\255\211"
    "\347\272\247\022*\n\nm_needtype\030\007 \001(\005B\026\302\377\024\022\350\246\201\346\261\202\345\244\251\350\265"
    "\213\347\261\273\345\236\213\022)\n\tm_typenum\030\010 \001(\005B\026\302\377\024\022\350\246\201\346\261\202\345\244"
    "\251\350\265\213\347\202\271\346\225\260\022)\n\006m_cost\030\t \001(\005B\031\302\377\024\025\345\215\207\347\272\247\346\266"
    "\210\350\200\227\345\244\251\350\265\213\347\202\271\"Q\n\022Sheet_TalentTalent\022;\n\023E"
    "_TalentTalent_List\030\001 \003(\0132\030.proto_ff.E_Ta"
    "lentTalentB\004\210\301\024@\"6\n\022E_TalentTalenttype\022 "
    "\n\006m_type\030\001 \001(\005B\020\302\377\024\014\345\244\251\350\265\213\345\244\247\347\261\273\"]\n\026Shee"
    "t_TalentTalenttype\022C\n\027E_TalentTalenttype"
    "_List\030\001 \003(\0132\034.proto_ff.E_TalentTalenttyp"
    "eB\004\210\301\024\004", 647);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "E_Talent.proto", &protobuf_RegisterTypes);
  E_TalentTalent::default_instance_ = new E_TalentTalent();
  Sheet_TalentTalent::default_instance_ = new Sheet_TalentTalent();
  E_TalentTalenttype::default_instance_ = new E_TalentTalenttype();
  Sheet_TalentTalenttype::default_instance_ = new Sheet_TalentTalenttype();
  E_TalentTalent::default_instance_->InitAsDefaultInstance();
  Sheet_TalentTalent::default_instance_->InitAsDefaultInstance();
  E_TalentTalenttype::default_instance_->InitAsDefaultInstance();
  Sheet_TalentTalenttype::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_E_5fTalent_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_E_5fTalent_2eproto {
  StaticDescriptorInitializer_E_5fTalent_2eproto() {
    protobuf_AddDesc_E_5fTalent_2eproto();
  }
} static_descriptor_initializer_E_5fTalent_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int E_TalentTalent::kMIdFieldNumber;
const int E_TalentTalent::kMTypeFieldNumber;
const int E_TalentTalent::kMSkillidFieldNumber;
const int E_TalentTalent::kMLvlimitFieldNumber;
const int E_TalentTalent::kMAheadskillFieldNumber;
const int E_TalentTalent::kMAheadlvFieldNumber;
const int E_TalentTalent::kMNeedtypeFieldNumber;
const int E_TalentTalent::kMTypenumFieldNumber;
const int E_TalentTalent::kMCostFieldNumber;
#endif  // !_MSC_VER

E_TalentTalent::E_TalentTalent()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_TalentTalent::InitAsDefaultInstance() {
}

E_TalentTalent::E_TalentTalent(const E_TalentTalent& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_TalentTalent::SharedCtor() {
  _cached_size_ = 0;
  m_id_ = 0;
  m_type_ = 0;
  m_skillid_ = 0;
  m_lvlimit_ = 0;
  m_aheadskill_ = 0;
  m_aheadlv_ = 0;
  m_needtype_ = 0;
  m_typenum_ = 0;
  m_cost_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_TalentTalent::~E_TalentTalent() {
  SharedDtor();
}

void E_TalentTalent::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_TalentTalent::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_TalentTalent::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_TalentTalent_descriptor_;
}

const E_TalentTalent& E_TalentTalent::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fTalent_2eproto();
  return *default_instance_;
}

E_TalentTalent* E_TalentTalent::default_instance_ = NULL;

E_TalentTalent* E_TalentTalent::New() const {
  return new E_TalentTalent;
}

void E_TalentTalent::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_id_ = 0;
    m_type_ = 0;
    m_skillid_ = 0;
    m_lvlimit_ = 0;
    m_aheadskill_ = 0;
    m_aheadlv_ = 0;
    m_needtype_ = 0;
    m_typenum_ = 0;
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    m_cost_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_TalentTalent::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_id_)));
          set_has_m_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_type;
        break;
      }

      // optional int32 m_type = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_type_)));
          set_has_m_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_m_skillid;
        break;
      }

      // optional int32 m_skillid = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_skillid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_skillid_)));
          set_has_m_skillid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_m_lvlimit;
        break;
      }

      // optional int32 m_lvlimit = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_lvlimit:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_lvlimit_)));
          set_has_m_lvlimit();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_m_aheadskill;
        break;
      }

      // optional int32 m_aheadskill = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_aheadskill:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_aheadskill_)));
          set_has_m_aheadskill();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_m_aheadlv;
        break;
      }

      // optional int32 m_aheadlv = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_aheadlv:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_aheadlv_)));
          set_has_m_aheadlv();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_m_needtype;
        break;
      }

      // optional int32 m_needtype = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_needtype:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_needtype_)));
          set_has_m_needtype();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(64)) goto parse_m_typenum;
        break;
      }

      // optional int32 m_typenum = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_typenum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_typenum_)));
          set_has_m_typenum();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(72)) goto parse_m_cost;
        break;
      }

      // optional int32 m_cost = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_cost:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_cost_)));
          set_has_m_cost();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_TalentTalent::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_id(), output);
  }

  // optional int32 m_type = 2;
  if (has_m_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_type(), output);
  }

  // optional int32 m_skillid = 3;
  if (has_m_skillid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->m_skillid(), output);
  }

  // optional int32 m_lvlimit = 4;
  if (has_m_lvlimit()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->m_lvlimit(), output);
  }

  // optional int32 m_aheadskill = 5;
  if (has_m_aheadskill()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->m_aheadskill(), output);
  }

  // optional int32 m_aheadlv = 6;
  if (has_m_aheadlv()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->m_aheadlv(), output);
  }

  // optional int32 m_needtype = 7;
  if (has_m_needtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->m_needtype(), output);
  }

  // optional int32 m_typenum = 8;
  if (has_m_typenum()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->m_typenum(), output);
  }

  // optional int32 m_cost = 9;
  if (has_m_cost()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->m_cost(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_TalentTalent::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_id(), target);
  }

  // optional int32 m_type = 2;
  if (has_m_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_type(), target);
  }

  // optional int32 m_skillid = 3;
  if (has_m_skillid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->m_skillid(), target);
  }

  // optional int32 m_lvlimit = 4;
  if (has_m_lvlimit()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->m_lvlimit(), target);
  }

  // optional int32 m_aheadskill = 5;
  if (has_m_aheadskill()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->m_aheadskill(), target);
  }

  // optional int32 m_aheadlv = 6;
  if (has_m_aheadlv()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->m_aheadlv(), target);
  }

  // optional int32 m_needtype = 7;
  if (has_m_needtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->m_needtype(), target);
  }

  // optional int32 m_typenum = 8;
  if (has_m_typenum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->m_typenum(), target);
  }

  // optional int32 m_cost = 9;
  if (has_m_cost()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->m_cost(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_TalentTalent::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_id = 1;
    if (has_m_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_id());
    }

    // optional int32 m_type = 2;
    if (has_m_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_type());
    }

    // optional int32 m_skillid = 3;
    if (has_m_skillid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_skillid());
    }

    // optional int32 m_lvlimit = 4;
    if (has_m_lvlimit()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_lvlimit());
    }

    // optional int32 m_aheadskill = 5;
    if (has_m_aheadskill()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_aheadskill());
    }

    // optional int32 m_aheadlv = 6;
    if (has_m_aheadlv()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_aheadlv());
    }

    // optional int32 m_needtype = 7;
    if (has_m_needtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_needtype());
    }

    // optional int32 m_typenum = 8;
    if (has_m_typenum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_typenum());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional int32 m_cost = 9;
    if (has_m_cost()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_cost());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_TalentTalent::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_TalentTalent* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_TalentTalent*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_TalentTalent::MergeFrom(const E_TalentTalent& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_id()) {
      set_m_id(from.m_id());
    }
    if (from.has_m_type()) {
      set_m_type(from.m_type());
    }
    if (from.has_m_skillid()) {
      set_m_skillid(from.m_skillid());
    }
    if (from.has_m_lvlimit()) {
      set_m_lvlimit(from.m_lvlimit());
    }
    if (from.has_m_aheadskill()) {
      set_m_aheadskill(from.m_aheadskill());
    }
    if (from.has_m_aheadlv()) {
      set_m_aheadlv(from.m_aheadlv());
    }
    if (from.has_m_needtype()) {
      set_m_needtype(from.m_needtype());
    }
    if (from.has_m_typenum()) {
      set_m_typenum(from.m_typenum());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_m_cost()) {
      set_m_cost(from.m_cost());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_TalentTalent::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_TalentTalent::CopyFrom(const E_TalentTalent& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_TalentTalent::IsInitialized() const {

  return true;
}

void E_TalentTalent::Swap(E_TalentTalent* other) {
  if (other != this) {
    std::swap(m_id_, other->m_id_);
    std::swap(m_type_, other->m_type_);
    std::swap(m_skillid_, other->m_skillid_);
    std::swap(m_lvlimit_, other->m_lvlimit_);
    std::swap(m_aheadskill_, other->m_aheadskill_);
    std::swap(m_aheadlv_, other->m_aheadlv_);
    std::swap(m_needtype_, other->m_needtype_);
    std::swap(m_typenum_, other->m_typenum_);
    std::swap(m_cost_, other->m_cost_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_TalentTalent::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_TalentTalent_descriptor_;
  metadata.reflection = E_TalentTalent_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_TalentTalent::kETalentTalentListFieldNumber;
#endif  // !_MSC_VER

Sheet_TalentTalent::Sheet_TalentTalent()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_TalentTalent::InitAsDefaultInstance() {
}

Sheet_TalentTalent::Sheet_TalentTalent(const Sheet_TalentTalent& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_TalentTalent::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_TalentTalent::~Sheet_TalentTalent() {
  SharedDtor();
}

void Sheet_TalentTalent::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_TalentTalent::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_TalentTalent::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_TalentTalent_descriptor_;
}

const Sheet_TalentTalent& Sheet_TalentTalent::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fTalent_2eproto();
  return *default_instance_;
}

Sheet_TalentTalent* Sheet_TalentTalent::default_instance_ = NULL;

Sheet_TalentTalent* Sheet_TalentTalent::New() const {
  return new Sheet_TalentTalent;
}

void Sheet_TalentTalent::Clear() {
  e_talenttalent_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_TalentTalent::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.E_TalentTalent E_TalentTalent_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_E_TalentTalent_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_e_talenttalent_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_E_TalentTalent_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_TalentTalent::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.E_TalentTalent E_TalentTalent_List = 1;
  for (int i = 0; i < this->e_talenttalent_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->e_talenttalent_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_TalentTalent::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.E_TalentTalent E_TalentTalent_List = 1;
  for (int i = 0; i < this->e_talenttalent_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->e_talenttalent_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_TalentTalent::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.E_TalentTalent E_TalentTalent_List = 1;
  total_size += 1 * this->e_talenttalent_list_size();
  for (int i = 0; i < this->e_talenttalent_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->e_talenttalent_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_TalentTalent::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_TalentTalent* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_TalentTalent*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_TalentTalent::MergeFrom(const Sheet_TalentTalent& from) {
  GOOGLE_CHECK_NE(&from, this);
  e_talenttalent_list_.MergeFrom(from.e_talenttalent_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_TalentTalent::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_TalentTalent::CopyFrom(const Sheet_TalentTalent& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_TalentTalent::IsInitialized() const {

  return true;
}

void Sheet_TalentTalent::Swap(Sheet_TalentTalent* other) {
  if (other != this) {
    e_talenttalent_list_.Swap(&other->e_talenttalent_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_TalentTalent::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_TalentTalent_descriptor_;
  metadata.reflection = Sheet_TalentTalent_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_TalentTalenttype::kMTypeFieldNumber;
#endif  // !_MSC_VER

E_TalentTalenttype::E_TalentTalenttype()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_TalentTalenttype::InitAsDefaultInstance() {
}

E_TalentTalenttype::E_TalentTalenttype(const E_TalentTalenttype& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_TalentTalenttype::SharedCtor() {
  _cached_size_ = 0;
  m_type_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_TalentTalenttype::~E_TalentTalenttype() {
  SharedDtor();
}

void E_TalentTalenttype::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_TalentTalenttype::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_TalentTalenttype::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_TalentTalenttype_descriptor_;
}

const E_TalentTalenttype& E_TalentTalenttype::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fTalent_2eproto();
  return *default_instance_;
}

E_TalentTalenttype* E_TalentTalenttype::default_instance_ = NULL;

E_TalentTalenttype* E_TalentTalenttype::New() const {
  return new E_TalentTalenttype;
}

void E_TalentTalenttype::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_type_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_TalentTalenttype::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_type_)));
          set_has_m_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_TalentTalenttype::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_type = 1;
  if (has_m_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_type(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_TalentTalenttype::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_type = 1;
  if (has_m_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_type(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_TalentTalenttype::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_type = 1;
    if (has_m_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_type());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_TalentTalenttype::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_TalentTalenttype* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_TalentTalenttype*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_TalentTalenttype::MergeFrom(const E_TalentTalenttype& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_type()) {
      set_m_type(from.m_type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_TalentTalenttype::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_TalentTalenttype::CopyFrom(const E_TalentTalenttype& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_TalentTalenttype::IsInitialized() const {

  return true;
}

void E_TalentTalenttype::Swap(E_TalentTalenttype* other) {
  if (other != this) {
    std::swap(m_type_, other->m_type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_TalentTalenttype::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_TalentTalenttype_descriptor_;
  metadata.reflection = E_TalentTalenttype_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_TalentTalenttype::kETalentTalenttypeListFieldNumber;
#endif  // !_MSC_VER

Sheet_TalentTalenttype::Sheet_TalentTalenttype()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_TalentTalenttype::InitAsDefaultInstance() {
}

Sheet_TalentTalenttype::Sheet_TalentTalenttype(const Sheet_TalentTalenttype& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_TalentTalenttype::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_TalentTalenttype::~Sheet_TalentTalenttype() {
  SharedDtor();
}

void Sheet_TalentTalenttype::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_TalentTalenttype::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_TalentTalenttype::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_TalentTalenttype_descriptor_;
}

const Sheet_TalentTalenttype& Sheet_TalentTalenttype::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fTalent_2eproto();
  return *default_instance_;
}

Sheet_TalentTalenttype* Sheet_TalentTalenttype::default_instance_ = NULL;

Sheet_TalentTalenttype* Sheet_TalentTalenttype::New() const {
  return new Sheet_TalentTalenttype;
}

void Sheet_TalentTalenttype::Clear() {
  e_talenttalenttype_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_TalentTalenttype::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.E_TalentTalenttype E_TalentTalenttype_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_E_TalentTalenttype_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_e_talenttalenttype_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_E_TalentTalenttype_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_TalentTalenttype::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.E_TalentTalenttype E_TalentTalenttype_List = 1;
  for (int i = 0; i < this->e_talenttalenttype_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->e_talenttalenttype_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_TalentTalenttype::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.E_TalentTalenttype E_TalentTalenttype_List = 1;
  for (int i = 0; i < this->e_talenttalenttype_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->e_talenttalenttype_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_TalentTalenttype::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.E_TalentTalenttype E_TalentTalenttype_List = 1;
  total_size += 1 * this->e_talenttalenttype_list_size();
  for (int i = 0; i < this->e_talenttalenttype_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->e_talenttalenttype_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_TalentTalenttype::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_TalentTalenttype* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_TalentTalenttype*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_TalentTalenttype::MergeFrom(const Sheet_TalentTalenttype& from) {
  GOOGLE_CHECK_NE(&from, this);
  e_talenttalenttype_list_.MergeFrom(from.e_talenttalenttype_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_TalentTalenttype::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_TalentTalenttype::CopyFrom(const Sheet_TalentTalenttype& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_TalentTalenttype::IsInitialized() const {

  return true;
}

void Sheet_TalentTalenttype::Swap(Sheet_TalentTalenttype* other) {
  if (other != this) {
    e_talenttalenttype_list_.Swap(&other->e_talenttalenttype_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_TalentTalenttype::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_TalentTalenttype_descriptor_;
  metadata.reflection = Sheet_TalentTalenttype_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto_ff

// @@protoc_insertion_point(global_scope)
