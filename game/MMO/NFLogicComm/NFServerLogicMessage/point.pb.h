// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: point.proto

#ifndef PROTOBUF_point_2eproto__INCLUDED
#define PROTOBUF_point_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "yd_fieldoptions.pb.h"
// @@protoc_insertion_point(includes)

namespace proto_ff {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_point_2eproto();
void protobuf_AssignDesc_point_2eproto();
void protobuf_ShutdownFile_point_2eproto();

class pointpoint;
class Sheet_pointpoint;

// ===================================================================

class pointpoint : public ::google::protobuf::Message {
 public:
  pointpoint();
  virtual ~pointpoint();

  pointpoint(const pointpoint& from);

  inline pointpoint& operator=(const pointpoint& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const pointpoint& default_instance();

  void Swap(pointpoint* other);

  // implements Message ----------------------------------------------

  pointpoint* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const pointpoint& from);
  void MergeFrom(const pointpoint& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int64 id() const;
  inline void set_id(::google::protobuf::int64 value);

  // optional int64 belongToSceneID = 2;
  inline bool has_belongtosceneid() const;
  inline void clear_belongtosceneid();
  static const int kBelongToSceneIDFieldNumber = 2;
  inline ::google::protobuf::int64 belongtosceneid() const;
  inline void set_belongtosceneid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.pointpoint)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_belongtosceneid();
  inline void clear_has_belongtosceneid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 id_;
  ::google::protobuf::int64 belongtosceneid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_point_2eproto();
  friend void protobuf_AssignDesc_point_2eproto();
  friend void protobuf_ShutdownFile_point_2eproto();

  void InitAsDefaultInstance();
  static pointpoint* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_pointpoint : public ::google::protobuf::Message {
 public:
  Sheet_pointpoint();
  virtual ~Sheet_pointpoint();

  Sheet_pointpoint(const Sheet_pointpoint& from);

  inline Sheet_pointpoint& operator=(const Sheet_pointpoint& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_pointpoint& default_instance();

  void Swap(Sheet_pointpoint* other);

  // implements Message ----------------------------------------------

  Sheet_pointpoint* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_pointpoint& from);
  void MergeFrom(const Sheet_pointpoint& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.pointpoint pointpoint_List = 1;
  inline int pointpoint_list_size() const;
  inline void clear_pointpoint_list();
  static const int kPointpointListFieldNumber = 1;
  inline const ::proto_ff::pointpoint& pointpoint_list(int index) const;
  inline ::proto_ff::pointpoint* mutable_pointpoint_list(int index);
  inline ::proto_ff::pointpoint* add_pointpoint_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::pointpoint >&
      pointpoint_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::pointpoint >*
      mutable_pointpoint_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_pointpoint)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::pointpoint > pointpoint_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_point_2eproto();
  friend void protobuf_AssignDesc_point_2eproto();
  friend void protobuf_ShutdownFile_point_2eproto();

  void InitAsDefaultInstance();
  static Sheet_pointpoint* default_instance_;
};
// ===================================================================


// ===================================================================

// pointpoint

// optional int64 id = 1;
inline bool pointpoint::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void pointpoint::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void pointpoint::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void pointpoint::clear_id() {
  id_ = GOOGLE_LONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::int64 pointpoint::id() const {
  return id_;
}
inline void pointpoint::set_id(::google::protobuf::int64 value) {
  set_has_id();
  id_ = value;
}

// optional int64 belongToSceneID = 2;
inline bool pointpoint::has_belongtosceneid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void pointpoint::set_has_belongtosceneid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void pointpoint::clear_has_belongtosceneid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void pointpoint::clear_belongtosceneid() {
  belongtosceneid_ = GOOGLE_LONGLONG(0);
  clear_has_belongtosceneid();
}
inline ::google::protobuf::int64 pointpoint::belongtosceneid() const {
  return belongtosceneid_;
}
inline void pointpoint::set_belongtosceneid(::google::protobuf::int64 value) {
  set_has_belongtosceneid();
  belongtosceneid_ = value;
}

// -------------------------------------------------------------------

// Sheet_pointpoint

// repeated .proto_ff.pointpoint pointpoint_List = 1;
inline int Sheet_pointpoint::pointpoint_list_size() const {
  return pointpoint_list_.size();
}
inline void Sheet_pointpoint::clear_pointpoint_list() {
  pointpoint_list_.Clear();
}
inline const ::proto_ff::pointpoint& Sheet_pointpoint::pointpoint_list(int index) const {
  return pointpoint_list_.Get(index);
}
inline ::proto_ff::pointpoint* Sheet_pointpoint::mutable_pointpoint_list(int index) {
  return pointpoint_list_.Mutable(index);
}
inline ::proto_ff::pointpoint* Sheet_pointpoint::add_pointpoint_list() {
  return pointpoint_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::pointpoint >&
Sheet_pointpoint::pointpoint_list() const {
  return pointpoint_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::pointpoint >*
Sheet_pointpoint::mutable_pointpoint_list() {
  return &pointpoint_list_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto_ff

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_point_2eproto__INCLUDED
