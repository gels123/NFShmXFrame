// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Dup.proto

#ifndef PROTOBUF_Dup_2eproto__INCLUDED
#define PROTOBUF_Dup_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "Com.pb.h"
#include "ComDefine.pb.h"
#include "Scene.pb.h"
#include "DBProxy.pb.h"
// @@protoc_insertion_point(includes)

namespace proto_ff {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_Dup_2eproto();
void protobuf_AssignDesc_Dup_2eproto();
void protobuf_ShutdownFile_Dup_2eproto();

class DupDropProto;
class DupTowerRecordEntry;
class DupTeamInviteState;
class TowerDupData;
class PassDupData;
class PassGhostData;
class PassMoyuData;
class YaoTaData;
class ComDupGroupData;
class EnterDupReq;
class EnterDupRsp;
class DupResultReq;
class DupResultRsp;
class DupLeaveReq;
class DupLeaveRsp;
class NotifyDupRsp;
class NotifyDupRunRsp;
class NotifyDupEndRsp;
class NotifyDupBeginCdRsp;
class RecvTowerDupReq;
class RecvTowerDupRsp;
class BuyDupNumReq;
class BuyDupNumRsp;
class DupTowerRecordReq;
class DupTowerRecordRsp;
class DupTeamInviteReq;
class DupTeamInviteRsp;
class NotifyDupTeamInviteStateRsp;
class DupTeamOptReq;
class DupTeamOptRsp;
class DupSweepReq;
class DupSweepRsp;
class GhostDupRankReq;
class GHostDupRankRsp;
class NotifyGHostDupRun;
class NotifyGHostChgStep;
class NotifyGHostDupRes;
class GhostRecvPassReq;
class GhostRecvPassRsp;
class YaotaReq;
class NotifyYaotaFirstPass;
class YaotaFirstPassInfoReq;
class YaotaFirstPassInfoRsp;
class YaotaRecvReq;
class YaotaRecvRsp;
class NotifyYaotaDupRes;
class L2CEnterDupReq;
class L2CCreateDupRsp;
class L2CDupStateChgNotify;
class C2LPullRoleEnterDupNotify;
class L2CDupRoleActionNotify;
class S2CEnterDupReq;
class C2SEnterDupRsp;
class L2CTowerRecvRecordReq;
class L2SEnterDupReq;
class L2SDupTeamInviteReq;
class C2SCreateDupResultRsp;
class S2CNotifyCharEnterDup;
class NotifyRebotEnterDup;
class L2SDupTeamOptReq;
class S2CNofityRoleRebotEnterDup;
class C2LRoleRobotEnterDupReq;
class L2CDupResultRsp;
class C2LEnterRebotReq;
class C2SNotifyDupFinishRsp;
class C2STeamEnterDupReq;
class S2LCreateDupReq;
class L2SCreateDupRsp;
class S2LNotifyRoleEnterDup;
class L2SNotifyDupFinishRsp;
class L2CGHostDupRankReq;
class L2CUpdateGHostDupRankReq;
class L2CSynPassYaotaReq;
class NotifyDupTeamDisReq;
class LCNotifyYaotaFirstPassReq;
class CLYaotaRecvReq;

// ===================================================================

class DupDropProto : public ::google::protobuf::Message {
 public:
  DupDropProto();
  virtual ~DupDropProto();

  DupDropProto(const DupDropProto& from);

  inline DupDropProto& operator=(const DupDropProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DupDropProto& default_instance();

  void Swap(DupDropProto* other);

  // implements Message ----------------------------------------------

  DupDropProto* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DupDropProto& from);
  void MergeFrom(const DupDropProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.ItemProtoInfo pick_item = 1;
  inline int pick_item_size() const;
  inline void clear_pick_item();
  static const int kPickItemFieldNumber = 1;
  inline const ::proto_ff::ItemProtoInfo& pick_item(int index) const;
  inline ::proto_ff::ItemProtoInfo* mutable_pick_item(int index);
  inline ::proto_ff::ItemProtoInfo* add_pick_item();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::ItemProtoInfo >&
      pick_item() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::ItemProtoInfo >*
      mutable_pick_item();

  // optional int64 pick_gold = 2;
  inline bool has_pick_gold() const;
  inline void clear_pick_gold();
  static const int kPickGoldFieldNumber = 2;
  inline ::google::protobuf::int64 pick_gold() const;
  inline void set_pick_gold(::google::protobuf::int64 value);

  // optional int64 pick_exp = 3;
  inline bool has_pick_exp() const;
  inline void clear_pick_exp();
  static const int kPickExpFieldNumber = 3;
  inline ::google::protobuf::int64 pick_exp() const;
  inline void set_pick_exp(::google::protobuf::int64 value);

  // optional int32 kill_num = 4;
  inline bool has_kill_num() const;
  inline void clear_kill_num();
  static const int kKillNumFieldNumber = 4;
  inline ::google::protobuf::int32 kill_num() const;
  inline void set_kill_num(::google::protobuf::int32 value);

  // repeated .proto_ff.ItemProtoInfo star3 = 5;
  inline int star3_size() const;
  inline void clear_star3();
  static const int kStar3FieldNumber = 5;
  inline const ::proto_ff::ItemProtoInfo& star3(int index) const;
  inline ::proto_ff::ItemProtoInfo* mutable_star3(int index);
  inline ::proto_ff::ItemProtoInfo* add_star3();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::ItemProtoInfo >&
      star3() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::ItemProtoInfo >*
      mutable_star3();

  // @@protoc_insertion_point(class_scope:proto_ff.DupDropProto)
 private:
  inline void set_has_pick_gold();
  inline void clear_has_pick_gold();
  inline void set_has_pick_exp();
  inline void clear_has_pick_exp();
  inline void set_has_kill_num();
  inline void clear_has_kill_num();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::ItemProtoInfo > pick_item_;
  ::google::protobuf::int64 pick_gold_;
  ::google::protobuf::int64 pick_exp_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::ItemProtoInfo > star3_;
  ::google::protobuf::int32 kill_num_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_Dup_2eproto();
  friend void protobuf_AssignDesc_Dup_2eproto();
  friend void protobuf_ShutdownFile_Dup_2eproto();

  void InitAsDefaultInstance();
  static DupDropProto* default_instance_;
};
// -------------------------------------------------------------------

class DupTowerRecordEntry : public ::google::protobuf::Message {
 public:
  DupTowerRecordEntry();
  virtual ~DupTowerRecordEntry();

  DupTowerRecordEntry(const DupTowerRecordEntry& from);

  inline DupTowerRecordEntry& operator=(const DupTowerRecordEntry& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DupTowerRecordEntry& default_instance();

  void Swap(DupTowerRecordEntry* other);

  // implements Message ----------------------------------------------

  DupTowerRecordEntry* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DupTowerRecordEntry& from);
  void MergeFrom(const DupTowerRecordEntry& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string name = 1;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 1;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // optional uint64 time = 2;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 2;
  inline ::google::protobuf::uint64 time() const;
  inline void set_time(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.DupTowerRecordEntry)
 private:
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_time();
  inline void clear_has_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* name_;
  ::google::protobuf::uint64 time_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Dup_2eproto();
  friend void protobuf_AssignDesc_Dup_2eproto();
  friend void protobuf_ShutdownFile_Dup_2eproto();

  void InitAsDefaultInstance();
  static DupTowerRecordEntry* default_instance_;
};
// -------------------------------------------------------------------

class DupTeamInviteState : public ::google::protobuf::Message {
 public:
  DupTeamInviteState();
  virtual ~DupTeamInviteState();

  DupTeamInviteState(const DupTeamInviteState& from);

  inline DupTeamInviteState& operator=(const DupTeamInviteState& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DupTeamInviteState& default_instance();

  void Swap(DupTeamInviteState* other);

  // implements Message ----------------------------------------------

  DupTeamInviteState* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DupTeamInviteState& from);
  void MergeFrom(const DupTeamInviteState& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 cid = 1;
  inline bool has_cid() const;
  inline void clear_cid();
  static const int kCidFieldNumber = 1;
  inline ::google::protobuf::uint64 cid() const;
  inline void set_cid(::google::protobuf::uint64 value);

  // optional int32 state = 2;
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 2;
  inline ::google::protobuf::int32 state() const;
  inline void set_state(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.DupTeamInviteState)
 private:
  inline void set_has_cid();
  inline void clear_has_cid();
  inline void set_has_state();
  inline void clear_has_state();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 cid_;
  ::google::protobuf::int32 state_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Dup_2eproto();
  friend void protobuf_AssignDesc_Dup_2eproto();
  friend void protobuf_ShutdownFile_Dup_2eproto();

  void InitAsDefaultInstance();
  static DupTeamInviteState* default_instance_;
};
// -------------------------------------------------------------------

class TowerDupData : public ::google::protobuf::Message {
 public:
  TowerDupData();
  virtual ~TowerDupData();

  TowerDupData(const TowerDupData& from);

  inline TowerDupData& operator=(const TowerDupData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TowerDupData& default_instance();

  void Swap(TowerDupData* other);

  // implements Message ----------------------------------------------

  TowerDupData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TowerDupData& from);
  void MergeFrom(const TowerDupData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int64 ids = 1;
  inline int ids_size() const;
  inline void clear_ids();
  static const int kIdsFieldNumber = 1;
  inline ::google::protobuf::int64 ids(int index) const;
  inline void set_ids(int index, ::google::protobuf::int64 value);
  inline void add_ids(::google::protobuf::int64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      ids() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_ids();

  // @@protoc_insertion_point(class_scope:proto_ff.TowerDupData)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > ids_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Dup_2eproto();
  friend void protobuf_AssignDesc_Dup_2eproto();
  friend void protobuf_ShutdownFile_Dup_2eproto();

  void InitAsDefaultInstance();
  static TowerDupData* default_instance_;
};
// -------------------------------------------------------------------

class PassDupData : public ::google::protobuf::Message {
 public:
  PassDupData();
  virtual ~PassDupData();

  PassDupData(const PassDupData& from);

  inline PassDupData& operator=(const PassDupData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PassDupData& default_instance();

  void Swap(PassDupData* other);

  // implements Message ----------------------------------------------

  PassDupData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PassDupData& from);
  void MergeFrom(const PassDupData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int64 id() const;
  inline void set_id(::google::protobuf::int64 value);

  // optional int32 star = 2;
  inline bool has_star() const;
  inline void clear_star();
  static const int kStarFieldNumber = 2;
  inline ::google::protobuf::int32 star() const;
  inline void set_star(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.PassDupData)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_star();
  inline void clear_has_star();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 id_;
  ::google::protobuf::int32 star_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Dup_2eproto();
  friend void protobuf_AssignDesc_Dup_2eproto();
  friend void protobuf_ShutdownFile_Dup_2eproto();

  void InitAsDefaultInstance();
  static PassDupData* default_instance_;
};
// -------------------------------------------------------------------

class PassGhostData : public ::google::protobuf::Message {
 public:
  PassGhostData();
  virtual ~PassGhostData();

  PassGhostData(const PassGhostData& from);

  inline PassGhostData& operator=(const PassGhostData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PassGhostData& default_instance();

  void Swap(PassGhostData* other);

  // implements Message ----------------------------------------------

  PassGhostData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PassGhostData& from);
  void MergeFrom(const PassGhostData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 wave = 1;
  inline bool has_wave() const;
  inline void clear_wave();
  static const int kWaveFieldNumber = 1;
  inline ::google::protobuf::int32 wave() const;
  inline void set_wave(::google::protobuf::int32 value);

  // optional int32 time = 2;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 2;
  inline ::google::protobuf::int32 time() const;
  inline void set_time(::google::protobuf::int32 value);

  // repeated int32 recv_ids = 3;
  inline int recv_ids_size() const;
  inline void clear_recv_ids();
  static const int kRecvIdsFieldNumber = 3;
  inline ::google::protobuf::int32 recv_ids(int index) const;
  inline void set_recv_ids(int index, ::google::protobuf::int32 value);
  inline void add_recv_ids(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      recv_ids() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_recv_ids();

  // @@protoc_insertion_point(class_scope:proto_ff.PassGhostData)
 private:
  inline void set_has_wave();
  inline void clear_has_wave();
  inline void set_has_time();
  inline void clear_has_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 wave_;
  ::google::protobuf::int32 time_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > recv_ids_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_Dup_2eproto();
  friend void protobuf_AssignDesc_Dup_2eproto();
  friend void protobuf_ShutdownFile_Dup_2eproto();

  void InitAsDefaultInstance();
  static PassGhostData* default_instance_;
};
// -------------------------------------------------------------------

class PassMoyuData : public ::google::protobuf::Message {
 public:
  PassMoyuData();
  virtual ~PassMoyuData();

  PassMoyuData(const PassMoyuData& from);

  inline PassMoyuData& operator=(const PassMoyuData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PassMoyuData& default_instance();

  void Swap(PassMoyuData* other);

  // implements Message ----------------------------------------------

  PassMoyuData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PassMoyuData& from);
  void MergeFrom(const PassMoyuData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 recv_layer = 1;
  inline int recv_layer_size() const;
  inline void clear_recv_layer();
  static const int kRecvLayerFieldNumber = 1;
  inline ::google::protobuf::int32 recv_layer(int index) const;
  inline void set_recv_layer(int index, ::google::protobuf::int32 value);
  inline void add_recv_layer(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      recv_layer() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_recv_layer();

  // optional uint64 day_harm = 2;
  inline bool has_day_harm() const;
  inline void clear_day_harm();
  static const int kDayHarmFieldNumber = 2;
  inline ::google::protobuf::uint64 day_harm() const;
  inline void set_day_harm(::google::protobuf::uint64 value);

  // optional uint64 week_harm = 3;
  inline bool has_week_harm() const;
  inline void clear_week_harm();
  static const int kWeekHarmFieldNumber = 3;
  inline ::google::protobuf::uint64 week_harm() const;
  inline void set_week_harm(::google::protobuf::uint64 value);

  // optional uint64 last_day_harm = 4;
  inline bool has_last_day_harm() const;
  inline void clear_last_day_harm();
  static const int kLastDayHarmFieldNumber = 4;
  inline ::google::protobuf::uint64 last_day_harm() const;
  inline void set_last_day_harm(::google::protobuf::uint64 value);

  // optional uint64 last_week_harm = 5;
  inline bool has_last_week_harm() const;
  inline void clear_last_week_harm();
  static const int kLastWeekHarmFieldNumber = 5;
  inline ::google::protobuf::uint64 last_week_harm() const;
  inline void set_last_week_harm(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.PassMoyuData)
 private:
  inline void set_has_day_harm();
  inline void clear_has_day_harm();
  inline void set_has_week_harm();
  inline void clear_has_week_harm();
  inline void set_has_last_day_harm();
  inline void clear_has_last_day_harm();
  inline void set_has_last_week_harm();
  inline void clear_has_last_week_harm();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > recv_layer_;
  ::google::protobuf::uint64 day_harm_;
  ::google::protobuf::uint64 week_harm_;
  ::google::protobuf::uint64 last_day_harm_;
  ::google::protobuf::uint64 last_week_harm_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_Dup_2eproto();
  friend void protobuf_AssignDesc_Dup_2eproto();
  friend void protobuf_ShutdownFile_Dup_2eproto();

  void InitAsDefaultInstance();
  static PassMoyuData* default_instance_;
};
// -------------------------------------------------------------------

class YaoTaData : public ::google::protobuf::Message {
 public:
  YaoTaData();
  virtual ~YaoTaData();

  YaoTaData(const YaoTaData& from);

  inline YaoTaData& operator=(const YaoTaData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const YaoTaData& default_instance();

  void Swap(YaoTaData* other);

  // implements Message ----------------------------------------------

  YaoTaData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const YaoTaData& from);
  void MergeFrom(const YaoTaData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 pass_ids = 1;
  inline int pass_ids_size() const;
  inline void clear_pass_ids();
  static const int kPassIdsFieldNumber = 1;
  inline ::google::protobuf::int32 pass_ids(int index) const;
  inline void set_pass_ids(int index, ::google::protobuf::int32 value);
  inline void add_pass_ids(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      pass_ids() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_pass_ids();

  // repeated int32 first_pass_ids = 2;
  inline int first_pass_ids_size() const;
  inline void clear_first_pass_ids();
  static const int kFirstPassIdsFieldNumber = 2;
  inline ::google::protobuf::int32 first_pass_ids(int index) const;
  inline void set_first_pass_ids(int index, ::google::protobuf::int32 value);
  inline void add_first_pass_ids(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      first_pass_ids() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_first_pass_ids();

  // @@protoc_insertion_point(class_scope:proto_ff.YaoTaData)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > pass_ids_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > first_pass_ids_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Dup_2eproto();
  friend void protobuf_AssignDesc_Dup_2eproto();
  friend void protobuf_ShutdownFile_Dup_2eproto();

  void InitAsDefaultInstance();
  static YaoTaData* default_instance_;
};
// -------------------------------------------------------------------

class ComDupGroupData : public ::google::protobuf::Message {
 public:
  ComDupGroupData();
  virtual ~ComDupGroupData();

  ComDupGroupData(const ComDupGroupData& from);

  inline ComDupGroupData& operator=(const ComDupGroupData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ComDupGroupData& default_instance();

  void Swap(ComDupGroupData* other);

  // implements Message ----------------------------------------------

  ComDupGroupData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ComDupGroupData& from);
  void MergeFrom(const ComDupGroupData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 group = 1;
  inline bool has_group() const;
  inline void clear_group();
  static const int kGroupFieldNumber = 1;
  inline ::google::protobuf::int32 group() const;
  inline void set_group(::google::protobuf::int32 value);

  // optional uint64 pass_dupId = 2;
  inline bool has_pass_dupid() const;
  inline void clear_pass_dupid();
  static const int kPassDupIdFieldNumber = 2;
  inline ::google::protobuf::uint64 pass_dupid() const;
  inline void set_pass_dupid(::google::protobuf::uint64 value);

  // optional int32 enter_num = 3;
  inline bool has_enter_num() const;
  inline void clear_enter_num();
  static const int kEnterNumFieldNumber = 3;
  inline ::google::protobuf::int32 enter_num() const;
  inline void set_enter_num(::google::protobuf::int32 value);

  // optional int32 max_num = 4;
  inline bool has_max_num() const;
  inline void clear_max_num();
  static const int kMaxNumFieldNumber = 4;
  inline ::google::protobuf::int32 max_num() const;
  inline void set_max_num(::google::protobuf::int32 value);

  // optional int32 buy_num = 5;
  inline bool has_buy_num() const;
  inline void clear_buy_num();
  static const int kBuyNumFieldNumber = 5;
  inline ::google::protobuf::int32 buy_num() const;
  inline void set_buy_num(::google::protobuf::int32 value);

  // optional int32 star = 6;
  inline bool has_star() const;
  inline void clear_star();
  static const int kStarFieldNumber = 6;
  inline ::google::protobuf::int32 star() const;
  inline void set_star(::google::protobuf::int32 value);

  // optional .proto_ff.TowerDupData tower = 7;
  inline bool has_tower() const;
  inline void clear_tower();
  static const int kTowerFieldNumber = 7;
  inline const ::proto_ff::TowerDupData& tower() const;
  inline ::proto_ff::TowerDupData* mutable_tower();
  inline ::proto_ff::TowerDupData* release_tower();
  inline void set_allocated_tower(::proto_ff::TowerDupData* tower);

  // repeated .proto_ff.PassDupData pass = 8;
  inline int pass_size() const;
  inline void clear_pass();
  static const int kPassFieldNumber = 8;
  inline const ::proto_ff::PassDupData& pass(int index) const;
  inline ::proto_ff::PassDupData* mutable_pass(int index);
  inline ::proto_ff::PassDupData* add_pass();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::PassDupData >&
      pass() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::PassDupData >*
      mutable_pass();

  // optional .proto_ff.PassGhostData ghost = 9;
  inline bool has_ghost() const;
  inline void clear_ghost();
  static const int kGhostFieldNumber = 9;
  inline const ::proto_ff::PassGhostData& ghost() const;
  inline ::proto_ff::PassGhostData* mutable_ghost();
  inline ::proto_ff::PassGhostData* release_ghost();
  inline void set_allocated_ghost(::proto_ff::PassGhostData* ghost);

  // optional .proto_ff.PassMoyuData moyu = 10;
  inline bool has_moyu() const;
  inline void clear_moyu();
  static const int kMoyuFieldNumber = 10;
  inline const ::proto_ff::PassMoyuData& moyu() const;
  inline ::proto_ff::PassMoyuData* mutable_moyu();
  inline ::proto_ff::PassMoyuData* release_moyu();
  inline void set_allocated_moyu(::proto_ff::PassMoyuData* moyu);

  // optional .proto_ff.YaoTaData yaota = 11;
  inline bool has_yaota() const;
  inline void clear_yaota();
  static const int kYaotaFieldNumber = 11;
  inline const ::proto_ff::YaoTaData& yaota() const;
  inline ::proto_ff::YaoTaData* mutable_yaota();
  inline ::proto_ff::YaoTaData* release_yaota();
  inline void set_allocated_yaota(::proto_ff::YaoTaData* yaota);

  // @@protoc_insertion_point(class_scope:proto_ff.ComDupGroupData)
 private:
  inline void set_has_group();
  inline void clear_has_group();
  inline void set_has_pass_dupid();
  inline void clear_has_pass_dupid();
  inline void set_has_enter_num();
  inline void clear_has_enter_num();
  inline void set_has_max_num();
  inline void clear_has_max_num();
  inline void set_has_buy_num();
  inline void clear_has_buy_num();
  inline void set_has_star();
  inline void clear_has_star();
  inline void set_has_tower();
  inline void clear_has_tower();
  inline void set_has_ghost();
  inline void clear_has_ghost();
  inline void set_has_moyu();
  inline void clear_has_moyu();
  inline void set_has_yaota();
  inline void clear_has_yaota();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 pass_dupid_;
  ::google::protobuf::int32 group_;
  ::google::protobuf::int32 enter_num_;
  ::google::protobuf::int32 max_num_;
  ::google::protobuf::int32 buy_num_;
  ::proto_ff::TowerDupData* tower_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::PassDupData > pass_;
  ::proto_ff::PassGhostData* ghost_;
  ::proto_ff::PassMoyuData* moyu_;
  ::proto_ff::YaoTaData* yaota_;
  ::google::protobuf::int32 star_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(11 + 31) / 32];

  friend void  protobuf_AddDesc_Dup_2eproto();
  friend void protobuf_AssignDesc_Dup_2eproto();
  friend void protobuf_ShutdownFile_Dup_2eproto();

  void InitAsDefaultInstance();
  static ComDupGroupData* default_instance_;
};
// -------------------------------------------------------------------

class EnterDupReq : public ::google::protobuf::Message {
 public:
  EnterDupReq();
  virtual ~EnterDupReq();

  EnterDupReq(const EnterDupReq& from);

  inline EnterDupReq& operator=(const EnterDupReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EnterDupReq& default_instance();

  void Swap(EnterDupReq* other);

  // implements Message ----------------------------------------------

  EnterDupReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const EnterDupReq& from);
  void MergeFrom(const EnterDupReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 dupId = 1;
  inline bool has_dupid() const;
  inline void clear_dupid();
  static const int kDupIdFieldNumber = 1;
  inline ::google::protobuf::uint64 dupid() const;
  inline void set_dupid(::google::protobuf::uint64 value);

  // optional int32 mergeNum = 2;
  inline bool has_mergenum() const;
  inline void clear_mergenum();
  static const int kMergeNumFieldNumber = 2;
  inline ::google::protobuf::int32 mergenum() const;
  inline void set_mergenum(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.EnterDupReq)
 private:
  inline void set_has_dupid();
  inline void clear_has_dupid();
  inline void set_has_mergenum();
  inline void clear_has_mergenum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 dupid_;
  ::google::protobuf::int32 mergenum_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Dup_2eproto();
  friend void protobuf_AssignDesc_Dup_2eproto();
  friend void protobuf_ShutdownFile_Dup_2eproto();

  void InitAsDefaultInstance();
  static EnterDupReq* default_instance_;
};
// -------------------------------------------------------------------

class EnterDupRsp : public ::google::protobuf::Message {
 public:
  EnterDupRsp();
  virtual ~EnterDupRsp();

  EnterDupRsp(const EnterDupRsp& from);

  inline EnterDupRsp& operator=(const EnterDupRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EnterDupRsp& default_instance();

  void Swap(EnterDupRsp* other);

  // implements Message ----------------------------------------------

  EnterDupRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const EnterDupRsp& from);
  void MergeFrom(const EnterDupRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 ret = 1;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 1;
  inline ::google::protobuf::int32 ret() const;
  inline void set_ret(::google::protobuf::int32 value);

  // optional uint64 dupId = 2;
  inline bool has_dupid() const;
  inline void clear_dupid();
  static const int kDupIdFieldNumber = 2;
  inline ::google::protobuf::uint64 dupid() const;
  inline void set_dupid(::google::protobuf::uint64 value);

  // optional int32 dupTime = 3;
  inline bool has_duptime() const;
  inline void clear_duptime();
  static const int kDupTimeFieldNumber = 3;
  inline ::google::protobuf::int32 duptime() const;
  inline void set_duptime(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.EnterDupRsp)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();
  inline void set_has_dupid();
  inline void clear_has_dupid();
  inline void set_has_duptime();
  inline void clear_has_duptime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 dupid_;
  ::google::protobuf::int32 ret_;
  ::google::protobuf::int32 duptime_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_Dup_2eproto();
  friend void protobuf_AssignDesc_Dup_2eproto();
  friend void protobuf_ShutdownFile_Dup_2eproto();

  void InitAsDefaultInstance();
  static EnterDupRsp* default_instance_;
};
// -------------------------------------------------------------------

class DupResultReq : public ::google::protobuf::Message {
 public:
  DupResultReq();
  virtual ~DupResultReq();

  DupResultReq(const DupResultReq& from);

  inline DupResultReq& operator=(const DupResultReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DupResultReq& default_instance();

  void Swap(DupResultReq* other);

  // implements Message ----------------------------------------------

  DupResultReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DupResultReq& from);
  void MergeFrom(const DupResultReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto_ff.DupResultReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_Dup_2eproto();
  friend void protobuf_AssignDesc_Dup_2eproto();
  friend void protobuf_ShutdownFile_Dup_2eproto();

  void InitAsDefaultInstance();
  static DupResultReq* default_instance_;
};
// -------------------------------------------------------------------

class DupResultRsp : public ::google::protobuf::Message {
 public:
  DupResultRsp();
  virtual ~DupResultRsp();

  DupResultRsp(const DupResultRsp& from);

  inline DupResultRsp& operator=(const DupResultRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DupResultRsp& default_instance();

  void Swap(DupResultRsp* other);

  // implements Message ----------------------------------------------

  DupResultRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DupResultRsp& from);
  void MergeFrom(const DupResultRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // optional uint64 dupId = 2;
  inline bool has_dupid() const;
  inline void clear_dupid();
  static const int kDupIdFieldNumber = 2;
  inline ::google::protobuf::uint64 dupid() const;
  inline void set_dupid(::google::protobuf::uint64 value);

  // optional int32 star = 3;
  inline bool has_star() const;
  inline void clear_star();
  static const int kStarFieldNumber = 3;
  inline ::google::protobuf::int32 star() const;
  inline void set_star(::google::protobuf::int32 value);

  // optional int32 cost_sec = 4;
  inline bool has_cost_sec() const;
  inline void clear_cost_sec();
  static const int kCostSecFieldNumber = 4;
  inline ::google::protobuf::int32 cost_sec() const;
  inline void set_cost_sec(::google::protobuf::int32 value);

  // optional .proto_ff.DupDropProto info = 5;
  inline bool has_info() const;
  inline void clear_info();
  static const int kInfoFieldNumber = 5;
  inline const ::proto_ff::DupDropProto& info() const;
  inline ::proto_ff::DupDropProto* mutable_info();
  inline ::proto_ff::DupDropProto* release_info();
  inline void set_allocated_info(::proto_ff::DupDropProto* info);

  // @@protoc_insertion_point(class_scope:proto_ff.DupResultRsp)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_dupid();
  inline void clear_has_dupid();
  inline void set_has_star();
  inline void clear_has_star();
  inline void set_has_cost_sec();
  inline void clear_has_cost_sec();
  inline void set_has_info();
  inline void clear_has_info();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 dupid_;
  ::google::protobuf::int32 result_;
  ::google::protobuf::int32 star_;
  ::proto_ff::DupDropProto* info_;
  ::google::protobuf::int32 cost_sec_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_Dup_2eproto();
  friend void protobuf_AssignDesc_Dup_2eproto();
  friend void protobuf_ShutdownFile_Dup_2eproto();

  void InitAsDefaultInstance();
  static DupResultRsp* default_instance_;
};
// -------------------------------------------------------------------

class DupLeaveReq : public ::google::protobuf::Message {
 public:
  DupLeaveReq();
  virtual ~DupLeaveReq();

  DupLeaveReq(const DupLeaveReq& from);

  inline DupLeaveReq& operator=(const DupLeaveReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DupLeaveReq& default_instance();

  void Swap(DupLeaveReq* other);

  // implements Message ----------------------------------------------

  DupLeaveReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DupLeaveReq& from);
  void MergeFrom(const DupLeaveReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto_ff.DupLeaveReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_Dup_2eproto();
  friend void protobuf_AssignDesc_Dup_2eproto();
  friend void protobuf_ShutdownFile_Dup_2eproto();

  void InitAsDefaultInstance();
  static DupLeaveReq* default_instance_;
};
// -------------------------------------------------------------------

class DupLeaveRsp : public ::google::protobuf::Message {
 public:
  DupLeaveRsp();
  virtual ~DupLeaveRsp();

  DupLeaveRsp(const DupLeaveRsp& from);

  inline DupLeaveRsp& operator=(const DupLeaveRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DupLeaveRsp& default_instance();

  void Swap(DupLeaveRsp* other);

  // implements Message ----------------------------------------------

  DupLeaveRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DupLeaveRsp& from);
  void MergeFrom(const DupLeaveRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // optional int64 dupId = 2;
  inline bool has_dupid() const;
  inline void clear_dupid();
  static const int kDupIdFieldNumber = 2;
  inline ::google::protobuf::int64 dupid() const;
  inline void set_dupid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.DupLeaveRsp)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_dupid();
  inline void clear_has_dupid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 dupid_;
  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Dup_2eproto();
  friend void protobuf_AssignDesc_Dup_2eproto();
  friend void protobuf_ShutdownFile_Dup_2eproto();

  void InitAsDefaultInstance();
  static DupLeaveRsp* default_instance_;
};
// -------------------------------------------------------------------

class NotifyDupRsp : public ::google::protobuf::Message {
 public:
  NotifyDupRsp();
  virtual ~NotifyDupRsp();

  NotifyDupRsp(const NotifyDupRsp& from);

  inline NotifyDupRsp& operator=(const NotifyDupRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NotifyDupRsp& default_instance();

  void Swap(NotifyDupRsp* other);

  // implements Message ----------------------------------------------

  NotifyDupRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NotifyDupRsp& from);
  void MergeFrom(const NotifyDupRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // repeated .proto_ff.ComDupGroupData infos = 2;
  inline int infos_size() const;
  inline void clear_infos();
  static const int kInfosFieldNumber = 2;
  inline const ::proto_ff::ComDupGroupData& infos(int index) const;
  inline ::proto_ff::ComDupGroupData* mutable_infos(int index);
  inline ::proto_ff::ComDupGroupData* add_infos();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::ComDupGroupData >&
      infos() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::ComDupGroupData >*
      mutable_infos();

  // @@protoc_insertion_point(class_scope:proto_ff.NotifyDupRsp)
 private:
  inline void set_has_type();
  inline void clear_has_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::ComDupGroupData > infos_;
  ::google::protobuf::int32 type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Dup_2eproto();
  friend void protobuf_AssignDesc_Dup_2eproto();
  friend void protobuf_ShutdownFile_Dup_2eproto();

  void InitAsDefaultInstance();
  static NotifyDupRsp* default_instance_;
};
// -------------------------------------------------------------------

class NotifyDupRunRsp : public ::google::protobuf::Message {
 public:
  NotifyDupRunRsp();
  virtual ~NotifyDupRunRsp();

  NotifyDupRunRsp(const NotifyDupRunRsp& from);

  inline NotifyDupRunRsp& operator=(const NotifyDupRunRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NotifyDupRunRsp& default_instance();

  void Swap(NotifyDupRunRsp* other);

  // implements Message ----------------------------------------------

  NotifyDupRunRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NotifyDupRunRsp& from);
  void MergeFrom(const NotifyDupRunRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 dupId = 1;
  inline bool has_dupid() const;
  inline void clear_dupid();
  static const int kDupIdFieldNumber = 1;
  inline ::google::protobuf::uint64 dupid() const;
  inline void set_dupid(::google::protobuf::uint64 value);

  // optional int32 kill_num = 2;
  inline bool has_kill_num() const;
  inline void clear_kill_num();
  static const int kKillNumFieldNumber = 2;
  inline ::google::protobuf::int32 kill_num() const;
  inline void set_kill_num(::google::protobuf::int32 value);

  // optional int32 all_num = 3;
  inline bool has_all_num() const;
  inline void clear_all_num();
  static const int kAllNumFieldNumber = 3;
  inline ::google::protobuf::int32 all_num() const;
  inline void set_all_num(::google::protobuf::int32 value);

  // optional int32 cur_wave = 4;
  inline bool has_cur_wave() const;
  inline void clear_cur_wave();
  static const int kCurWaveFieldNumber = 4;
  inline ::google::protobuf::int32 cur_wave() const;
  inline void set_cur_wave(::google::protobuf::int32 value);

  // optional int32 max_wave = 5;
  inline bool has_max_wave() const;
  inline void clear_max_wave();
  static const int kMaxWaveFieldNumber = 5;
  inline ::google::protobuf::int32 max_wave() const;
  inline void set_max_wave(::google::protobuf::int32 value);

  // optional int64 cur_hp = 6;
  inline bool has_cur_hp() const;
  inline void clear_cur_hp();
  static const int kCurHpFieldNumber = 6;
  inline ::google::protobuf::int64 cur_hp() const;
  inline void set_cur_hp(::google::protobuf::int64 value);

  // optional int64 max_hp = 7;
  inline bool has_max_hp() const;
  inline void clear_max_hp();
  static const int kMaxHpFieldNumber = 7;
  inline ::google::protobuf::int64 max_hp() const;
  inline void set_max_hp(::google::protobuf::int64 value);

  // repeated .proto_ff.ComPair64 items = 8;
  inline int items_size() const;
  inline void clear_items();
  static const int kItemsFieldNumber = 8;
  inline const ::proto_ff::ComPair64& items(int index) const;
  inline ::proto_ff::ComPair64* mutable_items(int index);
  inline ::proto_ff::ComPair64* add_items();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair64 >&
      items() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair64 >*
      mutable_items();

  // optional int32 kill_boss_num = 9;
  inline bool has_kill_boss_num() const;
  inline void clear_kill_boss_num();
  static const int kKillBossNumFieldNumber = 9;
  inline ::google::protobuf::int32 kill_boss_num() const;
  inline void set_kill_boss_num(::google::protobuf::int32 value);

  // optional int32 boss_num = 10;
  inline bool has_boss_num() const;
  inline void clear_boss_num();
  static const int kBossNumFieldNumber = 10;
  inline ::google::protobuf::int32 boss_num() const;
  inline void set_boss_num(::google::protobuf::int32 value);

  // optional int64 add_exp = 11;
  inline bool has_add_exp() const;
  inline void clear_add_exp();
  static const int kAddExpFieldNumber = 11;
  inline ::google::protobuf::int64 add_exp() const;
  inline void set_add_exp(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.NotifyDupRunRsp)
 private:
  inline void set_has_dupid();
  inline void clear_has_dupid();
  inline void set_has_kill_num();
  inline void clear_has_kill_num();
  inline void set_has_all_num();
  inline void clear_has_all_num();
  inline void set_has_cur_wave();
  inline void clear_has_cur_wave();
  inline void set_has_max_wave();
  inline void clear_has_max_wave();
  inline void set_has_cur_hp();
  inline void clear_has_cur_hp();
  inline void set_has_max_hp();
  inline void clear_has_max_hp();
  inline void set_has_kill_boss_num();
  inline void clear_has_kill_boss_num();
  inline void set_has_boss_num();
  inline void clear_has_boss_num();
  inline void set_has_add_exp();
  inline void clear_has_add_exp();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 dupid_;
  ::google::protobuf::int32 kill_num_;
  ::google::protobuf::int32 all_num_;
  ::google::protobuf::int32 cur_wave_;
  ::google::protobuf::int32 max_wave_;
  ::google::protobuf::int64 cur_hp_;
  ::google::protobuf::int64 max_hp_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair64 > items_;
  ::google::protobuf::int32 kill_boss_num_;
  ::google::protobuf::int32 boss_num_;
  ::google::protobuf::int64 add_exp_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(11 + 31) / 32];

  friend void  protobuf_AddDesc_Dup_2eproto();
  friend void protobuf_AssignDesc_Dup_2eproto();
  friend void protobuf_ShutdownFile_Dup_2eproto();

  void InitAsDefaultInstance();
  static NotifyDupRunRsp* default_instance_;
};
// -------------------------------------------------------------------

class NotifyDupEndRsp : public ::google::protobuf::Message {
 public:
  NotifyDupEndRsp();
  virtual ~NotifyDupEndRsp();

  NotifyDupEndRsp(const NotifyDupEndRsp& from);

  inline NotifyDupEndRsp& operator=(const NotifyDupEndRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NotifyDupEndRsp& default_instance();

  void Swap(NotifyDupEndRsp* other);

  // implements Message ----------------------------------------------

  NotifyDupEndRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NotifyDupEndRsp& from);
  void MergeFrom(const NotifyDupEndRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 dupId = 1;
  inline bool has_dupid() const;
  inline void clear_dupid();
  static const int kDupIdFieldNumber = 1;
  inline ::google::protobuf::uint64 dupid() const;
  inline void set_dupid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.NotifyDupEndRsp)
 private:
  inline void set_has_dupid();
  inline void clear_has_dupid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 dupid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Dup_2eproto();
  friend void protobuf_AssignDesc_Dup_2eproto();
  friend void protobuf_ShutdownFile_Dup_2eproto();

  void InitAsDefaultInstance();
  static NotifyDupEndRsp* default_instance_;
};
// -------------------------------------------------------------------

class NotifyDupBeginCdRsp : public ::google::protobuf::Message {
 public:
  NotifyDupBeginCdRsp();
  virtual ~NotifyDupBeginCdRsp();

  NotifyDupBeginCdRsp(const NotifyDupBeginCdRsp& from);

  inline NotifyDupBeginCdRsp& operator=(const NotifyDupBeginCdRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NotifyDupBeginCdRsp& default_instance();

  void Swap(NotifyDupBeginCdRsp* other);

  // implements Message ----------------------------------------------

  NotifyDupBeginCdRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NotifyDupBeginCdRsp& from);
  void MergeFrom(const NotifyDupBeginCdRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 sceneId = 1;
  inline bool has_sceneid() const;
  inline void clear_sceneid();
  static const int kSceneIdFieldNumber = 1;
  inline ::google::protobuf::uint64 sceneid() const;
  inline void set_sceneid(::google::protobuf::uint64 value);

  // optional uint64 dupId = 2;
  inline bool has_dupid() const;
  inline void clear_dupid();
  static const int kDupIdFieldNumber = 2;
  inline ::google::protobuf::uint64 dupid() const;
  inline void set_dupid(::google::protobuf::uint64 value);

  // optional uint64 timeEnd = 3;
  inline bool has_timeend() const;
  inline void clear_timeend();
  static const int kTimeEndFieldNumber = 3;
  inline ::google::protobuf::uint64 timeend() const;
  inline void set_timeend(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.NotifyDupBeginCdRsp)
 private:
  inline void set_has_sceneid();
  inline void clear_has_sceneid();
  inline void set_has_dupid();
  inline void clear_has_dupid();
  inline void set_has_timeend();
  inline void clear_has_timeend();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 sceneid_;
  ::google::protobuf::uint64 dupid_;
  ::google::protobuf::uint64 timeend_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_Dup_2eproto();
  friend void protobuf_AssignDesc_Dup_2eproto();
  friend void protobuf_ShutdownFile_Dup_2eproto();

  void InitAsDefaultInstance();
  static NotifyDupBeginCdRsp* default_instance_;
};
// -------------------------------------------------------------------

class RecvTowerDupReq : public ::google::protobuf::Message {
 public:
  RecvTowerDupReq();
  virtual ~RecvTowerDupReq();

  RecvTowerDupReq(const RecvTowerDupReq& from);

  inline RecvTowerDupReq& operator=(const RecvTowerDupReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RecvTowerDupReq& default_instance();

  void Swap(RecvTowerDupReq* other);

  // implements Message ----------------------------------------------

  RecvTowerDupReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RecvTowerDupReq& from);
  void MergeFrom(const RecvTowerDupReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint64 id() const;
  inline void set_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.RecvTowerDupReq)
 private:
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Dup_2eproto();
  friend void protobuf_AssignDesc_Dup_2eproto();
  friend void protobuf_ShutdownFile_Dup_2eproto();

  void InitAsDefaultInstance();
  static RecvTowerDupReq* default_instance_;
};
// -------------------------------------------------------------------

class RecvTowerDupRsp : public ::google::protobuf::Message {
 public:
  RecvTowerDupRsp();
  virtual ~RecvTowerDupRsp();

  RecvTowerDupRsp(const RecvTowerDupRsp& from);

  inline RecvTowerDupRsp& operator=(const RecvTowerDupRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RecvTowerDupRsp& default_instance();

  void Swap(RecvTowerDupRsp* other);

  // implements Message ----------------------------------------------

  RecvTowerDupRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RecvTowerDupRsp& from);
  void MergeFrom(const RecvTowerDupRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // optional uint64 id = 2;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 2;
  inline ::google::protobuf::uint64 id() const;
  inline void set_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.RecvTowerDupRsp)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 id_;
  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Dup_2eproto();
  friend void protobuf_AssignDesc_Dup_2eproto();
  friend void protobuf_ShutdownFile_Dup_2eproto();

  void InitAsDefaultInstance();
  static RecvTowerDupRsp* default_instance_;
};
// -------------------------------------------------------------------

class BuyDupNumReq : public ::google::protobuf::Message {
 public:
  BuyDupNumReq();
  virtual ~BuyDupNumReq();

  BuyDupNumReq(const BuyDupNumReq& from);

  inline BuyDupNumReq& operator=(const BuyDupNumReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BuyDupNumReq& default_instance();

  void Swap(BuyDupNumReq* other);

  // implements Message ----------------------------------------------

  BuyDupNumReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BuyDupNumReq& from);
  void MergeFrom(const BuyDupNumReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 group = 1;
  inline bool has_group() const;
  inline void clear_group();
  static const int kGroupFieldNumber = 1;
  inline ::google::protobuf::int32 group() const;
  inline void set_group(::google::protobuf::int32 value);

  // optional int32 num = 2;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 2;
  inline ::google::protobuf::int32 num() const;
  inline void set_num(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.BuyDupNumReq)
 private:
  inline void set_has_group();
  inline void clear_has_group();
  inline void set_has_num();
  inline void clear_has_num();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 group_;
  ::google::protobuf::int32 num_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Dup_2eproto();
  friend void protobuf_AssignDesc_Dup_2eproto();
  friend void protobuf_ShutdownFile_Dup_2eproto();

  void InitAsDefaultInstance();
  static BuyDupNumReq* default_instance_;
};
// -------------------------------------------------------------------

class BuyDupNumRsp : public ::google::protobuf::Message {
 public:
  BuyDupNumRsp();
  virtual ~BuyDupNumRsp();

  BuyDupNumRsp(const BuyDupNumRsp& from);

  inline BuyDupNumRsp& operator=(const BuyDupNumRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BuyDupNumRsp& default_instance();

  void Swap(BuyDupNumRsp* other);

  // implements Message ----------------------------------------------

  BuyDupNumRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BuyDupNumRsp& from);
  void MergeFrom(const BuyDupNumRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // optional int32 group = 2;
  inline bool has_group() const;
  inline void clear_group();
  static const int kGroupFieldNumber = 2;
  inline ::google::protobuf::int32 group() const;
  inline void set_group(::google::protobuf::int32 value);

  // optional int32 num = 3;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 3;
  inline ::google::protobuf::int32 num() const;
  inline void set_num(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.BuyDupNumRsp)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_group();
  inline void clear_has_group();
  inline void set_has_num();
  inline void clear_has_num();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 result_;
  ::google::protobuf::int32 group_;
  ::google::protobuf::int32 num_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_Dup_2eproto();
  friend void protobuf_AssignDesc_Dup_2eproto();
  friend void protobuf_ShutdownFile_Dup_2eproto();

  void InitAsDefaultInstance();
  static BuyDupNumRsp* default_instance_;
};
// -------------------------------------------------------------------

class DupTowerRecordReq : public ::google::protobuf::Message {
 public:
  DupTowerRecordReq();
  virtual ~DupTowerRecordReq();

  DupTowerRecordReq(const DupTowerRecordReq& from);

  inline DupTowerRecordReq& operator=(const DupTowerRecordReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DupTowerRecordReq& default_instance();

  void Swap(DupTowerRecordReq* other);

  // implements Message ----------------------------------------------

  DupTowerRecordReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DupTowerRecordReq& from);
  void MergeFrom(const DupTowerRecordReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint64 id() const;
  inline void set_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.DupTowerRecordReq)
 private:
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Dup_2eproto();
  friend void protobuf_AssignDesc_Dup_2eproto();
  friend void protobuf_ShutdownFile_Dup_2eproto();

  void InitAsDefaultInstance();
  static DupTowerRecordReq* default_instance_;
};
// -------------------------------------------------------------------

class DupTowerRecordRsp : public ::google::protobuf::Message {
 public:
  DupTowerRecordRsp();
  virtual ~DupTowerRecordRsp();

  DupTowerRecordRsp(const DupTowerRecordRsp& from);

  inline DupTowerRecordRsp& operator=(const DupTowerRecordRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DupTowerRecordRsp& default_instance();

  void Swap(DupTowerRecordRsp* other);

  // implements Message ----------------------------------------------

  DupTowerRecordRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DupTowerRecordRsp& from);
  void MergeFrom(const DupTowerRecordRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint64 id() const;
  inline void set_id(::google::protobuf::uint64 value);

  // repeated .proto_ff.DupTowerRecordEntry entrys = 2;
  inline int entrys_size() const;
  inline void clear_entrys();
  static const int kEntrysFieldNumber = 2;
  inline const ::proto_ff::DupTowerRecordEntry& entrys(int index) const;
  inline ::proto_ff::DupTowerRecordEntry* mutable_entrys(int index);
  inline ::proto_ff::DupTowerRecordEntry* add_entrys();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::DupTowerRecordEntry >&
      entrys() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::DupTowerRecordEntry >*
      mutable_entrys();

  // @@protoc_insertion_point(class_scope:proto_ff.DupTowerRecordRsp)
 private:
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 id_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::DupTowerRecordEntry > entrys_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Dup_2eproto();
  friend void protobuf_AssignDesc_Dup_2eproto();
  friend void protobuf_ShutdownFile_Dup_2eproto();

  void InitAsDefaultInstance();
  static DupTowerRecordRsp* default_instance_;
};
// -------------------------------------------------------------------

class DupTeamInviteReq : public ::google::protobuf::Message {
 public:
  DupTeamInviteReq();
  virtual ~DupTeamInviteReq();

  DupTeamInviteReq(const DupTeamInviteReq& from);

  inline DupTeamInviteReq& operator=(const DupTeamInviteReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DupTeamInviteReq& default_instance();

  void Swap(DupTeamInviteReq* other);

  // implements Message ----------------------------------------------

  DupTeamInviteReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DupTeamInviteReq& from);
  void MergeFrom(const DupTeamInviteReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 dupid = 1;
  inline bool has_dupid() const;
  inline void clear_dupid();
  static const int kDupidFieldNumber = 1;
  inline ::google::protobuf::uint64 dupid() const;
  inline void set_dupid(::google::protobuf::uint64 value);

  // optional uint32 mergeNum = 2;
  inline bool has_mergenum() const;
  inline void clear_mergenum();
  static const int kMergeNumFieldNumber = 2;
  inline ::google::protobuf::uint32 mergenum() const;
  inline void set_mergenum(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.DupTeamInviteReq)
 private:
  inline void set_has_dupid();
  inline void clear_has_dupid();
  inline void set_has_mergenum();
  inline void clear_has_mergenum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 dupid_;
  ::google::protobuf::uint32 mergenum_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Dup_2eproto();
  friend void protobuf_AssignDesc_Dup_2eproto();
  friend void protobuf_ShutdownFile_Dup_2eproto();

  void InitAsDefaultInstance();
  static DupTeamInviteReq* default_instance_;
};
// -------------------------------------------------------------------

class DupTeamInviteRsp : public ::google::protobuf::Message {
 public:
  DupTeamInviteRsp();
  virtual ~DupTeamInviteRsp();

  DupTeamInviteRsp(const DupTeamInviteRsp& from);

  inline DupTeamInviteRsp& operator=(const DupTeamInviteRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DupTeamInviteRsp& default_instance();

  void Swap(DupTeamInviteRsp* other);

  // implements Message ----------------------------------------------

  DupTeamInviteRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DupTeamInviteRsp& from);
  void MergeFrom(const DupTeamInviteRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 ret = 1;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 1;
  inline ::google::protobuf::int32 ret() const;
  inline void set_ret(::google::protobuf::int32 value);

  // required uint64 dupid = 2;
  inline bool has_dupid() const;
  inline void clear_dupid();
  static const int kDupidFieldNumber = 2;
  inline ::google::protobuf::uint64 dupid() const;
  inline void set_dupid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.DupTeamInviteRsp)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();
  inline void set_has_dupid();
  inline void clear_has_dupid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 dupid_;
  ::google::protobuf::int32 ret_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Dup_2eproto();
  friend void protobuf_AssignDesc_Dup_2eproto();
  friend void protobuf_ShutdownFile_Dup_2eproto();

  void InitAsDefaultInstance();
  static DupTeamInviteRsp* default_instance_;
};
// -------------------------------------------------------------------

class NotifyDupTeamInviteStateRsp : public ::google::protobuf::Message {
 public:
  NotifyDupTeamInviteStateRsp();
  virtual ~NotifyDupTeamInviteStateRsp();

  NotifyDupTeamInviteStateRsp(const NotifyDupTeamInviteStateRsp& from);

  inline NotifyDupTeamInviteStateRsp& operator=(const NotifyDupTeamInviteStateRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NotifyDupTeamInviteStateRsp& default_instance();

  void Swap(NotifyDupTeamInviteStateRsp* other);

  // implements Message ----------------------------------------------

  NotifyDupTeamInviteStateRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NotifyDupTeamInviteStateRsp& from);
  void MergeFrom(const NotifyDupTeamInviteStateRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 ret = 1;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 1;
  inline ::google::protobuf::int32 ret() const;
  inline void set_ret(::google::protobuf::int32 value);

  // optional int32 type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // optional int64 dupid = 3;
  inline bool has_dupid() const;
  inline void clear_dupid();
  static const int kDupidFieldNumber = 3;
  inline ::google::protobuf::int64 dupid() const;
  inline void set_dupid(::google::protobuf::int64 value);

  // repeated .proto_ff.DupTeamInviteState infos = 4;
  inline int infos_size() const;
  inline void clear_infos();
  static const int kInfosFieldNumber = 4;
  inline const ::proto_ff::DupTeamInviteState& infos(int index) const;
  inline ::proto_ff::DupTeamInviteState* mutable_infos(int index);
  inline ::proto_ff::DupTeamInviteState* add_infos();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::DupTeamInviteState >&
      infos() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::DupTeamInviteState >*
      mutable_infos();

  // @@protoc_insertion_point(class_scope:proto_ff.NotifyDupTeamInviteStateRsp)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_dupid();
  inline void clear_has_dupid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 ret_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int64 dupid_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::DupTeamInviteState > infos_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_Dup_2eproto();
  friend void protobuf_AssignDesc_Dup_2eproto();
  friend void protobuf_ShutdownFile_Dup_2eproto();

  void InitAsDefaultInstance();
  static NotifyDupTeamInviteStateRsp* default_instance_;
};
// -------------------------------------------------------------------

class DupTeamOptReq : public ::google::protobuf::Message {
 public:
  DupTeamOptReq();
  virtual ~DupTeamOptReq();

  DupTeamOptReq(const DupTeamOptReq& from);

  inline DupTeamOptReq& operator=(const DupTeamOptReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DupTeamOptReq& default_instance();

  void Swap(DupTeamOptReq* other);

  // implements Message ----------------------------------------------

  DupTeamOptReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DupTeamOptReq& from);
  void MergeFrom(const DupTeamOptReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 opt = 1;
  inline bool has_opt() const;
  inline void clear_opt();
  static const int kOptFieldNumber = 1;
  inline ::google::protobuf::int32 opt() const;
  inline void set_opt(::google::protobuf::int32 value);

  // optional uint32 mergeNum = 2;
  inline bool has_mergenum() const;
  inline void clear_mergenum();
  static const int kMergeNumFieldNumber = 2;
  inline ::google::protobuf::uint32 mergenum() const;
  inline void set_mergenum(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.DupTeamOptReq)
 private:
  inline void set_has_opt();
  inline void clear_has_opt();
  inline void set_has_mergenum();
  inline void clear_has_mergenum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 opt_;
  ::google::protobuf::uint32 mergenum_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Dup_2eproto();
  friend void protobuf_AssignDesc_Dup_2eproto();
  friend void protobuf_ShutdownFile_Dup_2eproto();

  void InitAsDefaultInstance();
  static DupTeamOptReq* default_instance_;
};
// -------------------------------------------------------------------

class DupTeamOptRsp : public ::google::protobuf::Message {
 public:
  DupTeamOptRsp();
  virtual ~DupTeamOptRsp();

  DupTeamOptRsp(const DupTeamOptRsp& from);

  inline DupTeamOptRsp& operator=(const DupTeamOptRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DupTeamOptRsp& default_instance();

  void Swap(DupTeamOptRsp* other);

  // implements Message ----------------------------------------------

  DupTeamOptRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DupTeamOptRsp& from);
  void MergeFrom(const DupTeamOptRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 ret = 1;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 1;
  inline ::google::protobuf::int32 ret() const;
  inline void set_ret(::google::protobuf::int32 value);

  // optional int32 opt = 2;
  inline bool has_opt() const;
  inline void clear_opt();
  static const int kOptFieldNumber = 2;
  inline ::google::protobuf::int32 opt() const;
  inline void set_opt(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.DupTeamOptRsp)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();
  inline void set_has_opt();
  inline void clear_has_opt();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 ret_;
  ::google::protobuf::int32 opt_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Dup_2eproto();
  friend void protobuf_AssignDesc_Dup_2eproto();
  friend void protobuf_ShutdownFile_Dup_2eproto();

  void InitAsDefaultInstance();
  static DupTeamOptRsp* default_instance_;
};
// -------------------------------------------------------------------

class DupSweepReq : public ::google::protobuf::Message {
 public:
  DupSweepReq();
  virtual ~DupSweepReq();

  DupSweepReq(const DupSweepReq& from);

  inline DupSweepReq& operator=(const DupSweepReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DupSweepReq& default_instance();

  void Swap(DupSweepReq* other);

  // implements Message ----------------------------------------------

  DupSweepReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DupSweepReq& from);
  void MergeFrom(const DupSweepReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 dupid = 1;
  inline bool has_dupid() const;
  inline void clear_dupid();
  static const int kDupidFieldNumber = 1;
  inline ::google::protobuf::int32 dupid() const;
  inline void set_dupid(::google::protobuf::int32 value);

  // optional int32 num = 2;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 2;
  inline ::google::protobuf::int32 num() const;
  inline void set_num(::google::protobuf::int32 value);

  // optional int32 show_type = 3;
  inline bool has_show_type() const;
  inline void clear_show_type();
  static const int kShowTypeFieldNumber = 3;
  inline ::google::protobuf::int32 show_type() const;
  inline void set_show_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.DupSweepReq)
 private:
  inline void set_has_dupid();
  inline void clear_has_dupid();
  inline void set_has_num();
  inline void clear_has_num();
  inline void set_has_show_type();
  inline void clear_has_show_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 dupid_;
  ::google::protobuf::int32 num_;
  ::google::protobuf::int32 show_type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_Dup_2eproto();
  friend void protobuf_AssignDesc_Dup_2eproto();
  friend void protobuf_ShutdownFile_Dup_2eproto();

  void InitAsDefaultInstance();
  static DupSweepReq* default_instance_;
};
// -------------------------------------------------------------------

class DupSweepRsp : public ::google::protobuf::Message {
 public:
  DupSweepRsp();
  virtual ~DupSweepRsp();

  DupSweepRsp(const DupSweepRsp& from);

  inline DupSweepRsp& operator=(const DupSweepRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DupSweepRsp& default_instance();

  void Swap(DupSweepRsp* other);

  // implements Message ----------------------------------------------

  DupSweepRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DupSweepRsp& from);
  void MergeFrom(const DupSweepRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 ret = 1;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 1;
  inline ::google::protobuf::int32 ret() const;
  inline void set_ret(::google::protobuf::int32 value);

  // optional int32 dupid = 2;
  inline bool has_dupid() const;
  inline void clear_dupid();
  static const int kDupidFieldNumber = 2;
  inline ::google::protobuf::int32 dupid() const;
  inline void set_dupid(::google::protobuf::int32 value);

  // optional int32 num = 3;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 3;
  inline ::google::protobuf::int32 num() const;
  inline void set_num(::google::protobuf::int32 value);

  // optional .proto_ff.DupDropProto info = 4;
  inline bool has_info() const;
  inline void clear_info();
  static const int kInfoFieldNumber = 4;
  inline const ::proto_ff::DupDropProto& info() const;
  inline ::proto_ff::DupDropProto* mutable_info();
  inline ::proto_ff::DupDropProto* release_info();
  inline void set_allocated_info(::proto_ff::DupDropProto* info);

  // optional int32 show_type = 5;
  inline bool has_show_type() const;
  inline void clear_show_type();
  static const int kShowTypeFieldNumber = 5;
  inline ::google::protobuf::int32 show_type() const;
  inline void set_show_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.DupSweepRsp)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();
  inline void set_has_dupid();
  inline void clear_has_dupid();
  inline void set_has_num();
  inline void clear_has_num();
  inline void set_has_info();
  inline void clear_has_info();
  inline void set_has_show_type();
  inline void clear_has_show_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 ret_;
  ::google::protobuf::int32 dupid_;
  ::proto_ff::DupDropProto* info_;
  ::google::protobuf::int32 num_;
  ::google::protobuf::int32 show_type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_Dup_2eproto();
  friend void protobuf_AssignDesc_Dup_2eproto();
  friend void protobuf_ShutdownFile_Dup_2eproto();

  void InitAsDefaultInstance();
  static DupSweepRsp* default_instance_;
};
// -------------------------------------------------------------------

class GhostDupRankReq : public ::google::protobuf::Message {
 public:
  GhostDupRankReq();
  virtual ~GhostDupRankReq();

  GhostDupRankReq(const GhostDupRankReq& from);

  inline GhostDupRankReq& operator=(const GhostDupRankReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GhostDupRankReq& default_instance();

  void Swap(GhostDupRankReq* other);

  // implements Message ----------------------------------------------

  GhostDupRankReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GhostDupRankReq& from);
  void MergeFrom(const GhostDupRankReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto_ff.GhostDupRankReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_Dup_2eproto();
  friend void protobuf_AssignDesc_Dup_2eproto();
  friend void protobuf_ShutdownFile_Dup_2eproto();

  void InitAsDefaultInstance();
  static GhostDupRankReq* default_instance_;
};
// -------------------------------------------------------------------

class GHostDupRankRsp : public ::google::protobuf::Message {
 public:
  GHostDupRankRsp();
  virtual ~GHostDupRankRsp();

  GHostDupRankRsp(const GHostDupRankRsp& from);

  inline GHostDupRankRsp& operator=(const GHostDupRankRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GHostDupRankRsp& default_instance();

  void Swap(GHostDupRankRsp* other);

  // implements Message ----------------------------------------------

  GHostDupRankRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GHostDupRankRsp& from);
  void MergeFrom(const GHostDupRankRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.GHostDupRankInfo ranks = 1;
  inline int ranks_size() const;
  inline void clear_ranks();
  static const int kRanksFieldNumber = 1;
  inline const ::proto_ff::GHostDupRankInfo& ranks(int index) const;
  inline ::proto_ff::GHostDupRankInfo* mutable_ranks(int index);
  inline ::proto_ff::GHostDupRankInfo* add_ranks();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::GHostDupRankInfo >&
      ranks() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::GHostDupRankInfo >*
      mutable_ranks();

  // optional int32 my_wave = 2;
  inline bool has_my_wave() const;
  inline void clear_my_wave();
  static const int kMyWaveFieldNumber = 2;
  inline ::google::protobuf::int32 my_wave() const;
  inline void set_my_wave(::google::protobuf::int32 value);

  // optional int32 my_time = 3;
  inline bool has_my_time() const;
  inline void clear_my_time();
  static const int kMyTimeFieldNumber = 3;
  inline ::google::protobuf::int32 my_time() const;
  inline void set_my_time(::google::protobuf::int32 value);

  // optional int32 my_rank = 4;
  inline bool has_my_rank() const;
  inline void clear_my_rank();
  static const int kMyRankFieldNumber = 4;
  inline ::google::protobuf::int32 my_rank() const;
  inline void set_my_rank(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.GHostDupRankRsp)
 private:
  inline void set_has_my_wave();
  inline void clear_has_my_wave();
  inline void set_has_my_time();
  inline void clear_has_my_time();
  inline void set_has_my_rank();
  inline void clear_has_my_rank();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::GHostDupRankInfo > ranks_;
  ::google::protobuf::int32 my_wave_;
  ::google::protobuf::int32 my_time_;
  ::google::protobuf::int32 my_rank_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_Dup_2eproto();
  friend void protobuf_AssignDesc_Dup_2eproto();
  friend void protobuf_ShutdownFile_Dup_2eproto();

  void InitAsDefaultInstance();
  static GHostDupRankRsp* default_instance_;
};
// -------------------------------------------------------------------

class NotifyGHostDupRun : public ::google::protobuf::Message {
 public:
  NotifyGHostDupRun();
  virtual ~NotifyGHostDupRun();

  NotifyGHostDupRun(const NotifyGHostDupRun& from);

  inline NotifyGHostDupRun& operator=(const NotifyGHostDupRun& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NotifyGHostDupRun& default_instance();

  void Swap(NotifyGHostDupRun* other);

  // implements Message ----------------------------------------------

  NotifyGHostDupRun* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NotifyGHostDupRun& from);
  void MergeFrom(const NotifyGHostDupRun& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 fight = 1;
  inline bool has_fight() const;
  inline void clear_fight();
  static const int kFightFieldNumber = 1;
  inline ::google::protobuf::uint64 fight() const;
  inline void set_fight(::google::protobuf::uint64 value);

  // optional int32 curwave = 2;
  inline bool has_curwave() const;
  inline void clear_curwave();
  static const int kCurwaveFieldNumber = 2;
  inline ::google::protobuf::int32 curwave() const;
  inline void set_curwave(::google::protobuf::int32 value);

  // optional int32 num = 3;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 3;
  inline ::google::protobuf::int32 num() const;
  inline void set_num(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.NotifyGHostDupRun)
 private:
  inline void set_has_fight();
  inline void clear_has_fight();
  inline void set_has_curwave();
  inline void clear_has_curwave();
  inline void set_has_num();
  inline void clear_has_num();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 fight_;
  ::google::protobuf::int32 curwave_;
  ::google::protobuf::int32 num_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_Dup_2eproto();
  friend void protobuf_AssignDesc_Dup_2eproto();
  friend void protobuf_ShutdownFile_Dup_2eproto();

  void InitAsDefaultInstance();
  static NotifyGHostDupRun* default_instance_;
};
// -------------------------------------------------------------------

class NotifyGHostChgStep : public ::google::protobuf::Message {
 public:
  NotifyGHostChgStep();
  virtual ~NotifyGHostChgStep();

  NotifyGHostChgStep(const NotifyGHostChgStep& from);

  inline NotifyGHostChgStep& operator=(const NotifyGHostChgStep& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NotifyGHostChgStep& default_instance();

  void Swap(NotifyGHostChgStep* other);

  // implements Message ----------------------------------------------

  NotifyGHostChgStep* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NotifyGHostChgStep& from);
  void MergeFrom(const NotifyGHostChgStep& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 time = 1;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 1;
  inline ::google::protobuf::int32 time() const;
  inline void set_time(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.NotifyGHostChgStep)
 private:
  inline void set_has_time();
  inline void clear_has_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 time_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Dup_2eproto();
  friend void protobuf_AssignDesc_Dup_2eproto();
  friend void protobuf_ShutdownFile_Dup_2eproto();

  void InitAsDefaultInstance();
  static NotifyGHostChgStep* default_instance_;
};
// -------------------------------------------------------------------

class NotifyGHostDupRes : public ::google::protobuf::Message {
 public:
  NotifyGHostDupRes();
  virtual ~NotifyGHostDupRes();

  NotifyGHostDupRes(const NotifyGHostDupRes& from);

  inline NotifyGHostDupRes& operator=(const NotifyGHostDupRes& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NotifyGHostDupRes& default_instance();

  void Swap(NotifyGHostDupRes* other);

  // implements Message ----------------------------------------------

  NotifyGHostDupRes* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NotifyGHostDupRes& from);
  void MergeFrom(const NotifyGHostDupRes& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 curwave = 1;
  inline bool has_curwave() const;
  inline void clear_curwave();
  static const int kCurwaveFieldNumber = 1;
  inline ::google::protobuf::int32 curwave() const;
  inline void set_curwave(::google::protobuf::int32 value);

  // optional int32 time = 2;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 2;
  inline ::google::protobuf::int32 time() const;
  inline void set_time(::google::protobuf::int32 value);

  // repeated .proto_ff.ItemProtoInfo reward = 3;
  inline int reward_size() const;
  inline void clear_reward();
  static const int kRewardFieldNumber = 3;
  inline const ::proto_ff::ItemProtoInfo& reward(int index) const;
  inline ::proto_ff::ItemProtoInfo* mutable_reward(int index);
  inline ::proto_ff::ItemProtoInfo* add_reward();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::ItemProtoInfo >&
      reward() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::ItemProtoInfo >*
      mutable_reward();

  // @@protoc_insertion_point(class_scope:proto_ff.NotifyGHostDupRes)
 private:
  inline void set_has_curwave();
  inline void clear_has_curwave();
  inline void set_has_time();
  inline void clear_has_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 curwave_;
  ::google::protobuf::int32 time_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::ItemProtoInfo > reward_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_Dup_2eproto();
  friend void protobuf_AssignDesc_Dup_2eproto();
  friend void protobuf_ShutdownFile_Dup_2eproto();

  void InitAsDefaultInstance();
  static NotifyGHostDupRes* default_instance_;
};
// -------------------------------------------------------------------

class GhostRecvPassReq : public ::google::protobuf::Message {
 public:
  GhostRecvPassReq();
  virtual ~GhostRecvPassReq();

  GhostRecvPassReq(const GhostRecvPassReq& from);

  inline GhostRecvPassReq& operator=(const GhostRecvPassReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GhostRecvPassReq& default_instance();

  void Swap(GhostRecvPassReq* other);

  // implements Message ----------------------------------------------

  GhostRecvPassReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GhostRecvPassReq& from);
  void MergeFrom(const GhostRecvPassReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.GhostRecvPassReq)
 private:
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Dup_2eproto();
  friend void protobuf_AssignDesc_Dup_2eproto();
  friend void protobuf_ShutdownFile_Dup_2eproto();

  void InitAsDefaultInstance();
  static GhostRecvPassReq* default_instance_;
};
// -------------------------------------------------------------------

class GhostRecvPassRsp : public ::google::protobuf::Message {
 public:
  GhostRecvPassRsp();
  virtual ~GhostRecvPassRsp();

  GhostRecvPassRsp(const GhostRecvPassRsp& from);

  inline GhostRecvPassRsp& operator=(const GhostRecvPassRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GhostRecvPassRsp& default_instance();

  void Swap(GhostRecvPassRsp* other);

  // implements Message ----------------------------------------------

  GhostRecvPassRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GhostRecvPassRsp& from);
  void MergeFrom(const GhostRecvPassRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 ret = 1;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 1;
  inline ::google::protobuf::int32 ret() const;
  inline void set_ret(::google::protobuf::int32 value);

  // optional int32 id = 2;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 2;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.GhostRecvPassRsp)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 ret_;
  ::google::protobuf::int32 id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Dup_2eproto();
  friend void protobuf_AssignDesc_Dup_2eproto();
  friend void protobuf_ShutdownFile_Dup_2eproto();

  void InitAsDefaultInstance();
  static GhostRecvPassRsp* default_instance_;
};
// -------------------------------------------------------------------

class YaotaReq : public ::google::protobuf::Message {
 public:
  YaotaReq();
  virtual ~YaotaReq();

  YaotaReq(const YaotaReq& from);

  inline YaotaReq& operator=(const YaotaReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const YaotaReq& default_instance();

  void Swap(YaotaReq* other);

  // implements Message ----------------------------------------------

  YaotaReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const YaotaReq& from);
  void MergeFrom(const YaotaReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto_ff.YaotaReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_Dup_2eproto();
  friend void protobuf_AssignDesc_Dup_2eproto();
  friend void protobuf_ShutdownFile_Dup_2eproto();

  void InitAsDefaultInstance();
  static YaotaReq* default_instance_;
};
// -------------------------------------------------------------------

class NotifyYaotaFirstPass : public ::google::protobuf::Message {
 public:
  NotifyYaotaFirstPass();
  virtual ~NotifyYaotaFirstPass();

  NotifyYaotaFirstPass(const NotifyYaotaFirstPass& from);

  inline NotifyYaotaFirstPass& operator=(const NotifyYaotaFirstPass& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NotifyYaotaFirstPass& default_instance();

  void Swap(NotifyYaotaFirstPass* other);

  // implements Message ----------------------------------------------

  NotifyYaotaFirstPass* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NotifyYaotaFirstPass& from);
  void MergeFrom(const NotifyYaotaFirstPass& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 can_recv_first_pass_ids = 1;
  inline int can_recv_first_pass_ids_size() const;
  inline void clear_can_recv_first_pass_ids();
  static const int kCanRecvFirstPassIdsFieldNumber = 1;
  inline ::google::protobuf::int32 can_recv_first_pass_ids(int index) const;
  inline void set_can_recv_first_pass_ids(int index, ::google::protobuf::int32 value);
  inline void add_can_recv_first_pass_ids(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      can_recv_first_pass_ids() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_can_recv_first_pass_ids();

  // repeated int32 first_pass_ids = 2;
  inline int first_pass_ids_size() const;
  inline void clear_first_pass_ids();
  static const int kFirstPassIdsFieldNumber = 2;
  inline ::google::protobuf::int32 first_pass_ids(int index) const;
  inline void set_first_pass_ids(int index, ::google::protobuf::int32 value);
  inline void add_first_pass_ids(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      first_pass_ids() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_first_pass_ids();

  // @@protoc_insertion_point(class_scope:proto_ff.NotifyYaotaFirstPass)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > can_recv_first_pass_ids_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > first_pass_ids_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Dup_2eproto();
  friend void protobuf_AssignDesc_Dup_2eproto();
  friend void protobuf_ShutdownFile_Dup_2eproto();

  void InitAsDefaultInstance();
  static NotifyYaotaFirstPass* default_instance_;
};
// -------------------------------------------------------------------

class YaotaFirstPassInfoReq : public ::google::protobuf::Message {
 public:
  YaotaFirstPassInfoReq();
  virtual ~YaotaFirstPassInfoReq();

  YaotaFirstPassInfoReq(const YaotaFirstPassInfoReq& from);

  inline YaotaFirstPassInfoReq& operator=(const YaotaFirstPassInfoReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const YaotaFirstPassInfoReq& default_instance();

  void Swap(YaotaFirstPassInfoReq* other);

  // implements Message ----------------------------------------------

  YaotaFirstPassInfoReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const YaotaFirstPassInfoReq& from);
  void MergeFrom(const YaotaFirstPassInfoReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 dupid = 1;
  inline bool has_dupid() const;
  inline void clear_dupid();
  static const int kDupidFieldNumber = 1;
  inline ::google::protobuf::int32 dupid() const;
  inline void set_dupid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.YaotaFirstPassInfoReq)
 private:
  inline void set_has_dupid();
  inline void clear_has_dupid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 dupid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Dup_2eproto();
  friend void protobuf_AssignDesc_Dup_2eproto();
  friend void protobuf_ShutdownFile_Dup_2eproto();

  void InitAsDefaultInstance();
  static YaotaFirstPassInfoReq* default_instance_;
};
// -------------------------------------------------------------------

class YaotaFirstPassInfoRsp : public ::google::protobuf::Message {
 public:
  YaotaFirstPassInfoRsp();
  virtual ~YaotaFirstPassInfoRsp();

  YaotaFirstPassInfoRsp(const YaotaFirstPassInfoRsp& from);

  inline YaotaFirstPassInfoRsp& operator=(const YaotaFirstPassInfoRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const YaotaFirstPassInfoRsp& default_instance();

  void Swap(YaotaFirstPassInfoRsp* other);

  // implements Message ----------------------------------------------

  YaotaFirstPassInfoRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const YaotaFirstPassInfoRsp& from);
  void MergeFrom(const YaotaFirstPassInfoRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 dupid = 1;
  inline bool has_dupid() const;
  inline void clear_dupid();
  static const int kDupidFieldNumber = 1;
  inline ::google::protobuf::int32 dupid() const;
  inline void set_dupid(::google::protobuf::int32 value);

  // repeated .proto_ff.RolePlayerMiniInfo info = 2;
  inline int info_size() const;
  inline void clear_info();
  static const int kInfoFieldNumber = 2;
  inline const ::proto_ff::RolePlayerMiniInfo& info(int index) const;
  inline ::proto_ff::RolePlayerMiniInfo* mutable_info(int index);
  inline ::proto_ff::RolePlayerMiniInfo* add_info();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::RolePlayerMiniInfo >&
      info() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::RolePlayerMiniInfo >*
      mutable_info();

  // optional uint64 time = 3;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 3;
  inline ::google::protobuf::uint64 time() const;
  inline void set_time(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.YaotaFirstPassInfoRsp)
 private:
  inline void set_has_dupid();
  inline void clear_has_dupid();
  inline void set_has_time();
  inline void clear_has_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::RolePlayerMiniInfo > info_;
  ::google::protobuf::uint64 time_;
  ::google::protobuf::int32 dupid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_Dup_2eproto();
  friend void protobuf_AssignDesc_Dup_2eproto();
  friend void protobuf_ShutdownFile_Dup_2eproto();

  void InitAsDefaultInstance();
  static YaotaFirstPassInfoRsp* default_instance_;
};
// -------------------------------------------------------------------

class YaotaRecvReq : public ::google::protobuf::Message {
 public:
  YaotaRecvReq();
  virtual ~YaotaRecvReq();

  YaotaRecvReq(const YaotaRecvReq& from);

  inline YaotaRecvReq& operator=(const YaotaRecvReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const YaotaRecvReq& default_instance();

  void Swap(YaotaRecvReq* other);

  // implements Message ----------------------------------------------

  YaotaRecvReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const YaotaRecvReq& from);
  void MergeFrom(const YaotaRecvReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // optional int32 dupId = 2;
  inline bool has_dupid() const;
  inline void clear_dupid();
  static const int kDupIdFieldNumber = 2;
  inline ::google::protobuf::int32 dupid() const;
  inline void set_dupid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.YaotaRecvReq)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_dupid();
  inline void clear_has_dupid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 dupid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Dup_2eproto();
  friend void protobuf_AssignDesc_Dup_2eproto();
  friend void protobuf_ShutdownFile_Dup_2eproto();

  void InitAsDefaultInstance();
  static YaotaRecvReq* default_instance_;
};
// -------------------------------------------------------------------

class YaotaRecvRsp : public ::google::protobuf::Message {
 public:
  YaotaRecvRsp();
  virtual ~YaotaRecvRsp();

  YaotaRecvRsp(const YaotaRecvRsp& from);

  inline YaotaRecvRsp& operator=(const YaotaRecvRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const YaotaRecvRsp& default_instance();

  void Swap(YaotaRecvRsp* other);

  // implements Message ----------------------------------------------

  YaotaRecvRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const YaotaRecvRsp& from);
  void MergeFrom(const YaotaRecvRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 ret = 1;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 1;
  inline ::google::protobuf::int32 ret() const;
  inline void set_ret(::google::protobuf::int32 value);

  // optional int32 type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // optional int32 dupId = 3;
  inline bool has_dupid() const;
  inline void clear_dupid();
  static const int kDupIdFieldNumber = 3;
  inline ::google::protobuf::int32 dupid() const;
  inline void set_dupid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.YaotaRecvRsp)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_dupid();
  inline void clear_has_dupid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 ret_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 dupid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_Dup_2eproto();
  friend void protobuf_AssignDesc_Dup_2eproto();
  friend void protobuf_ShutdownFile_Dup_2eproto();

  void InitAsDefaultInstance();
  static YaotaRecvRsp* default_instance_;
};
// -------------------------------------------------------------------

class NotifyYaotaDupRes : public ::google::protobuf::Message {
 public:
  NotifyYaotaDupRes();
  virtual ~NotifyYaotaDupRes();

  NotifyYaotaDupRes(const NotifyYaotaDupRes& from);

  inline NotifyYaotaDupRes& operator=(const NotifyYaotaDupRes& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NotifyYaotaDupRes& default_instance();

  void Swap(NotifyYaotaDupRes* other);

  // implements Message ----------------------------------------------

  NotifyYaotaDupRes* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NotifyYaotaDupRes& from);
  void MergeFrom(const NotifyYaotaDupRes& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 flag = 1;
  inline bool has_flag() const;
  inline void clear_flag();
  static const int kFlagFieldNumber = 1;
  inline ::google::protobuf::int32 flag() const;
  inline void set_flag(::google::protobuf::int32 value);

  // repeated .proto_ff.ItemProtoInfo reward = 2;
  inline int reward_size() const;
  inline void clear_reward();
  static const int kRewardFieldNumber = 2;
  inline const ::proto_ff::ItemProtoInfo& reward(int index) const;
  inline ::proto_ff::ItemProtoInfo* mutable_reward(int index);
  inline ::proto_ff::ItemProtoInfo* add_reward();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::ItemProtoInfo >&
      reward() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::ItemProtoInfo >*
      mutable_reward();

  // optional int32 time = 3;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 3;
  inline ::google::protobuf::int32 time() const;
  inline void set_time(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.NotifyYaotaDupRes)
 private:
  inline void set_has_flag();
  inline void clear_has_flag();
  inline void set_has_time();
  inline void clear_has_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::ItemProtoInfo > reward_;
  ::google::protobuf::int32 flag_;
  ::google::protobuf::int32 time_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_Dup_2eproto();
  friend void protobuf_AssignDesc_Dup_2eproto();
  friend void protobuf_ShutdownFile_Dup_2eproto();

  void InitAsDefaultInstance();
  static NotifyYaotaDupRes* default_instance_;
};
// -------------------------------------------------------------------

class L2CEnterDupReq : public ::google::protobuf::Message {
 public:
  L2CEnterDupReq();
  virtual ~L2CEnterDupReq();

  L2CEnterDupReq(const L2CEnterDupReq& from);

  inline L2CEnterDupReq& operator=(const L2CEnterDupReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const L2CEnterDupReq& default_instance();

  void Swap(L2CEnterDupReq* other);

  // implements Message ----------------------------------------------

  L2CEnterDupReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const L2CEnterDupReq& from);
  void MergeFrom(const L2CEnterDupReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .proto_ff.CreateSceneParamProto params = 1;
  inline bool has_params() const;
  inline void clear_params();
  static const int kParamsFieldNumber = 1;
  inline const ::proto_ff::CreateSceneParamProto& params() const;
  inline ::proto_ff::CreateSceneParamProto* mutable_params();
  inline ::proto_ff::CreateSceneParamProto* release_params();
  inline void set_allocated_params(::proto_ff::CreateSceneParamProto* params);

  // @@protoc_insertion_point(class_scope:proto_ff.L2CEnterDupReq)
 private:
  inline void set_has_params();
  inline void clear_has_params();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::proto_ff::CreateSceneParamProto* params_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Dup_2eproto();
  friend void protobuf_AssignDesc_Dup_2eproto();
  friend void protobuf_ShutdownFile_Dup_2eproto();

  void InitAsDefaultInstance();
  static L2CEnterDupReq* default_instance_;
};
// -------------------------------------------------------------------

class L2CCreateDupRsp : public ::google::protobuf::Message {
 public:
  L2CCreateDupRsp();
  virtual ~L2CCreateDupRsp();

  L2CCreateDupRsp(const L2CCreateDupRsp& from);

  inline L2CCreateDupRsp& operator=(const L2CCreateDupRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const L2CCreateDupRsp& default_instance();

  void Swap(L2CCreateDupRsp* other);

  // implements Message ----------------------------------------------

  L2CCreateDupRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const L2CCreateDupRsp& from);
  void MergeFrom(const L2CCreateDupRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 ret = 1;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 1;
  inline ::google::protobuf::int32 ret() const;
  inline void set_ret(::google::protobuf::int32 value);

  // optional uint64 sceneId = 2;
  inline bool has_sceneid() const;
  inline void clear_sceneid();
  static const int kSceneIdFieldNumber = 2;
  inline ::google::protobuf::uint64 sceneid() const;
  inline void set_sceneid(::google::protobuf::uint64 value);

  // optional uint64 dupId = 3;
  inline bool has_dupid() const;
  inline void clear_dupid();
  static const int kDupIdFieldNumber = 3;
  inline ::google::protobuf::uint64 dupid() const;
  inline void set_dupid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.L2CCreateDupRsp)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();
  inline void set_has_sceneid();
  inline void clear_has_sceneid();
  inline void set_has_dupid();
  inline void clear_has_dupid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 sceneid_;
  ::google::protobuf::uint64 dupid_;
  ::google::protobuf::int32 ret_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_Dup_2eproto();
  friend void protobuf_AssignDesc_Dup_2eproto();
  friend void protobuf_ShutdownFile_Dup_2eproto();

  void InitAsDefaultInstance();
  static L2CCreateDupRsp* default_instance_;
};
// -------------------------------------------------------------------

class L2CDupStateChgNotify : public ::google::protobuf::Message {
 public:
  L2CDupStateChgNotify();
  virtual ~L2CDupStateChgNotify();

  L2CDupStateChgNotify(const L2CDupStateChgNotify& from);

  inline L2CDupStateChgNotify& operator=(const L2CDupStateChgNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const L2CDupStateChgNotify& default_instance();

  void Swap(L2CDupStateChgNotify* other);

  // implements Message ----------------------------------------------

  L2CDupStateChgNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const L2CDupStateChgNotify& from);
  void MergeFrom(const L2CDupStateChgNotify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 sceneId = 1;
  inline bool has_sceneid() const;
  inline void clear_sceneid();
  static const int kSceneIdFieldNumber = 1;
  inline ::google::protobuf::uint64 sceneid() const;
  inline void set_sceneid(::google::protobuf::uint64 value);

  // optional uint64 dupId = 2;
  inline bool has_dupid() const;
  inline void clear_dupid();
  static const int kDupIdFieldNumber = 2;
  inline ::google::protobuf::uint64 dupid() const;
  inline void set_dupid(::google::protobuf::uint64 value);

  // optional int32 state = 3;
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 3;
  inline ::google::protobuf::int32 state() const;
  inline void set_state(::google::protobuf::int32 value);

  // optional uint64 time = 4;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 4;
  inline ::google::protobuf::uint64 time() const;
  inline void set_time(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.L2CDupStateChgNotify)
 private:
  inline void set_has_sceneid();
  inline void clear_has_sceneid();
  inline void set_has_dupid();
  inline void clear_has_dupid();
  inline void set_has_state();
  inline void clear_has_state();
  inline void set_has_time();
  inline void clear_has_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 sceneid_;
  ::google::protobuf::uint64 dupid_;
  ::google::protobuf::uint64 time_;
  ::google::protobuf::int32 state_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_Dup_2eproto();
  friend void protobuf_AssignDesc_Dup_2eproto();
  friend void protobuf_ShutdownFile_Dup_2eproto();

  void InitAsDefaultInstance();
  static L2CDupStateChgNotify* default_instance_;
};
// -------------------------------------------------------------------

class C2LPullRoleEnterDupNotify : public ::google::protobuf::Message {
 public:
  C2LPullRoleEnterDupNotify();
  virtual ~C2LPullRoleEnterDupNotify();

  C2LPullRoleEnterDupNotify(const C2LPullRoleEnterDupNotify& from);

  inline C2LPullRoleEnterDupNotify& operator=(const C2LPullRoleEnterDupNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const C2LPullRoleEnterDupNotify& default_instance();

  void Swap(C2LPullRoleEnterDupNotify* other);

  // implements Message ----------------------------------------------

  C2LPullRoleEnterDupNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const C2LPullRoleEnterDupNotify& from);
  void MergeFrom(const C2LPullRoleEnterDupNotify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 char_id = 1;
  inline bool has_char_id() const;
  inline void clear_char_id();
  static const int kCharIdFieldNumber = 1;
  inline ::google::protobuf::uint64 char_id() const;
  inline void set_char_id(::google::protobuf::uint64 value);

  // required uint64 duplicate_id = 2;
  inline bool has_duplicate_id() const;
  inline void clear_duplicate_id();
  static const int kDuplicateIdFieldNumber = 2;
  inline ::google::protobuf::uint64 duplicate_id() const;
  inline void set_duplicate_id(::google::protobuf::uint64 value);

  // required uint64 scene_id = 3;
  inline bool has_scene_id() const;
  inline void clear_scene_id();
  static const int kSceneIdFieldNumber = 3;
  inline ::google::protobuf::uint64 scene_id() const;
  inline void set_scene_id(::google::protobuf::uint64 value);

  // optional uint64 born_id = 4;
  inline bool has_born_id() const;
  inline void clear_born_id();
  static const int kBornIdFieldNumber = 4;
  inline ::google::protobuf::uint64 born_id() const;
  inline void set_born_id(::google::protobuf::uint64 value);

  // optional uint32 zoneid = 5;
  inline bool has_zoneid() const;
  inline void clear_zoneid();
  static const int kZoneidFieldNumber = 5;
  inline ::google::protobuf::uint32 zoneid() const;
  inline void set_zoneid(::google::protobuf::uint32 value);

  // optional int32 tran_tag = 6;
  inline bool has_tran_tag() const;
  inline void clear_tran_tag();
  static const int kTranTagFieldNumber = 6;
  inline ::google::protobuf::int32 tran_tag() const;
  inline void set_tran_tag(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.C2LPullRoleEnterDupNotify)
 private:
  inline void set_has_char_id();
  inline void clear_has_char_id();
  inline void set_has_duplicate_id();
  inline void clear_has_duplicate_id();
  inline void set_has_scene_id();
  inline void clear_has_scene_id();
  inline void set_has_born_id();
  inline void clear_has_born_id();
  inline void set_has_zoneid();
  inline void clear_has_zoneid();
  inline void set_has_tran_tag();
  inline void clear_has_tran_tag();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 char_id_;
  ::google::protobuf::uint64 duplicate_id_;
  ::google::protobuf::uint64 scene_id_;
  ::google::protobuf::uint64 born_id_;
  ::google::protobuf::uint32 zoneid_;
  ::google::protobuf::int32 tran_tag_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_Dup_2eproto();
  friend void protobuf_AssignDesc_Dup_2eproto();
  friend void protobuf_ShutdownFile_Dup_2eproto();

  void InitAsDefaultInstance();
  static C2LPullRoleEnterDupNotify* default_instance_;
};
// -------------------------------------------------------------------

class L2CDupRoleActionNotify : public ::google::protobuf::Message {
 public:
  L2CDupRoleActionNotify();
  virtual ~L2CDupRoleActionNotify();

  L2CDupRoleActionNotify(const L2CDupRoleActionNotify& from);

  inline L2CDupRoleActionNotify& operator=(const L2CDupRoleActionNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const L2CDupRoleActionNotify& default_instance();

  void Swap(L2CDupRoleActionNotify* other);

  // implements Message ----------------------------------------------

  L2CDupRoleActionNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const L2CDupRoleActionNotify& from);
  void MergeFrom(const L2CDupRoleActionNotify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 sceneId = 1;
  inline bool has_sceneid() const;
  inline void clear_sceneid();
  static const int kSceneIdFieldNumber = 1;
  inline ::google::protobuf::int64 sceneid() const;
  inline void set_sceneid(::google::protobuf::int64 value);

  // optional int64 cid = 2;
  inline bool has_cid() const;
  inline void clear_cid();
  static const int kCidFieldNumber = 2;
  inline ::google::protobuf::int64 cid() const;
  inline void set_cid(::google::protobuf::int64 value);

  // optional int32 actionId = 3;
  inline bool has_actionid() const;
  inline void clear_actionid();
  static const int kActionIdFieldNumber = 3;
  inline ::google::protobuf::int32 actionid() const;
  inline void set_actionid(::google::protobuf::int32 value);

  // optional int32 ret = 4;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 4;
  inline ::google::protobuf::int32 ret() const;
  inline void set_ret(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.L2CDupRoleActionNotify)
 private:
  inline void set_has_sceneid();
  inline void clear_has_sceneid();
  inline void set_has_cid();
  inline void clear_has_cid();
  inline void set_has_actionid();
  inline void clear_has_actionid();
  inline void set_has_ret();
  inline void clear_has_ret();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 sceneid_;
  ::google::protobuf::int64 cid_;
  ::google::protobuf::int32 actionid_;
  ::google::protobuf::int32 ret_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_Dup_2eproto();
  friend void protobuf_AssignDesc_Dup_2eproto();
  friend void protobuf_ShutdownFile_Dup_2eproto();

  void InitAsDefaultInstance();
  static L2CDupRoleActionNotify* default_instance_;
};
// -------------------------------------------------------------------

class S2CEnterDupReq : public ::google::protobuf::Message {
 public:
  S2CEnterDupReq();
  virtual ~S2CEnterDupReq();

  S2CEnterDupReq(const S2CEnterDupReq& from);

  inline S2CEnterDupReq& operator=(const S2CEnterDupReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const S2CEnterDupReq& default_instance();

  void Swap(S2CEnterDupReq* other);

  // implements Message ----------------------------------------------

  S2CEnterDupReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const S2CEnterDupReq& from);
  void MergeFrom(const S2CEnterDupReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .proto_ff.CreateSceneParamProto params = 1;
  inline bool has_params() const;
  inline void clear_params();
  static const int kParamsFieldNumber = 1;
  inline const ::proto_ff::CreateSceneParamProto& params() const;
  inline ::proto_ff::CreateSceneParamProto* mutable_params();
  inline ::proto_ff::CreateSceneParamProto* release_params();
  inline void set_allocated_params(::proto_ff::CreateSceneParamProto* params);

  // @@protoc_insertion_point(class_scope:proto_ff.S2CEnterDupReq)
 private:
  inline void set_has_params();
  inline void clear_has_params();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::proto_ff::CreateSceneParamProto* params_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Dup_2eproto();
  friend void protobuf_AssignDesc_Dup_2eproto();
  friend void protobuf_ShutdownFile_Dup_2eproto();

  void InitAsDefaultInstance();
  static S2CEnterDupReq* default_instance_;
};
// -------------------------------------------------------------------

class C2SEnterDupRsp : public ::google::protobuf::Message {
 public:
  C2SEnterDupRsp();
  virtual ~C2SEnterDupRsp();

  C2SEnterDupRsp(const C2SEnterDupRsp& from);

  inline C2SEnterDupRsp& operator=(const C2SEnterDupRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const C2SEnterDupRsp& default_instance();

  void Swap(C2SEnterDupRsp* other);

  // implements Message ----------------------------------------------

  C2SEnterDupRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const C2SEnterDupRsp& from);
  void MergeFrom(const C2SEnterDupRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 ret = 1;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 1;
  inline ::google::protobuf::int32 ret() const;
  inline void set_ret(::google::protobuf::int32 value);

  // optional .proto_ff.CreateSceneParamProto params = 2;
  inline bool has_params() const;
  inline void clear_params();
  static const int kParamsFieldNumber = 2;
  inline const ::proto_ff::CreateSceneParamProto& params() const;
  inline ::proto_ff::CreateSceneParamProto* mutable_params();
  inline ::proto_ff::CreateSceneParamProto* release_params();
  inline void set_allocated_params(::proto_ff::CreateSceneParamProto* params);

  // @@protoc_insertion_point(class_scope:proto_ff.C2SEnterDupRsp)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();
  inline void set_has_params();
  inline void clear_has_params();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::proto_ff::CreateSceneParamProto* params_;
  ::google::protobuf::int32 ret_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Dup_2eproto();
  friend void protobuf_AssignDesc_Dup_2eproto();
  friend void protobuf_ShutdownFile_Dup_2eproto();

  void InitAsDefaultInstance();
  static C2SEnterDupRsp* default_instance_;
};
// -------------------------------------------------------------------

class L2CTowerRecvRecordReq : public ::google::protobuf::Message {
 public:
  L2CTowerRecvRecordReq();
  virtual ~L2CTowerRecvRecordReq();

  L2CTowerRecvRecordReq(const L2CTowerRecvRecordReq& from);

  inline L2CTowerRecvRecordReq& operator=(const L2CTowerRecvRecordReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const L2CTowerRecvRecordReq& default_instance();

  void Swap(L2CTowerRecvRecordReq* other);

  // implements Message ----------------------------------------------

  L2CTowerRecvRecordReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const L2CTowerRecvRecordReq& from);
  void MergeFrom(const L2CTowerRecvRecordReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int64 id() const;
  inline void set_id(::google::protobuf::int64 value);

  // optional int64 cid = 2;
  inline bool has_cid() const;
  inline void clear_cid();
  static const int kCidFieldNumber = 2;
  inline ::google::protobuf::int64 cid() const;
  inline void set_cid(::google::protobuf::int64 value);

  // optional string name = 3;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 3;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // optional int64 time = 4;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 4;
  inline ::google::protobuf::int64 time() const;
  inline void set_time(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.L2CTowerRecvRecordReq)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_cid();
  inline void clear_has_cid();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_time();
  inline void clear_has_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 id_;
  ::google::protobuf::int64 cid_;
  ::std::string* name_;
  ::google::protobuf::int64 time_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_Dup_2eproto();
  friend void protobuf_AssignDesc_Dup_2eproto();
  friend void protobuf_ShutdownFile_Dup_2eproto();

  void InitAsDefaultInstance();
  static L2CTowerRecvRecordReq* default_instance_;
};
// -------------------------------------------------------------------

class L2SEnterDupReq : public ::google::protobuf::Message {
 public:
  L2SEnterDupReq();
  virtual ~L2SEnterDupReq();

  L2SEnterDupReq(const L2SEnterDupReq& from);

  inline L2SEnterDupReq& operator=(const L2SEnterDupReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const L2SEnterDupReq& default_instance();

  void Swap(L2SEnterDupReq* other);

  // implements Message ----------------------------------------------

  L2SEnterDupReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const L2SEnterDupReq& from);
  void MergeFrom(const L2SEnterDupReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .proto_ff.CreateSceneParamProto params = 1;
  inline bool has_params() const;
  inline void clear_params();
  static const int kParamsFieldNumber = 1;
  inline const ::proto_ff::CreateSceneParamProto& params() const;
  inline ::proto_ff::CreateSceneParamProto* mutable_params();
  inline ::proto_ff::CreateSceneParamProto* release_params();
  inline void set_allocated_params(::proto_ff::CreateSceneParamProto* params);

  // @@protoc_insertion_point(class_scope:proto_ff.L2SEnterDupReq)
 private:
  inline void set_has_params();
  inline void clear_has_params();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::proto_ff::CreateSceneParamProto* params_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Dup_2eproto();
  friend void protobuf_AssignDesc_Dup_2eproto();
  friend void protobuf_ShutdownFile_Dup_2eproto();

  void InitAsDefaultInstance();
  static L2SEnterDupReq* default_instance_;
};
// -------------------------------------------------------------------

class L2SDupTeamInviteReq : public ::google::protobuf::Message {
 public:
  L2SDupTeamInviteReq();
  virtual ~L2SDupTeamInviteReq();

  L2SDupTeamInviteReq(const L2SDupTeamInviteReq& from);

  inline L2SDupTeamInviteReq& operator=(const L2SDupTeamInviteReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const L2SDupTeamInviteReq& default_instance();

  void Swap(L2SDupTeamInviteReq* other);

  // implements Message ----------------------------------------------

  L2SDupTeamInviteReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const L2SDupTeamInviteReq& from);
  void MergeFrom(const L2SDupTeamInviteReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 dupid = 1;
  inline bool has_dupid() const;
  inline void clear_dupid();
  static const int kDupidFieldNumber = 1;
  inline ::google::protobuf::uint64 dupid() const;
  inline void set_dupid(::google::protobuf::uint64 value);

  // optional int64 teamid = 2;
  inline bool has_teamid() const;
  inline void clear_teamid();
  static const int kTeamidFieldNumber = 2;
  inline ::google::protobuf::int64 teamid() const;
  inline void set_teamid(::google::protobuf::int64 value);

  // optional int64 cid = 3;
  inline bool has_cid() const;
  inline void clear_cid();
  static const int kCidFieldNumber = 3;
  inline ::google::protobuf::int64 cid() const;
  inline void set_cid(::google::protobuf::int64 value);

  // optional .proto_ff.CreateSceneParamProto params = 4;
  inline bool has_params() const;
  inline void clear_params();
  static const int kParamsFieldNumber = 4;
  inline const ::proto_ff::CreateSceneParamProto& params() const;
  inline ::proto_ff::CreateSceneParamProto* mutable_params();
  inline ::proto_ff::CreateSceneParamProto* release_params();
  inline void set_allocated_params(::proto_ff::CreateSceneParamProto* params);

  // @@protoc_insertion_point(class_scope:proto_ff.L2SDupTeamInviteReq)
 private:
  inline void set_has_dupid();
  inline void clear_has_dupid();
  inline void set_has_teamid();
  inline void clear_has_teamid();
  inline void set_has_cid();
  inline void clear_has_cid();
  inline void set_has_params();
  inline void clear_has_params();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 dupid_;
  ::google::protobuf::int64 teamid_;
  ::google::protobuf::int64 cid_;
  ::proto_ff::CreateSceneParamProto* params_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_Dup_2eproto();
  friend void protobuf_AssignDesc_Dup_2eproto();
  friend void protobuf_ShutdownFile_Dup_2eproto();

  void InitAsDefaultInstance();
  static L2SDupTeamInviteReq* default_instance_;
};
// -------------------------------------------------------------------

class C2SCreateDupResultRsp : public ::google::protobuf::Message {
 public:
  C2SCreateDupResultRsp();
  virtual ~C2SCreateDupResultRsp();

  C2SCreateDupResultRsp(const C2SCreateDupResultRsp& from);

  inline C2SCreateDupResultRsp& operator=(const C2SCreateDupResultRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const C2SCreateDupResultRsp& default_instance();

  void Swap(C2SCreateDupResultRsp* other);

  // implements Message ----------------------------------------------

  C2SCreateDupResultRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const C2SCreateDupResultRsp& from);
  void MergeFrom(const C2SCreateDupResultRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 ret = 1;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 1;
  inline ::google::protobuf::int32 ret() const;
  inline void set_ret(::google::protobuf::int32 value);

  // optional uint64 sceneid = 2;
  inline bool has_sceneid() const;
  inline void clear_sceneid();
  static const int kSceneidFieldNumber = 2;
  inline ::google::protobuf::uint64 sceneid() const;
  inline void set_sceneid(::google::protobuf::uint64 value);

  // optional uint64 mapid = 3;
  inline bool has_mapid() const;
  inline void clear_mapid();
  static const int kMapidFieldNumber = 3;
  inline ::google::protobuf::uint64 mapid() const;
  inline void set_mapid(::google::protobuf::uint64 value);

  // optional uint32 logicid = 4;
  inline bool has_logicid() const;
  inline void clear_logicid();
  static const int kLogicidFieldNumber = 4;
  inline ::google::protobuf::uint32 logicid() const;
  inline void set_logicid(::google::protobuf::uint32 value);

  // optional uint32 zoneid = 5;
  inline bool has_zoneid() const;
  inline void clear_zoneid();
  static const int kZoneidFieldNumber = 5;
  inline ::google::protobuf::uint32 zoneid() const;
  inline void set_zoneid(::google::protobuf::uint32 value);

  // optional int32 keytype = 6;
  inline bool has_keytype() const;
  inline void clear_keytype();
  static const int kKeytypeFieldNumber = 6;
  inline ::google::protobuf::int32 keytype() const;
  inline void set_keytype(::google::protobuf::int32 value);

  // optional uint64 keyval = 7;
  inline bool has_keyval() const;
  inline void clear_keyval();
  static const int kKeyvalFieldNumber = 7;
  inline ::google::protobuf::uint64 keyval() const;
  inline void set_keyval(::google::protobuf::uint64 value);

  // optional int32 teamid = 8;
  inline bool has_teamid() const;
  inline void clear_teamid();
  static const int kTeamidFieldNumber = 8;
  inline ::google::protobuf::int32 teamid() const;
  inline void set_teamid(::google::protobuf::int32 value);

  // optional int32 dupid = 9;
  inline bool has_dupid() const;
  inline void clear_dupid();
  static const int kDupidFieldNumber = 9;
  inline ::google::protobuf::int32 dupid() const;
  inline void set_dupid(::google::protobuf::int32 value);

  // optional bytes str_param = 10;
  inline bool has_str_param() const;
  inline void clear_str_param();
  static const int kStrParamFieldNumber = 10;
  inline const ::std::string& str_param() const;
  inline void set_str_param(const ::std::string& value);
  inline void set_str_param(const char* value);
  inline void set_str_param(const void* value, size_t size);
  inline ::std::string* mutable_str_param();
  inline ::std::string* release_str_param();
  inline void set_allocated_str_param(::std::string* str_param);

  // @@protoc_insertion_point(class_scope:proto_ff.C2SCreateDupResultRsp)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();
  inline void set_has_sceneid();
  inline void clear_has_sceneid();
  inline void set_has_mapid();
  inline void clear_has_mapid();
  inline void set_has_logicid();
  inline void clear_has_logicid();
  inline void set_has_zoneid();
  inline void clear_has_zoneid();
  inline void set_has_keytype();
  inline void clear_has_keytype();
  inline void set_has_keyval();
  inline void clear_has_keyval();
  inline void set_has_teamid();
  inline void clear_has_teamid();
  inline void set_has_dupid();
  inline void clear_has_dupid();
  inline void set_has_str_param();
  inline void clear_has_str_param();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 sceneid_;
  ::google::protobuf::int32 ret_;
  ::google::protobuf::uint32 logicid_;
  ::google::protobuf::uint64 mapid_;
  ::google::protobuf::uint32 zoneid_;
  ::google::protobuf::int32 keytype_;
  ::google::protobuf::uint64 keyval_;
  ::google::protobuf::int32 teamid_;
  ::google::protobuf::int32 dupid_;
  ::std::string* str_param_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(10 + 31) / 32];

  friend void  protobuf_AddDesc_Dup_2eproto();
  friend void protobuf_AssignDesc_Dup_2eproto();
  friend void protobuf_ShutdownFile_Dup_2eproto();

  void InitAsDefaultInstance();
  static C2SCreateDupResultRsp* default_instance_;
};
// -------------------------------------------------------------------

class S2CNotifyCharEnterDup : public ::google::protobuf::Message {
 public:
  S2CNotifyCharEnterDup();
  virtual ~S2CNotifyCharEnterDup();

  S2CNotifyCharEnterDup(const S2CNotifyCharEnterDup& from);

  inline S2CNotifyCharEnterDup& operator=(const S2CNotifyCharEnterDup& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const S2CNotifyCharEnterDup& default_instance();

  void Swap(S2CNotifyCharEnterDup* other);

  // implements Message ----------------------------------------------

  S2CNotifyCharEnterDup* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const S2CNotifyCharEnterDup& from);
  void MergeFrom(const S2CNotifyCharEnterDup& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 cid = 1;
  inline bool has_cid() const;
  inline void clear_cid();
  static const int kCidFieldNumber = 1;
  inline ::google::protobuf::uint64 cid() const;
  inline void set_cid(::google::protobuf::uint64 value);

  // optional uint64 dupid = 2;
  inline bool has_dupid() const;
  inline void clear_dupid();
  static const int kDupidFieldNumber = 2;
  inline ::google::protobuf::uint64 dupid() const;
  inline void set_dupid(::google::protobuf::uint64 value);

  // optional uint64 sceneid = 3;
  inline bool has_sceneid() const;
  inline void clear_sceneid();
  static const int kSceneidFieldNumber = 3;
  inline ::google::protobuf::uint64 sceneid() const;
  inline void set_sceneid(::google::protobuf::uint64 value);

  // optional uint64 bornid = 4;
  inline bool has_bornid() const;
  inline void clear_bornid();
  static const int kBornidFieldNumber = 4;
  inline ::google::protobuf::uint64 bornid() const;
  inline void set_bornid(::google::protobuf::uint64 value);

  // optional int32 tran_tag = 5;
  inline bool has_tran_tag() const;
  inline void clear_tran_tag();
  static const int kTranTagFieldNumber = 5;
  inline ::google::protobuf::int32 tran_tag() const;
  inline void set_tran_tag(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.S2CNotifyCharEnterDup)
 private:
  inline void set_has_cid();
  inline void clear_has_cid();
  inline void set_has_dupid();
  inline void clear_has_dupid();
  inline void set_has_sceneid();
  inline void clear_has_sceneid();
  inline void set_has_bornid();
  inline void clear_has_bornid();
  inline void set_has_tran_tag();
  inline void clear_has_tran_tag();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 cid_;
  ::google::protobuf::uint64 dupid_;
  ::google::protobuf::uint64 sceneid_;
  ::google::protobuf::uint64 bornid_;
  ::google::protobuf::int32 tran_tag_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_Dup_2eproto();
  friend void protobuf_AssignDesc_Dup_2eproto();
  friend void protobuf_ShutdownFile_Dup_2eproto();

  void InitAsDefaultInstance();
  static S2CNotifyCharEnterDup* default_instance_;
};
// -------------------------------------------------------------------

class NotifyRebotEnterDup : public ::google::protobuf::Message {
 public:
  NotifyRebotEnterDup();
  virtual ~NotifyRebotEnterDup();

  NotifyRebotEnterDup(const NotifyRebotEnterDup& from);

  inline NotifyRebotEnterDup& operator=(const NotifyRebotEnterDup& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NotifyRebotEnterDup& default_instance();

  void Swap(NotifyRebotEnterDup* other);

  // implements Message ----------------------------------------------

  NotifyRebotEnterDup* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NotifyRebotEnterDup& from);
  void MergeFrom(const NotifyRebotEnterDup& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 cid = 1;
  inline bool has_cid() const;
  inline void clear_cid();
  static const int kCidFieldNumber = 1;
  inline ::google::protobuf::uint64 cid() const;
  inline void set_cid(::google::protobuf::uint64 value);

  // optional uint64 dupid = 2;
  inline bool has_dupid() const;
  inline void clear_dupid();
  static const int kDupidFieldNumber = 2;
  inline ::google::protobuf::uint64 dupid() const;
  inline void set_dupid(::google::protobuf::uint64 value);

  // optional uint64 sceneid = 3;
  inline bool has_sceneid() const;
  inline void clear_sceneid();
  static const int kSceneidFieldNumber = 3;
  inline ::google::protobuf::uint64 sceneid() const;
  inline void set_sceneid(::google::protobuf::uint64 value);

  // optional int32 bornid = 4;
  inline bool has_bornid() const;
  inline void clear_bornid();
  static const int kBornidFieldNumber = 4;
  inline ::google::protobuf::int32 bornid() const;
  inline void set_bornid(::google::protobuf::int32 value);

  // optional int32 teamid = 5;
  inline bool has_teamid() const;
  inline void clear_teamid();
  static const int kTeamidFieldNumber = 5;
  inline ::google::protobuf::int32 teamid() const;
  inline void set_teamid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.NotifyRebotEnterDup)
 private:
  inline void set_has_cid();
  inline void clear_has_cid();
  inline void set_has_dupid();
  inline void clear_has_dupid();
  inline void set_has_sceneid();
  inline void clear_has_sceneid();
  inline void set_has_bornid();
  inline void clear_has_bornid();
  inline void set_has_teamid();
  inline void clear_has_teamid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 cid_;
  ::google::protobuf::uint64 dupid_;
  ::google::protobuf::uint64 sceneid_;
  ::google::protobuf::int32 bornid_;
  ::google::protobuf::int32 teamid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_Dup_2eproto();
  friend void protobuf_AssignDesc_Dup_2eproto();
  friend void protobuf_ShutdownFile_Dup_2eproto();

  void InitAsDefaultInstance();
  static NotifyRebotEnterDup* default_instance_;
};
// -------------------------------------------------------------------

class L2SDupTeamOptReq : public ::google::protobuf::Message {
 public:
  L2SDupTeamOptReq();
  virtual ~L2SDupTeamOptReq();

  L2SDupTeamOptReq(const L2SDupTeamOptReq& from);

  inline L2SDupTeamOptReq& operator=(const L2SDupTeamOptReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const L2SDupTeamOptReq& default_instance();

  void Swap(L2SDupTeamOptReq* other);

  // implements Message ----------------------------------------------

  L2SDupTeamOptReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const L2SDupTeamOptReq& from);
  void MergeFrom(const L2SDupTeamOptReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 opt = 1;
  inline bool has_opt() const;
  inline void clear_opt();
  static const int kOptFieldNumber = 1;
  inline ::google::protobuf::int32 opt() const;
  inline void set_opt(::google::protobuf::int32 value);

  // optional uint32 mergeNum = 2;
  inline bool has_mergenum() const;
  inline void clear_mergenum();
  static const int kMergeNumFieldNumber = 2;
  inline ::google::protobuf::uint32 mergenum() const;
  inline void set_mergenum(::google::protobuf::uint32 value);

  // optional int32 teamId = 3;
  inline bool has_teamid() const;
  inline void clear_teamid();
  static const int kTeamIdFieldNumber = 3;
  inline ::google::protobuf::int32 teamid() const;
  inline void set_teamid(::google::protobuf::int32 value);

  // optional uint64 cid = 4;
  inline bool has_cid() const;
  inline void clear_cid();
  static const int kCidFieldNumber = 4;
  inline ::google::protobuf::uint64 cid() const;
  inline void set_cid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.L2SDupTeamOptReq)
 private:
  inline void set_has_opt();
  inline void clear_has_opt();
  inline void set_has_mergenum();
  inline void clear_has_mergenum();
  inline void set_has_teamid();
  inline void clear_has_teamid();
  inline void set_has_cid();
  inline void clear_has_cid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 opt_;
  ::google::protobuf::uint32 mergenum_;
  ::google::protobuf::uint64 cid_;
  ::google::protobuf::int32 teamid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_Dup_2eproto();
  friend void protobuf_AssignDesc_Dup_2eproto();
  friend void protobuf_ShutdownFile_Dup_2eproto();

  void InitAsDefaultInstance();
  static L2SDupTeamOptReq* default_instance_;
};
// -------------------------------------------------------------------

class S2CNofityRoleRebotEnterDup : public ::google::protobuf::Message {
 public:
  S2CNofityRoleRebotEnterDup();
  virtual ~S2CNofityRoleRebotEnterDup();

  S2CNofityRoleRebotEnterDup(const S2CNofityRoleRebotEnterDup& from);

  inline S2CNofityRoleRebotEnterDup& operator=(const S2CNofityRoleRebotEnterDup& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const S2CNofityRoleRebotEnterDup& default_instance();

  void Swap(S2CNofityRoleRebotEnterDup* other);

  // implements Message ----------------------------------------------

  S2CNofityRoleRebotEnterDup* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const S2CNofityRoleRebotEnterDup& from);
  void MergeFrom(const S2CNofityRoleRebotEnterDup& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 cid = 1;
  inline bool has_cid() const;
  inline void clear_cid();
  static const int kCidFieldNumber = 1;
  inline ::google::protobuf::uint64 cid() const;
  inline void set_cid(::google::protobuf::uint64 value);

  // optional uint64 dupid = 2;
  inline bool has_dupid() const;
  inline void clear_dupid();
  static const int kDupidFieldNumber = 2;
  inline ::google::protobuf::uint64 dupid() const;
  inline void set_dupid(::google::protobuf::uint64 value);

  // optional uint64 sceneid = 3;
  inline bool has_sceneid() const;
  inline void clear_sceneid();
  static const int kSceneidFieldNumber = 3;
  inline ::google::protobuf::uint64 sceneid() const;
  inline void set_sceneid(::google::protobuf::uint64 value);

  // optional int32 bornid = 4;
  inline bool has_bornid() const;
  inline void clear_bornid();
  static const int kBornidFieldNumber = 4;
  inline ::google::protobuf::int32 bornid() const;
  inline void set_bornid(::google::protobuf::int32 value);

  // optional int32 teamid = 5;
  inline bool has_teamid() const;
  inline void clear_teamid();
  static const int kTeamidFieldNumber = 5;
  inline ::google::protobuf::int32 teamid() const;
  inline void set_teamid(::google::protobuf::int32 value);

  // optional int32 logicid = 6;
  inline bool has_logicid() const;
  inline void clear_logicid();
  static const int kLogicidFieldNumber = 6;
  inline ::google::protobuf::int32 logicid() const;
  inline void set_logicid(::google::protobuf::int32 value);

  // optional int32 campid = 7;
  inline bool has_campid() const;
  inline void clear_campid();
  static const int kCampidFieldNumber = 7;
  inline ::google::protobuf::int32 campid() const;
  inline void set_campid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.S2CNofityRoleRebotEnterDup)
 private:
  inline void set_has_cid();
  inline void clear_has_cid();
  inline void set_has_dupid();
  inline void clear_has_dupid();
  inline void set_has_sceneid();
  inline void clear_has_sceneid();
  inline void set_has_bornid();
  inline void clear_has_bornid();
  inline void set_has_teamid();
  inline void clear_has_teamid();
  inline void set_has_logicid();
  inline void clear_has_logicid();
  inline void set_has_campid();
  inline void clear_has_campid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 cid_;
  ::google::protobuf::uint64 dupid_;
  ::google::protobuf::uint64 sceneid_;
  ::google::protobuf::int32 bornid_;
  ::google::protobuf::int32 teamid_;
  ::google::protobuf::int32 logicid_;
  ::google::protobuf::int32 campid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  friend void  protobuf_AddDesc_Dup_2eproto();
  friend void protobuf_AssignDesc_Dup_2eproto();
  friend void protobuf_ShutdownFile_Dup_2eproto();

  void InitAsDefaultInstance();
  static S2CNofityRoleRebotEnterDup* default_instance_;
};
// -------------------------------------------------------------------

class C2LRoleRobotEnterDupReq : public ::google::protobuf::Message {
 public:
  C2LRoleRobotEnterDupReq();
  virtual ~C2LRoleRobotEnterDupReq();

  C2LRoleRobotEnterDupReq(const C2LRoleRobotEnterDupReq& from);

  inline C2LRoleRobotEnterDupReq& operator=(const C2LRoleRobotEnterDupReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const C2LRoleRobotEnterDupReq& default_instance();

  void Swap(C2LRoleRobotEnterDupReq* other);

  // implements Message ----------------------------------------------

  C2LRoleRobotEnterDupReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const C2LRoleRobotEnterDupReq& from);
  void MergeFrom(const C2LRoleRobotEnterDupReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 cid = 1;
  inline bool has_cid() const;
  inline void clear_cid();
  static const int kCidFieldNumber = 1;
  inline ::google::protobuf::uint64 cid() const;
  inline void set_cid(::google::protobuf::uint64 value);

  // optional uint64 dupid = 2;
  inline bool has_dupid() const;
  inline void clear_dupid();
  static const int kDupidFieldNumber = 2;
  inline ::google::protobuf::uint64 dupid() const;
  inline void set_dupid(::google::protobuf::uint64 value);

  // optional uint64 sceneid = 3;
  inline bool has_sceneid() const;
  inline void clear_sceneid();
  static const int kSceneidFieldNumber = 3;
  inline ::google::protobuf::uint64 sceneid() const;
  inline void set_sceneid(::google::protobuf::uint64 value);

  // optional int32 bornid = 4;
  inline bool has_bornid() const;
  inline void clear_bornid();
  static const int kBornidFieldNumber = 4;
  inline ::google::protobuf::int32 bornid() const;
  inline void set_bornid(::google::protobuf::int32 value);

  // repeated .proto_ff.RoleMirrorData mirrors = 5;
  inline int mirrors_size() const;
  inline void clear_mirrors();
  static const int kMirrorsFieldNumber = 5;
  inline const ::proto_ff::RoleMirrorData& mirrors(int index) const;
  inline ::proto_ff::RoleMirrorData* mutable_mirrors(int index);
  inline ::proto_ff::RoleMirrorData* add_mirrors();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::RoleMirrorData >&
      mirrors() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::RoleMirrorData >*
      mutable_mirrors();

  // @@protoc_insertion_point(class_scope:proto_ff.C2LRoleRobotEnterDupReq)
 private:
  inline void set_has_cid();
  inline void clear_has_cid();
  inline void set_has_dupid();
  inline void clear_has_dupid();
  inline void set_has_sceneid();
  inline void clear_has_sceneid();
  inline void set_has_bornid();
  inline void clear_has_bornid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 cid_;
  ::google::protobuf::uint64 dupid_;
  ::google::protobuf::uint64 sceneid_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::RoleMirrorData > mirrors_;
  ::google::protobuf::int32 bornid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_Dup_2eproto();
  friend void protobuf_AssignDesc_Dup_2eproto();
  friend void protobuf_ShutdownFile_Dup_2eproto();

  void InitAsDefaultInstance();
  static C2LRoleRobotEnterDupReq* default_instance_;
};
// -------------------------------------------------------------------

class L2CDupResultRsp : public ::google::protobuf::Message {
 public:
  L2CDupResultRsp();
  virtual ~L2CDupResultRsp();

  L2CDupResultRsp(const L2CDupResultRsp& from);

  inline L2CDupResultRsp& operator=(const L2CDupResultRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const L2CDupResultRsp& default_instance();

  void Swap(L2CDupResultRsp* other);

  // implements Message ----------------------------------------------

  L2CDupResultRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const L2CDupResultRsp& from);
  void MergeFrom(const L2CDupResultRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 sceneId = 1;
  inline bool has_sceneid() const;
  inline void clear_sceneid();
  static const int kSceneIdFieldNumber = 1;
  inline ::google::protobuf::uint64 sceneid() const;
  inline void set_sceneid(::google::protobuf::uint64 value);

  // optional uint64 dupId = 2;
  inline bool has_dupid() const;
  inline void clear_dupid();
  static const int kDupIdFieldNumber = 2;
  inline ::google::protobuf::uint64 dupid() const;
  inline void set_dupid(::google::protobuf::uint64 value);

  // optional int32 result = 3;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 3;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.L2CDupResultRsp)
 private:
  inline void set_has_sceneid();
  inline void clear_has_sceneid();
  inline void set_has_dupid();
  inline void clear_has_dupid();
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 sceneid_;
  ::google::protobuf::uint64 dupid_;
  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_Dup_2eproto();
  friend void protobuf_AssignDesc_Dup_2eproto();
  friend void protobuf_ShutdownFile_Dup_2eproto();

  void InitAsDefaultInstance();
  static L2CDupResultRsp* default_instance_;
};
// -------------------------------------------------------------------

class C2LEnterRebotReq : public ::google::protobuf::Message {
 public:
  C2LEnterRebotReq();
  virtual ~C2LEnterRebotReq();

  C2LEnterRebotReq(const C2LEnterRebotReq& from);

  inline C2LEnterRebotReq& operator=(const C2LEnterRebotReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const C2LEnterRebotReq& default_instance();

  void Swap(C2LEnterRebotReq* other);

  // implements Message ----------------------------------------------

  C2LEnterRebotReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const C2LEnterRebotReq& from);
  void MergeFrom(const C2LEnterRebotReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 cid = 1;
  inline bool has_cid() const;
  inline void clear_cid();
  static const int kCidFieldNumber = 1;
  inline ::google::protobuf::uint64 cid() const;
  inline void set_cid(::google::protobuf::uint64 value);

  // optional uint64 dupid = 2;
  inline bool has_dupid() const;
  inline void clear_dupid();
  static const int kDupidFieldNumber = 2;
  inline ::google::protobuf::uint64 dupid() const;
  inline void set_dupid(::google::protobuf::uint64 value);

  // optional uint64 sceneid = 3;
  inline bool has_sceneid() const;
  inline void clear_sceneid();
  static const int kSceneidFieldNumber = 3;
  inline ::google::protobuf::uint64 sceneid() const;
  inline void set_sceneid(::google::protobuf::uint64 value);

  // optional int32 bornid = 4;
  inline bool has_bornid() const;
  inline void clear_bornid();
  static const int kBornidFieldNumber = 4;
  inline ::google::protobuf::int32 bornid() const;
  inline void set_bornid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.C2LEnterRebotReq)
 private:
  inline void set_has_cid();
  inline void clear_has_cid();
  inline void set_has_dupid();
  inline void clear_has_dupid();
  inline void set_has_sceneid();
  inline void clear_has_sceneid();
  inline void set_has_bornid();
  inline void clear_has_bornid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 cid_;
  ::google::protobuf::uint64 dupid_;
  ::google::protobuf::uint64 sceneid_;
  ::google::protobuf::int32 bornid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_Dup_2eproto();
  friend void protobuf_AssignDesc_Dup_2eproto();
  friend void protobuf_ShutdownFile_Dup_2eproto();

  void InitAsDefaultInstance();
  static C2LEnterRebotReq* default_instance_;
};
// -------------------------------------------------------------------

class C2SNotifyDupFinishRsp : public ::google::protobuf::Message {
 public:
  C2SNotifyDupFinishRsp();
  virtual ~C2SNotifyDupFinishRsp();

  C2SNotifyDupFinishRsp(const C2SNotifyDupFinishRsp& from);

  inline C2SNotifyDupFinishRsp& operator=(const C2SNotifyDupFinishRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const C2SNotifyDupFinishRsp& default_instance();

  void Swap(C2SNotifyDupFinishRsp* other);

  // implements Message ----------------------------------------------

  C2SNotifyDupFinishRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const C2SNotifyDupFinishRsp& from);
  void MergeFrom(const C2SNotifyDupFinishRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // optional uint64 sceneid = 2;
  inline bool has_sceneid() const;
  inline void clear_sceneid();
  static const int kSceneidFieldNumber = 2;
  inline ::google::protobuf::uint64 sceneid() const;
  inline void set_sceneid(::google::protobuf::uint64 value);

  // optional uint64 mapid = 3;
  inline bool has_mapid() const;
  inline void clear_mapid();
  static const int kMapidFieldNumber = 3;
  inline ::google::protobuf::uint64 mapid() const;
  inline void set_mapid(::google::protobuf::uint64 value);

  // optional uint32 logicid = 4;
  inline bool has_logicid() const;
  inline void clear_logicid();
  static const int kLogicidFieldNumber = 4;
  inline ::google::protobuf::uint32 logicid() const;
  inline void set_logicid(::google::protobuf::uint32 value);

  // optional uint32 zoneid = 5;
  inline bool has_zoneid() const;
  inline void clear_zoneid();
  static const int kZoneidFieldNumber = 5;
  inline ::google::protobuf::uint32 zoneid() const;
  inline void set_zoneid(::google::protobuf::uint32 value);

  // optional int32 keytype = 6;
  inline bool has_keytype() const;
  inline void clear_keytype();
  static const int kKeytypeFieldNumber = 6;
  inline ::google::protobuf::int32 keytype() const;
  inline void set_keytype(::google::protobuf::int32 value);

  // optional uint64 keyval = 7;
  inline bool has_keyval() const;
  inline void clear_keyval();
  static const int kKeyvalFieldNumber = 7;
  inline ::google::protobuf::uint64 keyval() const;
  inline void set_keyval(::google::protobuf::uint64 value);

  // optional int32 teamid = 8;
  inline bool has_teamid() const;
  inline void clear_teamid();
  static const int kTeamidFieldNumber = 8;
  inline ::google::protobuf::int32 teamid() const;
  inline void set_teamid(::google::protobuf::int32 value);

  // optional int64 dupid = 9;
  inline bool has_dupid() const;
  inline void clear_dupid();
  static const int kDupidFieldNumber = 9;
  inline ::google::protobuf::int64 dupid() const;
  inline void set_dupid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.C2SNotifyDupFinishRsp)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_sceneid();
  inline void clear_has_sceneid();
  inline void set_has_mapid();
  inline void clear_has_mapid();
  inline void set_has_logicid();
  inline void clear_has_logicid();
  inline void set_has_zoneid();
  inline void clear_has_zoneid();
  inline void set_has_keytype();
  inline void clear_has_keytype();
  inline void set_has_keyval();
  inline void clear_has_keyval();
  inline void set_has_teamid();
  inline void clear_has_teamid();
  inline void set_has_dupid();
  inline void clear_has_dupid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 sceneid_;
  ::google::protobuf::int32 result_;
  ::google::protobuf::uint32 logicid_;
  ::google::protobuf::uint64 mapid_;
  ::google::protobuf::uint32 zoneid_;
  ::google::protobuf::int32 keytype_;
  ::google::protobuf::uint64 keyval_;
  ::google::protobuf::int64 dupid_;
  ::google::protobuf::int32 teamid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(9 + 31) / 32];

  friend void  protobuf_AddDesc_Dup_2eproto();
  friend void protobuf_AssignDesc_Dup_2eproto();
  friend void protobuf_ShutdownFile_Dup_2eproto();

  void InitAsDefaultInstance();
  static C2SNotifyDupFinishRsp* default_instance_;
};
// -------------------------------------------------------------------

class C2STeamEnterDupReq : public ::google::protobuf::Message {
 public:
  C2STeamEnterDupReq();
  virtual ~C2STeamEnterDupReq();

  C2STeamEnterDupReq(const C2STeamEnterDupReq& from);

  inline C2STeamEnterDupReq& operator=(const C2STeamEnterDupReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const C2STeamEnterDupReq& default_instance();

  void Swap(C2STeamEnterDupReq* other);

  // implements Message ----------------------------------------------

  C2STeamEnterDupReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const C2STeamEnterDupReq& from);
  void MergeFrom(const C2STeamEnterDupReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 dupId = 1;
  inline bool has_dupid() const;
  inline void clear_dupid();
  static const int kDupIdFieldNumber = 1;
  inline ::google::protobuf::int32 dupid() const;
  inline void set_dupid(::google::protobuf::int32 value);

  // optional .proto_ff.CreateSceneParamProto params = 3;
  inline bool has_params() const;
  inline void clear_params();
  static const int kParamsFieldNumber = 3;
  inline const ::proto_ff::CreateSceneParamProto& params() const;
  inline ::proto_ff::CreateSceneParamProto* mutable_params();
  inline ::proto_ff::CreateSceneParamProto* release_params();
  inline void set_allocated_params(::proto_ff::CreateSceneParamProto* params);

  // optional int32 isdyn = 4;
  inline bool has_isdyn() const;
  inline void clear_isdyn();
  static const int kIsdynFieldNumber = 4;
  inline ::google::protobuf::int32 isdyn() const;
  inline void set_isdyn(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.C2STeamEnterDupReq)
 private:
  inline void set_has_dupid();
  inline void clear_has_dupid();
  inline void set_has_params();
  inline void clear_has_params();
  inline void set_has_isdyn();
  inline void clear_has_isdyn();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::proto_ff::CreateSceneParamProto* params_;
  ::google::protobuf::int32 dupid_;
  ::google::protobuf::int32 isdyn_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_Dup_2eproto();
  friend void protobuf_AssignDesc_Dup_2eproto();
  friend void protobuf_ShutdownFile_Dup_2eproto();

  void InitAsDefaultInstance();
  static C2STeamEnterDupReq* default_instance_;
};
// -------------------------------------------------------------------

class S2LCreateDupReq : public ::google::protobuf::Message {
 public:
  S2LCreateDupReq();
  virtual ~S2LCreateDupReq();

  S2LCreateDupReq(const S2LCreateDupReq& from);

  inline S2LCreateDupReq& operator=(const S2LCreateDupReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const S2LCreateDupReq& default_instance();

  void Swap(S2LCreateDupReq* other);

  // implements Message ----------------------------------------------

  S2LCreateDupReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const S2LCreateDupReq& from);
  void MergeFrom(const S2LCreateDupReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .proto_ff.CreateSceneParamProto params = 1;
  inline bool has_params() const;
  inline void clear_params();
  static const int kParamsFieldNumber = 1;
  inline const ::proto_ff::CreateSceneParamProto& params() const;
  inline ::proto_ff::CreateSceneParamProto* mutable_params();
  inline ::proto_ff::CreateSceneParamProto* release_params();
  inline void set_allocated_params(::proto_ff::CreateSceneParamProto* params);

  // optional bytes ex_params = 2;
  inline bool has_ex_params() const;
  inline void clear_ex_params();
  static const int kExParamsFieldNumber = 2;
  inline const ::std::string& ex_params() const;
  inline void set_ex_params(const ::std::string& value);
  inline void set_ex_params(const char* value);
  inline void set_ex_params(const void* value, size_t size);
  inline ::std::string* mutable_ex_params();
  inline ::std::string* release_ex_params();
  inline void set_allocated_ex_params(::std::string* ex_params);

  // @@protoc_insertion_point(class_scope:proto_ff.S2LCreateDupReq)
 private:
  inline void set_has_params();
  inline void clear_has_params();
  inline void set_has_ex_params();
  inline void clear_has_ex_params();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::proto_ff::CreateSceneParamProto* params_;
  ::std::string* ex_params_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Dup_2eproto();
  friend void protobuf_AssignDesc_Dup_2eproto();
  friend void protobuf_ShutdownFile_Dup_2eproto();

  void InitAsDefaultInstance();
  static S2LCreateDupReq* default_instance_;
};
// -------------------------------------------------------------------

class L2SCreateDupRsp : public ::google::protobuf::Message {
 public:
  L2SCreateDupRsp();
  virtual ~L2SCreateDupRsp();

  L2SCreateDupRsp(const L2SCreateDupRsp& from);

  inline L2SCreateDupRsp& operator=(const L2SCreateDupRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const L2SCreateDupRsp& default_instance();

  void Swap(L2SCreateDupRsp* other);

  // implements Message ----------------------------------------------

  L2SCreateDupRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const L2SCreateDupRsp& from);
  void MergeFrom(const L2SCreateDupRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .proto_ff.C2SCreateDupResultRsp rsp = 1;
  inline bool has_rsp() const;
  inline void clear_rsp();
  static const int kRspFieldNumber = 1;
  inline const ::proto_ff::C2SCreateDupResultRsp& rsp() const;
  inline ::proto_ff::C2SCreateDupResultRsp* mutable_rsp();
  inline ::proto_ff::C2SCreateDupResultRsp* release_rsp();
  inline void set_allocated_rsp(::proto_ff::C2SCreateDupResultRsp* rsp);

  // @@protoc_insertion_point(class_scope:proto_ff.L2SCreateDupRsp)
 private:
  inline void set_has_rsp();
  inline void clear_has_rsp();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::proto_ff::C2SCreateDupResultRsp* rsp_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Dup_2eproto();
  friend void protobuf_AssignDesc_Dup_2eproto();
  friend void protobuf_ShutdownFile_Dup_2eproto();

  void InitAsDefaultInstance();
  static L2SCreateDupRsp* default_instance_;
};
// -------------------------------------------------------------------

class S2LNotifyRoleEnterDup : public ::google::protobuf::Message {
 public:
  S2LNotifyRoleEnterDup();
  virtual ~S2LNotifyRoleEnterDup();

  S2LNotifyRoleEnterDup(const S2LNotifyRoleEnterDup& from);

  inline S2LNotifyRoleEnterDup& operator=(const S2LNotifyRoleEnterDup& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const S2LNotifyRoleEnterDup& default_instance();

  void Swap(S2LNotifyRoleEnterDup* other);

  // implements Message ----------------------------------------------

  S2LNotifyRoleEnterDup* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const S2LNotifyRoleEnterDup& from);
  void MergeFrom(const S2LNotifyRoleEnterDup& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 cid = 1;
  inline bool has_cid() const;
  inline void clear_cid();
  static const int kCidFieldNumber = 1;
  inline ::google::protobuf::int64 cid() const;
  inline void set_cid(::google::protobuf::int64 value);

  // optional int32 zid = 2;
  inline bool has_zid() const;
  inline void clear_zid();
  static const int kZidFieldNumber = 2;
  inline ::google::protobuf::int32 zid() const;
  inline void set_zid(::google::protobuf::int32 value);

  // optional uint64 sceneid = 3;
  inline bool has_sceneid() const;
  inline void clear_sceneid();
  static const int kSceneidFieldNumber = 3;
  inline ::google::protobuf::uint64 sceneid() const;
  inline void set_sceneid(::google::protobuf::uint64 value);

  // optional uint64 mapid = 4;
  inline bool has_mapid() const;
  inline void clear_mapid();
  static const int kMapidFieldNumber = 4;
  inline ::google::protobuf::uint64 mapid() const;
  inline void set_mapid(::google::protobuf::uint64 value);

  // optional int32 bornid = 5;
  inline bool has_bornid() const;
  inline void clear_bornid();
  static const int kBornidFieldNumber = 5;
  inline ::google::protobuf::int32 bornid() const;
  inline void set_bornid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.S2LNotifyRoleEnterDup)
 private:
  inline void set_has_cid();
  inline void clear_has_cid();
  inline void set_has_zid();
  inline void clear_has_zid();
  inline void set_has_sceneid();
  inline void clear_has_sceneid();
  inline void set_has_mapid();
  inline void clear_has_mapid();
  inline void set_has_bornid();
  inline void clear_has_bornid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 cid_;
  ::google::protobuf::uint64 sceneid_;
  ::google::protobuf::int32 zid_;
  ::google::protobuf::int32 bornid_;
  ::google::protobuf::uint64 mapid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_Dup_2eproto();
  friend void protobuf_AssignDesc_Dup_2eproto();
  friend void protobuf_ShutdownFile_Dup_2eproto();

  void InitAsDefaultInstance();
  static S2LNotifyRoleEnterDup* default_instance_;
};
// -------------------------------------------------------------------

class L2SNotifyDupFinishRsp : public ::google::protobuf::Message {
 public:
  L2SNotifyDupFinishRsp();
  virtual ~L2SNotifyDupFinishRsp();

  L2SNotifyDupFinishRsp(const L2SNotifyDupFinishRsp& from);

  inline L2SNotifyDupFinishRsp& operator=(const L2SNotifyDupFinishRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const L2SNotifyDupFinishRsp& default_instance();

  void Swap(L2SNotifyDupFinishRsp* other);

  // implements Message ----------------------------------------------

  L2SNotifyDupFinishRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const L2SNotifyDupFinishRsp& from);
  void MergeFrom(const L2SNotifyDupFinishRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .proto_ff.C2SNotifyDupFinishRsp rsp = 1;
  inline bool has_rsp() const;
  inline void clear_rsp();
  static const int kRspFieldNumber = 1;
  inline const ::proto_ff::C2SNotifyDupFinishRsp& rsp() const;
  inline ::proto_ff::C2SNotifyDupFinishRsp* mutable_rsp();
  inline ::proto_ff::C2SNotifyDupFinishRsp* release_rsp();
  inline void set_allocated_rsp(::proto_ff::C2SNotifyDupFinishRsp* rsp);

  // @@protoc_insertion_point(class_scope:proto_ff.L2SNotifyDupFinishRsp)
 private:
  inline void set_has_rsp();
  inline void clear_has_rsp();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::proto_ff::C2SNotifyDupFinishRsp* rsp_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Dup_2eproto();
  friend void protobuf_AssignDesc_Dup_2eproto();
  friend void protobuf_ShutdownFile_Dup_2eproto();

  void InitAsDefaultInstance();
  static L2SNotifyDupFinishRsp* default_instance_;
};
// -------------------------------------------------------------------

class L2CGHostDupRankReq : public ::google::protobuf::Message {
 public:
  L2CGHostDupRankReq();
  virtual ~L2CGHostDupRankReq();

  L2CGHostDupRankReq(const L2CGHostDupRankReq& from);

  inline L2CGHostDupRankReq& operator=(const L2CGHostDupRankReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const L2CGHostDupRankReq& default_instance();

  void Swap(L2CGHostDupRankReq* other);

  // implements Message ----------------------------------------------

  L2CGHostDupRankReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const L2CGHostDupRankReq& from);
  void MergeFrom(const L2CGHostDupRankReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 cid = 1;
  inline bool has_cid() const;
  inline void clear_cid();
  static const int kCidFieldNumber = 1;
  inline ::google::protobuf::uint64 cid() const;
  inline void set_cid(::google::protobuf::uint64 value);

  // optional int32 wave = 2;
  inline bool has_wave() const;
  inline void clear_wave();
  static const int kWaveFieldNumber = 2;
  inline ::google::protobuf::int32 wave() const;
  inline void set_wave(::google::protobuf::int32 value);

  // optional int32 time = 3;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 3;
  inline ::google::protobuf::int32 time() const;
  inline void set_time(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.L2CGHostDupRankReq)
 private:
  inline void set_has_cid();
  inline void clear_has_cid();
  inline void set_has_wave();
  inline void clear_has_wave();
  inline void set_has_time();
  inline void clear_has_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 cid_;
  ::google::protobuf::int32 wave_;
  ::google::protobuf::int32 time_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_Dup_2eproto();
  friend void protobuf_AssignDesc_Dup_2eproto();
  friend void protobuf_ShutdownFile_Dup_2eproto();

  void InitAsDefaultInstance();
  static L2CGHostDupRankReq* default_instance_;
};
// -------------------------------------------------------------------

class L2CUpdateGHostDupRankReq : public ::google::protobuf::Message {
 public:
  L2CUpdateGHostDupRankReq();
  virtual ~L2CUpdateGHostDupRankReq();

  L2CUpdateGHostDupRankReq(const L2CUpdateGHostDupRankReq& from);

  inline L2CUpdateGHostDupRankReq& operator=(const L2CUpdateGHostDupRankReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const L2CUpdateGHostDupRankReq& default_instance();

  void Swap(L2CUpdateGHostDupRankReq* other);

  // implements Message ----------------------------------------------

  L2CUpdateGHostDupRankReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const L2CUpdateGHostDupRankReq& from);
  void MergeFrom(const L2CUpdateGHostDupRankReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 cid = 1;
  inline bool has_cid() const;
  inline void clear_cid();
  static const int kCidFieldNumber = 1;
  inline ::google::protobuf::uint64 cid() const;
  inline void set_cid(::google::protobuf::uint64 value);

  // optional int32 wave = 2;
  inline bool has_wave() const;
  inline void clear_wave();
  static const int kWaveFieldNumber = 2;
  inline ::google::protobuf::int32 wave() const;
  inline void set_wave(::google::protobuf::int32 value);

  // optional int32 time = 3;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 3;
  inline ::google::protobuf::int32 time() const;
  inline void set_time(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.L2CUpdateGHostDupRankReq)
 private:
  inline void set_has_cid();
  inline void clear_has_cid();
  inline void set_has_wave();
  inline void clear_has_wave();
  inline void set_has_time();
  inline void clear_has_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 cid_;
  ::google::protobuf::int32 wave_;
  ::google::protobuf::int32 time_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_Dup_2eproto();
  friend void protobuf_AssignDesc_Dup_2eproto();
  friend void protobuf_ShutdownFile_Dup_2eproto();

  void InitAsDefaultInstance();
  static L2CUpdateGHostDupRankReq* default_instance_;
};
// -------------------------------------------------------------------

class L2CSynPassYaotaReq : public ::google::protobuf::Message {
 public:
  L2CSynPassYaotaReq();
  virtual ~L2CSynPassYaotaReq();

  L2CSynPassYaotaReq(const L2CSynPassYaotaReq& from);

  inline L2CSynPassYaotaReq& operator=(const L2CSynPassYaotaReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const L2CSynPassYaotaReq& default_instance();

  void Swap(L2CSynPassYaotaReq* other);

  // implements Message ----------------------------------------------

  L2CSynPassYaotaReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const L2CSynPassYaotaReq& from);
  void MergeFrom(const L2CSynPassYaotaReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 dupid = 1;
  inline bool has_dupid() const;
  inline void clear_dupid();
  static const int kDupidFieldNumber = 1;
  inline ::google::protobuf::int32 dupid() const;
  inline void set_dupid(::google::protobuf::int32 value);

  // repeated .proto_ff.RolePlayerMiniInfo info = 2;
  inline int info_size() const;
  inline void clear_info();
  static const int kInfoFieldNumber = 2;
  inline const ::proto_ff::RolePlayerMiniInfo& info(int index) const;
  inline ::proto_ff::RolePlayerMiniInfo* mutable_info(int index);
  inline ::proto_ff::RolePlayerMiniInfo* add_info();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::RolePlayerMiniInfo >&
      info() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::RolePlayerMiniInfo >*
      mutable_info();

  // optional uint64 time = 3;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 3;
  inline ::google::protobuf::uint64 time() const;
  inline void set_time(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.L2CSynPassYaotaReq)
 private:
  inline void set_has_dupid();
  inline void clear_has_dupid();
  inline void set_has_time();
  inline void clear_has_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::RolePlayerMiniInfo > info_;
  ::google::protobuf::uint64 time_;
  ::google::protobuf::int32 dupid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_Dup_2eproto();
  friend void protobuf_AssignDesc_Dup_2eproto();
  friend void protobuf_ShutdownFile_Dup_2eproto();

  void InitAsDefaultInstance();
  static L2CSynPassYaotaReq* default_instance_;
};
// -------------------------------------------------------------------

class NotifyDupTeamDisReq : public ::google::protobuf::Message {
 public:
  NotifyDupTeamDisReq();
  virtual ~NotifyDupTeamDisReq();

  NotifyDupTeamDisReq(const NotifyDupTeamDisReq& from);

  inline NotifyDupTeamDisReq& operator=(const NotifyDupTeamDisReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NotifyDupTeamDisReq& default_instance();

  void Swap(NotifyDupTeamDisReq* other);

  // implements Message ----------------------------------------------

  NotifyDupTeamDisReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NotifyDupTeamDisReq& from);
  void MergeFrom(const NotifyDupTeamDisReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 teamid = 1;
  inline bool has_teamid() const;
  inline void clear_teamid();
  static const int kTeamidFieldNumber = 1;
  inline ::google::protobuf::int32 teamid() const;
  inline void set_teamid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.NotifyDupTeamDisReq)
 private:
  inline void set_has_teamid();
  inline void clear_has_teamid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 teamid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Dup_2eproto();
  friend void protobuf_AssignDesc_Dup_2eproto();
  friend void protobuf_ShutdownFile_Dup_2eproto();

  void InitAsDefaultInstance();
  static NotifyDupTeamDisReq* default_instance_;
};
// -------------------------------------------------------------------

class LCNotifyYaotaFirstPassReq : public ::google::protobuf::Message {
 public:
  LCNotifyYaotaFirstPassReq();
  virtual ~LCNotifyYaotaFirstPassReq();

  LCNotifyYaotaFirstPassReq(const LCNotifyYaotaFirstPassReq& from);

  inline LCNotifyYaotaFirstPassReq& operator=(const LCNotifyYaotaFirstPassReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LCNotifyYaotaFirstPassReq& default_instance();

  void Swap(LCNotifyYaotaFirstPassReq* other);

  // implements Message ----------------------------------------------

  LCNotifyYaotaFirstPassReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LCNotifyYaotaFirstPassReq& from);
  void MergeFrom(const LCNotifyYaotaFirstPassReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 cid = 1;
  inline bool has_cid() const;
  inline void clear_cid();
  static const int kCidFieldNumber = 1;
  inline ::google::protobuf::uint64 cid() const;
  inline void set_cid(::google::protobuf::uint64 value);

  // repeated int32 recved_first_pass_ids = 2;
  inline int recved_first_pass_ids_size() const;
  inline void clear_recved_first_pass_ids();
  static const int kRecvedFirstPassIdsFieldNumber = 2;
  inline ::google::protobuf::int32 recved_first_pass_ids(int index) const;
  inline void set_recved_first_pass_ids(int index, ::google::protobuf::int32 value);
  inline void add_recved_first_pass_ids(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      recved_first_pass_ids() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_recved_first_pass_ids();

  // @@protoc_insertion_point(class_scope:proto_ff.LCNotifyYaotaFirstPassReq)
 private:
  inline void set_has_cid();
  inline void clear_has_cid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 cid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > recved_first_pass_ids_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Dup_2eproto();
  friend void protobuf_AssignDesc_Dup_2eproto();
  friend void protobuf_ShutdownFile_Dup_2eproto();

  void InitAsDefaultInstance();
  static LCNotifyYaotaFirstPassReq* default_instance_;
};
// -------------------------------------------------------------------

class CLYaotaRecvReq : public ::google::protobuf::Message {
 public:
  CLYaotaRecvReq();
  virtual ~CLYaotaRecvReq();

  CLYaotaRecvReq(const CLYaotaRecvReq& from);

  inline CLYaotaRecvReq& operator=(const CLYaotaRecvReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CLYaotaRecvReq& default_instance();

  void Swap(CLYaotaRecvReq* other);

  // implements Message ----------------------------------------------

  CLYaotaRecvReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CLYaotaRecvReq& from);
  void MergeFrom(const CLYaotaRecvReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 cid = 1;
  inline bool has_cid() const;
  inline void clear_cid();
  static const int kCidFieldNumber = 1;
  inline ::google::protobuf::uint64 cid() const;
  inline void set_cid(::google::protobuf::uint64 value);

  // optional int32 dupid = 2;
  inline bool has_dupid() const;
  inline void clear_dupid();
  static const int kDupidFieldNumber = 2;
  inline ::google::protobuf::int32 dupid() const;
  inline void set_dupid(::google::protobuf::int32 value);

  // optional int32 type = 3;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 3;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // repeated int32 first_pass_ids = 4;
  inline int first_pass_ids_size() const;
  inline void clear_first_pass_ids();
  static const int kFirstPassIdsFieldNumber = 4;
  inline ::google::protobuf::int32 first_pass_ids(int index) const;
  inline void set_first_pass_ids(int index, ::google::protobuf::int32 value);
  inline void add_first_pass_ids(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      first_pass_ids() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_first_pass_ids();

  // @@protoc_insertion_point(class_scope:proto_ff.CLYaotaRecvReq)
 private:
  inline void set_has_cid();
  inline void clear_has_cid();
  inline void set_has_dupid();
  inline void clear_has_dupid();
  inline void set_has_type();
  inline void clear_has_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 cid_;
  ::google::protobuf::int32 dupid_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > first_pass_ids_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_Dup_2eproto();
  friend void protobuf_AssignDesc_Dup_2eproto();
  friend void protobuf_ShutdownFile_Dup_2eproto();

  void InitAsDefaultInstance();
  static CLYaotaRecvReq* default_instance_;
};
// ===================================================================


// ===================================================================

// DupDropProto

// repeated .proto_ff.ItemProtoInfo pick_item = 1;
inline int DupDropProto::pick_item_size() const {
  return pick_item_.size();
}
inline void DupDropProto::clear_pick_item() {
  pick_item_.Clear();
}
inline const ::proto_ff::ItemProtoInfo& DupDropProto::pick_item(int index) const {
  return pick_item_.Get(index);
}
inline ::proto_ff::ItemProtoInfo* DupDropProto::mutable_pick_item(int index) {
  return pick_item_.Mutable(index);
}
inline ::proto_ff::ItemProtoInfo* DupDropProto::add_pick_item() {
  return pick_item_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::ItemProtoInfo >&
DupDropProto::pick_item() const {
  return pick_item_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::ItemProtoInfo >*
DupDropProto::mutable_pick_item() {
  return &pick_item_;
}

// optional int64 pick_gold = 2;
inline bool DupDropProto::has_pick_gold() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DupDropProto::set_has_pick_gold() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DupDropProto::clear_has_pick_gold() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DupDropProto::clear_pick_gold() {
  pick_gold_ = GOOGLE_LONGLONG(0);
  clear_has_pick_gold();
}
inline ::google::protobuf::int64 DupDropProto::pick_gold() const {
  return pick_gold_;
}
inline void DupDropProto::set_pick_gold(::google::protobuf::int64 value) {
  set_has_pick_gold();
  pick_gold_ = value;
}

// optional int64 pick_exp = 3;
inline bool DupDropProto::has_pick_exp() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DupDropProto::set_has_pick_exp() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DupDropProto::clear_has_pick_exp() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DupDropProto::clear_pick_exp() {
  pick_exp_ = GOOGLE_LONGLONG(0);
  clear_has_pick_exp();
}
inline ::google::protobuf::int64 DupDropProto::pick_exp() const {
  return pick_exp_;
}
inline void DupDropProto::set_pick_exp(::google::protobuf::int64 value) {
  set_has_pick_exp();
  pick_exp_ = value;
}

// optional int32 kill_num = 4;
inline bool DupDropProto::has_kill_num() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void DupDropProto::set_has_kill_num() {
  _has_bits_[0] |= 0x00000008u;
}
inline void DupDropProto::clear_has_kill_num() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void DupDropProto::clear_kill_num() {
  kill_num_ = 0;
  clear_has_kill_num();
}
inline ::google::protobuf::int32 DupDropProto::kill_num() const {
  return kill_num_;
}
inline void DupDropProto::set_kill_num(::google::protobuf::int32 value) {
  set_has_kill_num();
  kill_num_ = value;
}

// repeated .proto_ff.ItemProtoInfo star3 = 5;
inline int DupDropProto::star3_size() const {
  return star3_.size();
}
inline void DupDropProto::clear_star3() {
  star3_.Clear();
}
inline const ::proto_ff::ItemProtoInfo& DupDropProto::star3(int index) const {
  return star3_.Get(index);
}
inline ::proto_ff::ItemProtoInfo* DupDropProto::mutable_star3(int index) {
  return star3_.Mutable(index);
}
inline ::proto_ff::ItemProtoInfo* DupDropProto::add_star3() {
  return star3_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::ItemProtoInfo >&
DupDropProto::star3() const {
  return star3_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::ItemProtoInfo >*
DupDropProto::mutable_star3() {
  return &star3_;
}

// -------------------------------------------------------------------

// DupTowerRecordEntry

// optional string name = 1;
inline bool DupTowerRecordEntry::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DupTowerRecordEntry::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DupTowerRecordEntry::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DupTowerRecordEntry::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& DupTowerRecordEntry::name() const {
  return *name_;
}
inline void DupTowerRecordEntry::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void DupTowerRecordEntry::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void DupTowerRecordEntry::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* DupTowerRecordEntry::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* DupTowerRecordEntry::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void DupTowerRecordEntry::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional uint64 time = 2;
inline bool DupTowerRecordEntry::has_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DupTowerRecordEntry::set_has_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DupTowerRecordEntry::clear_has_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DupTowerRecordEntry::clear_time() {
  time_ = GOOGLE_ULONGLONG(0);
  clear_has_time();
}
inline ::google::protobuf::uint64 DupTowerRecordEntry::time() const {
  return time_;
}
inline void DupTowerRecordEntry::set_time(::google::protobuf::uint64 value) {
  set_has_time();
  time_ = value;
}

// -------------------------------------------------------------------

// DupTeamInviteState

// optional uint64 cid = 1;
inline bool DupTeamInviteState::has_cid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DupTeamInviteState::set_has_cid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DupTeamInviteState::clear_has_cid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DupTeamInviteState::clear_cid() {
  cid_ = GOOGLE_ULONGLONG(0);
  clear_has_cid();
}
inline ::google::protobuf::uint64 DupTeamInviteState::cid() const {
  return cid_;
}
inline void DupTeamInviteState::set_cid(::google::protobuf::uint64 value) {
  set_has_cid();
  cid_ = value;
}

// optional int32 state = 2;
inline bool DupTeamInviteState::has_state() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DupTeamInviteState::set_has_state() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DupTeamInviteState::clear_has_state() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DupTeamInviteState::clear_state() {
  state_ = 0;
  clear_has_state();
}
inline ::google::protobuf::int32 DupTeamInviteState::state() const {
  return state_;
}
inline void DupTeamInviteState::set_state(::google::protobuf::int32 value) {
  set_has_state();
  state_ = value;
}

// -------------------------------------------------------------------

// TowerDupData

// repeated int64 ids = 1;
inline int TowerDupData::ids_size() const {
  return ids_.size();
}
inline void TowerDupData::clear_ids() {
  ids_.Clear();
}
inline ::google::protobuf::int64 TowerDupData::ids(int index) const {
  return ids_.Get(index);
}
inline void TowerDupData::set_ids(int index, ::google::protobuf::int64 value) {
  ids_.Set(index, value);
}
inline void TowerDupData::add_ids(::google::protobuf::int64 value) {
  ids_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
TowerDupData::ids() const {
  return ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
TowerDupData::mutable_ids() {
  return &ids_;
}

// -------------------------------------------------------------------

// PassDupData

// optional int64 id = 1;
inline bool PassDupData::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PassDupData::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PassDupData::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PassDupData::clear_id() {
  id_ = GOOGLE_LONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::int64 PassDupData::id() const {
  return id_;
}
inline void PassDupData::set_id(::google::protobuf::int64 value) {
  set_has_id();
  id_ = value;
}

// optional int32 star = 2;
inline bool PassDupData::has_star() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PassDupData::set_has_star() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PassDupData::clear_has_star() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PassDupData::clear_star() {
  star_ = 0;
  clear_has_star();
}
inline ::google::protobuf::int32 PassDupData::star() const {
  return star_;
}
inline void PassDupData::set_star(::google::protobuf::int32 value) {
  set_has_star();
  star_ = value;
}

// -------------------------------------------------------------------

// PassGhostData

// optional int32 wave = 1;
inline bool PassGhostData::has_wave() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PassGhostData::set_has_wave() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PassGhostData::clear_has_wave() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PassGhostData::clear_wave() {
  wave_ = 0;
  clear_has_wave();
}
inline ::google::protobuf::int32 PassGhostData::wave() const {
  return wave_;
}
inline void PassGhostData::set_wave(::google::protobuf::int32 value) {
  set_has_wave();
  wave_ = value;
}

// optional int32 time = 2;
inline bool PassGhostData::has_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PassGhostData::set_has_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PassGhostData::clear_has_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PassGhostData::clear_time() {
  time_ = 0;
  clear_has_time();
}
inline ::google::protobuf::int32 PassGhostData::time() const {
  return time_;
}
inline void PassGhostData::set_time(::google::protobuf::int32 value) {
  set_has_time();
  time_ = value;
}

// repeated int32 recv_ids = 3;
inline int PassGhostData::recv_ids_size() const {
  return recv_ids_.size();
}
inline void PassGhostData::clear_recv_ids() {
  recv_ids_.Clear();
}
inline ::google::protobuf::int32 PassGhostData::recv_ids(int index) const {
  return recv_ids_.Get(index);
}
inline void PassGhostData::set_recv_ids(int index, ::google::protobuf::int32 value) {
  recv_ids_.Set(index, value);
}
inline void PassGhostData::add_recv_ids(::google::protobuf::int32 value) {
  recv_ids_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
PassGhostData::recv_ids() const {
  return recv_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
PassGhostData::mutable_recv_ids() {
  return &recv_ids_;
}

// -------------------------------------------------------------------

// PassMoyuData

// repeated int32 recv_layer = 1;
inline int PassMoyuData::recv_layer_size() const {
  return recv_layer_.size();
}
inline void PassMoyuData::clear_recv_layer() {
  recv_layer_.Clear();
}
inline ::google::protobuf::int32 PassMoyuData::recv_layer(int index) const {
  return recv_layer_.Get(index);
}
inline void PassMoyuData::set_recv_layer(int index, ::google::protobuf::int32 value) {
  recv_layer_.Set(index, value);
}
inline void PassMoyuData::add_recv_layer(::google::protobuf::int32 value) {
  recv_layer_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
PassMoyuData::recv_layer() const {
  return recv_layer_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
PassMoyuData::mutable_recv_layer() {
  return &recv_layer_;
}

// optional uint64 day_harm = 2;
inline bool PassMoyuData::has_day_harm() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PassMoyuData::set_has_day_harm() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PassMoyuData::clear_has_day_harm() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PassMoyuData::clear_day_harm() {
  day_harm_ = GOOGLE_ULONGLONG(0);
  clear_has_day_harm();
}
inline ::google::protobuf::uint64 PassMoyuData::day_harm() const {
  return day_harm_;
}
inline void PassMoyuData::set_day_harm(::google::protobuf::uint64 value) {
  set_has_day_harm();
  day_harm_ = value;
}

// optional uint64 week_harm = 3;
inline bool PassMoyuData::has_week_harm() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PassMoyuData::set_has_week_harm() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PassMoyuData::clear_has_week_harm() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PassMoyuData::clear_week_harm() {
  week_harm_ = GOOGLE_ULONGLONG(0);
  clear_has_week_harm();
}
inline ::google::protobuf::uint64 PassMoyuData::week_harm() const {
  return week_harm_;
}
inline void PassMoyuData::set_week_harm(::google::protobuf::uint64 value) {
  set_has_week_harm();
  week_harm_ = value;
}

// optional uint64 last_day_harm = 4;
inline bool PassMoyuData::has_last_day_harm() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PassMoyuData::set_has_last_day_harm() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PassMoyuData::clear_has_last_day_harm() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PassMoyuData::clear_last_day_harm() {
  last_day_harm_ = GOOGLE_ULONGLONG(0);
  clear_has_last_day_harm();
}
inline ::google::protobuf::uint64 PassMoyuData::last_day_harm() const {
  return last_day_harm_;
}
inline void PassMoyuData::set_last_day_harm(::google::protobuf::uint64 value) {
  set_has_last_day_harm();
  last_day_harm_ = value;
}

// optional uint64 last_week_harm = 5;
inline bool PassMoyuData::has_last_week_harm() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PassMoyuData::set_has_last_week_harm() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PassMoyuData::clear_has_last_week_harm() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PassMoyuData::clear_last_week_harm() {
  last_week_harm_ = GOOGLE_ULONGLONG(0);
  clear_has_last_week_harm();
}
inline ::google::protobuf::uint64 PassMoyuData::last_week_harm() const {
  return last_week_harm_;
}
inline void PassMoyuData::set_last_week_harm(::google::protobuf::uint64 value) {
  set_has_last_week_harm();
  last_week_harm_ = value;
}

// -------------------------------------------------------------------

// YaoTaData

// repeated int32 pass_ids = 1;
inline int YaoTaData::pass_ids_size() const {
  return pass_ids_.size();
}
inline void YaoTaData::clear_pass_ids() {
  pass_ids_.Clear();
}
inline ::google::protobuf::int32 YaoTaData::pass_ids(int index) const {
  return pass_ids_.Get(index);
}
inline void YaoTaData::set_pass_ids(int index, ::google::protobuf::int32 value) {
  pass_ids_.Set(index, value);
}
inline void YaoTaData::add_pass_ids(::google::protobuf::int32 value) {
  pass_ids_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
YaoTaData::pass_ids() const {
  return pass_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
YaoTaData::mutable_pass_ids() {
  return &pass_ids_;
}

// repeated int32 first_pass_ids = 2;
inline int YaoTaData::first_pass_ids_size() const {
  return first_pass_ids_.size();
}
inline void YaoTaData::clear_first_pass_ids() {
  first_pass_ids_.Clear();
}
inline ::google::protobuf::int32 YaoTaData::first_pass_ids(int index) const {
  return first_pass_ids_.Get(index);
}
inline void YaoTaData::set_first_pass_ids(int index, ::google::protobuf::int32 value) {
  first_pass_ids_.Set(index, value);
}
inline void YaoTaData::add_first_pass_ids(::google::protobuf::int32 value) {
  first_pass_ids_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
YaoTaData::first_pass_ids() const {
  return first_pass_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
YaoTaData::mutable_first_pass_ids() {
  return &first_pass_ids_;
}

// -------------------------------------------------------------------

// ComDupGroupData

// optional int32 group = 1;
inline bool ComDupGroupData::has_group() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ComDupGroupData::set_has_group() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ComDupGroupData::clear_has_group() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ComDupGroupData::clear_group() {
  group_ = 0;
  clear_has_group();
}
inline ::google::protobuf::int32 ComDupGroupData::group() const {
  return group_;
}
inline void ComDupGroupData::set_group(::google::protobuf::int32 value) {
  set_has_group();
  group_ = value;
}

// optional uint64 pass_dupId = 2;
inline bool ComDupGroupData::has_pass_dupid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ComDupGroupData::set_has_pass_dupid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ComDupGroupData::clear_has_pass_dupid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ComDupGroupData::clear_pass_dupid() {
  pass_dupid_ = GOOGLE_ULONGLONG(0);
  clear_has_pass_dupid();
}
inline ::google::protobuf::uint64 ComDupGroupData::pass_dupid() const {
  return pass_dupid_;
}
inline void ComDupGroupData::set_pass_dupid(::google::protobuf::uint64 value) {
  set_has_pass_dupid();
  pass_dupid_ = value;
}

// optional int32 enter_num = 3;
inline bool ComDupGroupData::has_enter_num() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ComDupGroupData::set_has_enter_num() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ComDupGroupData::clear_has_enter_num() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ComDupGroupData::clear_enter_num() {
  enter_num_ = 0;
  clear_has_enter_num();
}
inline ::google::protobuf::int32 ComDupGroupData::enter_num() const {
  return enter_num_;
}
inline void ComDupGroupData::set_enter_num(::google::protobuf::int32 value) {
  set_has_enter_num();
  enter_num_ = value;
}

// optional int32 max_num = 4;
inline bool ComDupGroupData::has_max_num() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ComDupGroupData::set_has_max_num() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ComDupGroupData::clear_has_max_num() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ComDupGroupData::clear_max_num() {
  max_num_ = 0;
  clear_has_max_num();
}
inline ::google::protobuf::int32 ComDupGroupData::max_num() const {
  return max_num_;
}
inline void ComDupGroupData::set_max_num(::google::protobuf::int32 value) {
  set_has_max_num();
  max_num_ = value;
}

// optional int32 buy_num = 5;
inline bool ComDupGroupData::has_buy_num() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ComDupGroupData::set_has_buy_num() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ComDupGroupData::clear_has_buy_num() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ComDupGroupData::clear_buy_num() {
  buy_num_ = 0;
  clear_has_buy_num();
}
inline ::google::protobuf::int32 ComDupGroupData::buy_num() const {
  return buy_num_;
}
inline void ComDupGroupData::set_buy_num(::google::protobuf::int32 value) {
  set_has_buy_num();
  buy_num_ = value;
}

// optional int32 star = 6;
inline bool ComDupGroupData::has_star() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ComDupGroupData::set_has_star() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ComDupGroupData::clear_has_star() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ComDupGroupData::clear_star() {
  star_ = 0;
  clear_has_star();
}
inline ::google::protobuf::int32 ComDupGroupData::star() const {
  return star_;
}
inline void ComDupGroupData::set_star(::google::protobuf::int32 value) {
  set_has_star();
  star_ = value;
}

// optional .proto_ff.TowerDupData tower = 7;
inline bool ComDupGroupData::has_tower() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void ComDupGroupData::set_has_tower() {
  _has_bits_[0] |= 0x00000040u;
}
inline void ComDupGroupData::clear_has_tower() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void ComDupGroupData::clear_tower() {
  if (tower_ != NULL) tower_->::proto_ff::TowerDupData::Clear();
  clear_has_tower();
}
inline const ::proto_ff::TowerDupData& ComDupGroupData::tower() const {
  return tower_ != NULL ? *tower_ : *default_instance_->tower_;
}
inline ::proto_ff::TowerDupData* ComDupGroupData::mutable_tower() {
  set_has_tower();
  if (tower_ == NULL) tower_ = new ::proto_ff::TowerDupData;
  return tower_;
}
inline ::proto_ff::TowerDupData* ComDupGroupData::release_tower() {
  clear_has_tower();
  ::proto_ff::TowerDupData* temp = tower_;
  tower_ = NULL;
  return temp;
}
inline void ComDupGroupData::set_allocated_tower(::proto_ff::TowerDupData* tower) {
  delete tower_;
  tower_ = tower;
  if (tower) {
    set_has_tower();
  } else {
    clear_has_tower();
  }
}

// repeated .proto_ff.PassDupData pass = 8;
inline int ComDupGroupData::pass_size() const {
  return pass_.size();
}
inline void ComDupGroupData::clear_pass() {
  pass_.Clear();
}
inline const ::proto_ff::PassDupData& ComDupGroupData::pass(int index) const {
  return pass_.Get(index);
}
inline ::proto_ff::PassDupData* ComDupGroupData::mutable_pass(int index) {
  return pass_.Mutable(index);
}
inline ::proto_ff::PassDupData* ComDupGroupData::add_pass() {
  return pass_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::PassDupData >&
ComDupGroupData::pass() const {
  return pass_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::PassDupData >*
ComDupGroupData::mutable_pass() {
  return &pass_;
}

// optional .proto_ff.PassGhostData ghost = 9;
inline bool ComDupGroupData::has_ghost() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void ComDupGroupData::set_has_ghost() {
  _has_bits_[0] |= 0x00000100u;
}
inline void ComDupGroupData::clear_has_ghost() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void ComDupGroupData::clear_ghost() {
  if (ghost_ != NULL) ghost_->::proto_ff::PassGhostData::Clear();
  clear_has_ghost();
}
inline const ::proto_ff::PassGhostData& ComDupGroupData::ghost() const {
  return ghost_ != NULL ? *ghost_ : *default_instance_->ghost_;
}
inline ::proto_ff::PassGhostData* ComDupGroupData::mutable_ghost() {
  set_has_ghost();
  if (ghost_ == NULL) ghost_ = new ::proto_ff::PassGhostData;
  return ghost_;
}
inline ::proto_ff::PassGhostData* ComDupGroupData::release_ghost() {
  clear_has_ghost();
  ::proto_ff::PassGhostData* temp = ghost_;
  ghost_ = NULL;
  return temp;
}
inline void ComDupGroupData::set_allocated_ghost(::proto_ff::PassGhostData* ghost) {
  delete ghost_;
  ghost_ = ghost;
  if (ghost) {
    set_has_ghost();
  } else {
    clear_has_ghost();
  }
}

// optional .proto_ff.PassMoyuData moyu = 10;
inline bool ComDupGroupData::has_moyu() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void ComDupGroupData::set_has_moyu() {
  _has_bits_[0] |= 0x00000200u;
}
inline void ComDupGroupData::clear_has_moyu() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void ComDupGroupData::clear_moyu() {
  if (moyu_ != NULL) moyu_->::proto_ff::PassMoyuData::Clear();
  clear_has_moyu();
}
inline const ::proto_ff::PassMoyuData& ComDupGroupData::moyu() const {
  return moyu_ != NULL ? *moyu_ : *default_instance_->moyu_;
}
inline ::proto_ff::PassMoyuData* ComDupGroupData::mutable_moyu() {
  set_has_moyu();
  if (moyu_ == NULL) moyu_ = new ::proto_ff::PassMoyuData;
  return moyu_;
}
inline ::proto_ff::PassMoyuData* ComDupGroupData::release_moyu() {
  clear_has_moyu();
  ::proto_ff::PassMoyuData* temp = moyu_;
  moyu_ = NULL;
  return temp;
}
inline void ComDupGroupData::set_allocated_moyu(::proto_ff::PassMoyuData* moyu) {
  delete moyu_;
  moyu_ = moyu;
  if (moyu) {
    set_has_moyu();
  } else {
    clear_has_moyu();
  }
}

// optional .proto_ff.YaoTaData yaota = 11;
inline bool ComDupGroupData::has_yaota() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void ComDupGroupData::set_has_yaota() {
  _has_bits_[0] |= 0x00000400u;
}
inline void ComDupGroupData::clear_has_yaota() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void ComDupGroupData::clear_yaota() {
  if (yaota_ != NULL) yaota_->::proto_ff::YaoTaData::Clear();
  clear_has_yaota();
}
inline const ::proto_ff::YaoTaData& ComDupGroupData::yaota() const {
  return yaota_ != NULL ? *yaota_ : *default_instance_->yaota_;
}
inline ::proto_ff::YaoTaData* ComDupGroupData::mutable_yaota() {
  set_has_yaota();
  if (yaota_ == NULL) yaota_ = new ::proto_ff::YaoTaData;
  return yaota_;
}
inline ::proto_ff::YaoTaData* ComDupGroupData::release_yaota() {
  clear_has_yaota();
  ::proto_ff::YaoTaData* temp = yaota_;
  yaota_ = NULL;
  return temp;
}
inline void ComDupGroupData::set_allocated_yaota(::proto_ff::YaoTaData* yaota) {
  delete yaota_;
  yaota_ = yaota;
  if (yaota) {
    set_has_yaota();
  } else {
    clear_has_yaota();
  }
}

// -------------------------------------------------------------------

// EnterDupReq

// optional uint64 dupId = 1;
inline bool EnterDupReq::has_dupid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EnterDupReq::set_has_dupid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EnterDupReq::clear_has_dupid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EnterDupReq::clear_dupid() {
  dupid_ = GOOGLE_ULONGLONG(0);
  clear_has_dupid();
}
inline ::google::protobuf::uint64 EnterDupReq::dupid() const {
  return dupid_;
}
inline void EnterDupReq::set_dupid(::google::protobuf::uint64 value) {
  set_has_dupid();
  dupid_ = value;
}

// optional int32 mergeNum = 2;
inline bool EnterDupReq::has_mergenum() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void EnterDupReq::set_has_mergenum() {
  _has_bits_[0] |= 0x00000002u;
}
inline void EnterDupReq::clear_has_mergenum() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void EnterDupReq::clear_mergenum() {
  mergenum_ = 0;
  clear_has_mergenum();
}
inline ::google::protobuf::int32 EnterDupReq::mergenum() const {
  return mergenum_;
}
inline void EnterDupReq::set_mergenum(::google::protobuf::int32 value) {
  set_has_mergenum();
  mergenum_ = value;
}

// -------------------------------------------------------------------

// EnterDupRsp

// optional int32 ret = 1;
inline bool EnterDupRsp::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EnterDupRsp::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EnterDupRsp::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EnterDupRsp::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
inline ::google::protobuf::int32 EnterDupRsp::ret() const {
  return ret_;
}
inline void EnterDupRsp::set_ret(::google::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
}

// optional uint64 dupId = 2;
inline bool EnterDupRsp::has_dupid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void EnterDupRsp::set_has_dupid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void EnterDupRsp::clear_has_dupid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void EnterDupRsp::clear_dupid() {
  dupid_ = GOOGLE_ULONGLONG(0);
  clear_has_dupid();
}
inline ::google::protobuf::uint64 EnterDupRsp::dupid() const {
  return dupid_;
}
inline void EnterDupRsp::set_dupid(::google::protobuf::uint64 value) {
  set_has_dupid();
  dupid_ = value;
}

// optional int32 dupTime = 3;
inline bool EnterDupRsp::has_duptime() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void EnterDupRsp::set_has_duptime() {
  _has_bits_[0] |= 0x00000004u;
}
inline void EnterDupRsp::clear_has_duptime() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void EnterDupRsp::clear_duptime() {
  duptime_ = 0;
  clear_has_duptime();
}
inline ::google::protobuf::int32 EnterDupRsp::duptime() const {
  return duptime_;
}
inline void EnterDupRsp::set_duptime(::google::protobuf::int32 value) {
  set_has_duptime();
  duptime_ = value;
}

// -------------------------------------------------------------------

// DupResultReq

// -------------------------------------------------------------------

// DupResultRsp

// optional int32 result = 1;
inline bool DupResultRsp::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DupResultRsp::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DupResultRsp::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DupResultRsp::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 DupResultRsp::result() const {
  return result_;
}
inline void DupResultRsp::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// optional uint64 dupId = 2;
inline bool DupResultRsp::has_dupid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DupResultRsp::set_has_dupid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DupResultRsp::clear_has_dupid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DupResultRsp::clear_dupid() {
  dupid_ = GOOGLE_ULONGLONG(0);
  clear_has_dupid();
}
inline ::google::protobuf::uint64 DupResultRsp::dupid() const {
  return dupid_;
}
inline void DupResultRsp::set_dupid(::google::protobuf::uint64 value) {
  set_has_dupid();
  dupid_ = value;
}

// optional int32 star = 3;
inline bool DupResultRsp::has_star() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DupResultRsp::set_has_star() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DupResultRsp::clear_has_star() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DupResultRsp::clear_star() {
  star_ = 0;
  clear_has_star();
}
inline ::google::protobuf::int32 DupResultRsp::star() const {
  return star_;
}
inline void DupResultRsp::set_star(::google::protobuf::int32 value) {
  set_has_star();
  star_ = value;
}

// optional int32 cost_sec = 4;
inline bool DupResultRsp::has_cost_sec() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void DupResultRsp::set_has_cost_sec() {
  _has_bits_[0] |= 0x00000008u;
}
inline void DupResultRsp::clear_has_cost_sec() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void DupResultRsp::clear_cost_sec() {
  cost_sec_ = 0;
  clear_has_cost_sec();
}
inline ::google::protobuf::int32 DupResultRsp::cost_sec() const {
  return cost_sec_;
}
inline void DupResultRsp::set_cost_sec(::google::protobuf::int32 value) {
  set_has_cost_sec();
  cost_sec_ = value;
}

// optional .proto_ff.DupDropProto info = 5;
inline bool DupResultRsp::has_info() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void DupResultRsp::set_has_info() {
  _has_bits_[0] |= 0x00000010u;
}
inline void DupResultRsp::clear_has_info() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void DupResultRsp::clear_info() {
  if (info_ != NULL) info_->::proto_ff::DupDropProto::Clear();
  clear_has_info();
}
inline const ::proto_ff::DupDropProto& DupResultRsp::info() const {
  return info_ != NULL ? *info_ : *default_instance_->info_;
}
inline ::proto_ff::DupDropProto* DupResultRsp::mutable_info() {
  set_has_info();
  if (info_ == NULL) info_ = new ::proto_ff::DupDropProto;
  return info_;
}
inline ::proto_ff::DupDropProto* DupResultRsp::release_info() {
  clear_has_info();
  ::proto_ff::DupDropProto* temp = info_;
  info_ = NULL;
  return temp;
}
inline void DupResultRsp::set_allocated_info(::proto_ff::DupDropProto* info) {
  delete info_;
  info_ = info;
  if (info) {
    set_has_info();
  } else {
    clear_has_info();
  }
}

// -------------------------------------------------------------------

// DupLeaveReq

// -------------------------------------------------------------------

// DupLeaveRsp

// optional int32 result = 1;
inline bool DupLeaveRsp::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DupLeaveRsp::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DupLeaveRsp::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DupLeaveRsp::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 DupLeaveRsp::result() const {
  return result_;
}
inline void DupLeaveRsp::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// optional int64 dupId = 2;
inline bool DupLeaveRsp::has_dupid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DupLeaveRsp::set_has_dupid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DupLeaveRsp::clear_has_dupid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DupLeaveRsp::clear_dupid() {
  dupid_ = GOOGLE_LONGLONG(0);
  clear_has_dupid();
}
inline ::google::protobuf::int64 DupLeaveRsp::dupid() const {
  return dupid_;
}
inline void DupLeaveRsp::set_dupid(::google::protobuf::int64 value) {
  set_has_dupid();
  dupid_ = value;
}

// -------------------------------------------------------------------

// NotifyDupRsp

// optional int32 type = 1;
inline bool NotifyDupRsp::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NotifyDupRsp::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NotifyDupRsp::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NotifyDupRsp::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 NotifyDupRsp::type() const {
  return type_;
}
inline void NotifyDupRsp::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// repeated .proto_ff.ComDupGroupData infos = 2;
inline int NotifyDupRsp::infos_size() const {
  return infos_.size();
}
inline void NotifyDupRsp::clear_infos() {
  infos_.Clear();
}
inline const ::proto_ff::ComDupGroupData& NotifyDupRsp::infos(int index) const {
  return infos_.Get(index);
}
inline ::proto_ff::ComDupGroupData* NotifyDupRsp::mutable_infos(int index) {
  return infos_.Mutable(index);
}
inline ::proto_ff::ComDupGroupData* NotifyDupRsp::add_infos() {
  return infos_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::ComDupGroupData >&
NotifyDupRsp::infos() const {
  return infos_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::ComDupGroupData >*
NotifyDupRsp::mutable_infos() {
  return &infos_;
}

// -------------------------------------------------------------------

// NotifyDupRunRsp

// optional uint64 dupId = 1;
inline bool NotifyDupRunRsp::has_dupid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NotifyDupRunRsp::set_has_dupid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NotifyDupRunRsp::clear_has_dupid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NotifyDupRunRsp::clear_dupid() {
  dupid_ = GOOGLE_ULONGLONG(0);
  clear_has_dupid();
}
inline ::google::protobuf::uint64 NotifyDupRunRsp::dupid() const {
  return dupid_;
}
inline void NotifyDupRunRsp::set_dupid(::google::protobuf::uint64 value) {
  set_has_dupid();
  dupid_ = value;
}

// optional int32 kill_num = 2;
inline bool NotifyDupRunRsp::has_kill_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void NotifyDupRunRsp::set_has_kill_num() {
  _has_bits_[0] |= 0x00000002u;
}
inline void NotifyDupRunRsp::clear_has_kill_num() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void NotifyDupRunRsp::clear_kill_num() {
  kill_num_ = 0;
  clear_has_kill_num();
}
inline ::google::protobuf::int32 NotifyDupRunRsp::kill_num() const {
  return kill_num_;
}
inline void NotifyDupRunRsp::set_kill_num(::google::protobuf::int32 value) {
  set_has_kill_num();
  kill_num_ = value;
}

// optional int32 all_num = 3;
inline bool NotifyDupRunRsp::has_all_num() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void NotifyDupRunRsp::set_has_all_num() {
  _has_bits_[0] |= 0x00000004u;
}
inline void NotifyDupRunRsp::clear_has_all_num() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void NotifyDupRunRsp::clear_all_num() {
  all_num_ = 0;
  clear_has_all_num();
}
inline ::google::protobuf::int32 NotifyDupRunRsp::all_num() const {
  return all_num_;
}
inline void NotifyDupRunRsp::set_all_num(::google::protobuf::int32 value) {
  set_has_all_num();
  all_num_ = value;
}

// optional int32 cur_wave = 4;
inline bool NotifyDupRunRsp::has_cur_wave() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void NotifyDupRunRsp::set_has_cur_wave() {
  _has_bits_[0] |= 0x00000008u;
}
inline void NotifyDupRunRsp::clear_has_cur_wave() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void NotifyDupRunRsp::clear_cur_wave() {
  cur_wave_ = 0;
  clear_has_cur_wave();
}
inline ::google::protobuf::int32 NotifyDupRunRsp::cur_wave() const {
  return cur_wave_;
}
inline void NotifyDupRunRsp::set_cur_wave(::google::protobuf::int32 value) {
  set_has_cur_wave();
  cur_wave_ = value;
}

// optional int32 max_wave = 5;
inline bool NotifyDupRunRsp::has_max_wave() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void NotifyDupRunRsp::set_has_max_wave() {
  _has_bits_[0] |= 0x00000010u;
}
inline void NotifyDupRunRsp::clear_has_max_wave() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void NotifyDupRunRsp::clear_max_wave() {
  max_wave_ = 0;
  clear_has_max_wave();
}
inline ::google::protobuf::int32 NotifyDupRunRsp::max_wave() const {
  return max_wave_;
}
inline void NotifyDupRunRsp::set_max_wave(::google::protobuf::int32 value) {
  set_has_max_wave();
  max_wave_ = value;
}

// optional int64 cur_hp = 6;
inline bool NotifyDupRunRsp::has_cur_hp() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void NotifyDupRunRsp::set_has_cur_hp() {
  _has_bits_[0] |= 0x00000020u;
}
inline void NotifyDupRunRsp::clear_has_cur_hp() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void NotifyDupRunRsp::clear_cur_hp() {
  cur_hp_ = GOOGLE_LONGLONG(0);
  clear_has_cur_hp();
}
inline ::google::protobuf::int64 NotifyDupRunRsp::cur_hp() const {
  return cur_hp_;
}
inline void NotifyDupRunRsp::set_cur_hp(::google::protobuf::int64 value) {
  set_has_cur_hp();
  cur_hp_ = value;
}

// optional int64 max_hp = 7;
inline bool NotifyDupRunRsp::has_max_hp() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void NotifyDupRunRsp::set_has_max_hp() {
  _has_bits_[0] |= 0x00000040u;
}
inline void NotifyDupRunRsp::clear_has_max_hp() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void NotifyDupRunRsp::clear_max_hp() {
  max_hp_ = GOOGLE_LONGLONG(0);
  clear_has_max_hp();
}
inline ::google::protobuf::int64 NotifyDupRunRsp::max_hp() const {
  return max_hp_;
}
inline void NotifyDupRunRsp::set_max_hp(::google::protobuf::int64 value) {
  set_has_max_hp();
  max_hp_ = value;
}

// repeated .proto_ff.ComPair64 items = 8;
inline int NotifyDupRunRsp::items_size() const {
  return items_.size();
}
inline void NotifyDupRunRsp::clear_items() {
  items_.Clear();
}
inline const ::proto_ff::ComPair64& NotifyDupRunRsp::items(int index) const {
  return items_.Get(index);
}
inline ::proto_ff::ComPair64* NotifyDupRunRsp::mutable_items(int index) {
  return items_.Mutable(index);
}
inline ::proto_ff::ComPair64* NotifyDupRunRsp::add_items() {
  return items_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair64 >&
NotifyDupRunRsp::items() const {
  return items_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair64 >*
NotifyDupRunRsp::mutable_items() {
  return &items_;
}

// optional int32 kill_boss_num = 9;
inline bool NotifyDupRunRsp::has_kill_boss_num() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void NotifyDupRunRsp::set_has_kill_boss_num() {
  _has_bits_[0] |= 0x00000100u;
}
inline void NotifyDupRunRsp::clear_has_kill_boss_num() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void NotifyDupRunRsp::clear_kill_boss_num() {
  kill_boss_num_ = 0;
  clear_has_kill_boss_num();
}
inline ::google::protobuf::int32 NotifyDupRunRsp::kill_boss_num() const {
  return kill_boss_num_;
}
inline void NotifyDupRunRsp::set_kill_boss_num(::google::protobuf::int32 value) {
  set_has_kill_boss_num();
  kill_boss_num_ = value;
}

// optional int32 boss_num = 10;
inline bool NotifyDupRunRsp::has_boss_num() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void NotifyDupRunRsp::set_has_boss_num() {
  _has_bits_[0] |= 0x00000200u;
}
inline void NotifyDupRunRsp::clear_has_boss_num() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void NotifyDupRunRsp::clear_boss_num() {
  boss_num_ = 0;
  clear_has_boss_num();
}
inline ::google::protobuf::int32 NotifyDupRunRsp::boss_num() const {
  return boss_num_;
}
inline void NotifyDupRunRsp::set_boss_num(::google::protobuf::int32 value) {
  set_has_boss_num();
  boss_num_ = value;
}

// optional int64 add_exp = 11;
inline bool NotifyDupRunRsp::has_add_exp() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void NotifyDupRunRsp::set_has_add_exp() {
  _has_bits_[0] |= 0x00000400u;
}
inline void NotifyDupRunRsp::clear_has_add_exp() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void NotifyDupRunRsp::clear_add_exp() {
  add_exp_ = GOOGLE_LONGLONG(0);
  clear_has_add_exp();
}
inline ::google::protobuf::int64 NotifyDupRunRsp::add_exp() const {
  return add_exp_;
}
inline void NotifyDupRunRsp::set_add_exp(::google::protobuf::int64 value) {
  set_has_add_exp();
  add_exp_ = value;
}

// -------------------------------------------------------------------

// NotifyDupEndRsp

// optional uint64 dupId = 1;
inline bool NotifyDupEndRsp::has_dupid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NotifyDupEndRsp::set_has_dupid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NotifyDupEndRsp::clear_has_dupid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NotifyDupEndRsp::clear_dupid() {
  dupid_ = GOOGLE_ULONGLONG(0);
  clear_has_dupid();
}
inline ::google::protobuf::uint64 NotifyDupEndRsp::dupid() const {
  return dupid_;
}
inline void NotifyDupEndRsp::set_dupid(::google::protobuf::uint64 value) {
  set_has_dupid();
  dupid_ = value;
}

// -------------------------------------------------------------------

// NotifyDupBeginCdRsp

// optional uint64 sceneId = 1;
inline bool NotifyDupBeginCdRsp::has_sceneid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NotifyDupBeginCdRsp::set_has_sceneid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NotifyDupBeginCdRsp::clear_has_sceneid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NotifyDupBeginCdRsp::clear_sceneid() {
  sceneid_ = GOOGLE_ULONGLONG(0);
  clear_has_sceneid();
}
inline ::google::protobuf::uint64 NotifyDupBeginCdRsp::sceneid() const {
  return sceneid_;
}
inline void NotifyDupBeginCdRsp::set_sceneid(::google::protobuf::uint64 value) {
  set_has_sceneid();
  sceneid_ = value;
}

// optional uint64 dupId = 2;
inline bool NotifyDupBeginCdRsp::has_dupid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void NotifyDupBeginCdRsp::set_has_dupid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void NotifyDupBeginCdRsp::clear_has_dupid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void NotifyDupBeginCdRsp::clear_dupid() {
  dupid_ = GOOGLE_ULONGLONG(0);
  clear_has_dupid();
}
inline ::google::protobuf::uint64 NotifyDupBeginCdRsp::dupid() const {
  return dupid_;
}
inline void NotifyDupBeginCdRsp::set_dupid(::google::protobuf::uint64 value) {
  set_has_dupid();
  dupid_ = value;
}

// optional uint64 timeEnd = 3;
inline bool NotifyDupBeginCdRsp::has_timeend() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void NotifyDupBeginCdRsp::set_has_timeend() {
  _has_bits_[0] |= 0x00000004u;
}
inline void NotifyDupBeginCdRsp::clear_has_timeend() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void NotifyDupBeginCdRsp::clear_timeend() {
  timeend_ = GOOGLE_ULONGLONG(0);
  clear_has_timeend();
}
inline ::google::protobuf::uint64 NotifyDupBeginCdRsp::timeend() const {
  return timeend_;
}
inline void NotifyDupBeginCdRsp::set_timeend(::google::protobuf::uint64 value) {
  set_has_timeend();
  timeend_ = value;
}

// -------------------------------------------------------------------

// RecvTowerDupReq

// optional uint64 id = 1;
inline bool RecvTowerDupReq::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RecvTowerDupReq::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RecvTowerDupReq::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RecvTowerDupReq::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::uint64 RecvTowerDupReq::id() const {
  return id_;
}
inline void RecvTowerDupReq::set_id(::google::protobuf::uint64 value) {
  set_has_id();
  id_ = value;
}

// -------------------------------------------------------------------

// RecvTowerDupRsp

// optional int32 result = 1;
inline bool RecvTowerDupRsp::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RecvTowerDupRsp::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RecvTowerDupRsp::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RecvTowerDupRsp::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 RecvTowerDupRsp::result() const {
  return result_;
}
inline void RecvTowerDupRsp::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// optional uint64 id = 2;
inline bool RecvTowerDupRsp::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RecvTowerDupRsp::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RecvTowerDupRsp::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RecvTowerDupRsp::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::uint64 RecvTowerDupRsp::id() const {
  return id_;
}
inline void RecvTowerDupRsp::set_id(::google::protobuf::uint64 value) {
  set_has_id();
  id_ = value;
}

// -------------------------------------------------------------------

// BuyDupNumReq

// optional int32 group = 1;
inline bool BuyDupNumReq::has_group() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BuyDupNumReq::set_has_group() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BuyDupNumReq::clear_has_group() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BuyDupNumReq::clear_group() {
  group_ = 0;
  clear_has_group();
}
inline ::google::protobuf::int32 BuyDupNumReq::group() const {
  return group_;
}
inline void BuyDupNumReq::set_group(::google::protobuf::int32 value) {
  set_has_group();
  group_ = value;
}

// optional int32 num = 2;
inline bool BuyDupNumReq::has_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BuyDupNumReq::set_has_num() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BuyDupNumReq::clear_has_num() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BuyDupNumReq::clear_num() {
  num_ = 0;
  clear_has_num();
}
inline ::google::protobuf::int32 BuyDupNumReq::num() const {
  return num_;
}
inline void BuyDupNumReq::set_num(::google::protobuf::int32 value) {
  set_has_num();
  num_ = value;
}

// -------------------------------------------------------------------

// BuyDupNumRsp

// optional int32 result = 1;
inline bool BuyDupNumRsp::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BuyDupNumRsp::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BuyDupNumRsp::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BuyDupNumRsp::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 BuyDupNumRsp::result() const {
  return result_;
}
inline void BuyDupNumRsp::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// optional int32 group = 2;
inline bool BuyDupNumRsp::has_group() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BuyDupNumRsp::set_has_group() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BuyDupNumRsp::clear_has_group() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BuyDupNumRsp::clear_group() {
  group_ = 0;
  clear_has_group();
}
inline ::google::protobuf::int32 BuyDupNumRsp::group() const {
  return group_;
}
inline void BuyDupNumRsp::set_group(::google::protobuf::int32 value) {
  set_has_group();
  group_ = value;
}

// optional int32 num = 3;
inline bool BuyDupNumRsp::has_num() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BuyDupNumRsp::set_has_num() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BuyDupNumRsp::clear_has_num() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BuyDupNumRsp::clear_num() {
  num_ = 0;
  clear_has_num();
}
inline ::google::protobuf::int32 BuyDupNumRsp::num() const {
  return num_;
}
inline void BuyDupNumRsp::set_num(::google::protobuf::int32 value) {
  set_has_num();
  num_ = value;
}

// -------------------------------------------------------------------

// DupTowerRecordReq

// optional uint64 id = 1;
inline bool DupTowerRecordReq::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DupTowerRecordReq::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DupTowerRecordReq::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DupTowerRecordReq::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::uint64 DupTowerRecordReq::id() const {
  return id_;
}
inline void DupTowerRecordReq::set_id(::google::protobuf::uint64 value) {
  set_has_id();
  id_ = value;
}

// -------------------------------------------------------------------

// DupTowerRecordRsp

// optional uint64 id = 1;
inline bool DupTowerRecordRsp::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DupTowerRecordRsp::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DupTowerRecordRsp::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DupTowerRecordRsp::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::uint64 DupTowerRecordRsp::id() const {
  return id_;
}
inline void DupTowerRecordRsp::set_id(::google::protobuf::uint64 value) {
  set_has_id();
  id_ = value;
}

// repeated .proto_ff.DupTowerRecordEntry entrys = 2;
inline int DupTowerRecordRsp::entrys_size() const {
  return entrys_.size();
}
inline void DupTowerRecordRsp::clear_entrys() {
  entrys_.Clear();
}
inline const ::proto_ff::DupTowerRecordEntry& DupTowerRecordRsp::entrys(int index) const {
  return entrys_.Get(index);
}
inline ::proto_ff::DupTowerRecordEntry* DupTowerRecordRsp::mutable_entrys(int index) {
  return entrys_.Mutable(index);
}
inline ::proto_ff::DupTowerRecordEntry* DupTowerRecordRsp::add_entrys() {
  return entrys_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::DupTowerRecordEntry >&
DupTowerRecordRsp::entrys() const {
  return entrys_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::DupTowerRecordEntry >*
DupTowerRecordRsp::mutable_entrys() {
  return &entrys_;
}

// -------------------------------------------------------------------

// DupTeamInviteReq

// required uint64 dupid = 1;
inline bool DupTeamInviteReq::has_dupid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DupTeamInviteReq::set_has_dupid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DupTeamInviteReq::clear_has_dupid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DupTeamInviteReq::clear_dupid() {
  dupid_ = GOOGLE_ULONGLONG(0);
  clear_has_dupid();
}
inline ::google::protobuf::uint64 DupTeamInviteReq::dupid() const {
  return dupid_;
}
inline void DupTeamInviteReq::set_dupid(::google::protobuf::uint64 value) {
  set_has_dupid();
  dupid_ = value;
}

// optional uint32 mergeNum = 2;
inline bool DupTeamInviteReq::has_mergenum() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DupTeamInviteReq::set_has_mergenum() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DupTeamInviteReq::clear_has_mergenum() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DupTeamInviteReq::clear_mergenum() {
  mergenum_ = 0u;
  clear_has_mergenum();
}
inline ::google::protobuf::uint32 DupTeamInviteReq::mergenum() const {
  return mergenum_;
}
inline void DupTeamInviteReq::set_mergenum(::google::protobuf::uint32 value) {
  set_has_mergenum();
  mergenum_ = value;
}

// -------------------------------------------------------------------

// DupTeamInviteRsp

// optional int32 ret = 1;
inline bool DupTeamInviteRsp::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DupTeamInviteRsp::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DupTeamInviteRsp::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DupTeamInviteRsp::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
inline ::google::protobuf::int32 DupTeamInviteRsp::ret() const {
  return ret_;
}
inline void DupTeamInviteRsp::set_ret(::google::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
}

// required uint64 dupid = 2;
inline bool DupTeamInviteRsp::has_dupid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DupTeamInviteRsp::set_has_dupid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DupTeamInviteRsp::clear_has_dupid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DupTeamInviteRsp::clear_dupid() {
  dupid_ = GOOGLE_ULONGLONG(0);
  clear_has_dupid();
}
inline ::google::protobuf::uint64 DupTeamInviteRsp::dupid() const {
  return dupid_;
}
inline void DupTeamInviteRsp::set_dupid(::google::protobuf::uint64 value) {
  set_has_dupid();
  dupid_ = value;
}

// -------------------------------------------------------------------

// NotifyDupTeamInviteStateRsp

// optional int32 ret = 1;
inline bool NotifyDupTeamInviteStateRsp::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NotifyDupTeamInviteStateRsp::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NotifyDupTeamInviteStateRsp::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NotifyDupTeamInviteStateRsp::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
inline ::google::protobuf::int32 NotifyDupTeamInviteStateRsp::ret() const {
  return ret_;
}
inline void NotifyDupTeamInviteStateRsp::set_ret(::google::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
}

// optional int32 type = 2;
inline bool NotifyDupTeamInviteStateRsp::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void NotifyDupTeamInviteStateRsp::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void NotifyDupTeamInviteStateRsp::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void NotifyDupTeamInviteStateRsp::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 NotifyDupTeamInviteStateRsp::type() const {
  return type_;
}
inline void NotifyDupTeamInviteStateRsp::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// optional int64 dupid = 3;
inline bool NotifyDupTeamInviteStateRsp::has_dupid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void NotifyDupTeamInviteStateRsp::set_has_dupid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void NotifyDupTeamInviteStateRsp::clear_has_dupid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void NotifyDupTeamInviteStateRsp::clear_dupid() {
  dupid_ = GOOGLE_LONGLONG(0);
  clear_has_dupid();
}
inline ::google::protobuf::int64 NotifyDupTeamInviteStateRsp::dupid() const {
  return dupid_;
}
inline void NotifyDupTeamInviteStateRsp::set_dupid(::google::protobuf::int64 value) {
  set_has_dupid();
  dupid_ = value;
}

// repeated .proto_ff.DupTeamInviteState infos = 4;
inline int NotifyDupTeamInviteStateRsp::infos_size() const {
  return infos_.size();
}
inline void NotifyDupTeamInviteStateRsp::clear_infos() {
  infos_.Clear();
}
inline const ::proto_ff::DupTeamInviteState& NotifyDupTeamInviteStateRsp::infos(int index) const {
  return infos_.Get(index);
}
inline ::proto_ff::DupTeamInviteState* NotifyDupTeamInviteStateRsp::mutable_infos(int index) {
  return infos_.Mutable(index);
}
inline ::proto_ff::DupTeamInviteState* NotifyDupTeamInviteStateRsp::add_infos() {
  return infos_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::DupTeamInviteState >&
NotifyDupTeamInviteStateRsp::infos() const {
  return infos_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::DupTeamInviteState >*
NotifyDupTeamInviteStateRsp::mutable_infos() {
  return &infos_;
}

// -------------------------------------------------------------------

// DupTeamOptReq

// optional int32 opt = 1;
inline bool DupTeamOptReq::has_opt() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DupTeamOptReq::set_has_opt() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DupTeamOptReq::clear_has_opt() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DupTeamOptReq::clear_opt() {
  opt_ = 0;
  clear_has_opt();
}
inline ::google::protobuf::int32 DupTeamOptReq::opt() const {
  return opt_;
}
inline void DupTeamOptReq::set_opt(::google::protobuf::int32 value) {
  set_has_opt();
  opt_ = value;
}

// optional uint32 mergeNum = 2;
inline bool DupTeamOptReq::has_mergenum() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DupTeamOptReq::set_has_mergenum() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DupTeamOptReq::clear_has_mergenum() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DupTeamOptReq::clear_mergenum() {
  mergenum_ = 0u;
  clear_has_mergenum();
}
inline ::google::protobuf::uint32 DupTeamOptReq::mergenum() const {
  return mergenum_;
}
inline void DupTeamOptReq::set_mergenum(::google::protobuf::uint32 value) {
  set_has_mergenum();
  mergenum_ = value;
}

// -------------------------------------------------------------------

// DupTeamOptRsp

// optional int32 ret = 1;
inline bool DupTeamOptRsp::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DupTeamOptRsp::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DupTeamOptRsp::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DupTeamOptRsp::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
inline ::google::protobuf::int32 DupTeamOptRsp::ret() const {
  return ret_;
}
inline void DupTeamOptRsp::set_ret(::google::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
}

// optional int32 opt = 2;
inline bool DupTeamOptRsp::has_opt() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DupTeamOptRsp::set_has_opt() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DupTeamOptRsp::clear_has_opt() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DupTeamOptRsp::clear_opt() {
  opt_ = 0;
  clear_has_opt();
}
inline ::google::protobuf::int32 DupTeamOptRsp::opt() const {
  return opt_;
}
inline void DupTeamOptRsp::set_opt(::google::protobuf::int32 value) {
  set_has_opt();
  opt_ = value;
}

// -------------------------------------------------------------------

// DupSweepReq

// optional int32 dupid = 1;
inline bool DupSweepReq::has_dupid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DupSweepReq::set_has_dupid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DupSweepReq::clear_has_dupid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DupSweepReq::clear_dupid() {
  dupid_ = 0;
  clear_has_dupid();
}
inline ::google::protobuf::int32 DupSweepReq::dupid() const {
  return dupid_;
}
inline void DupSweepReq::set_dupid(::google::protobuf::int32 value) {
  set_has_dupid();
  dupid_ = value;
}

// optional int32 num = 2;
inline bool DupSweepReq::has_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DupSweepReq::set_has_num() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DupSweepReq::clear_has_num() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DupSweepReq::clear_num() {
  num_ = 0;
  clear_has_num();
}
inline ::google::protobuf::int32 DupSweepReq::num() const {
  return num_;
}
inline void DupSweepReq::set_num(::google::protobuf::int32 value) {
  set_has_num();
  num_ = value;
}

// optional int32 show_type = 3;
inline bool DupSweepReq::has_show_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DupSweepReq::set_has_show_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DupSweepReq::clear_has_show_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DupSweepReq::clear_show_type() {
  show_type_ = 0;
  clear_has_show_type();
}
inline ::google::protobuf::int32 DupSweepReq::show_type() const {
  return show_type_;
}
inline void DupSweepReq::set_show_type(::google::protobuf::int32 value) {
  set_has_show_type();
  show_type_ = value;
}

// -------------------------------------------------------------------

// DupSweepRsp

// optional int32 ret = 1;
inline bool DupSweepRsp::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DupSweepRsp::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DupSweepRsp::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DupSweepRsp::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
inline ::google::protobuf::int32 DupSweepRsp::ret() const {
  return ret_;
}
inline void DupSweepRsp::set_ret(::google::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
}

// optional int32 dupid = 2;
inline bool DupSweepRsp::has_dupid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DupSweepRsp::set_has_dupid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DupSweepRsp::clear_has_dupid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DupSweepRsp::clear_dupid() {
  dupid_ = 0;
  clear_has_dupid();
}
inline ::google::protobuf::int32 DupSweepRsp::dupid() const {
  return dupid_;
}
inline void DupSweepRsp::set_dupid(::google::protobuf::int32 value) {
  set_has_dupid();
  dupid_ = value;
}

// optional int32 num = 3;
inline bool DupSweepRsp::has_num() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DupSweepRsp::set_has_num() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DupSweepRsp::clear_has_num() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DupSweepRsp::clear_num() {
  num_ = 0;
  clear_has_num();
}
inline ::google::protobuf::int32 DupSweepRsp::num() const {
  return num_;
}
inline void DupSweepRsp::set_num(::google::protobuf::int32 value) {
  set_has_num();
  num_ = value;
}

// optional .proto_ff.DupDropProto info = 4;
inline bool DupSweepRsp::has_info() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void DupSweepRsp::set_has_info() {
  _has_bits_[0] |= 0x00000008u;
}
inline void DupSweepRsp::clear_has_info() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void DupSweepRsp::clear_info() {
  if (info_ != NULL) info_->::proto_ff::DupDropProto::Clear();
  clear_has_info();
}
inline const ::proto_ff::DupDropProto& DupSweepRsp::info() const {
  return info_ != NULL ? *info_ : *default_instance_->info_;
}
inline ::proto_ff::DupDropProto* DupSweepRsp::mutable_info() {
  set_has_info();
  if (info_ == NULL) info_ = new ::proto_ff::DupDropProto;
  return info_;
}
inline ::proto_ff::DupDropProto* DupSweepRsp::release_info() {
  clear_has_info();
  ::proto_ff::DupDropProto* temp = info_;
  info_ = NULL;
  return temp;
}
inline void DupSweepRsp::set_allocated_info(::proto_ff::DupDropProto* info) {
  delete info_;
  info_ = info;
  if (info) {
    set_has_info();
  } else {
    clear_has_info();
  }
}

// optional int32 show_type = 5;
inline bool DupSweepRsp::has_show_type() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void DupSweepRsp::set_has_show_type() {
  _has_bits_[0] |= 0x00000010u;
}
inline void DupSweepRsp::clear_has_show_type() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void DupSweepRsp::clear_show_type() {
  show_type_ = 0;
  clear_has_show_type();
}
inline ::google::protobuf::int32 DupSweepRsp::show_type() const {
  return show_type_;
}
inline void DupSweepRsp::set_show_type(::google::protobuf::int32 value) {
  set_has_show_type();
  show_type_ = value;
}

// -------------------------------------------------------------------

// GhostDupRankReq

// -------------------------------------------------------------------

// GHostDupRankRsp

// repeated .proto_ff.GHostDupRankInfo ranks = 1;
inline int GHostDupRankRsp::ranks_size() const {
  return ranks_.size();
}
inline void GHostDupRankRsp::clear_ranks() {
  ranks_.Clear();
}
inline const ::proto_ff::GHostDupRankInfo& GHostDupRankRsp::ranks(int index) const {
  return ranks_.Get(index);
}
inline ::proto_ff::GHostDupRankInfo* GHostDupRankRsp::mutable_ranks(int index) {
  return ranks_.Mutable(index);
}
inline ::proto_ff::GHostDupRankInfo* GHostDupRankRsp::add_ranks() {
  return ranks_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::GHostDupRankInfo >&
GHostDupRankRsp::ranks() const {
  return ranks_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::GHostDupRankInfo >*
GHostDupRankRsp::mutable_ranks() {
  return &ranks_;
}

// optional int32 my_wave = 2;
inline bool GHostDupRankRsp::has_my_wave() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GHostDupRankRsp::set_has_my_wave() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GHostDupRankRsp::clear_has_my_wave() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GHostDupRankRsp::clear_my_wave() {
  my_wave_ = 0;
  clear_has_my_wave();
}
inline ::google::protobuf::int32 GHostDupRankRsp::my_wave() const {
  return my_wave_;
}
inline void GHostDupRankRsp::set_my_wave(::google::protobuf::int32 value) {
  set_has_my_wave();
  my_wave_ = value;
}

// optional int32 my_time = 3;
inline bool GHostDupRankRsp::has_my_time() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GHostDupRankRsp::set_has_my_time() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GHostDupRankRsp::clear_has_my_time() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GHostDupRankRsp::clear_my_time() {
  my_time_ = 0;
  clear_has_my_time();
}
inline ::google::protobuf::int32 GHostDupRankRsp::my_time() const {
  return my_time_;
}
inline void GHostDupRankRsp::set_my_time(::google::protobuf::int32 value) {
  set_has_my_time();
  my_time_ = value;
}

// optional int32 my_rank = 4;
inline bool GHostDupRankRsp::has_my_rank() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GHostDupRankRsp::set_has_my_rank() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GHostDupRankRsp::clear_has_my_rank() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GHostDupRankRsp::clear_my_rank() {
  my_rank_ = 0;
  clear_has_my_rank();
}
inline ::google::protobuf::int32 GHostDupRankRsp::my_rank() const {
  return my_rank_;
}
inline void GHostDupRankRsp::set_my_rank(::google::protobuf::int32 value) {
  set_has_my_rank();
  my_rank_ = value;
}

// -------------------------------------------------------------------

// NotifyGHostDupRun

// optional uint64 fight = 1;
inline bool NotifyGHostDupRun::has_fight() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NotifyGHostDupRun::set_has_fight() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NotifyGHostDupRun::clear_has_fight() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NotifyGHostDupRun::clear_fight() {
  fight_ = GOOGLE_ULONGLONG(0);
  clear_has_fight();
}
inline ::google::protobuf::uint64 NotifyGHostDupRun::fight() const {
  return fight_;
}
inline void NotifyGHostDupRun::set_fight(::google::protobuf::uint64 value) {
  set_has_fight();
  fight_ = value;
}

// optional int32 curwave = 2;
inline bool NotifyGHostDupRun::has_curwave() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void NotifyGHostDupRun::set_has_curwave() {
  _has_bits_[0] |= 0x00000002u;
}
inline void NotifyGHostDupRun::clear_has_curwave() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void NotifyGHostDupRun::clear_curwave() {
  curwave_ = 0;
  clear_has_curwave();
}
inline ::google::protobuf::int32 NotifyGHostDupRun::curwave() const {
  return curwave_;
}
inline void NotifyGHostDupRun::set_curwave(::google::protobuf::int32 value) {
  set_has_curwave();
  curwave_ = value;
}

// optional int32 num = 3;
inline bool NotifyGHostDupRun::has_num() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void NotifyGHostDupRun::set_has_num() {
  _has_bits_[0] |= 0x00000004u;
}
inline void NotifyGHostDupRun::clear_has_num() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void NotifyGHostDupRun::clear_num() {
  num_ = 0;
  clear_has_num();
}
inline ::google::protobuf::int32 NotifyGHostDupRun::num() const {
  return num_;
}
inline void NotifyGHostDupRun::set_num(::google::protobuf::int32 value) {
  set_has_num();
  num_ = value;
}

// -------------------------------------------------------------------

// NotifyGHostChgStep

// optional int32 time = 1;
inline bool NotifyGHostChgStep::has_time() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NotifyGHostChgStep::set_has_time() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NotifyGHostChgStep::clear_has_time() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NotifyGHostChgStep::clear_time() {
  time_ = 0;
  clear_has_time();
}
inline ::google::protobuf::int32 NotifyGHostChgStep::time() const {
  return time_;
}
inline void NotifyGHostChgStep::set_time(::google::protobuf::int32 value) {
  set_has_time();
  time_ = value;
}

// -------------------------------------------------------------------

// NotifyGHostDupRes

// optional int32 curwave = 1;
inline bool NotifyGHostDupRes::has_curwave() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NotifyGHostDupRes::set_has_curwave() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NotifyGHostDupRes::clear_has_curwave() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NotifyGHostDupRes::clear_curwave() {
  curwave_ = 0;
  clear_has_curwave();
}
inline ::google::protobuf::int32 NotifyGHostDupRes::curwave() const {
  return curwave_;
}
inline void NotifyGHostDupRes::set_curwave(::google::protobuf::int32 value) {
  set_has_curwave();
  curwave_ = value;
}

// optional int32 time = 2;
inline bool NotifyGHostDupRes::has_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void NotifyGHostDupRes::set_has_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void NotifyGHostDupRes::clear_has_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void NotifyGHostDupRes::clear_time() {
  time_ = 0;
  clear_has_time();
}
inline ::google::protobuf::int32 NotifyGHostDupRes::time() const {
  return time_;
}
inline void NotifyGHostDupRes::set_time(::google::protobuf::int32 value) {
  set_has_time();
  time_ = value;
}

// repeated .proto_ff.ItemProtoInfo reward = 3;
inline int NotifyGHostDupRes::reward_size() const {
  return reward_.size();
}
inline void NotifyGHostDupRes::clear_reward() {
  reward_.Clear();
}
inline const ::proto_ff::ItemProtoInfo& NotifyGHostDupRes::reward(int index) const {
  return reward_.Get(index);
}
inline ::proto_ff::ItemProtoInfo* NotifyGHostDupRes::mutable_reward(int index) {
  return reward_.Mutable(index);
}
inline ::proto_ff::ItemProtoInfo* NotifyGHostDupRes::add_reward() {
  return reward_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::ItemProtoInfo >&
NotifyGHostDupRes::reward() const {
  return reward_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::ItemProtoInfo >*
NotifyGHostDupRes::mutable_reward() {
  return &reward_;
}

// -------------------------------------------------------------------

// GhostRecvPassReq

// optional int32 id = 1;
inline bool GhostRecvPassReq::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GhostRecvPassReq::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GhostRecvPassReq::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GhostRecvPassReq::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 GhostRecvPassReq::id() const {
  return id_;
}
inline void GhostRecvPassReq::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// -------------------------------------------------------------------

// GhostRecvPassRsp

// optional int32 ret = 1;
inline bool GhostRecvPassRsp::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GhostRecvPassRsp::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GhostRecvPassRsp::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GhostRecvPassRsp::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
inline ::google::protobuf::int32 GhostRecvPassRsp::ret() const {
  return ret_;
}
inline void GhostRecvPassRsp::set_ret(::google::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
}

// optional int32 id = 2;
inline bool GhostRecvPassRsp::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GhostRecvPassRsp::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GhostRecvPassRsp::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GhostRecvPassRsp::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 GhostRecvPassRsp::id() const {
  return id_;
}
inline void GhostRecvPassRsp::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// -------------------------------------------------------------------

// YaotaReq

// -------------------------------------------------------------------

// NotifyYaotaFirstPass

// repeated int32 can_recv_first_pass_ids = 1;
inline int NotifyYaotaFirstPass::can_recv_first_pass_ids_size() const {
  return can_recv_first_pass_ids_.size();
}
inline void NotifyYaotaFirstPass::clear_can_recv_first_pass_ids() {
  can_recv_first_pass_ids_.Clear();
}
inline ::google::protobuf::int32 NotifyYaotaFirstPass::can_recv_first_pass_ids(int index) const {
  return can_recv_first_pass_ids_.Get(index);
}
inline void NotifyYaotaFirstPass::set_can_recv_first_pass_ids(int index, ::google::protobuf::int32 value) {
  can_recv_first_pass_ids_.Set(index, value);
}
inline void NotifyYaotaFirstPass::add_can_recv_first_pass_ids(::google::protobuf::int32 value) {
  can_recv_first_pass_ids_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
NotifyYaotaFirstPass::can_recv_first_pass_ids() const {
  return can_recv_first_pass_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
NotifyYaotaFirstPass::mutable_can_recv_first_pass_ids() {
  return &can_recv_first_pass_ids_;
}

// repeated int32 first_pass_ids = 2;
inline int NotifyYaotaFirstPass::first_pass_ids_size() const {
  return first_pass_ids_.size();
}
inline void NotifyYaotaFirstPass::clear_first_pass_ids() {
  first_pass_ids_.Clear();
}
inline ::google::protobuf::int32 NotifyYaotaFirstPass::first_pass_ids(int index) const {
  return first_pass_ids_.Get(index);
}
inline void NotifyYaotaFirstPass::set_first_pass_ids(int index, ::google::protobuf::int32 value) {
  first_pass_ids_.Set(index, value);
}
inline void NotifyYaotaFirstPass::add_first_pass_ids(::google::protobuf::int32 value) {
  first_pass_ids_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
NotifyYaotaFirstPass::first_pass_ids() const {
  return first_pass_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
NotifyYaotaFirstPass::mutable_first_pass_ids() {
  return &first_pass_ids_;
}

// -------------------------------------------------------------------

// YaotaFirstPassInfoReq

// optional int32 dupid = 1;
inline bool YaotaFirstPassInfoReq::has_dupid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void YaotaFirstPassInfoReq::set_has_dupid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void YaotaFirstPassInfoReq::clear_has_dupid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void YaotaFirstPassInfoReq::clear_dupid() {
  dupid_ = 0;
  clear_has_dupid();
}
inline ::google::protobuf::int32 YaotaFirstPassInfoReq::dupid() const {
  return dupid_;
}
inline void YaotaFirstPassInfoReq::set_dupid(::google::protobuf::int32 value) {
  set_has_dupid();
  dupid_ = value;
}

// -------------------------------------------------------------------

// YaotaFirstPassInfoRsp

// optional int32 dupid = 1;
inline bool YaotaFirstPassInfoRsp::has_dupid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void YaotaFirstPassInfoRsp::set_has_dupid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void YaotaFirstPassInfoRsp::clear_has_dupid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void YaotaFirstPassInfoRsp::clear_dupid() {
  dupid_ = 0;
  clear_has_dupid();
}
inline ::google::protobuf::int32 YaotaFirstPassInfoRsp::dupid() const {
  return dupid_;
}
inline void YaotaFirstPassInfoRsp::set_dupid(::google::protobuf::int32 value) {
  set_has_dupid();
  dupid_ = value;
}

// repeated .proto_ff.RolePlayerMiniInfo info = 2;
inline int YaotaFirstPassInfoRsp::info_size() const {
  return info_.size();
}
inline void YaotaFirstPassInfoRsp::clear_info() {
  info_.Clear();
}
inline const ::proto_ff::RolePlayerMiniInfo& YaotaFirstPassInfoRsp::info(int index) const {
  return info_.Get(index);
}
inline ::proto_ff::RolePlayerMiniInfo* YaotaFirstPassInfoRsp::mutable_info(int index) {
  return info_.Mutable(index);
}
inline ::proto_ff::RolePlayerMiniInfo* YaotaFirstPassInfoRsp::add_info() {
  return info_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::RolePlayerMiniInfo >&
YaotaFirstPassInfoRsp::info() const {
  return info_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::RolePlayerMiniInfo >*
YaotaFirstPassInfoRsp::mutable_info() {
  return &info_;
}

// optional uint64 time = 3;
inline bool YaotaFirstPassInfoRsp::has_time() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void YaotaFirstPassInfoRsp::set_has_time() {
  _has_bits_[0] |= 0x00000004u;
}
inline void YaotaFirstPassInfoRsp::clear_has_time() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void YaotaFirstPassInfoRsp::clear_time() {
  time_ = GOOGLE_ULONGLONG(0);
  clear_has_time();
}
inline ::google::protobuf::uint64 YaotaFirstPassInfoRsp::time() const {
  return time_;
}
inline void YaotaFirstPassInfoRsp::set_time(::google::protobuf::uint64 value) {
  set_has_time();
  time_ = value;
}

// -------------------------------------------------------------------

// YaotaRecvReq

// optional int32 type = 1;
inline bool YaotaRecvReq::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void YaotaRecvReq::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void YaotaRecvReq::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void YaotaRecvReq::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 YaotaRecvReq::type() const {
  return type_;
}
inline void YaotaRecvReq::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// optional int32 dupId = 2;
inline bool YaotaRecvReq::has_dupid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void YaotaRecvReq::set_has_dupid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void YaotaRecvReq::clear_has_dupid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void YaotaRecvReq::clear_dupid() {
  dupid_ = 0;
  clear_has_dupid();
}
inline ::google::protobuf::int32 YaotaRecvReq::dupid() const {
  return dupid_;
}
inline void YaotaRecvReq::set_dupid(::google::protobuf::int32 value) {
  set_has_dupid();
  dupid_ = value;
}

// -------------------------------------------------------------------

// YaotaRecvRsp

// optional int32 ret = 1;
inline bool YaotaRecvRsp::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void YaotaRecvRsp::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void YaotaRecvRsp::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void YaotaRecvRsp::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
inline ::google::protobuf::int32 YaotaRecvRsp::ret() const {
  return ret_;
}
inline void YaotaRecvRsp::set_ret(::google::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
}

// optional int32 type = 2;
inline bool YaotaRecvRsp::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void YaotaRecvRsp::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void YaotaRecvRsp::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void YaotaRecvRsp::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 YaotaRecvRsp::type() const {
  return type_;
}
inline void YaotaRecvRsp::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// optional int32 dupId = 3;
inline bool YaotaRecvRsp::has_dupid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void YaotaRecvRsp::set_has_dupid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void YaotaRecvRsp::clear_has_dupid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void YaotaRecvRsp::clear_dupid() {
  dupid_ = 0;
  clear_has_dupid();
}
inline ::google::protobuf::int32 YaotaRecvRsp::dupid() const {
  return dupid_;
}
inline void YaotaRecvRsp::set_dupid(::google::protobuf::int32 value) {
  set_has_dupid();
  dupid_ = value;
}

// -------------------------------------------------------------------

// NotifyYaotaDupRes

// optional int32 flag = 1;
inline bool NotifyYaotaDupRes::has_flag() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NotifyYaotaDupRes::set_has_flag() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NotifyYaotaDupRes::clear_has_flag() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NotifyYaotaDupRes::clear_flag() {
  flag_ = 0;
  clear_has_flag();
}
inline ::google::protobuf::int32 NotifyYaotaDupRes::flag() const {
  return flag_;
}
inline void NotifyYaotaDupRes::set_flag(::google::protobuf::int32 value) {
  set_has_flag();
  flag_ = value;
}

// repeated .proto_ff.ItemProtoInfo reward = 2;
inline int NotifyYaotaDupRes::reward_size() const {
  return reward_.size();
}
inline void NotifyYaotaDupRes::clear_reward() {
  reward_.Clear();
}
inline const ::proto_ff::ItemProtoInfo& NotifyYaotaDupRes::reward(int index) const {
  return reward_.Get(index);
}
inline ::proto_ff::ItemProtoInfo* NotifyYaotaDupRes::mutable_reward(int index) {
  return reward_.Mutable(index);
}
inline ::proto_ff::ItemProtoInfo* NotifyYaotaDupRes::add_reward() {
  return reward_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::ItemProtoInfo >&
NotifyYaotaDupRes::reward() const {
  return reward_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::ItemProtoInfo >*
NotifyYaotaDupRes::mutable_reward() {
  return &reward_;
}

// optional int32 time = 3;
inline bool NotifyYaotaDupRes::has_time() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void NotifyYaotaDupRes::set_has_time() {
  _has_bits_[0] |= 0x00000004u;
}
inline void NotifyYaotaDupRes::clear_has_time() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void NotifyYaotaDupRes::clear_time() {
  time_ = 0;
  clear_has_time();
}
inline ::google::protobuf::int32 NotifyYaotaDupRes::time() const {
  return time_;
}
inline void NotifyYaotaDupRes::set_time(::google::protobuf::int32 value) {
  set_has_time();
  time_ = value;
}

// -------------------------------------------------------------------

// L2CEnterDupReq

// optional .proto_ff.CreateSceneParamProto params = 1;
inline bool L2CEnterDupReq::has_params() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void L2CEnterDupReq::set_has_params() {
  _has_bits_[0] |= 0x00000001u;
}
inline void L2CEnterDupReq::clear_has_params() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void L2CEnterDupReq::clear_params() {
  if (params_ != NULL) params_->::proto_ff::CreateSceneParamProto::Clear();
  clear_has_params();
}
inline const ::proto_ff::CreateSceneParamProto& L2CEnterDupReq::params() const {
  return params_ != NULL ? *params_ : *default_instance_->params_;
}
inline ::proto_ff::CreateSceneParamProto* L2CEnterDupReq::mutable_params() {
  set_has_params();
  if (params_ == NULL) params_ = new ::proto_ff::CreateSceneParamProto;
  return params_;
}
inline ::proto_ff::CreateSceneParamProto* L2CEnterDupReq::release_params() {
  clear_has_params();
  ::proto_ff::CreateSceneParamProto* temp = params_;
  params_ = NULL;
  return temp;
}
inline void L2CEnterDupReq::set_allocated_params(::proto_ff::CreateSceneParamProto* params) {
  delete params_;
  params_ = params;
  if (params) {
    set_has_params();
  } else {
    clear_has_params();
  }
}

// -------------------------------------------------------------------

// L2CCreateDupRsp

// optional int32 ret = 1;
inline bool L2CCreateDupRsp::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void L2CCreateDupRsp::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void L2CCreateDupRsp::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void L2CCreateDupRsp::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
inline ::google::protobuf::int32 L2CCreateDupRsp::ret() const {
  return ret_;
}
inline void L2CCreateDupRsp::set_ret(::google::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
}

// optional uint64 sceneId = 2;
inline bool L2CCreateDupRsp::has_sceneid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void L2CCreateDupRsp::set_has_sceneid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void L2CCreateDupRsp::clear_has_sceneid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void L2CCreateDupRsp::clear_sceneid() {
  sceneid_ = GOOGLE_ULONGLONG(0);
  clear_has_sceneid();
}
inline ::google::protobuf::uint64 L2CCreateDupRsp::sceneid() const {
  return sceneid_;
}
inline void L2CCreateDupRsp::set_sceneid(::google::protobuf::uint64 value) {
  set_has_sceneid();
  sceneid_ = value;
}

// optional uint64 dupId = 3;
inline bool L2CCreateDupRsp::has_dupid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void L2CCreateDupRsp::set_has_dupid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void L2CCreateDupRsp::clear_has_dupid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void L2CCreateDupRsp::clear_dupid() {
  dupid_ = GOOGLE_ULONGLONG(0);
  clear_has_dupid();
}
inline ::google::protobuf::uint64 L2CCreateDupRsp::dupid() const {
  return dupid_;
}
inline void L2CCreateDupRsp::set_dupid(::google::protobuf::uint64 value) {
  set_has_dupid();
  dupid_ = value;
}

// -------------------------------------------------------------------

// L2CDupStateChgNotify

// optional uint64 sceneId = 1;
inline bool L2CDupStateChgNotify::has_sceneid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void L2CDupStateChgNotify::set_has_sceneid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void L2CDupStateChgNotify::clear_has_sceneid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void L2CDupStateChgNotify::clear_sceneid() {
  sceneid_ = GOOGLE_ULONGLONG(0);
  clear_has_sceneid();
}
inline ::google::protobuf::uint64 L2CDupStateChgNotify::sceneid() const {
  return sceneid_;
}
inline void L2CDupStateChgNotify::set_sceneid(::google::protobuf::uint64 value) {
  set_has_sceneid();
  sceneid_ = value;
}

// optional uint64 dupId = 2;
inline bool L2CDupStateChgNotify::has_dupid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void L2CDupStateChgNotify::set_has_dupid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void L2CDupStateChgNotify::clear_has_dupid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void L2CDupStateChgNotify::clear_dupid() {
  dupid_ = GOOGLE_ULONGLONG(0);
  clear_has_dupid();
}
inline ::google::protobuf::uint64 L2CDupStateChgNotify::dupid() const {
  return dupid_;
}
inline void L2CDupStateChgNotify::set_dupid(::google::protobuf::uint64 value) {
  set_has_dupid();
  dupid_ = value;
}

// optional int32 state = 3;
inline bool L2CDupStateChgNotify::has_state() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void L2CDupStateChgNotify::set_has_state() {
  _has_bits_[0] |= 0x00000004u;
}
inline void L2CDupStateChgNotify::clear_has_state() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void L2CDupStateChgNotify::clear_state() {
  state_ = 0;
  clear_has_state();
}
inline ::google::protobuf::int32 L2CDupStateChgNotify::state() const {
  return state_;
}
inline void L2CDupStateChgNotify::set_state(::google::protobuf::int32 value) {
  set_has_state();
  state_ = value;
}

// optional uint64 time = 4;
inline bool L2CDupStateChgNotify::has_time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void L2CDupStateChgNotify::set_has_time() {
  _has_bits_[0] |= 0x00000008u;
}
inline void L2CDupStateChgNotify::clear_has_time() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void L2CDupStateChgNotify::clear_time() {
  time_ = GOOGLE_ULONGLONG(0);
  clear_has_time();
}
inline ::google::protobuf::uint64 L2CDupStateChgNotify::time() const {
  return time_;
}
inline void L2CDupStateChgNotify::set_time(::google::protobuf::uint64 value) {
  set_has_time();
  time_ = value;
}

// -------------------------------------------------------------------

// C2LPullRoleEnterDupNotify

// required uint64 char_id = 1;
inline bool C2LPullRoleEnterDupNotify::has_char_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void C2LPullRoleEnterDupNotify::set_has_char_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void C2LPullRoleEnterDupNotify::clear_has_char_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void C2LPullRoleEnterDupNotify::clear_char_id() {
  char_id_ = GOOGLE_ULONGLONG(0);
  clear_has_char_id();
}
inline ::google::protobuf::uint64 C2LPullRoleEnterDupNotify::char_id() const {
  return char_id_;
}
inline void C2LPullRoleEnterDupNotify::set_char_id(::google::protobuf::uint64 value) {
  set_has_char_id();
  char_id_ = value;
}

// required uint64 duplicate_id = 2;
inline bool C2LPullRoleEnterDupNotify::has_duplicate_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void C2LPullRoleEnterDupNotify::set_has_duplicate_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void C2LPullRoleEnterDupNotify::clear_has_duplicate_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void C2LPullRoleEnterDupNotify::clear_duplicate_id() {
  duplicate_id_ = GOOGLE_ULONGLONG(0);
  clear_has_duplicate_id();
}
inline ::google::protobuf::uint64 C2LPullRoleEnterDupNotify::duplicate_id() const {
  return duplicate_id_;
}
inline void C2LPullRoleEnterDupNotify::set_duplicate_id(::google::protobuf::uint64 value) {
  set_has_duplicate_id();
  duplicate_id_ = value;
}

// required uint64 scene_id = 3;
inline bool C2LPullRoleEnterDupNotify::has_scene_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void C2LPullRoleEnterDupNotify::set_has_scene_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void C2LPullRoleEnterDupNotify::clear_has_scene_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void C2LPullRoleEnterDupNotify::clear_scene_id() {
  scene_id_ = GOOGLE_ULONGLONG(0);
  clear_has_scene_id();
}
inline ::google::protobuf::uint64 C2LPullRoleEnterDupNotify::scene_id() const {
  return scene_id_;
}
inline void C2LPullRoleEnterDupNotify::set_scene_id(::google::protobuf::uint64 value) {
  set_has_scene_id();
  scene_id_ = value;
}

// optional uint64 born_id = 4;
inline bool C2LPullRoleEnterDupNotify::has_born_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void C2LPullRoleEnterDupNotify::set_has_born_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void C2LPullRoleEnterDupNotify::clear_has_born_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void C2LPullRoleEnterDupNotify::clear_born_id() {
  born_id_ = GOOGLE_ULONGLONG(0);
  clear_has_born_id();
}
inline ::google::protobuf::uint64 C2LPullRoleEnterDupNotify::born_id() const {
  return born_id_;
}
inline void C2LPullRoleEnterDupNotify::set_born_id(::google::protobuf::uint64 value) {
  set_has_born_id();
  born_id_ = value;
}

// optional uint32 zoneid = 5;
inline bool C2LPullRoleEnterDupNotify::has_zoneid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void C2LPullRoleEnterDupNotify::set_has_zoneid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void C2LPullRoleEnterDupNotify::clear_has_zoneid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void C2LPullRoleEnterDupNotify::clear_zoneid() {
  zoneid_ = 0u;
  clear_has_zoneid();
}
inline ::google::protobuf::uint32 C2LPullRoleEnterDupNotify::zoneid() const {
  return zoneid_;
}
inline void C2LPullRoleEnterDupNotify::set_zoneid(::google::protobuf::uint32 value) {
  set_has_zoneid();
  zoneid_ = value;
}

// optional int32 tran_tag = 6;
inline bool C2LPullRoleEnterDupNotify::has_tran_tag() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void C2LPullRoleEnterDupNotify::set_has_tran_tag() {
  _has_bits_[0] |= 0x00000020u;
}
inline void C2LPullRoleEnterDupNotify::clear_has_tran_tag() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void C2LPullRoleEnterDupNotify::clear_tran_tag() {
  tran_tag_ = 0;
  clear_has_tran_tag();
}
inline ::google::protobuf::int32 C2LPullRoleEnterDupNotify::tran_tag() const {
  return tran_tag_;
}
inline void C2LPullRoleEnterDupNotify::set_tran_tag(::google::protobuf::int32 value) {
  set_has_tran_tag();
  tran_tag_ = value;
}

// -------------------------------------------------------------------

// L2CDupRoleActionNotify

// optional int64 sceneId = 1;
inline bool L2CDupRoleActionNotify::has_sceneid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void L2CDupRoleActionNotify::set_has_sceneid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void L2CDupRoleActionNotify::clear_has_sceneid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void L2CDupRoleActionNotify::clear_sceneid() {
  sceneid_ = GOOGLE_LONGLONG(0);
  clear_has_sceneid();
}
inline ::google::protobuf::int64 L2CDupRoleActionNotify::sceneid() const {
  return sceneid_;
}
inline void L2CDupRoleActionNotify::set_sceneid(::google::protobuf::int64 value) {
  set_has_sceneid();
  sceneid_ = value;
}

// optional int64 cid = 2;
inline bool L2CDupRoleActionNotify::has_cid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void L2CDupRoleActionNotify::set_has_cid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void L2CDupRoleActionNotify::clear_has_cid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void L2CDupRoleActionNotify::clear_cid() {
  cid_ = GOOGLE_LONGLONG(0);
  clear_has_cid();
}
inline ::google::protobuf::int64 L2CDupRoleActionNotify::cid() const {
  return cid_;
}
inline void L2CDupRoleActionNotify::set_cid(::google::protobuf::int64 value) {
  set_has_cid();
  cid_ = value;
}

// optional int32 actionId = 3;
inline bool L2CDupRoleActionNotify::has_actionid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void L2CDupRoleActionNotify::set_has_actionid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void L2CDupRoleActionNotify::clear_has_actionid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void L2CDupRoleActionNotify::clear_actionid() {
  actionid_ = 0;
  clear_has_actionid();
}
inline ::google::protobuf::int32 L2CDupRoleActionNotify::actionid() const {
  return actionid_;
}
inline void L2CDupRoleActionNotify::set_actionid(::google::protobuf::int32 value) {
  set_has_actionid();
  actionid_ = value;
}

// optional int32 ret = 4;
inline bool L2CDupRoleActionNotify::has_ret() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void L2CDupRoleActionNotify::set_has_ret() {
  _has_bits_[0] |= 0x00000008u;
}
inline void L2CDupRoleActionNotify::clear_has_ret() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void L2CDupRoleActionNotify::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
inline ::google::protobuf::int32 L2CDupRoleActionNotify::ret() const {
  return ret_;
}
inline void L2CDupRoleActionNotify::set_ret(::google::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
}

// -------------------------------------------------------------------

// S2CEnterDupReq

// optional .proto_ff.CreateSceneParamProto params = 1;
inline bool S2CEnterDupReq::has_params() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void S2CEnterDupReq::set_has_params() {
  _has_bits_[0] |= 0x00000001u;
}
inline void S2CEnterDupReq::clear_has_params() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void S2CEnterDupReq::clear_params() {
  if (params_ != NULL) params_->::proto_ff::CreateSceneParamProto::Clear();
  clear_has_params();
}
inline const ::proto_ff::CreateSceneParamProto& S2CEnterDupReq::params() const {
  return params_ != NULL ? *params_ : *default_instance_->params_;
}
inline ::proto_ff::CreateSceneParamProto* S2CEnterDupReq::mutable_params() {
  set_has_params();
  if (params_ == NULL) params_ = new ::proto_ff::CreateSceneParamProto;
  return params_;
}
inline ::proto_ff::CreateSceneParamProto* S2CEnterDupReq::release_params() {
  clear_has_params();
  ::proto_ff::CreateSceneParamProto* temp = params_;
  params_ = NULL;
  return temp;
}
inline void S2CEnterDupReq::set_allocated_params(::proto_ff::CreateSceneParamProto* params) {
  delete params_;
  params_ = params;
  if (params) {
    set_has_params();
  } else {
    clear_has_params();
  }
}

// -------------------------------------------------------------------

// C2SEnterDupRsp

// optional int32 ret = 1;
inline bool C2SEnterDupRsp::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void C2SEnterDupRsp::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void C2SEnterDupRsp::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void C2SEnterDupRsp::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
inline ::google::protobuf::int32 C2SEnterDupRsp::ret() const {
  return ret_;
}
inline void C2SEnterDupRsp::set_ret(::google::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
}

// optional .proto_ff.CreateSceneParamProto params = 2;
inline bool C2SEnterDupRsp::has_params() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void C2SEnterDupRsp::set_has_params() {
  _has_bits_[0] |= 0x00000002u;
}
inline void C2SEnterDupRsp::clear_has_params() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void C2SEnterDupRsp::clear_params() {
  if (params_ != NULL) params_->::proto_ff::CreateSceneParamProto::Clear();
  clear_has_params();
}
inline const ::proto_ff::CreateSceneParamProto& C2SEnterDupRsp::params() const {
  return params_ != NULL ? *params_ : *default_instance_->params_;
}
inline ::proto_ff::CreateSceneParamProto* C2SEnterDupRsp::mutable_params() {
  set_has_params();
  if (params_ == NULL) params_ = new ::proto_ff::CreateSceneParamProto;
  return params_;
}
inline ::proto_ff::CreateSceneParamProto* C2SEnterDupRsp::release_params() {
  clear_has_params();
  ::proto_ff::CreateSceneParamProto* temp = params_;
  params_ = NULL;
  return temp;
}
inline void C2SEnterDupRsp::set_allocated_params(::proto_ff::CreateSceneParamProto* params) {
  delete params_;
  params_ = params;
  if (params) {
    set_has_params();
  } else {
    clear_has_params();
  }
}

// -------------------------------------------------------------------

// L2CTowerRecvRecordReq

// optional int64 id = 1;
inline bool L2CTowerRecvRecordReq::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void L2CTowerRecvRecordReq::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void L2CTowerRecvRecordReq::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void L2CTowerRecvRecordReq::clear_id() {
  id_ = GOOGLE_LONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::int64 L2CTowerRecvRecordReq::id() const {
  return id_;
}
inline void L2CTowerRecvRecordReq::set_id(::google::protobuf::int64 value) {
  set_has_id();
  id_ = value;
}

// optional int64 cid = 2;
inline bool L2CTowerRecvRecordReq::has_cid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void L2CTowerRecvRecordReq::set_has_cid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void L2CTowerRecvRecordReq::clear_has_cid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void L2CTowerRecvRecordReq::clear_cid() {
  cid_ = GOOGLE_LONGLONG(0);
  clear_has_cid();
}
inline ::google::protobuf::int64 L2CTowerRecvRecordReq::cid() const {
  return cid_;
}
inline void L2CTowerRecvRecordReq::set_cid(::google::protobuf::int64 value) {
  set_has_cid();
  cid_ = value;
}

// optional string name = 3;
inline bool L2CTowerRecvRecordReq::has_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void L2CTowerRecvRecordReq::set_has_name() {
  _has_bits_[0] |= 0x00000004u;
}
inline void L2CTowerRecvRecordReq::clear_has_name() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void L2CTowerRecvRecordReq::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& L2CTowerRecvRecordReq::name() const {
  return *name_;
}
inline void L2CTowerRecvRecordReq::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void L2CTowerRecvRecordReq::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void L2CTowerRecvRecordReq::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* L2CTowerRecvRecordReq::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* L2CTowerRecvRecordReq::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void L2CTowerRecvRecordReq::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int64 time = 4;
inline bool L2CTowerRecvRecordReq::has_time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void L2CTowerRecvRecordReq::set_has_time() {
  _has_bits_[0] |= 0x00000008u;
}
inline void L2CTowerRecvRecordReq::clear_has_time() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void L2CTowerRecvRecordReq::clear_time() {
  time_ = GOOGLE_LONGLONG(0);
  clear_has_time();
}
inline ::google::protobuf::int64 L2CTowerRecvRecordReq::time() const {
  return time_;
}
inline void L2CTowerRecvRecordReq::set_time(::google::protobuf::int64 value) {
  set_has_time();
  time_ = value;
}

// -------------------------------------------------------------------

// L2SEnterDupReq

// optional .proto_ff.CreateSceneParamProto params = 1;
inline bool L2SEnterDupReq::has_params() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void L2SEnterDupReq::set_has_params() {
  _has_bits_[0] |= 0x00000001u;
}
inline void L2SEnterDupReq::clear_has_params() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void L2SEnterDupReq::clear_params() {
  if (params_ != NULL) params_->::proto_ff::CreateSceneParamProto::Clear();
  clear_has_params();
}
inline const ::proto_ff::CreateSceneParamProto& L2SEnterDupReq::params() const {
  return params_ != NULL ? *params_ : *default_instance_->params_;
}
inline ::proto_ff::CreateSceneParamProto* L2SEnterDupReq::mutable_params() {
  set_has_params();
  if (params_ == NULL) params_ = new ::proto_ff::CreateSceneParamProto;
  return params_;
}
inline ::proto_ff::CreateSceneParamProto* L2SEnterDupReq::release_params() {
  clear_has_params();
  ::proto_ff::CreateSceneParamProto* temp = params_;
  params_ = NULL;
  return temp;
}
inline void L2SEnterDupReq::set_allocated_params(::proto_ff::CreateSceneParamProto* params) {
  delete params_;
  params_ = params;
  if (params) {
    set_has_params();
  } else {
    clear_has_params();
  }
}

// -------------------------------------------------------------------

// L2SDupTeamInviteReq

// required uint64 dupid = 1;
inline bool L2SDupTeamInviteReq::has_dupid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void L2SDupTeamInviteReq::set_has_dupid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void L2SDupTeamInviteReq::clear_has_dupid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void L2SDupTeamInviteReq::clear_dupid() {
  dupid_ = GOOGLE_ULONGLONG(0);
  clear_has_dupid();
}
inline ::google::protobuf::uint64 L2SDupTeamInviteReq::dupid() const {
  return dupid_;
}
inline void L2SDupTeamInviteReq::set_dupid(::google::protobuf::uint64 value) {
  set_has_dupid();
  dupid_ = value;
}

// optional int64 teamid = 2;
inline bool L2SDupTeamInviteReq::has_teamid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void L2SDupTeamInviteReq::set_has_teamid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void L2SDupTeamInviteReq::clear_has_teamid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void L2SDupTeamInviteReq::clear_teamid() {
  teamid_ = GOOGLE_LONGLONG(0);
  clear_has_teamid();
}
inline ::google::protobuf::int64 L2SDupTeamInviteReq::teamid() const {
  return teamid_;
}
inline void L2SDupTeamInviteReq::set_teamid(::google::protobuf::int64 value) {
  set_has_teamid();
  teamid_ = value;
}

// optional int64 cid = 3;
inline bool L2SDupTeamInviteReq::has_cid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void L2SDupTeamInviteReq::set_has_cid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void L2SDupTeamInviteReq::clear_has_cid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void L2SDupTeamInviteReq::clear_cid() {
  cid_ = GOOGLE_LONGLONG(0);
  clear_has_cid();
}
inline ::google::protobuf::int64 L2SDupTeamInviteReq::cid() const {
  return cid_;
}
inline void L2SDupTeamInviteReq::set_cid(::google::protobuf::int64 value) {
  set_has_cid();
  cid_ = value;
}

// optional .proto_ff.CreateSceneParamProto params = 4;
inline bool L2SDupTeamInviteReq::has_params() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void L2SDupTeamInviteReq::set_has_params() {
  _has_bits_[0] |= 0x00000008u;
}
inline void L2SDupTeamInviteReq::clear_has_params() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void L2SDupTeamInviteReq::clear_params() {
  if (params_ != NULL) params_->::proto_ff::CreateSceneParamProto::Clear();
  clear_has_params();
}
inline const ::proto_ff::CreateSceneParamProto& L2SDupTeamInviteReq::params() const {
  return params_ != NULL ? *params_ : *default_instance_->params_;
}
inline ::proto_ff::CreateSceneParamProto* L2SDupTeamInviteReq::mutable_params() {
  set_has_params();
  if (params_ == NULL) params_ = new ::proto_ff::CreateSceneParamProto;
  return params_;
}
inline ::proto_ff::CreateSceneParamProto* L2SDupTeamInviteReq::release_params() {
  clear_has_params();
  ::proto_ff::CreateSceneParamProto* temp = params_;
  params_ = NULL;
  return temp;
}
inline void L2SDupTeamInviteReq::set_allocated_params(::proto_ff::CreateSceneParamProto* params) {
  delete params_;
  params_ = params;
  if (params) {
    set_has_params();
  } else {
    clear_has_params();
  }
}

// -------------------------------------------------------------------

// C2SCreateDupResultRsp

// optional int32 ret = 1;
inline bool C2SCreateDupResultRsp::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void C2SCreateDupResultRsp::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void C2SCreateDupResultRsp::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void C2SCreateDupResultRsp::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
inline ::google::protobuf::int32 C2SCreateDupResultRsp::ret() const {
  return ret_;
}
inline void C2SCreateDupResultRsp::set_ret(::google::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
}

// optional uint64 sceneid = 2;
inline bool C2SCreateDupResultRsp::has_sceneid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void C2SCreateDupResultRsp::set_has_sceneid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void C2SCreateDupResultRsp::clear_has_sceneid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void C2SCreateDupResultRsp::clear_sceneid() {
  sceneid_ = GOOGLE_ULONGLONG(0);
  clear_has_sceneid();
}
inline ::google::protobuf::uint64 C2SCreateDupResultRsp::sceneid() const {
  return sceneid_;
}
inline void C2SCreateDupResultRsp::set_sceneid(::google::protobuf::uint64 value) {
  set_has_sceneid();
  sceneid_ = value;
}

// optional uint64 mapid = 3;
inline bool C2SCreateDupResultRsp::has_mapid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void C2SCreateDupResultRsp::set_has_mapid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void C2SCreateDupResultRsp::clear_has_mapid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void C2SCreateDupResultRsp::clear_mapid() {
  mapid_ = GOOGLE_ULONGLONG(0);
  clear_has_mapid();
}
inline ::google::protobuf::uint64 C2SCreateDupResultRsp::mapid() const {
  return mapid_;
}
inline void C2SCreateDupResultRsp::set_mapid(::google::protobuf::uint64 value) {
  set_has_mapid();
  mapid_ = value;
}

// optional uint32 logicid = 4;
inline bool C2SCreateDupResultRsp::has_logicid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void C2SCreateDupResultRsp::set_has_logicid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void C2SCreateDupResultRsp::clear_has_logicid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void C2SCreateDupResultRsp::clear_logicid() {
  logicid_ = 0u;
  clear_has_logicid();
}
inline ::google::protobuf::uint32 C2SCreateDupResultRsp::logicid() const {
  return logicid_;
}
inline void C2SCreateDupResultRsp::set_logicid(::google::protobuf::uint32 value) {
  set_has_logicid();
  logicid_ = value;
}

// optional uint32 zoneid = 5;
inline bool C2SCreateDupResultRsp::has_zoneid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void C2SCreateDupResultRsp::set_has_zoneid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void C2SCreateDupResultRsp::clear_has_zoneid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void C2SCreateDupResultRsp::clear_zoneid() {
  zoneid_ = 0u;
  clear_has_zoneid();
}
inline ::google::protobuf::uint32 C2SCreateDupResultRsp::zoneid() const {
  return zoneid_;
}
inline void C2SCreateDupResultRsp::set_zoneid(::google::protobuf::uint32 value) {
  set_has_zoneid();
  zoneid_ = value;
}

// optional int32 keytype = 6;
inline bool C2SCreateDupResultRsp::has_keytype() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void C2SCreateDupResultRsp::set_has_keytype() {
  _has_bits_[0] |= 0x00000020u;
}
inline void C2SCreateDupResultRsp::clear_has_keytype() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void C2SCreateDupResultRsp::clear_keytype() {
  keytype_ = 0;
  clear_has_keytype();
}
inline ::google::protobuf::int32 C2SCreateDupResultRsp::keytype() const {
  return keytype_;
}
inline void C2SCreateDupResultRsp::set_keytype(::google::protobuf::int32 value) {
  set_has_keytype();
  keytype_ = value;
}

// optional uint64 keyval = 7;
inline bool C2SCreateDupResultRsp::has_keyval() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void C2SCreateDupResultRsp::set_has_keyval() {
  _has_bits_[0] |= 0x00000040u;
}
inline void C2SCreateDupResultRsp::clear_has_keyval() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void C2SCreateDupResultRsp::clear_keyval() {
  keyval_ = GOOGLE_ULONGLONG(0);
  clear_has_keyval();
}
inline ::google::protobuf::uint64 C2SCreateDupResultRsp::keyval() const {
  return keyval_;
}
inline void C2SCreateDupResultRsp::set_keyval(::google::protobuf::uint64 value) {
  set_has_keyval();
  keyval_ = value;
}

// optional int32 teamid = 8;
inline bool C2SCreateDupResultRsp::has_teamid() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void C2SCreateDupResultRsp::set_has_teamid() {
  _has_bits_[0] |= 0x00000080u;
}
inline void C2SCreateDupResultRsp::clear_has_teamid() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void C2SCreateDupResultRsp::clear_teamid() {
  teamid_ = 0;
  clear_has_teamid();
}
inline ::google::protobuf::int32 C2SCreateDupResultRsp::teamid() const {
  return teamid_;
}
inline void C2SCreateDupResultRsp::set_teamid(::google::protobuf::int32 value) {
  set_has_teamid();
  teamid_ = value;
}

// optional int32 dupid = 9;
inline bool C2SCreateDupResultRsp::has_dupid() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void C2SCreateDupResultRsp::set_has_dupid() {
  _has_bits_[0] |= 0x00000100u;
}
inline void C2SCreateDupResultRsp::clear_has_dupid() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void C2SCreateDupResultRsp::clear_dupid() {
  dupid_ = 0;
  clear_has_dupid();
}
inline ::google::protobuf::int32 C2SCreateDupResultRsp::dupid() const {
  return dupid_;
}
inline void C2SCreateDupResultRsp::set_dupid(::google::protobuf::int32 value) {
  set_has_dupid();
  dupid_ = value;
}

// optional bytes str_param = 10;
inline bool C2SCreateDupResultRsp::has_str_param() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void C2SCreateDupResultRsp::set_has_str_param() {
  _has_bits_[0] |= 0x00000200u;
}
inline void C2SCreateDupResultRsp::clear_has_str_param() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void C2SCreateDupResultRsp::clear_str_param() {
  if (str_param_ != &::google::protobuf::internal::kEmptyString) {
    str_param_->clear();
  }
  clear_has_str_param();
}
inline const ::std::string& C2SCreateDupResultRsp::str_param() const {
  return *str_param_;
}
inline void C2SCreateDupResultRsp::set_str_param(const ::std::string& value) {
  set_has_str_param();
  if (str_param_ == &::google::protobuf::internal::kEmptyString) {
    str_param_ = new ::std::string;
  }
  str_param_->assign(value);
}
inline void C2SCreateDupResultRsp::set_str_param(const char* value) {
  set_has_str_param();
  if (str_param_ == &::google::protobuf::internal::kEmptyString) {
    str_param_ = new ::std::string;
  }
  str_param_->assign(value);
}
inline void C2SCreateDupResultRsp::set_str_param(const void* value, size_t size) {
  set_has_str_param();
  if (str_param_ == &::google::protobuf::internal::kEmptyString) {
    str_param_ = new ::std::string;
  }
  str_param_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* C2SCreateDupResultRsp::mutable_str_param() {
  set_has_str_param();
  if (str_param_ == &::google::protobuf::internal::kEmptyString) {
    str_param_ = new ::std::string;
  }
  return str_param_;
}
inline ::std::string* C2SCreateDupResultRsp::release_str_param() {
  clear_has_str_param();
  if (str_param_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = str_param_;
    str_param_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void C2SCreateDupResultRsp::set_allocated_str_param(::std::string* str_param) {
  if (str_param_ != &::google::protobuf::internal::kEmptyString) {
    delete str_param_;
  }
  if (str_param) {
    set_has_str_param();
    str_param_ = str_param;
  } else {
    clear_has_str_param();
    str_param_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// S2CNotifyCharEnterDup

// optional uint64 cid = 1;
inline bool S2CNotifyCharEnterDup::has_cid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void S2CNotifyCharEnterDup::set_has_cid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void S2CNotifyCharEnterDup::clear_has_cid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void S2CNotifyCharEnterDup::clear_cid() {
  cid_ = GOOGLE_ULONGLONG(0);
  clear_has_cid();
}
inline ::google::protobuf::uint64 S2CNotifyCharEnterDup::cid() const {
  return cid_;
}
inline void S2CNotifyCharEnterDup::set_cid(::google::protobuf::uint64 value) {
  set_has_cid();
  cid_ = value;
}

// optional uint64 dupid = 2;
inline bool S2CNotifyCharEnterDup::has_dupid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void S2CNotifyCharEnterDup::set_has_dupid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void S2CNotifyCharEnterDup::clear_has_dupid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void S2CNotifyCharEnterDup::clear_dupid() {
  dupid_ = GOOGLE_ULONGLONG(0);
  clear_has_dupid();
}
inline ::google::protobuf::uint64 S2CNotifyCharEnterDup::dupid() const {
  return dupid_;
}
inline void S2CNotifyCharEnterDup::set_dupid(::google::protobuf::uint64 value) {
  set_has_dupid();
  dupid_ = value;
}

// optional uint64 sceneid = 3;
inline bool S2CNotifyCharEnterDup::has_sceneid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void S2CNotifyCharEnterDup::set_has_sceneid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void S2CNotifyCharEnterDup::clear_has_sceneid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void S2CNotifyCharEnterDup::clear_sceneid() {
  sceneid_ = GOOGLE_ULONGLONG(0);
  clear_has_sceneid();
}
inline ::google::protobuf::uint64 S2CNotifyCharEnterDup::sceneid() const {
  return sceneid_;
}
inline void S2CNotifyCharEnterDup::set_sceneid(::google::protobuf::uint64 value) {
  set_has_sceneid();
  sceneid_ = value;
}

// optional uint64 bornid = 4;
inline bool S2CNotifyCharEnterDup::has_bornid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void S2CNotifyCharEnterDup::set_has_bornid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void S2CNotifyCharEnterDup::clear_has_bornid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void S2CNotifyCharEnterDup::clear_bornid() {
  bornid_ = GOOGLE_ULONGLONG(0);
  clear_has_bornid();
}
inline ::google::protobuf::uint64 S2CNotifyCharEnterDup::bornid() const {
  return bornid_;
}
inline void S2CNotifyCharEnterDup::set_bornid(::google::protobuf::uint64 value) {
  set_has_bornid();
  bornid_ = value;
}

// optional int32 tran_tag = 5;
inline bool S2CNotifyCharEnterDup::has_tran_tag() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void S2CNotifyCharEnterDup::set_has_tran_tag() {
  _has_bits_[0] |= 0x00000010u;
}
inline void S2CNotifyCharEnterDup::clear_has_tran_tag() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void S2CNotifyCharEnterDup::clear_tran_tag() {
  tran_tag_ = 0;
  clear_has_tran_tag();
}
inline ::google::protobuf::int32 S2CNotifyCharEnterDup::tran_tag() const {
  return tran_tag_;
}
inline void S2CNotifyCharEnterDup::set_tran_tag(::google::protobuf::int32 value) {
  set_has_tran_tag();
  tran_tag_ = value;
}

// -------------------------------------------------------------------

// NotifyRebotEnterDup

// optional uint64 cid = 1;
inline bool NotifyRebotEnterDup::has_cid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NotifyRebotEnterDup::set_has_cid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NotifyRebotEnterDup::clear_has_cid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NotifyRebotEnterDup::clear_cid() {
  cid_ = GOOGLE_ULONGLONG(0);
  clear_has_cid();
}
inline ::google::protobuf::uint64 NotifyRebotEnterDup::cid() const {
  return cid_;
}
inline void NotifyRebotEnterDup::set_cid(::google::protobuf::uint64 value) {
  set_has_cid();
  cid_ = value;
}

// optional uint64 dupid = 2;
inline bool NotifyRebotEnterDup::has_dupid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void NotifyRebotEnterDup::set_has_dupid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void NotifyRebotEnterDup::clear_has_dupid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void NotifyRebotEnterDup::clear_dupid() {
  dupid_ = GOOGLE_ULONGLONG(0);
  clear_has_dupid();
}
inline ::google::protobuf::uint64 NotifyRebotEnterDup::dupid() const {
  return dupid_;
}
inline void NotifyRebotEnterDup::set_dupid(::google::protobuf::uint64 value) {
  set_has_dupid();
  dupid_ = value;
}

// optional uint64 sceneid = 3;
inline bool NotifyRebotEnterDup::has_sceneid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void NotifyRebotEnterDup::set_has_sceneid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void NotifyRebotEnterDup::clear_has_sceneid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void NotifyRebotEnterDup::clear_sceneid() {
  sceneid_ = GOOGLE_ULONGLONG(0);
  clear_has_sceneid();
}
inline ::google::protobuf::uint64 NotifyRebotEnterDup::sceneid() const {
  return sceneid_;
}
inline void NotifyRebotEnterDup::set_sceneid(::google::protobuf::uint64 value) {
  set_has_sceneid();
  sceneid_ = value;
}

// optional int32 bornid = 4;
inline bool NotifyRebotEnterDup::has_bornid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void NotifyRebotEnterDup::set_has_bornid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void NotifyRebotEnterDup::clear_has_bornid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void NotifyRebotEnterDup::clear_bornid() {
  bornid_ = 0;
  clear_has_bornid();
}
inline ::google::protobuf::int32 NotifyRebotEnterDup::bornid() const {
  return bornid_;
}
inline void NotifyRebotEnterDup::set_bornid(::google::protobuf::int32 value) {
  set_has_bornid();
  bornid_ = value;
}

// optional int32 teamid = 5;
inline bool NotifyRebotEnterDup::has_teamid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void NotifyRebotEnterDup::set_has_teamid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void NotifyRebotEnterDup::clear_has_teamid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void NotifyRebotEnterDup::clear_teamid() {
  teamid_ = 0;
  clear_has_teamid();
}
inline ::google::protobuf::int32 NotifyRebotEnterDup::teamid() const {
  return teamid_;
}
inline void NotifyRebotEnterDup::set_teamid(::google::protobuf::int32 value) {
  set_has_teamid();
  teamid_ = value;
}

// -------------------------------------------------------------------

// L2SDupTeamOptReq

// optional int32 opt = 1;
inline bool L2SDupTeamOptReq::has_opt() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void L2SDupTeamOptReq::set_has_opt() {
  _has_bits_[0] |= 0x00000001u;
}
inline void L2SDupTeamOptReq::clear_has_opt() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void L2SDupTeamOptReq::clear_opt() {
  opt_ = 0;
  clear_has_opt();
}
inline ::google::protobuf::int32 L2SDupTeamOptReq::opt() const {
  return opt_;
}
inline void L2SDupTeamOptReq::set_opt(::google::protobuf::int32 value) {
  set_has_opt();
  opt_ = value;
}

// optional uint32 mergeNum = 2;
inline bool L2SDupTeamOptReq::has_mergenum() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void L2SDupTeamOptReq::set_has_mergenum() {
  _has_bits_[0] |= 0x00000002u;
}
inline void L2SDupTeamOptReq::clear_has_mergenum() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void L2SDupTeamOptReq::clear_mergenum() {
  mergenum_ = 0u;
  clear_has_mergenum();
}
inline ::google::protobuf::uint32 L2SDupTeamOptReq::mergenum() const {
  return mergenum_;
}
inline void L2SDupTeamOptReq::set_mergenum(::google::protobuf::uint32 value) {
  set_has_mergenum();
  mergenum_ = value;
}

// optional int32 teamId = 3;
inline bool L2SDupTeamOptReq::has_teamid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void L2SDupTeamOptReq::set_has_teamid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void L2SDupTeamOptReq::clear_has_teamid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void L2SDupTeamOptReq::clear_teamid() {
  teamid_ = 0;
  clear_has_teamid();
}
inline ::google::protobuf::int32 L2SDupTeamOptReq::teamid() const {
  return teamid_;
}
inline void L2SDupTeamOptReq::set_teamid(::google::protobuf::int32 value) {
  set_has_teamid();
  teamid_ = value;
}

// optional uint64 cid = 4;
inline bool L2SDupTeamOptReq::has_cid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void L2SDupTeamOptReq::set_has_cid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void L2SDupTeamOptReq::clear_has_cid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void L2SDupTeamOptReq::clear_cid() {
  cid_ = GOOGLE_ULONGLONG(0);
  clear_has_cid();
}
inline ::google::protobuf::uint64 L2SDupTeamOptReq::cid() const {
  return cid_;
}
inline void L2SDupTeamOptReq::set_cid(::google::protobuf::uint64 value) {
  set_has_cid();
  cid_ = value;
}

// -------------------------------------------------------------------

// S2CNofityRoleRebotEnterDup

// optional uint64 cid = 1;
inline bool S2CNofityRoleRebotEnterDup::has_cid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void S2CNofityRoleRebotEnterDup::set_has_cid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void S2CNofityRoleRebotEnterDup::clear_has_cid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void S2CNofityRoleRebotEnterDup::clear_cid() {
  cid_ = GOOGLE_ULONGLONG(0);
  clear_has_cid();
}
inline ::google::protobuf::uint64 S2CNofityRoleRebotEnterDup::cid() const {
  return cid_;
}
inline void S2CNofityRoleRebotEnterDup::set_cid(::google::protobuf::uint64 value) {
  set_has_cid();
  cid_ = value;
}

// optional uint64 dupid = 2;
inline bool S2CNofityRoleRebotEnterDup::has_dupid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void S2CNofityRoleRebotEnterDup::set_has_dupid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void S2CNofityRoleRebotEnterDup::clear_has_dupid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void S2CNofityRoleRebotEnterDup::clear_dupid() {
  dupid_ = GOOGLE_ULONGLONG(0);
  clear_has_dupid();
}
inline ::google::protobuf::uint64 S2CNofityRoleRebotEnterDup::dupid() const {
  return dupid_;
}
inline void S2CNofityRoleRebotEnterDup::set_dupid(::google::protobuf::uint64 value) {
  set_has_dupid();
  dupid_ = value;
}

// optional uint64 sceneid = 3;
inline bool S2CNofityRoleRebotEnterDup::has_sceneid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void S2CNofityRoleRebotEnterDup::set_has_sceneid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void S2CNofityRoleRebotEnterDup::clear_has_sceneid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void S2CNofityRoleRebotEnterDup::clear_sceneid() {
  sceneid_ = GOOGLE_ULONGLONG(0);
  clear_has_sceneid();
}
inline ::google::protobuf::uint64 S2CNofityRoleRebotEnterDup::sceneid() const {
  return sceneid_;
}
inline void S2CNofityRoleRebotEnterDup::set_sceneid(::google::protobuf::uint64 value) {
  set_has_sceneid();
  sceneid_ = value;
}

// optional int32 bornid = 4;
inline bool S2CNofityRoleRebotEnterDup::has_bornid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void S2CNofityRoleRebotEnterDup::set_has_bornid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void S2CNofityRoleRebotEnterDup::clear_has_bornid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void S2CNofityRoleRebotEnterDup::clear_bornid() {
  bornid_ = 0;
  clear_has_bornid();
}
inline ::google::protobuf::int32 S2CNofityRoleRebotEnterDup::bornid() const {
  return bornid_;
}
inline void S2CNofityRoleRebotEnterDup::set_bornid(::google::protobuf::int32 value) {
  set_has_bornid();
  bornid_ = value;
}

// optional int32 teamid = 5;
inline bool S2CNofityRoleRebotEnterDup::has_teamid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void S2CNofityRoleRebotEnterDup::set_has_teamid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void S2CNofityRoleRebotEnterDup::clear_has_teamid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void S2CNofityRoleRebotEnterDup::clear_teamid() {
  teamid_ = 0;
  clear_has_teamid();
}
inline ::google::protobuf::int32 S2CNofityRoleRebotEnterDup::teamid() const {
  return teamid_;
}
inline void S2CNofityRoleRebotEnterDup::set_teamid(::google::protobuf::int32 value) {
  set_has_teamid();
  teamid_ = value;
}

// optional int32 logicid = 6;
inline bool S2CNofityRoleRebotEnterDup::has_logicid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void S2CNofityRoleRebotEnterDup::set_has_logicid() {
  _has_bits_[0] |= 0x00000020u;
}
inline void S2CNofityRoleRebotEnterDup::clear_has_logicid() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void S2CNofityRoleRebotEnterDup::clear_logicid() {
  logicid_ = 0;
  clear_has_logicid();
}
inline ::google::protobuf::int32 S2CNofityRoleRebotEnterDup::logicid() const {
  return logicid_;
}
inline void S2CNofityRoleRebotEnterDup::set_logicid(::google::protobuf::int32 value) {
  set_has_logicid();
  logicid_ = value;
}

// optional int32 campid = 7;
inline bool S2CNofityRoleRebotEnterDup::has_campid() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void S2CNofityRoleRebotEnterDup::set_has_campid() {
  _has_bits_[0] |= 0x00000040u;
}
inline void S2CNofityRoleRebotEnterDup::clear_has_campid() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void S2CNofityRoleRebotEnterDup::clear_campid() {
  campid_ = 0;
  clear_has_campid();
}
inline ::google::protobuf::int32 S2CNofityRoleRebotEnterDup::campid() const {
  return campid_;
}
inline void S2CNofityRoleRebotEnterDup::set_campid(::google::protobuf::int32 value) {
  set_has_campid();
  campid_ = value;
}

// -------------------------------------------------------------------

// C2LRoleRobotEnterDupReq

// optional uint64 cid = 1;
inline bool C2LRoleRobotEnterDupReq::has_cid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void C2LRoleRobotEnterDupReq::set_has_cid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void C2LRoleRobotEnterDupReq::clear_has_cid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void C2LRoleRobotEnterDupReq::clear_cid() {
  cid_ = GOOGLE_ULONGLONG(0);
  clear_has_cid();
}
inline ::google::protobuf::uint64 C2LRoleRobotEnterDupReq::cid() const {
  return cid_;
}
inline void C2LRoleRobotEnterDupReq::set_cid(::google::protobuf::uint64 value) {
  set_has_cid();
  cid_ = value;
}

// optional uint64 dupid = 2;
inline bool C2LRoleRobotEnterDupReq::has_dupid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void C2LRoleRobotEnterDupReq::set_has_dupid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void C2LRoleRobotEnterDupReq::clear_has_dupid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void C2LRoleRobotEnterDupReq::clear_dupid() {
  dupid_ = GOOGLE_ULONGLONG(0);
  clear_has_dupid();
}
inline ::google::protobuf::uint64 C2LRoleRobotEnterDupReq::dupid() const {
  return dupid_;
}
inline void C2LRoleRobotEnterDupReq::set_dupid(::google::protobuf::uint64 value) {
  set_has_dupid();
  dupid_ = value;
}

// optional uint64 sceneid = 3;
inline bool C2LRoleRobotEnterDupReq::has_sceneid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void C2LRoleRobotEnterDupReq::set_has_sceneid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void C2LRoleRobotEnterDupReq::clear_has_sceneid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void C2LRoleRobotEnterDupReq::clear_sceneid() {
  sceneid_ = GOOGLE_ULONGLONG(0);
  clear_has_sceneid();
}
inline ::google::protobuf::uint64 C2LRoleRobotEnterDupReq::sceneid() const {
  return sceneid_;
}
inline void C2LRoleRobotEnterDupReq::set_sceneid(::google::protobuf::uint64 value) {
  set_has_sceneid();
  sceneid_ = value;
}

// optional int32 bornid = 4;
inline bool C2LRoleRobotEnterDupReq::has_bornid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void C2LRoleRobotEnterDupReq::set_has_bornid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void C2LRoleRobotEnterDupReq::clear_has_bornid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void C2LRoleRobotEnterDupReq::clear_bornid() {
  bornid_ = 0;
  clear_has_bornid();
}
inline ::google::protobuf::int32 C2LRoleRobotEnterDupReq::bornid() const {
  return bornid_;
}
inline void C2LRoleRobotEnterDupReq::set_bornid(::google::protobuf::int32 value) {
  set_has_bornid();
  bornid_ = value;
}

// repeated .proto_ff.RoleMirrorData mirrors = 5;
inline int C2LRoleRobotEnterDupReq::mirrors_size() const {
  return mirrors_.size();
}
inline void C2LRoleRobotEnterDupReq::clear_mirrors() {
  mirrors_.Clear();
}
inline const ::proto_ff::RoleMirrorData& C2LRoleRobotEnterDupReq::mirrors(int index) const {
  return mirrors_.Get(index);
}
inline ::proto_ff::RoleMirrorData* C2LRoleRobotEnterDupReq::mutable_mirrors(int index) {
  return mirrors_.Mutable(index);
}
inline ::proto_ff::RoleMirrorData* C2LRoleRobotEnterDupReq::add_mirrors() {
  return mirrors_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::RoleMirrorData >&
C2LRoleRobotEnterDupReq::mirrors() const {
  return mirrors_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::RoleMirrorData >*
C2LRoleRobotEnterDupReq::mutable_mirrors() {
  return &mirrors_;
}

// -------------------------------------------------------------------

// L2CDupResultRsp

// optional uint64 sceneId = 1;
inline bool L2CDupResultRsp::has_sceneid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void L2CDupResultRsp::set_has_sceneid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void L2CDupResultRsp::clear_has_sceneid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void L2CDupResultRsp::clear_sceneid() {
  sceneid_ = GOOGLE_ULONGLONG(0);
  clear_has_sceneid();
}
inline ::google::protobuf::uint64 L2CDupResultRsp::sceneid() const {
  return sceneid_;
}
inline void L2CDupResultRsp::set_sceneid(::google::protobuf::uint64 value) {
  set_has_sceneid();
  sceneid_ = value;
}

// optional uint64 dupId = 2;
inline bool L2CDupResultRsp::has_dupid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void L2CDupResultRsp::set_has_dupid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void L2CDupResultRsp::clear_has_dupid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void L2CDupResultRsp::clear_dupid() {
  dupid_ = GOOGLE_ULONGLONG(0);
  clear_has_dupid();
}
inline ::google::protobuf::uint64 L2CDupResultRsp::dupid() const {
  return dupid_;
}
inline void L2CDupResultRsp::set_dupid(::google::protobuf::uint64 value) {
  set_has_dupid();
  dupid_ = value;
}

// optional int32 result = 3;
inline bool L2CDupResultRsp::has_result() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void L2CDupResultRsp::set_has_result() {
  _has_bits_[0] |= 0x00000004u;
}
inline void L2CDupResultRsp::clear_has_result() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void L2CDupResultRsp::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 L2CDupResultRsp::result() const {
  return result_;
}
inline void L2CDupResultRsp::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// -------------------------------------------------------------------

// C2LEnterRebotReq

// optional uint64 cid = 1;
inline bool C2LEnterRebotReq::has_cid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void C2LEnterRebotReq::set_has_cid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void C2LEnterRebotReq::clear_has_cid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void C2LEnterRebotReq::clear_cid() {
  cid_ = GOOGLE_ULONGLONG(0);
  clear_has_cid();
}
inline ::google::protobuf::uint64 C2LEnterRebotReq::cid() const {
  return cid_;
}
inline void C2LEnterRebotReq::set_cid(::google::protobuf::uint64 value) {
  set_has_cid();
  cid_ = value;
}

// optional uint64 dupid = 2;
inline bool C2LEnterRebotReq::has_dupid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void C2LEnterRebotReq::set_has_dupid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void C2LEnterRebotReq::clear_has_dupid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void C2LEnterRebotReq::clear_dupid() {
  dupid_ = GOOGLE_ULONGLONG(0);
  clear_has_dupid();
}
inline ::google::protobuf::uint64 C2LEnterRebotReq::dupid() const {
  return dupid_;
}
inline void C2LEnterRebotReq::set_dupid(::google::protobuf::uint64 value) {
  set_has_dupid();
  dupid_ = value;
}

// optional uint64 sceneid = 3;
inline bool C2LEnterRebotReq::has_sceneid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void C2LEnterRebotReq::set_has_sceneid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void C2LEnterRebotReq::clear_has_sceneid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void C2LEnterRebotReq::clear_sceneid() {
  sceneid_ = GOOGLE_ULONGLONG(0);
  clear_has_sceneid();
}
inline ::google::protobuf::uint64 C2LEnterRebotReq::sceneid() const {
  return sceneid_;
}
inline void C2LEnterRebotReq::set_sceneid(::google::protobuf::uint64 value) {
  set_has_sceneid();
  sceneid_ = value;
}

// optional int32 bornid = 4;
inline bool C2LEnterRebotReq::has_bornid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void C2LEnterRebotReq::set_has_bornid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void C2LEnterRebotReq::clear_has_bornid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void C2LEnterRebotReq::clear_bornid() {
  bornid_ = 0;
  clear_has_bornid();
}
inline ::google::protobuf::int32 C2LEnterRebotReq::bornid() const {
  return bornid_;
}
inline void C2LEnterRebotReq::set_bornid(::google::protobuf::int32 value) {
  set_has_bornid();
  bornid_ = value;
}

// -------------------------------------------------------------------

// C2SNotifyDupFinishRsp

// optional int32 result = 1;
inline bool C2SNotifyDupFinishRsp::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void C2SNotifyDupFinishRsp::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void C2SNotifyDupFinishRsp::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void C2SNotifyDupFinishRsp::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 C2SNotifyDupFinishRsp::result() const {
  return result_;
}
inline void C2SNotifyDupFinishRsp::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// optional uint64 sceneid = 2;
inline bool C2SNotifyDupFinishRsp::has_sceneid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void C2SNotifyDupFinishRsp::set_has_sceneid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void C2SNotifyDupFinishRsp::clear_has_sceneid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void C2SNotifyDupFinishRsp::clear_sceneid() {
  sceneid_ = GOOGLE_ULONGLONG(0);
  clear_has_sceneid();
}
inline ::google::protobuf::uint64 C2SNotifyDupFinishRsp::sceneid() const {
  return sceneid_;
}
inline void C2SNotifyDupFinishRsp::set_sceneid(::google::protobuf::uint64 value) {
  set_has_sceneid();
  sceneid_ = value;
}

// optional uint64 mapid = 3;
inline bool C2SNotifyDupFinishRsp::has_mapid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void C2SNotifyDupFinishRsp::set_has_mapid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void C2SNotifyDupFinishRsp::clear_has_mapid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void C2SNotifyDupFinishRsp::clear_mapid() {
  mapid_ = GOOGLE_ULONGLONG(0);
  clear_has_mapid();
}
inline ::google::protobuf::uint64 C2SNotifyDupFinishRsp::mapid() const {
  return mapid_;
}
inline void C2SNotifyDupFinishRsp::set_mapid(::google::protobuf::uint64 value) {
  set_has_mapid();
  mapid_ = value;
}

// optional uint32 logicid = 4;
inline bool C2SNotifyDupFinishRsp::has_logicid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void C2SNotifyDupFinishRsp::set_has_logicid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void C2SNotifyDupFinishRsp::clear_has_logicid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void C2SNotifyDupFinishRsp::clear_logicid() {
  logicid_ = 0u;
  clear_has_logicid();
}
inline ::google::protobuf::uint32 C2SNotifyDupFinishRsp::logicid() const {
  return logicid_;
}
inline void C2SNotifyDupFinishRsp::set_logicid(::google::protobuf::uint32 value) {
  set_has_logicid();
  logicid_ = value;
}

// optional uint32 zoneid = 5;
inline bool C2SNotifyDupFinishRsp::has_zoneid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void C2SNotifyDupFinishRsp::set_has_zoneid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void C2SNotifyDupFinishRsp::clear_has_zoneid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void C2SNotifyDupFinishRsp::clear_zoneid() {
  zoneid_ = 0u;
  clear_has_zoneid();
}
inline ::google::protobuf::uint32 C2SNotifyDupFinishRsp::zoneid() const {
  return zoneid_;
}
inline void C2SNotifyDupFinishRsp::set_zoneid(::google::protobuf::uint32 value) {
  set_has_zoneid();
  zoneid_ = value;
}

// optional int32 keytype = 6;
inline bool C2SNotifyDupFinishRsp::has_keytype() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void C2SNotifyDupFinishRsp::set_has_keytype() {
  _has_bits_[0] |= 0x00000020u;
}
inline void C2SNotifyDupFinishRsp::clear_has_keytype() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void C2SNotifyDupFinishRsp::clear_keytype() {
  keytype_ = 0;
  clear_has_keytype();
}
inline ::google::protobuf::int32 C2SNotifyDupFinishRsp::keytype() const {
  return keytype_;
}
inline void C2SNotifyDupFinishRsp::set_keytype(::google::protobuf::int32 value) {
  set_has_keytype();
  keytype_ = value;
}

// optional uint64 keyval = 7;
inline bool C2SNotifyDupFinishRsp::has_keyval() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void C2SNotifyDupFinishRsp::set_has_keyval() {
  _has_bits_[0] |= 0x00000040u;
}
inline void C2SNotifyDupFinishRsp::clear_has_keyval() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void C2SNotifyDupFinishRsp::clear_keyval() {
  keyval_ = GOOGLE_ULONGLONG(0);
  clear_has_keyval();
}
inline ::google::protobuf::uint64 C2SNotifyDupFinishRsp::keyval() const {
  return keyval_;
}
inline void C2SNotifyDupFinishRsp::set_keyval(::google::protobuf::uint64 value) {
  set_has_keyval();
  keyval_ = value;
}

// optional int32 teamid = 8;
inline bool C2SNotifyDupFinishRsp::has_teamid() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void C2SNotifyDupFinishRsp::set_has_teamid() {
  _has_bits_[0] |= 0x00000080u;
}
inline void C2SNotifyDupFinishRsp::clear_has_teamid() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void C2SNotifyDupFinishRsp::clear_teamid() {
  teamid_ = 0;
  clear_has_teamid();
}
inline ::google::protobuf::int32 C2SNotifyDupFinishRsp::teamid() const {
  return teamid_;
}
inline void C2SNotifyDupFinishRsp::set_teamid(::google::protobuf::int32 value) {
  set_has_teamid();
  teamid_ = value;
}

// optional int64 dupid = 9;
inline bool C2SNotifyDupFinishRsp::has_dupid() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void C2SNotifyDupFinishRsp::set_has_dupid() {
  _has_bits_[0] |= 0x00000100u;
}
inline void C2SNotifyDupFinishRsp::clear_has_dupid() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void C2SNotifyDupFinishRsp::clear_dupid() {
  dupid_ = GOOGLE_LONGLONG(0);
  clear_has_dupid();
}
inline ::google::protobuf::int64 C2SNotifyDupFinishRsp::dupid() const {
  return dupid_;
}
inline void C2SNotifyDupFinishRsp::set_dupid(::google::protobuf::int64 value) {
  set_has_dupid();
  dupid_ = value;
}

// -------------------------------------------------------------------

// C2STeamEnterDupReq

// optional int32 dupId = 1;
inline bool C2STeamEnterDupReq::has_dupid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void C2STeamEnterDupReq::set_has_dupid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void C2STeamEnterDupReq::clear_has_dupid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void C2STeamEnterDupReq::clear_dupid() {
  dupid_ = 0;
  clear_has_dupid();
}
inline ::google::protobuf::int32 C2STeamEnterDupReq::dupid() const {
  return dupid_;
}
inline void C2STeamEnterDupReq::set_dupid(::google::protobuf::int32 value) {
  set_has_dupid();
  dupid_ = value;
}

// optional .proto_ff.CreateSceneParamProto params = 3;
inline bool C2STeamEnterDupReq::has_params() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void C2STeamEnterDupReq::set_has_params() {
  _has_bits_[0] |= 0x00000002u;
}
inline void C2STeamEnterDupReq::clear_has_params() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void C2STeamEnterDupReq::clear_params() {
  if (params_ != NULL) params_->::proto_ff::CreateSceneParamProto::Clear();
  clear_has_params();
}
inline const ::proto_ff::CreateSceneParamProto& C2STeamEnterDupReq::params() const {
  return params_ != NULL ? *params_ : *default_instance_->params_;
}
inline ::proto_ff::CreateSceneParamProto* C2STeamEnterDupReq::mutable_params() {
  set_has_params();
  if (params_ == NULL) params_ = new ::proto_ff::CreateSceneParamProto;
  return params_;
}
inline ::proto_ff::CreateSceneParamProto* C2STeamEnterDupReq::release_params() {
  clear_has_params();
  ::proto_ff::CreateSceneParamProto* temp = params_;
  params_ = NULL;
  return temp;
}
inline void C2STeamEnterDupReq::set_allocated_params(::proto_ff::CreateSceneParamProto* params) {
  delete params_;
  params_ = params;
  if (params) {
    set_has_params();
  } else {
    clear_has_params();
  }
}

// optional int32 isdyn = 4;
inline bool C2STeamEnterDupReq::has_isdyn() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void C2STeamEnterDupReq::set_has_isdyn() {
  _has_bits_[0] |= 0x00000004u;
}
inline void C2STeamEnterDupReq::clear_has_isdyn() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void C2STeamEnterDupReq::clear_isdyn() {
  isdyn_ = 0;
  clear_has_isdyn();
}
inline ::google::protobuf::int32 C2STeamEnterDupReq::isdyn() const {
  return isdyn_;
}
inline void C2STeamEnterDupReq::set_isdyn(::google::protobuf::int32 value) {
  set_has_isdyn();
  isdyn_ = value;
}

// -------------------------------------------------------------------

// S2LCreateDupReq

// optional .proto_ff.CreateSceneParamProto params = 1;
inline bool S2LCreateDupReq::has_params() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void S2LCreateDupReq::set_has_params() {
  _has_bits_[0] |= 0x00000001u;
}
inline void S2LCreateDupReq::clear_has_params() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void S2LCreateDupReq::clear_params() {
  if (params_ != NULL) params_->::proto_ff::CreateSceneParamProto::Clear();
  clear_has_params();
}
inline const ::proto_ff::CreateSceneParamProto& S2LCreateDupReq::params() const {
  return params_ != NULL ? *params_ : *default_instance_->params_;
}
inline ::proto_ff::CreateSceneParamProto* S2LCreateDupReq::mutable_params() {
  set_has_params();
  if (params_ == NULL) params_ = new ::proto_ff::CreateSceneParamProto;
  return params_;
}
inline ::proto_ff::CreateSceneParamProto* S2LCreateDupReq::release_params() {
  clear_has_params();
  ::proto_ff::CreateSceneParamProto* temp = params_;
  params_ = NULL;
  return temp;
}
inline void S2LCreateDupReq::set_allocated_params(::proto_ff::CreateSceneParamProto* params) {
  delete params_;
  params_ = params;
  if (params) {
    set_has_params();
  } else {
    clear_has_params();
  }
}

// optional bytes ex_params = 2;
inline bool S2LCreateDupReq::has_ex_params() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void S2LCreateDupReq::set_has_ex_params() {
  _has_bits_[0] |= 0x00000002u;
}
inline void S2LCreateDupReq::clear_has_ex_params() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void S2LCreateDupReq::clear_ex_params() {
  if (ex_params_ != &::google::protobuf::internal::kEmptyString) {
    ex_params_->clear();
  }
  clear_has_ex_params();
}
inline const ::std::string& S2LCreateDupReq::ex_params() const {
  return *ex_params_;
}
inline void S2LCreateDupReq::set_ex_params(const ::std::string& value) {
  set_has_ex_params();
  if (ex_params_ == &::google::protobuf::internal::kEmptyString) {
    ex_params_ = new ::std::string;
  }
  ex_params_->assign(value);
}
inline void S2LCreateDupReq::set_ex_params(const char* value) {
  set_has_ex_params();
  if (ex_params_ == &::google::protobuf::internal::kEmptyString) {
    ex_params_ = new ::std::string;
  }
  ex_params_->assign(value);
}
inline void S2LCreateDupReq::set_ex_params(const void* value, size_t size) {
  set_has_ex_params();
  if (ex_params_ == &::google::protobuf::internal::kEmptyString) {
    ex_params_ = new ::std::string;
  }
  ex_params_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* S2LCreateDupReq::mutable_ex_params() {
  set_has_ex_params();
  if (ex_params_ == &::google::protobuf::internal::kEmptyString) {
    ex_params_ = new ::std::string;
  }
  return ex_params_;
}
inline ::std::string* S2LCreateDupReq::release_ex_params() {
  clear_has_ex_params();
  if (ex_params_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = ex_params_;
    ex_params_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void S2LCreateDupReq::set_allocated_ex_params(::std::string* ex_params) {
  if (ex_params_ != &::google::protobuf::internal::kEmptyString) {
    delete ex_params_;
  }
  if (ex_params) {
    set_has_ex_params();
    ex_params_ = ex_params;
  } else {
    clear_has_ex_params();
    ex_params_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// L2SCreateDupRsp

// optional .proto_ff.C2SCreateDupResultRsp rsp = 1;
inline bool L2SCreateDupRsp::has_rsp() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void L2SCreateDupRsp::set_has_rsp() {
  _has_bits_[0] |= 0x00000001u;
}
inline void L2SCreateDupRsp::clear_has_rsp() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void L2SCreateDupRsp::clear_rsp() {
  if (rsp_ != NULL) rsp_->::proto_ff::C2SCreateDupResultRsp::Clear();
  clear_has_rsp();
}
inline const ::proto_ff::C2SCreateDupResultRsp& L2SCreateDupRsp::rsp() const {
  return rsp_ != NULL ? *rsp_ : *default_instance_->rsp_;
}
inline ::proto_ff::C2SCreateDupResultRsp* L2SCreateDupRsp::mutable_rsp() {
  set_has_rsp();
  if (rsp_ == NULL) rsp_ = new ::proto_ff::C2SCreateDupResultRsp;
  return rsp_;
}
inline ::proto_ff::C2SCreateDupResultRsp* L2SCreateDupRsp::release_rsp() {
  clear_has_rsp();
  ::proto_ff::C2SCreateDupResultRsp* temp = rsp_;
  rsp_ = NULL;
  return temp;
}
inline void L2SCreateDupRsp::set_allocated_rsp(::proto_ff::C2SCreateDupResultRsp* rsp) {
  delete rsp_;
  rsp_ = rsp;
  if (rsp) {
    set_has_rsp();
  } else {
    clear_has_rsp();
  }
}

// -------------------------------------------------------------------

// S2LNotifyRoleEnterDup

// optional int64 cid = 1;
inline bool S2LNotifyRoleEnterDup::has_cid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void S2LNotifyRoleEnterDup::set_has_cid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void S2LNotifyRoleEnterDup::clear_has_cid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void S2LNotifyRoleEnterDup::clear_cid() {
  cid_ = GOOGLE_LONGLONG(0);
  clear_has_cid();
}
inline ::google::protobuf::int64 S2LNotifyRoleEnterDup::cid() const {
  return cid_;
}
inline void S2LNotifyRoleEnterDup::set_cid(::google::protobuf::int64 value) {
  set_has_cid();
  cid_ = value;
}

// optional int32 zid = 2;
inline bool S2LNotifyRoleEnterDup::has_zid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void S2LNotifyRoleEnterDup::set_has_zid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void S2LNotifyRoleEnterDup::clear_has_zid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void S2LNotifyRoleEnterDup::clear_zid() {
  zid_ = 0;
  clear_has_zid();
}
inline ::google::protobuf::int32 S2LNotifyRoleEnterDup::zid() const {
  return zid_;
}
inline void S2LNotifyRoleEnterDup::set_zid(::google::protobuf::int32 value) {
  set_has_zid();
  zid_ = value;
}

// optional uint64 sceneid = 3;
inline bool S2LNotifyRoleEnterDup::has_sceneid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void S2LNotifyRoleEnterDup::set_has_sceneid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void S2LNotifyRoleEnterDup::clear_has_sceneid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void S2LNotifyRoleEnterDup::clear_sceneid() {
  sceneid_ = GOOGLE_ULONGLONG(0);
  clear_has_sceneid();
}
inline ::google::protobuf::uint64 S2LNotifyRoleEnterDup::sceneid() const {
  return sceneid_;
}
inline void S2LNotifyRoleEnterDup::set_sceneid(::google::protobuf::uint64 value) {
  set_has_sceneid();
  sceneid_ = value;
}

// optional uint64 mapid = 4;
inline bool S2LNotifyRoleEnterDup::has_mapid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void S2LNotifyRoleEnterDup::set_has_mapid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void S2LNotifyRoleEnterDup::clear_has_mapid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void S2LNotifyRoleEnterDup::clear_mapid() {
  mapid_ = GOOGLE_ULONGLONG(0);
  clear_has_mapid();
}
inline ::google::protobuf::uint64 S2LNotifyRoleEnterDup::mapid() const {
  return mapid_;
}
inline void S2LNotifyRoleEnterDup::set_mapid(::google::protobuf::uint64 value) {
  set_has_mapid();
  mapid_ = value;
}

// optional int32 bornid = 5;
inline bool S2LNotifyRoleEnterDup::has_bornid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void S2LNotifyRoleEnterDup::set_has_bornid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void S2LNotifyRoleEnterDup::clear_has_bornid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void S2LNotifyRoleEnterDup::clear_bornid() {
  bornid_ = 0;
  clear_has_bornid();
}
inline ::google::protobuf::int32 S2LNotifyRoleEnterDup::bornid() const {
  return bornid_;
}
inline void S2LNotifyRoleEnterDup::set_bornid(::google::protobuf::int32 value) {
  set_has_bornid();
  bornid_ = value;
}

// -------------------------------------------------------------------

// L2SNotifyDupFinishRsp

// optional .proto_ff.C2SNotifyDupFinishRsp rsp = 1;
inline bool L2SNotifyDupFinishRsp::has_rsp() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void L2SNotifyDupFinishRsp::set_has_rsp() {
  _has_bits_[0] |= 0x00000001u;
}
inline void L2SNotifyDupFinishRsp::clear_has_rsp() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void L2SNotifyDupFinishRsp::clear_rsp() {
  if (rsp_ != NULL) rsp_->::proto_ff::C2SNotifyDupFinishRsp::Clear();
  clear_has_rsp();
}
inline const ::proto_ff::C2SNotifyDupFinishRsp& L2SNotifyDupFinishRsp::rsp() const {
  return rsp_ != NULL ? *rsp_ : *default_instance_->rsp_;
}
inline ::proto_ff::C2SNotifyDupFinishRsp* L2SNotifyDupFinishRsp::mutable_rsp() {
  set_has_rsp();
  if (rsp_ == NULL) rsp_ = new ::proto_ff::C2SNotifyDupFinishRsp;
  return rsp_;
}
inline ::proto_ff::C2SNotifyDupFinishRsp* L2SNotifyDupFinishRsp::release_rsp() {
  clear_has_rsp();
  ::proto_ff::C2SNotifyDupFinishRsp* temp = rsp_;
  rsp_ = NULL;
  return temp;
}
inline void L2SNotifyDupFinishRsp::set_allocated_rsp(::proto_ff::C2SNotifyDupFinishRsp* rsp) {
  delete rsp_;
  rsp_ = rsp;
  if (rsp) {
    set_has_rsp();
  } else {
    clear_has_rsp();
  }
}

// -------------------------------------------------------------------

// L2CGHostDupRankReq

// optional uint64 cid = 1;
inline bool L2CGHostDupRankReq::has_cid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void L2CGHostDupRankReq::set_has_cid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void L2CGHostDupRankReq::clear_has_cid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void L2CGHostDupRankReq::clear_cid() {
  cid_ = GOOGLE_ULONGLONG(0);
  clear_has_cid();
}
inline ::google::protobuf::uint64 L2CGHostDupRankReq::cid() const {
  return cid_;
}
inline void L2CGHostDupRankReq::set_cid(::google::protobuf::uint64 value) {
  set_has_cid();
  cid_ = value;
}

// optional int32 wave = 2;
inline bool L2CGHostDupRankReq::has_wave() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void L2CGHostDupRankReq::set_has_wave() {
  _has_bits_[0] |= 0x00000002u;
}
inline void L2CGHostDupRankReq::clear_has_wave() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void L2CGHostDupRankReq::clear_wave() {
  wave_ = 0;
  clear_has_wave();
}
inline ::google::protobuf::int32 L2CGHostDupRankReq::wave() const {
  return wave_;
}
inline void L2CGHostDupRankReq::set_wave(::google::protobuf::int32 value) {
  set_has_wave();
  wave_ = value;
}

// optional int32 time = 3;
inline bool L2CGHostDupRankReq::has_time() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void L2CGHostDupRankReq::set_has_time() {
  _has_bits_[0] |= 0x00000004u;
}
inline void L2CGHostDupRankReq::clear_has_time() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void L2CGHostDupRankReq::clear_time() {
  time_ = 0;
  clear_has_time();
}
inline ::google::protobuf::int32 L2CGHostDupRankReq::time() const {
  return time_;
}
inline void L2CGHostDupRankReq::set_time(::google::protobuf::int32 value) {
  set_has_time();
  time_ = value;
}

// -------------------------------------------------------------------

// L2CUpdateGHostDupRankReq

// optional uint64 cid = 1;
inline bool L2CUpdateGHostDupRankReq::has_cid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void L2CUpdateGHostDupRankReq::set_has_cid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void L2CUpdateGHostDupRankReq::clear_has_cid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void L2CUpdateGHostDupRankReq::clear_cid() {
  cid_ = GOOGLE_ULONGLONG(0);
  clear_has_cid();
}
inline ::google::protobuf::uint64 L2CUpdateGHostDupRankReq::cid() const {
  return cid_;
}
inline void L2CUpdateGHostDupRankReq::set_cid(::google::protobuf::uint64 value) {
  set_has_cid();
  cid_ = value;
}

// optional int32 wave = 2;
inline bool L2CUpdateGHostDupRankReq::has_wave() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void L2CUpdateGHostDupRankReq::set_has_wave() {
  _has_bits_[0] |= 0x00000002u;
}
inline void L2CUpdateGHostDupRankReq::clear_has_wave() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void L2CUpdateGHostDupRankReq::clear_wave() {
  wave_ = 0;
  clear_has_wave();
}
inline ::google::protobuf::int32 L2CUpdateGHostDupRankReq::wave() const {
  return wave_;
}
inline void L2CUpdateGHostDupRankReq::set_wave(::google::protobuf::int32 value) {
  set_has_wave();
  wave_ = value;
}

// optional int32 time = 3;
inline bool L2CUpdateGHostDupRankReq::has_time() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void L2CUpdateGHostDupRankReq::set_has_time() {
  _has_bits_[0] |= 0x00000004u;
}
inline void L2CUpdateGHostDupRankReq::clear_has_time() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void L2CUpdateGHostDupRankReq::clear_time() {
  time_ = 0;
  clear_has_time();
}
inline ::google::protobuf::int32 L2CUpdateGHostDupRankReq::time() const {
  return time_;
}
inline void L2CUpdateGHostDupRankReq::set_time(::google::protobuf::int32 value) {
  set_has_time();
  time_ = value;
}

// -------------------------------------------------------------------

// L2CSynPassYaotaReq

// optional int32 dupid = 1;
inline bool L2CSynPassYaotaReq::has_dupid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void L2CSynPassYaotaReq::set_has_dupid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void L2CSynPassYaotaReq::clear_has_dupid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void L2CSynPassYaotaReq::clear_dupid() {
  dupid_ = 0;
  clear_has_dupid();
}
inline ::google::protobuf::int32 L2CSynPassYaotaReq::dupid() const {
  return dupid_;
}
inline void L2CSynPassYaotaReq::set_dupid(::google::protobuf::int32 value) {
  set_has_dupid();
  dupid_ = value;
}

// repeated .proto_ff.RolePlayerMiniInfo info = 2;
inline int L2CSynPassYaotaReq::info_size() const {
  return info_.size();
}
inline void L2CSynPassYaotaReq::clear_info() {
  info_.Clear();
}
inline const ::proto_ff::RolePlayerMiniInfo& L2CSynPassYaotaReq::info(int index) const {
  return info_.Get(index);
}
inline ::proto_ff::RolePlayerMiniInfo* L2CSynPassYaotaReq::mutable_info(int index) {
  return info_.Mutable(index);
}
inline ::proto_ff::RolePlayerMiniInfo* L2CSynPassYaotaReq::add_info() {
  return info_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::RolePlayerMiniInfo >&
L2CSynPassYaotaReq::info() const {
  return info_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::RolePlayerMiniInfo >*
L2CSynPassYaotaReq::mutable_info() {
  return &info_;
}

// optional uint64 time = 3;
inline bool L2CSynPassYaotaReq::has_time() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void L2CSynPassYaotaReq::set_has_time() {
  _has_bits_[0] |= 0x00000004u;
}
inline void L2CSynPassYaotaReq::clear_has_time() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void L2CSynPassYaotaReq::clear_time() {
  time_ = GOOGLE_ULONGLONG(0);
  clear_has_time();
}
inline ::google::protobuf::uint64 L2CSynPassYaotaReq::time() const {
  return time_;
}
inline void L2CSynPassYaotaReq::set_time(::google::protobuf::uint64 value) {
  set_has_time();
  time_ = value;
}

// -------------------------------------------------------------------

// NotifyDupTeamDisReq

// optional int32 teamid = 1;
inline bool NotifyDupTeamDisReq::has_teamid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NotifyDupTeamDisReq::set_has_teamid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NotifyDupTeamDisReq::clear_has_teamid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NotifyDupTeamDisReq::clear_teamid() {
  teamid_ = 0;
  clear_has_teamid();
}
inline ::google::protobuf::int32 NotifyDupTeamDisReq::teamid() const {
  return teamid_;
}
inline void NotifyDupTeamDisReq::set_teamid(::google::protobuf::int32 value) {
  set_has_teamid();
  teamid_ = value;
}

// -------------------------------------------------------------------

// LCNotifyYaotaFirstPassReq

// optional uint64 cid = 1;
inline bool LCNotifyYaotaFirstPassReq::has_cid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LCNotifyYaotaFirstPassReq::set_has_cid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LCNotifyYaotaFirstPassReq::clear_has_cid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LCNotifyYaotaFirstPassReq::clear_cid() {
  cid_ = GOOGLE_ULONGLONG(0);
  clear_has_cid();
}
inline ::google::protobuf::uint64 LCNotifyYaotaFirstPassReq::cid() const {
  return cid_;
}
inline void LCNotifyYaotaFirstPassReq::set_cid(::google::protobuf::uint64 value) {
  set_has_cid();
  cid_ = value;
}

// repeated int32 recved_first_pass_ids = 2;
inline int LCNotifyYaotaFirstPassReq::recved_first_pass_ids_size() const {
  return recved_first_pass_ids_.size();
}
inline void LCNotifyYaotaFirstPassReq::clear_recved_first_pass_ids() {
  recved_first_pass_ids_.Clear();
}
inline ::google::protobuf::int32 LCNotifyYaotaFirstPassReq::recved_first_pass_ids(int index) const {
  return recved_first_pass_ids_.Get(index);
}
inline void LCNotifyYaotaFirstPassReq::set_recved_first_pass_ids(int index, ::google::protobuf::int32 value) {
  recved_first_pass_ids_.Set(index, value);
}
inline void LCNotifyYaotaFirstPassReq::add_recved_first_pass_ids(::google::protobuf::int32 value) {
  recved_first_pass_ids_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
LCNotifyYaotaFirstPassReq::recved_first_pass_ids() const {
  return recved_first_pass_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
LCNotifyYaotaFirstPassReq::mutable_recved_first_pass_ids() {
  return &recved_first_pass_ids_;
}

// -------------------------------------------------------------------

// CLYaotaRecvReq

// optional uint64 cid = 1;
inline bool CLYaotaRecvReq::has_cid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CLYaotaRecvReq::set_has_cid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CLYaotaRecvReq::clear_has_cid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CLYaotaRecvReq::clear_cid() {
  cid_ = GOOGLE_ULONGLONG(0);
  clear_has_cid();
}
inline ::google::protobuf::uint64 CLYaotaRecvReq::cid() const {
  return cid_;
}
inline void CLYaotaRecvReq::set_cid(::google::protobuf::uint64 value) {
  set_has_cid();
  cid_ = value;
}

// optional int32 dupid = 2;
inline bool CLYaotaRecvReq::has_dupid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CLYaotaRecvReq::set_has_dupid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CLYaotaRecvReq::clear_has_dupid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CLYaotaRecvReq::clear_dupid() {
  dupid_ = 0;
  clear_has_dupid();
}
inline ::google::protobuf::int32 CLYaotaRecvReq::dupid() const {
  return dupid_;
}
inline void CLYaotaRecvReq::set_dupid(::google::protobuf::int32 value) {
  set_has_dupid();
  dupid_ = value;
}

// optional int32 type = 3;
inline bool CLYaotaRecvReq::has_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CLYaotaRecvReq::set_has_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CLYaotaRecvReq::clear_has_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CLYaotaRecvReq::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 CLYaotaRecvReq::type() const {
  return type_;
}
inline void CLYaotaRecvReq::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// repeated int32 first_pass_ids = 4;
inline int CLYaotaRecvReq::first_pass_ids_size() const {
  return first_pass_ids_.size();
}
inline void CLYaotaRecvReq::clear_first_pass_ids() {
  first_pass_ids_.Clear();
}
inline ::google::protobuf::int32 CLYaotaRecvReq::first_pass_ids(int index) const {
  return first_pass_ids_.Get(index);
}
inline void CLYaotaRecvReq::set_first_pass_ids(int index, ::google::protobuf::int32 value) {
  first_pass_ids_.Set(index, value);
}
inline void CLYaotaRecvReq::add_first_pass_ids(::google::protobuf::int32 value) {
  first_pass_ids_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
CLYaotaRecvReq::first_pass_ids() const {
  return first_pass_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
CLYaotaRecvReq::mutable_first_pass_ids() {
  return &first_pass_ids_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto_ff

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_Dup_2eproto__INCLUDED
