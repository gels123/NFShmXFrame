// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Dup.proto

#ifndef PROTOBUF_Dup_2eproto__INCLUDED
#define PROTOBUF_Dup_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "yd_fieldoptions.pb.h"
#include "common_logic.pb.h"
#include "Com.pb.h"
#include "Scene.pb.h"
// @@protoc_insertion_point(includes)

namespace proto_ff {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_Dup_2eproto();
void protobuf_AssignDesc_Dup_2eproto();
void protobuf_ShutdownFile_Dup_2eproto();

class DupDropProto;
class DupTowerRecordEntry;
class TowerDupData;
class PassDupData;
class ComDupGroupData;
class EnterDupReq;
class EnterDupRsp;
class DupResultReq;
class DupResultRsp;
class DupLeaveReq;
class DupLeaveRsp;
class NotifyDupRsp;
class NotifyDupRunRsp;
class NotifyDupEndRsp;
class NotifyDupBeginCdRsp;
class RecvTowerDupReq;
class RecvTowerDupRsp;
class BuyDupNumReq;
class BuyDupNumRsp;
class DupTowerRecordReq;
class DupTowerRecordRsp;
class L2CEnterDupReq;
class L2CCreateDupRsp;
class L2CDupStateChgNotify;
class C2LPullRoleEnterDupNotify;
class L2CDupRoleActionNotify;
class S2CEnterDupReq;
class C2SEnterDupRsp;
class L2CTowerRecvRecordReq;

// ===================================================================

class DupDropProto : public ::google::protobuf::Message {
 public:
  DupDropProto();
  virtual ~DupDropProto();

  DupDropProto(const DupDropProto& from);

  inline DupDropProto& operator=(const DupDropProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DupDropProto& default_instance();

  void Swap(DupDropProto* other);

  // implements Message ----------------------------------------------

  DupDropProto* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DupDropProto& from);
  void MergeFrom(const DupDropProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.ItemProtoInfo pick_item = 1;
  inline int pick_item_size() const;
  inline void clear_pick_item();
  static const int kPickItemFieldNumber = 1;
  inline const ::proto_ff::ItemProtoInfo& pick_item(int index) const;
  inline ::proto_ff::ItemProtoInfo* mutable_pick_item(int index);
  inline ::proto_ff::ItemProtoInfo* add_pick_item();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::ItemProtoInfo >&
      pick_item() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::ItemProtoInfo >*
      mutable_pick_item();

  // optional int64 pick_gold = 2;
  inline bool has_pick_gold() const;
  inline void clear_pick_gold();
  static const int kPickGoldFieldNumber = 2;
  inline ::google::protobuf::int64 pick_gold() const;
  inline void set_pick_gold(::google::protobuf::int64 value);

  // optional int64 pick_exp = 3;
  inline bool has_pick_exp() const;
  inline void clear_pick_exp();
  static const int kPickExpFieldNumber = 3;
  inline ::google::protobuf::int64 pick_exp() const;
  inline void set_pick_exp(::google::protobuf::int64 value);

  // optional int32 kill_num = 4;
  inline bool has_kill_num() const;
  inline void clear_kill_num();
  static const int kKillNumFieldNumber = 4;
  inline ::google::protobuf::int32 kill_num() const;
  inline void set_kill_num(::google::protobuf::int32 value);

  // repeated .proto_ff.ItemProtoInfo star3 = 5;
  inline int star3_size() const;
  inline void clear_star3();
  static const int kStar3FieldNumber = 5;
  inline const ::proto_ff::ItemProtoInfo& star3(int index) const;
  inline ::proto_ff::ItemProtoInfo* mutable_star3(int index);
  inline ::proto_ff::ItemProtoInfo* add_star3();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::ItemProtoInfo >&
      star3() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::ItemProtoInfo >*
      mutable_star3();

  // @@protoc_insertion_point(class_scope:proto_ff.DupDropProto)
 private:
  inline void set_has_pick_gold();
  inline void clear_has_pick_gold();
  inline void set_has_pick_exp();
  inline void clear_has_pick_exp();
  inline void set_has_kill_num();
  inline void clear_has_kill_num();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::ItemProtoInfo > pick_item_;
  ::google::protobuf::int64 pick_gold_;
  ::google::protobuf::int64 pick_exp_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::ItemProtoInfo > star3_;
  ::google::protobuf::int32 kill_num_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_Dup_2eproto();
  friend void protobuf_AssignDesc_Dup_2eproto();
  friend void protobuf_ShutdownFile_Dup_2eproto();

  void InitAsDefaultInstance();
  static DupDropProto* default_instance_;
};
// -------------------------------------------------------------------

class DupTowerRecordEntry : public ::google::protobuf::Message {
 public:
  DupTowerRecordEntry();
  virtual ~DupTowerRecordEntry();

  DupTowerRecordEntry(const DupTowerRecordEntry& from);

  inline DupTowerRecordEntry& operator=(const DupTowerRecordEntry& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DupTowerRecordEntry& default_instance();

  void Swap(DupTowerRecordEntry* other);

  // implements Message ----------------------------------------------

  DupTowerRecordEntry* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DupTowerRecordEntry& from);
  void MergeFrom(const DupTowerRecordEntry& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string name = 1;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 1;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // optional uint64 time = 2;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 2;
  inline ::google::protobuf::uint64 time() const;
  inline void set_time(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.DupTowerRecordEntry)
 private:
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_time();
  inline void clear_has_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* name_;
  ::google::protobuf::uint64 time_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Dup_2eproto();
  friend void protobuf_AssignDesc_Dup_2eproto();
  friend void protobuf_ShutdownFile_Dup_2eproto();

  void InitAsDefaultInstance();
  static DupTowerRecordEntry* default_instance_;
};
// -------------------------------------------------------------------

class TowerDupData : public ::google::protobuf::Message {
 public:
  TowerDupData();
  virtual ~TowerDupData();

  TowerDupData(const TowerDupData& from);

  inline TowerDupData& operator=(const TowerDupData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TowerDupData& default_instance();

  void Swap(TowerDupData* other);

  // implements Message ----------------------------------------------

  TowerDupData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TowerDupData& from);
  void MergeFrom(const TowerDupData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int64 ids = 1;
  inline int ids_size() const;
  inline void clear_ids();
  static const int kIdsFieldNumber = 1;
  inline ::google::protobuf::int64 ids(int index) const;
  inline void set_ids(int index, ::google::protobuf::int64 value);
  inline void add_ids(::google::protobuf::int64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      ids() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_ids();

  // @@protoc_insertion_point(class_scope:proto_ff.TowerDupData)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > ids_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Dup_2eproto();
  friend void protobuf_AssignDesc_Dup_2eproto();
  friend void protobuf_ShutdownFile_Dup_2eproto();

  void InitAsDefaultInstance();
  static TowerDupData* default_instance_;
};
// -------------------------------------------------------------------

class PassDupData : public ::google::protobuf::Message {
 public:
  PassDupData();
  virtual ~PassDupData();

  PassDupData(const PassDupData& from);

  inline PassDupData& operator=(const PassDupData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PassDupData& default_instance();

  void Swap(PassDupData* other);

  // implements Message ----------------------------------------------

  PassDupData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PassDupData& from);
  void MergeFrom(const PassDupData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int64 id() const;
  inline void set_id(::google::protobuf::int64 value);

  // optional int32 star = 2;
  inline bool has_star() const;
  inline void clear_star();
  static const int kStarFieldNumber = 2;
  inline ::google::protobuf::int32 star() const;
  inline void set_star(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.PassDupData)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_star();
  inline void clear_has_star();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 id_;
  ::google::protobuf::int32 star_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Dup_2eproto();
  friend void protobuf_AssignDesc_Dup_2eproto();
  friend void protobuf_ShutdownFile_Dup_2eproto();

  void InitAsDefaultInstance();
  static PassDupData* default_instance_;
};
// -------------------------------------------------------------------

class ComDupGroupData : public ::google::protobuf::Message {
 public:
  ComDupGroupData();
  virtual ~ComDupGroupData();

  ComDupGroupData(const ComDupGroupData& from);

  inline ComDupGroupData& operator=(const ComDupGroupData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ComDupGroupData& default_instance();

  void Swap(ComDupGroupData* other);

  // implements Message ----------------------------------------------

  ComDupGroupData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ComDupGroupData& from);
  void MergeFrom(const ComDupGroupData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 group = 1;
  inline bool has_group() const;
  inline void clear_group();
  static const int kGroupFieldNumber = 1;
  inline ::google::protobuf::int32 group() const;
  inline void set_group(::google::protobuf::int32 value);

  // optional uint64 pass_dupId = 2;
  inline bool has_pass_dupid() const;
  inline void clear_pass_dupid();
  static const int kPassDupIdFieldNumber = 2;
  inline ::google::protobuf::uint64 pass_dupid() const;
  inline void set_pass_dupid(::google::protobuf::uint64 value);

  // optional int32 enter_num = 3;
  inline bool has_enter_num() const;
  inline void clear_enter_num();
  static const int kEnterNumFieldNumber = 3;
  inline ::google::protobuf::int32 enter_num() const;
  inline void set_enter_num(::google::protobuf::int32 value);

  // optional int32 max_num = 4;
  inline bool has_max_num() const;
  inline void clear_max_num();
  static const int kMaxNumFieldNumber = 4;
  inline ::google::protobuf::int32 max_num() const;
  inline void set_max_num(::google::protobuf::int32 value);

  // optional int32 buy_num = 5;
  inline bool has_buy_num() const;
  inline void clear_buy_num();
  static const int kBuyNumFieldNumber = 5;
  inline ::google::protobuf::int32 buy_num() const;
  inline void set_buy_num(::google::protobuf::int32 value);

  // optional int32 star = 6;
  inline bool has_star() const;
  inline void clear_star();
  static const int kStarFieldNumber = 6;
  inline ::google::protobuf::int32 star() const;
  inline void set_star(::google::protobuf::int32 value);

  // optional .proto_ff.TowerDupData tower = 7;
  inline bool has_tower() const;
  inline void clear_tower();
  static const int kTowerFieldNumber = 7;
  inline const ::proto_ff::TowerDupData& tower() const;
  inline ::proto_ff::TowerDupData* mutable_tower();
  inline ::proto_ff::TowerDupData* release_tower();
  inline void set_allocated_tower(::proto_ff::TowerDupData* tower);

  // repeated .proto_ff.PassDupData pass = 8;
  inline int pass_size() const;
  inline void clear_pass();
  static const int kPassFieldNumber = 8;
  inline const ::proto_ff::PassDupData& pass(int index) const;
  inline ::proto_ff::PassDupData* mutable_pass(int index);
  inline ::proto_ff::PassDupData* add_pass();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::PassDupData >&
      pass() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::PassDupData >*
      mutable_pass();

  // @@protoc_insertion_point(class_scope:proto_ff.ComDupGroupData)
 private:
  inline void set_has_group();
  inline void clear_has_group();
  inline void set_has_pass_dupid();
  inline void clear_has_pass_dupid();
  inline void set_has_enter_num();
  inline void clear_has_enter_num();
  inline void set_has_max_num();
  inline void clear_has_max_num();
  inline void set_has_buy_num();
  inline void clear_has_buy_num();
  inline void set_has_star();
  inline void clear_has_star();
  inline void set_has_tower();
  inline void clear_has_tower();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 pass_dupid_;
  ::google::protobuf::int32 group_;
  ::google::protobuf::int32 enter_num_;
  ::google::protobuf::int32 max_num_;
  ::google::protobuf::int32 buy_num_;
  ::proto_ff::TowerDupData* tower_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::PassDupData > pass_;
  ::google::protobuf::int32 star_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];

  friend void  protobuf_AddDesc_Dup_2eproto();
  friend void protobuf_AssignDesc_Dup_2eproto();
  friend void protobuf_ShutdownFile_Dup_2eproto();

  void InitAsDefaultInstance();
  static ComDupGroupData* default_instance_;
};
// -------------------------------------------------------------------

class EnterDupReq : public ::google::protobuf::Message {
 public:
  EnterDupReq();
  virtual ~EnterDupReq();

  EnterDupReq(const EnterDupReq& from);

  inline EnterDupReq& operator=(const EnterDupReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EnterDupReq& default_instance();

  void Swap(EnterDupReq* other);

  // implements Message ----------------------------------------------

  EnterDupReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const EnterDupReq& from);
  void MergeFrom(const EnterDupReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 dupId = 1;
  inline bool has_dupid() const;
  inline void clear_dupid();
  static const int kDupIdFieldNumber = 1;
  inline ::google::protobuf::uint64 dupid() const;
  inline void set_dupid(::google::protobuf::uint64 value);

  // optional int32 mergeNum = 2;
  inline bool has_mergenum() const;
  inline void clear_mergenum();
  static const int kMergeNumFieldNumber = 2;
  inline ::google::protobuf::int32 mergenum() const;
  inline void set_mergenum(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.EnterDupReq)
 private:
  inline void set_has_dupid();
  inline void clear_has_dupid();
  inline void set_has_mergenum();
  inline void clear_has_mergenum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 dupid_;
  ::google::protobuf::int32 mergenum_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Dup_2eproto();
  friend void protobuf_AssignDesc_Dup_2eproto();
  friend void protobuf_ShutdownFile_Dup_2eproto();

  void InitAsDefaultInstance();
  static EnterDupReq* default_instance_;
};
// -------------------------------------------------------------------

class EnterDupRsp : public ::google::protobuf::Message {
 public:
  EnterDupRsp();
  virtual ~EnterDupRsp();

  EnterDupRsp(const EnterDupRsp& from);

  inline EnterDupRsp& operator=(const EnterDupRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EnterDupRsp& default_instance();

  void Swap(EnterDupRsp* other);

  // implements Message ----------------------------------------------

  EnterDupRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const EnterDupRsp& from);
  void MergeFrom(const EnterDupRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 ret = 1;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 1;
  inline ::google::protobuf::int32 ret() const;
  inline void set_ret(::google::protobuf::int32 value);

  // optional uint64 dupId = 2;
  inline bool has_dupid() const;
  inline void clear_dupid();
  static const int kDupIdFieldNumber = 2;
  inline ::google::protobuf::uint64 dupid() const;
  inline void set_dupid(::google::protobuf::uint64 value);

  // optional int32 dupTime = 3;
  inline bool has_duptime() const;
  inline void clear_duptime();
  static const int kDupTimeFieldNumber = 3;
  inline ::google::protobuf::int32 duptime() const;
  inline void set_duptime(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.EnterDupRsp)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();
  inline void set_has_dupid();
  inline void clear_has_dupid();
  inline void set_has_duptime();
  inline void clear_has_duptime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 dupid_;
  ::google::protobuf::int32 ret_;
  ::google::protobuf::int32 duptime_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_Dup_2eproto();
  friend void protobuf_AssignDesc_Dup_2eproto();
  friend void protobuf_ShutdownFile_Dup_2eproto();

  void InitAsDefaultInstance();
  static EnterDupRsp* default_instance_;
};
// -------------------------------------------------------------------

class DupResultReq : public ::google::protobuf::Message {
 public:
  DupResultReq();
  virtual ~DupResultReq();

  DupResultReq(const DupResultReq& from);

  inline DupResultReq& operator=(const DupResultReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DupResultReq& default_instance();

  void Swap(DupResultReq* other);

  // implements Message ----------------------------------------------

  DupResultReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DupResultReq& from);
  void MergeFrom(const DupResultReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto_ff.DupResultReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_Dup_2eproto();
  friend void protobuf_AssignDesc_Dup_2eproto();
  friend void protobuf_ShutdownFile_Dup_2eproto();

  void InitAsDefaultInstance();
  static DupResultReq* default_instance_;
};
// -------------------------------------------------------------------

class DupResultRsp : public ::google::protobuf::Message {
 public:
  DupResultRsp();
  virtual ~DupResultRsp();

  DupResultRsp(const DupResultRsp& from);

  inline DupResultRsp& operator=(const DupResultRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DupResultRsp& default_instance();

  void Swap(DupResultRsp* other);

  // implements Message ----------------------------------------------

  DupResultRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DupResultRsp& from);
  void MergeFrom(const DupResultRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // optional uint64 dupId = 2;
  inline bool has_dupid() const;
  inline void clear_dupid();
  static const int kDupIdFieldNumber = 2;
  inline ::google::protobuf::uint64 dupid() const;
  inline void set_dupid(::google::protobuf::uint64 value);

  // optional int32 star = 3;
  inline bool has_star() const;
  inline void clear_star();
  static const int kStarFieldNumber = 3;
  inline ::google::protobuf::int32 star() const;
  inline void set_star(::google::protobuf::int32 value);

  // optional int32 cost_sec = 4;
  inline bool has_cost_sec() const;
  inline void clear_cost_sec();
  static const int kCostSecFieldNumber = 4;
  inline ::google::protobuf::int32 cost_sec() const;
  inline void set_cost_sec(::google::protobuf::int32 value);

  // optional .proto_ff.DupDropProto info = 5;
  inline bool has_info() const;
  inline void clear_info();
  static const int kInfoFieldNumber = 5;
  inline const ::proto_ff::DupDropProto& info() const;
  inline ::proto_ff::DupDropProto* mutable_info();
  inline ::proto_ff::DupDropProto* release_info();
  inline void set_allocated_info(::proto_ff::DupDropProto* info);

  // @@protoc_insertion_point(class_scope:proto_ff.DupResultRsp)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_dupid();
  inline void clear_has_dupid();
  inline void set_has_star();
  inline void clear_has_star();
  inline void set_has_cost_sec();
  inline void clear_has_cost_sec();
  inline void set_has_info();
  inline void clear_has_info();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 dupid_;
  ::google::protobuf::int32 result_;
  ::google::protobuf::int32 star_;
  ::proto_ff::DupDropProto* info_;
  ::google::protobuf::int32 cost_sec_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_Dup_2eproto();
  friend void protobuf_AssignDesc_Dup_2eproto();
  friend void protobuf_ShutdownFile_Dup_2eproto();

  void InitAsDefaultInstance();
  static DupResultRsp* default_instance_;
};
// -------------------------------------------------------------------

class DupLeaveReq : public ::google::protobuf::Message {
 public:
  DupLeaveReq();
  virtual ~DupLeaveReq();

  DupLeaveReq(const DupLeaveReq& from);

  inline DupLeaveReq& operator=(const DupLeaveReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DupLeaveReq& default_instance();

  void Swap(DupLeaveReq* other);

  // implements Message ----------------------------------------------

  DupLeaveReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DupLeaveReq& from);
  void MergeFrom(const DupLeaveReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto_ff.DupLeaveReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_Dup_2eproto();
  friend void protobuf_AssignDesc_Dup_2eproto();
  friend void protobuf_ShutdownFile_Dup_2eproto();

  void InitAsDefaultInstance();
  static DupLeaveReq* default_instance_;
};
// -------------------------------------------------------------------

class DupLeaveRsp : public ::google::protobuf::Message {
 public:
  DupLeaveRsp();
  virtual ~DupLeaveRsp();

  DupLeaveRsp(const DupLeaveRsp& from);

  inline DupLeaveRsp& operator=(const DupLeaveRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DupLeaveRsp& default_instance();

  void Swap(DupLeaveRsp* other);

  // implements Message ----------------------------------------------

  DupLeaveRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DupLeaveRsp& from);
  void MergeFrom(const DupLeaveRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // optional int64 dupId = 2;
  inline bool has_dupid() const;
  inline void clear_dupid();
  static const int kDupIdFieldNumber = 2;
  inline ::google::protobuf::int64 dupid() const;
  inline void set_dupid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.DupLeaveRsp)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_dupid();
  inline void clear_has_dupid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 dupid_;
  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Dup_2eproto();
  friend void protobuf_AssignDesc_Dup_2eproto();
  friend void protobuf_ShutdownFile_Dup_2eproto();

  void InitAsDefaultInstance();
  static DupLeaveRsp* default_instance_;
};
// -------------------------------------------------------------------

class NotifyDupRsp : public ::google::protobuf::Message {
 public:
  NotifyDupRsp();
  virtual ~NotifyDupRsp();

  NotifyDupRsp(const NotifyDupRsp& from);

  inline NotifyDupRsp& operator=(const NotifyDupRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NotifyDupRsp& default_instance();

  void Swap(NotifyDupRsp* other);

  // implements Message ----------------------------------------------

  NotifyDupRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NotifyDupRsp& from);
  void MergeFrom(const NotifyDupRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // repeated .proto_ff.ComDupGroupData infos = 2;
  inline int infos_size() const;
  inline void clear_infos();
  static const int kInfosFieldNumber = 2;
  inline const ::proto_ff::ComDupGroupData& infos(int index) const;
  inline ::proto_ff::ComDupGroupData* mutable_infos(int index);
  inline ::proto_ff::ComDupGroupData* add_infos();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::ComDupGroupData >&
      infos() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::ComDupGroupData >*
      mutable_infos();

  // @@protoc_insertion_point(class_scope:proto_ff.NotifyDupRsp)
 private:
  inline void set_has_type();
  inline void clear_has_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::ComDupGroupData > infos_;
  ::google::protobuf::int32 type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Dup_2eproto();
  friend void protobuf_AssignDesc_Dup_2eproto();
  friend void protobuf_ShutdownFile_Dup_2eproto();

  void InitAsDefaultInstance();
  static NotifyDupRsp* default_instance_;
};
// -------------------------------------------------------------------

class NotifyDupRunRsp : public ::google::protobuf::Message {
 public:
  NotifyDupRunRsp();
  virtual ~NotifyDupRunRsp();

  NotifyDupRunRsp(const NotifyDupRunRsp& from);

  inline NotifyDupRunRsp& operator=(const NotifyDupRunRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NotifyDupRunRsp& default_instance();

  void Swap(NotifyDupRunRsp* other);

  // implements Message ----------------------------------------------

  NotifyDupRunRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NotifyDupRunRsp& from);
  void MergeFrom(const NotifyDupRunRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 dupId = 1;
  inline bool has_dupid() const;
  inline void clear_dupid();
  static const int kDupIdFieldNumber = 1;
  inline ::google::protobuf::uint64 dupid() const;
  inline void set_dupid(::google::protobuf::uint64 value);

  // optional int32 kill_num = 2;
  inline bool has_kill_num() const;
  inline void clear_kill_num();
  static const int kKillNumFieldNumber = 2;
  inline ::google::protobuf::int32 kill_num() const;
  inline void set_kill_num(::google::protobuf::int32 value);

  // optional int32 all_num = 3;
  inline bool has_all_num() const;
  inline void clear_all_num();
  static const int kAllNumFieldNumber = 3;
  inline ::google::protobuf::int32 all_num() const;
  inline void set_all_num(::google::protobuf::int32 value);

  // optional int32 cur_wave = 4;
  inline bool has_cur_wave() const;
  inline void clear_cur_wave();
  static const int kCurWaveFieldNumber = 4;
  inline ::google::protobuf::int32 cur_wave() const;
  inline void set_cur_wave(::google::protobuf::int32 value);

  // optional int32 max_wave = 5;
  inline bool has_max_wave() const;
  inline void clear_max_wave();
  static const int kMaxWaveFieldNumber = 5;
  inline ::google::protobuf::int32 max_wave() const;
  inline void set_max_wave(::google::protobuf::int32 value);

  // optional int64 cur_hp = 6;
  inline bool has_cur_hp() const;
  inline void clear_cur_hp();
  static const int kCurHpFieldNumber = 6;
  inline ::google::protobuf::int64 cur_hp() const;
  inline void set_cur_hp(::google::protobuf::int64 value);

  // optional int64 max_hp = 7;
  inline bool has_max_hp() const;
  inline void clear_max_hp();
  static const int kMaxHpFieldNumber = 7;
  inline ::google::protobuf::int64 max_hp() const;
  inline void set_max_hp(::google::protobuf::int64 value);

  // repeated .proto_ff.ComPair64 items = 8;
  inline int items_size() const;
  inline void clear_items();
  static const int kItemsFieldNumber = 8;
  inline const ::proto_ff::ComPair64& items(int index) const;
  inline ::proto_ff::ComPair64* mutable_items(int index);
  inline ::proto_ff::ComPair64* add_items();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair64 >&
      items() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair64 >*
      mutable_items();

  // @@protoc_insertion_point(class_scope:proto_ff.NotifyDupRunRsp)
 private:
  inline void set_has_dupid();
  inline void clear_has_dupid();
  inline void set_has_kill_num();
  inline void clear_has_kill_num();
  inline void set_has_all_num();
  inline void clear_has_all_num();
  inline void set_has_cur_wave();
  inline void clear_has_cur_wave();
  inline void set_has_max_wave();
  inline void clear_has_max_wave();
  inline void set_has_cur_hp();
  inline void clear_has_cur_hp();
  inline void set_has_max_hp();
  inline void clear_has_max_hp();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 dupid_;
  ::google::protobuf::int32 kill_num_;
  ::google::protobuf::int32 all_num_;
  ::google::protobuf::int32 cur_wave_;
  ::google::protobuf::int32 max_wave_;
  ::google::protobuf::int64 cur_hp_;
  ::google::protobuf::int64 max_hp_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair64 > items_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];

  friend void  protobuf_AddDesc_Dup_2eproto();
  friend void protobuf_AssignDesc_Dup_2eproto();
  friend void protobuf_ShutdownFile_Dup_2eproto();

  void InitAsDefaultInstance();
  static NotifyDupRunRsp* default_instance_;
};
// -------------------------------------------------------------------

class NotifyDupEndRsp : public ::google::protobuf::Message {
 public:
  NotifyDupEndRsp();
  virtual ~NotifyDupEndRsp();

  NotifyDupEndRsp(const NotifyDupEndRsp& from);

  inline NotifyDupEndRsp& operator=(const NotifyDupEndRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NotifyDupEndRsp& default_instance();

  void Swap(NotifyDupEndRsp* other);

  // implements Message ----------------------------------------------

  NotifyDupEndRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NotifyDupEndRsp& from);
  void MergeFrom(const NotifyDupEndRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 dupId = 1;
  inline bool has_dupid() const;
  inline void clear_dupid();
  static const int kDupIdFieldNumber = 1;
  inline ::google::protobuf::uint64 dupid() const;
  inline void set_dupid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.NotifyDupEndRsp)
 private:
  inline void set_has_dupid();
  inline void clear_has_dupid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 dupid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Dup_2eproto();
  friend void protobuf_AssignDesc_Dup_2eproto();
  friend void protobuf_ShutdownFile_Dup_2eproto();

  void InitAsDefaultInstance();
  static NotifyDupEndRsp* default_instance_;
};
// -------------------------------------------------------------------

class NotifyDupBeginCdRsp : public ::google::protobuf::Message {
 public:
  NotifyDupBeginCdRsp();
  virtual ~NotifyDupBeginCdRsp();

  NotifyDupBeginCdRsp(const NotifyDupBeginCdRsp& from);

  inline NotifyDupBeginCdRsp& operator=(const NotifyDupBeginCdRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NotifyDupBeginCdRsp& default_instance();

  void Swap(NotifyDupBeginCdRsp* other);

  // implements Message ----------------------------------------------

  NotifyDupBeginCdRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NotifyDupBeginCdRsp& from);
  void MergeFrom(const NotifyDupBeginCdRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 sceneId = 1;
  inline bool has_sceneid() const;
  inline void clear_sceneid();
  static const int kSceneIdFieldNumber = 1;
  inline ::google::protobuf::uint64 sceneid() const;
  inline void set_sceneid(::google::protobuf::uint64 value);

  // optional uint64 dupId = 2;
  inline bool has_dupid() const;
  inline void clear_dupid();
  static const int kDupIdFieldNumber = 2;
  inline ::google::protobuf::uint64 dupid() const;
  inline void set_dupid(::google::protobuf::uint64 value);

  // optional uint64 timeEnd = 3;
  inline bool has_timeend() const;
  inline void clear_timeend();
  static const int kTimeEndFieldNumber = 3;
  inline ::google::protobuf::uint64 timeend() const;
  inline void set_timeend(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.NotifyDupBeginCdRsp)
 private:
  inline void set_has_sceneid();
  inline void clear_has_sceneid();
  inline void set_has_dupid();
  inline void clear_has_dupid();
  inline void set_has_timeend();
  inline void clear_has_timeend();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 sceneid_;
  ::google::protobuf::uint64 dupid_;
  ::google::protobuf::uint64 timeend_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_Dup_2eproto();
  friend void protobuf_AssignDesc_Dup_2eproto();
  friend void protobuf_ShutdownFile_Dup_2eproto();

  void InitAsDefaultInstance();
  static NotifyDupBeginCdRsp* default_instance_;
};
// -------------------------------------------------------------------

class RecvTowerDupReq : public ::google::protobuf::Message {
 public:
  RecvTowerDupReq();
  virtual ~RecvTowerDupReq();

  RecvTowerDupReq(const RecvTowerDupReq& from);

  inline RecvTowerDupReq& operator=(const RecvTowerDupReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RecvTowerDupReq& default_instance();

  void Swap(RecvTowerDupReq* other);

  // implements Message ----------------------------------------------

  RecvTowerDupReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RecvTowerDupReq& from);
  void MergeFrom(const RecvTowerDupReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint64 id() const;
  inline void set_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.RecvTowerDupReq)
 private:
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Dup_2eproto();
  friend void protobuf_AssignDesc_Dup_2eproto();
  friend void protobuf_ShutdownFile_Dup_2eproto();

  void InitAsDefaultInstance();
  static RecvTowerDupReq* default_instance_;
};
// -------------------------------------------------------------------

class RecvTowerDupRsp : public ::google::protobuf::Message {
 public:
  RecvTowerDupRsp();
  virtual ~RecvTowerDupRsp();

  RecvTowerDupRsp(const RecvTowerDupRsp& from);

  inline RecvTowerDupRsp& operator=(const RecvTowerDupRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RecvTowerDupRsp& default_instance();

  void Swap(RecvTowerDupRsp* other);

  // implements Message ----------------------------------------------

  RecvTowerDupRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RecvTowerDupRsp& from);
  void MergeFrom(const RecvTowerDupRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // optional uint64 id = 2;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 2;
  inline ::google::protobuf::uint64 id() const;
  inline void set_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.RecvTowerDupRsp)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 id_;
  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Dup_2eproto();
  friend void protobuf_AssignDesc_Dup_2eproto();
  friend void protobuf_ShutdownFile_Dup_2eproto();

  void InitAsDefaultInstance();
  static RecvTowerDupRsp* default_instance_;
};
// -------------------------------------------------------------------

class BuyDupNumReq : public ::google::protobuf::Message {
 public:
  BuyDupNumReq();
  virtual ~BuyDupNumReq();

  BuyDupNumReq(const BuyDupNumReq& from);

  inline BuyDupNumReq& operator=(const BuyDupNumReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BuyDupNumReq& default_instance();

  void Swap(BuyDupNumReq* other);

  // implements Message ----------------------------------------------

  BuyDupNumReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BuyDupNumReq& from);
  void MergeFrom(const BuyDupNumReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 group = 1;
  inline bool has_group() const;
  inline void clear_group();
  static const int kGroupFieldNumber = 1;
  inline ::google::protobuf::int32 group() const;
  inline void set_group(::google::protobuf::int32 value);

  // optional int32 num = 2;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 2;
  inline ::google::protobuf::int32 num() const;
  inline void set_num(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.BuyDupNumReq)
 private:
  inline void set_has_group();
  inline void clear_has_group();
  inline void set_has_num();
  inline void clear_has_num();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 group_;
  ::google::protobuf::int32 num_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Dup_2eproto();
  friend void protobuf_AssignDesc_Dup_2eproto();
  friend void protobuf_ShutdownFile_Dup_2eproto();

  void InitAsDefaultInstance();
  static BuyDupNumReq* default_instance_;
};
// -------------------------------------------------------------------

class BuyDupNumRsp : public ::google::protobuf::Message {
 public:
  BuyDupNumRsp();
  virtual ~BuyDupNumRsp();

  BuyDupNumRsp(const BuyDupNumRsp& from);

  inline BuyDupNumRsp& operator=(const BuyDupNumRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BuyDupNumRsp& default_instance();

  void Swap(BuyDupNumRsp* other);

  // implements Message ----------------------------------------------

  BuyDupNumRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BuyDupNumRsp& from);
  void MergeFrom(const BuyDupNumRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // optional int32 group = 2;
  inline bool has_group() const;
  inline void clear_group();
  static const int kGroupFieldNumber = 2;
  inline ::google::protobuf::int32 group() const;
  inline void set_group(::google::protobuf::int32 value);

  // optional int32 num = 3;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 3;
  inline ::google::protobuf::int32 num() const;
  inline void set_num(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.BuyDupNumRsp)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_group();
  inline void clear_has_group();
  inline void set_has_num();
  inline void clear_has_num();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 result_;
  ::google::protobuf::int32 group_;
  ::google::protobuf::int32 num_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_Dup_2eproto();
  friend void protobuf_AssignDesc_Dup_2eproto();
  friend void protobuf_ShutdownFile_Dup_2eproto();

  void InitAsDefaultInstance();
  static BuyDupNumRsp* default_instance_;
};
// -------------------------------------------------------------------

class DupTowerRecordReq : public ::google::protobuf::Message {
 public:
  DupTowerRecordReq();
  virtual ~DupTowerRecordReq();

  DupTowerRecordReq(const DupTowerRecordReq& from);

  inline DupTowerRecordReq& operator=(const DupTowerRecordReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DupTowerRecordReq& default_instance();

  void Swap(DupTowerRecordReq* other);

  // implements Message ----------------------------------------------

  DupTowerRecordReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DupTowerRecordReq& from);
  void MergeFrom(const DupTowerRecordReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint64 id() const;
  inline void set_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.DupTowerRecordReq)
 private:
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Dup_2eproto();
  friend void protobuf_AssignDesc_Dup_2eproto();
  friend void protobuf_ShutdownFile_Dup_2eproto();

  void InitAsDefaultInstance();
  static DupTowerRecordReq* default_instance_;
};
// -------------------------------------------------------------------

class DupTowerRecordRsp : public ::google::protobuf::Message {
 public:
  DupTowerRecordRsp();
  virtual ~DupTowerRecordRsp();

  DupTowerRecordRsp(const DupTowerRecordRsp& from);

  inline DupTowerRecordRsp& operator=(const DupTowerRecordRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DupTowerRecordRsp& default_instance();

  void Swap(DupTowerRecordRsp* other);

  // implements Message ----------------------------------------------

  DupTowerRecordRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DupTowerRecordRsp& from);
  void MergeFrom(const DupTowerRecordRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint64 id() const;
  inline void set_id(::google::protobuf::uint64 value);

  // repeated .proto_ff.DupTowerRecordEntry entrys = 2;
  inline int entrys_size() const;
  inline void clear_entrys();
  static const int kEntrysFieldNumber = 2;
  inline const ::proto_ff::DupTowerRecordEntry& entrys(int index) const;
  inline ::proto_ff::DupTowerRecordEntry* mutable_entrys(int index);
  inline ::proto_ff::DupTowerRecordEntry* add_entrys();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::DupTowerRecordEntry >&
      entrys() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::DupTowerRecordEntry >*
      mutable_entrys();

  // @@protoc_insertion_point(class_scope:proto_ff.DupTowerRecordRsp)
 private:
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 id_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::DupTowerRecordEntry > entrys_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Dup_2eproto();
  friend void protobuf_AssignDesc_Dup_2eproto();
  friend void protobuf_ShutdownFile_Dup_2eproto();

  void InitAsDefaultInstance();
  static DupTowerRecordRsp* default_instance_;
};
// -------------------------------------------------------------------

class L2CEnterDupReq : public ::google::protobuf::Message {
 public:
  L2CEnterDupReq();
  virtual ~L2CEnterDupReq();

  L2CEnterDupReq(const L2CEnterDupReq& from);

  inline L2CEnterDupReq& operator=(const L2CEnterDupReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const L2CEnterDupReq& default_instance();

  void Swap(L2CEnterDupReq* other);

  // implements Message ----------------------------------------------

  L2CEnterDupReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const L2CEnterDupReq& from);
  void MergeFrom(const L2CEnterDupReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .proto_ff.CreateSceneParamProto params = 1;
  inline bool has_params() const;
  inline void clear_params();
  static const int kParamsFieldNumber = 1;
  inline const ::proto_ff::CreateSceneParamProto& params() const;
  inline ::proto_ff::CreateSceneParamProto* mutable_params();
  inline ::proto_ff::CreateSceneParamProto* release_params();
  inline void set_allocated_params(::proto_ff::CreateSceneParamProto* params);

  // @@protoc_insertion_point(class_scope:proto_ff.L2CEnterDupReq)
 private:
  inline void set_has_params();
  inline void clear_has_params();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::proto_ff::CreateSceneParamProto* params_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Dup_2eproto();
  friend void protobuf_AssignDesc_Dup_2eproto();
  friend void protobuf_ShutdownFile_Dup_2eproto();

  void InitAsDefaultInstance();
  static L2CEnterDupReq* default_instance_;
};
// -------------------------------------------------------------------

class L2CCreateDupRsp : public ::google::protobuf::Message {
 public:
  L2CCreateDupRsp();
  virtual ~L2CCreateDupRsp();

  L2CCreateDupRsp(const L2CCreateDupRsp& from);

  inline L2CCreateDupRsp& operator=(const L2CCreateDupRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const L2CCreateDupRsp& default_instance();

  void Swap(L2CCreateDupRsp* other);

  // implements Message ----------------------------------------------

  L2CCreateDupRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const L2CCreateDupRsp& from);
  void MergeFrom(const L2CCreateDupRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 ret = 1;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 1;
  inline ::google::protobuf::int32 ret() const;
  inline void set_ret(::google::protobuf::int32 value);

  // optional uint64 sceneId = 2;
  inline bool has_sceneid() const;
  inline void clear_sceneid();
  static const int kSceneIdFieldNumber = 2;
  inline ::google::protobuf::uint64 sceneid() const;
  inline void set_sceneid(::google::protobuf::uint64 value);

  // optional uint64 dupId = 3;
  inline bool has_dupid() const;
  inline void clear_dupid();
  static const int kDupIdFieldNumber = 3;
  inline ::google::protobuf::uint64 dupid() const;
  inline void set_dupid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.L2CCreateDupRsp)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();
  inline void set_has_sceneid();
  inline void clear_has_sceneid();
  inline void set_has_dupid();
  inline void clear_has_dupid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 sceneid_;
  ::google::protobuf::uint64 dupid_;
  ::google::protobuf::int32 ret_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_Dup_2eproto();
  friend void protobuf_AssignDesc_Dup_2eproto();
  friend void protobuf_ShutdownFile_Dup_2eproto();

  void InitAsDefaultInstance();
  static L2CCreateDupRsp* default_instance_;
};
// -------------------------------------------------------------------

class L2CDupStateChgNotify : public ::google::protobuf::Message {
 public:
  L2CDupStateChgNotify();
  virtual ~L2CDupStateChgNotify();

  L2CDupStateChgNotify(const L2CDupStateChgNotify& from);

  inline L2CDupStateChgNotify& operator=(const L2CDupStateChgNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const L2CDupStateChgNotify& default_instance();

  void Swap(L2CDupStateChgNotify* other);

  // implements Message ----------------------------------------------

  L2CDupStateChgNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const L2CDupStateChgNotify& from);
  void MergeFrom(const L2CDupStateChgNotify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 sceneId = 1;
  inline bool has_sceneid() const;
  inline void clear_sceneid();
  static const int kSceneIdFieldNumber = 1;
  inline ::google::protobuf::uint64 sceneid() const;
  inline void set_sceneid(::google::protobuf::uint64 value);

  // optional uint64 dupId = 2;
  inline bool has_dupid() const;
  inline void clear_dupid();
  static const int kDupIdFieldNumber = 2;
  inline ::google::protobuf::uint64 dupid() const;
  inline void set_dupid(::google::protobuf::uint64 value);

  // optional int32 state = 3;
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 3;
  inline ::google::protobuf::int32 state() const;
  inline void set_state(::google::protobuf::int32 value);

  // optional uint64 time = 4;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 4;
  inline ::google::protobuf::uint64 time() const;
  inline void set_time(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.L2CDupStateChgNotify)
 private:
  inline void set_has_sceneid();
  inline void clear_has_sceneid();
  inline void set_has_dupid();
  inline void clear_has_dupid();
  inline void set_has_state();
  inline void clear_has_state();
  inline void set_has_time();
  inline void clear_has_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 sceneid_;
  ::google::protobuf::uint64 dupid_;
  ::google::protobuf::uint64 time_;
  ::google::protobuf::int32 state_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_Dup_2eproto();
  friend void protobuf_AssignDesc_Dup_2eproto();
  friend void protobuf_ShutdownFile_Dup_2eproto();

  void InitAsDefaultInstance();
  static L2CDupStateChgNotify* default_instance_;
};
// -------------------------------------------------------------------

class C2LPullRoleEnterDupNotify : public ::google::protobuf::Message {
 public:
  C2LPullRoleEnterDupNotify();
  virtual ~C2LPullRoleEnterDupNotify();

  C2LPullRoleEnterDupNotify(const C2LPullRoleEnterDupNotify& from);

  inline C2LPullRoleEnterDupNotify& operator=(const C2LPullRoleEnterDupNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const C2LPullRoleEnterDupNotify& default_instance();

  void Swap(C2LPullRoleEnterDupNotify* other);

  // implements Message ----------------------------------------------

  C2LPullRoleEnterDupNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const C2LPullRoleEnterDupNotify& from);
  void MergeFrom(const C2LPullRoleEnterDupNotify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 char_id = 1;
  inline bool has_char_id() const;
  inline void clear_char_id();
  static const int kCharIdFieldNumber = 1;
  inline ::google::protobuf::uint64 char_id() const;
  inline void set_char_id(::google::protobuf::uint64 value);

  // required uint64 duplicate_id = 2;
  inline bool has_duplicate_id() const;
  inline void clear_duplicate_id();
  static const int kDuplicateIdFieldNumber = 2;
  inline ::google::protobuf::uint64 duplicate_id() const;
  inline void set_duplicate_id(::google::protobuf::uint64 value);

  // required uint64 scene_id = 3;
  inline bool has_scene_id() const;
  inline void clear_scene_id();
  static const int kSceneIdFieldNumber = 3;
  inline ::google::protobuf::uint64 scene_id() const;
  inline void set_scene_id(::google::protobuf::uint64 value);

  // optional uint64 born_id = 4;
  inline bool has_born_id() const;
  inline void clear_born_id();
  static const int kBornIdFieldNumber = 4;
  inline ::google::protobuf::uint64 born_id() const;
  inline void set_born_id(::google::protobuf::uint64 value);

  // optional uint32 zoneid = 5;
  inline bool has_zoneid() const;
  inline void clear_zoneid();
  static const int kZoneidFieldNumber = 5;
  inline ::google::protobuf::uint32 zoneid() const;
  inline void set_zoneid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.C2LPullRoleEnterDupNotify)
 private:
  inline void set_has_char_id();
  inline void clear_has_char_id();
  inline void set_has_duplicate_id();
  inline void clear_has_duplicate_id();
  inline void set_has_scene_id();
  inline void clear_has_scene_id();
  inline void set_has_born_id();
  inline void clear_has_born_id();
  inline void set_has_zoneid();
  inline void clear_has_zoneid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 char_id_;
  ::google::protobuf::uint64 duplicate_id_;
  ::google::protobuf::uint64 scene_id_;
  ::google::protobuf::uint64 born_id_;
  ::google::protobuf::uint32 zoneid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_Dup_2eproto();
  friend void protobuf_AssignDesc_Dup_2eproto();
  friend void protobuf_ShutdownFile_Dup_2eproto();

  void InitAsDefaultInstance();
  static C2LPullRoleEnterDupNotify* default_instance_;
};
// -------------------------------------------------------------------

class L2CDupRoleActionNotify : public ::google::protobuf::Message {
 public:
  L2CDupRoleActionNotify();
  virtual ~L2CDupRoleActionNotify();

  L2CDupRoleActionNotify(const L2CDupRoleActionNotify& from);

  inline L2CDupRoleActionNotify& operator=(const L2CDupRoleActionNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const L2CDupRoleActionNotify& default_instance();

  void Swap(L2CDupRoleActionNotify* other);

  // implements Message ----------------------------------------------

  L2CDupRoleActionNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const L2CDupRoleActionNotify& from);
  void MergeFrom(const L2CDupRoleActionNotify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 sceneId = 1;
  inline bool has_sceneid() const;
  inline void clear_sceneid();
  static const int kSceneIdFieldNumber = 1;
  inline ::google::protobuf::int64 sceneid() const;
  inline void set_sceneid(::google::protobuf::int64 value);

  // optional int64 cid = 2;
  inline bool has_cid() const;
  inline void clear_cid();
  static const int kCidFieldNumber = 2;
  inline ::google::protobuf::int64 cid() const;
  inline void set_cid(::google::protobuf::int64 value);

  // optional int32 actionId = 3;
  inline bool has_actionid() const;
  inline void clear_actionid();
  static const int kActionIdFieldNumber = 3;
  inline ::google::protobuf::int32 actionid() const;
  inline void set_actionid(::google::protobuf::int32 value);

  // optional int32 ret = 4;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 4;
  inline ::google::protobuf::int32 ret() const;
  inline void set_ret(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.L2CDupRoleActionNotify)
 private:
  inline void set_has_sceneid();
  inline void clear_has_sceneid();
  inline void set_has_cid();
  inline void clear_has_cid();
  inline void set_has_actionid();
  inline void clear_has_actionid();
  inline void set_has_ret();
  inline void clear_has_ret();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 sceneid_;
  ::google::protobuf::int64 cid_;
  ::google::protobuf::int32 actionid_;
  ::google::protobuf::int32 ret_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_Dup_2eproto();
  friend void protobuf_AssignDesc_Dup_2eproto();
  friend void protobuf_ShutdownFile_Dup_2eproto();

  void InitAsDefaultInstance();
  static L2CDupRoleActionNotify* default_instance_;
};
// -------------------------------------------------------------------

class S2CEnterDupReq : public ::google::protobuf::Message {
 public:
  S2CEnterDupReq();
  virtual ~S2CEnterDupReq();

  S2CEnterDupReq(const S2CEnterDupReq& from);

  inline S2CEnterDupReq& operator=(const S2CEnterDupReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const S2CEnterDupReq& default_instance();

  void Swap(S2CEnterDupReq* other);

  // implements Message ----------------------------------------------

  S2CEnterDupReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const S2CEnterDupReq& from);
  void MergeFrom(const S2CEnterDupReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .proto_ff.CreateSceneParamProto params = 1;
  inline bool has_params() const;
  inline void clear_params();
  static const int kParamsFieldNumber = 1;
  inline const ::proto_ff::CreateSceneParamProto& params() const;
  inline ::proto_ff::CreateSceneParamProto* mutable_params();
  inline ::proto_ff::CreateSceneParamProto* release_params();
  inline void set_allocated_params(::proto_ff::CreateSceneParamProto* params);

  // @@protoc_insertion_point(class_scope:proto_ff.S2CEnterDupReq)
 private:
  inline void set_has_params();
  inline void clear_has_params();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::proto_ff::CreateSceneParamProto* params_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Dup_2eproto();
  friend void protobuf_AssignDesc_Dup_2eproto();
  friend void protobuf_ShutdownFile_Dup_2eproto();

  void InitAsDefaultInstance();
  static S2CEnterDupReq* default_instance_;
};
// -------------------------------------------------------------------

class C2SEnterDupRsp : public ::google::protobuf::Message {
 public:
  C2SEnterDupRsp();
  virtual ~C2SEnterDupRsp();

  C2SEnterDupRsp(const C2SEnterDupRsp& from);

  inline C2SEnterDupRsp& operator=(const C2SEnterDupRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const C2SEnterDupRsp& default_instance();

  void Swap(C2SEnterDupRsp* other);

  // implements Message ----------------------------------------------

  C2SEnterDupRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const C2SEnterDupRsp& from);
  void MergeFrom(const C2SEnterDupRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 ret = 1;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 1;
  inline ::google::protobuf::int32 ret() const;
  inline void set_ret(::google::protobuf::int32 value);

  // optional .proto_ff.CreateSceneParamProto params = 2;
  inline bool has_params() const;
  inline void clear_params();
  static const int kParamsFieldNumber = 2;
  inline const ::proto_ff::CreateSceneParamProto& params() const;
  inline ::proto_ff::CreateSceneParamProto* mutable_params();
  inline ::proto_ff::CreateSceneParamProto* release_params();
  inline void set_allocated_params(::proto_ff::CreateSceneParamProto* params);

  // @@protoc_insertion_point(class_scope:proto_ff.C2SEnterDupRsp)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();
  inline void set_has_params();
  inline void clear_has_params();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::proto_ff::CreateSceneParamProto* params_;
  ::google::protobuf::int32 ret_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Dup_2eproto();
  friend void protobuf_AssignDesc_Dup_2eproto();
  friend void protobuf_ShutdownFile_Dup_2eproto();

  void InitAsDefaultInstance();
  static C2SEnterDupRsp* default_instance_;
};
// -------------------------------------------------------------------

class L2CTowerRecvRecordReq : public ::google::protobuf::Message {
 public:
  L2CTowerRecvRecordReq();
  virtual ~L2CTowerRecvRecordReq();

  L2CTowerRecvRecordReq(const L2CTowerRecvRecordReq& from);

  inline L2CTowerRecvRecordReq& operator=(const L2CTowerRecvRecordReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const L2CTowerRecvRecordReq& default_instance();

  void Swap(L2CTowerRecvRecordReq* other);

  // implements Message ----------------------------------------------

  L2CTowerRecvRecordReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const L2CTowerRecvRecordReq& from);
  void MergeFrom(const L2CTowerRecvRecordReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int64 id() const;
  inline void set_id(::google::protobuf::int64 value);

  // optional int64 cid = 2;
  inline bool has_cid() const;
  inline void clear_cid();
  static const int kCidFieldNumber = 2;
  inline ::google::protobuf::int64 cid() const;
  inline void set_cid(::google::protobuf::int64 value);

  // optional string name = 3;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 3;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // optional int64 time = 4;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 4;
  inline ::google::protobuf::int64 time() const;
  inline void set_time(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.L2CTowerRecvRecordReq)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_cid();
  inline void clear_has_cid();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_time();
  inline void clear_has_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 id_;
  ::google::protobuf::int64 cid_;
  ::std::string* name_;
  ::google::protobuf::int64 time_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_Dup_2eproto();
  friend void protobuf_AssignDesc_Dup_2eproto();
  friend void protobuf_ShutdownFile_Dup_2eproto();

  void InitAsDefaultInstance();
  static L2CTowerRecvRecordReq* default_instance_;
};
// ===================================================================


// ===================================================================

// DupDropProto

// repeated .proto_ff.ItemProtoInfo pick_item = 1;
inline int DupDropProto::pick_item_size() const {
  return pick_item_.size();
}
inline void DupDropProto::clear_pick_item() {
  pick_item_.Clear();
}
inline const ::proto_ff::ItemProtoInfo& DupDropProto::pick_item(int index) const {
  return pick_item_.Get(index);
}
inline ::proto_ff::ItemProtoInfo* DupDropProto::mutable_pick_item(int index) {
  return pick_item_.Mutable(index);
}
inline ::proto_ff::ItemProtoInfo* DupDropProto::add_pick_item() {
  return pick_item_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::ItemProtoInfo >&
DupDropProto::pick_item() const {
  return pick_item_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::ItemProtoInfo >*
DupDropProto::mutable_pick_item() {
  return &pick_item_;
}

// optional int64 pick_gold = 2;
inline bool DupDropProto::has_pick_gold() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DupDropProto::set_has_pick_gold() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DupDropProto::clear_has_pick_gold() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DupDropProto::clear_pick_gold() {
  pick_gold_ = GOOGLE_LONGLONG(0);
  clear_has_pick_gold();
}
inline ::google::protobuf::int64 DupDropProto::pick_gold() const {
  return pick_gold_;
}
inline void DupDropProto::set_pick_gold(::google::protobuf::int64 value) {
  set_has_pick_gold();
  pick_gold_ = value;
}

// optional int64 pick_exp = 3;
inline bool DupDropProto::has_pick_exp() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DupDropProto::set_has_pick_exp() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DupDropProto::clear_has_pick_exp() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DupDropProto::clear_pick_exp() {
  pick_exp_ = GOOGLE_LONGLONG(0);
  clear_has_pick_exp();
}
inline ::google::protobuf::int64 DupDropProto::pick_exp() const {
  return pick_exp_;
}
inline void DupDropProto::set_pick_exp(::google::protobuf::int64 value) {
  set_has_pick_exp();
  pick_exp_ = value;
}

// optional int32 kill_num = 4;
inline bool DupDropProto::has_kill_num() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void DupDropProto::set_has_kill_num() {
  _has_bits_[0] |= 0x00000008u;
}
inline void DupDropProto::clear_has_kill_num() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void DupDropProto::clear_kill_num() {
  kill_num_ = 0;
  clear_has_kill_num();
}
inline ::google::protobuf::int32 DupDropProto::kill_num() const {
  return kill_num_;
}
inline void DupDropProto::set_kill_num(::google::protobuf::int32 value) {
  set_has_kill_num();
  kill_num_ = value;
}

// repeated .proto_ff.ItemProtoInfo star3 = 5;
inline int DupDropProto::star3_size() const {
  return star3_.size();
}
inline void DupDropProto::clear_star3() {
  star3_.Clear();
}
inline const ::proto_ff::ItemProtoInfo& DupDropProto::star3(int index) const {
  return star3_.Get(index);
}
inline ::proto_ff::ItemProtoInfo* DupDropProto::mutable_star3(int index) {
  return star3_.Mutable(index);
}
inline ::proto_ff::ItemProtoInfo* DupDropProto::add_star3() {
  return star3_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::ItemProtoInfo >&
DupDropProto::star3() const {
  return star3_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::ItemProtoInfo >*
DupDropProto::mutable_star3() {
  return &star3_;
}

// -------------------------------------------------------------------

// DupTowerRecordEntry

// optional string name = 1;
inline bool DupTowerRecordEntry::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DupTowerRecordEntry::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DupTowerRecordEntry::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DupTowerRecordEntry::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& DupTowerRecordEntry::name() const {
  return *name_;
}
inline void DupTowerRecordEntry::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void DupTowerRecordEntry::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void DupTowerRecordEntry::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* DupTowerRecordEntry::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* DupTowerRecordEntry::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void DupTowerRecordEntry::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional uint64 time = 2;
inline bool DupTowerRecordEntry::has_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DupTowerRecordEntry::set_has_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DupTowerRecordEntry::clear_has_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DupTowerRecordEntry::clear_time() {
  time_ = GOOGLE_ULONGLONG(0);
  clear_has_time();
}
inline ::google::protobuf::uint64 DupTowerRecordEntry::time() const {
  return time_;
}
inline void DupTowerRecordEntry::set_time(::google::protobuf::uint64 value) {
  set_has_time();
  time_ = value;
}

// -------------------------------------------------------------------

// TowerDupData

// repeated int64 ids = 1;
inline int TowerDupData::ids_size() const {
  return ids_.size();
}
inline void TowerDupData::clear_ids() {
  ids_.Clear();
}
inline ::google::protobuf::int64 TowerDupData::ids(int index) const {
  return ids_.Get(index);
}
inline void TowerDupData::set_ids(int index, ::google::protobuf::int64 value) {
  ids_.Set(index, value);
}
inline void TowerDupData::add_ids(::google::protobuf::int64 value) {
  ids_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
TowerDupData::ids() const {
  return ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
TowerDupData::mutable_ids() {
  return &ids_;
}

// -------------------------------------------------------------------

// PassDupData

// optional int64 id = 1;
inline bool PassDupData::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PassDupData::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PassDupData::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PassDupData::clear_id() {
  id_ = GOOGLE_LONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::int64 PassDupData::id() const {
  return id_;
}
inline void PassDupData::set_id(::google::protobuf::int64 value) {
  set_has_id();
  id_ = value;
}

// optional int32 star = 2;
inline bool PassDupData::has_star() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PassDupData::set_has_star() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PassDupData::clear_has_star() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PassDupData::clear_star() {
  star_ = 0;
  clear_has_star();
}
inline ::google::protobuf::int32 PassDupData::star() const {
  return star_;
}
inline void PassDupData::set_star(::google::protobuf::int32 value) {
  set_has_star();
  star_ = value;
}

// -------------------------------------------------------------------

// ComDupGroupData

// optional int32 group = 1;
inline bool ComDupGroupData::has_group() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ComDupGroupData::set_has_group() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ComDupGroupData::clear_has_group() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ComDupGroupData::clear_group() {
  group_ = 0;
  clear_has_group();
}
inline ::google::protobuf::int32 ComDupGroupData::group() const {
  return group_;
}
inline void ComDupGroupData::set_group(::google::protobuf::int32 value) {
  set_has_group();
  group_ = value;
}

// optional uint64 pass_dupId = 2;
inline bool ComDupGroupData::has_pass_dupid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ComDupGroupData::set_has_pass_dupid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ComDupGroupData::clear_has_pass_dupid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ComDupGroupData::clear_pass_dupid() {
  pass_dupid_ = GOOGLE_ULONGLONG(0);
  clear_has_pass_dupid();
}
inline ::google::protobuf::uint64 ComDupGroupData::pass_dupid() const {
  return pass_dupid_;
}
inline void ComDupGroupData::set_pass_dupid(::google::protobuf::uint64 value) {
  set_has_pass_dupid();
  pass_dupid_ = value;
}

// optional int32 enter_num = 3;
inline bool ComDupGroupData::has_enter_num() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ComDupGroupData::set_has_enter_num() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ComDupGroupData::clear_has_enter_num() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ComDupGroupData::clear_enter_num() {
  enter_num_ = 0;
  clear_has_enter_num();
}
inline ::google::protobuf::int32 ComDupGroupData::enter_num() const {
  return enter_num_;
}
inline void ComDupGroupData::set_enter_num(::google::protobuf::int32 value) {
  set_has_enter_num();
  enter_num_ = value;
}

// optional int32 max_num = 4;
inline bool ComDupGroupData::has_max_num() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ComDupGroupData::set_has_max_num() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ComDupGroupData::clear_has_max_num() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ComDupGroupData::clear_max_num() {
  max_num_ = 0;
  clear_has_max_num();
}
inline ::google::protobuf::int32 ComDupGroupData::max_num() const {
  return max_num_;
}
inline void ComDupGroupData::set_max_num(::google::protobuf::int32 value) {
  set_has_max_num();
  max_num_ = value;
}

// optional int32 buy_num = 5;
inline bool ComDupGroupData::has_buy_num() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ComDupGroupData::set_has_buy_num() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ComDupGroupData::clear_has_buy_num() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ComDupGroupData::clear_buy_num() {
  buy_num_ = 0;
  clear_has_buy_num();
}
inline ::google::protobuf::int32 ComDupGroupData::buy_num() const {
  return buy_num_;
}
inline void ComDupGroupData::set_buy_num(::google::protobuf::int32 value) {
  set_has_buy_num();
  buy_num_ = value;
}

// optional int32 star = 6;
inline bool ComDupGroupData::has_star() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ComDupGroupData::set_has_star() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ComDupGroupData::clear_has_star() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ComDupGroupData::clear_star() {
  star_ = 0;
  clear_has_star();
}
inline ::google::protobuf::int32 ComDupGroupData::star() const {
  return star_;
}
inline void ComDupGroupData::set_star(::google::protobuf::int32 value) {
  set_has_star();
  star_ = value;
}

// optional .proto_ff.TowerDupData tower = 7;
inline bool ComDupGroupData::has_tower() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void ComDupGroupData::set_has_tower() {
  _has_bits_[0] |= 0x00000040u;
}
inline void ComDupGroupData::clear_has_tower() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void ComDupGroupData::clear_tower() {
  if (tower_ != NULL) tower_->::proto_ff::TowerDupData::Clear();
  clear_has_tower();
}
inline const ::proto_ff::TowerDupData& ComDupGroupData::tower() const {
  return tower_ != NULL ? *tower_ : *default_instance_->tower_;
}
inline ::proto_ff::TowerDupData* ComDupGroupData::mutable_tower() {
  set_has_tower();
  if (tower_ == NULL) tower_ = new ::proto_ff::TowerDupData;
  return tower_;
}
inline ::proto_ff::TowerDupData* ComDupGroupData::release_tower() {
  clear_has_tower();
  ::proto_ff::TowerDupData* temp = tower_;
  tower_ = NULL;
  return temp;
}
inline void ComDupGroupData::set_allocated_tower(::proto_ff::TowerDupData* tower) {
  delete tower_;
  tower_ = tower;
  if (tower) {
    set_has_tower();
  } else {
    clear_has_tower();
  }
}

// repeated .proto_ff.PassDupData pass = 8;
inline int ComDupGroupData::pass_size() const {
  return pass_.size();
}
inline void ComDupGroupData::clear_pass() {
  pass_.Clear();
}
inline const ::proto_ff::PassDupData& ComDupGroupData::pass(int index) const {
  return pass_.Get(index);
}
inline ::proto_ff::PassDupData* ComDupGroupData::mutable_pass(int index) {
  return pass_.Mutable(index);
}
inline ::proto_ff::PassDupData* ComDupGroupData::add_pass() {
  return pass_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::PassDupData >&
ComDupGroupData::pass() const {
  return pass_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::PassDupData >*
ComDupGroupData::mutable_pass() {
  return &pass_;
}

// -------------------------------------------------------------------

// EnterDupReq

// optional uint64 dupId = 1;
inline bool EnterDupReq::has_dupid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EnterDupReq::set_has_dupid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EnterDupReq::clear_has_dupid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EnterDupReq::clear_dupid() {
  dupid_ = GOOGLE_ULONGLONG(0);
  clear_has_dupid();
}
inline ::google::protobuf::uint64 EnterDupReq::dupid() const {
  return dupid_;
}
inline void EnterDupReq::set_dupid(::google::protobuf::uint64 value) {
  set_has_dupid();
  dupid_ = value;
}

// optional int32 mergeNum = 2;
inline bool EnterDupReq::has_mergenum() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void EnterDupReq::set_has_mergenum() {
  _has_bits_[0] |= 0x00000002u;
}
inline void EnterDupReq::clear_has_mergenum() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void EnterDupReq::clear_mergenum() {
  mergenum_ = 0;
  clear_has_mergenum();
}
inline ::google::protobuf::int32 EnterDupReq::mergenum() const {
  return mergenum_;
}
inline void EnterDupReq::set_mergenum(::google::protobuf::int32 value) {
  set_has_mergenum();
  mergenum_ = value;
}

// -------------------------------------------------------------------

// EnterDupRsp

// optional int32 ret = 1;
inline bool EnterDupRsp::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EnterDupRsp::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EnterDupRsp::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EnterDupRsp::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
inline ::google::protobuf::int32 EnterDupRsp::ret() const {
  return ret_;
}
inline void EnterDupRsp::set_ret(::google::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
}

// optional uint64 dupId = 2;
inline bool EnterDupRsp::has_dupid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void EnterDupRsp::set_has_dupid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void EnterDupRsp::clear_has_dupid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void EnterDupRsp::clear_dupid() {
  dupid_ = GOOGLE_ULONGLONG(0);
  clear_has_dupid();
}
inline ::google::protobuf::uint64 EnterDupRsp::dupid() const {
  return dupid_;
}
inline void EnterDupRsp::set_dupid(::google::protobuf::uint64 value) {
  set_has_dupid();
  dupid_ = value;
}

// optional int32 dupTime = 3;
inline bool EnterDupRsp::has_duptime() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void EnterDupRsp::set_has_duptime() {
  _has_bits_[0] |= 0x00000004u;
}
inline void EnterDupRsp::clear_has_duptime() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void EnterDupRsp::clear_duptime() {
  duptime_ = 0;
  clear_has_duptime();
}
inline ::google::protobuf::int32 EnterDupRsp::duptime() const {
  return duptime_;
}
inline void EnterDupRsp::set_duptime(::google::protobuf::int32 value) {
  set_has_duptime();
  duptime_ = value;
}

// -------------------------------------------------------------------

// DupResultReq

// -------------------------------------------------------------------

// DupResultRsp

// optional int32 result = 1;
inline bool DupResultRsp::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DupResultRsp::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DupResultRsp::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DupResultRsp::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 DupResultRsp::result() const {
  return result_;
}
inline void DupResultRsp::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// optional uint64 dupId = 2;
inline bool DupResultRsp::has_dupid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DupResultRsp::set_has_dupid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DupResultRsp::clear_has_dupid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DupResultRsp::clear_dupid() {
  dupid_ = GOOGLE_ULONGLONG(0);
  clear_has_dupid();
}
inline ::google::protobuf::uint64 DupResultRsp::dupid() const {
  return dupid_;
}
inline void DupResultRsp::set_dupid(::google::protobuf::uint64 value) {
  set_has_dupid();
  dupid_ = value;
}

// optional int32 star = 3;
inline bool DupResultRsp::has_star() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DupResultRsp::set_has_star() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DupResultRsp::clear_has_star() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DupResultRsp::clear_star() {
  star_ = 0;
  clear_has_star();
}
inline ::google::protobuf::int32 DupResultRsp::star() const {
  return star_;
}
inline void DupResultRsp::set_star(::google::protobuf::int32 value) {
  set_has_star();
  star_ = value;
}

// optional int32 cost_sec = 4;
inline bool DupResultRsp::has_cost_sec() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void DupResultRsp::set_has_cost_sec() {
  _has_bits_[0] |= 0x00000008u;
}
inline void DupResultRsp::clear_has_cost_sec() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void DupResultRsp::clear_cost_sec() {
  cost_sec_ = 0;
  clear_has_cost_sec();
}
inline ::google::protobuf::int32 DupResultRsp::cost_sec() const {
  return cost_sec_;
}
inline void DupResultRsp::set_cost_sec(::google::protobuf::int32 value) {
  set_has_cost_sec();
  cost_sec_ = value;
}

// optional .proto_ff.DupDropProto info = 5;
inline bool DupResultRsp::has_info() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void DupResultRsp::set_has_info() {
  _has_bits_[0] |= 0x00000010u;
}
inline void DupResultRsp::clear_has_info() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void DupResultRsp::clear_info() {
  if (info_ != NULL) info_->::proto_ff::DupDropProto::Clear();
  clear_has_info();
}
inline const ::proto_ff::DupDropProto& DupResultRsp::info() const {
  return info_ != NULL ? *info_ : *default_instance_->info_;
}
inline ::proto_ff::DupDropProto* DupResultRsp::mutable_info() {
  set_has_info();
  if (info_ == NULL) info_ = new ::proto_ff::DupDropProto;
  return info_;
}
inline ::proto_ff::DupDropProto* DupResultRsp::release_info() {
  clear_has_info();
  ::proto_ff::DupDropProto* temp = info_;
  info_ = NULL;
  return temp;
}
inline void DupResultRsp::set_allocated_info(::proto_ff::DupDropProto* info) {
  delete info_;
  info_ = info;
  if (info) {
    set_has_info();
  } else {
    clear_has_info();
  }
}

// -------------------------------------------------------------------

// DupLeaveReq

// -------------------------------------------------------------------

// DupLeaveRsp

// optional int32 result = 1;
inline bool DupLeaveRsp::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DupLeaveRsp::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DupLeaveRsp::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DupLeaveRsp::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 DupLeaveRsp::result() const {
  return result_;
}
inline void DupLeaveRsp::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// optional int64 dupId = 2;
inline bool DupLeaveRsp::has_dupid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DupLeaveRsp::set_has_dupid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DupLeaveRsp::clear_has_dupid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DupLeaveRsp::clear_dupid() {
  dupid_ = GOOGLE_LONGLONG(0);
  clear_has_dupid();
}
inline ::google::protobuf::int64 DupLeaveRsp::dupid() const {
  return dupid_;
}
inline void DupLeaveRsp::set_dupid(::google::protobuf::int64 value) {
  set_has_dupid();
  dupid_ = value;
}

// -------------------------------------------------------------------

// NotifyDupRsp

// optional int32 type = 1;
inline bool NotifyDupRsp::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NotifyDupRsp::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NotifyDupRsp::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NotifyDupRsp::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 NotifyDupRsp::type() const {
  return type_;
}
inline void NotifyDupRsp::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// repeated .proto_ff.ComDupGroupData infos = 2;
inline int NotifyDupRsp::infos_size() const {
  return infos_.size();
}
inline void NotifyDupRsp::clear_infos() {
  infos_.Clear();
}
inline const ::proto_ff::ComDupGroupData& NotifyDupRsp::infos(int index) const {
  return infos_.Get(index);
}
inline ::proto_ff::ComDupGroupData* NotifyDupRsp::mutable_infos(int index) {
  return infos_.Mutable(index);
}
inline ::proto_ff::ComDupGroupData* NotifyDupRsp::add_infos() {
  return infos_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::ComDupGroupData >&
NotifyDupRsp::infos() const {
  return infos_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::ComDupGroupData >*
NotifyDupRsp::mutable_infos() {
  return &infos_;
}

// -------------------------------------------------------------------

// NotifyDupRunRsp

// optional uint64 dupId = 1;
inline bool NotifyDupRunRsp::has_dupid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NotifyDupRunRsp::set_has_dupid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NotifyDupRunRsp::clear_has_dupid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NotifyDupRunRsp::clear_dupid() {
  dupid_ = GOOGLE_ULONGLONG(0);
  clear_has_dupid();
}
inline ::google::protobuf::uint64 NotifyDupRunRsp::dupid() const {
  return dupid_;
}
inline void NotifyDupRunRsp::set_dupid(::google::protobuf::uint64 value) {
  set_has_dupid();
  dupid_ = value;
}

// optional int32 kill_num = 2;
inline bool NotifyDupRunRsp::has_kill_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void NotifyDupRunRsp::set_has_kill_num() {
  _has_bits_[0] |= 0x00000002u;
}
inline void NotifyDupRunRsp::clear_has_kill_num() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void NotifyDupRunRsp::clear_kill_num() {
  kill_num_ = 0;
  clear_has_kill_num();
}
inline ::google::protobuf::int32 NotifyDupRunRsp::kill_num() const {
  return kill_num_;
}
inline void NotifyDupRunRsp::set_kill_num(::google::protobuf::int32 value) {
  set_has_kill_num();
  kill_num_ = value;
}

// optional int32 all_num = 3;
inline bool NotifyDupRunRsp::has_all_num() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void NotifyDupRunRsp::set_has_all_num() {
  _has_bits_[0] |= 0x00000004u;
}
inline void NotifyDupRunRsp::clear_has_all_num() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void NotifyDupRunRsp::clear_all_num() {
  all_num_ = 0;
  clear_has_all_num();
}
inline ::google::protobuf::int32 NotifyDupRunRsp::all_num() const {
  return all_num_;
}
inline void NotifyDupRunRsp::set_all_num(::google::protobuf::int32 value) {
  set_has_all_num();
  all_num_ = value;
}

// optional int32 cur_wave = 4;
inline bool NotifyDupRunRsp::has_cur_wave() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void NotifyDupRunRsp::set_has_cur_wave() {
  _has_bits_[0] |= 0x00000008u;
}
inline void NotifyDupRunRsp::clear_has_cur_wave() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void NotifyDupRunRsp::clear_cur_wave() {
  cur_wave_ = 0;
  clear_has_cur_wave();
}
inline ::google::protobuf::int32 NotifyDupRunRsp::cur_wave() const {
  return cur_wave_;
}
inline void NotifyDupRunRsp::set_cur_wave(::google::protobuf::int32 value) {
  set_has_cur_wave();
  cur_wave_ = value;
}

// optional int32 max_wave = 5;
inline bool NotifyDupRunRsp::has_max_wave() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void NotifyDupRunRsp::set_has_max_wave() {
  _has_bits_[0] |= 0x00000010u;
}
inline void NotifyDupRunRsp::clear_has_max_wave() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void NotifyDupRunRsp::clear_max_wave() {
  max_wave_ = 0;
  clear_has_max_wave();
}
inline ::google::protobuf::int32 NotifyDupRunRsp::max_wave() const {
  return max_wave_;
}
inline void NotifyDupRunRsp::set_max_wave(::google::protobuf::int32 value) {
  set_has_max_wave();
  max_wave_ = value;
}

// optional int64 cur_hp = 6;
inline bool NotifyDupRunRsp::has_cur_hp() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void NotifyDupRunRsp::set_has_cur_hp() {
  _has_bits_[0] |= 0x00000020u;
}
inline void NotifyDupRunRsp::clear_has_cur_hp() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void NotifyDupRunRsp::clear_cur_hp() {
  cur_hp_ = GOOGLE_LONGLONG(0);
  clear_has_cur_hp();
}
inline ::google::protobuf::int64 NotifyDupRunRsp::cur_hp() const {
  return cur_hp_;
}
inline void NotifyDupRunRsp::set_cur_hp(::google::protobuf::int64 value) {
  set_has_cur_hp();
  cur_hp_ = value;
}

// optional int64 max_hp = 7;
inline bool NotifyDupRunRsp::has_max_hp() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void NotifyDupRunRsp::set_has_max_hp() {
  _has_bits_[0] |= 0x00000040u;
}
inline void NotifyDupRunRsp::clear_has_max_hp() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void NotifyDupRunRsp::clear_max_hp() {
  max_hp_ = GOOGLE_LONGLONG(0);
  clear_has_max_hp();
}
inline ::google::protobuf::int64 NotifyDupRunRsp::max_hp() const {
  return max_hp_;
}
inline void NotifyDupRunRsp::set_max_hp(::google::protobuf::int64 value) {
  set_has_max_hp();
  max_hp_ = value;
}

// repeated .proto_ff.ComPair64 items = 8;
inline int NotifyDupRunRsp::items_size() const {
  return items_.size();
}
inline void NotifyDupRunRsp::clear_items() {
  items_.Clear();
}
inline const ::proto_ff::ComPair64& NotifyDupRunRsp::items(int index) const {
  return items_.Get(index);
}
inline ::proto_ff::ComPair64* NotifyDupRunRsp::mutable_items(int index) {
  return items_.Mutable(index);
}
inline ::proto_ff::ComPair64* NotifyDupRunRsp::add_items() {
  return items_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair64 >&
NotifyDupRunRsp::items() const {
  return items_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair64 >*
NotifyDupRunRsp::mutable_items() {
  return &items_;
}

// -------------------------------------------------------------------

// NotifyDupEndRsp

// optional uint64 dupId = 1;
inline bool NotifyDupEndRsp::has_dupid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NotifyDupEndRsp::set_has_dupid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NotifyDupEndRsp::clear_has_dupid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NotifyDupEndRsp::clear_dupid() {
  dupid_ = GOOGLE_ULONGLONG(0);
  clear_has_dupid();
}
inline ::google::protobuf::uint64 NotifyDupEndRsp::dupid() const {
  return dupid_;
}
inline void NotifyDupEndRsp::set_dupid(::google::protobuf::uint64 value) {
  set_has_dupid();
  dupid_ = value;
}

// -------------------------------------------------------------------

// NotifyDupBeginCdRsp

// optional uint64 sceneId = 1;
inline bool NotifyDupBeginCdRsp::has_sceneid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NotifyDupBeginCdRsp::set_has_sceneid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NotifyDupBeginCdRsp::clear_has_sceneid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NotifyDupBeginCdRsp::clear_sceneid() {
  sceneid_ = GOOGLE_ULONGLONG(0);
  clear_has_sceneid();
}
inline ::google::protobuf::uint64 NotifyDupBeginCdRsp::sceneid() const {
  return sceneid_;
}
inline void NotifyDupBeginCdRsp::set_sceneid(::google::protobuf::uint64 value) {
  set_has_sceneid();
  sceneid_ = value;
}

// optional uint64 dupId = 2;
inline bool NotifyDupBeginCdRsp::has_dupid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void NotifyDupBeginCdRsp::set_has_dupid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void NotifyDupBeginCdRsp::clear_has_dupid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void NotifyDupBeginCdRsp::clear_dupid() {
  dupid_ = GOOGLE_ULONGLONG(0);
  clear_has_dupid();
}
inline ::google::protobuf::uint64 NotifyDupBeginCdRsp::dupid() const {
  return dupid_;
}
inline void NotifyDupBeginCdRsp::set_dupid(::google::protobuf::uint64 value) {
  set_has_dupid();
  dupid_ = value;
}

// optional uint64 timeEnd = 3;
inline bool NotifyDupBeginCdRsp::has_timeend() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void NotifyDupBeginCdRsp::set_has_timeend() {
  _has_bits_[0] |= 0x00000004u;
}
inline void NotifyDupBeginCdRsp::clear_has_timeend() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void NotifyDupBeginCdRsp::clear_timeend() {
  timeend_ = GOOGLE_ULONGLONG(0);
  clear_has_timeend();
}
inline ::google::protobuf::uint64 NotifyDupBeginCdRsp::timeend() const {
  return timeend_;
}
inline void NotifyDupBeginCdRsp::set_timeend(::google::protobuf::uint64 value) {
  set_has_timeend();
  timeend_ = value;
}

// -------------------------------------------------------------------

// RecvTowerDupReq

// optional uint64 id = 1;
inline bool RecvTowerDupReq::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RecvTowerDupReq::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RecvTowerDupReq::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RecvTowerDupReq::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::uint64 RecvTowerDupReq::id() const {
  return id_;
}
inline void RecvTowerDupReq::set_id(::google::protobuf::uint64 value) {
  set_has_id();
  id_ = value;
}

// -------------------------------------------------------------------

// RecvTowerDupRsp

// optional int32 result = 1;
inline bool RecvTowerDupRsp::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RecvTowerDupRsp::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RecvTowerDupRsp::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RecvTowerDupRsp::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 RecvTowerDupRsp::result() const {
  return result_;
}
inline void RecvTowerDupRsp::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// optional uint64 id = 2;
inline bool RecvTowerDupRsp::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RecvTowerDupRsp::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RecvTowerDupRsp::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RecvTowerDupRsp::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::uint64 RecvTowerDupRsp::id() const {
  return id_;
}
inline void RecvTowerDupRsp::set_id(::google::protobuf::uint64 value) {
  set_has_id();
  id_ = value;
}

// -------------------------------------------------------------------

// BuyDupNumReq

// optional int32 group = 1;
inline bool BuyDupNumReq::has_group() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BuyDupNumReq::set_has_group() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BuyDupNumReq::clear_has_group() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BuyDupNumReq::clear_group() {
  group_ = 0;
  clear_has_group();
}
inline ::google::protobuf::int32 BuyDupNumReq::group() const {
  return group_;
}
inline void BuyDupNumReq::set_group(::google::protobuf::int32 value) {
  set_has_group();
  group_ = value;
}

// optional int32 num = 2;
inline bool BuyDupNumReq::has_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BuyDupNumReq::set_has_num() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BuyDupNumReq::clear_has_num() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BuyDupNumReq::clear_num() {
  num_ = 0;
  clear_has_num();
}
inline ::google::protobuf::int32 BuyDupNumReq::num() const {
  return num_;
}
inline void BuyDupNumReq::set_num(::google::protobuf::int32 value) {
  set_has_num();
  num_ = value;
}

// -------------------------------------------------------------------

// BuyDupNumRsp

// optional int32 result = 1;
inline bool BuyDupNumRsp::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BuyDupNumRsp::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BuyDupNumRsp::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BuyDupNumRsp::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 BuyDupNumRsp::result() const {
  return result_;
}
inline void BuyDupNumRsp::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// optional int32 group = 2;
inline bool BuyDupNumRsp::has_group() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BuyDupNumRsp::set_has_group() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BuyDupNumRsp::clear_has_group() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BuyDupNumRsp::clear_group() {
  group_ = 0;
  clear_has_group();
}
inline ::google::protobuf::int32 BuyDupNumRsp::group() const {
  return group_;
}
inline void BuyDupNumRsp::set_group(::google::protobuf::int32 value) {
  set_has_group();
  group_ = value;
}

// optional int32 num = 3;
inline bool BuyDupNumRsp::has_num() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BuyDupNumRsp::set_has_num() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BuyDupNumRsp::clear_has_num() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BuyDupNumRsp::clear_num() {
  num_ = 0;
  clear_has_num();
}
inline ::google::protobuf::int32 BuyDupNumRsp::num() const {
  return num_;
}
inline void BuyDupNumRsp::set_num(::google::protobuf::int32 value) {
  set_has_num();
  num_ = value;
}

// -------------------------------------------------------------------

// DupTowerRecordReq

// optional uint64 id = 1;
inline bool DupTowerRecordReq::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DupTowerRecordReq::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DupTowerRecordReq::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DupTowerRecordReq::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::uint64 DupTowerRecordReq::id() const {
  return id_;
}
inline void DupTowerRecordReq::set_id(::google::protobuf::uint64 value) {
  set_has_id();
  id_ = value;
}

// -------------------------------------------------------------------

// DupTowerRecordRsp

// optional uint64 id = 1;
inline bool DupTowerRecordRsp::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DupTowerRecordRsp::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DupTowerRecordRsp::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DupTowerRecordRsp::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::uint64 DupTowerRecordRsp::id() const {
  return id_;
}
inline void DupTowerRecordRsp::set_id(::google::protobuf::uint64 value) {
  set_has_id();
  id_ = value;
}

// repeated .proto_ff.DupTowerRecordEntry entrys = 2;
inline int DupTowerRecordRsp::entrys_size() const {
  return entrys_.size();
}
inline void DupTowerRecordRsp::clear_entrys() {
  entrys_.Clear();
}
inline const ::proto_ff::DupTowerRecordEntry& DupTowerRecordRsp::entrys(int index) const {
  return entrys_.Get(index);
}
inline ::proto_ff::DupTowerRecordEntry* DupTowerRecordRsp::mutable_entrys(int index) {
  return entrys_.Mutable(index);
}
inline ::proto_ff::DupTowerRecordEntry* DupTowerRecordRsp::add_entrys() {
  return entrys_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::DupTowerRecordEntry >&
DupTowerRecordRsp::entrys() const {
  return entrys_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::DupTowerRecordEntry >*
DupTowerRecordRsp::mutable_entrys() {
  return &entrys_;
}

// -------------------------------------------------------------------

// L2CEnterDupReq

// optional .proto_ff.CreateSceneParamProto params = 1;
inline bool L2CEnterDupReq::has_params() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void L2CEnterDupReq::set_has_params() {
  _has_bits_[0] |= 0x00000001u;
}
inline void L2CEnterDupReq::clear_has_params() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void L2CEnterDupReq::clear_params() {
  if (params_ != NULL) params_->::proto_ff::CreateSceneParamProto::Clear();
  clear_has_params();
}
inline const ::proto_ff::CreateSceneParamProto& L2CEnterDupReq::params() const {
  return params_ != NULL ? *params_ : *default_instance_->params_;
}
inline ::proto_ff::CreateSceneParamProto* L2CEnterDupReq::mutable_params() {
  set_has_params();
  if (params_ == NULL) params_ = new ::proto_ff::CreateSceneParamProto;
  return params_;
}
inline ::proto_ff::CreateSceneParamProto* L2CEnterDupReq::release_params() {
  clear_has_params();
  ::proto_ff::CreateSceneParamProto* temp = params_;
  params_ = NULL;
  return temp;
}
inline void L2CEnterDupReq::set_allocated_params(::proto_ff::CreateSceneParamProto* params) {
  delete params_;
  params_ = params;
  if (params) {
    set_has_params();
  } else {
    clear_has_params();
  }
}

// -------------------------------------------------------------------

// L2CCreateDupRsp

// optional int32 ret = 1;
inline bool L2CCreateDupRsp::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void L2CCreateDupRsp::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void L2CCreateDupRsp::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void L2CCreateDupRsp::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
inline ::google::protobuf::int32 L2CCreateDupRsp::ret() const {
  return ret_;
}
inline void L2CCreateDupRsp::set_ret(::google::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
}

// optional uint64 sceneId = 2;
inline bool L2CCreateDupRsp::has_sceneid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void L2CCreateDupRsp::set_has_sceneid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void L2CCreateDupRsp::clear_has_sceneid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void L2CCreateDupRsp::clear_sceneid() {
  sceneid_ = GOOGLE_ULONGLONG(0);
  clear_has_sceneid();
}
inline ::google::protobuf::uint64 L2CCreateDupRsp::sceneid() const {
  return sceneid_;
}
inline void L2CCreateDupRsp::set_sceneid(::google::protobuf::uint64 value) {
  set_has_sceneid();
  sceneid_ = value;
}

// optional uint64 dupId = 3;
inline bool L2CCreateDupRsp::has_dupid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void L2CCreateDupRsp::set_has_dupid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void L2CCreateDupRsp::clear_has_dupid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void L2CCreateDupRsp::clear_dupid() {
  dupid_ = GOOGLE_ULONGLONG(0);
  clear_has_dupid();
}
inline ::google::protobuf::uint64 L2CCreateDupRsp::dupid() const {
  return dupid_;
}
inline void L2CCreateDupRsp::set_dupid(::google::protobuf::uint64 value) {
  set_has_dupid();
  dupid_ = value;
}

// -------------------------------------------------------------------

// L2CDupStateChgNotify

// optional uint64 sceneId = 1;
inline bool L2CDupStateChgNotify::has_sceneid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void L2CDupStateChgNotify::set_has_sceneid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void L2CDupStateChgNotify::clear_has_sceneid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void L2CDupStateChgNotify::clear_sceneid() {
  sceneid_ = GOOGLE_ULONGLONG(0);
  clear_has_sceneid();
}
inline ::google::protobuf::uint64 L2CDupStateChgNotify::sceneid() const {
  return sceneid_;
}
inline void L2CDupStateChgNotify::set_sceneid(::google::protobuf::uint64 value) {
  set_has_sceneid();
  sceneid_ = value;
}

// optional uint64 dupId = 2;
inline bool L2CDupStateChgNotify::has_dupid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void L2CDupStateChgNotify::set_has_dupid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void L2CDupStateChgNotify::clear_has_dupid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void L2CDupStateChgNotify::clear_dupid() {
  dupid_ = GOOGLE_ULONGLONG(0);
  clear_has_dupid();
}
inline ::google::protobuf::uint64 L2CDupStateChgNotify::dupid() const {
  return dupid_;
}
inline void L2CDupStateChgNotify::set_dupid(::google::protobuf::uint64 value) {
  set_has_dupid();
  dupid_ = value;
}

// optional int32 state = 3;
inline bool L2CDupStateChgNotify::has_state() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void L2CDupStateChgNotify::set_has_state() {
  _has_bits_[0] |= 0x00000004u;
}
inline void L2CDupStateChgNotify::clear_has_state() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void L2CDupStateChgNotify::clear_state() {
  state_ = 0;
  clear_has_state();
}
inline ::google::protobuf::int32 L2CDupStateChgNotify::state() const {
  return state_;
}
inline void L2CDupStateChgNotify::set_state(::google::protobuf::int32 value) {
  set_has_state();
  state_ = value;
}

// optional uint64 time = 4;
inline bool L2CDupStateChgNotify::has_time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void L2CDupStateChgNotify::set_has_time() {
  _has_bits_[0] |= 0x00000008u;
}
inline void L2CDupStateChgNotify::clear_has_time() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void L2CDupStateChgNotify::clear_time() {
  time_ = GOOGLE_ULONGLONG(0);
  clear_has_time();
}
inline ::google::protobuf::uint64 L2CDupStateChgNotify::time() const {
  return time_;
}
inline void L2CDupStateChgNotify::set_time(::google::protobuf::uint64 value) {
  set_has_time();
  time_ = value;
}

// -------------------------------------------------------------------

// C2LPullRoleEnterDupNotify

// required uint64 char_id = 1;
inline bool C2LPullRoleEnterDupNotify::has_char_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void C2LPullRoleEnterDupNotify::set_has_char_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void C2LPullRoleEnterDupNotify::clear_has_char_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void C2LPullRoleEnterDupNotify::clear_char_id() {
  char_id_ = GOOGLE_ULONGLONG(0);
  clear_has_char_id();
}
inline ::google::protobuf::uint64 C2LPullRoleEnterDupNotify::char_id() const {
  return char_id_;
}
inline void C2LPullRoleEnterDupNotify::set_char_id(::google::protobuf::uint64 value) {
  set_has_char_id();
  char_id_ = value;
}

// required uint64 duplicate_id = 2;
inline bool C2LPullRoleEnterDupNotify::has_duplicate_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void C2LPullRoleEnterDupNotify::set_has_duplicate_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void C2LPullRoleEnterDupNotify::clear_has_duplicate_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void C2LPullRoleEnterDupNotify::clear_duplicate_id() {
  duplicate_id_ = GOOGLE_ULONGLONG(0);
  clear_has_duplicate_id();
}
inline ::google::protobuf::uint64 C2LPullRoleEnterDupNotify::duplicate_id() const {
  return duplicate_id_;
}
inline void C2LPullRoleEnterDupNotify::set_duplicate_id(::google::protobuf::uint64 value) {
  set_has_duplicate_id();
  duplicate_id_ = value;
}

// required uint64 scene_id = 3;
inline bool C2LPullRoleEnterDupNotify::has_scene_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void C2LPullRoleEnterDupNotify::set_has_scene_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void C2LPullRoleEnterDupNotify::clear_has_scene_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void C2LPullRoleEnterDupNotify::clear_scene_id() {
  scene_id_ = GOOGLE_ULONGLONG(0);
  clear_has_scene_id();
}
inline ::google::protobuf::uint64 C2LPullRoleEnterDupNotify::scene_id() const {
  return scene_id_;
}
inline void C2LPullRoleEnterDupNotify::set_scene_id(::google::protobuf::uint64 value) {
  set_has_scene_id();
  scene_id_ = value;
}

// optional uint64 born_id = 4;
inline bool C2LPullRoleEnterDupNotify::has_born_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void C2LPullRoleEnterDupNotify::set_has_born_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void C2LPullRoleEnterDupNotify::clear_has_born_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void C2LPullRoleEnterDupNotify::clear_born_id() {
  born_id_ = GOOGLE_ULONGLONG(0);
  clear_has_born_id();
}
inline ::google::protobuf::uint64 C2LPullRoleEnterDupNotify::born_id() const {
  return born_id_;
}
inline void C2LPullRoleEnterDupNotify::set_born_id(::google::protobuf::uint64 value) {
  set_has_born_id();
  born_id_ = value;
}

// optional uint32 zoneid = 5;
inline bool C2LPullRoleEnterDupNotify::has_zoneid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void C2LPullRoleEnterDupNotify::set_has_zoneid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void C2LPullRoleEnterDupNotify::clear_has_zoneid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void C2LPullRoleEnterDupNotify::clear_zoneid() {
  zoneid_ = 0u;
  clear_has_zoneid();
}
inline ::google::protobuf::uint32 C2LPullRoleEnterDupNotify::zoneid() const {
  return zoneid_;
}
inline void C2LPullRoleEnterDupNotify::set_zoneid(::google::protobuf::uint32 value) {
  set_has_zoneid();
  zoneid_ = value;
}

// -------------------------------------------------------------------

// L2CDupRoleActionNotify

// optional int64 sceneId = 1;
inline bool L2CDupRoleActionNotify::has_sceneid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void L2CDupRoleActionNotify::set_has_sceneid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void L2CDupRoleActionNotify::clear_has_sceneid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void L2CDupRoleActionNotify::clear_sceneid() {
  sceneid_ = GOOGLE_LONGLONG(0);
  clear_has_sceneid();
}
inline ::google::protobuf::int64 L2CDupRoleActionNotify::sceneid() const {
  return sceneid_;
}
inline void L2CDupRoleActionNotify::set_sceneid(::google::protobuf::int64 value) {
  set_has_sceneid();
  sceneid_ = value;
}

// optional int64 cid = 2;
inline bool L2CDupRoleActionNotify::has_cid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void L2CDupRoleActionNotify::set_has_cid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void L2CDupRoleActionNotify::clear_has_cid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void L2CDupRoleActionNotify::clear_cid() {
  cid_ = GOOGLE_LONGLONG(0);
  clear_has_cid();
}
inline ::google::protobuf::int64 L2CDupRoleActionNotify::cid() const {
  return cid_;
}
inline void L2CDupRoleActionNotify::set_cid(::google::protobuf::int64 value) {
  set_has_cid();
  cid_ = value;
}

// optional int32 actionId = 3;
inline bool L2CDupRoleActionNotify::has_actionid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void L2CDupRoleActionNotify::set_has_actionid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void L2CDupRoleActionNotify::clear_has_actionid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void L2CDupRoleActionNotify::clear_actionid() {
  actionid_ = 0;
  clear_has_actionid();
}
inline ::google::protobuf::int32 L2CDupRoleActionNotify::actionid() const {
  return actionid_;
}
inline void L2CDupRoleActionNotify::set_actionid(::google::protobuf::int32 value) {
  set_has_actionid();
  actionid_ = value;
}

// optional int32 ret = 4;
inline bool L2CDupRoleActionNotify::has_ret() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void L2CDupRoleActionNotify::set_has_ret() {
  _has_bits_[0] |= 0x00000008u;
}
inline void L2CDupRoleActionNotify::clear_has_ret() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void L2CDupRoleActionNotify::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
inline ::google::protobuf::int32 L2CDupRoleActionNotify::ret() const {
  return ret_;
}
inline void L2CDupRoleActionNotify::set_ret(::google::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
}

// -------------------------------------------------------------------

// S2CEnterDupReq

// optional .proto_ff.CreateSceneParamProto params = 1;
inline bool S2CEnterDupReq::has_params() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void S2CEnterDupReq::set_has_params() {
  _has_bits_[0] |= 0x00000001u;
}
inline void S2CEnterDupReq::clear_has_params() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void S2CEnterDupReq::clear_params() {
  if (params_ != NULL) params_->::proto_ff::CreateSceneParamProto::Clear();
  clear_has_params();
}
inline const ::proto_ff::CreateSceneParamProto& S2CEnterDupReq::params() const {
  return params_ != NULL ? *params_ : *default_instance_->params_;
}
inline ::proto_ff::CreateSceneParamProto* S2CEnterDupReq::mutable_params() {
  set_has_params();
  if (params_ == NULL) params_ = new ::proto_ff::CreateSceneParamProto;
  return params_;
}
inline ::proto_ff::CreateSceneParamProto* S2CEnterDupReq::release_params() {
  clear_has_params();
  ::proto_ff::CreateSceneParamProto* temp = params_;
  params_ = NULL;
  return temp;
}
inline void S2CEnterDupReq::set_allocated_params(::proto_ff::CreateSceneParamProto* params) {
  delete params_;
  params_ = params;
  if (params) {
    set_has_params();
  } else {
    clear_has_params();
  }
}

// -------------------------------------------------------------------

// C2SEnterDupRsp

// optional int32 ret = 1;
inline bool C2SEnterDupRsp::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void C2SEnterDupRsp::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void C2SEnterDupRsp::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void C2SEnterDupRsp::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
inline ::google::protobuf::int32 C2SEnterDupRsp::ret() const {
  return ret_;
}
inline void C2SEnterDupRsp::set_ret(::google::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
}

// optional .proto_ff.CreateSceneParamProto params = 2;
inline bool C2SEnterDupRsp::has_params() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void C2SEnterDupRsp::set_has_params() {
  _has_bits_[0] |= 0x00000002u;
}
inline void C2SEnterDupRsp::clear_has_params() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void C2SEnterDupRsp::clear_params() {
  if (params_ != NULL) params_->::proto_ff::CreateSceneParamProto::Clear();
  clear_has_params();
}
inline const ::proto_ff::CreateSceneParamProto& C2SEnterDupRsp::params() const {
  return params_ != NULL ? *params_ : *default_instance_->params_;
}
inline ::proto_ff::CreateSceneParamProto* C2SEnterDupRsp::mutable_params() {
  set_has_params();
  if (params_ == NULL) params_ = new ::proto_ff::CreateSceneParamProto;
  return params_;
}
inline ::proto_ff::CreateSceneParamProto* C2SEnterDupRsp::release_params() {
  clear_has_params();
  ::proto_ff::CreateSceneParamProto* temp = params_;
  params_ = NULL;
  return temp;
}
inline void C2SEnterDupRsp::set_allocated_params(::proto_ff::CreateSceneParamProto* params) {
  delete params_;
  params_ = params;
  if (params) {
    set_has_params();
  } else {
    clear_has_params();
  }
}

// -------------------------------------------------------------------

// L2CTowerRecvRecordReq

// optional int64 id = 1;
inline bool L2CTowerRecvRecordReq::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void L2CTowerRecvRecordReq::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void L2CTowerRecvRecordReq::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void L2CTowerRecvRecordReq::clear_id() {
  id_ = GOOGLE_LONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::int64 L2CTowerRecvRecordReq::id() const {
  return id_;
}
inline void L2CTowerRecvRecordReq::set_id(::google::protobuf::int64 value) {
  set_has_id();
  id_ = value;
}

// optional int64 cid = 2;
inline bool L2CTowerRecvRecordReq::has_cid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void L2CTowerRecvRecordReq::set_has_cid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void L2CTowerRecvRecordReq::clear_has_cid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void L2CTowerRecvRecordReq::clear_cid() {
  cid_ = GOOGLE_LONGLONG(0);
  clear_has_cid();
}
inline ::google::protobuf::int64 L2CTowerRecvRecordReq::cid() const {
  return cid_;
}
inline void L2CTowerRecvRecordReq::set_cid(::google::protobuf::int64 value) {
  set_has_cid();
  cid_ = value;
}

// optional string name = 3;
inline bool L2CTowerRecvRecordReq::has_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void L2CTowerRecvRecordReq::set_has_name() {
  _has_bits_[0] |= 0x00000004u;
}
inline void L2CTowerRecvRecordReq::clear_has_name() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void L2CTowerRecvRecordReq::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& L2CTowerRecvRecordReq::name() const {
  return *name_;
}
inline void L2CTowerRecvRecordReq::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void L2CTowerRecvRecordReq::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void L2CTowerRecvRecordReq::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* L2CTowerRecvRecordReq::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* L2CTowerRecvRecordReq::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void L2CTowerRecvRecordReq::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int64 time = 4;
inline bool L2CTowerRecvRecordReq::has_time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void L2CTowerRecvRecordReq::set_has_time() {
  _has_bits_[0] |= 0x00000008u;
}
inline void L2CTowerRecvRecordReq::clear_has_time() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void L2CTowerRecvRecordReq::clear_time() {
  time_ = GOOGLE_LONGLONG(0);
  clear_has_time();
}
inline ::google::protobuf::int64 L2CTowerRecvRecordReq::time() const {
  return time_;
}
inline void L2CTowerRecvRecordReq::set_time(::google::protobuf::int64 value) {
  set_has_time();
  time_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto_ff

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_Dup_2eproto__INCLUDED
