// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Soul.proto

#ifndef PROTOBUF_Soul_2eproto__INCLUDED
#define PROTOBUF_Soul_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "Com.pb.h"
#include "ComDefine.pb.h"
// @@protoc_insertion_point(includes)

namespace proto_ff {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_Soul_2eproto();
void protobuf_AssignDesc_Soul_2eproto();
void protobuf_ShutdownFile_Soul_2eproto();

class NotifySoulModule;
class NotifySoulEntry;
class NotifySoulPool;
class NotifySoulTask;
class SoulRecvTaskReq;
class SoulRecvTaskRsp;
class SoulEntryOptReq;
class SoulEntryOptRsp;
class SoulPoolOptReq;
class SoulPoolOptRsp;

// ===================================================================

class NotifySoulModule : public ::google::protobuf::Message {
 public:
  NotifySoulModule();
  virtual ~NotifySoulModule();

  NotifySoulModule(const NotifySoulModule& from);

  inline NotifySoulModule& operator=(const NotifySoulModule& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NotifySoulModule& default_instance();

  void Swap(NotifySoulModule* other);

  // implements Message ----------------------------------------------

  NotifySoulModule* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NotifySoulModule& from);
  void MergeFrom(const NotifySoulModule& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .proto_ff.SoulEntry entry = 1;
  inline bool has_entry() const;
  inline void clear_entry();
  static const int kEntryFieldNumber = 1;
  inline const ::proto_ff::SoulEntry& entry() const;
  inline ::proto_ff::SoulEntry* mutable_entry();
  inline ::proto_ff::SoulEntry* release_entry();
  inline void set_allocated_entry(::proto_ff::SoulEntry* entry);

  // optional .proto_ff.SoulPool pool = 2;
  inline bool has_pool() const;
  inline void clear_pool();
  static const int kPoolFieldNumber = 2;
  inline const ::proto_ff::SoulPool& pool() const;
  inline ::proto_ff::SoulPool* mutable_pool();
  inline ::proto_ff::SoulPool* release_pool();
  inline void set_allocated_pool(::proto_ff::SoulPool* pool);

  // repeated .proto_ff.ComPair tasks = 3;
  inline int tasks_size() const;
  inline void clear_tasks();
  static const int kTasksFieldNumber = 3;
  inline const ::proto_ff::ComPair& tasks(int index) const;
  inline ::proto_ff::ComPair* mutable_tasks(int index);
  inline ::proto_ff::ComPair* add_tasks();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair >&
      tasks() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair >*
      mutable_tasks();

  // @@protoc_insertion_point(class_scope:proto_ff.NotifySoulModule)
 private:
  inline void set_has_entry();
  inline void clear_has_entry();
  inline void set_has_pool();
  inline void clear_has_pool();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::proto_ff::SoulEntry* entry_;
  ::proto_ff::SoulPool* pool_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair > tasks_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_Soul_2eproto();
  friend void protobuf_AssignDesc_Soul_2eproto();
  friend void protobuf_ShutdownFile_Soul_2eproto();

  void InitAsDefaultInstance();
  static NotifySoulModule* default_instance_;
};
// -------------------------------------------------------------------

class NotifySoulEntry : public ::google::protobuf::Message {
 public:
  NotifySoulEntry();
  virtual ~NotifySoulEntry();

  NotifySoulEntry(const NotifySoulEntry& from);

  inline NotifySoulEntry& operator=(const NotifySoulEntry& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NotifySoulEntry& default_instance();

  void Swap(NotifySoulEntry* other);

  // implements Message ----------------------------------------------

  NotifySoulEntry* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NotifySoulEntry& from);
  void MergeFrom(const NotifySoulEntry& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .proto_ff.SoulEntry entry = 1;
  inline bool has_entry() const;
  inline void clear_entry();
  static const int kEntryFieldNumber = 1;
  inline const ::proto_ff::SoulEntry& entry() const;
  inline ::proto_ff::SoulEntry* mutable_entry();
  inline ::proto_ff::SoulEntry* release_entry();
  inline void set_allocated_entry(::proto_ff::SoulEntry* entry);

  // @@protoc_insertion_point(class_scope:proto_ff.NotifySoulEntry)
 private:
  inline void set_has_entry();
  inline void clear_has_entry();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::proto_ff::SoulEntry* entry_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Soul_2eproto();
  friend void protobuf_AssignDesc_Soul_2eproto();
  friend void protobuf_ShutdownFile_Soul_2eproto();

  void InitAsDefaultInstance();
  static NotifySoulEntry* default_instance_;
};
// -------------------------------------------------------------------

class NotifySoulPool : public ::google::protobuf::Message {
 public:
  NotifySoulPool();
  virtual ~NotifySoulPool();

  NotifySoulPool(const NotifySoulPool& from);

  inline NotifySoulPool& operator=(const NotifySoulPool& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NotifySoulPool& default_instance();

  void Swap(NotifySoulPool* other);

  // implements Message ----------------------------------------------

  NotifySoulPool* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NotifySoulPool& from);
  void MergeFrom(const NotifySoulPool& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .proto_ff.SoulPool pool = 1;
  inline bool has_pool() const;
  inline void clear_pool();
  static const int kPoolFieldNumber = 1;
  inline const ::proto_ff::SoulPool& pool() const;
  inline ::proto_ff::SoulPool* mutable_pool();
  inline ::proto_ff::SoulPool* release_pool();
  inline void set_allocated_pool(::proto_ff::SoulPool* pool);

  // @@protoc_insertion_point(class_scope:proto_ff.NotifySoulPool)
 private:
  inline void set_has_pool();
  inline void clear_has_pool();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::proto_ff::SoulPool* pool_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Soul_2eproto();
  friend void protobuf_AssignDesc_Soul_2eproto();
  friend void protobuf_ShutdownFile_Soul_2eproto();

  void InitAsDefaultInstance();
  static NotifySoulPool* default_instance_;
};
// -------------------------------------------------------------------

class NotifySoulTask : public ::google::protobuf::Message {
 public:
  NotifySoulTask();
  virtual ~NotifySoulTask();

  NotifySoulTask(const NotifySoulTask& from);

  inline NotifySoulTask& operator=(const NotifySoulTask& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NotifySoulTask& default_instance();

  void Swap(NotifySoulTask* other);

  // implements Message ----------------------------------------------

  NotifySoulTask* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NotifySoulTask& from);
  void MergeFrom(const NotifySoulTask& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.ComPair tasks = 1;
  inline int tasks_size() const;
  inline void clear_tasks();
  static const int kTasksFieldNumber = 1;
  inline const ::proto_ff::ComPair& tasks(int index) const;
  inline ::proto_ff::ComPair* mutable_tasks(int index);
  inline ::proto_ff::ComPair* add_tasks();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair >&
      tasks() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair >*
      mutable_tasks();

  // @@protoc_insertion_point(class_scope:proto_ff.NotifySoulTask)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair > tasks_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Soul_2eproto();
  friend void protobuf_AssignDesc_Soul_2eproto();
  friend void protobuf_ShutdownFile_Soul_2eproto();

  void InitAsDefaultInstance();
  static NotifySoulTask* default_instance_;
};
// -------------------------------------------------------------------

class SoulRecvTaskReq : public ::google::protobuf::Message {
 public:
  SoulRecvTaskReq();
  virtual ~SoulRecvTaskReq();

  SoulRecvTaskReq(const SoulRecvTaskReq& from);

  inline SoulRecvTaskReq& operator=(const SoulRecvTaskReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SoulRecvTaskReq& default_instance();

  void Swap(SoulRecvTaskReq* other);

  // implements Message ----------------------------------------------

  SoulRecvTaskReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SoulRecvTaskReq& from);
  void MergeFrom(const SoulRecvTaskReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.SoulRecvTaskReq)
 private:
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Soul_2eproto();
  friend void protobuf_AssignDesc_Soul_2eproto();
  friend void protobuf_ShutdownFile_Soul_2eproto();

  void InitAsDefaultInstance();
  static SoulRecvTaskReq* default_instance_;
};
// -------------------------------------------------------------------

class SoulRecvTaskRsp : public ::google::protobuf::Message {
 public:
  SoulRecvTaskRsp();
  virtual ~SoulRecvTaskRsp();

  SoulRecvTaskRsp(const SoulRecvTaskRsp& from);

  inline SoulRecvTaskRsp& operator=(const SoulRecvTaskRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SoulRecvTaskRsp& default_instance();

  void Swap(SoulRecvTaskRsp* other);

  // implements Message ----------------------------------------------

  SoulRecvTaskRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SoulRecvTaskRsp& from);
  void MergeFrom(const SoulRecvTaskRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 ret = 1;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 1;
  inline ::google::protobuf::int32 ret() const;
  inline void set_ret(::google::protobuf::int32 value);

  // optional int32 id = 2;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 2;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.SoulRecvTaskRsp)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 ret_;
  ::google::protobuf::int32 id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Soul_2eproto();
  friend void protobuf_AssignDesc_Soul_2eproto();
  friend void protobuf_ShutdownFile_Soul_2eproto();

  void InitAsDefaultInstance();
  static SoulRecvTaskRsp* default_instance_;
};
// -------------------------------------------------------------------

class SoulEntryOptReq : public ::google::protobuf::Message {
 public:
  SoulEntryOptReq();
  virtual ~SoulEntryOptReq();

  SoulEntryOptReq(const SoulEntryOptReq& from);

  inline SoulEntryOptReq& operator=(const SoulEntryOptReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SoulEntryOptReq& default_instance();

  void Swap(SoulEntryOptReq* other);

  // implements Message ----------------------------------------------

  SoulEntryOptReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SoulEntryOptReq& from);
  void MergeFrom(const SoulEntryOptReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.SoulEntryOptReq)
 private:
  inline void set_has_type();
  inline void clear_has_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Soul_2eproto();
  friend void protobuf_AssignDesc_Soul_2eproto();
  friend void protobuf_ShutdownFile_Soul_2eproto();

  void InitAsDefaultInstance();
  static SoulEntryOptReq* default_instance_;
};
// -------------------------------------------------------------------

class SoulEntryOptRsp : public ::google::protobuf::Message {
 public:
  SoulEntryOptRsp();
  virtual ~SoulEntryOptRsp();

  SoulEntryOptRsp(const SoulEntryOptRsp& from);

  inline SoulEntryOptRsp& operator=(const SoulEntryOptRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SoulEntryOptRsp& default_instance();

  void Swap(SoulEntryOptRsp* other);

  // implements Message ----------------------------------------------

  SoulEntryOptRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SoulEntryOptRsp& from);
  void MergeFrom(const SoulEntryOptRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 ret = 1;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 1;
  inline ::google::protobuf::int32 ret() const;
  inline void set_ret(::google::protobuf::int32 value);

  // optional int32 type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.SoulEntryOptRsp)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();
  inline void set_has_type();
  inline void clear_has_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 ret_;
  ::google::protobuf::int32 type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Soul_2eproto();
  friend void protobuf_AssignDesc_Soul_2eproto();
  friend void protobuf_ShutdownFile_Soul_2eproto();

  void InitAsDefaultInstance();
  static SoulEntryOptRsp* default_instance_;
};
// -------------------------------------------------------------------

class SoulPoolOptReq : public ::google::protobuf::Message {
 public:
  SoulPoolOptReq();
  virtual ~SoulPoolOptReq();

  SoulPoolOptReq(const SoulPoolOptReq& from);

  inline SoulPoolOptReq& operator=(const SoulPoolOptReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SoulPoolOptReq& default_instance();

  void Swap(SoulPoolOptReq* other);

  // implements Message ----------------------------------------------

  SoulPoolOptReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SoulPoolOptReq& from);
  void MergeFrom(const SoulPoolOptReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.SoulPoolOptReq)
 private:
  inline void set_has_type();
  inline void clear_has_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Soul_2eproto();
  friend void protobuf_AssignDesc_Soul_2eproto();
  friend void protobuf_ShutdownFile_Soul_2eproto();

  void InitAsDefaultInstance();
  static SoulPoolOptReq* default_instance_;
};
// -------------------------------------------------------------------

class SoulPoolOptRsp : public ::google::protobuf::Message {
 public:
  SoulPoolOptRsp();
  virtual ~SoulPoolOptRsp();

  SoulPoolOptRsp(const SoulPoolOptRsp& from);

  inline SoulPoolOptRsp& operator=(const SoulPoolOptRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SoulPoolOptRsp& default_instance();

  void Swap(SoulPoolOptRsp* other);

  // implements Message ----------------------------------------------

  SoulPoolOptRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SoulPoolOptRsp& from);
  void MergeFrom(const SoulPoolOptRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 ret = 1;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 1;
  inline ::google::protobuf::int32 ret() const;
  inline void set_ret(::google::protobuf::int32 value);

  // optional int32 type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.SoulPoolOptRsp)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();
  inline void set_has_type();
  inline void clear_has_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 ret_;
  ::google::protobuf::int32 type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Soul_2eproto();
  friend void protobuf_AssignDesc_Soul_2eproto();
  friend void protobuf_ShutdownFile_Soul_2eproto();

  void InitAsDefaultInstance();
  static SoulPoolOptRsp* default_instance_;
};
// ===================================================================


// ===================================================================

// NotifySoulModule

// optional .proto_ff.SoulEntry entry = 1;
inline bool NotifySoulModule::has_entry() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NotifySoulModule::set_has_entry() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NotifySoulModule::clear_has_entry() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NotifySoulModule::clear_entry() {
  if (entry_ != NULL) entry_->::proto_ff::SoulEntry::Clear();
  clear_has_entry();
}
inline const ::proto_ff::SoulEntry& NotifySoulModule::entry() const {
  return entry_ != NULL ? *entry_ : *default_instance_->entry_;
}
inline ::proto_ff::SoulEntry* NotifySoulModule::mutable_entry() {
  set_has_entry();
  if (entry_ == NULL) entry_ = new ::proto_ff::SoulEntry;
  return entry_;
}
inline ::proto_ff::SoulEntry* NotifySoulModule::release_entry() {
  clear_has_entry();
  ::proto_ff::SoulEntry* temp = entry_;
  entry_ = NULL;
  return temp;
}
inline void NotifySoulModule::set_allocated_entry(::proto_ff::SoulEntry* entry) {
  delete entry_;
  entry_ = entry;
  if (entry) {
    set_has_entry();
  } else {
    clear_has_entry();
  }
}

// optional .proto_ff.SoulPool pool = 2;
inline bool NotifySoulModule::has_pool() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void NotifySoulModule::set_has_pool() {
  _has_bits_[0] |= 0x00000002u;
}
inline void NotifySoulModule::clear_has_pool() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void NotifySoulModule::clear_pool() {
  if (pool_ != NULL) pool_->::proto_ff::SoulPool::Clear();
  clear_has_pool();
}
inline const ::proto_ff::SoulPool& NotifySoulModule::pool() const {
  return pool_ != NULL ? *pool_ : *default_instance_->pool_;
}
inline ::proto_ff::SoulPool* NotifySoulModule::mutable_pool() {
  set_has_pool();
  if (pool_ == NULL) pool_ = new ::proto_ff::SoulPool;
  return pool_;
}
inline ::proto_ff::SoulPool* NotifySoulModule::release_pool() {
  clear_has_pool();
  ::proto_ff::SoulPool* temp = pool_;
  pool_ = NULL;
  return temp;
}
inline void NotifySoulModule::set_allocated_pool(::proto_ff::SoulPool* pool) {
  delete pool_;
  pool_ = pool;
  if (pool) {
    set_has_pool();
  } else {
    clear_has_pool();
  }
}

// repeated .proto_ff.ComPair tasks = 3;
inline int NotifySoulModule::tasks_size() const {
  return tasks_.size();
}
inline void NotifySoulModule::clear_tasks() {
  tasks_.Clear();
}
inline const ::proto_ff::ComPair& NotifySoulModule::tasks(int index) const {
  return tasks_.Get(index);
}
inline ::proto_ff::ComPair* NotifySoulModule::mutable_tasks(int index) {
  return tasks_.Mutable(index);
}
inline ::proto_ff::ComPair* NotifySoulModule::add_tasks() {
  return tasks_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair >&
NotifySoulModule::tasks() const {
  return tasks_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair >*
NotifySoulModule::mutable_tasks() {
  return &tasks_;
}

// -------------------------------------------------------------------

// NotifySoulEntry

// optional .proto_ff.SoulEntry entry = 1;
inline bool NotifySoulEntry::has_entry() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NotifySoulEntry::set_has_entry() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NotifySoulEntry::clear_has_entry() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NotifySoulEntry::clear_entry() {
  if (entry_ != NULL) entry_->::proto_ff::SoulEntry::Clear();
  clear_has_entry();
}
inline const ::proto_ff::SoulEntry& NotifySoulEntry::entry() const {
  return entry_ != NULL ? *entry_ : *default_instance_->entry_;
}
inline ::proto_ff::SoulEntry* NotifySoulEntry::mutable_entry() {
  set_has_entry();
  if (entry_ == NULL) entry_ = new ::proto_ff::SoulEntry;
  return entry_;
}
inline ::proto_ff::SoulEntry* NotifySoulEntry::release_entry() {
  clear_has_entry();
  ::proto_ff::SoulEntry* temp = entry_;
  entry_ = NULL;
  return temp;
}
inline void NotifySoulEntry::set_allocated_entry(::proto_ff::SoulEntry* entry) {
  delete entry_;
  entry_ = entry;
  if (entry) {
    set_has_entry();
  } else {
    clear_has_entry();
  }
}

// -------------------------------------------------------------------

// NotifySoulPool

// optional .proto_ff.SoulPool pool = 1;
inline bool NotifySoulPool::has_pool() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NotifySoulPool::set_has_pool() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NotifySoulPool::clear_has_pool() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NotifySoulPool::clear_pool() {
  if (pool_ != NULL) pool_->::proto_ff::SoulPool::Clear();
  clear_has_pool();
}
inline const ::proto_ff::SoulPool& NotifySoulPool::pool() const {
  return pool_ != NULL ? *pool_ : *default_instance_->pool_;
}
inline ::proto_ff::SoulPool* NotifySoulPool::mutable_pool() {
  set_has_pool();
  if (pool_ == NULL) pool_ = new ::proto_ff::SoulPool;
  return pool_;
}
inline ::proto_ff::SoulPool* NotifySoulPool::release_pool() {
  clear_has_pool();
  ::proto_ff::SoulPool* temp = pool_;
  pool_ = NULL;
  return temp;
}
inline void NotifySoulPool::set_allocated_pool(::proto_ff::SoulPool* pool) {
  delete pool_;
  pool_ = pool;
  if (pool) {
    set_has_pool();
  } else {
    clear_has_pool();
  }
}

// -------------------------------------------------------------------

// NotifySoulTask

// repeated .proto_ff.ComPair tasks = 1;
inline int NotifySoulTask::tasks_size() const {
  return tasks_.size();
}
inline void NotifySoulTask::clear_tasks() {
  tasks_.Clear();
}
inline const ::proto_ff::ComPair& NotifySoulTask::tasks(int index) const {
  return tasks_.Get(index);
}
inline ::proto_ff::ComPair* NotifySoulTask::mutable_tasks(int index) {
  return tasks_.Mutable(index);
}
inline ::proto_ff::ComPair* NotifySoulTask::add_tasks() {
  return tasks_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair >&
NotifySoulTask::tasks() const {
  return tasks_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair >*
NotifySoulTask::mutable_tasks() {
  return &tasks_;
}

// -------------------------------------------------------------------

// SoulRecvTaskReq

// optional int32 id = 1;
inline bool SoulRecvTaskReq::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SoulRecvTaskReq::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SoulRecvTaskReq::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SoulRecvTaskReq::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 SoulRecvTaskReq::id() const {
  return id_;
}
inline void SoulRecvTaskReq::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// -------------------------------------------------------------------

// SoulRecvTaskRsp

// optional int32 ret = 1;
inline bool SoulRecvTaskRsp::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SoulRecvTaskRsp::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SoulRecvTaskRsp::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SoulRecvTaskRsp::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
inline ::google::protobuf::int32 SoulRecvTaskRsp::ret() const {
  return ret_;
}
inline void SoulRecvTaskRsp::set_ret(::google::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
}

// optional int32 id = 2;
inline bool SoulRecvTaskRsp::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SoulRecvTaskRsp::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SoulRecvTaskRsp::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SoulRecvTaskRsp::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 SoulRecvTaskRsp::id() const {
  return id_;
}
inline void SoulRecvTaskRsp::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// -------------------------------------------------------------------

// SoulEntryOptReq

// optional int32 type = 1;
inline bool SoulEntryOptReq::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SoulEntryOptReq::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SoulEntryOptReq::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SoulEntryOptReq::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 SoulEntryOptReq::type() const {
  return type_;
}
inline void SoulEntryOptReq::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// -------------------------------------------------------------------

// SoulEntryOptRsp

// optional int32 ret = 1;
inline bool SoulEntryOptRsp::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SoulEntryOptRsp::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SoulEntryOptRsp::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SoulEntryOptRsp::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
inline ::google::protobuf::int32 SoulEntryOptRsp::ret() const {
  return ret_;
}
inline void SoulEntryOptRsp::set_ret(::google::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
}

// optional int32 type = 2;
inline bool SoulEntryOptRsp::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SoulEntryOptRsp::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SoulEntryOptRsp::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SoulEntryOptRsp::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 SoulEntryOptRsp::type() const {
  return type_;
}
inline void SoulEntryOptRsp::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// -------------------------------------------------------------------

// SoulPoolOptReq

// optional int32 type = 1;
inline bool SoulPoolOptReq::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SoulPoolOptReq::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SoulPoolOptReq::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SoulPoolOptReq::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 SoulPoolOptReq::type() const {
  return type_;
}
inline void SoulPoolOptReq::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// -------------------------------------------------------------------

// SoulPoolOptRsp

// optional int32 ret = 1;
inline bool SoulPoolOptRsp::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SoulPoolOptRsp::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SoulPoolOptRsp::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SoulPoolOptRsp::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
inline ::google::protobuf::int32 SoulPoolOptRsp::ret() const {
  return ret_;
}
inline void SoulPoolOptRsp::set_ret(::google::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
}

// optional int32 type = 2;
inline bool SoulPoolOptRsp::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SoulPoolOptRsp::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SoulPoolOptRsp::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SoulPoolOptRsp::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 SoulPoolOptRsp::type() const {
  return type_;
}
inline void SoulPoolOptRsp::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto_ff

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_Soul_2eproto__INCLUDED
