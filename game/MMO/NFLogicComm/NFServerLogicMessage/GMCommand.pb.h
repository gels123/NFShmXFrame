// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: GMCommand.proto

#ifndef PROTOBUF_GMCommand_2eproto__INCLUDED
#define PROTOBUF_GMCommand_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "yd_fieldoptions.pb.h"
// @@protoc_insertion_point(includes)

namespace proto_ff {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_GMCommand_2eproto();
void protobuf_AssignDesc_GMCommand_2eproto();
void protobuf_ShutdownFile_GMCommand_2eproto();

class GMCommandGMCommand;
class Sheet_GMCommandGMCommand;

// ===================================================================

class GMCommandGMCommand : public ::google::protobuf::Message {
 public:
  GMCommandGMCommand();
  virtual ~GMCommandGMCommand();

  GMCommandGMCommand(const GMCommandGMCommand& from);

  inline GMCommandGMCommand& operator=(const GMCommandGMCommand& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GMCommandGMCommand& default_instance();

  void Swap(GMCommandGMCommand* other);

  // implements Message ----------------------------------------------

  GMCommandGMCommand* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GMCommandGMCommand& from);
  void MergeFrom(const GMCommandGMCommand& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 ID = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIDFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // optional string Key = 2;
  inline bool has_key() const;
  inline void clear_key();
  static const int kKeyFieldNumber = 2;
  inline const ::std::string& key() const;
  inline void set_key(const ::std::string& value);
  inline void set_key(const char* value);
  inline void set_key(const char* value, size_t size);
  inline ::std::string* mutable_key();
  inline ::std::string* release_key();
  inline void set_allocated_key(::std::string* key);

  // optional int32 ParamCount = 3;
  inline bool has_paramcount() const;
  inline void clear_paramcount();
  static const int kParamCountFieldNumber = 3;
  inline ::google::protobuf::int32 paramcount() const;
  inline void set_paramcount(::google::protobuf::int32 value);

  // optional string Des = 4;
  inline bool has_des() const;
  inline void clear_des();
  static const int kDesFieldNumber = 4;
  inline const ::std::string& des() const;
  inline void set_des(const ::std::string& value);
  inline void set_des(const char* value);
  inline void set_des(const char* value, size_t size);
  inline ::std::string* mutable_des();
  inline ::std::string* release_des();
  inline void set_allocated_des(::std::string* des);

  // @@protoc_insertion_point(class_scope:proto_ff.GMCommandGMCommand)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_key();
  inline void clear_has_key();
  inline void set_has_paramcount();
  inline void clear_has_paramcount();
  inline void set_has_des();
  inline void clear_has_des();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* key_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 paramcount_;
  ::std::string* des_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_GMCommand_2eproto();
  friend void protobuf_AssignDesc_GMCommand_2eproto();
  friend void protobuf_ShutdownFile_GMCommand_2eproto();

  void InitAsDefaultInstance();
  static GMCommandGMCommand* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_GMCommandGMCommand : public ::google::protobuf::Message {
 public:
  Sheet_GMCommandGMCommand();
  virtual ~Sheet_GMCommandGMCommand();

  Sheet_GMCommandGMCommand(const Sheet_GMCommandGMCommand& from);

  inline Sheet_GMCommandGMCommand& operator=(const Sheet_GMCommandGMCommand& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_GMCommandGMCommand& default_instance();

  void Swap(Sheet_GMCommandGMCommand* other);

  // implements Message ----------------------------------------------

  Sheet_GMCommandGMCommand* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_GMCommandGMCommand& from);
  void MergeFrom(const Sheet_GMCommandGMCommand& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.GMCommandGMCommand GMCommandGMCommand_List = 1;
  inline int gmcommandgmcommand_list_size() const;
  inline void clear_gmcommandgmcommand_list();
  static const int kGMCommandGMCommandListFieldNumber = 1;
  inline const ::proto_ff::GMCommandGMCommand& gmcommandgmcommand_list(int index) const;
  inline ::proto_ff::GMCommandGMCommand* mutable_gmcommandgmcommand_list(int index);
  inline ::proto_ff::GMCommandGMCommand* add_gmcommandgmcommand_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::GMCommandGMCommand >&
      gmcommandgmcommand_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::GMCommandGMCommand >*
      mutable_gmcommandgmcommand_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_GMCommandGMCommand)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::GMCommandGMCommand > gmcommandgmcommand_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GMCommand_2eproto();
  friend void protobuf_AssignDesc_GMCommand_2eproto();
  friend void protobuf_ShutdownFile_GMCommand_2eproto();

  void InitAsDefaultInstance();
  static Sheet_GMCommandGMCommand* default_instance_;
};
// ===================================================================


// ===================================================================

// GMCommandGMCommand

// optional int32 ID = 1;
inline bool GMCommandGMCommand::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GMCommandGMCommand::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GMCommandGMCommand::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GMCommandGMCommand::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 GMCommandGMCommand::id() const {
  return id_;
}
inline void GMCommandGMCommand::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// optional string Key = 2;
inline bool GMCommandGMCommand::has_key() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GMCommandGMCommand::set_has_key() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GMCommandGMCommand::clear_has_key() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GMCommandGMCommand::clear_key() {
  if (key_ != &::google::protobuf::internal::kEmptyString) {
    key_->clear();
  }
  clear_has_key();
}
inline const ::std::string& GMCommandGMCommand::key() const {
  return *key_;
}
inline void GMCommandGMCommand::set_key(const ::std::string& value) {
  set_has_key();
  if (key_ == &::google::protobuf::internal::kEmptyString) {
    key_ = new ::std::string;
  }
  key_->assign(value);
}
inline void GMCommandGMCommand::set_key(const char* value) {
  set_has_key();
  if (key_ == &::google::protobuf::internal::kEmptyString) {
    key_ = new ::std::string;
  }
  key_->assign(value);
}
inline void GMCommandGMCommand::set_key(const char* value, size_t size) {
  set_has_key();
  if (key_ == &::google::protobuf::internal::kEmptyString) {
    key_ = new ::std::string;
  }
  key_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GMCommandGMCommand::mutable_key() {
  set_has_key();
  if (key_ == &::google::protobuf::internal::kEmptyString) {
    key_ = new ::std::string;
  }
  return key_;
}
inline ::std::string* GMCommandGMCommand::release_key() {
  clear_has_key();
  if (key_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = key_;
    key_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GMCommandGMCommand::set_allocated_key(::std::string* key) {
  if (key_ != &::google::protobuf::internal::kEmptyString) {
    delete key_;
  }
  if (key) {
    set_has_key();
    key_ = key;
  } else {
    clear_has_key();
    key_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 ParamCount = 3;
inline bool GMCommandGMCommand::has_paramcount() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GMCommandGMCommand::set_has_paramcount() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GMCommandGMCommand::clear_has_paramcount() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GMCommandGMCommand::clear_paramcount() {
  paramcount_ = 0;
  clear_has_paramcount();
}
inline ::google::protobuf::int32 GMCommandGMCommand::paramcount() const {
  return paramcount_;
}
inline void GMCommandGMCommand::set_paramcount(::google::protobuf::int32 value) {
  set_has_paramcount();
  paramcount_ = value;
}

// optional string Des = 4;
inline bool GMCommandGMCommand::has_des() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GMCommandGMCommand::set_has_des() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GMCommandGMCommand::clear_has_des() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GMCommandGMCommand::clear_des() {
  if (des_ != &::google::protobuf::internal::kEmptyString) {
    des_->clear();
  }
  clear_has_des();
}
inline const ::std::string& GMCommandGMCommand::des() const {
  return *des_;
}
inline void GMCommandGMCommand::set_des(const ::std::string& value) {
  set_has_des();
  if (des_ == &::google::protobuf::internal::kEmptyString) {
    des_ = new ::std::string;
  }
  des_->assign(value);
}
inline void GMCommandGMCommand::set_des(const char* value) {
  set_has_des();
  if (des_ == &::google::protobuf::internal::kEmptyString) {
    des_ = new ::std::string;
  }
  des_->assign(value);
}
inline void GMCommandGMCommand::set_des(const char* value, size_t size) {
  set_has_des();
  if (des_ == &::google::protobuf::internal::kEmptyString) {
    des_ = new ::std::string;
  }
  des_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GMCommandGMCommand::mutable_des() {
  set_has_des();
  if (des_ == &::google::protobuf::internal::kEmptyString) {
    des_ = new ::std::string;
  }
  return des_;
}
inline ::std::string* GMCommandGMCommand::release_des() {
  clear_has_des();
  if (des_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = des_;
    des_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GMCommandGMCommand::set_allocated_des(::std::string* des) {
  if (des_ != &::google::protobuf::internal::kEmptyString) {
    delete des_;
  }
  if (des) {
    set_has_des();
    des_ = des;
  } else {
    clear_has_des();
    des_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// Sheet_GMCommandGMCommand

// repeated .proto_ff.GMCommandGMCommand GMCommandGMCommand_List = 1;
inline int Sheet_GMCommandGMCommand::gmcommandgmcommand_list_size() const {
  return gmcommandgmcommand_list_.size();
}
inline void Sheet_GMCommandGMCommand::clear_gmcommandgmcommand_list() {
  gmcommandgmcommand_list_.Clear();
}
inline const ::proto_ff::GMCommandGMCommand& Sheet_GMCommandGMCommand::gmcommandgmcommand_list(int index) const {
  return gmcommandgmcommand_list_.Get(index);
}
inline ::proto_ff::GMCommandGMCommand* Sheet_GMCommandGMCommand::mutable_gmcommandgmcommand_list(int index) {
  return gmcommandgmcommand_list_.Mutable(index);
}
inline ::proto_ff::GMCommandGMCommand* Sheet_GMCommandGMCommand::add_gmcommandgmcommand_list() {
  return gmcommandgmcommand_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::GMCommandGMCommand >&
Sheet_GMCommandGMCommand::gmcommandgmcommand_list() const {
  return gmcommandgmcommand_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::GMCommandGMCommand >*
Sheet_GMCommandGMCommand::mutable_gmcommandgmcommand_list() {
  return &gmcommandgmcommand_list_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto_ff

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_GMCommand_2eproto__INCLUDED
