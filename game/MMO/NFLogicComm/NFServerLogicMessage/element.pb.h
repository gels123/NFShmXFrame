// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: element.proto

#ifndef PROTOBUF_element_2eproto__INCLUDED
#define PROTOBUF_element_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "yd_fieldoptions.pb.h"
// @@protoc_insertion_point(includes)

namespace proto_ff {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_element_2eproto();
void protobuf_AssignDesc_element_2eproto();
void protobuf_ShutdownFile_element_2eproto();

class elementelementattributeDesc;
class elementelementmaterialDesc;
class elementelement;
class Sheet_elementelement;
class elementfragmentattributeDesc;
class elementfragment;
class Sheet_elementfragment;
class elementelementUI;
class Sheet_elementelementUI;

// ===================================================================

class elementelementattributeDesc : public ::google::protobuf::Message {
 public:
  elementelementattributeDesc();
  virtual ~elementelementattributeDesc();

  elementelementattributeDesc(const elementelementattributeDesc& from);

  inline elementelementattributeDesc& operator=(const elementelementattributeDesc& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const elementelementattributeDesc& default_instance();

  void Swap(elementelementattributeDesc* other);

  // implements Message ----------------------------------------------

  elementelementattributeDesc* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const elementelementattributeDesc& from);
  void MergeFrom(const elementelementattributeDesc& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.elementelementattributeDesc)
 private:
  inline void set_has_type();
  inline void clear_has_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_element_2eproto();
  friend void protobuf_AssignDesc_element_2eproto();
  friend void protobuf_ShutdownFile_element_2eproto();

  void InitAsDefaultInstance();
  static elementelementattributeDesc* default_instance_;
};
// -------------------------------------------------------------------

class elementelementmaterialDesc : public ::google::protobuf::Message {
 public:
  elementelementmaterialDesc();
  virtual ~elementelementmaterialDesc();

  elementelementmaterialDesc(const elementelementmaterialDesc& from);

  inline elementelementmaterialDesc& operator=(const elementelementmaterialDesc& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const elementelementmaterialDesc& default_instance();

  void Swap(elementelementmaterialDesc* other);

  // implements Message ----------------------------------------------

  elementelementmaterialDesc* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const elementelementmaterialDesc& from);
  void MergeFrom(const elementelementmaterialDesc& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int64 id() const;
  inline void set_id(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.elementelementmaterialDesc)
 private:
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_element_2eproto();
  friend void protobuf_AssignDesc_element_2eproto();
  friend void protobuf_ShutdownFile_element_2eproto();

  void InitAsDefaultInstance();
  static elementelementmaterialDesc* default_instance_;
};
// -------------------------------------------------------------------

class elementelement : public ::google::protobuf::Message {
 public:
  elementelement();
  virtual ~elementelement();

  elementelement(const elementelement& from);

  inline elementelement& operator=(const elementelement& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const elementelement& default_instance();

  void Swap(elementelement* other);

  // implements Message ----------------------------------------------

  elementelement* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const elementelement& from);
  void MergeFrom(const elementelement& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 ID = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIDFieldNumber = 1;
  inline ::google::protobuf::int64 id() const;
  inline void set_id(::google::protobuf::int64 value);

  // optional string resource = 2;
  inline bool has_resource() const;
  inline void clear_resource();
  static const int kResourceFieldNumber = 2;
  inline const ::std::string& resource() const;
  inline void set_resource(const ::std::string& value);
  inline void set_resource(const char* value);
  inline void set_resource(const char* value, size_t size);
  inline ::std::string* mutable_resource();
  inline ::std::string* release_resource();
  inline void set_allocated_resource(::std::string* resource);

  // optional int32 type = 3;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 3;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // optional int32 level = 4;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 4;
  inline ::google::protobuf::int32 level() const;
  inline void set_level(::google::protobuf::int32 value);

  // optional int32 exp = 5;
  inline bool has_exp() const;
  inline void clear_exp();
  static const int kExpFieldNumber = 5;
  inline ::google::protobuf::int32 exp() const;
  inline void set_exp(::google::protobuf::int32 value);

  // optional int64 skillID = 6;
  inline bool has_skillid() const;
  inline void clear_skillid();
  static const int kSkillIDFieldNumber = 6;
  inline ::google::protobuf::int64 skillid() const;
  inline void set_skillid(::google::protobuf::int64 value);

  // repeated .proto_ff.elementelementattributeDesc attribute = 7;
  inline int attribute_size() const;
  inline void clear_attribute();
  static const int kAttributeFieldNumber = 7;
  inline const ::proto_ff::elementelementattributeDesc& attribute(int index) const;
  inline ::proto_ff::elementelementattributeDesc* mutable_attribute(int index);
  inline ::proto_ff::elementelementattributeDesc* add_attribute();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::elementelementattributeDesc >&
      attribute() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::elementelementattributeDesc >*
      mutable_attribute();

  // repeated .proto_ff.elementelementmaterialDesc material = 8;
  inline int material_size() const;
  inline void clear_material();
  static const int kMaterialFieldNumber = 8;
  inline const ::proto_ff::elementelementmaterialDesc& material(int index) const;
  inline ::proto_ff::elementelementmaterialDesc* mutable_material(int index);
  inline ::proto_ff::elementelementmaterialDesc* add_material();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::elementelementmaterialDesc >&
      material() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::elementelementmaterialDesc >*
      mutable_material();

  // repeated int64 fragmentID = 9;
  inline int fragmentid_size() const;
  inline void clear_fragmentid();
  static const int kFragmentIDFieldNumber = 9;
  inline ::google::protobuf::int64 fragmentid(int index) const;
  inline void set_fragmentid(int index, ::google::protobuf::int64 value);
  inline void add_fragmentid(::google::protobuf::int64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      fragmentid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_fragmentid();

  // @@protoc_insertion_point(class_scope:proto_ff.elementelement)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_resource();
  inline void clear_has_resource();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_exp();
  inline void clear_has_exp();
  inline void set_has_skillid();
  inline void clear_has_skillid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 id_;
  ::std::string* resource_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 level_;
  ::google::protobuf::int64 skillid_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::elementelementattributeDesc > attribute_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::elementelementmaterialDesc > material_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > fragmentid_;
  ::google::protobuf::int32 exp_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(9 + 31) / 32];

  friend void  protobuf_AddDesc_element_2eproto();
  friend void protobuf_AssignDesc_element_2eproto();
  friend void protobuf_ShutdownFile_element_2eproto();

  void InitAsDefaultInstance();
  static elementelement* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_elementelement : public ::google::protobuf::Message {
 public:
  Sheet_elementelement();
  virtual ~Sheet_elementelement();

  Sheet_elementelement(const Sheet_elementelement& from);

  inline Sheet_elementelement& operator=(const Sheet_elementelement& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_elementelement& default_instance();

  void Swap(Sheet_elementelement* other);

  // implements Message ----------------------------------------------

  Sheet_elementelement* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_elementelement& from);
  void MergeFrom(const Sheet_elementelement& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.elementelement elementelement_List = 1;
  inline int elementelement_list_size() const;
  inline void clear_elementelement_list();
  static const int kElementelementListFieldNumber = 1;
  inline const ::proto_ff::elementelement& elementelement_list(int index) const;
  inline ::proto_ff::elementelement* mutable_elementelement_list(int index);
  inline ::proto_ff::elementelement* add_elementelement_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::elementelement >&
      elementelement_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::elementelement >*
      mutable_elementelement_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_elementelement)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::elementelement > elementelement_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_element_2eproto();
  friend void protobuf_AssignDesc_element_2eproto();
  friend void protobuf_ShutdownFile_element_2eproto();

  void InitAsDefaultInstance();
  static Sheet_elementelement* default_instance_;
};
// -------------------------------------------------------------------

class elementfragmentattributeDesc : public ::google::protobuf::Message {
 public:
  elementfragmentattributeDesc();
  virtual ~elementfragmentattributeDesc();

  elementfragmentattributeDesc(const elementfragmentattributeDesc& from);

  inline elementfragmentattributeDesc& operator=(const elementfragmentattributeDesc& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const elementfragmentattributeDesc& default_instance();

  void Swap(elementfragmentattributeDesc* other);

  // implements Message ----------------------------------------------

  elementfragmentattributeDesc* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const elementfragmentattributeDesc& from);
  void MergeFrom(const elementfragmentattributeDesc& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.elementfragmentattributeDesc)
 private:
  inline void set_has_type();
  inline void clear_has_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_element_2eproto();
  friend void protobuf_AssignDesc_element_2eproto();
  friend void protobuf_ShutdownFile_element_2eproto();

  void InitAsDefaultInstance();
  static elementfragmentattributeDesc* default_instance_;
};
// -------------------------------------------------------------------

class elementfragment : public ::google::protobuf::Message {
 public:
  elementfragment();
  virtual ~elementfragment();

  elementfragment(const elementfragment& from);

  inline elementfragment& operator=(const elementfragment& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const elementfragment& default_instance();

  void Swap(elementfragment* other);

  // implements Message ----------------------------------------------

  elementfragment* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const elementfragment& from);
  void MergeFrom(const elementfragment& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 ID = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIDFieldNumber = 1;
  inline ::google::protobuf::int64 id() const;
  inline void set_id(::google::protobuf::int64 value);

  // optional int64 itemID = 2;
  inline bool has_itemid() const;
  inline void clear_itemid();
  static const int kItemIDFieldNumber = 2;
  inline ::google::protobuf::int64 itemid() const;
  inline void set_itemid(::google::protobuf::int64 value);

  // optional int32 itemNum = 3;
  inline bool has_itemnum() const;
  inline void clear_itemnum();
  static const int kItemNumFieldNumber = 3;
  inline ::google::protobuf::int32 itemnum() const;
  inline void set_itemnum(::google::protobuf::int32 value);

  // repeated .proto_ff.elementfragmentattributeDesc attribute = 4;
  inline int attribute_size() const;
  inline void clear_attribute();
  static const int kAttributeFieldNumber = 4;
  inline const ::proto_ff::elementfragmentattributeDesc& attribute(int index) const;
  inline ::proto_ff::elementfragmentattributeDesc* mutable_attribute(int index);
  inline ::proto_ff::elementfragmentattributeDesc* add_attribute();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::elementfragmentattributeDesc >&
      attribute() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::elementfragmentattributeDesc >*
      mutable_attribute();

  // @@protoc_insertion_point(class_scope:proto_ff.elementfragment)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_itemid();
  inline void clear_has_itemid();
  inline void set_has_itemnum();
  inline void clear_has_itemnum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 id_;
  ::google::protobuf::int64 itemid_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::elementfragmentattributeDesc > attribute_;
  ::google::protobuf::int32 itemnum_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_element_2eproto();
  friend void protobuf_AssignDesc_element_2eproto();
  friend void protobuf_ShutdownFile_element_2eproto();

  void InitAsDefaultInstance();
  static elementfragment* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_elementfragment : public ::google::protobuf::Message {
 public:
  Sheet_elementfragment();
  virtual ~Sheet_elementfragment();

  Sheet_elementfragment(const Sheet_elementfragment& from);

  inline Sheet_elementfragment& operator=(const Sheet_elementfragment& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_elementfragment& default_instance();

  void Swap(Sheet_elementfragment* other);

  // implements Message ----------------------------------------------

  Sheet_elementfragment* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_elementfragment& from);
  void MergeFrom(const Sheet_elementfragment& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.elementfragment elementfragment_List = 1;
  inline int elementfragment_list_size() const;
  inline void clear_elementfragment_list();
  static const int kElementfragmentListFieldNumber = 1;
  inline const ::proto_ff::elementfragment& elementfragment_list(int index) const;
  inline ::proto_ff::elementfragment* mutable_elementfragment_list(int index);
  inline ::proto_ff::elementfragment* add_elementfragment_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::elementfragment >&
      elementfragment_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::elementfragment >*
      mutable_elementfragment_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_elementfragment)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::elementfragment > elementfragment_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_element_2eproto();
  friend void protobuf_AssignDesc_element_2eproto();
  friend void protobuf_ShutdownFile_element_2eproto();

  void InitAsDefaultInstance();
  static Sheet_elementfragment* default_instance_;
};
// -------------------------------------------------------------------

class elementelementUI : public ::google::protobuf::Message {
 public:
  elementelementUI();
  virtual ~elementelementUI();

  elementelementUI(const elementelementUI& from);

  inline elementelementUI& operator=(const elementelementUI& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const elementelementUI& default_instance();

  void Swap(elementelementUI* other);

  // implements Message ----------------------------------------------

  elementelementUI* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const elementelementUI& from);
  void MergeFrom(const elementelementUI& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // optional string name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:proto_ff.elementelementUI)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_name();
  inline void clear_has_name();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* name_;
  ::google::protobuf::int32 type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_element_2eproto();
  friend void protobuf_AssignDesc_element_2eproto();
  friend void protobuf_ShutdownFile_element_2eproto();

  void InitAsDefaultInstance();
  static elementelementUI* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_elementelementUI : public ::google::protobuf::Message {
 public:
  Sheet_elementelementUI();
  virtual ~Sheet_elementelementUI();

  Sheet_elementelementUI(const Sheet_elementelementUI& from);

  inline Sheet_elementelementUI& operator=(const Sheet_elementelementUI& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_elementelementUI& default_instance();

  void Swap(Sheet_elementelementUI* other);

  // implements Message ----------------------------------------------

  Sheet_elementelementUI* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_elementelementUI& from);
  void MergeFrom(const Sheet_elementelementUI& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.elementelementUI elementelementUI_List = 1;
  inline int elementelementui_list_size() const;
  inline void clear_elementelementui_list();
  static const int kElementelementUIListFieldNumber = 1;
  inline const ::proto_ff::elementelementUI& elementelementui_list(int index) const;
  inline ::proto_ff::elementelementUI* mutable_elementelementui_list(int index);
  inline ::proto_ff::elementelementUI* add_elementelementui_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::elementelementUI >&
      elementelementui_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::elementelementUI >*
      mutable_elementelementui_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_elementelementUI)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::elementelementUI > elementelementui_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_element_2eproto();
  friend void protobuf_AssignDesc_element_2eproto();
  friend void protobuf_ShutdownFile_element_2eproto();

  void InitAsDefaultInstance();
  static Sheet_elementelementUI* default_instance_;
};
// ===================================================================


// ===================================================================

// elementelementattributeDesc

// optional int32 type = 1;
inline bool elementelementattributeDesc::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void elementelementattributeDesc::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void elementelementattributeDesc::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void elementelementattributeDesc::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 elementelementattributeDesc::type() const {
  return type_;
}
inline void elementelementattributeDesc::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// -------------------------------------------------------------------

// elementelementmaterialDesc

// optional int64 id = 1;
inline bool elementelementmaterialDesc::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void elementelementmaterialDesc::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void elementelementmaterialDesc::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void elementelementmaterialDesc::clear_id() {
  id_ = GOOGLE_LONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::int64 elementelementmaterialDesc::id() const {
  return id_;
}
inline void elementelementmaterialDesc::set_id(::google::protobuf::int64 value) {
  set_has_id();
  id_ = value;
}

// -------------------------------------------------------------------

// elementelement

// optional int64 ID = 1;
inline bool elementelement::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void elementelement::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void elementelement::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void elementelement::clear_id() {
  id_ = GOOGLE_LONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::int64 elementelement::id() const {
  return id_;
}
inline void elementelement::set_id(::google::protobuf::int64 value) {
  set_has_id();
  id_ = value;
}

// optional string resource = 2;
inline bool elementelement::has_resource() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void elementelement::set_has_resource() {
  _has_bits_[0] |= 0x00000002u;
}
inline void elementelement::clear_has_resource() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void elementelement::clear_resource() {
  if (resource_ != &::google::protobuf::internal::kEmptyString) {
    resource_->clear();
  }
  clear_has_resource();
}
inline const ::std::string& elementelement::resource() const {
  return *resource_;
}
inline void elementelement::set_resource(const ::std::string& value) {
  set_has_resource();
  if (resource_ == &::google::protobuf::internal::kEmptyString) {
    resource_ = new ::std::string;
  }
  resource_->assign(value);
}
inline void elementelement::set_resource(const char* value) {
  set_has_resource();
  if (resource_ == &::google::protobuf::internal::kEmptyString) {
    resource_ = new ::std::string;
  }
  resource_->assign(value);
}
inline void elementelement::set_resource(const char* value, size_t size) {
  set_has_resource();
  if (resource_ == &::google::protobuf::internal::kEmptyString) {
    resource_ = new ::std::string;
  }
  resource_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* elementelement::mutable_resource() {
  set_has_resource();
  if (resource_ == &::google::protobuf::internal::kEmptyString) {
    resource_ = new ::std::string;
  }
  return resource_;
}
inline ::std::string* elementelement::release_resource() {
  clear_has_resource();
  if (resource_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = resource_;
    resource_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void elementelement::set_allocated_resource(::std::string* resource) {
  if (resource_ != &::google::protobuf::internal::kEmptyString) {
    delete resource_;
  }
  if (resource) {
    set_has_resource();
    resource_ = resource;
  } else {
    clear_has_resource();
    resource_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 type = 3;
inline bool elementelement::has_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void elementelement::set_has_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void elementelement::clear_has_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void elementelement::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 elementelement::type() const {
  return type_;
}
inline void elementelement::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// optional int32 level = 4;
inline bool elementelement::has_level() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void elementelement::set_has_level() {
  _has_bits_[0] |= 0x00000008u;
}
inline void elementelement::clear_has_level() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void elementelement::clear_level() {
  level_ = 0;
  clear_has_level();
}
inline ::google::protobuf::int32 elementelement::level() const {
  return level_;
}
inline void elementelement::set_level(::google::protobuf::int32 value) {
  set_has_level();
  level_ = value;
}

// optional int32 exp = 5;
inline bool elementelement::has_exp() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void elementelement::set_has_exp() {
  _has_bits_[0] |= 0x00000010u;
}
inline void elementelement::clear_has_exp() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void elementelement::clear_exp() {
  exp_ = 0;
  clear_has_exp();
}
inline ::google::protobuf::int32 elementelement::exp() const {
  return exp_;
}
inline void elementelement::set_exp(::google::protobuf::int32 value) {
  set_has_exp();
  exp_ = value;
}

// optional int64 skillID = 6;
inline bool elementelement::has_skillid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void elementelement::set_has_skillid() {
  _has_bits_[0] |= 0x00000020u;
}
inline void elementelement::clear_has_skillid() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void elementelement::clear_skillid() {
  skillid_ = GOOGLE_LONGLONG(0);
  clear_has_skillid();
}
inline ::google::protobuf::int64 elementelement::skillid() const {
  return skillid_;
}
inline void elementelement::set_skillid(::google::protobuf::int64 value) {
  set_has_skillid();
  skillid_ = value;
}

// repeated .proto_ff.elementelementattributeDesc attribute = 7;
inline int elementelement::attribute_size() const {
  return attribute_.size();
}
inline void elementelement::clear_attribute() {
  attribute_.Clear();
}
inline const ::proto_ff::elementelementattributeDesc& elementelement::attribute(int index) const {
  return attribute_.Get(index);
}
inline ::proto_ff::elementelementattributeDesc* elementelement::mutable_attribute(int index) {
  return attribute_.Mutable(index);
}
inline ::proto_ff::elementelementattributeDesc* elementelement::add_attribute() {
  return attribute_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::elementelementattributeDesc >&
elementelement::attribute() const {
  return attribute_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::elementelementattributeDesc >*
elementelement::mutable_attribute() {
  return &attribute_;
}

// repeated .proto_ff.elementelementmaterialDesc material = 8;
inline int elementelement::material_size() const {
  return material_.size();
}
inline void elementelement::clear_material() {
  material_.Clear();
}
inline const ::proto_ff::elementelementmaterialDesc& elementelement::material(int index) const {
  return material_.Get(index);
}
inline ::proto_ff::elementelementmaterialDesc* elementelement::mutable_material(int index) {
  return material_.Mutable(index);
}
inline ::proto_ff::elementelementmaterialDesc* elementelement::add_material() {
  return material_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::elementelementmaterialDesc >&
elementelement::material() const {
  return material_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::elementelementmaterialDesc >*
elementelement::mutable_material() {
  return &material_;
}

// repeated int64 fragmentID = 9;
inline int elementelement::fragmentid_size() const {
  return fragmentid_.size();
}
inline void elementelement::clear_fragmentid() {
  fragmentid_.Clear();
}
inline ::google::protobuf::int64 elementelement::fragmentid(int index) const {
  return fragmentid_.Get(index);
}
inline void elementelement::set_fragmentid(int index, ::google::protobuf::int64 value) {
  fragmentid_.Set(index, value);
}
inline void elementelement::add_fragmentid(::google::protobuf::int64 value) {
  fragmentid_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
elementelement::fragmentid() const {
  return fragmentid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
elementelement::mutable_fragmentid() {
  return &fragmentid_;
}

// -------------------------------------------------------------------

// Sheet_elementelement

// repeated .proto_ff.elementelement elementelement_List = 1;
inline int Sheet_elementelement::elementelement_list_size() const {
  return elementelement_list_.size();
}
inline void Sheet_elementelement::clear_elementelement_list() {
  elementelement_list_.Clear();
}
inline const ::proto_ff::elementelement& Sheet_elementelement::elementelement_list(int index) const {
  return elementelement_list_.Get(index);
}
inline ::proto_ff::elementelement* Sheet_elementelement::mutable_elementelement_list(int index) {
  return elementelement_list_.Mutable(index);
}
inline ::proto_ff::elementelement* Sheet_elementelement::add_elementelement_list() {
  return elementelement_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::elementelement >&
Sheet_elementelement::elementelement_list() const {
  return elementelement_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::elementelement >*
Sheet_elementelement::mutable_elementelement_list() {
  return &elementelement_list_;
}

// -------------------------------------------------------------------

// elementfragmentattributeDesc

// optional int32 type = 1;
inline bool elementfragmentattributeDesc::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void elementfragmentattributeDesc::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void elementfragmentattributeDesc::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void elementfragmentattributeDesc::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 elementfragmentattributeDesc::type() const {
  return type_;
}
inline void elementfragmentattributeDesc::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// -------------------------------------------------------------------

// elementfragment

// optional int64 ID = 1;
inline bool elementfragment::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void elementfragment::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void elementfragment::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void elementfragment::clear_id() {
  id_ = GOOGLE_LONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::int64 elementfragment::id() const {
  return id_;
}
inline void elementfragment::set_id(::google::protobuf::int64 value) {
  set_has_id();
  id_ = value;
}

// optional int64 itemID = 2;
inline bool elementfragment::has_itemid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void elementfragment::set_has_itemid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void elementfragment::clear_has_itemid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void elementfragment::clear_itemid() {
  itemid_ = GOOGLE_LONGLONG(0);
  clear_has_itemid();
}
inline ::google::protobuf::int64 elementfragment::itemid() const {
  return itemid_;
}
inline void elementfragment::set_itemid(::google::protobuf::int64 value) {
  set_has_itemid();
  itemid_ = value;
}

// optional int32 itemNum = 3;
inline bool elementfragment::has_itemnum() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void elementfragment::set_has_itemnum() {
  _has_bits_[0] |= 0x00000004u;
}
inline void elementfragment::clear_has_itemnum() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void elementfragment::clear_itemnum() {
  itemnum_ = 0;
  clear_has_itemnum();
}
inline ::google::protobuf::int32 elementfragment::itemnum() const {
  return itemnum_;
}
inline void elementfragment::set_itemnum(::google::protobuf::int32 value) {
  set_has_itemnum();
  itemnum_ = value;
}

// repeated .proto_ff.elementfragmentattributeDesc attribute = 4;
inline int elementfragment::attribute_size() const {
  return attribute_.size();
}
inline void elementfragment::clear_attribute() {
  attribute_.Clear();
}
inline const ::proto_ff::elementfragmentattributeDesc& elementfragment::attribute(int index) const {
  return attribute_.Get(index);
}
inline ::proto_ff::elementfragmentattributeDesc* elementfragment::mutable_attribute(int index) {
  return attribute_.Mutable(index);
}
inline ::proto_ff::elementfragmentattributeDesc* elementfragment::add_attribute() {
  return attribute_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::elementfragmentattributeDesc >&
elementfragment::attribute() const {
  return attribute_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::elementfragmentattributeDesc >*
elementfragment::mutable_attribute() {
  return &attribute_;
}

// -------------------------------------------------------------------

// Sheet_elementfragment

// repeated .proto_ff.elementfragment elementfragment_List = 1;
inline int Sheet_elementfragment::elementfragment_list_size() const {
  return elementfragment_list_.size();
}
inline void Sheet_elementfragment::clear_elementfragment_list() {
  elementfragment_list_.Clear();
}
inline const ::proto_ff::elementfragment& Sheet_elementfragment::elementfragment_list(int index) const {
  return elementfragment_list_.Get(index);
}
inline ::proto_ff::elementfragment* Sheet_elementfragment::mutable_elementfragment_list(int index) {
  return elementfragment_list_.Mutable(index);
}
inline ::proto_ff::elementfragment* Sheet_elementfragment::add_elementfragment_list() {
  return elementfragment_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::elementfragment >&
Sheet_elementfragment::elementfragment_list() const {
  return elementfragment_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::elementfragment >*
Sheet_elementfragment::mutable_elementfragment_list() {
  return &elementfragment_list_;
}

// -------------------------------------------------------------------

// elementelementUI

// optional int32 type = 1;
inline bool elementelementUI::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void elementelementUI::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void elementelementUI::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void elementelementUI::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 elementelementUI::type() const {
  return type_;
}
inline void elementelementUI::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// optional string name = 2;
inline bool elementelementUI::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void elementelementUI::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void elementelementUI::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void elementelementUI::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& elementelementUI::name() const {
  return *name_;
}
inline void elementelementUI::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void elementelementUI::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void elementelementUI::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* elementelementUI::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* elementelementUI::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void elementelementUI::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// Sheet_elementelementUI

// repeated .proto_ff.elementelementUI elementelementUI_List = 1;
inline int Sheet_elementelementUI::elementelementui_list_size() const {
  return elementelementui_list_.size();
}
inline void Sheet_elementelementUI::clear_elementelementui_list() {
  elementelementui_list_.Clear();
}
inline const ::proto_ff::elementelementUI& Sheet_elementelementUI::elementelementui_list(int index) const {
  return elementelementui_list_.Get(index);
}
inline ::proto_ff::elementelementUI* Sheet_elementelementUI::mutable_elementelementui_list(int index) {
  return elementelementui_list_.Mutable(index);
}
inline ::proto_ff::elementelementUI* Sheet_elementelementUI::add_elementelementui_list() {
  return elementelementui_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::elementelementUI >&
Sheet_elementelementUI::elementelementui_list() const {
  return elementelementui_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::elementelementUI >*
Sheet_elementelementUI::mutable_elementelementui_list() {
  return &elementelementui_list_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto_ff

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_element_2eproto__INCLUDED
