// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: E_Xingchen.proto

#ifndef PROTOBUF_E_5fXingchen_2eproto__INCLUDED
#define PROTOBUF_E_5fXingchen_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "yd_fieldoptions.pb.h"
// @@protoc_insertion_point(includes)

namespace proto_ff {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_E_5fXingchen_2eproto();
void protobuf_AssignDesc_E_5fXingchen_2eproto();
void protobuf_ShutdownFile_E_5fXingchen_2eproto();

class E_XingchenXcsetup;
class Sheet_XingchenXcsetup;
class E_XingchenXcmosaic;
class Sheet_XingchenXcmosaic;
class E_XingchenXcmaterialQualityDesc;
class E_XingchenXcmaterial;
class Sheet_XingchenXcmaterial;
class E_XingchenXinchenAttributeDesc;
class E_XingchenXinchen;
class Sheet_XingchenXinchen;
class E_XingchenXclvatt;
class Sheet_XingchenXclvatt;
class E_XingchenXclvexp;
class Sheet_XingchenXclvexp;
class E_XingchenXctpTpDesc;
class E_XingchenXctp;
class Sheet_XingchenXctp;
class E_XingchenXctpexp;
class Sheet_XingchenXctpexp;
class E_XingchenXctpaddi;
class Sheet_XingchenXctpaddi;
class E_XingchenXctpatt;
class Sheet_XingchenXctpatt;
class E_XingchenXcstarAttributeDesc;
class E_XingchenXcstar;
class Sheet_XingchenXcstar;
class E_XingchenXcawakenAwakenDesc;
class E_XingchenXcawaken;
class Sheet_XingchenXcawaken;
class E_XingchenXcmagicalHhDesc;
class E_XingchenXcmagical;
class Sheet_XingchenXcmagical;
class E_XingchenXcmagatt;
class Sheet_XingchenXcmagatt;
class E_XingchenXcadvattUpattributeDesc;
class E_XingchenXcadvatt;
class Sheet_XingchenXcadvatt;
class E_XingchenXcguizhenXxDesc;
class E_XingchenXcguizhenGzDesc;
class E_XingchenXcguizhen;
class Sheet_XingchenXcguizhen;
class E_XingchenXingjunActDesc;
class E_XingchenXingjun;
class Sheet_XingchenXingjun;
class E_XingchenXjattXjDesc;
class E_XingchenXjatt;
class Sheet_XingchenXjatt;
class E_XingchenXingji;
class Sheet_XingchenXingji;
class E_XingchenXjcw;
class Sheet_XingchenXjcw;
class E_XingchenXjlvexp;
class Sheet_XingchenXjlvexp;
class E_XingchenZbshop;
class Sheet_XingchenZbshop;

// ===================================================================

class E_XingchenXcsetup : public ::google::protobuf::Message {
 public:
  E_XingchenXcsetup();
  virtual ~E_XingchenXcsetup();

  E_XingchenXcsetup(const E_XingchenXcsetup& from);

  inline E_XingchenXcsetup& operator=(const E_XingchenXcsetup& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_XingchenXcsetup& default_instance();

  void Swap(E_XingchenXcsetup* other);

  // implements Message ----------------------------------------------

  E_XingchenXcsetup* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_XingchenXcsetup& from);
  void MergeFrom(const E_XingchenXcsetup& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 m_xsid = 1;
  inline bool has_m_xsid() const;
  inline void clear_m_xsid();
  static const int kMXsidFieldNumber = 1;
  inline ::google::protobuf::int32 m_xsid() const;
  inline void set_m_xsid(::google::protobuf::int32 value);

  // optional int32 m_unlockdj = 2;
  inline bool has_m_unlockdj() const;
  inline void clear_m_unlockdj();
  static const int kMUnlockdjFieldNumber = 2;
  inline ::google::protobuf::int32 m_unlockdj() const;
  inline void set_m_unlockdj(::google::protobuf::int32 value);

  // optional int32 m_unlockpf = 3;
  inline bool has_m_unlockpf() const;
  inline void clear_m_unlockpf();
  static const int kMUnlockpfFieldNumber = 3;
  inline ::google::protobuf::int32 m_unlockpf() const;
  inline void set_m_unlockpf(::google::protobuf::int32 value);

  // optional int32 m_xstype = 4;
  inline bool has_m_xstype() const;
  inline void clear_m_xstype();
  static const int kMXstypeFieldNumber = 4;
  inline ::google::protobuf::int32 m_xstype() const;
  inline void set_m_xstype(::google::protobuf::int32 value);

  // optional int32 m_xssubtype = 5;
  inline bool has_m_xssubtype() const;
  inline void clear_m_xssubtype();
  static const int kMXssubtypeFieldNumber = 5;
  inline ::google::protobuf::int32 m_xssubtype() const;
  inline void set_m_xssubtype(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.E_XingchenXcsetup)
 private:
  inline void set_has_m_xsid();
  inline void clear_has_m_xsid();
  inline void set_has_m_unlockdj();
  inline void clear_has_m_unlockdj();
  inline void set_has_m_unlockpf();
  inline void clear_has_m_unlockpf();
  inline void set_has_m_xstype();
  inline void clear_has_m_xstype();
  inline void set_has_m_xssubtype();
  inline void clear_has_m_xssubtype();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_xsid_;
  ::google::protobuf::int32 m_unlockdj_;
  ::google::protobuf::int32 m_unlockpf_;
  ::google::protobuf::int32 m_xstype_;
  ::google::protobuf::int32 m_xssubtype_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fXingchen_2eproto();
  friend void protobuf_AssignDesc_E_5fXingchen_2eproto();
  friend void protobuf_ShutdownFile_E_5fXingchen_2eproto();

  void InitAsDefaultInstance();
  static E_XingchenXcsetup* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_XingchenXcsetup : public ::google::protobuf::Message {
 public:
  Sheet_XingchenXcsetup();
  virtual ~Sheet_XingchenXcsetup();

  Sheet_XingchenXcsetup(const Sheet_XingchenXcsetup& from);

  inline Sheet_XingchenXcsetup& operator=(const Sheet_XingchenXcsetup& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_XingchenXcsetup& default_instance();

  void Swap(Sheet_XingchenXcsetup* other);

  // implements Message ----------------------------------------------

  Sheet_XingchenXcsetup* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_XingchenXcsetup& from);
  void MergeFrom(const Sheet_XingchenXcsetup& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.E_XingchenXcsetup E_XingchenXcsetup_List = 1;
  inline int e_xingchenxcsetup_list_size() const;
  inline void clear_e_xingchenxcsetup_list();
  static const int kEXingchenXcsetupListFieldNumber = 1;
  inline const ::proto_ff::E_XingchenXcsetup& e_xingchenxcsetup_list(int index) const;
  inline ::proto_ff::E_XingchenXcsetup* mutable_e_xingchenxcsetup_list(int index);
  inline ::proto_ff::E_XingchenXcsetup* add_e_xingchenxcsetup_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_XingchenXcsetup >&
      e_xingchenxcsetup_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_XingchenXcsetup >*
      mutable_e_xingchenxcsetup_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_XingchenXcsetup)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_XingchenXcsetup > e_xingchenxcsetup_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fXingchen_2eproto();
  friend void protobuf_AssignDesc_E_5fXingchen_2eproto();
  friend void protobuf_ShutdownFile_E_5fXingchen_2eproto();

  void InitAsDefaultInstance();
  static Sheet_XingchenXcsetup* default_instance_;
};
// -------------------------------------------------------------------

class E_XingchenXcmosaic : public ::google::protobuf::Message {
 public:
  E_XingchenXcmosaic();
  virtual ~E_XingchenXcmosaic();

  E_XingchenXcmosaic(const E_XingchenXcmosaic& from);

  inline E_XingchenXcmosaic& operator=(const E_XingchenXcmosaic& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_XingchenXcmosaic& default_instance();

  void Swap(E_XingchenXcmosaic* other);

  // implements Message ----------------------------------------------

  E_XingchenXcmosaic* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_XingchenXcmosaic& from);
  void MergeFrom(const E_XingchenXcmosaic& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 m_positionnum = 1;
  inline bool has_m_positionnum() const;
  inline void clear_m_positionnum();
  static const int kMPositionnumFieldNumber = 1;
  inline ::google::protobuf::int32 m_positionnum() const;
  inline void set_m_positionnum(::google::protobuf::int32 value);

  // optional int32 m_positionid = 2;
  inline bool has_m_positionid() const;
  inline void clear_m_positionid();
  static const int kMPositionidFieldNumber = 2;
  inline ::google::protobuf::int32 m_positionid() const;
  inline void set_m_positionid(::google::protobuf::int32 value);

  // optional int32 m_posx = 3;
  inline bool has_m_posx() const;
  inline void clear_m_posx();
  static const int kMPosxFieldNumber = 3;
  inline ::google::protobuf::int32 m_posx() const;
  inline void set_m_posx(::google::protobuf::int32 value);

  // optional int32 m_posy = 4;
  inline bool has_m_posy() const;
  inline void clear_m_posy();
  static const int kMPosyFieldNumber = 4;
  inline ::google::protobuf::int32 m_posy() const;
  inline void set_m_posy(::google::protobuf::int32 value);

  // optional int32 m_next_posx = 5;
  inline bool has_m_next_posx() const;
  inline void clear_m_next_posx();
  static const int kMNextPosxFieldNumber = 5;
  inline ::google::protobuf::int32 m_next_posx() const;
  inline void set_m_next_posx(::google::protobuf::int32 value);

  // optional int32 m_next_posy = 6;
  inline bool has_m_next_posy() const;
  inline void clear_m_next_posy();
  static const int kMNextPosyFieldNumber = 6;
  inline ::google::protobuf::int32 m_next_posy() const;
  inline void set_m_next_posy(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.E_XingchenXcmosaic)
 private:
  inline void set_has_m_positionnum();
  inline void clear_has_m_positionnum();
  inline void set_has_m_positionid();
  inline void clear_has_m_positionid();
  inline void set_has_m_posx();
  inline void clear_has_m_posx();
  inline void set_has_m_posy();
  inline void clear_has_m_posy();
  inline void set_has_m_next_posx();
  inline void clear_has_m_next_posx();
  inline void set_has_m_next_posy();
  inline void clear_has_m_next_posy();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_positionnum_;
  ::google::protobuf::int32 m_positionid_;
  ::google::protobuf::int32 m_posx_;
  ::google::protobuf::int32 m_posy_;
  ::google::protobuf::int32 m_next_posx_;
  ::google::protobuf::int32 m_next_posy_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fXingchen_2eproto();
  friend void protobuf_AssignDesc_E_5fXingchen_2eproto();
  friend void protobuf_ShutdownFile_E_5fXingchen_2eproto();

  void InitAsDefaultInstance();
  static E_XingchenXcmosaic* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_XingchenXcmosaic : public ::google::protobuf::Message {
 public:
  Sheet_XingchenXcmosaic();
  virtual ~Sheet_XingchenXcmosaic();

  Sheet_XingchenXcmosaic(const Sheet_XingchenXcmosaic& from);

  inline Sheet_XingchenXcmosaic& operator=(const Sheet_XingchenXcmosaic& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_XingchenXcmosaic& default_instance();

  void Swap(Sheet_XingchenXcmosaic* other);

  // implements Message ----------------------------------------------

  Sheet_XingchenXcmosaic* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_XingchenXcmosaic& from);
  void MergeFrom(const Sheet_XingchenXcmosaic& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.E_XingchenXcmosaic E_XingchenXcmosaic_List = 1;
  inline int e_xingchenxcmosaic_list_size() const;
  inline void clear_e_xingchenxcmosaic_list();
  static const int kEXingchenXcmosaicListFieldNumber = 1;
  inline const ::proto_ff::E_XingchenXcmosaic& e_xingchenxcmosaic_list(int index) const;
  inline ::proto_ff::E_XingchenXcmosaic* mutable_e_xingchenxcmosaic_list(int index);
  inline ::proto_ff::E_XingchenXcmosaic* add_e_xingchenxcmosaic_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_XingchenXcmosaic >&
      e_xingchenxcmosaic_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_XingchenXcmosaic >*
      mutable_e_xingchenxcmosaic_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_XingchenXcmosaic)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_XingchenXcmosaic > e_xingchenxcmosaic_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fXingchen_2eproto();
  friend void protobuf_AssignDesc_E_5fXingchen_2eproto();
  friend void protobuf_ShutdownFile_E_5fXingchen_2eproto();

  void InitAsDefaultInstance();
  static Sheet_XingchenXcmosaic* default_instance_;
};
// -------------------------------------------------------------------

class E_XingchenXcmaterialQualityDesc : public ::google::protobuf::Message {
 public:
  E_XingchenXcmaterialQualityDesc();
  virtual ~E_XingchenXcmaterialQualityDesc();

  E_XingchenXcmaterialQualityDesc(const E_XingchenXcmaterialQualityDesc& from);

  inline E_XingchenXcmaterialQualityDesc& operator=(const E_XingchenXcmaterialQualityDesc& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_XingchenXcmaterialQualityDesc& default_instance();

  void Swap(E_XingchenXcmaterialQualityDesc* other);

  // implements Message ----------------------------------------------

  E_XingchenXcmaterialQualityDesc* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_XingchenXcmaterialQualityDesc& from);
  void MergeFrom(const E_XingchenXcmaterialQualityDesc& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 m_exp = 1;
  inline bool has_m_exp() const;
  inline void clear_m_exp();
  static const int kMExpFieldNumber = 1;
  inline ::google::protobuf::int32 m_exp() const;
  inline void set_m_exp(::google::protobuf::int32 value);

  // optional int32 m_type = 2;
  inline bool has_m_type() const;
  inline void clear_m_type();
  static const int kMTypeFieldNumber = 2;
  inline ::google::protobuf::int32 m_type() const;
  inline void set_m_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.E_XingchenXcmaterialQualityDesc)
 private:
  inline void set_has_m_exp();
  inline void clear_has_m_exp();
  inline void set_has_m_type();
  inline void clear_has_m_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_exp_;
  ::google::protobuf::int32 m_type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fXingchen_2eproto();
  friend void protobuf_AssignDesc_E_5fXingchen_2eproto();
  friend void protobuf_ShutdownFile_E_5fXingchen_2eproto();

  void InitAsDefaultInstance();
  static E_XingchenXcmaterialQualityDesc* default_instance_;
};
// -------------------------------------------------------------------

class E_XingchenXcmaterial : public ::google::protobuf::Message {
 public:
  E_XingchenXcmaterial();
  virtual ~E_XingchenXcmaterial();

  E_XingchenXcmaterial(const E_XingchenXcmaterial& from);

  inline E_XingchenXcmaterial& operator=(const E_XingchenXcmaterial& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_XingchenXcmaterial& default_instance();

  void Swap(E_XingchenXcmaterial* other);

  // implements Message ----------------------------------------------

  E_XingchenXcmaterial* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_XingchenXcmaterial& from);
  void MergeFrom(const E_XingchenXcmaterial& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 m_id = 1;
  inline bool has_m_id() const;
  inline void clear_m_id();
  static const int kMIdFieldNumber = 1;
  inline ::google::protobuf::int32 m_id() const;
  inline void set_m_id(::google::protobuf::int32 value);

  // optional int32 m_materialtype = 2;
  inline bool has_m_materialtype() const;
  inline void clear_m_materialtype();
  static const int kMMaterialtypeFieldNumber = 2;
  inline ::google::protobuf::int32 m_materialtype() const;
  inline void set_m_materialtype(::google::protobuf::int32 value);

  // optional int32 m_functiontype = 3;
  inline bool has_m_functiontype() const;
  inline void clear_m_functiontype();
  static const int kMFunctiontypeFieldNumber = 3;
  inline ::google::protobuf::int32 m_functiontype() const;
  inline void set_m_functiontype(::google::protobuf::int32 value);

  // optional string m_xcposition = 4;
  inline bool has_m_xcposition() const;
  inline void clear_m_xcposition();
  static const int kMXcpositionFieldNumber = 4;
  inline const ::std::string& m_xcposition() const;
  inline void set_m_xcposition(const ::std::string& value);
  inline void set_m_xcposition(const char* value);
  inline void set_m_xcposition(const char* value, size_t size);
  inline ::std::string* mutable_m_xcposition();
  inline ::std::string* release_m_xcposition();
  inline void set_allocated_m_xcposition(::std::string* m_xcposition);

  // optional int32 m_itemid = 5;
  inline bool has_m_itemid() const;
  inline void clear_m_itemid();
  static const int kMItemidFieldNumber = 5;
  inline ::google::protobuf::int32 m_itemid() const;
  inline void set_m_itemid(::google::protobuf::int32 value);

  // optional int32 m_itemexp = 6;
  inline bool has_m_itemexp() const;
  inline void clear_m_itemexp();
  static const int kMItemexpFieldNumber = 6;
  inline ::google::protobuf::int32 m_itemexp() const;
  inline void set_m_itemexp(::google::protobuf::int32 value);

  // repeated .proto_ff.E_XingchenXcmaterialQualityDesc m_quality = 7;
  inline int m_quality_size() const;
  inline void clear_m_quality();
  static const int kMQualityFieldNumber = 7;
  inline const ::proto_ff::E_XingchenXcmaterialQualityDesc& m_quality(int index) const;
  inline ::proto_ff::E_XingchenXcmaterialQualityDesc* mutable_m_quality(int index);
  inline ::proto_ff::E_XingchenXcmaterialQualityDesc* add_m_quality();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_XingchenXcmaterialQualityDesc >&
      m_quality() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_XingchenXcmaterialQualityDesc >*
      mutable_m_quality();

  // @@protoc_insertion_point(class_scope:proto_ff.E_XingchenXcmaterial)
 private:
  inline void set_has_m_id();
  inline void clear_has_m_id();
  inline void set_has_m_materialtype();
  inline void clear_has_m_materialtype();
  inline void set_has_m_functiontype();
  inline void clear_has_m_functiontype();
  inline void set_has_m_xcposition();
  inline void clear_has_m_xcposition();
  inline void set_has_m_itemid();
  inline void clear_has_m_itemid();
  inline void set_has_m_itemexp();
  inline void clear_has_m_itemexp();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_id_;
  ::google::protobuf::int32 m_materialtype_;
  ::std::string* m_xcposition_;
  ::google::protobuf::int32 m_functiontype_;
  ::google::protobuf::int32 m_itemid_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_XingchenXcmaterialQualityDesc > m_quality_;
  ::google::protobuf::int32 m_itemexp_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fXingchen_2eproto();
  friend void protobuf_AssignDesc_E_5fXingchen_2eproto();
  friend void protobuf_ShutdownFile_E_5fXingchen_2eproto();

  void InitAsDefaultInstance();
  static E_XingchenXcmaterial* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_XingchenXcmaterial : public ::google::protobuf::Message {
 public:
  Sheet_XingchenXcmaterial();
  virtual ~Sheet_XingchenXcmaterial();

  Sheet_XingchenXcmaterial(const Sheet_XingchenXcmaterial& from);

  inline Sheet_XingchenXcmaterial& operator=(const Sheet_XingchenXcmaterial& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_XingchenXcmaterial& default_instance();

  void Swap(Sheet_XingchenXcmaterial* other);

  // implements Message ----------------------------------------------

  Sheet_XingchenXcmaterial* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_XingchenXcmaterial& from);
  void MergeFrom(const Sheet_XingchenXcmaterial& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.E_XingchenXcmaterial E_XingchenXcmaterial_List = 1;
  inline int e_xingchenxcmaterial_list_size() const;
  inline void clear_e_xingchenxcmaterial_list();
  static const int kEXingchenXcmaterialListFieldNumber = 1;
  inline const ::proto_ff::E_XingchenXcmaterial& e_xingchenxcmaterial_list(int index) const;
  inline ::proto_ff::E_XingchenXcmaterial* mutable_e_xingchenxcmaterial_list(int index);
  inline ::proto_ff::E_XingchenXcmaterial* add_e_xingchenxcmaterial_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_XingchenXcmaterial >&
      e_xingchenxcmaterial_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_XingchenXcmaterial >*
      mutable_e_xingchenxcmaterial_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_XingchenXcmaterial)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_XingchenXcmaterial > e_xingchenxcmaterial_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fXingchen_2eproto();
  friend void protobuf_AssignDesc_E_5fXingchen_2eproto();
  friend void protobuf_ShutdownFile_E_5fXingchen_2eproto();

  void InitAsDefaultInstance();
  static Sheet_XingchenXcmaterial* default_instance_;
};
// -------------------------------------------------------------------

class E_XingchenXinchenAttributeDesc : public ::google::protobuf::Message {
 public:
  E_XingchenXinchenAttributeDesc();
  virtual ~E_XingchenXinchenAttributeDesc();

  E_XingchenXinchenAttributeDesc(const E_XingchenXinchenAttributeDesc& from);

  inline E_XingchenXinchenAttributeDesc& operator=(const E_XingchenXinchenAttributeDesc& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_XingchenXinchenAttributeDesc& default_instance();

  void Swap(E_XingchenXinchenAttributeDesc* other);

  // implements Message ----------------------------------------------

  E_XingchenXinchenAttributeDesc* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_XingchenXinchenAttributeDesc& from);
  void MergeFrom(const E_XingchenXinchenAttributeDesc& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 m_value = 1;
  inline bool has_m_value() const;
  inline void clear_m_value();
  static const int kMValueFieldNumber = 1;
  inline ::google::protobuf::int32 m_value() const;
  inline void set_m_value(::google::protobuf::int32 value);

  // optional int32 m_type = 2;
  inline bool has_m_type() const;
  inline void clear_m_type();
  static const int kMTypeFieldNumber = 2;
  inline ::google::protobuf::int32 m_type() const;
  inline void set_m_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.E_XingchenXinchenAttributeDesc)
 private:
  inline void set_has_m_value();
  inline void clear_has_m_value();
  inline void set_has_m_type();
  inline void clear_has_m_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_value_;
  ::google::protobuf::int32 m_type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fXingchen_2eproto();
  friend void protobuf_AssignDesc_E_5fXingchen_2eproto();
  friend void protobuf_ShutdownFile_E_5fXingchen_2eproto();

  void InitAsDefaultInstance();
  static E_XingchenXinchenAttributeDesc* default_instance_;
};
// -------------------------------------------------------------------

class E_XingchenXinchen : public ::google::protobuf::Message {
 public:
  E_XingchenXinchen();
  virtual ~E_XingchenXinchen();

  E_XingchenXinchen(const E_XingchenXinchen& from);

  inline E_XingchenXinchen& operator=(const E_XingchenXinchen& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_XingchenXinchen& default_instance();

  void Swap(E_XingchenXinchen* other);

  // implements Message ----------------------------------------------

  E_XingchenXinchen* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_XingchenXinchen& from);
  void MergeFrom(const E_XingchenXinchen& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 m_xcequip = 1;
  inline bool has_m_xcequip() const;
  inline void clear_m_xcequip();
  static const int kMXcequipFieldNumber = 1;
  inline ::google::protobuf::int32 m_xcequip() const;
  inline void set_m_xcequip(::google::protobuf::int32 value);

  // repeated .proto_ff.E_XingchenXinchenAttributeDesc m_attribute = 2;
  inline int m_attribute_size() const;
  inline void clear_m_attribute();
  static const int kMAttributeFieldNumber = 2;
  inline const ::proto_ff::E_XingchenXinchenAttributeDesc& m_attribute(int index) const;
  inline ::proto_ff::E_XingchenXinchenAttributeDesc* mutable_m_attribute(int index);
  inline ::proto_ff::E_XingchenXinchenAttributeDesc* add_m_attribute();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_XingchenXinchenAttributeDesc >&
      m_attribute() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_XingchenXinchenAttributeDesc >*
      mutable_m_attribute();

  // @@protoc_insertion_point(class_scope:proto_ff.E_XingchenXinchen)
 private:
  inline void set_has_m_xcequip();
  inline void clear_has_m_xcequip();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_XingchenXinchenAttributeDesc > m_attribute_;
  ::google::protobuf::int32 m_xcequip_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fXingchen_2eproto();
  friend void protobuf_AssignDesc_E_5fXingchen_2eproto();
  friend void protobuf_ShutdownFile_E_5fXingchen_2eproto();

  void InitAsDefaultInstance();
  static E_XingchenXinchen* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_XingchenXinchen : public ::google::protobuf::Message {
 public:
  Sheet_XingchenXinchen();
  virtual ~Sheet_XingchenXinchen();

  Sheet_XingchenXinchen(const Sheet_XingchenXinchen& from);

  inline Sheet_XingchenXinchen& operator=(const Sheet_XingchenXinchen& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_XingchenXinchen& default_instance();

  void Swap(Sheet_XingchenXinchen* other);

  // implements Message ----------------------------------------------

  Sheet_XingchenXinchen* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_XingchenXinchen& from);
  void MergeFrom(const Sheet_XingchenXinchen& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.E_XingchenXinchen E_XingchenXinchen_List = 1;
  inline int e_xingchenxinchen_list_size() const;
  inline void clear_e_xingchenxinchen_list();
  static const int kEXingchenXinchenListFieldNumber = 1;
  inline const ::proto_ff::E_XingchenXinchen& e_xingchenxinchen_list(int index) const;
  inline ::proto_ff::E_XingchenXinchen* mutable_e_xingchenxinchen_list(int index);
  inline ::proto_ff::E_XingchenXinchen* add_e_xingchenxinchen_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_XingchenXinchen >&
      e_xingchenxinchen_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_XingchenXinchen >*
      mutable_e_xingchenxinchen_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_XingchenXinchen)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_XingchenXinchen > e_xingchenxinchen_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fXingchen_2eproto();
  friend void protobuf_AssignDesc_E_5fXingchen_2eproto();
  friend void protobuf_ShutdownFile_E_5fXingchen_2eproto();

  void InitAsDefaultInstance();
  static Sheet_XingchenXinchen* default_instance_;
};
// -------------------------------------------------------------------

class E_XingchenXclvatt : public ::google::protobuf::Message {
 public:
  E_XingchenXclvatt();
  virtual ~E_XingchenXclvatt();

  E_XingchenXclvatt(const E_XingchenXclvatt& from);

  inline E_XingchenXclvatt& operator=(const E_XingchenXclvatt& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_XingchenXclvatt& default_instance();

  void Swap(E_XingchenXclvatt* other);

  // implements Message ----------------------------------------------

  E_XingchenXclvatt* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_XingchenXclvatt& from);
  void MergeFrom(const E_XingchenXclvatt& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 m_attid = 1;
  inline bool has_m_attid() const;
  inline void clear_m_attid();
  static const int kMAttidFieldNumber = 1;
  inline ::google::protobuf::int64 m_attid() const;
  inline void set_m_attid(::google::protobuf::int64 value);

  // repeated int32 m_att = 2;
  inline int m_att_size() const;
  inline void clear_m_att();
  static const int kMAttFieldNumber = 2;
  inline ::google::protobuf::int32 m_att(int index) const;
  inline void set_m_att(int index, ::google::protobuf::int32 value);
  inline void add_m_att(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      m_att() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_m_att();

  // @@protoc_insertion_point(class_scope:proto_ff.E_XingchenXclvatt)
 private:
  inline void set_has_m_attid();
  inline void clear_has_m_attid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 m_attid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > m_att_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fXingchen_2eproto();
  friend void protobuf_AssignDesc_E_5fXingchen_2eproto();
  friend void protobuf_ShutdownFile_E_5fXingchen_2eproto();

  void InitAsDefaultInstance();
  static E_XingchenXclvatt* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_XingchenXclvatt : public ::google::protobuf::Message {
 public:
  Sheet_XingchenXclvatt();
  virtual ~Sheet_XingchenXclvatt();

  Sheet_XingchenXclvatt(const Sheet_XingchenXclvatt& from);

  inline Sheet_XingchenXclvatt& operator=(const Sheet_XingchenXclvatt& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_XingchenXclvatt& default_instance();

  void Swap(Sheet_XingchenXclvatt* other);

  // implements Message ----------------------------------------------

  Sheet_XingchenXclvatt* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_XingchenXclvatt& from);
  void MergeFrom(const Sheet_XingchenXclvatt& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.E_XingchenXclvatt E_XingchenXclvatt_List = 1;
  inline int e_xingchenxclvatt_list_size() const;
  inline void clear_e_xingchenxclvatt_list();
  static const int kEXingchenXclvattListFieldNumber = 1;
  inline const ::proto_ff::E_XingchenXclvatt& e_xingchenxclvatt_list(int index) const;
  inline ::proto_ff::E_XingchenXclvatt* mutable_e_xingchenxclvatt_list(int index);
  inline ::proto_ff::E_XingchenXclvatt* add_e_xingchenxclvatt_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_XingchenXclvatt >&
      e_xingchenxclvatt_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_XingchenXclvatt >*
      mutable_e_xingchenxclvatt_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_XingchenXclvatt)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_XingchenXclvatt > e_xingchenxclvatt_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fXingchen_2eproto();
  friend void protobuf_AssignDesc_E_5fXingchen_2eproto();
  friend void protobuf_ShutdownFile_E_5fXingchen_2eproto();

  void InitAsDefaultInstance();
  static Sheet_XingchenXclvatt* default_instance_;
};
// -------------------------------------------------------------------

class E_XingchenXclvexp : public ::google::protobuf::Message {
 public:
  E_XingchenXclvexp();
  virtual ~E_XingchenXclvexp();

  E_XingchenXclvexp(const E_XingchenXclvexp& from);

  inline E_XingchenXclvexp& operator=(const E_XingchenXclvexp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_XingchenXclvexp& default_instance();

  void Swap(E_XingchenXclvexp* other);

  // implements Message ----------------------------------------------

  E_XingchenXclvexp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_XingchenXclvexp& from);
  void MergeFrom(const E_XingchenXclvexp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 m_lv = 1;
  inline bool has_m_lv() const;
  inline void clear_m_lv();
  static const int kMLvFieldNumber = 1;
  inline ::google::protobuf::int32 m_lv() const;
  inline void set_m_lv(::google::protobuf::int32 value);

  // optional int32 m_exp = 2;
  inline bool has_m_exp() const;
  inline void clear_m_exp();
  static const int kMExpFieldNumber = 2;
  inline ::google::protobuf::int32 m_exp() const;
  inline void set_m_exp(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.E_XingchenXclvexp)
 private:
  inline void set_has_m_lv();
  inline void clear_has_m_lv();
  inline void set_has_m_exp();
  inline void clear_has_m_exp();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_lv_;
  ::google::protobuf::int32 m_exp_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fXingchen_2eproto();
  friend void protobuf_AssignDesc_E_5fXingchen_2eproto();
  friend void protobuf_ShutdownFile_E_5fXingchen_2eproto();

  void InitAsDefaultInstance();
  static E_XingchenXclvexp* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_XingchenXclvexp : public ::google::protobuf::Message {
 public:
  Sheet_XingchenXclvexp();
  virtual ~Sheet_XingchenXclvexp();

  Sheet_XingchenXclvexp(const Sheet_XingchenXclvexp& from);

  inline Sheet_XingchenXclvexp& operator=(const Sheet_XingchenXclvexp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_XingchenXclvexp& default_instance();

  void Swap(Sheet_XingchenXclvexp* other);

  // implements Message ----------------------------------------------

  Sheet_XingchenXclvexp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_XingchenXclvexp& from);
  void MergeFrom(const Sheet_XingchenXclvexp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.E_XingchenXclvexp E_XingchenXclvexp_List = 1;
  inline int e_xingchenxclvexp_list_size() const;
  inline void clear_e_xingchenxclvexp_list();
  static const int kEXingchenXclvexpListFieldNumber = 1;
  inline const ::proto_ff::E_XingchenXclvexp& e_xingchenxclvexp_list(int index) const;
  inline ::proto_ff::E_XingchenXclvexp* mutable_e_xingchenxclvexp_list(int index);
  inline ::proto_ff::E_XingchenXclvexp* add_e_xingchenxclvexp_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_XingchenXclvexp >&
      e_xingchenxclvexp_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_XingchenXclvexp >*
      mutable_e_xingchenxclvexp_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_XingchenXclvexp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_XingchenXclvexp > e_xingchenxclvexp_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fXingchen_2eproto();
  friend void protobuf_AssignDesc_E_5fXingchen_2eproto();
  friend void protobuf_ShutdownFile_E_5fXingchen_2eproto();

  void InitAsDefaultInstance();
  static Sheet_XingchenXclvexp* default_instance_;
};
// -------------------------------------------------------------------

class E_XingchenXctpTpDesc : public ::google::protobuf::Message {
 public:
  E_XingchenXctpTpDesc();
  virtual ~E_XingchenXctpTpDesc();

  E_XingchenXctpTpDesc(const E_XingchenXctpTpDesc& from);

  inline E_XingchenXctpTpDesc& operator=(const E_XingchenXctpTpDesc& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_XingchenXctpTpDesc& default_instance();

  void Swap(E_XingchenXctpTpDesc* other);

  // implements Message ----------------------------------------------

  E_XingchenXctpTpDesc* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_XingchenXctpTpDesc& from);
  void MergeFrom(const E_XingchenXctpTpDesc& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 m_value = 1;
  inline bool has_m_value() const;
  inline void clear_m_value();
  static const int kMValueFieldNumber = 1;
  inline ::google::protobuf::int32 m_value() const;
  inline void set_m_value(::google::protobuf::int32 value);

  // optional int32 m_type = 2;
  inline bool has_m_type() const;
  inline void clear_m_type();
  static const int kMTypeFieldNumber = 2;
  inline ::google::protobuf::int32 m_type() const;
  inline void set_m_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.E_XingchenXctpTpDesc)
 private:
  inline void set_has_m_value();
  inline void clear_has_m_value();
  inline void set_has_m_type();
  inline void clear_has_m_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_value_;
  ::google::protobuf::int32 m_type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fXingchen_2eproto();
  friend void protobuf_AssignDesc_E_5fXingchen_2eproto();
  friend void protobuf_ShutdownFile_E_5fXingchen_2eproto();

  void InitAsDefaultInstance();
  static E_XingchenXctpTpDesc* default_instance_;
};
// -------------------------------------------------------------------

class E_XingchenXctp : public ::google::protobuf::Message {
 public:
  E_XingchenXctp();
  virtual ~E_XingchenXctp();

  E_XingchenXctp(const E_XingchenXctp& from);

  inline E_XingchenXctp& operator=(const E_XingchenXctp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_XingchenXctp& default_instance();

  void Swap(E_XingchenXctp* other);

  // implements Message ----------------------------------------------

  E_XingchenXctp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_XingchenXctp& from);
  void MergeFrom(const E_XingchenXctp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 m_id = 1;
  inline bool has_m_id() const;
  inline void clear_m_id();
  static const int kMIdFieldNumber = 1;
  inline ::google::protobuf::int32 m_id() const;
  inline void set_m_id(::google::protobuf::int32 value);

  // optional int32 m_positionid = 2;
  inline bool has_m_positionid() const;
  inline void clear_m_positionid();
  static const int kMPositionidFieldNumber = 2;
  inline ::google::protobuf::int32 m_positionid() const;
  inline void set_m_positionid(::google::protobuf::int32 value);

  // optional int32 m_xcquality = 3;
  inline bool has_m_xcquality() const;
  inline void clear_m_xcquality();
  static const int kMXcqualityFieldNumber = 3;
  inline ::google::protobuf::int32 m_xcquality() const;
  inline void set_m_xcquality(::google::protobuf::int32 value);

  // optional int32 m_xclvmax = 4;
  inline bool has_m_xclvmax() const;
  inline void clear_m_xclvmax();
  static const int kMXclvmaxFieldNumber = 4;
  inline ::google::protobuf::int32 m_xclvmax() const;
  inline void set_m_xclvmax(::google::protobuf::int32 value);

  // repeated .proto_ff.E_XingchenXctpTpDesc m_tp = 5;
  inline int m_tp_size() const;
  inline void clear_m_tp();
  static const int kMTpFieldNumber = 5;
  inline const ::proto_ff::E_XingchenXctpTpDesc& m_tp(int index) const;
  inline ::proto_ff::E_XingchenXctpTpDesc* mutable_m_tp(int index);
  inline ::proto_ff::E_XingchenXctpTpDesc* add_m_tp();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_XingchenXctpTpDesc >&
      m_tp() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_XingchenXctpTpDesc >*
      mutable_m_tp();

  // repeated int32 m_attr = 6;
  inline int m_attr_size() const;
  inline void clear_m_attr();
  static const int kMAttrFieldNumber = 6;
  inline ::google::protobuf::int32 m_attr(int index) const;
  inline void set_m_attr(int index, ::google::protobuf::int32 value);
  inline void add_m_attr(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      m_attr() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_m_attr();

  // @@protoc_insertion_point(class_scope:proto_ff.E_XingchenXctp)
 private:
  inline void set_has_m_id();
  inline void clear_has_m_id();
  inline void set_has_m_positionid();
  inline void clear_has_m_positionid();
  inline void set_has_m_xcquality();
  inline void clear_has_m_xcquality();
  inline void set_has_m_xclvmax();
  inline void clear_has_m_xclvmax();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_id_;
  ::google::protobuf::int32 m_positionid_;
  ::google::protobuf::int32 m_xcquality_;
  ::google::protobuf::int32 m_xclvmax_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_XingchenXctpTpDesc > m_tp_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > m_attr_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fXingchen_2eproto();
  friend void protobuf_AssignDesc_E_5fXingchen_2eproto();
  friend void protobuf_ShutdownFile_E_5fXingchen_2eproto();

  void InitAsDefaultInstance();
  static E_XingchenXctp* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_XingchenXctp : public ::google::protobuf::Message {
 public:
  Sheet_XingchenXctp();
  virtual ~Sheet_XingchenXctp();

  Sheet_XingchenXctp(const Sheet_XingchenXctp& from);

  inline Sheet_XingchenXctp& operator=(const Sheet_XingchenXctp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_XingchenXctp& default_instance();

  void Swap(Sheet_XingchenXctp* other);

  // implements Message ----------------------------------------------

  Sheet_XingchenXctp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_XingchenXctp& from);
  void MergeFrom(const Sheet_XingchenXctp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.E_XingchenXctp E_XingchenXctp_List = 1;
  inline int e_xingchenxctp_list_size() const;
  inline void clear_e_xingchenxctp_list();
  static const int kEXingchenXctpListFieldNumber = 1;
  inline const ::proto_ff::E_XingchenXctp& e_xingchenxctp_list(int index) const;
  inline ::proto_ff::E_XingchenXctp* mutable_e_xingchenxctp_list(int index);
  inline ::proto_ff::E_XingchenXctp* add_e_xingchenxctp_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_XingchenXctp >&
      e_xingchenxctp_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_XingchenXctp >*
      mutable_e_xingchenxctp_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_XingchenXctp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_XingchenXctp > e_xingchenxctp_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fXingchen_2eproto();
  friend void protobuf_AssignDesc_E_5fXingchen_2eproto();
  friend void protobuf_ShutdownFile_E_5fXingchen_2eproto();

  void InitAsDefaultInstance();
  static Sheet_XingchenXctp* default_instance_;
};
// -------------------------------------------------------------------

class E_XingchenXctpexp : public ::google::protobuf::Message {
 public:
  E_XingchenXctpexp();
  virtual ~E_XingchenXctpexp();

  E_XingchenXctpexp(const E_XingchenXctpexp& from);

  inline E_XingchenXctpexp& operator=(const E_XingchenXctpexp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_XingchenXctpexp& default_instance();

  void Swap(E_XingchenXctpexp* other);

  // implements Message ----------------------------------------------

  E_XingchenXctpexp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_XingchenXctpexp& from);
  void MergeFrom(const E_XingchenXctpexp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 m_lv = 1;
  inline bool has_m_lv() const;
  inline void clear_m_lv();
  static const int kMLvFieldNumber = 1;
  inline ::google::protobuf::int32 m_lv() const;
  inline void set_m_lv(::google::protobuf::int32 value);

  // optional string m_lvdisplay = 2;
  inline bool has_m_lvdisplay() const;
  inline void clear_m_lvdisplay();
  static const int kMLvdisplayFieldNumber = 2;
  inline const ::std::string& m_lvdisplay() const;
  inline void set_m_lvdisplay(const ::std::string& value);
  inline void set_m_lvdisplay(const char* value);
  inline void set_m_lvdisplay(const char* value, size_t size);
  inline ::std::string* mutable_m_lvdisplay();
  inline ::std::string* release_m_lvdisplay();
  inline void set_allocated_m_lvdisplay(::std::string* m_lvdisplay);

  // optional int32 m_exp = 3;
  inline bool has_m_exp() const;
  inline void clear_m_exp();
  static const int kMExpFieldNumber = 3;
  inline ::google::protobuf::int32 m_exp() const;
  inline void set_m_exp(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.E_XingchenXctpexp)
 private:
  inline void set_has_m_lv();
  inline void clear_has_m_lv();
  inline void set_has_m_lvdisplay();
  inline void clear_has_m_lvdisplay();
  inline void set_has_m_exp();
  inline void clear_has_m_exp();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* m_lvdisplay_;
  ::google::protobuf::int32 m_lv_;
  ::google::protobuf::int32 m_exp_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fXingchen_2eproto();
  friend void protobuf_AssignDesc_E_5fXingchen_2eproto();
  friend void protobuf_ShutdownFile_E_5fXingchen_2eproto();

  void InitAsDefaultInstance();
  static E_XingchenXctpexp* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_XingchenXctpexp : public ::google::protobuf::Message {
 public:
  Sheet_XingchenXctpexp();
  virtual ~Sheet_XingchenXctpexp();

  Sheet_XingchenXctpexp(const Sheet_XingchenXctpexp& from);

  inline Sheet_XingchenXctpexp& operator=(const Sheet_XingchenXctpexp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_XingchenXctpexp& default_instance();

  void Swap(Sheet_XingchenXctpexp* other);

  // implements Message ----------------------------------------------

  Sheet_XingchenXctpexp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_XingchenXctpexp& from);
  void MergeFrom(const Sheet_XingchenXctpexp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.E_XingchenXctpexp E_XingchenXctpexp_List = 1;
  inline int e_xingchenxctpexp_list_size() const;
  inline void clear_e_xingchenxctpexp_list();
  static const int kEXingchenXctpexpListFieldNumber = 1;
  inline const ::proto_ff::E_XingchenXctpexp& e_xingchenxctpexp_list(int index) const;
  inline ::proto_ff::E_XingchenXctpexp* mutable_e_xingchenxctpexp_list(int index);
  inline ::proto_ff::E_XingchenXctpexp* add_e_xingchenxctpexp_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_XingchenXctpexp >&
      e_xingchenxctpexp_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_XingchenXctpexp >*
      mutable_e_xingchenxctpexp_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_XingchenXctpexp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_XingchenXctpexp > e_xingchenxctpexp_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fXingchen_2eproto();
  friend void protobuf_AssignDesc_E_5fXingchen_2eproto();
  friend void protobuf_ShutdownFile_E_5fXingchen_2eproto();

  void InitAsDefaultInstance();
  static Sheet_XingchenXctpexp* default_instance_;
};
// -------------------------------------------------------------------

class E_XingchenXctpaddi : public ::google::protobuf::Message {
 public:
  E_XingchenXctpaddi();
  virtual ~E_XingchenXctpaddi();

  E_XingchenXctpaddi(const E_XingchenXctpaddi& from);

  inline E_XingchenXctpaddi& operator=(const E_XingchenXctpaddi& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_XingchenXctpaddi& default_instance();

  void Swap(E_XingchenXctpaddi* other);

  // implements Message ----------------------------------------------

  E_XingchenXctpaddi* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_XingchenXctpaddi& from);
  void MergeFrom(const E_XingchenXctpaddi& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 m_id = 1;
  inline bool has_m_id() const;
  inline void clear_m_id();
  static const int kMIdFieldNumber = 1;
  inline ::google::protobuf::int64 m_id() const;
  inline void set_m_id(::google::protobuf::int64 value);

  // optional int64 m_attid = 2;
  inline bool has_m_attid() const;
  inline void clear_m_attid();
  static const int kMAttidFieldNumber = 2;
  inline ::google::protobuf::int64 m_attid() const;
  inline void set_m_attid(::google::protobuf::int64 value);

  // optional int32 m_count = 3;
  inline bool has_m_count() const;
  inline void clear_m_count();
  static const int kMCountFieldNumber = 3;
  inline ::google::protobuf::int32 m_count() const;
  inline void set_m_count(::google::protobuf::int32 value);

  // optional int32 m_atttype = 4;
  inline bool has_m_atttype() const;
  inline void clear_m_atttype();
  static const int kMAtttypeFieldNumber = 4;
  inline ::google::protobuf::int32 m_atttype() const;
  inline void set_m_atttype(::google::protobuf::int32 value);

  // optional int32 m_att = 5;
  inline bool has_m_att() const;
  inline void clear_m_att();
  static const int kMAttFieldNumber = 5;
  inline ::google::protobuf::int32 m_att() const;
  inline void set_m_att(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.E_XingchenXctpaddi)
 private:
  inline void set_has_m_id();
  inline void clear_has_m_id();
  inline void set_has_m_attid();
  inline void clear_has_m_attid();
  inline void set_has_m_count();
  inline void clear_has_m_count();
  inline void set_has_m_atttype();
  inline void clear_has_m_atttype();
  inline void set_has_m_att();
  inline void clear_has_m_att();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 m_id_;
  ::google::protobuf::int64 m_attid_;
  ::google::protobuf::int32 m_count_;
  ::google::protobuf::int32 m_atttype_;
  ::google::protobuf::int32 m_att_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fXingchen_2eproto();
  friend void protobuf_AssignDesc_E_5fXingchen_2eproto();
  friend void protobuf_ShutdownFile_E_5fXingchen_2eproto();

  void InitAsDefaultInstance();
  static E_XingchenXctpaddi* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_XingchenXctpaddi : public ::google::protobuf::Message {
 public:
  Sheet_XingchenXctpaddi();
  virtual ~Sheet_XingchenXctpaddi();

  Sheet_XingchenXctpaddi(const Sheet_XingchenXctpaddi& from);

  inline Sheet_XingchenXctpaddi& operator=(const Sheet_XingchenXctpaddi& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_XingchenXctpaddi& default_instance();

  void Swap(Sheet_XingchenXctpaddi* other);

  // implements Message ----------------------------------------------

  Sheet_XingchenXctpaddi* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_XingchenXctpaddi& from);
  void MergeFrom(const Sheet_XingchenXctpaddi& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.E_XingchenXctpaddi E_XingchenXctpaddi_List = 1;
  inline int e_xingchenxctpaddi_list_size() const;
  inline void clear_e_xingchenxctpaddi_list();
  static const int kEXingchenXctpaddiListFieldNumber = 1;
  inline const ::proto_ff::E_XingchenXctpaddi& e_xingchenxctpaddi_list(int index) const;
  inline ::proto_ff::E_XingchenXctpaddi* mutable_e_xingchenxctpaddi_list(int index);
  inline ::proto_ff::E_XingchenXctpaddi* add_e_xingchenxctpaddi_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_XingchenXctpaddi >&
      e_xingchenxctpaddi_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_XingchenXctpaddi >*
      mutable_e_xingchenxctpaddi_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_XingchenXctpaddi)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_XingchenXctpaddi > e_xingchenxctpaddi_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fXingchen_2eproto();
  friend void protobuf_AssignDesc_E_5fXingchen_2eproto();
  friend void protobuf_ShutdownFile_E_5fXingchen_2eproto();

  void InitAsDefaultInstance();
  static Sheet_XingchenXctpaddi* default_instance_;
};
// -------------------------------------------------------------------

class E_XingchenXctpatt : public ::google::protobuf::Message {
 public:
  E_XingchenXctpatt();
  virtual ~E_XingchenXctpatt();

  E_XingchenXctpatt(const E_XingchenXctpatt& from);

  inline E_XingchenXctpatt& operator=(const E_XingchenXctpatt& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_XingchenXctpatt& default_instance();

  void Swap(E_XingchenXctpatt* other);

  // implements Message ----------------------------------------------

  E_XingchenXctpatt* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_XingchenXctpatt& from);
  void MergeFrom(const E_XingchenXctpatt& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 m_attid = 1;
  inline bool has_m_attid() const;
  inline void clear_m_attid();
  static const int kMAttidFieldNumber = 1;
  inline ::google::protobuf::int64 m_attid() const;
  inline void set_m_attid(::google::protobuf::int64 value);

  // repeated int32 m_att = 2;
  inline int m_att_size() const;
  inline void clear_m_att();
  static const int kMAttFieldNumber = 2;
  inline ::google::protobuf::int32 m_att(int index) const;
  inline void set_m_att(int index, ::google::protobuf::int32 value);
  inline void add_m_att(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      m_att() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_m_att();

  // @@protoc_insertion_point(class_scope:proto_ff.E_XingchenXctpatt)
 private:
  inline void set_has_m_attid();
  inline void clear_has_m_attid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 m_attid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > m_att_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fXingchen_2eproto();
  friend void protobuf_AssignDesc_E_5fXingchen_2eproto();
  friend void protobuf_ShutdownFile_E_5fXingchen_2eproto();

  void InitAsDefaultInstance();
  static E_XingchenXctpatt* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_XingchenXctpatt : public ::google::protobuf::Message {
 public:
  Sheet_XingchenXctpatt();
  virtual ~Sheet_XingchenXctpatt();

  Sheet_XingchenXctpatt(const Sheet_XingchenXctpatt& from);

  inline Sheet_XingchenXctpatt& operator=(const Sheet_XingchenXctpatt& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_XingchenXctpatt& default_instance();

  void Swap(Sheet_XingchenXctpatt* other);

  // implements Message ----------------------------------------------

  Sheet_XingchenXctpatt* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_XingchenXctpatt& from);
  void MergeFrom(const Sheet_XingchenXctpatt& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.E_XingchenXctpatt E_XingchenXctpatt_List = 1;
  inline int e_xingchenxctpatt_list_size() const;
  inline void clear_e_xingchenxctpatt_list();
  static const int kEXingchenXctpattListFieldNumber = 1;
  inline const ::proto_ff::E_XingchenXctpatt& e_xingchenxctpatt_list(int index) const;
  inline ::proto_ff::E_XingchenXctpatt* mutable_e_xingchenxctpatt_list(int index);
  inline ::proto_ff::E_XingchenXctpatt* add_e_xingchenxctpatt_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_XingchenXctpatt >&
      e_xingchenxctpatt_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_XingchenXctpatt >*
      mutable_e_xingchenxctpatt_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_XingchenXctpatt)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_XingchenXctpatt > e_xingchenxctpatt_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fXingchen_2eproto();
  friend void protobuf_AssignDesc_E_5fXingchen_2eproto();
  friend void protobuf_ShutdownFile_E_5fXingchen_2eproto();

  void InitAsDefaultInstance();
  static Sheet_XingchenXctpatt* default_instance_;
};
// -------------------------------------------------------------------

class E_XingchenXcstarAttributeDesc : public ::google::protobuf::Message {
 public:
  E_XingchenXcstarAttributeDesc();
  virtual ~E_XingchenXcstarAttributeDesc();

  E_XingchenXcstarAttributeDesc(const E_XingchenXcstarAttributeDesc& from);

  inline E_XingchenXcstarAttributeDesc& operator=(const E_XingchenXcstarAttributeDesc& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_XingchenXcstarAttributeDesc& default_instance();

  void Swap(E_XingchenXcstarAttributeDesc* other);

  // implements Message ----------------------------------------------

  E_XingchenXcstarAttributeDesc* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_XingchenXcstarAttributeDesc& from);
  void MergeFrom(const E_XingchenXcstarAttributeDesc& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 m_value = 1;
  inline bool has_m_value() const;
  inline void clear_m_value();
  static const int kMValueFieldNumber = 1;
  inline ::google::protobuf::int32 m_value() const;
  inline void set_m_value(::google::protobuf::int32 value);

  // optional int32 m_type = 2;
  inline bool has_m_type() const;
  inline void clear_m_type();
  static const int kMTypeFieldNumber = 2;
  inline ::google::protobuf::int32 m_type() const;
  inline void set_m_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.E_XingchenXcstarAttributeDesc)
 private:
  inline void set_has_m_value();
  inline void clear_has_m_value();
  inline void set_has_m_type();
  inline void clear_has_m_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_value_;
  ::google::protobuf::int32 m_type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fXingchen_2eproto();
  friend void protobuf_AssignDesc_E_5fXingchen_2eproto();
  friend void protobuf_ShutdownFile_E_5fXingchen_2eproto();

  void InitAsDefaultInstance();
  static E_XingchenXcstarAttributeDesc* default_instance_;
};
// -------------------------------------------------------------------

class E_XingchenXcstar : public ::google::protobuf::Message {
 public:
  E_XingchenXcstar();
  virtual ~E_XingchenXcstar();

  E_XingchenXcstar(const E_XingchenXcstar& from);

  inline E_XingchenXcstar& operator=(const E_XingchenXcstar& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_XingchenXcstar& default_instance();

  void Swap(E_XingchenXcstar* other);

  // implements Message ----------------------------------------------

  E_XingchenXcstar* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_XingchenXcstar& from);
  void MergeFrom(const E_XingchenXcstar& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 m_starlv = 1;
  inline bool has_m_starlv() const;
  inline void clear_m_starlv();
  static const int kMStarlvFieldNumber = 1;
  inline ::google::protobuf::int32 m_starlv() const;
  inline void set_m_starlv(::google::protobuf::int32 value);

  // optional int32 m_id = 2;
  inline bool has_m_id() const;
  inline void clear_m_id();
  static const int kMIdFieldNumber = 2;
  inline ::google::protobuf::int32 m_id() const;
  inline void set_m_id(::google::protobuf::int32 value);

  // repeated .proto_ff.E_XingchenXcstarAttributeDesc m_attribute = 3;
  inline int m_attribute_size() const;
  inline void clear_m_attribute();
  static const int kMAttributeFieldNumber = 3;
  inline const ::proto_ff::E_XingchenXcstarAttributeDesc& m_attribute(int index) const;
  inline ::proto_ff::E_XingchenXcstarAttributeDesc* mutable_m_attribute(int index);
  inline ::proto_ff::E_XingchenXcstarAttributeDesc* add_m_attribute();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_XingchenXcstarAttributeDesc >&
      m_attribute() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_XingchenXcstarAttributeDesc >*
      mutable_m_attribute();

  // @@protoc_insertion_point(class_scope:proto_ff.E_XingchenXcstar)
 private:
  inline void set_has_m_starlv();
  inline void clear_has_m_starlv();
  inline void set_has_m_id();
  inline void clear_has_m_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_starlv_;
  ::google::protobuf::int32 m_id_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_XingchenXcstarAttributeDesc > m_attribute_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fXingchen_2eproto();
  friend void protobuf_AssignDesc_E_5fXingchen_2eproto();
  friend void protobuf_ShutdownFile_E_5fXingchen_2eproto();

  void InitAsDefaultInstance();
  static E_XingchenXcstar* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_XingchenXcstar : public ::google::protobuf::Message {
 public:
  Sheet_XingchenXcstar();
  virtual ~Sheet_XingchenXcstar();

  Sheet_XingchenXcstar(const Sheet_XingchenXcstar& from);

  inline Sheet_XingchenXcstar& operator=(const Sheet_XingchenXcstar& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_XingchenXcstar& default_instance();

  void Swap(Sheet_XingchenXcstar* other);

  // implements Message ----------------------------------------------

  Sheet_XingchenXcstar* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_XingchenXcstar& from);
  void MergeFrom(const Sheet_XingchenXcstar& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.E_XingchenXcstar E_XingchenXcstar_List = 1;
  inline int e_xingchenxcstar_list_size() const;
  inline void clear_e_xingchenxcstar_list();
  static const int kEXingchenXcstarListFieldNumber = 1;
  inline const ::proto_ff::E_XingchenXcstar& e_xingchenxcstar_list(int index) const;
  inline ::proto_ff::E_XingchenXcstar* mutable_e_xingchenxcstar_list(int index);
  inline ::proto_ff::E_XingchenXcstar* add_e_xingchenxcstar_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_XingchenXcstar >&
      e_xingchenxcstar_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_XingchenXcstar >*
      mutable_e_xingchenxcstar_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_XingchenXcstar)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_XingchenXcstar > e_xingchenxcstar_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fXingchen_2eproto();
  friend void protobuf_AssignDesc_E_5fXingchen_2eproto();
  friend void protobuf_ShutdownFile_E_5fXingchen_2eproto();

  void InitAsDefaultInstance();
  static Sheet_XingchenXcstar* default_instance_;
};
// -------------------------------------------------------------------

class E_XingchenXcawakenAwakenDesc : public ::google::protobuf::Message {
 public:
  E_XingchenXcawakenAwakenDesc();
  virtual ~E_XingchenXcawakenAwakenDesc();

  E_XingchenXcawakenAwakenDesc(const E_XingchenXcawakenAwakenDesc& from);

  inline E_XingchenXcawakenAwakenDesc& operator=(const E_XingchenXcawakenAwakenDesc& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_XingchenXcawakenAwakenDesc& default_instance();

  void Swap(E_XingchenXcawakenAwakenDesc* other);

  // implements Message ----------------------------------------------

  E_XingchenXcawakenAwakenDesc* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_XingchenXcawakenAwakenDesc& from);
  void MergeFrom(const E_XingchenXcawakenAwakenDesc& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 m_tpaddratio = 1;
  inline bool has_m_tpaddratio() const;
  inline void clear_m_tpaddratio();
  static const int kMTpaddratioFieldNumber = 1;
  inline ::google::protobuf::int32 m_tpaddratio() const;
  inline void set_m_tpaddratio(::google::protobuf::int32 value);

  // optional int32 m_lvaddratio = 2;
  inline bool has_m_lvaddratio() const;
  inline void clear_m_lvaddratio();
  static const int kMLvaddratioFieldNumber = 2;
  inline ::google::protobuf::int32 m_lvaddratio() const;
  inline void set_m_lvaddratio(::google::protobuf::int32 value);

  // optional int32 m_num = 3;
  inline bool has_m_num() const;
  inline void clear_m_num();
  static const int kMNumFieldNumber = 3;
  inline ::google::protobuf::int32 m_num() const;
  inline void set_m_num(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.E_XingchenXcawakenAwakenDesc)
 private:
  inline void set_has_m_tpaddratio();
  inline void clear_has_m_tpaddratio();
  inline void set_has_m_lvaddratio();
  inline void clear_has_m_lvaddratio();
  inline void set_has_m_num();
  inline void clear_has_m_num();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_tpaddratio_;
  ::google::protobuf::int32 m_lvaddratio_;
  ::google::protobuf::int32 m_num_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fXingchen_2eproto();
  friend void protobuf_AssignDesc_E_5fXingchen_2eproto();
  friend void protobuf_ShutdownFile_E_5fXingchen_2eproto();

  void InitAsDefaultInstance();
  static E_XingchenXcawakenAwakenDesc* default_instance_;
};
// -------------------------------------------------------------------

class E_XingchenXcawaken : public ::google::protobuf::Message {
 public:
  E_XingchenXcawaken();
  virtual ~E_XingchenXcawaken();

  E_XingchenXcawaken(const E_XingchenXcawaken& from);

  inline E_XingchenXcawaken& operator=(const E_XingchenXcawaken& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_XingchenXcawaken& default_instance();

  void Swap(E_XingchenXcawaken* other);

  // implements Message ----------------------------------------------

  E_XingchenXcawaken* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_XingchenXcawaken& from);
  void MergeFrom(const E_XingchenXcawaken& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 m_positionnum = 1;
  inline bool has_m_positionnum() const;
  inline void clear_m_positionnum();
  static const int kMPositionnumFieldNumber = 1;
  inline ::google::protobuf::int32 m_positionnum() const;
  inline void set_m_positionnum(::google::protobuf::int32 value);

  // optional int32 m_positionid = 2;
  inline bool has_m_positionid() const;
  inline void clear_m_positionid();
  static const int kMPositionidFieldNumber = 2;
  inline ::google::protobuf::int32 m_positionid() const;
  inline void set_m_positionid(::google::protobuf::int32 value);

  // optional int32 m_awaken_quality = 3;
  inline bool has_m_awaken_quality() const;
  inline void clear_m_awaken_quality();
  static const int kMAwakenQualityFieldNumber = 3;
  inline ::google::protobuf::int32 m_awaken_quality() const;
  inline void set_m_awaken_quality(::google::protobuf::int32 value);

  // optional int32 m_awaken_lvmax = 4;
  inline bool has_m_awaken_lvmax() const;
  inline void clear_m_awaken_lvmax();
  static const int kMAwakenLvmaxFieldNumber = 4;
  inline ::google::protobuf::int32 m_awaken_lvmax() const;
  inline void set_m_awaken_lvmax(::google::protobuf::int32 value);

  // optional int32 m_awaken_item = 5;
  inline bool has_m_awaken_item() const;
  inline void clear_m_awaken_item();
  static const int kMAwakenItemFieldNumber = 5;
  inline ::google::protobuf::int32 m_awaken_item() const;
  inline void set_m_awaken_item(::google::protobuf::int32 value);

  // repeated .proto_ff.E_XingchenXcawakenAwakenDesc m_awaken = 6;
  inline int m_awaken_size() const;
  inline void clear_m_awaken();
  static const int kMAwakenFieldNumber = 6;
  inline const ::proto_ff::E_XingchenXcawakenAwakenDesc& m_awaken(int index) const;
  inline ::proto_ff::E_XingchenXcawakenAwakenDesc* mutable_m_awaken(int index);
  inline ::proto_ff::E_XingchenXcawakenAwakenDesc* add_m_awaken();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_XingchenXcawakenAwakenDesc >&
      m_awaken() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_XingchenXcawakenAwakenDesc >*
      mutable_m_awaken();

  // @@protoc_insertion_point(class_scope:proto_ff.E_XingchenXcawaken)
 private:
  inline void set_has_m_positionnum();
  inline void clear_has_m_positionnum();
  inline void set_has_m_positionid();
  inline void clear_has_m_positionid();
  inline void set_has_m_awaken_quality();
  inline void clear_has_m_awaken_quality();
  inline void set_has_m_awaken_lvmax();
  inline void clear_has_m_awaken_lvmax();
  inline void set_has_m_awaken_item();
  inline void clear_has_m_awaken_item();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_positionnum_;
  ::google::protobuf::int32 m_positionid_;
  ::google::protobuf::int32 m_awaken_quality_;
  ::google::protobuf::int32 m_awaken_lvmax_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_XingchenXcawakenAwakenDesc > m_awaken_;
  ::google::protobuf::int32 m_awaken_item_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fXingchen_2eproto();
  friend void protobuf_AssignDesc_E_5fXingchen_2eproto();
  friend void protobuf_ShutdownFile_E_5fXingchen_2eproto();

  void InitAsDefaultInstance();
  static E_XingchenXcawaken* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_XingchenXcawaken : public ::google::protobuf::Message {
 public:
  Sheet_XingchenXcawaken();
  virtual ~Sheet_XingchenXcawaken();

  Sheet_XingchenXcawaken(const Sheet_XingchenXcawaken& from);

  inline Sheet_XingchenXcawaken& operator=(const Sheet_XingchenXcawaken& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_XingchenXcawaken& default_instance();

  void Swap(Sheet_XingchenXcawaken* other);

  // implements Message ----------------------------------------------

  Sheet_XingchenXcawaken* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_XingchenXcawaken& from);
  void MergeFrom(const Sheet_XingchenXcawaken& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.E_XingchenXcawaken E_XingchenXcawaken_List = 1;
  inline int e_xingchenxcawaken_list_size() const;
  inline void clear_e_xingchenxcawaken_list();
  static const int kEXingchenXcawakenListFieldNumber = 1;
  inline const ::proto_ff::E_XingchenXcawaken& e_xingchenxcawaken_list(int index) const;
  inline ::proto_ff::E_XingchenXcawaken* mutable_e_xingchenxcawaken_list(int index);
  inline ::proto_ff::E_XingchenXcawaken* add_e_xingchenxcawaken_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_XingchenXcawaken >&
      e_xingchenxcawaken_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_XingchenXcawaken >*
      mutable_e_xingchenxcawaken_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_XingchenXcawaken)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_XingchenXcawaken > e_xingchenxcawaken_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fXingchen_2eproto();
  friend void protobuf_AssignDesc_E_5fXingchen_2eproto();
  friend void protobuf_ShutdownFile_E_5fXingchen_2eproto();

  void InitAsDefaultInstance();
  static Sheet_XingchenXcawaken* default_instance_;
};
// -------------------------------------------------------------------

class E_XingchenXcmagicalHhDesc : public ::google::protobuf::Message {
 public:
  E_XingchenXcmagicalHhDesc();
  virtual ~E_XingchenXcmagicalHhDesc();

  E_XingchenXcmagicalHhDesc(const E_XingchenXcmagicalHhDesc& from);

  inline E_XingchenXcmagicalHhDesc& operator=(const E_XingchenXcmagicalHhDesc& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_XingchenXcmagicalHhDesc& default_instance();

  void Swap(E_XingchenXcmagicalHhDesc* other);

  // implements Message ----------------------------------------------

  E_XingchenXcmagicalHhDesc* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_XingchenXcmagicalHhDesc& from);
  void MergeFrom(const E_XingchenXcmagicalHhDesc& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 m_value = 1;
  inline bool has_m_value() const;
  inline void clear_m_value();
  static const int kMValueFieldNumber = 1;
  inline ::google::protobuf::int32 m_value() const;
  inline void set_m_value(::google::protobuf::int32 value);

  // optional int32 m_type = 2;
  inline bool has_m_type() const;
  inline void clear_m_type();
  static const int kMTypeFieldNumber = 2;
  inline ::google::protobuf::int32 m_type() const;
  inline void set_m_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.E_XingchenXcmagicalHhDesc)
 private:
  inline void set_has_m_value();
  inline void clear_has_m_value();
  inline void set_has_m_type();
  inline void clear_has_m_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_value_;
  ::google::protobuf::int32 m_type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fXingchen_2eproto();
  friend void protobuf_AssignDesc_E_5fXingchen_2eproto();
  friend void protobuf_ShutdownFile_E_5fXingchen_2eproto();

  void InitAsDefaultInstance();
  static E_XingchenXcmagicalHhDesc* default_instance_;
};
// -------------------------------------------------------------------

class E_XingchenXcmagical : public ::google::protobuf::Message {
 public:
  E_XingchenXcmagical();
  virtual ~E_XingchenXcmagical();

  E_XingchenXcmagical(const E_XingchenXcmagical& from);

  inline E_XingchenXcmagical& operator=(const E_XingchenXcmagical& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_XingchenXcmagical& default_instance();

  void Swap(E_XingchenXcmagical* other);

  // implements Message ----------------------------------------------

  E_XingchenXcmagical* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_XingchenXcmagical& from);
  void MergeFrom(const E_XingchenXcmagical& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 m_id = 1;
  inline bool has_m_id() const;
  inline void clear_m_id();
  static const int kMIdFieldNumber = 1;
  inline ::google::protobuf::int32 m_id() const;
  inline void set_m_id(::google::protobuf::int32 value);

  // optional int32 m_hhquality = 2;
  inline bool has_m_hhquality() const;
  inline void clear_m_hhquality();
  static const int kMHhqualityFieldNumber = 2;
  inline ::google::protobuf::int32 m_hhquality() const;
  inline void set_m_hhquality(::google::protobuf::int32 value);

  // optional int32 m_isadvanced = 3;
  inline bool has_m_isadvanced() const;
  inline void clear_m_isadvanced();
  static const int kMIsadvancedFieldNumber = 3;
  inline ::google::protobuf::int32 m_isadvanced() const;
  inline void set_m_isadvanced(::google::protobuf::int32 value);

  // optional int32 m_hhact = 4;
  inline bool has_m_hhact() const;
  inline void clear_m_hhact();
  static const int kMHhactFieldNumber = 4;
  inline ::google::protobuf::int32 m_hhact() const;
  inline void set_m_hhact(::google::protobuf::int32 value);

  // optional int32 m_hhstar = 5;
  inline bool has_m_hhstar() const;
  inline void clear_m_hhstar();
  static const int kMHhstarFieldNumber = 5;
  inline ::google::protobuf::int32 m_hhstar() const;
  inline void set_m_hhstar(::google::protobuf::int32 value);

  // optional int32 m_advskill = 6;
  inline bool has_m_advskill() const;
  inline void clear_m_advskill();
  static const int kMAdvskillFieldNumber = 6;
  inline ::google::protobuf::int32 m_advskill() const;
  inline void set_m_advskill(::google::protobuf::int32 value);

  // repeated .proto_ff.E_XingchenXcmagicalHhDesc m_hh = 7;
  inline int m_hh_size() const;
  inline void clear_m_hh();
  static const int kMHhFieldNumber = 7;
  inline const ::proto_ff::E_XingchenXcmagicalHhDesc& m_hh(int index) const;
  inline ::proto_ff::E_XingchenXcmagicalHhDesc* mutable_m_hh(int index);
  inline ::proto_ff::E_XingchenXcmagicalHhDesc* add_m_hh();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_XingchenXcmagicalHhDesc >&
      m_hh() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_XingchenXcmagicalHhDesc >*
      mutable_m_hh();

  // @@protoc_insertion_point(class_scope:proto_ff.E_XingchenXcmagical)
 private:
  inline void set_has_m_id();
  inline void clear_has_m_id();
  inline void set_has_m_hhquality();
  inline void clear_has_m_hhquality();
  inline void set_has_m_isadvanced();
  inline void clear_has_m_isadvanced();
  inline void set_has_m_hhact();
  inline void clear_has_m_hhact();
  inline void set_has_m_hhstar();
  inline void clear_has_m_hhstar();
  inline void set_has_m_advskill();
  inline void clear_has_m_advskill();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_id_;
  ::google::protobuf::int32 m_hhquality_;
  ::google::protobuf::int32 m_isadvanced_;
  ::google::protobuf::int32 m_hhact_;
  ::google::protobuf::int32 m_hhstar_;
  ::google::protobuf::int32 m_advskill_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_XingchenXcmagicalHhDesc > m_hh_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fXingchen_2eproto();
  friend void protobuf_AssignDesc_E_5fXingchen_2eproto();
  friend void protobuf_ShutdownFile_E_5fXingchen_2eproto();

  void InitAsDefaultInstance();
  static E_XingchenXcmagical* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_XingchenXcmagical : public ::google::protobuf::Message {
 public:
  Sheet_XingchenXcmagical();
  virtual ~Sheet_XingchenXcmagical();

  Sheet_XingchenXcmagical(const Sheet_XingchenXcmagical& from);

  inline Sheet_XingchenXcmagical& operator=(const Sheet_XingchenXcmagical& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_XingchenXcmagical& default_instance();

  void Swap(Sheet_XingchenXcmagical* other);

  // implements Message ----------------------------------------------

  Sheet_XingchenXcmagical* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_XingchenXcmagical& from);
  void MergeFrom(const Sheet_XingchenXcmagical& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.E_XingchenXcmagical E_XingchenXcmagical_List = 1;
  inline int e_xingchenxcmagical_list_size() const;
  inline void clear_e_xingchenxcmagical_list();
  static const int kEXingchenXcmagicalListFieldNumber = 1;
  inline const ::proto_ff::E_XingchenXcmagical& e_xingchenxcmagical_list(int index) const;
  inline ::proto_ff::E_XingchenXcmagical* mutable_e_xingchenxcmagical_list(int index);
  inline ::proto_ff::E_XingchenXcmagical* add_e_xingchenxcmagical_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_XingchenXcmagical >&
      e_xingchenxcmagical_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_XingchenXcmagical >*
      mutable_e_xingchenxcmagical_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_XingchenXcmagical)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_XingchenXcmagical > e_xingchenxcmagical_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fXingchen_2eproto();
  friend void protobuf_AssignDesc_E_5fXingchen_2eproto();
  friend void protobuf_ShutdownFile_E_5fXingchen_2eproto();

  void InitAsDefaultInstance();
  static Sheet_XingchenXcmagical* default_instance_;
};
// -------------------------------------------------------------------

class E_XingchenXcmagatt : public ::google::protobuf::Message {
 public:
  E_XingchenXcmagatt();
  virtual ~E_XingchenXcmagatt();

  E_XingchenXcmagatt(const E_XingchenXcmagatt& from);

  inline E_XingchenXcmagatt& operator=(const E_XingchenXcmagatt& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_XingchenXcmagatt& default_instance();

  void Swap(E_XingchenXcmagatt* other);

  // implements Message ----------------------------------------------

  E_XingchenXcmagatt* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_XingchenXcmagatt& from);
  void MergeFrom(const E_XingchenXcmagatt& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 m_attid = 1;
  inline bool has_m_attid() const;
  inline void clear_m_attid();
  static const int kMAttidFieldNumber = 1;
  inline ::google::protobuf::int64 m_attid() const;
  inline void set_m_attid(::google::protobuf::int64 value);

  // repeated int32 m_att = 2;
  inline int m_att_size() const;
  inline void clear_m_att();
  static const int kMAttFieldNumber = 2;
  inline ::google::protobuf::int32 m_att(int index) const;
  inline void set_m_att(int index, ::google::protobuf::int32 value);
  inline void add_m_att(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      m_att() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_m_att();

  // @@protoc_insertion_point(class_scope:proto_ff.E_XingchenXcmagatt)
 private:
  inline void set_has_m_attid();
  inline void clear_has_m_attid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 m_attid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > m_att_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fXingchen_2eproto();
  friend void protobuf_AssignDesc_E_5fXingchen_2eproto();
  friend void protobuf_ShutdownFile_E_5fXingchen_2eproto();

  void InitAsDefaultInstance();
  static E_XingchenXcmagatt* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_XingchenXcmagatt : public ::google::protobuf::Message {
 public:
  Sheet_XingchenXcmagatt();
  virtual ~Sheet_XingchenXcmagatt();

  Sheet_XingchenXcmagatt(const Sheet_XingchenXcmagatt& from);

  inline Sheet_XingchenXcmagatt& operator=(const Sheet_XingchenXcmagatt& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_XingchenXcmagatt& default_instance();

  void Swap(Sheet_XingchenXcmagatt* other);

  // implements Message ----------------------------------------------

  Sheet_XingchenXcmagatt* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_XingchenXcmagatt& from);
  void MergeFrom(const Sheet_XingchenXcmagatt& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.E_XingchenXcmagatt E_XingchenXcmagatt_List = 1;
  inline int e_xingchenxcmagatt_list_size() const;
  inline void clear_e_xingchenxcmagatt_list();
  static const int kEXingchenXcmagattListFieldNumber = 1;
  inline const ::proto_ff::E_XingchenXcmagatt& e_xingchenxcmagatt_list(int index) const;
  inline ::proto_ff::E_XingchenXcmagatt* mutable_e_xingchenxcmagatt_list(int index);
  inline ::proto_ff::E_XingchenXcmagatt* add_e_xingchenxcmagatt_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_XingchenXcmagatt >&
      e_xingchenxcmagatt_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_XingchenXcmagatt >*
      mutable_e_xingchenxcmagatt_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_XingchenXcmagatt)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_XingchenXcmagatt > e_xingchenxcmagatt_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fXingchen_2eproto();
  friend void protobuf_AssignDesc_E_5fXingchen_2eproto();
  friend void protobuf_ShutdownFile_E_5fXingchen_2eproto();

  void InitAsDefaultInstance();
  static Sheet_XingchenXcmagatt* default_instance_;
};
// -------------------------------------------------------------------

class E_XingchenXcadvattUpattributeDesc : public ::google::protobuf::Message {
 public:
  E_XingchenXcadvattUpattributeDesc();
  virtual ~E_XingchenXcadvattUpattributeDesc();

  E_XingchenXcadvattUpattributeDesc(const E_XingchenXcadvattUpattributeDesc& from);

  inline E_XingchenXcadvattUpattributeDesc& operator=(const E_XingchenXcadvattUpattributeDesc& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_XingchenXcadvattUpattributeDesc& default_instance();

  void Swap(E_XingchenXcadvattUpattributeDesc* other);

  // implements Message ----------------------------------------------

  E_XingchenXcadvattUpattributeDesc* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_XingchenXcadvattUpattributeDesc& from);
  void MergeFrom(const E_XingchenXcadvattUpattributeDesc& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 m_value = 1;
  inline bool has_m_value() const;
  inline void clear_m_value();
  static const int kMValueFieldNumber = 1;
  inline ::google::protobuf::int32 m_value() const;
  inline void set_m_value(::google::protobuf::int32 value);

  // optional int32 m_type = 2;
  inline bool has_m_type() const;
  inline void clear_m_type();
  static const int kMTypeFieldNumber = 2;
  inline ::google::protobuf::int32 m_type() const;
  inline void set_m_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.E_XingchenXcadvattUpattributeDesc)
 private:
  inline void set_has_m_value();
  inline void clear_has_m_value();
  inline void set_has_m_type();
  inline void clear_has_m_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_value_;
  ::google::protobuf::int32 m_type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fXingchen_2eproto();
  friend void protobuf_AssignDesc_E_5fXingchen_2eproto();
  friend void protobuf_ShutdownFile_E_5fXingchen_2eproto();

  void InitAsDefaultInstance();
  static E_XingchenXcadvattUpattributeDesc* default_instance_;
};
// -------------------------------------------------------------------

class E_XingchenXcadvatt : public ::google::protobuf::Message {
 public:
  E_XingchenXcadvatt();
  virtual ~E_XingchenXcadvatt();

  E_XingchenXcadvatt(const E_XingchenXcadvatt& from);

  inline E_XingchenXcadvatt& operator=(const E_XingchenXcadvatt& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_XingchenXcadvatt& default_instance();

  void Swap(E_XingchenXcadvatt* other);

  // implements Message ----------------------------------------------

  E_XingchenXcadvatt* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_XingchenXcadvatt& from);
  void MergeFrom(const E_XingchenXcadvatt& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 m_id = 1;
  inline bool has_m_id() const;
  inline void clear_m_id();
  static const int kMIdFieldNumber = 1;
  inline ::google::protobuf::int32 m_id() const;
  inline void set_m_id(::google::protobuf::int32 value);

  // optional int64 m_upattributeid = 2;
  inline bool has_m_upattributeid() const;
  inline void clear_m_upattributeid();
  static const int kMUpattributeidFieldNumber = 2;
  inline ::google::protobuf::int64 m_upattributeid() const;
  inline void set_m_upattributeid(::google::protobuf::int64 value);

  // optional int32 m_classlv = 3;
  inline bool has_m_classlv() const;
  inline void clear_m_classlv();
  static const int kMClasslvFieldNumber = 3;
  inline ::google::protobuf::int32 m_classlv() const;
  inline void set_m_classlv(::google::protobuf::int32 value);

  // optional int32 m_starid = 4;
  inline bool has_m_starid() const;
  inline void clear_m_starid();
  static const int kMStaridFieldNumber = 4;
  inline ::google::protobuf::int32 m_starid() const;
  inline void set_m_starid(::google::protobuf::int32 value);

  // optional int32 m_skillid = 5;
  inline bool has_m_skillid() const;
  inline void clear_m_skillid();
  static const int kMSkillidFieldNumber = 5;
  inline ::google::protobuf::int32 m_skillid() const;
  inline void set_m_skillid(::google::protobuf::int32 value);

  // optional int32 m_activeskillidlv = 6;
  inline bool has_m_activeskillidlv() const;
  inline void clear_m_activeskillidlv();
  static const int kMActiveskillidlvFieldNumber = 6;
  inline ::google::protobuf::int32 m_activeskillidlv() const;
  inline void set_m_activeskillidlv(::google::protobuf::int32 value);

  // repeated .proto_ff.E_XingchenXcadvattUpattributeDesc m_upattribute = 7;
  inline int m_upattribute_size() const;
  inline void clear_m_upattribute();
  static const int kMUpattributeFieldNumber = 7;
  inline const ::proto_ff::E_XingchenXcadvattUpattributeDesc& m_upattribute(int index) const;
  inline ::proto_ff::E_XingchenXcadvattUpattributeDesc* mutable_m_upattribute(int index);
  inline ::proto_ff::E_XingchenXcadvattUpattributeDesc* add_m_upattribute();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_XingchenXcadvattUpattributeDesc >&
      m_upattribute() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_XingchenXcadvattUpattributeDesc >*
      mutable_m_upattribute();

  // @@protoc_insertion_point(class_scope:proto_ff.E_XingchenXcadvatt)
 private:
  inline void set_has_m_id();
  inline void clear_has_m_id();
  inline void set_has_m_upattributeid();
  inline void clear_has_m_upattributeid();
  inline void set_has_m_classlv();
  inline void clear_has_m_classlv();
  inline void set_has_m_starid();
  inline void clear_has_m_starid();
  inline void set_has_m_skillid();
  inline void clear_has_m_skillid();
  inline void set_has_m_activeskillidlv();
  inline void clear_has_m_activeskillidlv();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 m_upattributeid_;
  ::google::protobuf::int32 m_id_;
  ::google::protobuf::int32 m_classlv_;
  ::google::protobuf::int32 m_starid_;
  ::google::protobuf::int32 m_skillid_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_XingchenXcadvattUpattributeDesc > m_upattribute_;
  ::google::protobuf::int32 m_activeskillidlv_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fXingchen_2eproto();
  friend void protobuf_AssignDesc_E_5fXingchen_2eproto();
  friend void protobuf_ShutdownFile_E_5fXingchen_2eproto();

  void InitAsDefaultInstance();
  static E_XingchenXcadvatt* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_XingchenXcadvatt : public ::google::protobuf::Message {
 public:
  Sheet_XingchenXcadvatt();
  virtual ~Sheet_XingchenXcadvatt();

  Sheet_XingchenXcadvatt(const Sheet_XingchenXcadvatt& from);

  inline Sheet_XingchenXcadvatt& operator=(const Sheet_XingchenXcadvatt& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_XingchenXcadvatt& default_instance();

  void Swap(Sheet_XingchenXcadvatt* other);

  // implements Message ----------------------------------------------

  Sheet_XingchenXcadvatt* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_XingchenXcadvatt& from);
  void MergeFrom(const Sheet_XingchenXcadvatt& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.E_XingchenXcadvatt E_XingchenXcadvatt_List = 1;
  inline int e_xingchenxcadvatt_list_size() const;
  inline void clear_e_xingchenxcadvatt_list();
  static const int kEXingchenXcadvattListFieldNumber = 1;
  inline const ::proto_ff::E_XingchenXcadvatt& e_xingchenxcadvatt_list(int index) const;
  inline ::proto_ff::E_XingchenXcadvatt* mutable_e_xingchenxcadvatt_list(int index);
  inline ::proto_ff::E_XingchenXcadvatt* add_e_xingchenxcadvatt_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_XingchenXcadvatt >&
      e_xingchenxcadvatt_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_XingchenXcadvatt >*
      mutable_e_xingchenxcadvatt_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_XingchenXcadvatt)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_XingchenXcadvatt > e_xingchenxcadvatt_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fXingchen_2eproto();
  friend void protobuf_AssignDesc_E_5fXingchen_2eproto();
  friend void protobuf_ShutdownFile_E_5fXingchen_2eproto();

  void InitAsDefaultInstance();
  static Sheet_XingchenXcadvatt* default_instance_;
};
// -------------------------------------------------------------------

class E_XingchenXcguizhenXxDesc : public ::google::protobuf::Message {
 public:
  E_XingchenXcguizhenXxDesc();
  virtual ~E_XingchenXcguizhenXxDesc();

  E_XingchenXcguizhenXxDesc(const E_XingchenXcguizhenXxDesc& from);

  inline E_XingchenXcguizhenXxDesc& operator=(const E_XingchenXcguizhenXxDesc& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_XingchenXcguizhenXxDesc& default_instance();

  void Swap(E_XingchenXcguizhenXxDesc* other);

  // implements Message ----------------------------------------------

  E_XingchenXcguizhenXxDesc* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_XingchenXcguizhenXxDesc& from);
  void MergeFrom(const E_XingchenXcguizhenXxDesc& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 m_value = 1;
  inline bool has_m_value() const;
  inline void clear_m_value();
  static const int kMValueFieldNumber = 1;
  inline ::google::protobuf::int32 m_value() const;
  inline void set_m_value(::google::protobuf::int32 value);

  // optional int32 m_type = 2;
  inline bool has_m_type() const;
  inline void clear_m_type();
  static const int kMTypeFieldNumber = 2;
  inline ::google::protobuf::int32 m_type() const;
  inline void set_m_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.E_XingchenXcguizhenXxDesc)
 private:
  inline void set_has_m_value();
  inline void clear_has_m_value();
  inline void set_has_m_type();
  inline void clear_has_m_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_value_;
  ::google::protobuf::int32 m_type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fXingchen_2eproto();
  friend void protobuf_AssignDesc_E_5fXingchen_2eproto();
  friend void protobuf_ShutdownFile_E_5fXingchen_2eproto();

  void InitAsDefaultInstance();
  static E_XingchenXcguizhenXxDesc* default_instance_;
};
// -------------------------------------------------------------------

class E_XingchenXcguizhenGzDesc : public ::google::protobuf::Message {
 public:
  E_XingchenXcguizhenGzDesc();
  virtual ~E_XingchenXcguizhenGzDesc();

  E_XingchenXcguizhenGzDesc(const E_XingchenXcguizhenGzDesc& from);

  inline E_XingchenXcguizhenGzDesc& operator=(const E_XingchenXcguizhenGzDesc& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_XingchenXcguizhenGzDesc& default_instance();

  void Swap(E_XingchenXcguizhenGzDesc* other);

  // implements Message ----------------------------------------------

  E_XingchenXcguizhenGzDesc* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_XingchenXcguizhenGzDesc& from);
  void MergeFrom(const E_XingchenXcguizhenGzDesc& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 m_value = 1;
  inline bool has_m_value() const;
  inline void clear_m_value();
  static const int kMValueFieldNumber = 1;
  inline ::google::protobuf::int32 m_value() const;
  inline void set_m_value(::google::protobuf::int32 value);

  // optional int32 m_type = 2;
  inline bool has_m_type() const;
  inline void clear_m_type();
  static const int kMTypeFieldNumber = 2;
  inline ::google::protobuf::int32 m_type() const;
  inline void set_m_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.E_XingchenXcguizhenGzDesc)
 private:
  inline void set_has_m_value();
  inline void clear_has_m_value();
  inline void set_has_m_type();
  inline void clear_has_m_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_value_;
  ::google::protobuf::int32 m_type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fXingchen_2eproto();
  friend void protobuf_AssignDesc_E_5fXingchen_2eproto();
  friend void protobuf_ShutdownFile_E_5fXingchen_2eproto();

  void InitAsDefaultInstance();
  static E_XingchenXcguizhenGzDesc* default_instance_;
};
// -------------------------------------------------------------------

class E_XingchenXcguizhen : public ::google::protobuf::Message {
 public:
  E_XingchenXcguizhen();
  virtual ~E_XingchenXcguizhen();

  E_XingchenXcguizhen(const E_XingchenXcguizhen& from);

  inline E_XingchenXcguizhen& operator=(const E_XingchenXcguizhen& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_XingchenXcguizhen& default_instance();

  void Swap(E_XingchenXcguizhen* other);

  // implements Message ----------------------------------------------

  E_XingchenXcguizhen* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_XingchenXcguizhen& from);
  void MergeFrom(const E_XingchenXcguizhen& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 m_id = 1;
  inline bool has_m_id() const;
  inline void clear_m_id();
  static const int kMIdFieldNumber = 1;
  inline ::google::protobuf::int32 m_id() const;
  inline void set_m_id(::google::protobuf::int32 value);

  // optional int32 m_xsid = 2;
  inline bool has_m_xsid() const;
  inline void clear_m_xsid();
  static const int kMXsidFieldNumber = 2;
  inline ::google::protobuf::int32 m_xsid() const;
  inline void set_m_xsid(::google::protobuf::int32 value);

  // optional int32 m_gzquality = 3;
  inline bool has_m_gzquality() const;
  inline void clear_m_gzquality();
  static const int kMGzqualityFieldNumber = 3;
  inline ::google::protobuf::int32 m_gzquality() const;
  inline void set_m_gzquality(::google::protobuf::int32 value);

  // optional int32 m_gznum = 4;
  inline bool has_m_gznum() const;
  inline void clear_m_gznum();
  static const int kMGznumFieldNumber = 4;
  inline ::google::protobuf::int32 m_gznum() const;
  inline void set_m_gznum(::google::protobuf::int32 value);

  // optional int32 m_gzxh = 5;
  inline bool has_m_gzxh() const;
  inline void clear_m_gzxh();
  static const int kMGzxhFieldNumber = 5;
  inline ::google::protobuf::int32 m_gzxh() const;
  inline void set_m_gzxh(::google::protobuf::int32 value);

  // repeated .proto_ff.E_XingchenXcguizhenXxDesc m_xx = 6;
  inline int m_xx_size() const;
  inline void clear_m_xx();
  static const int kMXxFieldNumber = 6;
  inline const ::proto_ff::E_XingchenXcguizhenXxDesc& m_xx(int index) const;
  inline ::proto_ff::E_XingchenXcguizhenXxDesc* mutable_m_xx(int index);
  inline ::proto_ff::E_XingchenXcguizhenXxDesc* add_m_xx();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_XingchenXcguizhenXxDesc >&
      m_xx() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_XingchenXcguizhenXxDesc >*
      mutable_m_xx();

  // repeated .proto_ff.E_XingchenXcguizhenGzDesc m_gz = 7;
  inline int m_gz_size() const;
  inline void clear_m_gz();
  static const int kMGzFieldNumber = 7;
  inline const ::proto_ff::E_XingchenXcguizhenGzDesc& m_gz(int index) const;
  inline ::proto_ff::E_XingchenXcguizhenGzDesc* mutable_m_gz(int index);
  inline ::proto_ff::E_XingchenXcguizhenGzDesc* add_m_gz();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_XingchenXcguizhenGzDesc >&
      m_gz() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_XingchenXcguizhenGzDesc >*
      mutable_m_gz();

  // @@protoc_insertion_point(class_scope:proto_ff.E_XingchenXcguizhen)
 private:
  inline void set_has_m_id();
  inline void clear_has_m_id();
  inline void set_has_m_xsid();
  inline void clear_has_m_xsid();
  inline void set_has_m_gzquality();
  inline void clear_has_m_gzquality();
  inline void set_has_m_gznum();
  inline void clear_has_m_gznum();
  inline void set_has_m_gzxh();
  inline void clear_has_m_gzxh();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_id_;
  ::google::protobuf::int32 m_xsid_;
  ::google::protobuf::int32 m_gzquality_;
  ::google::protobuf::int32 m_gznum_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_XingchenXcguizhenXxDesc > m_xx_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_XingchenXcguizhenGzDesc > m_gz_;
  ::google::protobuf::int32 m_gzxh_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fXingchen_2eproto();
  friend void protobuf_AssignDesc_E_5fXingchen_2eproto();
  friend void protobuf_ShutdownFile_E_5fXingchen_2eproto();

  void InitAsDefaultInstance();
  static E_XingchenXcguizhen* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_XingchenXcguizhen : public ::google::protobuf::Message {
 public:
  Sheet_XingchenXcguizhen();
  virtual ~Sheet_XingchenXcguizhen();

  Sheet_XingchenXcguizhen(const Sheet_XingchenXcguizhen& from);

  inline Sheet_XingchenXcguizhen& operator=(const Sheet_XingchenXcguizhen& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_XingchenXcguizhen& default_instance();

  void Swap(Sheet_XingchenXcguizhen* other);

  // implements Message ----------------------------------------------

  Sheet_XingchenXcguizhen* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_XingchenXcguizhen& from);
  void MergeFrom(const Sheet_XingchenXcguizhen& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.E_XingchenXcguizhen E_XingchenXcguizhen_List = 1;
  inline int e_xingchenxcguizhen_list_size() const;
  inline void clear_e_xingchenxcguizhen_list();
  static const int kEXingchenXcguizhenListFieldNumber = 1;
  inline const ::proto_ff::E_XingchenXcguizhen& e_xingchenxcguizhen_list(int index) const;
  inline ::proto_ff::E_XingchenXcguizhen* mutable_e_xingchenxcguizhen_list(int index);
  inline ::proto_ff::E_XingchenXcguizhen* add_e_xingchenxcguizhen_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_XingchenXcguizhen >&
      e_xingchenxcguizhen_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_XingchenXcguizhen >*
      mutable_e_xingchenxcguizhen_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_XingchenXcguizhen)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_XingchenXcguizhen > e_xingchenxcguizhen_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fXingchen_2eproto();
  friend void protobuf_AssignDesc_E_5fXingchen_2eproto();
  friend void protobuf_ShutdownFile_E_5fXingchen_2eproto();

  void InitAsDefaultInstance();
  static Sheet_XingchenXcguizhen* default_instance_;
};
// -------------------------------------------------------------------

class E_XingchenXingjunActDesc : public ::google::protobuf::Message {
 public:
  E_XingchenXingjunActDesc();
  virtual ~E_XingchenXingjunActDesc();

  E_XingchenXingjunActDesc(const E_XingchenXingjunActDesc& from);

  inline E_XingchenXingjunActDesc& operator=(const E_XingchenXingjunActDesc& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_XingchenXingjunActDesc& default_instance();

  void Swap(E_XingchenXingjunActDesc* other);

  // implements Message ----------------------------------------------

  E_XingchenXingjunActDesc* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_XingchenXingjunActDesc& from);
  void MergeFrom(const E_XingchenXingjunActDesc& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 m_id = 1;
  inline bool has_m_id() const;
  inline void clear_m_id();
  static const int kMIdFieldNumber = 1;
  inline ::google::protobuf::int32 m_id() const;
  inline void set_m_id(::google::protobuf::int32 value);

  // optional int32 m_num = 2;
  inline bool has_m_num() const;
  inline void clear_m_num();
  static const int kMNumFieldNumber = 2;
  inline ::google::protobuf::int32 m_num() const;
  inline void set_m_num(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.E_XingchenXingjunActDesc)
 private:
  inline void set_has_m_id();
  inline void clear_has_m_id();
  inline void set_has_m_num();
  inline void clear_has_m_num();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_id_;
  ::google::protobuf::int32 m_num_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fXingchen_2eproto();
  friend void protobuf_AssignDesc_E_5fXingchen_2eproto();
  friend void protobuf_ShutdownFile_E_5fXingchen_2eproto();

  void InitAsDefaultInstance();
  static E_XingchenXingjunActDesc* default_instance_;
};
// -------------------------------------------------------------------

class E_XingchenXingjun : public ::google::protobuf::Message {
 public:
  E_XingchenXingjun();
  virtual ~E_XingchenXingjun();

  E_XingchenXingjun(const E_XingchenXingjun& from);

  inline E_XingchenXingjun& operator=(const E_XingchenXingjun& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_XingchenXingjun& default_instance();

  void Swap(E_XingchenXingjun* other);

  // implements Message ----------------------------------------------

  E_XingchenXingjun* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_XingchenXingjun& from);
  void MergeFrom(const E_XingchenXingjun& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 m_id = 1;
  inline bool has_m_id() const;
  inline void clear_m_id();
  static const int kMIdFieldNumber = 1;
  inline ::google::protobuf::int32 m_id() const;
  inline void set_m_id(::google::protobuf::int32 value);

  // optional int32 m_xstype = 2;
  inline bool has_m_xstype() const;
  inline void clear_m_xstype();
  static const int kMXstypeFieldNumber = 2;
  inline ::google::protobuf::int32 m_xstype() const;
  inline void set_m_xstype(::google::protobuf::int32 value);

  // optional int32 m_xjquality = 3;
  inline bool has_m_xjquality() const;
  inline void clear_m_xjquality();
  static const int kMXjqualityFieldNumber = 3;
  inline ::google::protobuf::int32 m_xjquality() const;
  inline void set_m_xjquality(::google::protobuf::int32 value);

  // repeated .proto_ff.E_XingchenXingjunActDesc m_act = 4;
  inline int m_act_size() const;
  inline void clear_m_act();
  static const int kMActFieldNumber = 4;
  inline const ::proto_ff::E_XingchenXingjunActDesc& m_act(int index) const;
  inline ::proto_ff::E_XingchenXingjunActDesc* mutable_m_act(int index);
  inline ::proto_ff::E_XingchenXingjunActDesc* add_m_act();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_XingchenXingjunActDesc >&
      m_act() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_XingchenXingjunActDesc >*
      mutable_m_act();

  // @@protoc_insertion_point(class_scope:proto_ff.E_XingchenXingjun)
 private:
  inline void set_has_m_id();
  inline void clear_has_m_id();
  inline void set_has_m_xstype();
  inline void clear_has_m_xstype();
  inline void set_has_m_xjquality();
  inline void clear_has_m_xjquality();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_id_;
  ::google::protobuf::int32 m_xstype_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_XingchenXingjunActDesc > m_act_;
  ::google::protobuf::int32 m_xjquality_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fXingchen_2eproto();
  friend void protobuf_AssignDesc_E_5fXingchen_2eproto();
  friend void protobuf_ShutdownFile_E_5fXingchen_2eproto();

  void InitAsDefaultInstance();
  static E_XingchenXingjun* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_XingchenXingjun : public ::google::protobuf::Message {
 public:
  Sheet_XingchenXingjun();
  virtual ~Sheet_XingchenXingjun();

  Sheet_XingchenXingjun(const Sheet_XingchenXingjun& from);

  inline Sheet_XingchenXingjun& operator=(const Sheet_XingchenXingjun& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_XingchenXingjun& default_instance();

  void Swap(Sheet_XingchenXingjun* other);

  // implements Message ----------------------------------------------

  Sheet_XingchenXingjun* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_XingchenXingjun& from);
  void MergeFrom(const Sheet_XingchenXingjun& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.E_XingchenXingjun E_XingchenXingjun_List = 1;
  inline int e_xingchenxingjun_list_size() const;
  inline void clear_e_xingchenxingjun_list();
  static const int kEXingchenXingjunListFieldNumber = 1;
  inline const ::proto_ff::E_XingchenXingjun& e_xingchenxingjun_list(int index) const;
  inline ::proto_ff::E_XingchenXingjun* mutable_e_xingchenxingjun_list(int index);
  inline ::proto_ff::E_XingchenXingjun* add_e_xingchenxingjun_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_XingchenXingjun >&
      e_xingchenxingjun_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_XingchenXingjun >*
      mutable_e_xingchenxingjun_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_XingchenXingjun)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_XingchenXingjun > e_xingchenxingjun_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fXingchen_2eproto();
  friend void protobuf_AssignDesc_E_5fXingchen_2eproto();
  friend void protobuf_ShutdownFile_E_5fXingchen_2eproto();

  void InitAsDefaultInstance();
  static Sheet_XingchenXingjun* default_instance_;
};
// -------------------------------------------------------------------

class E_XingchenXjattXjDesc : public ::google::protobuf::Message {
 public:
  E_XingchenXjattXjDesc();
  virtual ~E_XingchenXjattXjDesc();

  E_XingchenXjattXjDesc(const E_XingchenXjattXjDesc& from);

  inline E_XingchenXjattXjDesc& operator=(const E_XingchenXjattXjDesc& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_XingchenXjattXjDesc& default_instance();

  void Swap(E_XingchenXjattXjDesc* other);

  // implements Message ----------------------------------------------

  E_XingchenXjattXjDesc* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_XingchenXjattXjDesc& from);
  void MergeFrom(const E_XingchenXjattXjDesc& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 m_value = 1;
  inline bool has_m_value() const;
  inline void clear_m_value();
  static const int kMValueFieldNumber = 1;
  inline ::google::protobuf::int32 m_value() const;
  inline void set_m_value(::google::protobuf::int32 value);

  // optional int32 m_type = 2;
  inline bool has_m_type() const;
  inline void clear_m_type();
  static const int kMTypeFieldNumber = 2;
  inline ::google::protobuf::int32 m_type() const;
  inline void set_m_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.E_XingchenXjattXjDesc)
 private:
  inline void set_has_m_value();
  inline void clear_has_m_value();
  inline void set_has_m_type();
  inline void clear_has_m_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_value_;
  ::google::protobuf::int32 m_type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fXingchen_2eproto();
  friend void protobuf_AssignDesc_E_5fXingchen_2eproto();
  friend void protobuf_ShutdownFile_E_5fXingchen_2eproto();

  void InitAsDefaultInstance();
  static E_XingchenXjattXjDesc* default_instance_;
};
// -------------------------------------------------------------------

class E_XingchenXjatt : public ::google::protobuf::Message {
 public:
  E_XingchenXjatt();
  virtual ~E_XingchenXjatt();

  E_XingchenXjatt(const E_XingchenXjatt& from);

  inline E_XingchenXjatt& operator=(const E_XingchenXjatt& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_XingchenXjatt& default_instance();

  void Swap(E_XingchenXjatt* other);

  // implements Message ----------------------------------------------

  E_XingchenXjatt* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_XingchenXjatt& from);
  void MergeFrom(const E_XingchenXjatt& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 m_attid = 1;
  inline bool has_m_attid() const;
  inline void clear_m_attid();
  static const int kMAttidFieldNumber = 1;
  inline ::google::protobuf::int64 m_attid() const;
  inline void set_m_attid(::google::protobuf::int64 value);

  // repeated .proto_ff.E_XingchenXjattXjDesc m_xj = 2;
  inline int m_xj_size() const;
  inline void clear_m_xj();
  static const int kMXjFieldNumber = 2;
  inline const ::proto_ff::E_XingchenXjattXjDesc& m_xj(int index) const;
  inline ::proto_ff::E_XingchenXjattXjDesc* mutable_m_xj(int index);
  inline ::proto_ff::E_XingchenXjattXjDesc* add_m_xj();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_XingchenXjattXjDesc >&
      m_xj() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_XingchenXjattXjDesc >*
      mutable_m_xj();

  // @@protoc_insertion_point(class_scope:proto_ff.E_XingchenXjatt)
 private:
  inline void set_has_m_attid();
  inline void clear_has_m_attid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 m_attid_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_XingchenXjattXjDesc > m_xj_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fXingchen_2eproto();
  friend void protobuf_AssignDesc_E_5fXingchen_2eproto();
  friend void protobuf_ShutdownFile_E_5fXingchen_2eproto();

  void InitAsDefaultInstance();
  static E_XingchenXjatt* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_XingchenXjatt : public ::google::protobuf::Message {
 public:
  Sheet_XingchenXjatt();
  virtual ~Sheet_XingchenXjatt();

  Sheet_XingchenXjatt(const Sheet_XingchenXjatt& from);

  inline Sheet_XingchenXjatt& operator=(const Sheet_XingchenXjatt& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_XingchenXjatt& default_instance();

  void Swap(Sheet_XingchenXjatt* other);

  // implements Message ----------------------------------------------

  Sheet_XingchenXjatt* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_XingchenXjatt& from);
  void MergeFrom(const Sheet_XingchenXjatt& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.E_XingchenXjatt E_XingchenXjatt_List = 1;
  inline int e_xingchenxjatt_list_size() const;
  inline void clear_e_xingchenxjatt_list();
  static const int kEXingchenXjattListFieldNumber = 1;
  inline const ::proto_ff::E_XingchenXjatt& e_xingchenxjatt_list(int index) const;
  inline ::proto_ff::E_XingchenXjatt* mutable_e_xingchenxjatt_list(int index);
  inline ::proto_ff::E_XingchenXjatt* add_e_xingchenxjatt_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_XingchenXjatt >&
      e_xingchenxjatt_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_XingchenXjatt >*
      mutable_e_xingchenxjatt_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_XingchenXjatt)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_XingchenXjatt > e_xingchenxjatt_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fXingchen_2eproto();
  friend void protobuf_AssignDesc_E_5fXingchen_2eproto();
  friend void protobuf_ShutdownFile_E_5fXingchen_2eproto();

  void InitAsDefaultInstance();
  static Sheet_XingchenXjatt* default_instance_;
};
// -------------------------------------------------------------------

class E_XingchenXingji : public ::google::protobuf::Message {
 public:
  E_XingchenXingji();
  virtual ~E_XingchenXingji();

  E_XingchenXingji(const E_XingchenXingji& from);

  inline E_XingchenXingji& operator=(const E_XingchenXingji& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_XingchenXingji& default_instance();

  void Swap(E_XingchenXingji* other);

  // implements Message ----------------------------------------------

  E_XingchenXingji* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_XingchenXingji& from);
  void MergeFrom(const E_XingchenXingji& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 m_xjid = 1;
  inline bool has_m_xjid() const;
  inline void clear_m_xjid();
  static const int kMXjidFieldNumber = 1;
  inline ::google::protobuf::int32 m_xjid() const;
  inline void set_m_xjid(::google::protobuf::int32 value);

  // optional int32 m_xjclass = 2;
  inline bool has_m_xjclass() const;
  inline void clear_m_xjclass();
  static const int kMXjclassFieldNumber = 2;
  inline ::google::protobuf::int32 m_xjclass() const;
  inline void set_m_xjclass(::google::protobuf::int32 value);

  // optional int32 m_xjskill = 3;
  inline bool has_m_xjskill() const;
  inline void clear_m_xjskill();
  static const int kMXjskillFieldNumber = 3;
  inline ::google::protobuf::int32 m_xjskill() const;
  inline void set_m_xjskill(::google::protobuf::int32 value);

  // optional int32 m_skillid = 4;
  inline bool has_m_skillid() const;
  inline void clear_m_skillid();
  static const int kMSkillidFieldNumber = 4;
  inline ::google::protobuf::int32 m_skillid() const;
  inline void set_m_skillid(::google::protobuf::int32 value);

  // repeated int32 m_unlock = 5;
  inline int m_unlock_size() const;
  inline void clear_m_unlock();
  static const int kMUnlockFieldNumber = 5;
  inline ::google::protobuf::int32 m_unlock(int index) const;
  inline void set_m_unlock(int index, ::google::protobuf::int32 value);
  inline void add_m_unlock(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      m_unlock() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_m_unlock();

  // repeated int32 m_unlocklv = 6;
  inline int m_unlocklv_size() const;
  inline void clear_m_unlocklv();
  static const int kMUnlocklvFieldNumber = 6;
  inline ::google::protobuf::int32 m_unlocklv(int index) const;
  inline void set_m_unlocklv(int index, ::google::protobuf::int32 value);
  inline void add_m_unlocklv(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      m_unlocklv() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_m_unlocklv();

  // @@protoc_insertion_point(class_scope:proto_ff.E_XingchenXingji)
 private:
  inline void set_has_m_xjid();
  inline void clear_has_m_xjid();
  inline void set_has_m_xjclass();
  inline void clear_has_m_xjclass();
  inline void set_has_m_xjskill();
  inline void clear_has_m_xjskill();
  inline void set_has_m_skillid();
  inline void clear_has_m_skillid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_xjid_;
  ::google::protobuf::int32 m_xjclass_;
  ::google::protobuf::int32 m_xjskill_;
  ::google::protobuf::int32 m_skillid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > m_unlock_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > m_unlocklv_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fXingchen_2eproto();
  friend void protobuf_AssignDesc_E_5fXingchen_2eproto();
  friend void protobuf_ShutdownFile_E_5fXingchen_2eproto();

  void InitAsDefaultInstance();
  static E_XingchenXingji* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_XingchenXingji : public ::google::protobuf::Message {
 public:
  Sheet_XingchenXingji();
  virtual ~Sheet_XingchenXingji();

  Sheet_XingchenXingji(const Sheet_XingchenXingji& from);

  inline Sheet_XingchenXingji& operator=(const Sheet_XingchenXingji& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_XingchenXingji& default_instance();

  void Swap(Sheet_XingchenXingji* other);

  // implements Message ----------------------------------------------

  Sheet_XingchenXingji* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_XingchenXingji& from);
  void MergeFrom(const Sheet_XingchenXingji& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.E_XingchenXingji E_XingchenXingji_List = 1;
  inline int e_xingchenxingji_list_size() const;
  inline void clear_e_xingchenxingji_list();
  static const int kEXingchenXingjiListFieldNumber = 1;
  inline const ::proto_ff::E_XingchenXingji& e_xingchenxingji_list(int index) const;
  inline ::proto_ff::E_XingchenXingji* mutable_e_xingchenxingji_list(int index);
  inline ::proto_ff::E_XingchenXingji* add_e_xingchenxingji_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_XingchenXingji >&
      e_xingchenxingji_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_XingchenXingji >*
      mutable_e_xingchenxingji_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_XingchenXingji)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_XingchenXingji > e_xingchenxingji_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fXingchen_2eproto();
  friend void protobuf_AssignDesc_E_5fXingchen_2eproto();
  friend void protobuf_ShutdownFile_E_5fXingchen_2eproto();

  void InitAsDefaultInstance();
  static Sheet_XingchenXingji* default_instance_;
};
// -------------------------------------------------------------------

class E_XingchenXjcw : public ::google::protobuf::Message {
 public:
  E_XingchenXjcw();
  virtual ~E_XingchenXjcw();

  E_XingchenXjcw(const E_XingchenXjcw& from);

  inline E_XingchenXjcw& operator=(const E_XingchenXjcw& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_XingchenXjcw& default_instance();

  void Swap(E_XingchenXjcw* other);

  // implements Message ----------------------------------------------

  E_XingchenXjcw* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_XingchenXjcw& from);
  void MergeFrom(const E_XingchenXjcw& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 m_xjslot = 1;
  inline bool has_m_xjslot() const;
  inline void clear_m_xjslot();
  static const int kMXjslotFieldNumber = 1;
  inline ::google::protobuf::int32 m_xjslot() const;
  inline void set_m_xjslot(::google::protobuf::int32 value);

  // optional int32 m_unlock = 2;
  inline bool has_m_unlock() const;
  inline void clear_m_unlock();
  static const int kMUnlockFieldNumber = 2;
  inline ::google::protobuf::int32 m_unlock() const;
  inline void set_m_unlock(::google::protobuf::int32 value);

  // optional int32 m_num = 3;
  inline bool has_m_num() const;
  inline void clear_m_num();
  static const int kMNumFieldNumber = 3;
  inline ::google::protobuf::int32 m_num() const;
  inline void set_m_num(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.E_XingchenXjcw)
 private:
  inline void set_has_m_xjslot();
  inline void clear_has_m_xjslot();
  inline void set_has_m_unlock();
  inline void clear_has_m_unlock();
  inline void set_has_m_num();
  inline void clear_has_m_num();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_xjslot_;
  ::google::protobuf::int32 m_unlock_;
  ::google::protobuf::int32 m_num_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fXingchen_2eproto();
  friend void protobuf_AssignDesc_E_5fXingchen_2eproto();
  friend void protobuf_ShutdownFile_E_5fXingchen_2eproto();

  void InitAsDefaultInstance();
  static E_XingchenXjcw* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_XingchenXjcw : public ::google::protobuf::Message {
 public:
  Sheet_XingchenXjcw();
  virtual ~Sheet_XingchenXjcw();

  Sheet_XingchenXjcw(const Sheet_XingchenXjcw& from);

  inline Sheet_XingchenXjcw& operator=(const Sheet_XingchenXjcw& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_XingchenXjcw& default_instance();

  void Swap(Sheet_XingchenXjcw* other);

  // implements Message ----------------------------------------------

  Sheet_XingchenXjcw* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_XingchenXjcw& from);
  void MergeFrom(const Sheet_XingchenXjcw& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.E_XingchenXjcw E_XingchenXjcw_List = 1;
  inline int e_xingchenxjcw_list_size() const;
  inline void clear_e_xingchenxjcw_list();
  static const int kEXingchenXjcwListFieldNumber = 1;
  inline const ::proto_ff::E_XingchenXjcw& e_xingchenxjcw_list(int index) const;
  inline ::proto_ff::E_XingchenXjcw* mutable_e_xingchenxjcw_list(int index);
  inline ::proto_ff::E_XingchenXjcw* add_e_xingchenxjcw_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_XingchenXjcw >&
      e_xingchenxjcw_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_XingchenXjcw >*
      mutable_e_xingchenxjcw_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_XingchenXjcw)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_XingchenXjcw > e_xingchenxjcw_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fXingchen_2eproto();
  friend void protobuf_AssignDesc_E_5fXingchen_2eproto();
  friend void protobuf_ShutdownFile_E_5fXingchen_2eproto();

  void InitAsDefaultInstance();
  static Sheet_XingchenXjcw* default_instance_;
};
// -------------------------------------------------------------------

class E_XingchenXjlvexp : public ::google::protobuf::Message {
 public:
  E_XingchenXjlvexp();
  virtual ~E_XingchenXjlvexp();

  E_XingchenXjlvexp(const E_XingchenXjlvexp& from);

  inline E_XingchenXjlvexp& operator=(const E_XingchenXjlvexp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_XingchenXjlvexp& default_instance();

  void Swap(E_XingchenXjlvexp* other);

  // implements Message ----------------------------------------------

  E_XingchenXjlvexp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_XingchenXjlvexp& from);
  void MergeFrom(const E_XingchenXjlvexp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 m_lv = 1;
  inline bool has_m_lv() const;
  inline void clear_m_lv();
  static const int kMLvFieldNumber = 1;
  inline ::google::protobuf::int32 m_lv() const;
  inline void set_m_lv(::google::protobuf::int32 value);

  // optional int32 m_exp = 2;
  inline bool has_m_exp() const;
  inline void clear_m_exp();
  static const int kMExpFieldNumber = 2;
  inline ::google::protobuf::int32 m_exp() const;
  inline void set_m_exp(::google::protobuf::int32 value);

  // optional int32 m_time = 3;
  inline bool has_m_time() const;
  inline void clear_m_time();
  static const int kMTimeFieldNumber = 3;
  inline ::google::protobuf::int32 m_time() const;
  inline void set_m_time(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.E_XingchenXjlvexp)
 private:
  inline void set_has_m_lv();
  inline void clear_has_m_lv();
  inline void set_has_m_exp();
  inline void clear_has_m_exp();
  inline void set_has_m_time();
  inline void clear_has_m_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_lv_;
  ::google::protobuf::int32 m_exp_;
  ::google::protobuf::int32 m_time_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fXingchen_2eproto();
  friend void protobuf_AssignDesc_E_5fXingchen_2eproto();
  friend void protobuf_ShutdownFile_E_5fXingchen_2eproto();

  void InitAsDefaultInstance();
  static E_XingchenXjlvexp* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_XingchenXjlvexp : public ::google::protobuf::Message {
 public:
  Sheet_XingchenXjlvexp();
  virtual ~Sheet_XingchenXjlvexp();

  Sheet_XingchenXjlvexp(const Sheet_XingchenXjlvexp& from);

  inline Sheet_XingchenXjlvexp& operator=(const Sheet_XingchenXjlvexp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_XingchenXjlvexp& default_instance();

  void Swap(Sheet_XingchenXjlvexp* other);

  // implements Message ----------------------------------------------

  Sheet_XingchenXjlvexp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_XingchenXjlvexp& from);
  void MergeFrom(const Sheet_XingchenXjlvexp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.E_XingchenXjlvexp E_XingchenXjlvexp_List = 1;
  inline int e_xingchenxjlvexp_list_size() const;
  inline void clear_e_xingchenxjlvexp_list();
  static const int kEXingchenXjlvexpListFieldNumber = 1;
  inline const ::proto_ff::E_XingchenXjlvexp& e_xingchenxjlvexp_list(int index) const;
  inline ::proto_ff::E_XingchenXjlvexp* mutable_e_xingchenxjlvexp_list(int index);
  inline ::proto_ff::E_XingchenXjlvexp* add_e_xingchenxjlvexp_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_XingchenXjlvexp >&
      e_xingchenxjlvexp_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_XingchenXjlvexp >*
      mutable_e_xingchenxjlvexp_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_XingchenXjlvexp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_XingchenXjlvexp > e_xingchenxjlvexp_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fXingchen_2eproto();
  friend void protobuf_AssignDesc_E_5fXingchen_2eproto();
  friend void protobuf_ShutdownFile_E_5fXingchen_2eproto();

  void InitAsDefaultInstance();
  static Sheet_XingchenXjlvexp* default_instance_;
};
// -------------------------------------------------------------------

class E_XingchenZbshop : public ::google::protobuf::Message {
 public:
  E_XingchenZbshop();
  virtual ~E_XingchenZbshop();

  E_XingchenZbshop(const E_XingchenZbshop& from);

  inline E_XingchenZbshop& operator=(const E_XingchenZbshop& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_XingchenZbshop& default_instance();

  void Swap(E_XingchenZbshop* other);

  // implements Message ----------------------------------------------

  E_XingchenZbshop* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_XingchenZbshop& from);
  void MergeFrom(const E_XingchenZbshop& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 m_shopid = 1;
  inline bool has_m_shopid() const;
  inline void clear_m_shopid();
  static const int kMShopidFieldNumber = 1;
  inline ::google::protobuf::int32 m_shopid() const;
  inline void set_m_shopid(::google::protobuf::int32 value);

  // optional int32 m_shopitem = 2;
  inline bool has_m_shopitem() const;
  inline void clear_m_shopitem();
  static const int kMShopitemFieldNumber = 2;
  inline ::google::protobuf::int32 m_shopitem() const;
  inline void set_m_shopitem(::google::protobuf::int32 value);

  // optional int32 m_shopquota = 3;
  inline bool has_m_shopquota() const;
  inline void clear_m_shopquota();
  static const int kMShopquotaFieldNumber = 3;
  inline ::google::protobuf::int32 m_shopquota() const;
  inline void set_m_shopquota(::google::protobuf::int32 value);

  // optional int32 m_shopnum = 4;
  inline bool has_m_shopnum() const;
  inline void clear_m_shopnum();
  static const int kMShopnumFieldNumber = 4;
  inline ::google::protobuf::int32 m_shopnum() const;
  inline void set_m_shopnum(::google::protobuf::int32 value);

  // optional int32 m_buyconsume = 5;
  inline bool has_m_buyconsume() const;
  inline void clear_m_buyconsume();
  static const int kMBuyconsumeFieldNumber = 5;
  inline ::google::protobuf::int32 m_buyconsume() const;
  inline void set_m_buyconsume(::google::protobuf::int32 value);

  // optional int32 m_buynum = 6;
  inline bool has_m_buynum() const;
  inline void clear_m_buynum();
  static const int kMBuynumFieldNumber = 6;
  inline ::google::protobuf::int32 m_buynum() const;
  inline void set_m_buynum(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.E_XingchenZbshop)
 private:
  inline void set_has_m_shopid();
  inline void clear_has_m_shopid();
  inline void set_has_m_shopitem();
  inline void clear_has_m_shopitem();
  inline void set_has_m_shopquota();
  inline void clear_has_m_shopquota();
  inline void set_has_m_shopnum();
  inline void clear_has_m_shopnum();
  inline void set_has_m_buyconsume();
  inline void clear_has_m_buyconsume();
  inline void set_has_m_buynum();
  inline void clear_has_m_buynum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_shopid_;
  ::google::protobuf::int32 m_shopitem_;
  ::google::protobuf::int32 m_shopquota_;
  ::google::protobuf::int32 m_shopnum_;
  ::google::protobuf::int32 m_buyconsume_;
  ::google::protobuf::int32 m_buynum_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fXingchen_2eproto();
  friend void protobuf_AssignDesc_E_5fXingchen_2eproto();
  friend void protobuf_ShutdownFile_E_5fXingchen_2eproto();

  void InitAsDefaultInstance();
  static E_XingchenZbshop* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_XingchenZbshop : public ::google::protobuf::Message {
 public:
  Sheet_XingchenZbshop();
  virtual ~Sheet_XingchenZbshop();

  Sheet_XingchenZbshop(const Sheet_XingchenZbshop& from);

  inline Sheet_XingchenZbshop& operator=(const Sheet_XingchenZbshop& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_XingchenZbshop& default_instance();

  void Swap(Sheet_XingchenZbshop* other);

  // implements Message ----------------------------------------------

  Sheet_XingchenZbshop* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_XingchenZbshop& from);
  void MergeFrom(const Sheet_XingchenZbshop& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.E_XingchenZbshop E_XingchenZbshop_List = 1;
  inline int e_xingchenzbshop_list_size() const;
  inline void clear_e_xingchenzbshop_list();
  static const int kEXingchenZbshopListFieldNumber = 1;
  inline const ::proto_ff::E_XingchenZbshop& e_xingchenzbshop_list(int index) const;
  inline ::proto_ff::E_XingchenZbshop* mutable_e_xingchenzbshop_list(int index);
  inline ::proto_ff::E_XingchenZbshop* add_e_xingchenzbshop_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_XingchenZbshop >&
      e_xingchenzbshop_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_XingchenZbshop >*
      mutable_e_xingchenzbshop_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_XingchenZbshop)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_XingchenZbshop > e_xingchenzbshop_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fXingchen_2eproto();
  friend void protobuf_AssignDesc_E_5fXingchen_2eproto();
  friend void protobuf_ShutdownFile_E_5fXingchen_2eproto();

  void InitAsDefaultInstance();
  static Sheet_XingchenZbshop* default_instance_;
};
// ===================================================================


// ===================================================================

// E_XingchenXcsetup

// optional int32 m_xsid = 1;
inline bool E_XingchenXcsetup::has_m_xsid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_XingchenXcsetup::set_has_m_xsid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_XingchenXcsetup::clear_has_m_xsid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_XingchenXcsetup::clear_m_xsid() {
  m_xsid_ = 0;
  clear_has_m_xsid();
}
inline ::google::protobuf::int32 E_XingchenXcsetup::m_xsid() const {
  return m_xsid_;
}
inline void E_XingchenXcsetup::set_m_xsid(::google::protobuf::int32 value) {
  set_has_m_xsid();
  m_xsid_ = value;
}

// optional int32 m_unlockdj = 2;
inline bool E_XingchenXcsetup::has_m_unlockdj() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_XingchenXcsetup::set_has_m_unlockdj() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_XingchenXcsetup::clear_has_m_unlockdj() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_XingchenXcsetup::clear_m_unlockdj() {
  m_unlockdj_ = 0;
  clear_has_m_unlockdj();
}
inline ::google::protobuf::int32 E_XingchenXcsetup::m_unlockdj() const {
  return m_unlockdj_;
}
inline void E_XingchenXcsetup::set_m_unlockdj(::google::protobuf::int32 value) {
  set_has_m_unlockdj();
  m_unlockdj_ = value;
}

// optional int32 m_unlockpf = 3;
inline bool E_XingchenXcsetup::has_m_unlockpf() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void E_XingchenXcsetup::set_has_m_unlockpf() {
  _has_bits_[0] |= 0x00000004u;
}
inline void E_XingchenXcsetup::clear_has_m_unlockpf() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void E_XingchenXcsetup::clear_m_unlockpf() {
  m_unlockpf_ = 0;
  clear_has_m_unlockpf();
}
inline ::google::protobuf::int32 E_XingchenXcsetup::m_unlockpf() const {
  return m_unlockpf_;
}
inline void E_XingchenXcsetup::set_m_unlockpf(::google::protobuf::int32 value) {
  set_has_m_unlockpf();
  m_unlockpf_ = value;
}

// optional int32 m_xstype = 4;
inline bool E_XingchenXcsetup::has_m_xstype() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void E_XingchenXcsetup::set_has_m_xstype() {
  _has_bits_[0] |= 0x00000008u;
}
inline void E_XingchenXcsetup::clear_has_m_xstype() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void E_XingchenXcsetup::clear_m_xstype() {
  m_xstype_ = 0;
  clear_has_m_xstype();
}
inline ::google::protobuf::int32 E_XingchenXcsetup::m_xstype() const {
  return m_xstype_;
}
inline void E_XingchenXcsetup::set_m_xstype(::google::protobuf::int32 value) {
  set_has_m_xstype();
  m_xstype_ = value;
}

// optional int32 m_xssubtype = 5;
inline bool E_XingchenXcsetup::has_m_xssubtype() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void E_XingchenXcsetup::set_has_m_xssubtype() {
  _has_bits_[0] |= 0x00000010u;
}
inline void E_XingchenXcsetup::clear_has_m_xssubtype() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void E_XingchenXcsetup::clear_m_xssubtype() {
  m_xssubtype_ = 0;
  clear_has_m_xssubtype();
}
inline ::google::protobuf::int32 E_XingchenXcsetup::m_xssubtype() const {
  return m_xssubtype_;
}
inline void E_XingchenXcsetup::set_m_xssubtype(::google::protobuf::int32 value) {
  set_has_m_xssubtype();
  m_xssubtype_ = value;
}

// -------------------------------------------------------------------

// Sheet_XingchenXcsetup

// repeated .proto_ff.E_XingchenXcsetup E_XingchenXcsetup_List = 1;
inline int Sheet_XingchenXcsetup::e_xingchenxcsetup_list_size() const {
  return e_xingchenxcsetup_list_.size();
}
inline void Sheet_XingchenXcsetup::clear_e_xingchenxcsetup_list() {
  e_xingchenxcsetup_list_.Clear();
}
inline const ::proto_ff::E_XingchenXcsetup& Sheet_XingchenXcsetup::e_xingchenxcsetup_list(int index) const {
  return e_xingchenxcsetup_list_.Get(index);
}
inline ::proto_ff::E_XingchenXcsetup* Sheet_XingchenXcsetup::mutable_e_xingchenxcsetup_list(int index) {
  return e_xingchenxcsetup_list_.Mutable(index);
}
inline ::proto_ff::E_XingchenXcsetup* Sheet_XingchenXcsetup::add_e_xingchenxcsetup_list() {
  return e_xingchenxcsetup_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_XingchenXcsetup >&
Sheet_XingchenXcsetup::e_xingchenxcsetup_list() const {
  return e_xingchenxcsetup_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_XingchenXcsetup >*
Sheet_XingchenXcsetup::mutable_e_xingchenxcsetup_list() {
  return &e_xingchenxcsetup_list_;
}

// -------------------------------------------------------------------

// E_XingchenXcmosaic

// optional int32 m_positionnum = 1;
inline bool E_XingchenXcmosaic::has_m_positionnum() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_XingchenXcmosaic::set_has_m_positionnum() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_XingchenXcmosaic::clear_has_m_positionnum() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_XingchenXcmosaic::clear_m_positionnum() {
  m_positionnum_ = 0;
  clear_has_m_positionnum();
}
inline ::google::protobuf::int32 E_XingchenXcmosaic::m_positionnum() const {
  return m_positionnum_;
}
inline void E_XingchenXcmosaic::set_m_positionnum(::google::protobuf::int32 value) {
  set_has_m_positionnum();
  m_positionnum_ = value;
}

// optional int32 m_positionid = 2;
inline bool E_XingchenXcmosaic::has_m_positionid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_XingchenXcmosaic::set_has_m_positionid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_XingchenXcmosaic::clear_has_m_positionid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_XingchenXcmosaic::clear_m_positionid() {
  m_positionid_ = 0;
  clear_has_m_positionid();
}
inline ::google::protobuf::int32 E_XingchenXcmosaic::m_positionid() const {
  return m_positionid_;
}
inline void E_XingchenXcmosaic::set_m_positionid(::google::protobuf::int32 value) {
  set_has_m_positionid();
  m_positionid_ = value;
}

// optional int32 m_posx = 3;
inline bool E_XingchenXcmosaic::has_m_posx() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void E_XingchenXcmosaic::set_has_m_posx() {
  _has_bits_[0] |= 0x00000004u;
}
inline void E_XingchenXcmosaic::clear_has_m_posx() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void E_XingchenXcmosaic::clear_m_posx() {
  m_posx_ = 0;
  clear_has_m_posx();
}
inline ::google::protobuf::int32 E_XingchenXcmosaic::m_posx() const {
  return m_posx_;
}
inline void E_XingchenXcmosaic::set_m_posx(::google::protobuf::int32 value) {
  set_has_m_posx();
  m_posx_ = value;
}

// optional int32 m_posy = 4;
inline bool E_XingchenXcmosaic::has_m_posy() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void E_XingchenXcmosaic::set_has_m_posy() {
  _has_bits_[0] |= 0x00000008u;
}
inline void E_XingchenXcmosaic::clear_has_m_posy() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void E_XingchenXcmosaic::clear_m_posy() {
  m_posy_ = 0;
  clear_has_m_posy();
}
inline ::google::protobuf::int32 E_XingchenXcmosaic::m_posy() const {
  return m_posy_;
}
inline void E_XingchenXcmosaic::set_m_posy(::google::protobuf::int32 value) {
  set_has_m_posy();
  m_posy_ = value;
}

// optional int32 m_next_posx = 5;
inline bool E_XingchenXcmosaic::has_m_next_posx() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void E_XingchenXcmosaic::set_has_m_next_posx() {
  _has_bits_[0] |= 0x00000010u;
}
inline void E_XingchenXcmosaic::clear_has_m_next_posx() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void E_XingchenXcmosaic::clear_m_next_posx() {
  m_next_posx_ = 0;
  clear_has_m_next_posx();
}
inline ::google::protobuf::int32 E_XingchenXcmosaic::m_next_posx() const {
  return m_next_posx_;
}
inline void E_XingchenXcmosaic::set_m_next_posx(::google::protobuf::int32 value) {
  set_has_m_next_posx();
  m_next_posx_ = value;
}

// optional int32 m_next_posy = 6;
inline bool E_XingchenXcmosaic::has_m_next_posy() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void E_XingchenXcmosaic::set_has_m_next_posy() {
  _has_bits_[0] |= 0x00000020u;
}
inline void E_XingchenXcmosaic::clear_has_m_next_posy() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void E_XingchenXcmosaic::clear_m_next_posy() {
  m_next_posy_ = 0;
  clear_has_m_next_posy();
}
inline ::google::protobuf::int32 E_XingchenXcmosaic::m_next_posy() const {
  return m_next_posy_;
}
inline void E_XingchenXcmosaic::set_m_next_posy(::google::protobuf::int32 value) {
  set_has_m_next_posy();
  m_next_posy_ = value;
}

// -------------------------------------------------------------------

// Sheet_XingchenXcmosaic

// repeated .proto_ff.E_XingchenXcmosaic E_XingchenXcmosaic_List = 1;
inline int Sheet_XingchenXcmosaic::e_xingchenxcmosaic_list_size() const {
  return e_xingchenxcmosaic_list_.size();
}
inline void Sheet_XingchenXcmosaic::clear_e_xingchenxcmosaic_list() {
  e_xingchenxcmosaic_list_.Clear();
}
inline const ::proto_ff::E_XingchenXcmosaic& Sheet_XingchenXcmosaic::e_xingchenxcmosaic_list(int index) const {
  return e_xingchenxcmosaic_list_.Get(index);
}
inline ::proto_ff::E_XingchenXcmosaic* Sheet_XingchenXcmosaic::mutable_e_xingchenxcmosaic_list(int index) {
  return e_xingchenxcmosaic_list_.Mutable(index);
}
inline ::proto_ff::E_XingchenXcmosaic* Sheet_XingchenXcmosaic::add_e_xingchenxcmosaic_list() {
  return e_xingchenxcmosaic_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_XingchenXcmosaic >&
Sheet_XingchenXcmosaic::e_xingchenxcmosaic_list() const {
  return e_xingchenxcmosaic_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_XingchenXcmosaic >*
Sheet_XingchenXcmosaic::mutable_e_xingchenxcmosaic_list() {
  return &e_xingchenxcmosaic_list_;
}

// -------------------------------------------------------------------

// E_XingchenXcmaterialQualityDesc

// optional int32 m_exp = 1;
inline bool E_XingchenXcmaterialQualityDesc::has_m_exp() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_XingchenXcmaterialQualityDesc::set_has_m_exp() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_XingchenXcmaterialQualityDesc::clear_has_m_exp() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_XingchenXcmaterialQualityDesc::clear_m_exp() {
  m_exp_ = 0;
  clear_has_m_exp();
}
inline ::google::protobuf::int32 E_XingchenXcmaterialQualityDesc::m_exp() const {
  return m_exp_;
}
inline void E_XingchenXcmaterialQualityDesc::set_m_exp(::google::protobuf::int32 value) {
  set_has_m_exp();
  m_exp_ = value;
}

// optional int32 m_type = 2;
inline bool E_XingchenXcmaterialQualityDesc::has_m_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_XingchenXcmaterialQualityDesc::set_has_m_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_XingchenXcmaterialQualityDesc::clear_has_m_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_XingchenXcmaterialQualityDesc::clear_m_type() {
  m_type_ = 0;
  clear_has_m_type();
}
inline ::google::protobuf::int32 E_XingchenXcmaterialQualityDesc::m_type() const {
  return m_type_;
}
inline void E_XingchenXcmaterialQualityDesc::set_m_type(::google::protobuf::int32 value) {
  set_has_m_type();
  m_type_ = value;
}

// -------------------------------------------------------------------

// E_XingchenXcmaterial

// optional int32 m_id = 1;
inline bool E_XingchenXcmaterial::has_m_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_XingchenXcmaterial::set_has_m_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_XingchenXcmaterial::clear_has_m_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_XingchenXcmaterial::clear_m_id() {
  m_id_ = 0;
  clear_has_m_id();
}
inline ::google::protobuf::int32 E_XingchenXcmaterial::m_id() const {
  return m_id_;
}
inline void E_XingchenXcmaterial::set_m_id(::google::protobuf::int32 value) {
  set_has_m_id();
  m_id_ = value;
}

// optional int32 m_materialtype = 2;
inline bool E_XingchenXcmaterial::has_m_materialtype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_XingchenXcmaterial::set_has_m_materialtype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_XingchenXcmaterial::clear_has_m_materialtype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_XingchenXcmaterial::clear_m_materialtype() {
  m_materialtype_ = 0;
  clear_has_m_materialtype();
}
inline ::google::protobuf::int32 E_XingchenXcmaterial::m_materialtype() const {
  return m_materialtype_;
}
inline void E_XingchenXcmaterial::set_m_materialtype(::google::protobuf::int32 value) {
  set_has_m_materialtype();
  m_materialtype_ = value;
}

// optional int32 m_functiontype = 3;
inline bool E_XingchenXcmaterial::has_m_functiontype() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void E_XingchenXcmaterial::set_has_m_functiontype() {
  _has_bits_[0] |= 0x00000004u;
}
inline void E_XingchenXcmaterial::clear_has_m_functiontype() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void E_XingchenXcmaterial::clear_m_functiontype() {
  m_functiontype_ = 0;
  clear_has_m_functiontype();
}
inline ::google::protobuf::int32 E_XingchenXcmaterial::m_functiontype() const {
  return m_functiontype_;
}
inline void E_XingchenXcmaterial::set_m_functiontype(::google::protobuf::int32 value) {
  set_has_m_functiontype();
  m_functiontype_ = value;
}

// optional string m_xcposition = 4;
inline bool E_XingchenXcmaterial::has_m_xcposition() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void E_XingchenXcmaterial::set_has_m_xcposition() {
  _has_bits_[0] |= 0x00000008u;
}
inline void E_XingchenXcmaterial::clear_has_m_xcposition() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void E_XingchenXcmaterial::clear_m_xcposition() {
  if (m_xcposition_ != &::google::protobuf::internal::kEmptyString) {
    m_xcposition_->clear();
  }
  clear_has_m_xcposition();
}
inline const ::std::string& E_XingchenXcmaterial::m_xcposition() const {
  return *m_xcposition_;
}
inline void E_XingchenXcmaterial::set_m_xcposition(const ::std::string& value) {
  set_has_m_xcposition();
  if (m_xcposition_ == &::google::protobuf::internal::kEmptyString) {
    m_xcposition_ = new ::std::string;
  }
  m_xcposition_->assign(value);
}
inline void E_XingchenXcmaterial::set_m_xcposition(const char* value) {
  set_has_m_xcposition();
  if (m_xcposition_ == &::google::protobuf::internal::kEmptyString) {
    m_xcposition_ = new ::std::string;
  }
  m_xcposition_->assign(value);
}
inline void E_XingchenXcmaterial::set_m_xcposition(const char* value, size_t size) {
  set_has_m_xcposition();
  if (m_xcposition_ == &::google::protobuf::internal::kEmptyString) {
    m_xcposition_ = new ::std::string;
  }
  m_xcposition_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* E_XingchenXcmaterial::mutable_m_xcposition() {
  set_has_m_xcposition();
  if (m_xcposition_ == &::google::protobuf::internal::kEmptyString) {
    m_xcposition_ = new ::std::string;
  }
  return m_xcposition_;
}
inline ::std::string* E_XingchenXcmaterial::release_m_xcposition() {
  clear_has_m_xcposition();
  if (m_xcposition_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = m_xcposition_;
    m_xcposition_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void E_XingchenXcmaterial::set_allocated_m_xcposition(::std::string* m_xcposition) {
  if (m_xcposition_ != &::google::protobuf::internal::kEmptyString) {
    delete m_xcposition_;
  }
  if (m_xcposition) {
    set_has_m_xcposition();
    m_xcposition_ = m_xcposition;
  } else {
    clear_has_m_xcposition();
    m_xcposition_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 m_itemid = 5;
inline bool E_XingchenXcmaterial::has_m_itemid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void E_XingchenXcmaterial::set_has_m_itemid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void E_XingchenXcmaterial::clear_has_m_itemid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void E_XingchenXcmaterial::clear_m_itemid() {
  m_itemid_ = 0;
  clear_has_m_itemid();
}
inline ::google::protobuf::int32 E_XingchenXcmaterial::m_itemid() const {
  return m_itemid_;
}
inline void E_XingchenXcmaterial::set_m_itemid(::google::protobuf::int32 value) {
  set_has_m_itemid();
  m_itemid_ = value;
}

// optional int32 m_itemexp = 6;
inline bool E_XingchenXcmaterial::has_m_itemexp() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void E_XingchenXcmaterial::set_has_m_itemexp() {
  _has_bits_[0] |= 0x00000020u;
}
inline void E_XingchenXcmaterial::clear_has_m_itemexp() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void E_XingchenXcmaterial::clear_m_itemexp() {
  m_itemexp_ = 0;
  clear_has_m_itemexp();
}
inline ::google::protobuf::int32 E_XingchenXcmaterial::m_itemexp() const {
  return m_itemexp_;
}
inline void E_XingchenXcmaterial::set_m_itemexp(::google::protobuf::int32 value) {
  set_has_m_itemexp();
  m_itemexp_ = value;
}

// repeated .proto_ff.E_XingchenXcmaterialQualityDesc m_quality = 7;
inline int E_XingchenXcmaterial::m_quality_size() const {
  return m_quality_.size();
}
inline void E_XingchenXcmaterial::clear_m_quality() {
  m_quality_.Clear();
}
inline const ::proto_ff::E_XingchenXcmaterialQualityDesc& E_XingchenXcmaterial::m_quality(int index) const {
  return m_quality_.Get(index);
}
inline ::proto_ff::E_XingchenXcmaterialQualityDesc* E_XingchenXcmaterial::mutable_m_quality(int index) {
  return m_quality_.Mutable(index);
}
inline ::proto_ff::E_XingchenXcmaterialQualityDesc* E_XingchenXcmaterial::add_m_quality() {
  return m_quality_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_XingchenXcmaterialQualityDesc >&
E_XingchenXcmaterial::m_quality() const {
  return m_quality_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_XingchenXcmaterialQualityDesc >*
E_XingchenXcmaterial::mutable_m_quality() {
  return &m_quality_;
}

// -------------------------------------------------------------------

// Sheet_XingchenXcmaterial

// repeated .proto_ff.E_XingchenXcmaterial E_XingchenXcmaterial_List = 1;
inline int Sheet_XingchenXcmaterial::e_xingchenxcmaterial_list_size() const {
  return e_xingchenxcmaterial_list_.size();
}
inline void Sheet_XingchenXcmaterial::clear_e_xingchenxcmaterial_list() {
  e_xingchenxcmaterial_list_.Clear();
}
inline const ::proto_ff::E_XingchenXcmaterial& Sheet_XingchenXcmaterial::e_xingchenxcmaterial_list(int index) const {
  return e_xingchenxcmaterial_list_.Get(index);
}
inline ::proto_ff::E_XingchenXcmaterial* Sheet_XingchenXcmaterial::mutable_e_xingchenxcmaterial_list(int index) {
  return e_xingchenxcmaterial_list_.Mutable(index);
}
inline ::proto_ff::E_XingchenXcmaterial* Sheet_XingchenXcmaterial::add_e_xingchenxcmaterial_list() {
  return e_xingchenxcmaterial_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_XingchenXcmaterial >&
Sheet_XingchenXcmaterial::e_xingchenxcmaterial_list() const {
  return e_xingchenxcmaterial_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_XingchenXcmaterial >*
Sheet_XingchenXcmaterial::mutable_e_xingchenxcmaterial_list() {
  return &e_xingchenxcmaterial_list_;
}

// -------------------------------------------------------------------

// E_XingchenXinchenAttributeDesc

// optional int32 m_value = 1;
inline bool E_XingchenXinchenAttributeDesc::has_m_value() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_XingchenXinchenAttributeDesc::set_has_m_value() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_XingchenXinchenAttributeDesc::clear_has_m_value() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_XingchenXinchenAttributeDesc::clear_m_value() {
  m_value_ = 0;
  clear_has_m_value();
}
inline ::google::protobuf::int32 E_XingchenXinchenAttributeDesc::m_value() const {
  return m_value_;
}
inline void E_XingchenXinchenAttributeDesc::set_m_value(::google::protobuf::int32 value) {
  set_has_m_value();
  m_value_ = value;
}

// optional int32 m_type = 2;
inline bool E_XingchenXinchenAttributeDesc::has_m_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_XingchenXinchenAttributeDesc::set_has_m_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_XingchenXinchenAttributeDesc::clear_has_m_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_XingchenXinchenAttributeDesc::clear_m_type() {
  m_type_ = 0;
  clear_has_m_type();
}
inline ::google::protobuf::int32 E_XingchenXinchenAttributeDesc::m_type() const {
  return m_type_;
}
inline void E_XingchenXinchenAttributeDesc::set_m_type(::google::protobuf::int32 value) {
  set_has_m_type();
  m_type_ = value;
}

// -------------------------------------------------------------------

// E_XingchenXinchen

// optional int32 m_xcequip = 1;
inline bool E_XingchenXinchen::has_m_xcequip() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_XingchenXinchen::set_has_m_xcequip() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_XingchenXinchen::clear_has_m_xcequip() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_XingchenXinchen::clear_m_xcequip() {
  m_xcequip_ = 0;
  clear_has_m_xcequip();
}
inline ::google::protobuf::int32 E_XingchenXinchen::m_xcequip() const {
  return m_xcequip_;
}
inline void E_XingchenXinchen::set_m_xcequip(::google::protobuf::int32 value) {
  set_has_m_xcequip();
  m_xcequip_ = value;
}

// repeated .proto_ff.E_XingchenXinchenAttributeDesc m_attribute = 2;
inline int E_XingchenXinchen::m_attribute_size() const {
  return m_attribute_.size();
}
inline void E_XingchenXinchen::clear_m_attribute() {
  m_attribute_.Clear();
}
inline const ::proto_ff::E_XingchenXinchenAttributeDesc& E_XingchenXinchen::m_attribute(int index) const {
  return m_attribute_.Get(index);
}
inline ::proto_ff::E_XingchenXinchenAttributeDesc* E_XingchenXinchen::mutable_m_attribute(int index) {
  return m_attribute_.Mutable(index);
}
inline ::proto_ff::E_XingchenXinchenAttributeDesc* E_XingchenXinchen::add_m_attribute() {
  return m_attribute_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_XingchenXinchenAttributeDesc >&
E_XingchenXinchen::m_attribute() const {
  return m_attribute_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_XingchenXinchenAttributeDesc >*
E_XingchenXinchen::mutable_m_attribute() {
  return &m_attribute_;
}

// -------------------------------------------------------------------

// Sheet_XingchenXinchen

// repeated .proto_ff.E_XingchenXinchen E_XingchenXinchen_List = 1;
inline int Sheet_XingchenXinchen::e_xingchenxinchen_list_size() const {
  return e_xingchenxinchen_list_.size();
}
inline void Sheet_XingchenXinchen::clear_e_xingchenxinchen_list() {
  e_xingchenxinchen_list_.Clear();
}
inline const ::proto_ff::E_XingchenXinchen& Sheet_XingchenXinchen::e_xingchenxinchen_list(int index) const {
  return e_xingchenxinchen_list_.Get(index);
}
inline ::proto_ff::E_XingchenXinchen* Sheet_XingchenXinchen::mutable_e_xingchenxinchen_list(int index) {
  return e_xingchenxinchen_list_.Mutable(index);
}
inline ::proto_ff::E_XingchenXinchen* Sheet_XingchenXinchen::add_e_xingchenxinchen_list() {
  return e_xingchenxinchen_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_XingchenXinchen >&
Sheet_XingchenXinchen::e_xingchenxinchen_list() const {
  return e_xingchenxinchen_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_XingchenXinchen >*
Sheet_XingchenXinchen::mutable_e_xingchenxinchen_list() {
  return &e_xingchenxinchen_list_;
}

// -------------------------------------------------------------------

// E_XingchenXclvatt

// optional int64 m_attid = 1;
inline bool E_XingchenXclvatt::has_m_attid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_XingchenXclvatt::set_has_m_attid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_XingchenXclvatt::clear_has_m_attid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_XingchenXclvatt::clear_m_attid() {
  m_attid_ = GOOGLE_LONGLONG(0);
  clear_has_m_attid();
}
inline ::google::protobuf::int64 E_XingchenXclvatt::m_attid() const {
  return m_attid_;
}
inline void E_XingchenXclvatt::set_m_attid(::google::protobuf::int64 value) {
  set_has_m_attid();
  m_attid_ = value;
}

// repeated int32 m_att = 2;
inline int E_XingchenXclvatt::m_att_size() const {
  return m_att_.size();
}
inline void E_XingchenXclvatt::clear_m_att() {
  m_att_.Clear();
}
inline ::google::protobuf::int32 E_XingchenXclvatt::m_att(int index) const {
  return m_att_.Get(index);
}
inline void E_XingchenXclvatt::set_m_att(int index, ::google::protobuf::int32 value) {
  m_att_.Set(index, value);
}
inline void E_XingchenXclvatt::add_m_att(::google::protobuf::int32 value) {
  m_att_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
E_XingchenXclvatt::m_att() const {
  return m_att_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
E_XingchenXclvatt::mutable_m_att() {
  return &m_att_;
}

// -------------------------------------------------------------------

// Sheet_XingchenXclvatt

// repeated .proto_ff.E_XingchenXclvatt E_XingchenXclvatt_List = 1;
inline int Sheet_XingchenXclvatt::e_xingchenxclvatt_list_size() const {
  return e_xingchenxclvatt_list_.size();
}
inline void Sheet_XingchenXclvatt::clear_e_xingchenxclvatt_list() {
  e_xingchenxclvatt_list_.Clear();
}
inline const ::proto_ff::E_XingchenXclvatt& Sheet_XingchenXclvatt::e_xingchenxclvatt_list(int index) const {
  return e_xingchenxclvatt_list_.Get(index);
}
inline ::proto_ff::E_XingchenXclvatt* Sheet_XingchenXclvatt::mutable_e_xingchenxclvatt_list(int index) {
  return e_xingchenxclvatt_list_.Mutable(index);
}
inline ::proto_ff::E_XingchenXclvatt* Sheet_XingchenXclvatt::add_e_xingchenxclvatt_list() {
  return e_xingchenxclvatt_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_XingchenXclvatt >&
Sheet_XingchenXclvatt::e_xingchenxclvatt_list() const {
  return e_xingchenxclvatt_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_XingchenXclvatt >*
Sheet_XingchenXclvatt::mutable_e_xingchenxclvatt_list() {
  return &e_xingchenxclvatt_list_;
}

// -------------------------------------------------------------------

// E_XingchenXclvexp

// optional int32 m_lv = 1;
inline bool E_XingchenXclvexp::has_m_lv() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_XingchenXclvexp::set_has_m_lv() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_XingchenXclvexp::clear_has_m_lv() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_XingchenXclvexp::clear_m_lv() {
  m_lv_ = 0;
  clear_has_m_lv();
}
inline ::google::protobuf::int32 E_XingchenXclvexp::m_lv() const {
  return m_lv_;
}
inline void E_XingchenXclvexp::set_m_lv(::google::protobuf::int32 value) {
  set_has_m_lv();
  m_lv_ = value;
}

// optional int32 m_exp = 2;
inline bool E_XingchenXclvexp::has_m_exp() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_XingchenXclvexp::set_has_m_exp() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_XingchenXclvexp::clear_has_m_exp() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_XingchenXclvexp::clear_m_exp() {
  m_exp_ = 0;
  clear_has_m_exp();
}
inline ::google::protobuf::int32 E_XingchenXclvexp::m_exp() const {
  return m_exp_;
}
inline void E_XingchenXclvexp::set_m_exp(::google::protobuf::int32 value) {
  set_has_m_exp();
  m_exp_ = value;
}

// -------------------------------------------------------------------

// Sheet_XingchenXclvexp

// repeated .proto_ff.E_XingchenXclvexp E_XingchenXclvexp_List = 1;
inline int Sheet_XingchenXclvexp::e_xingchenxclvexp_list_size() const {
  return e_xingchenxclvexp_list_.size();
}
inline void Sheet_XingchenXclvexp::clear_e_xingchenxclvexp_list() {
  e_xingchenxclvexp_list_.Clear();
}
inline const ::proto_ff::E_XingchenXclvexp& Sheet_XingchenXclvexp::e_xingchenxclvexp_list(int index) const {
  return e_xingchenxclvexp_list_.Get(index);
}
inline ::proto_ff::E_XingchenXclvexp* Sheet_XingchenXclvexp::mutable_e_xingchenxclvexp_list(int index) {
  return e_xingchenxclvexp_list_.Mutable(index);
}
inline ::proto_ff::E_XingchenXclvexp* Sheet_XingchenXclvexp::add_e_xingchenxclvexp_list() {
  return e_xingchenxclvexp_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_XingchenXclvexp >&
Sheet_XingchenXclvexp::e_xingchenxclvexp_list() const {
  return e_xingchenxclvexp_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_XingchenXclvexp >*
Sheet_XingchenXclvexp::mutable_e_xingchenxclvexp_list() {
  return &e_xingchenxclvexp_list_;
}

// -------------------------------------------------------------------

// E_XingchenXctpTpDesc

// optional int32 m_value = 1;
inline bool E_XingchenXctpTpDesc::has_m_value() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_XingchenXctpTpDesc::set_has_m_value() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_XingchenXctpTpDesc::clear_has_m_value() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_XingchenXctpTpDesc::clear_m_value() {
  m_value_ = 0;
  clear_has_m_value();
}
inline ::google::protobuf::int32 E_XingchenXctpTpDesc::m_value() const {
  return m_value_;
}
inline void E_XingchenXctpTpDesc::set_m_value(::google::protobuf::int32 value) {
  set_has_m_value();
  m_value_ = value;
}

// optional int32 m_type = 2;
inline bool E_XingchenXctpTpDesc::has_m_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_XingchenXctpTpDesc::set_has_m_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_XingchenXctpTpDesc::clear_has_m_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_XingchenXctpTpDesc::clear_m_type() {
  m_type_ = 0;
  clear_has_m_type();
}
inline ::google::protobuf::int32 E_XingchenXctpTpDesc::m_type() const {
  return m_type_;
}
inline void E_XingchenXctpTpDesc::set_m_type(::google::protobuf::int32 value) {
  set_has_m_type();
  m_type_ = value;
}

// -------------------------------------------------------------------

// E_XingchenXctp

// optional int32 m_id = 1;
inline bool E_XingchenXctp::has_m_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_XingchenXctp::set_has_m_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_XingchenXctp::clear_has_m_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_XingchenXctp::clear_m_id() {
  m_id_ = 0;
  clear_has_m_id();
}
inline ::google::protobuf::int32 E_XingchenXctp::m_id() const {
  return m_id_;
}
inline void E_XingchenXctp::set_m_id(::google::protobuf::int32 value) {
  set_has_m_id();
  m_id_ = value;
}

// optional int32 m_positionid = 2;
inline bool E_XingchenXctp::has_m_positionid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_XingchenXctp::set_has_m_positionid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_XingchenXctp::clear_has_m_positionid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_XingchenXctp::clear_m_positionid() {
  m_positionid_ = 0;
  clear_has_m_positionid();
}
inline ::google::protobuf::int32 E_XingchenXctp::m_positionid() const {
  return m_positionid_;
}
inline void E_XingchenXctp::set_m_positionid(::google::protobuf::int32 value) {
  set_has_m_positionid();
  m_positionid_ = value;
}

// optional int32 m_xcquality = 3;
inline bool E_XingchenXctp::has_m_xcquality() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void E_XingchenXctp::set_has_m_xcquality() {
  _has_bits_[0] |= 0x00000004u;
}
inline void E_XingchenXctp::clear_has_m_xcquality() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void E_XingchenXctp::clear_m_xcquality() {
  m_xcquality_ = 0;
  clear_has_m_xcquality();
}
inline ::google::protobuf::int32 E_XingchenXctp::m_xcquality() const {
  return m_xcquality_;
}
inline void E_XingchenXctp::set_m_xcquality(::google::protobuf::int32 value) {
  set_has_m_xcquality();
  m_xcquality_ = value;
}

// optional int32 m_xclvmax = 4;
inline bool E_XingchenXctp::has_m_xclvmax() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void E_XingchenXctp::set_has_m_xclvmax() {
  _has_bits_[0] |= 0x00000008u;
}
inline void E_XingchenXctp::clear_has_m_xclvmax() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void E_XingchenXctp::clear_m_xclvmax() {
  m_xclvmax_ = 0;
  clear_has_m_xclvmax();
}
inline ::google::protobuf::int32 E_XingchenXctp::m_xclvmax() const {
  return m_xclvmax_;
}
inline void E_XingchenXctp::set_m_xclvmax(::google::protobuf::int32 value) {
  set_has_m_xclvmax();
  m_xclvmax_ = value;
}

// repeated .proto_ff.E_XingchenXctpTpDesc m_tp = 5;
inline int E_XingchenXctp::m_tp_size() const {
  return m_tp_.size();
}
inline void E_XingchenXctp::clear_m_tp() {
  m_tp_.Clear();
}
inline const ::proto_ff::E_XingchenXctpTpDesc& E_XingchenXctp::m_tp(int index) const {
  return m_tp_.Get(index);
}
inline ::proto_ff::E_XingchenXctpTpDesc* E_XingchenXctp::mutable_m_tp(int index) {
  return m_tp_.Mutable(index);
}
inline ::proto_ff::E_XingchenXctpTpDesc* E_XingchenXctp::add_m_tp() {
  return m_tp_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_XingchenXctpTpDesc >&
E_XingchenXctp::m_tp() const {
  return m_tp_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_XingchenXctpTpDesc >*
E_XingchenXctp::mutable_m_tp() {
  return &m_tp_;
}

// repeated int32 m_attr = 6;
inline int E_XingchenXctp::m_attr_size() const {
  return m_attr_.size();
}
inline void E_XingchenXctp::clear_m_attr() {
  m_attr_.Clear();
}
inline ::google::protobuf::int32 E_XingchenXctp::m_attr(int index) const {
  return m_attr_.Get(index);
}
inline void E_XingchenXctp::set_m_attr(int index, ::google::protobuf::int32 value) {
  m_attr_.Set(index, value);
}
inline void E_XingchenXctp::add_m_attr(::google::protobuf::int32 value) {
  m_attr_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
E_XingchenXctp::m_attr() const {
  return m_attr_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
E_XingchenXctp::mutable_m_attr() {
  return &m_attr_;
}

// -------------------------------------------------------------------

// Sheet_XingchenXctp

// repeated .proto_ff.E_XingchenXctp E_XingchenXctp_List = 1;
inline int Sheet_XingchenXctp::e_xingchenxctp_list_size() const {
  return e_xingchenxctp_list_.size();
}
inline void Sheet_XingchenXctp::clear_e_xingchenxctp_list() {
  e_xingchenxctp_list_.Clear();
}
inline const ::proto_ff::E_XingchenXctp& Sheet_XingchenXctp::e_xingchenxctp_list(int index) const {
  return e_xingchenxctp_list_.Get(index);
}
inline ::proto_ff::E_XingchenXctp* Sheet_XingchenXctp::mutable_e_xingchenxctp_list(int index) {
  return e_xingchenxctp_list_.Mutable(index);
}
inline ::proto_ff::E_XingchenXctp* Sheet_XingchenXctp::add_e_xingchenxctp_list() {
  return e_xingchenxctp_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_XingchenXctp >&
Sheet_XingchenXctp::e_xingchenxctp_list() const {
  return e_xingchenxctp_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_XingchenXctp >*
Sheet_XingchenXctp::mutable_e_xingchenxctp_list() {
  return &e_xingchenxctp_list_;
}

// -------------------------------------------------------------------

// E_XingchenXctpexp

// optional int32 m_lv = 1;
inline bool E_XingchenXctpexp::has_m_lv() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_XingchenXctpexp::set_has_m_lv() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_XingchenXctpexp::clear_has_m_lv() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_XingchenXctpexp::clear_m_lv() {
  m_lv_ = 0;
  clear_has_m_lv();
}
inline ::google::protobuf::int32 E_XingchenXctpexp::m_lv() const {
  return m_lv_;
}
inline void E_XingchenXctpexp::set_m_lv(::google::protobuf::int32 value) {
  set_has_m_lv();
  m_lv_ = value;
}

// optional string m_lvdisplay = 2;
inline bool E_XingchenXctpexp::has_m_lvdisplay() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_XingchenXctpexp::set_has_m_lvdisplay() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_XingchenXctpexp::clear_has_m_lvdisplay() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_XingchenXctpexp::clear_m_lvdisplay() {
  if (m_lvdisplay_ != &::google::protobuf::internal::kEmptyString) {
    m_lvdisplay_->clear();
  }
  clear_has_m_lvdisplay();
}
inline const ::std::string& E_XingchenXctpexp::m_lvdisplay() const {
  return *m_lvdisplay_;
}
inline void E_XingchenXctpexp::set_m_lvdisplay(const ::std::string& value) {
  set_has_m_lvdisplay();
  if (m_lvdisplay_ == &::google::protobuf::internal::kEmptyString) {
    m_lvdisplay_ = new ::std::string;
  }
  m_lvdisplay_->assign(value);
}
inline void E_XingchenXctpexp::set_m_lvdisplay(const char* value) {
  set_has_m_lvdisplay();
  if (m_lvdisplay_ == &::google::protobuf::internal::kEmptyString) {
    m_lvdisplay_ = new ::std::string;
  }
  m_lvdisplay_->assign(value);
}
inline void E_XingchenXctpexp::set_m_lvdisplay(const char* value, size_t size) {
  set_has_m_lvdisplay();
  if (m_lvdisplay_ == &::google::protobuf::internal::kEmptyString) {
    m_lvdisplay_ = new ::std::string;
  }
  m_lvdisplay_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* E_XingchenXctpexp::mutable_m_lvdisplay() {
  set_has_m_lvdisplay();
  if (m_lvdisplay_ == &::google::protobuf::internal::kEmptyString) {
    m_lvdisplay_ = new ::std::string;
  }
  return m_lvdisplay_;
}
inline ::std::string* E_XingchenXctpexp::release_m_lvdisplay() {
  clear_has_m_lvdisplay();
  if (m_lvdisplay_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = m_lvdisplay_;
    m_lvdisplay_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void E_XingchenXctpexp::set_allocated_m_lvdisplay(::std::string* m_lvdisplay) {
  if (m_lvdisplay_ != &::google::protobuf::internal::kEmptyString) {
    delete m_lvdisplay_;
  }
  if (m_lvdisplay) {
    set_has_m_lvdisplay();
    m_lvdisplay_ = m_lvdisplay;
  } else {
    clear_has_m_lvdisplay();
    m_lvdisplay_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 m_exp = 3;
inline bool E_XingchenXctpexp::has_m_exp() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void E_XingchenXctpexp::set_has_m_exp() {
  _has_bits_[0] |= 0x00000004u;
}
inline void E_XingchenXctpexp::clear_has_m_exp() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void E_XingchenXctpexp::clear_m_exp() {
  m_exp_ = 0;
  clear_has_m_exp();
}
inline ::google::protobuf::int32 E_XingchenXctpexp::m_exp() const {
  return m_exp_;
}
inline void E_XingchenXctpexp::set_m_exp(::google::protobuf::int32 value) {
  set_has_m_exp();
  m_exp_ = value;
}

// -------------------------------------------------------------------

// Sheet_XingchenXctpexp

// repeated .proto_ff.E_XingchenXctpexp E_XingchenXctpexp_List = 1;
inline int Sheet_XingchenXctpexp::e_xingchenxctpexp_list_size() const {
  return e_xingchenxctpexp_list_.size();
}
inline void Sheet_XingchenXctpexp::clear_e_xingchenxctpexp_list() {
  e_xingchenxctpexp_list_.Clear();
}
inline const ::proto_ff::E_XingchenXctpexp& Sheet_XingchenXctpexp::e_xingchenxctpexp_list(int index) const {
  return e_xingchenxctpexp_list_.Get(index);
}
inline ::proto_ff::E_XingchenXctpexp* Sheet_XingchenXctpexp::mutable_e_xingchenxctpexp_list(int index) {
  return e_xingchenxctpexp_list_.Mutable(index);
}
inline ::proto_ff::E_XingchenXctpexp* Sheet_XingchenXctpexp::add_e_xingchenxctpexp_list() {
  return e_xingchenxctpexp_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_XingchenXctpexp >&
Sheet_XingchenXctpexp::e_xingchenxctpexp_list() const {
  return e_xingchenxctpexp_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_XingchenXctpexp >*
Sheet_XingchenXctpexp::mutable_e_xingchenxctpexp_list() {
  return &e_xingchenxctpexp_list_;
}

// -------------------------------------------------------------------

// E_XingchenXctpaddi

// optional int64 m_id = 1;
inline bool E_XingchenXctpaddi::has_m_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_XingchenXctpaddi::set_has_m_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_XingchenXctpaddi::clear_has_m_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_XingchenXctpaddi::clear_m_id() {
  m_id_ = GOOGLE_LONGLONG(0);
  clear_has_m_id();
}
inline ::google::protobuf::int64 E_XingchenXctpaddi::m_id() const {
  return m_id_;
}
inline void E_XingchenXctpaddi::set_m_id(::google::protobuf::int64 value) {
  set_has_m_id();
  m_id_ = value;
}

// optional int64 m_attid = 2;
inline bool E_XingchenXctpaddi::has_m_attid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_XingchenXctpaddi::set_has_m_attid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_XingchenXctpaddi::clear_has_m_attid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_XingchenXctpaddi::clear_m_attid() {
  m_attid_ = GOOGLE_LONGLONG(0);
  clear_has_m_attid();
}
inline ::google::protobuf::int64 E_XingchenXctpaddi::m_attid() const {
  return m_attid_;
}
inline void E_XingchenXctpaddi::set_m_attid(::google::protobuf::int64 value) {
  set_has_m_attid();
  m_attid_ = value;
}

// optional int32 m_count = 3;
inline bool E_XingchenXctpaddi::has_m_count() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void E_XingchenXctpaddi::set_has_m_count() {
  _has_bits_[0] |= 0x00000004u;
}
inline void E_XingchenXctpaddi::clear_has_m_count() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void E_XingchenXctpaddi::clear_m_count() {
  m_count_ = 0;
  clear_has_m_count();
}
inline ::google::protobuf::int32 E_XingchenXctpaddi::m_count() const {
  return m_count_;
}
inline void E_XingchenXctpaddi::set_m_count(::google::protobuf::int32 value) {
  set_has_m_count();
  m_count_ = value;
}

// optional int32 m_atttype = 4;
inline bool E_XingchenXctpaddi::has_m_atttype() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void E_XingchenXctpaddi::set_has_m_atttype() {
  _has_bits_[0] |= 0x00000008u;
}
inline void E_XingchenXctpaddi::clear_has_m_atttype() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void E_XingchenXctpaddi::clear_m_atttype() {
  m_atttype_ = 0;
  clear_has_m_atttype();
}
inline ::google::protobuf::int32 E_XingchenXctpaddi::m_atttype() const {
  return m_atttype_;
}
inline void E_XingchenXctpaddi::set_m_atttype(::google::protobuf::int32 value) {
  set_has_m_atttype();
  m_atttype_ = value;
}

// optional int32 m_att = 5;
inline bool E_XingchenXctpaddi::has_m_att() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void E_XingchenXctpaddi::set_has_m_att() {
  _has_bits_[0] |= 0x00000010u;
}
inline void E_XingchenXctpaddi::clear_has_m_att() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void E_XingchenXctpaddi::clear_m_att() {
  m_att_ = 0;
  clear_has_m_att();
}
inline ::google::protobuf::int32 E_XingchenXctpaddi::m_att() const {
  return m_att_;
}
inline void E_XingchenXctpaddi::set_m_att(::google::protobuf::int32 value) {
  set_has_m_att();
  m_att_ = value;
}

// -------------------------------------------------------------------

// Sheet_XingchenXctpaddi

// repeated .proto_ff.E_XingchenXctpaddi E_XingchenXctpaddi_List = 1;
inline int Sheet_XingchenXctpaddi::e_xingchenxctpaddi_list_size() const {
  return e_xingchenxctpaddi_list_.size();
}
inline void Sheet_XingchenXctpaddi::clear_e_xingchenxctpaddi_list() {
  e_xingchenxctpaddi_list_.Clear();
}
inline const ::proto_ff::E_XingchenXctpaddi& Sheet_XingchenXctpaddi::e_xingchenxctpaddi_list(int index) const {
  return e_xingchenxctpaddi_list_.Get(index);
}
inline ::proto_ff::E_XingchenXctpaddi* Sheet_XingchenXctpaddi::mutable_e_xingchenxctpaddi_list(int index) {
  return e_xingchenxctpaddi_list_.Mutable(index);
}
inline ::proto_ff::E_XingchenXctpaddi* Sheet_XingchenXctpaddi::add_e_xingchenxctpaddi_list() {
  return e_xingchenxctpaddi_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_XingchenXctpaddi >&
Sheet_XingchenXctpaddi::e_xingchenxctpaddi_list() const {
  return e_xingchenxctpaddi_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_XingchenXctpaddi >*
Sheet_XingchenXctpaddi::mutable_e_xingchenxctpaddi_list() {
  return &e_xingchenxctpaddi_list_;
}

// -------------------------------------------------------------------

// E_XingchenXctpatt

// optional int64 m_attid = 1;
inline bool E_XingchenXctpatt::has_m_attid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_XingchenXctpatt::set_has_m_attid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_XingchenXctpatt::clear_has_m_attid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_XingchenXctpatt::clear_m_attid() {
  m_attid_ = GOOGLE_LONGLONG(0);
  clear_has_m_attid();
}
inline ::google::protobuf::int64 E_XingchenXctpatt::m_attid() const {
  return m_attid_;
}
inline void E_XingchenXctpatt::set_m_attid(::google::protobuf::int64 value) {
  set_has_m_attid();
  m_attid_ = value;
}

// repeated int32 m_att = 2;
inline int E_XingchenXctpatt::m_att_size() const {
  return m_att_.size();
}
inline void E_XingchenXctpatt::clear_m_att() {
  m_att_.Clear();
}
inline ::google::protobuf::int32 E_XingchenXctpatt::m_att(int index) const {
  return m_att_.Get(index);
}
inline void E_XingchenXctpatt::set_m_att(int index, ::google::protobuf::int32 value) {
  m_att_.Set(index, value);
}
inline void E_XingchenXctpatt::add_m_att(::google::protobuf::int32 value) {
  m_att_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
E_XingchenXctpatt::m_att() const {
  return m_att_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
E_XingchenXctpatt::mutable_m_att() {
  return &m_att_;
}

// -------------------------------------------------------------------

// Sheet_XingchenXctpatt

// repeated .proto_ff.E_XingchenXctpatt E_XingchenXctpatt_List = 1;
inline int Sheet_XingchenXctpatt::e_xingchenxctpatt_list_size() const {
  return e_xingchenxctpatt_list_.size();
}
inline void Sheet_XingchenXctpatt::clear_e_xingchenxctpatt_list() {
  e_xingchenxctpatt_list_.Clear();
}
inline const ::proto_ff::E_XingchenXctpatt& Sheet_XingchenXctpatt::e_xingchenxctpatt_list(int index) const {
  return e_xingchenxctpatt_list_.Get(index);
}
inline ::proto_ff::E_XingchenXctpatt* Sheet_XingchenXctpatt::mutable_e_xingchenxctpatt_list(int index) {
  return e_xingchenxctpatt_list_.Mutable(index);
}
inline ::proto_ff::E_XingchenXctpatt* Sheet_XingchenXctpatt::add_e_xingchenxctpatt_list() {
  return e_xingchenxctpatt_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_XingchenXctpatt >&
Sheet_XingchenXctpatt::e_xingchenxctpatt_list() const {
  return e_xingchenxctpatt_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_XingchenXctpatt >*
Sheet_XingchenXctpatt::mutable_e_xingchenxctpatt_list() {
  return &e_xingchenxctpatt_list_;
}

// -------------------------------------------------------------------

// E_XingchenXcstarAttributeDesc

// optional int32 m_value = 1;
inline bool E_XingchenXcstarAttributeDesc::has_m_value() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_XingchenXcstarAttributeDesc::set_has_m_value() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_XingchenXcstarAttributeDesc::clear_has_m_value() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_XingchenXcstarAttributeDesc::clear_m_value() {
  m_value_ = 0;
  clear_has_m_value();
}
inline ::google::protobuf::int32 E_XingchenXcstarAttributeDesc::m_value() const {
  return m_value_;
}
inline void E_XingchenXcstarAttributeDesc::set_m_value(::google::protobuf::int32 value) {
  set_has_m_value();
  m_value_ = value;
}

// optional int32 m_type = 2;
inline bool E_XingchenXcstarAttributeDesc::has_m_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_XingchenXcstarAttributeDesc::set_has_m_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_XingchenXcstarAttributeDesc::clear_has_m_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_XingchenXcstarAttributeDesc::clear_m_type() {
  m_type_ = 0;
  clear_has_m_type();
}
inline ::google::protobuf::int32 E_XingchenXcstarAttributeDesc::m_type() const {
  return m_type_;
}
inline void E_XingchenXcstarAttributeDesc::set_m_type(::google::protobuf::int32 value) {
  set_has_m_type();
  m_type_ = value;
}

// -------------------------------------------------------------------

// E_XingchenXcstar

// optional int32 m_starlv = 1;
inline bool E_XingchenXcstar::has_m_starlv() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_XingchenXcstar::set_has_m_starlv() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_XingchenXcstar::clear_has_m_starlv() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_XingchenXcstar::clear_m_starlv() {
  m_starlv_ = 0;
  clear_has_m_starlv();
}
inline ::google::protobuf::int32 E_XingchenXcstar::m_starlv() const {
  return m_starlv_;
}
inline void E_XingchenXcstar::set_m_starlv(::google::protobuf::int32 value) {
  set_has_m_starlv();
  m_starlv_ = value;
}

// optional int32 m_id = 2;
inline bool E_XingchenXcstar::has_m_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_XingchenXcstar::set_has_m_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_XingchenXcstar::clear_has_m_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_XingchenXcstar::clear_m_id() {
  m_id_ = 0;
  clear_has_m_id();
}
inline ::google::protobuf::int32 E_XingchenXcstar::m_id() const {
  return m_id_;
}
inline void E_XingchenXcstar::set_m_id(::google::protobuf::int32 value) {
  set_has_m_id();
  m_id_ = value;
}

// repeated .proto_ff.E_XingchenXcstarAttributeDesc m_attribute = 3;
inline int E_XingchenXcstar::m_attribute_size() const {
  return m_attribute_.size();
}
inline void E_XingchenXcstar::clear_m_attribute() {
  m_attribute_.Clear();
}
inline const ::proto_ff::E_XingchenXcstarAttributeDesc& E_XingchenXcstar::m_attribute(int index) const {
  return m_attribute_.Get(index);
}
inline ::proto_ff::E_XingchenXcstarAttributeDesc* E_XingchenXcstar::mutable_m_attribute(int index) {
  return m_attribute_.Mutable(index);
}
inline ::proto_ff::E_XingchenXcstarAttributeDesc* E_XingchenXcstar::add_m_attribute() {
  return m_attribute_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_XingchenXcstarAttributeDesc >&
E_XingchenXcstar::m_attribute() const {
  return m_attribute_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_XingchenXcstarAttributeDesc >*
E_XingchenXcstar::mutable_m_attribute() {
  return &m_attribute_;
}

// -------------------------------------------------------------------

// Sheet_XingchenXcstar

// repeated .proto_ff.E_XingchenXcstar E_XingchenXcstar_List = 1;
inline int Sheet_XingchenXcstar::e_xingchenxcstar_list_size() const {
  return e_xingchenxcstar_list_.size();
}
inline void Sheet_XingchenXcstar::clear_e_xingchenxcstar_list() {
  e_xingchenxcstar_list_.Clear();
}
inline const ::proto_ff::E_XingchenXcstar& Sheet_XingchenXcstar::e_xingchenxcstar_list(int index) const {
  return e_xingchenxcstar_list_.Get(index);
}
inline ::proto_ff::E_XingchenXcstar* Sheet_XingchenXcstar::mutable_e_xingchenxcstar_list(int index) {
  return e_xingchenxcstar_list_.Mutable(index);
}
inline ::proto_ff::E_XingchenXcstar* Sheet_XingchenXcstar::add_e_xingchenxcstar_list() {
  return e_xingchenxcstar_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_XingchenXcstar >&
Sheet_XingchenXcstar::e_xingchenxcstar_list() const {
  return e_xingchenxcstar_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_XingchenXcstar >*
Sheet_XingchenXcstar::mutable_e_xingchenxcstar_list() {
  return &e_xingchenxcstar_list_;
}

// -------------------------------------------------------------------

// E_XingchenXcawakenAwakenDesc

// optional int32 m_tpaddratio = 1;
inline bool E_XingchenXcawakenAwakenDesc::has_m_tpaddratio() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_XingchenXcawakenAwakenDesc::set_has_m_tpaddratio() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_XingchenXcawakenAwakenDesc::clear_has_m_tpaddratio() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_XingchenXcawakenAwakenDesc::clear_m_tpaddratio() {
  m_tpaddratio_ = 0;
  clear_has_m_tpaddratio();
}
inline ::google::protobuf::int32 E_XingchenXcawakenAwakenDesc::m_tpaddratio() const {
  return m_tpaddratio_;
}
inline void E_XingchenXcawakenAwakenDesc::set_m_tpaddratio(::google::protobuf::int32 value) {
  set_has_m_tpaddratio();
  m_tpaddratio_ = value;
}

// optional int32 m_lvaddratio = 2;
inline bool E_XingchenXcawakenAwakenDesc::has_m_lvaddratio() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_XingchenXcawakenAwakenDesc::set_has_m_lvaddratio() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_XingchenXcawakenAwakenDesc::clear_has_m_lvaddratio() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_XingchenXcawakenAwakenDesc::clear_m_lvaddratio() {
  m_lvaddratio_ = 0;
  clear_has_m_lvaddratio();
}
inline ::google::protobuf::int32 E_XingchenXcawakenAwakenDesc::m_lvaddratio() const {
  return m_lvaddratio_;
}
inline void E_XingchenXcawakenAwakenDesc::set_m_lvaddratio(::google::protobuf::int32 value) {
  set_has_m_lvaddratio();
  m_lvaddratio_ = value;
}

// optional int32 m_num = 3;
inline bool E_XingchenXcawakenAwakenDesc::has_m_num() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void E_XingchenXcawakenAwakenDesc::set_has_m_num() {
  _has_bits_[0] |= 0x00000004u;
}
inline void E_XingchenXcawakenAwakenDesc::clear_has_m_num() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void E_XingchenXcawakenAwakenDesc::clear_m_num() {
  m_num_ = 0;
  clear_has_m_num();
}
inline ::google::protobuf::int32 E_XingchenXcawakenAwakenDesc::m_num() const {
  return m_num_;
}
inline void E_XingchenXcawakenAwakenDesc::set_m_num(::google::protobuf::int32 value) {
  set_has_m_num();
  m_num_ = value;
}

// -------------------------------------------------------------------

// E_XingchenXcawaken

// optional int32 m_positionnum = 1;
inline bool E_XingchenXcawaken::has_m_positionnum() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_XingchenXcawaken::set_has_m_positionnum() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_XingchenXcawaken::clear_has_m_positionnum() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_XingchenXcawaken::clear_m_positionnum() {
  m_positionnum_ = 0;
  clear_has_m_positionnum();
}
inline ::google::protobuf::int32 E_XingchenXcawaken::m_positionnum() const {
  return m_positionnum_;
}
inline void E_XingchenXcawaken::set_m_positionnum(::google::protobuf::int32 value) {
  set_has_m_positionnum();
  m_positionnum_ = value;
}

// optional int32 m_positionid = 2;
inline bool E_XingchenXcawaken::has_m_positionid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_XingchenXcawaken::set_has_m_positionid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_XingchenXcawaken::clear_has_m_positionid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_XingchenXcawaken::clear_m_positionid() {
  m_positionid_ = 0;
  clear_has_m_positionid();
}
inline ::google::protobuf::int32 E_XingchenXcawaken::m_positionid() const {
  return m_positionid_;
}
inline void E_XingchenXcawaken::set_m_positionid(::google::protobuf::int32 value) {
  set_has_m_positionid();
  m_positionid_ = value;
}

// optional int32 m_awaken_quality = 3;
inline bool E_XingchenXcawaken::has_m_awaken_quality() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void E_XingchenXcawaken::set_has_m_awaken_quality() {
  _has_bits_[0] |= 0x00000004u;
}
inline void E_XingchenXcawaken::clear_has_m_awaken_quality() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void E_XingchenXcawaken::clear_m_awaken_quality() {
  m_awaken_quality_ = 0;
  clear_has_m_awaken_quality();
}
inline ::google::protobuf::int32 E_XingchenXcawaken::m_awaken_quality() const {
  return m_awaken_quality_;
}
inline void E_XingchenXcawaken::set_m_awaken_quality(::google::protobuf::int32 value) {
  set_has_m_awaken_quality();
  m_awaken_quality_ = value;
}

// optional int32 m_awaken_lvmax = 4;
inline bool E_XingchenXcawaken::has_m_awaken_lvmax() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void E_XingchenXcawaken::set_has_m_awaken_lvmax() {
  _has_bits_[0] |= 0x00000008u;
}
inline void E_XingchenXcawaken::clear_has_m_awaken_lvmax() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void E_XingchenXcawaken::clear_m_awaken_lvmax() {
  m_awaken_lvmax_ = 0;
  clear_has_m_awaken_lvmax();
}
inline ::google::protobuf::int32 E_XingchenXcawaken::m_awaken_lvmax() const {
  return m_awaken_lvmax_;
}
inline void E_XingchenXcawaken::set_m_awaken_lvmax(::google::protobuf::int32 value) {
  set_has_m_awaken_lvmax();
  m_awaken_lvmax_ = value;
}

// optional int32 m_awaken_item = 5;
inline bool E_XingchenXcawaken::has_m_awaken_item() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void E_XingchenXcawaken::set_has_m_awaken_item() {
  _has_bits_[0] |= 0x00000010u;
}
inline void E_XingchenXcawaken::clear_has_m_awaken_item() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void E_XingchenXcawaken::clear_m_awaken_item() {
  m_awaken_item_ = 0;
  clear_has_m_awaken_item();
}
inline ::google::protobuf::int32 E_XingchenXcawaken::m_awaken_item() const {
  return m_awaken_item_;
}
inline void E_XingchenXcawaken::set_m_awaken_item(::google::protobuf::int32 value) {
  set_has_m_awaken_item();
  m_awaken_item_ = value;
}

// repeated .proto_ff.E_XingchenXcawakenAwakenDesc m_awaken = 6;
inline int E_XingchenXcawaken::m_awaken_size() const {
  return m_awaken_.size();
}
inline void E_XingchenXcawaken::clear_m_awaken() {
  m_awaken_.Clear();
}
inline const ::proto_ff::E_XingchenXcawakenAwakenDesc& E_XingchenXcawaken::m_awaken(int index) const {
  return m_awaken_.Get(index);
}
inline ::proto_ff::E_XingchenXcawakenAwakenDesc* E_XingchenXcawaken::mutable_m_awaken(int index) {
  return m_awaken_.Mutable(index);
}
inline ::proto_ff::E_XingchenXcawakenAwakenDesc* E_XingchenXcawaken::add_m_awaken() {
  return m_awaken_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_XingchenXcawakenAwakenDesc >&
E_XingchenXcawaken::m_awaken() const {
  return m_awaken_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_XingchenXcawakenAwakenDesc >*
E_XingchenXcawaken::mutable_m_awaken() {
  return &m_awaken_;
}

// -------------------------------------------------------------------

// Sheet_XingchenXcawaken

// repeated .proto_ff.E_XingchenXcawaken E_XingchenXcawaken_List = 1;
inline int Sheet_XingchenXcawaken::e_xingchenxcawaken_list_size() const {
  return e_xingchenxcawaken_list_.size();
}
inline void Sheet_XingchenXcawaken::clear_e_xingchenxcawaken_list() {
  e_xingchenxcawaken_list_.Clear();
}
inline const ::proto_ff::E_XingchenXcawaken& Sheet_XingchenXcawaken::e_xingchenxcawaken_list(int index) const {
  return e_xingchenxcawaken_list_.Get(index);
}
inline ::proto_ff::E_XingchenXcawaken* Sheet_XingchenXcawaken::mutable_e_xingchenxcawaken_list(int index) {
  return e_xingchenxcawaken_list_.Mutable(index);
}
inline ::proto_ff::E_XingchenXcawaken* Sheet_XingchenXcawaken::add_e_xingchenxcawaken_list() {
  return e_xingchenxcawaken_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_XingchenXcawaken >&
Sheet_XingchenXcawaken::e_xingchenxcawaken_list() const {
  return e_xingchenxcawaken_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_XingchenXcawaken >*
Sheet_XingchenXcawaken::mutable_e_xingchenxcawaken_list() {
  return &e_xingchenxcawaken_list_;
}

// -------------------------------------------------------------------

// E_XingchenXcmagicalHhDesc

// optional int32 m_value = 1;
inline bool E_XingchenXcmagicalHhDesc::has_m_value() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_XingchenXcmagicalHhDesc::set_has_m_value() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_XingchenXcmagicalHhDesc::clear_has_m_value() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_XingchenXcmagicalHhDesc::clear_m_value() {
  m_value_ = 0;
  clear_has_m_value();
}
inline ::google::protobuf::int32 E_XingchenXcmagicalHhDesc::m_value() const {
  return m_value_;
}
inline void E_XingchenXcmagicalHhDesc::set_m_value(::google::protobuf::int32 value) {
  set_has_m_value();
  m_value_ = value;
}

// optional int32 m_type = 2;
inline bool E_XingchenXcmagicalHhDesc::has_m_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_XingchenXcmagicalHhDesc::set_has_m_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_XingchenXcmagicalHhDesc::clear_has_m_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_XingchenXcmagicalHhDesc::clear_m_type() {
  m_type_ = 0;
  clear_has_m_type();
}
inline ::google::protobuf::int32 E_XingchenXcmagicalHhDesc::m_type() const {
  return m_type_;
}
inline void E_XingchenXcmagicalHhDesc::set_m_type(::google::protobuf::int32 value) {
  set_has_m_type();
  m_type_ = value;
}

// -------------------------------------------------------------------

// E_XingchenXcmagical

// optional int32 m_id = 1;
inline bool E_XingchenXcmagical::has_m_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_XingchenXcmagical::set_has_m_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_XingchenXcmagical::clear_has_m_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_XingchenXcmagical::clear_m_id() {
  m_id_ = 0;
  clear_has_m_id();
}
inline ::google::protobuf::int32 E_XingchenXcmagical::m_id() const {
  return m_id_;
}
inline void E_XingchenXcmagical::set_m_id(::google::protobuf::int32 value) {
  set_has_m_id();
  m_id_ = value;
}

// optional int32 m_hhquality = 2;
inline bool E_XingchenXcmagical::has_m_hhquality() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_XingchenXcmagical::set_has_m_hhquality() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_XingchenXcmagical::clear_has_m_hhquality() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_XingchenXcmagical::clear_m_hhquality() {
  m_hhquality_ = 0;
  clear_has_m_hhquality();
}
inline ::google::protobuf::int32 E_XingchenXcmagical::m_hhquality() const {
  return m_hhquality_;
}
inline void E_XingchenXcmagical::set_m_hhquality(::google::protobuf::int32 value) {
  set_has_m_hhquality();
  m_hhquality_ = value;
}

// optional int32 m_isadvanced = 3;
inline bool E_XingchenXcmagical::has_m_isadvanced() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void E_XingchenXcmagical::set_has_m_isadvanced() {
  _has_bits_[0] |= 0x00000004u;
}
inline void E_XingchenXcmagical::clear_has_m_isadvanced() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void E_XingchenXcmagical::clear_m_isadvanced() {
  m_isadvanced_ = 0;
  clear_has_m_isadvanced();
}
inline ::google::protobuf::int32 E_XingchenXcmagical::m_isadvanced() const {
  return m_isadvanced_;
}
inline void E_XingchenXcmagical::set_m_isadvanced(::google::protobuf::int32 value) {
  set_has_m_isadvanced();
  m_isadvanced_ = value;
}

// optional int32 m_hhact = 4;
inline bool E_XingchenXcmagical::has_m_hhact() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void E_XingchenXcmagical::set_has_m_hhact() {
  _has_bits_[0] |= 0x00000008u;
}
inline void E_XingchenXcmagical::clear_has_m_hhact() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void E_XingchenXcmagical::clear_m_hhact() {
  m_hhact_ = 0;
  clear_has_m_hhact();
}
inline ::google::protobuf::int32 E_XingchenXcmagical::m_hhact() const {
  return m_hhact_;
}
inline void E_XingchenXcmagical::set_m_hhact(::google::protobuf::int32 value) {
  set_has_m_hhact();
  m_hhact_ = value;
}

// optional int32 m_hhstar = 5;
inline bool E_XingchenXcmagical::has_m_hhstar() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void E_XingchenXcmagical::set_has_m_hhstar() {
  _has_bits_[0] |= 0x00000010u;
}
inline void E_XingchenXcmagical::clear_has_m_hhstar() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void E_XingchenXcmagical::clear_m_hhstar() {
  m_hhstar_ = 0;
  clear_has_m_hhstar();
}
inline ::google::protobuf::int32 E_XingchenXcmagical::m_hhstar() const {
  return m_hhstar_;
}
inline void E_XingchenXcmagical::set_m_hhstar(::google::protobuf::int32 value) {
  set_has_m_hhstar();
  m_hhstar_ = value;
}

// optional int32 m_advskill = 6;
inline bool E_XingchenXcmagical::has_m_advskill() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void E_XingchenXcmagical::set_has_m_advskill() {
  _has_bits_[0] |= 0x00000020u;
}
inline void E_XingchenXcmagical::clear_has_m_advskill() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void E_XingchenXcmagical::clear_m_advskill() {
  m_advskill_ = 0;
  clear_has_m_advskill();
}
inline ::google::protobuf::int32 E_XingchenXcmagical::m_advskill() const {
  return m_advskill_;
}
inline void E_XingchenXcmagical::set_m_advskill(::google::protobuf::int32 value) {
  set_has_m_advskill();
  m_advskill_ = value;
}

// repeated .proto_ff.E_XingchenXcmagicalHhDesc m_hh = 7;
inline int E_XingchenXcmagical::m_hh_size() const {
  return m_hh_.size();
}
inline void E_XingchenXcmagical::clear_m_hh() {
  m_hh_.Clear();
}
inline const ::proto_ff::E_XingchenXcmagicalHhDesc& E_XingchenXcmagical::m_hh(int index) const {
  return m_hh_.Get(index);
}
inline ::proto_ff::E_XingchenXcmagicalHhDesc* E_XingchenXcmagical::mutable_m_hh(int index) {
  return m_hh_.Mutable(index);
}
inline ::proto_ff::E_XingchenXcmagicalHhDesc* E_XingchenXcmagical::add_m_hh() {
  return m_hh_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_XingchenXcmagicalHhDesc >&
E_XingchenXcmagical::m_hh() const {
  return m_hh_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_XingchenXcmagicalHhDesc >*
E_XingchenXcmagical::mutable_m_hh() {
  return &m_hh_;
}

// -------------------------------------------------------------------

// Sheet_XingchenXcmagical

// repeated .proto_ff.E_XingchenXcmagical E_XingchenXcmagical_List = 1;
inline int Sheet_XingchenXcmagical::e_xingchenxcmagical_list_size() const {
  return e_xingchenxcmagical_list_.size();
}
inline void Sheet_XingchenXcmagical::clear_e_xingchenxcmagical_list() {
  e_xingchenxcmagical_list_.Clear();
}
inline const ::proto_ff::E_XingchenXcmagical& Sheet_XingchenXcmagical::e_xingchenxcmagical_list(int index) const {
  return e_xingchenxcmagical_list_.Get(index);
}
inline ::proto_ff::E_XingchenXcmagical* Sheet_XingchenXcmagical::mutable_e_xingchenxcmagical_list(int index) {
  return e_xingchenxcmagical_list_.Mutable(index);
}
inline ::proto_ff::E_XingchenXcmagical* Sheet_XingchenXcmagical::add_e_xingchenxcmagical_list() {
  return e_xingchenxcmagical_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_XingchenXcmagical >&
Sheet_XingchenXcmagical::e_xingchenxcmagical_list() const {
  return e_xingchenxcmagical_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_XingchenXcmagical >*
Sheet_XingchenXcmagical::mutable_e_xingchenxcmagical_list() {
  return &e_xingchenxcmagical_list_;
}

// -------------------------------------------------------------------

// E_XingchenXcmagatt

// optional int64 m_attid = 1;
inline bool E_XingchenXcmagatt::has_m_attid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_XingchenXcmagatt::set_has_m_attid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_XingchenXcmagatt::clear_has_m_attid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_XingchenXcmagatt::clear_m_attid() {
  m_attid_ = GOOGLE_LONGLONG(0);
  clear_has_m_attid();
}
inline ::google::protobuf::int64 E_XingchenXcmagatt::m_attid() const {
  return m_attid_;
}
inline void E_XingchenXcmagatt::set_m_attid(::google::protobuf::int64 value) {
  set_has_m_attid();
  m_attid_ = value;
}

// repeated int32 m_att = 2;
inline int E_XingchenXcmagatt::m_att_size() const {
  return m_att_.size();
}
inline void E_XingchenXcmagatt::clear_m_att() {
  m_att_.Clear();
}
inline ::google::protobuf::int32 E_XingchenXcmagatt::m_att(int index) const {
  return m_att_.Get(index);
}
inline void E_XingchenXcmagatt::set_m_att(int index, ::google::protobuf::int32 value) {
  m_att_.Set(index, value);
}
inline void E_XingchenXcmagatt::add_m_att(::google::protobuf::int32 value) {
  m_att_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
E_XingchenXcmagatt::m_att() const {
  return m_att_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
E_XingchenXcmagatt::mutable_m_att() {
  return &m_att_;
}

// -------------------------------------------------------------------

// Sheet_XingchenXcmagatt

// repeated .proto_ff.E_XingchenXcmagatt E_XingchenXcmagatt_List = 1;
inline int Sheet_XingchenXcmagatt::e_xingchenxcmagatt_list_size() const {
  return e_xingchenxcmagatt_list_.size();
}
inline void Sheet_XingchenXcmagatt::clear_e_xingchenxcmagatt_list() {
  e_xingchenxcmagatt_list_.Clear();
}
inline const ::proto_ff::E_XingchenXcmagatt& Sheet_XingchenXcmagatt::e_xingchenxcmagatt_list(int index) const {
  return e_xingchenxcmagatt_list_.Get(index);
}
inline ::proto_ff::E_XingchenXcmagatt* Sheet_XingchenXcmagatt::mutable_e_xingchenxcmagatt_list(int index) {
  return e_xingchenxcmagatt_list_.Mutable(index);
}
inline ::proto_ff::E_XingchenXcmagatt* Sheet_XingchenXcmagatt::add_e_xingchenxcmagatt_list() {
  return e_xingchenxcmagatt_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_XingchenXcmagatt >&
Sheet_XingchenXcmagatt::e_xingchenxcmagatt_list() const {
  return e_xingchenxcmagatt_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_XingchenXcmagatt >*
Sheet_XingchenXcmagatt::mutable_e_xingchenxcmagatt_list() {
  return &e_xingchenxcmagatt_list_;
}

// -------------------------------------------------------------------

// E_XingchenXcadvattUpattributeDesc

// optional int32 m_value = 1;
inline bool E_XingchenXcadvattUpattributeDesc::has_m_value() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_XingchenXcadvattUpattributeDesc::set_has_m_value() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_XingchenXcadvattUpattributeDesc::clear_has_m_value() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_XingchenXcadvattUpattributeDesc::clear_m_value() {
  m_value_ = 0;
  clear_has_m_value();
}
inline ::google::protobuf::int32 E_XingchenXcadvattUpattributeDesc::m_value() const {
  return m_value_;
}
inline void E_XingchenXcadvattUpattributeDesc::set_m_value(::google::protobuf::int32 value) {
  set_has_m_value();
  m_value_ = value;
}

// optional int32 m_type = 2;
inline bool E_XingchenXcadvattUpattributeDesc::has_m_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_XingchenXcadvattUpattributeDesc::set_has_m_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_XingchenXcadvattUpattributeDesc::clear_has_m_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_XingchenXcadvattUpattributeDesc::clear_m_type() {
  m_type_ = 0;
  clear_has_m_type();
}
inline ::google::protobuf::int32 E_XingchenXcadvattUpattributeDesc::m_type() const {
  return m_type_;
}
inline void E_XingchenXcadvattUpattributeDesc::set_m_type(::google::protobuf::int32 value) {
  set_has_m_type();
  m_type_ = value;
}

// -------------------------------------------------------------------

// E_XingchenXcadvatt

// optional int32 m_id = 1;
inline bool E_XingchenXcadvatt::has_m_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_XingchenXcadvatt::set_has_m_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_XingchenXcadvatt::clear_has_m_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_XingchenXcadvatt::clear_m_id() {
  m_id_ = 0;
  clear_has_m_id();
}
inline ::google::protobuf::int32 E_XingchenXcadvatt::m_id() const {
  return m_id_;
}
inline void E_XingchenXcadvatt::set_m_id(::google::protobuf::int32 value) {
  set_has_m_id();
  m_id_ = value;
}

// optional int64 m_upattributeid = 2;
inline bool E_XingchenXcadvatt::has_m_upattributeid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_XingchenXcadvatt::set_has_m_upattributeid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_XingchenXcadvatt::clear_has_m_upattributeid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_XingchenXcadvatt::clear_m_upattributeid() {
  m_upattributeid_ = GOOGLE_LONGLONG(0);
  clear_has_m_upattributeid();
}
inline ::google::protobuf::int64 E_XingchenXcadvatt::m_upattributeid() const {
  return m_upattributeid_;
}
inline void E_XingchenXcadvatt::set_m_upattributeid(::google::protobuf::int64 value) {
  set_has_m_upattributeid();
  m_upattributeid_ = value;
}

// optional int32 m_classlv = 3;
inline bool E_XingchenXcadvatt::has_m_classlv() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void E_XingchenXcadvatt::set_has_m_classlv() {
  _has_bits_[0] |= 0x00000004u;
}
inline void E_XingchenXcadvatt::clear_has_m_classlv() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void E_XingchenXcadvatt::clear_m_classlv() {
  m_classlv_ = 0;
  clear_has_m_classlv();
}
inline ::google::protobuf::int32 E_XingchenXcadvatt::m_classlv() const {
  return m_classlv_;
}
inline void E_XingchenXcadvatt::set_m_classlv(::google::protobuf::int32 value) {
  set_has_m_classlv();
  m_classlv_ = value;
}

// optional int32 m_starid = 4;
inline bool E_XingchenXcadvatt::has_m_starid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void E_XingchenXcadvatt::set_has_m_starid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void E_XingchenXcadvatt::clear_has_m_starid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void E_XingchenXcadvatt::clear_m_starid() {
  m_starid_ = 0;
  clear_has_m_starid();
}
inline ::google::protobuf::int32 E_XingchenXcadvatt::m_starid() const {
  return m_starid_;
}
inline void E_XingchenXcadvatt::set_m_starid(::google::protobuf::int32 value) {
  set_has_m_starid();
  m_starid_ = value;
}

// optional int32 m_skillid = 5;
inline bool E_XingchenXcadvatt::has_m_skillid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void E_XingchenXcadvatt::set_has_m_skillid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void E_XingchenXcadvatt::clear_has_m_skillid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void E_XingchenXcadvatt::clear_m_skillid() {
  m_skillid_ = 0;
  clear_has_m_skillid();
}
inline ::google::protobuf::int32 E_XingchenXcadvatt::m_skillid() const {
  return m_skillid_;
}
inline void E_XingchenXcadvatt::set_m_skillid(::google::protobuf::int32 value) {
  set_has_m_skillid();
  m_skillid_ = value;
}

// optional int32 m_activeskillidlv = 6;
inline bool E_XingchenXcadvatt::has_m_activeskillidlv() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void E_XingchenXcadvatt::set_has_m_activeskillidlv() {
  _has_bits_[0] |= 0x00000020u;
}
inline void E_XingchenXcadvatt::clear_has_m_activeskillidlv() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void E_XingchenXcadvatt::clear_m_activeskillidlv() {
  m_activeskillidlv_ = 0;
  clear_has_m_activeskillidlv();
}
inline ::google::protobuf::int32 E_XingchenXcadvatt::m_activeskillidlv() const {
  return m_activeskillidlv_;
}
inline void E_XingchenXcadvatt::set_m_activeskillidlv(::google::protobuf::int32 value) {
  set_has_m_activeskillidlv();
  m_activeskillidlv_ = value;
}

// repeated .proto_ff.E_XingchenXcadvattUpattributeDesc m_upattribute = 7;
inline int E_XingchenXcadvatt::m_upattribute_size() const {
  return m_upattribute_.size();
}
inline void E_XingchenXcadvatt::clear_m_upattribute() {
  m_upattribute_.Clear();
}
inline const ::proto_ff::E_XingchenXcadvattUpattributeDesc& E_XingchenXcadvatt::m_upattribute(int index) const {
  return m_upattribute_.Get(index);
}
inline ::proto_ff::E_XingchenXcadvattUpattributeDesc* E_XingchenXcadvatt::mutable_m_upattribute(int index) {
  return m_upattribute_.Mutable(index);
}
inline ::proto_ff::E_XingchenXcadvattUpattributeDesc* E_XingchenXcadvatt::add_m_upattribute() {
  return m_upattribute_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_XingchenXcadvattUpattributeDesc >&
E_XingchenXcadvatt::m_upattribute() const {
  return m_upattribute_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_XingchenXcadvattUpattributeDesc >*
E_XingchenXcadvatt::mutable_m_upattribute() {
  return &m_upattribute_;
}

// -------------------------------------------------------------------

// Sheet_XingchenXcadvatt

// repeated .proto_ff.E_XingchenXcadvatt E_XingchenXcadvatt_List = 1;
inline int Sheet_XingchenXcadvatt::e_xingchenxcadvatt_list_size() const {
  return e_xingchenxcadvatt_list_.size();
}
inline void Sheet_XingchenXcadvatt::clear_e_xingchenxcadvatt_list() {
  e_xingchenxcadvatt_list_.Clear();
}
inline const ::proto_ff::E_XingchenXcadvatt& Sheet_XingchenXcadvatt::e_xingchenxcadvatt_list(int index) const {
  return e_xingchenxcadvatt_list_.Get(index);
}
inline ::proto_ff::E_XingchenXcadvatt* Sheet_XingchenXcadvatt::mutable_e_xingchenxcadvatt_list(int index) {
  return e_xingchenxcadvatt_list_.Mutable(index);
}
inline ::proto_ff::E_XingchenXcadvatt* Sheet_XingchenXcadvatt::add_e_xingchenxcadvatt_list() {
  return e_xingchenxcadvatt_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_XingchenXcadvatt >&
Sheet_XingchenXcadvatt::e_xingchenxcadvatt_list() const {
  return e_xingchenxcadvatt_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_XingchenXcadvatt >*
Sheet_XingchenXcadvatt::mutable_e_xingchenxcadvatt_list() {
  return &e_xingchenxcadvatt_list_;
}

// -------------------------------------------------------------------

// E_XingchenXcguizhenXxDesc

// optional int32 m_value = 1;
inline bool E_XingchenXcguizhenXxDesc::has_m_value() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_XingchenXcguizhenXxDesc::set_has_m_value() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_XingchenXcguizhenXxDesc::clear_has_m_value() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_XingchenXcguizhenXxDesc::clear_m_value() {
  m_value_ = 0;
  clear_has_m_value();
}
inline ::google::protobuf::int32 E_XingchenXcguizhenXxDesc::m_value() const {
  return m_value_;
}
inline void E_XingchenXcguizhenXxDesc::set_m_value(::google::protobuf::int32 value) {
  set_has_m_value();
  m_value_ = value;
}

// optional int32 m_type = 2;
inline bool E_XingchenXcguizhenXxDesc::has_m_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_XingchenXcguizhenXxDesc::set_has_m_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_XingchenXcguizhenXxDesc::clear_has_m_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_XingchenXcguizhenXxDesc::clear_m_type() {
  m_type_ = 0;
  clear_has_m_type();
}
inline ::google::protobuf::int32 E_XingchenXcguizhenXxDesc::m_type() const {
  return m_type_;
}
inline void E_XingchenXcguizhenXxDesc::set_m_type(::google::protobuf::int32 value) {
  set_has_m_type();
  m_type_ = value;
}

// -------------------------------------------------------------------

// E_XingchenXcguizhenGzDesc

// optional int32 m_value = 1;
inline bool E_XingchenXcguizhenGzDesc::has_m_value() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_XingchenXcguizhenGzDesc::set_has_m_value() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_XingchenXcguizhenGzDesc::clear_has_m_value() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_XingchenXcguizhenGzDesc::clear_m_value() {
  m_value_ = 0;
  clear_has_m_value();
}
inline ::google::protobuf::int32 E_XingchenXcguizhenGzDesc::m_value() const {
  return m_value_;
}
inline void E_XingchenXcguizhenGzDesc::set_m_value(::google::protobuf::int32 value) {
  set_has_m_value();
  m_value_ = value;
}

// optional int32 m_type = 2;
inline bool E_XingchenXcguizhenGzDesc::has_m_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_XingchenXcguizhenGzDesc::set_has_m_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_XingchenXcguizhenGzDesc::clear_has_m_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_XingchenXcguizhenGzDesc::clear_m_type() {
  m_type_ = 0;
  clear_has_m_type();
}
inline ::google::protobuf::int32 E_XingchenXcguizhenGzDesc::m_type() const {
  return m_type_;
}
inline void E_XingchenXcguizhenGzDesc::set_m_type(::google::protobuf::int32 value) {
  set_has_m_type();
  m_type_ = value;
}

// -------------------------------------------------------------------

// E_XingchenXcguizhen

// optional int32 m_id = 1;
inline bool E_XingchenXcguizhen::has_m_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_XingchenXcguizhen::set_has_m_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_XingchenXcguizhen::clear_has_m_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_XingchenXcguizhen::clear_m_id() {
  m_id_ = 0;
  clear_has_m_id();
}
inline ::google::protobuf::int32 E_XingchenXcguizhen::m_id() const {
  return m_id_;
}
inline void E_XingchenXcguizhen::set_m_id(::google::protobuf::int32 value) {
  set_has_m_id();
  m_id_ = value;
}

// optional int32 m_xsid = 2;
inline bool E_XingchenXcguizhen::has_m_xsid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_XingchenXcguizhen::set_has_m_xsid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_XingchenXcguizhen::clear_has_m_xsid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_XingchenXcguizhen::clear_m_xsid() {
  m_xsid_ = 0;
  clear_has_m_xsid();
}
inline ::google::protobuf::int32 E_XingchenXcguizhen::m_xsid() const {
  return m_xsid_;
}
inline void E_XingchenXcguizhen::set_m_xsid(::google::protobuf::int32 value) {
  set_has_m_xsid();
  m_xsid_ = value;
}

// optional int32 m_gzquality = 3;
inline bool E_XingchenXcguizhen::has_m_gzquality() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void E_XingchenXcguizhen::set_has_m_gzquality() {
  _has_bits_[0] |= 0x00000004u;
}
inline void E_XingchenXcguizhen::clear_has_m_gzquality() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void E_XingchenXcguizhen::clear_m_gzquality() {
  m_gzquality_ = 0;
  clear_has_m_gzquality();
}
inline ::google::protobuf::int32 E_XingchenXcguizhen::m_gzquality() const {
  return m_gzquality_;
}
inline void E_XingchenXcguizhen::set_m_gzquality(::google::protobuf::int32 value) {
  set_has_m_gzquality();
  m_gzquality_ = value;
}

// optional int32 m_gznum = 4;
inline bool E_XingchenXcguizhen::has_m_gznum() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void E_XingchenXcguizhen::set_has_m_gznum() {
  _has_bits_[0] |= 0x00000008u;
}
inline void E_XingchenXcguizhen::clear_has_m_gznum() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void E_XingchenXcguizhen::clear_m_gznum() {
  m_gznum_ = 0;
  clear_has_m_gznum();
}
inline ::google::protobuf::int32 E_XingchenXcguizhen::m_gznum() const {
  return m_gznum_;
}
inline void E_XingchenXcguizhen::set_m_gznum(::google::protobuf::int32 value) {
  set_has_m_gznum();
  m_gznum_ = value;
}

// optional int32 m_gzxh = 5;
inline bool E_XingchenXcguizhen::has_m_gzxh() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void E_XingchenXcguizhen::set_has_m_gzxh() {
  _has_bits_[0] |= 0x00000010u;
}
inline void E_XingchenXcguizhen::clear_has_m_gzxh() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void E_XingchenXcguizhen::clear_m_gzxh() {
  m_gzxh_ = 0;
  clear_has_m_gzxh();
}
inline ::google::protobuf::int32 E_XingchenXcguizhen::m_gzxh() const {
  return m_gzxh_;
}
inline void E_XingchenXcguizhen::set_m_gzxh(::google::protobuf::int32 value) {
  set_has_m_gzxh();
  m_gzxh_ = value;
}

// repeated .proto_ff.E_XingchenXcguizhenXxDesc m_xx = 6;
inline int E_XingchenXcguizhen::m_xx_size() const {
  return m_xx_.size();
}
inline void E_XingchenXcguizhen::clear_m_xx() {
  m_xx_.Clear();
}
inline const ::proto_ff::E_XingchenXcguizhenXxDesc& E_XingchenXcguizhen::m_xx(int index) const {
  return m_xx_.Get(index);
}
inline ::proto_ff::E_XingchenXcguizhenXxDesc* E_XingchenXcguizhen::mutable_m_xx(int index) {
  return m_xx_.Mutable(index);
}
inline ::proto_ff::E_XingchenXcguizhenXxDesc* E_XingchenXcguizhen::add_m_xx() {
  return m_xx_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_XingchenXcguizhenXxDesc >&
E_XingchenXcguizhen::m_xx() const {
  return m_xx_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_XingchenXcguizhenXxDesc >*
E_XingchenXcguizhen::mutable_m_xx() {
  return &m_xx_;
}

// repeated .proto_ff.E_XingchenXcguizhenGzDesc m_gz = 7;
inline int E_XingchenXcguizhen::m_gz_size() const {
  return m_gz_.size();
}
inline void E_XingchenXcguizhen::clear_m_gz() {
  m_gz_.Clear();
}
inline const ::proto_ff::E_XingchenXcguizhenGzDesc& E_XingchenXcguizhen::m_gz(int index) const {
  return m_gz_.Get(index);
}
inline ::proto_ff::E_XingchenXcguizhenGzDesc* E_XingchenXcguizhen::mutable_m_gz(int index) {
  return m_gz_.Mutable(index);
}
inline ::proto_ff::E_XingchenXcguizhenGzDesc* E_XingchenXcguizhen::add_m_gz() {
  return m_gz_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_XingchenXcguizhenGzDesc >&
E_XingchenXcguizhen::m_gz() const {
  return m_gz_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_XingchenXcguizhenGzDesc >*
E_XingchenXcguizhen::mutable_m_gz() {
  return &m_gz_;
}

// -------------------------------------------------------------------

// Sheet_XingchenXcguizhen

// repeated .proto_ff.E_XingchenXcguizhen E_XingchenXcguizhen_List = 1;
inline int Sheet_XingchenXcguizhen::e_xingchenxcguizhen_list_size() const {
  return e_xingchenxcguizhen_list_.size();
}
inline void Sheet_XingchenXcguizhen::clear_e_xingchenxcguizhen_list() {
  e_xingchenxcguizhen_list_.Clear();
}
inline const ::proto_ff::E_XingchenXcguizhen& Sheet_XingchenXcguizhen::e_xingchenxcguizhen_list(int index) const {
  return e_xingchenxcguizhen_list_.Get(index);
}
inline ::proto_ff::E_XingchenXcguizhen* Sheet_XingchenXcguizhen::mutable_e_xingchenxcguizhen_list(int index) {
  return e_xingchenxcguizhen_list_.Mutable(index);
}
inline ::proto_ff::E_XingchenXcguizhen* Sheet_XingchenXcguizhen::add_e_xingchenxcguizhen_list() {
  return e_xingchenxcguizhen_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_XingchenXcguizhen >&
Sheet_XingchenXcguizhen::e_xingchenxcguizhen_list() const {
  return e_xingchenxcguizhen_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_XingchenXcguizhen >*
Sheet_XingchenXcguizhen::mutable_e_xingchenxcguizhen_list() {
  return &e_xingchenxcguizhen_list_;
}

// -------------------------------------------------------------------

// E_XingchenXingjunActDesc

// optional int32 m_id = 1;
inline bool E_XingchenXingjunActDesc::has_m_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_XingchenXingjunActDesc::set_has_m_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_XingchenXingjunActDesc::clear_has_m_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_XingchenXingjunActDesc::clear_m_id() {
  m_id_ = 0;
  clear_has_m_id();
}
inline ::google::protobuf::int32 E_XingchenXingjunActDesc::m_id() const {
  return m_id_;
}
inline void E_XingchenXingjunActDesc::set_m_id(::google::protobuf::int32 value) {
  set_has_m_id();
  m_id_ = value;
}

// optional int32 m_num = 2;
inline bool E_XingchenXingjunActDesc::has_m_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_XingchenXingjunActDesc::set_has_m_num() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_XingchenXingjunActDesc::clear_has_m_num() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_XingchenXingjunActDesc::clear_m_num() {
  m_num_ = 0;
  clear_has_m_num();
}
inline ::google::protobuf::int32 E_XingchenXingjunActDesc::m_num() const {
  return m_num_;
}
inline void E_XingchenXingjunActDesc::set_m_num(::google::protobuf::int32 value) {
  set_has_m_num();
  m_num_ = value;
}

// -------------------------------------------------------------------

// E_XingchenXingjun

// optional int32 m_id = 1;
inline bool E_XingchenXingjun::has_m_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_XingchenXingjun::set_has_m_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_XingchenXingjun::clear_has_m_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_XingchenXingjun::clear_m_id() {
  m_id_ = 0;
  clear_has_m_id();
}
inline ::google::protobuf::int32 E_XingchenXingjun::m_id() const {
  return m_id_;
}
inline void E_XingchenXingjun::set_m_id(::google::protobuf::int32 value) {
  set_has_m_id();
  m_id_ = value;
}

// optional int32 m_xstype = 2;
inline bool E_XingchenXingjun::has_m_xstype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_XingchenXingjun::set_has_m_xstype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_XingchenXingjun::clear_has_m_xstype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_XingchenXingjun::clear_m_xstype() {
  m_xstype_ = 0;
  clear_has_m_xstype();
}
inline ::google::protobuf::int32 E_XingchenXingjun::m_xstype() const {
  return m_xstype_;
}
inline void E_XingchenXingjun::set_m_xstype(::google::protobuf::int32 value) {
  set_has_m_xstype();
  m_xstype_ = value;
}

// optional int32 m_xjquality = 3;
inline bool E_XingchenXingjun::has_m_xjquality() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void E_XingchenXingjun::set_has_m_xjquality() {
  _has_bits_[0] |= 0x00000004u;
}
inline void E_XingchenXingjun::clear_has_m_xjquality() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void E_XingchenXingjun::clear_m_xjquality() {
  m_xjquality_ = 0;
  clear_has_m_xjquality();
}
inline ::google::protobuf::int32 E_XingchenXingjun::m_xjquality() const {
  return m_xjquality_;
}
inline void E_XingchenXingjun::set_m_xjquality(::google::protobuf::int32 value) {
  set_has_m_xjquality();
  m_xjquality_ = value;
}

// repeated .proto_ff.E_XingchenXingjunActDesc m_act = 4;
inline int E_XingchenXingjun::m_act_size() const {
  return m_act_.size();
}
inline void E_XingchenXingjun::clear_m_act() {
  m_act_.Clear();
}
inline const ::proto_ff::E_XingchenXingjunActDesc& E_XingchenXingjun::m_act(int index) const {
  return m_act_.Get(index);
}
inline ::proto_ff::E_XingchenXingjunActDesc* E_XingchenXingjun::mutable_m_act(int index) {
  return m_act_.Mutable(index);
}
inline ::proto_ff::E_XingchenXingjunActDesc* E_XingchenXingjun::add_m_act() {
  return m_act_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_XingchenXingjunActDesc >&
E_XingchenXingjun::m_act() const {
  return m_act_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_XingchenXingjunActDesc >*
E_XingchenXingjun::mutable_m_act() {
  return &m_act_;
}

// -------------------------------------------------------------------

// Sheet_XingchenXingjun

// repeated .proto_ff.E_XingchenXingjun E_XingchenXingjun_List = 1;
inline int Sheet_XingchenXingjun::e_xingchenxingjun_list_size() const {
  return e_xingchenxingjun_list_.size();
}
inline void Sheet_XingchenXingjun::clear_e_xingchenxingjun_list() {
  e_xingchenxingjun_list_.Clear();
}
inline const ::proto_ff::E_XingchenXingjun& Sheet_XingchenXingjun::e_xingchenxingjun_list(int index) const {
  return e_xingchenxingjun_list_.Get(index);
}
inline ::proto_ff::E_XingchenXingjun* Sheet_XingchenXingjun::mutable_e_xingchenxingjun_list(int index) {
  return e_xingchenxingjun_list_.Mutable(index);
}
inline ::proto_ff::E_XingchenXingjun* Sheet_XingchenXingjun::add_e_xingchenxingjun_list() {
  return e_xingchenxingjun_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_XingchenXingjun >&
Sheet_XingchenXingjun::e_xingchenxingjun_list() const {
  return e_xingchenxingjun_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_XingchenXingjun >*
Sheet_XingchenXingjun::mutable_e_xingchenxingjun_list() {
  return &e_xingchenxingjun_list_;
}

// -------------------------------------------------------------------

// E_XingchenXjattXjDesc

// optional int32 m_value = 1;
inline bool E_XingchenXjattXjDesc::has_m_value() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_XingchenXjattXjDesc::set_has_m_value() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_XingchenXjattXjDesc::clear_has_m_value() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_XingchenXjattXjDesc::clear_m_value() {
  m_value_ = 0;
  clear_has_m_value();
}
inline ::google::protobuf::int32 E_XingchenXjattXjDesc::m_value() const {
  return m_value_;
}
inline void E_XingchenXjattXjDesc::set_m_value(::google::protobuf::int32 value) {
  set_has_m_value();
  m_value_ = value;
}

// optional int32 m_type = 2;
inline bool E_XingchenXjattXjDesc::has_m_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_XingchenXjattXjDesc::set_has_m_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_XingchenXjattXjDesc::clear_has_m_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_XingchenXjattXjDesc::clear_m_type() {
  m_type_ = 0;
  clear_has_m_type();
}
inline ::google::protobuf::int32 E_XingchenXjattXjDesc::m_type() const {
  return m_type_;
}
inline void E_XingchenXjattXjDesc::set_m_type(::google::protobuf::int32 value) {
  set_has_m_type();
  m_type_ = value;
}

// -------------------------------------------------------------------

// E_XingchenXjatt

// optional int64 m_attid = 1;
inline bool E_XingchenXjatt::has_m_attid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_XingchenXjatt::set_has_m_attid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_XingchenXjatt::clear_has_m_attid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_XingchenXjatt::clear_m_attid() {
  m_attid_ = GOOGLE_LONGLONG(0);
  clear_has_m_attid();
}
inline ::google::protobuf::int64 E_XingchenXjatt::m_attid() const {
  return m_attid_;
}
inline void E_XingchenXjatt::set_m_attid(::google::protobuf::int64 value) {
  set_has_m_attid();
  m_attid_ = value;
}

// repeated .proto_ff.E_XingchenXjattXjDesc m_xj = 2;
inline int E_XingchenXjatt::m_xj_size() const {
  return m_xj_.size();
}
inline void E_XingchenXjatt::clear_m_xj() {
  m_xj_.Clear();
}
inline const ::proto_ff::E_XingchenXjattXjDesc& E_XingchenXjatt::m_xj(int index) const {
  return m_xj_.Get(index);
}
inline ::proto_ff::E_XingchenXjattXjDesc* E_XingchenXjatt::mutable_m_xj(int index) {
  return m_xj_.Mutable(index);
}
inline ::proto_ff::E_XingchenXjattXjDesc* E_XingchenXjatt::add_m_xj() {
  return m_xj_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_XingchenXjattXjDesc >&
E_XingchenXjatt::m_xj() const {
  return m_xj_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_XingchenXjattXjDesc >*
E_XingchenXjatt::mutable_m_xj() {
  return &m_xj_;
}

// -------------------------------------------------------------------

// Sheet_XingchenXjatt

// repeated .proto_ff.E_XingchenXjatt E_XingchenXjatt_List = 1;
inline int Sheet_XingchenXjatt::e_xingchenxjatt_list_size() const {
  return e_xingchenxjatt_list_.size();
}
inline void Sheet_XingchenXjatt::clear_e_xingchenxjatt_list() {
  e_xingchenxjatt_list_.Clear();
}
inline const ::proto_ff::E_XingchenXjatt& Sheet_XingchenXjatt::e_xingchenxjatt_list(int index) const {
  return e_xingchenxjatt_list_.Get(index);
}
inline ::proto_ff::E_XingchenXjatt* Sheet_XingchenXjatt::mutable_e_xingchenxjatt_list(int index) {
  return e_xingchenxjatt_list_.Mutable(index);
}
inline ::proto_ff::E_XingchenXjatt* Sheet_XingchenXjatt::add_e_xingchenxjatt_list() {
  return e_xingchenxjatt_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_XingchenXjatt >&
Sheet_XingchenXjatt::e_xingchenxjatt_list() const {
  return e_xingchenxjatt_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_XingchenXjatt >*
Sheet_XingchenXjatt::mutable_e_xingchenxjatt_list() {
  return &e_xingchenxjatt_list_;
}

// -------------------------------------------------------------------

// E_XingchenXingji

// optional int32 m_xjid = 1;
inline bool E_XingchenXingji::has_m_xjid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_XingchenXingji::set_has_m_xjid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_XingchenXingji::clear_has_m_xjid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_XingchenXingji::clear_m_xjid() {
  m_xjid_ = 0;
  clear_has_m_xjid();
}
inline ::google::protobuf::int32 E_XingchenXingji::m_xjid() const {
  return m_xjid_;
}
inline void E_XingchenXingji::set_m_xjid(::google::protobuf::int32 value) {
  set_has_m_xjid();
  m_xjid_ = value;
}

// optional int32 m_xjclass = 2;
inline bool E_XingchenXingji::has_m_xjclass() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_XingchenXingji::set_has_m_xjclass() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_XingchenXingji::clear_has_m_xjclass() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_XingchenXingji::clear_m_xjclass() {
  m_xjclass_ = 0;
  clear_has_m_xjclass();
}
inline ::google::protobuf::int32 E_XingchenXingji::m_xjclass() const {
  return m_xjclass_;
}
inline void E_XingchenXingji::set_m_xjclass(::google::protobuf::int32 value) {
  set_has_m_xjclass();
  m_xjclass_ = value;
}

// optional int32 m_xjskill = 3;
inline bool E_XingchenXingji::has_m_xjskill() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void E_XingchenXingji::set_has_m_xjskill() {
  _has_bits_[0] |= 0x00000004u;
}
inline void E_XingchenXingji::clear_has_m_xjskill() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void E_XingchenXingji::clear_m_xjskill() {
  m_xjskill_ = 0;
  clear_has_m_xjskill();
}
inline ::google::protobuf::int32 E_XingchenXingji::m_xjskill() const {
  return m_xjskill_;
}
inline void E_XingchenXingji::set_m_xjskill(::google::protobuf::int32 value) {
  set_has_m_xjskill();
  m_xjskill_ = value;
}

// optional int32 m_skillid = 4;
inline bool E_XingchenXingji::has_m_skillid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void E_XingchenXingji::set_has_m_skillid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void E_XingchenXingji::clear_has_m_skillid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void E_XingchenXingji::clear_m_skillid() {
  m_skillid_ = 0;
  clear_has_m_skillid();
}
inline ::google::protobuf::int32 E_XingchenXingji::m_skillid() const {
  return m_skillid_;
}
inline void E_XingchenXingji::set_m_skillid(::google::protobuf::int32 value) {
  set_has_m_skillid();
  m_skillid_ = value;
}

// repeated int32 m_unlock = 5;
inline int E_XingchenXingji::m_unlock_size() const {
  return m_unlock_.size();
}
inline void E_XingchenXingji::clear_m_unlock() {
  m_unlock_.Clear();
}
inline ::google::protobuf::int32 E_XingchenXingji::m_unlock(int index) const {
  return m_unlock_.Get(index);
}
inline void E_XingchenXingji::set_m_unlock(int index, ::google::protobuf::int32 value) {
  m_unlock_.Set(index, value);
}
inline void E_XingchenXingji::add_m_unlock(::google::protobuf::int32 value) {
  m_unlock_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
E_XingchenXingji::m_unlock() const {
  return m_unlock_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
E_XingchenXingji::mutable_m_unlock() {
  return &m_unlock_;
}

// repeated int32 m_unlocklv = 6;
inline int E_XingchenXingji::m_unlocklv_size() const {
  return m_unlocklv_.size();
}
inline void E_XingchenXingji::clear_m_unlocklv() {
  m_unlocklv_.Clear();
}
inline ::google::protobuf::int32 E_XingchenXingji::m_unlocklv(int index) const {
  return m_unlocklv_.Get(index);
}
inline void E_XingchenXingji::set_m_unlocklv(int index, ::google::protobuf::int32 value) {
  m_unlocklv_.Set(index, value);
}
inline void E_XingchenXingji::add_m_unlocklv(::google::protobuf::int32 value) {
  m_unlocklv_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
E_XingchenXingji::m_unlocklv() const {
  return m_unlocklv_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
E_XingchenXingji::mutable_m_unlocklv() {
  return &m_unlocklv_;
}

// -------------------------------------------------------------------

// Sheet_XingchenXingji

// repeated .proto_ff.E_XingchenXingji E_XingchenXingji_List = 1;
inline int Sheet_XingchenXingji::e_xingchenxingji_list_size() const {
  return e_xingchenxingji_list_.size();
}
inline void Sheet_XingchenXingji::clear_e_xingchenxingji_list() {
  e_xingchenxingji_list_.Clear();
}
inline const ::proto_ff::E_XingchenXingji& Sheet_XingchenXingji::e_xingchenxingji_list(int index) const {
  return e_xingchenxingji_list_.Get(index);
}
inline ::proto_ff::E_XingchenXingji* Sheet_XingchenXingji::mutable_e_xingchenxingji_list(int index) {
  return e_xingchenxingji_list_.Mutable(index);
}
inline ::proto_ff::E_XingchenXingji* Sheet_XingchenXingji::add_e_xingchenxingji_list() {
  return e_xingchenxingji_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_XingchenXingji >&
Sheet_XingchenXingji::e_xingchenxingji_list() const {
  return e_xingchenxingji_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_XingchenXingji >*
Sheet_XingchenXingji::mutable_e_xingchenxingji_list() {
  return &e_xingchenxingji_list_;
}

// -------------------------------------------------------------------

// E_XingchenXjcw

// optional int32 m_xjslot = 1;
inline bool E_XingchenXjcw::has_m_xjslot() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_XingchenXjcw::set_has_m_xjslot() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_XingchenXjcw::clear_has_m_xjslot() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_XingchenXjcw::clear_m_xjslot() {
  m_xjslot_ = 0;
  clear_has_m_xjslot();
}
inline ::google::protobuf::int32 E_XingchenXjcw::m_xjslot() const {
  return m_xjslot_;
}
inline void E_XingchenXjcw::set_m_xjslot(::google::protobuf::int32 value) {
  set_has_m_xjslot();
  m_xjslot_ = value;
}

// optional int32 m_unlock = 2;
inline bool E_XingchenXjcw::has_m_unlock() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_XingchenXjcw::set_has_m_unlock() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_XingchenXjcw::clear_has_m_unlock() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_XingchenXjcw::clear_m_unlock() {
  m_unlock_ = 0;
  clear_has_m_unlock();
}
inline ::google::protobuf::int32 E_XingchenXjcw::m_unlock() const {
  return m_unlock_;
}
inline void E_XingchenXjcw::set_m_unlock(::google::protobuf::int32 value) {
  set_has_m_unlock();
  m_unlock_ = value;
}

// optional int32 m_num = 3;
inline bool E_XingchenXjcw::has_m_num() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void E_XingchenXjcw::set_has_m_num() {
  _has_bits_[0] |= 0x00000004u;
}
inline void E_XingchenXjcw::clear_has_m_num() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void E_XingchenXjcw::clear_m_num() {
  m_num_ = 0;
  clear_has_m_num();
}
inline ::google::protobuf::int32 E_XingchenXjcw::m_num() const {
  return m_num_;
}
inline void E_XingchenXjcw::set_m_num(::google::protobuf::int32 value) {
  set_has_m_num();
  m_num_ = value;
}

// -------------------------------------------------------------------

// Sheet_XingchenXjcw

// repeated .proto_ff.E_XingchenXjcw E_XingchenXjcw_List = 1;
inline int Sheet_XingchenXjcw::e_xingchenxjcw_list_size() const {
  return e_xingchenxjcw_list_.size();
}
inline void Sheet_XingchenXjcw::clear_e_xingchenxjcw_list() {
  e_xingchenxjcw_list_.Clear();
}
inline const ::proto_ff::E_XingchenXjcw& Sheet_XingchenXjcw::e_xingchenxjcw_list(int index) const {
  return e_xingchenxjcw_list_.Get(index);
}
inline ::proto_ff::E_XingchenXjcw* Sheet_XingchenXjcw::mutable_e_xingchenxjcw_list(int index) {
  return e_xingchenxjcw_list_.Mutable(index);
}
inline ::proto_ff::E_XingchenXjcw* Sheet_XingchenXjcw::add_e_xingchenxjcw_list() {
  return e_xingchenxjcw_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_XingchenXjcw >&
Sheet_XingchenXjcw::e_xingchenxjcw_list() const {
  return e_xingchenxjcw_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_XingchenXjcw >*
Sheet_XingchenXjcw::mutable_e_xingchenxjcw_list() {
  return &e_xingchenxjcw_list_;
}

// -------------------------------------------------------------------

// E_XingchenXjlvexp

// optional int32 m_lv = 1;
inline bool E_XingchenXjlvexp::has_m_lv() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_XingchenXjlvexp::set_has_m_lv() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_XingchenXjlvexp::clear_has_m_lv() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_XingchenXjlvexp::clear_m_lv() {
  m_lv_ = 0;
  clear_has_m_lv();
}
inline ::google::protobuf::int32 E_XingchenXjlvexp::m_lv() const {
  return m_lv_;
}
inline void E_XingchenXjlvexp::set_m_lv(::google::protobuf::int32 value) {
  set_has_m_lv();
  m_lv_ = value;
}

// optional int32 m_exp = 2;
inline bool E_XingchenXjlvexp::has_m_exp() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_XingchenXjlvexp::set_has_m_exp() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_XingchenXjlvexp::clear_has_m_exp() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_XingchenXjlvexp::clear_m_exp() {
  m_exp_ = 0;
  clear_has_m_exp();
}
inline ::google::protobuf::int32 E_XingchenXjlvexp::m_exp() const {
  return m_exp_;
}
inline void E_XingchenXjlvexp::set_m_exp(::google::protobuf::int32 value) {
  set_has_m_exp();
  m_exp_ = value;
}

// optional int32 m_time = 3;
inline bool E_XingchenXjlvexp::has_m_time() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void E_XingchenXjlvexp::set_has_m_time() {
  _has_bits_[0] |= 0x00000004u;
}
inline void E_XingchenXjlvexp::clear_has_m_time() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void E_XingchenXjlvexp::clear_m_time() {
  m_time_ = 0;
  clear_has_m_time();
}
inline ::google::protobuf::int32 E_XingchenXjlvexp::m_time() const {
  return m_time_;
}
inline void E_XingchenXjlvexp::set_m_time(::google::protobuf::int32 value) {
  set_has_m_time();
  m_time_ = value;
}

// -------------------------------------------------------------------

// Sheet_XingchenXjlvexp

// repeated .proto_ff.E_XingchenXjlvexp E_XingchenXjlvexp_List = 1;
inline int Sheet_XingchenXjlvexp::e_xingchenxjlvexp_list_size() const {
  return e_xingchenxjlvexp_list_.size();
}
inline void Sheet_XingchenXjlvexp::clear_e_xingchenxjlvexp_list() {
  e_xingchenxjlvexp_list_.Clear();
}
inline const ::proto_ff::E_XingchenXjlvexp& Sheet_XingchenXjlvexp::e_xingchenxjlvexp_list(int index) const {
  return e_xingchenxjlvexp_list_.Get(index);
}
inline ::proto_ff::E_XingchenXjlvexp* Sheet_XingchenXjlvexp::mutable_e_xingchenxjlvexp_list(int index) {
  return e_xingchenxjlvexp_list_.Mutable(index);
}
inline ::proto_ff::E_XingchenXjlvexp* Sheet_XingchenXjlvexp::add_e_xingchenxjlvexp_list() {
  return e_xingchenxjlvexp_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_XingchenXjlvexp >&
Sheet_XingchenXjlvexp::e_xingchenxjlvexp_list() const {
  return e_xingchenxjlvexp_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_XingchenXjlvexp >*
Sheet_XingchenXjlvexp::mutable_e_xingchenxjlvexp_list() {
  return &e_xingchenxjlvexp_list_;
}

// -------------------------------------------------------------------

// E_XingchenZbshop

// optional int32 m_shopid = 1;
inline bool E_XingchenZbshop::has_m_shopid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_XingchenZbshop::set_has_m_shopid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_XingchenZbshop::clear_has_m_shopid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_XingchenZbshop::clear_m_shopid() {
  m_shopid_ = 0;
  clear_has_m_shopid();
}
inline ::google::protobuf::int32 E_XingchenZbshop::m_shopid() const {
  return m_shopid_;
}
inline void E_XingchenZbshop::set_m_shopid(::google::protobuf::int32 value) {
  set_has_m_shopid();
  m_shopid_ = value;
}

// optional int32 m_shopitem = 2;
inline bool E_XingchenZbshop::has_m_shopitem() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_XingchenZbshop::set_has_m_shopitem() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_XingchenZbshop::clear_has_m_shopitem() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_XingchenZbshop::clear_m_shopitem() {
  m_shopitem_ = 0;
  clear_has_m_shopitem();
}
inline ::google::protobuf::int32 E_XingchenZbshop::m_shopitem() const {
  return m_shopitem_;
}
inline void E_XingchenZbshop::set_m_shopitem(::google::protobuf::int32 value) {
  set_has_m_shopitem();
  m_shopitem_ = value;
}

// optional int32 m_shopquota = 3;
inline bool E_XingchenZbshop::has_m_shopquota() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void E_XingchenZbshop::set_has_m_shopquota() {
  _has_bits_[0] |= 0x00000004u;
}
inline void E_XingchenZbshop::clear_has_m_shopquota() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void E_XingchenZbshop::clear_m_shopquota() {
  m_shopquota_ = 0;
  clear_has_m_shopquota();
}
inline ::google::protobuf::int32 E_XingchenZbshop::m_shopquota() const {
  return m_shopquota_;
}
inline void E_XingchenZbshop::set_m_shopquota(::google::protobuf::int32 value) {
  set_has_m_shopquota();
  m_shopquota_ = value;
}

// optional int32 m_shopnum = 4;
inline bool E_XingchenZbshop::has_m_shopnum() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void E_XingchenZbshop::set_has_m_shopnum() {
  _has_bits_[0] |= 0x00000008u;
}
inline void E_XingchenZbshop::clear_has_m_shopnum() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void E_XingchenZbshop::clear_m_shopnum() {
  m_shopnum_ = 0;
  clear_has_m_shopnum();
}
inline ::google::protobuf::int32 E_XingchenZbshop::m_shopnum() const {
  return m_shopnum_;
}
inline void E_XingchenZbshop::set_m_shopnum(::google::protobuf::int32 value) {
  set_has_m_shopnum();
  m_shopnum_ = value;
}

// optional int32 m_buyconsume = 5;
inline bool E_XingchenZbshop::has_m_buyconsume() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void E_XingchenZbshop::set_has_m_buyconsume() {
  _has_bits_[0] |= 0x00000010u;
}
inline void E_XingchenZbshop::clear_has_m_buyconsume() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void E_XingchenZbshop::clear_m_buyconsume() {
  m_buyconsume_ = 0;
  clear_has_m_buyconsume();
}
inline ::google::protobuf::int32 E_XingchenZbshop::m_buyconsume() const {
  return m_buyconsume_;
}
inline void E_XingchenZbshop::set_m_buyconsume(::google::protobuf::int32 value) {
  set_has_m_buyconsume();
  m_buyconsume_ = value;
}

// optional int32 m_buynum = 6;
inline bool E_XingchenZbshop::has_m_buynum() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void E_XingchenZbshop::set_has_m_buynum() {
  _has_bits_[0] |= 0x00000020u;
}
inline void E_XingchenZbshop::clear_has_m_buynum() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void E_XingchenZbshop::clear_m_buynum() {
  m_buynum_ = 0;
  clear_has_m_buynum();
}
inline ::google::protobuf::int32 E_XingchenZbshop::m_buynum() const {
  return m_buynum_;
}
inline void E_XingchenZbshop::set_m_buynum(::google::protobuf::int32 value) {
  set_has_m_buynum();
  m_buynum_ = value;
}

// -------------------------------------------------------------------

// Sheet_XingchenZbshop

// repeated .proto_ff.E_XingchenZbshop E_XingchenZbshop_List = 1;
inline int Sheet_XingchenZbshop::e_xingchenzbshop_list_size() const {
  return e_xingchenzbshop_list_.size();
}
inline void Sheet_XingchenZbshop::clear_e_xingchenzbshop_list() {
  e_xingchenzbshop_list_.Clear();
}
inline const ::proto_ff::E_XingchenZbshop& Sheet_XingchenZbshop::e_xingchenzbshop_list(int index) const {
  return e_xingchenzbshop_list_.Get(index);
}
inline ::proto_ff::E_XingchenZbshop* Sheet_XingchenZbshop::mutable_e_xingchenzbshop_list(int index) {
  return e_xingchenzbshop_list_.Mutable(index);
}
inline ::proto_ff::E_XingchenZbshop* Sheet_XingchenZbshop::add_e_xingchenzbshop_list() {
  return e_xingchenzbshop_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_XingchenZbshop >&
Sheet_XingchenZbshop::e_xingchenzbshop_list() const {
  return e_xingchenzbshop_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_XingchenZbshop >*
Sheet_XingchenZbshop::mutable_e_xingchenzbshop_list() {
  return &e_xingchenzbshop_list_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto_ff

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_E_5fXingchen_2eproto__INCLUDED
