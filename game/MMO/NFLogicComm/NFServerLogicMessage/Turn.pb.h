// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Turn.proto

#ifndef PROTOBUF_Turn_2eproto__INCLUDED
#define PROTOBUF_Turn_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "Com.pb.h"
#include "ComDefine.pb.h"
// @@protoc_insertion_point(includes)

namespace proto_ff {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_Turn_2eproto();
void protobuf_AssignDesc_Turn_2eproto();
void protobuf_ShutdownFile_Turn_2eproto();

class NotifyTurn;
class NotifyTurnGrow;
class NotifyTurnSimple;
class NotifyTurnHelper;
class NotifyTurnTask;
class TurnRecvTaskReq;
class TurnRecvTaskRsp;
class TurnLvReq;
class TurnLvRsp;
class TurnHelperReq;
class TurnHelperRsp;
class NotifyTurnNewHelper;
class TurnChgReq;
class TurnChgRsp;
class TurnEquipDressReq;
class TurnEquipDressRsp;
class TurnStrongReq;
class TurnStrongRsp;
class TurnEvolveReq;
class TurnEvolveRsp;
class TurnAwakenReq;
class TurnAwakenRsp;
class TurnComposeReq;
class TurnComposeRsp;
class TurnStarReq;
class TurnStarRsp;
class TurnStrongActiveReq;
class TurnStrongActiveRsp;
class TurnStarActiveReq;
class TurnStarActiveRsp;
class LCTurnHelperReq;
class CLNotifyTurnHelper;
class LCTurnHelperRsp;

// ===================================================================

class NotifyTurn : public ::google::protobuf::Message {
 public:
  NotifyTurn();
  virtual ~NotifyTurn();

  NotifyTurn(const NotifyTurn& from);

  inline NotifyTurn& operator=(const NotifyTurn& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NotifyTurn& default_instance();

  void Swap(NotifyTurn* other);

  // implements Message ----------------------------------------------

  NotifyTurn* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NotifyTurn& from);
  void MergeFrom(const NotifyTurn& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // repeated .proto_ff.TurnEntry entrys = 2;
  inline int entrys_size() const;
  inline void clear_entrys();
  static const int kEntrysFieldNumber = 2;
  inline const ::proto_ff::TurnEntry& entrys(int index) const;
  inline ::proto_ff::TurnEntry* mutable_entrys(int index);
  inline ::proto_ff::TurnEntry* add_entrys();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::TurnEntry >&
      entrys() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::TurnEntry >*
      mutable_entrys();

  // @@protoc_insertion_point(class_scope:proto_ff.NotifyTurn)
 private:
  inline void set_has_type();
  inline void clear_has_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::TurnEntry > entrys_;
  ::google::protobuf::int32 type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Turn_2eproto();
  friend void protobuf_AssignDesc_Turn_2eproto();
  friend void protobuf_ShutdownFile_Turn_2eproto();

  void InitAsDefaultInstance();
  static NotifyTurn* default_instance_;
};
// -------------------------------------------------------------------

class NotifyTurnGrow : public ::google::protobuf::Message {
 public:
  NotifyTurnGrow();
  virtual ~NotifyTurnGrow();

  NotifyTurnGrow(const NotifyTurnGrow& from);

  inline NotifyTurnGrow& operator=(const NotifyTurnGrow& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NotifyTurnGrow& default_instance();

  void Swap(NotifyTurnGrow* other);

  // implements Message ----------------------------------------------

  NotifyTurnGrow* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NotifyTurnGrow& from);
  void MergeFrom(const NotifyTurnGrow& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // optional int32 lv = 2;
  inline bool has_lv() const;
  inline void clear_lv();
  static const int kLvFieldNumber = 2;
  inline ::google::protobuf::int32 lv() const;
  inline void set_lv(::google::protobuf::int32 value);

  // optional .proto_ff.TurnGrow grow = 3;
  inline bool has_grow() const;
  inline void clear_grow();
  static const int kGrowFieldNumber = 3;
  inline const ::proto_ff::TurnGrow& grow() const;
  inline ::proto_ff::TurnGrow* mutable_grow();
  inline ::proto_ff::TurnGrow* release_grow();
  inline void set_allocated_grow(::proto_ff::TurnGrow* grow);

  // repeated int32 strong_ids = 4;
  inline int strong_ids_size() const;
  inline void clear_strong_ids();
  static const int kStrongIdsFieldNumber = 4;
  inline ::google::protobuf::int32 strong_ids(int index) const;
  inline void set_strong_ids(int index, ::google::protobuf::int32 value);
  inline void add_strong_ids(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      strong_ids() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_strong_ids();

  // @@protoc_insertion_point(class_scope:proto_ff.NotifyTurnGrow)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_lv();
  inline void clear_has_lv();
  inline void set_has_grow();
  inline void clear_has_grow();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 lv_;
  ::proto_ff::TurnGrow* grow_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > strong_ids_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_Turn_2eproto();
  friend void protobuf_AssignDesc_Turn_2eproto();
  friend void protobuf_ShutdownFile_Turn_2eproto();

  void InitAsDefaultInstance();
  static NotifyTurnGrow* default_instance_;
};
// -------------------------------------------------------------------

class NotifyTurnSimple : public ::google::protobuf::Message {
 public:
  NotifyTurnSimple();
  virtual ~NotifyTurnSimple();

  NotifyTurnSimple(const NotifyTurnSimple& from);

  inline NotifyTurnSimple& operator=(const NotifyTurnSimple& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NotifyTurnSimple& default_instance();

  void Swap(NotifyTurnSimple* other);

  // implements Message ----------------------------------------------

  NotifyTurnSimple* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NotifyTurnSimple& from);
  void MergeFrom(const NotifyTurnSimple& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .proto_ff.TurnSimple simple = 1;
  inline bool has_simple() const;
  inline void clear_simple();
  static const int kSimpleFieldNumber = 1;
  inline const ::proto_ff::TurnSimple& simple() const;
  inline ::proto_ff::TurnSimple* mutable_simple();
  inline ::proto_ff::TurnSimple* release_simple();
  inline void set_allocated_simple(::proto_ff::TurnSimple* simple);

  // @@protoc_insertion_point(class_scope:proto_ff.NotifyTurnSimple)
 private:
  inline void set_has_simple();
  inline void clear_has_simple();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::proto_ff::TurnSimple* simple_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Turn_2eproto();
  friend void protobuf_AssignDesc_Turn_2eproto();
  friend void protobuf_ShutdownFile_Turn_2eproto();

  void InitAsDefaultInstance();
  static NotifyTurnSimple* default_instance_;
};
// -------------------------------------------------------------------

class NotifyTurnHelper : public ::google::protobuf::Message {
 public:
  NotifyTurnHelper();
  virtual ~NotifyTurnHelper();

  NotifyTurnHelper(const NotifyTurnHelper& from);

  inline NotifyTurnHelper& operator=(const NotifyTurnHelper& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NotifyTurnHelper& default_instance();

  void Swap(NotifyTurnHelper* other);

  // implements Message ----------------------------------------------

  NotifyTurnHelper* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NotifyTurnHelper& from);
  void MergeFrom(const NotifyTurnHelper& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.TurnHelper infos = 1;
  inline int infos_size() const;
  inline void clear_infos();
  static const int kInfosFieldNumber = 1;
  inline const ::proto_ff::TurnHelper& infos(int index) const;
  inline ::proto_ff::TurnHelper* mutable_infos(int index);
  inline ::proto_ff::TurnHelper* add_infos();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::TurnHelper >&
      infos() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::TurnHelper >*
      mutable_infos();

  // @@protoc_insertion_point(class_scope:proto_ff.NotifyTurnHelper)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::TurnHelper > infos_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Turn_2eproto();
  friend void protobuf_AssignDesc_Turn_2eproto();
  friend void protobuf_ShutdownFile_Turn_2eproto();

  void InitAsDefaultInstance();
  static NotifyTurnHelper* default_instance_;
};
// -------------------------------------------------------------------

class NotifyTurnTask : public ::google::protobuf::Message {
 public:
  NotifyTurnTask();
  virtual ~NotifyTurnTask();

  NotifyTurnTask(const NotifyTurnTask& from);

  inline NotifyTurnTask& operator=(const NotifyTurnTask& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NotifyTurnTask& default_instance();

  void Swap(NotifyTurnTask* other);

  // implements Message ----------------------------------------------

  NotifyTurnTask* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NotifyTurnTask& from);
  void MergeFrom(const NotifyTurnTask& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.TurnTask tasks = 1;
  inline int tasks_size() const;
  inline void clear_tasks();
  static const int kTasksFieldNumber = 1;
  inline const ::proto_ff::TurnTask& tasks(int index) const;
  inline ::proto_ff::TurnTask* mutable_tasks(int index);
  inline ::proto_ff::TurnTask* add_tasks();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::TurnTask >&
      tasks() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::TurnTask >*
      mutable_tasks();

  // @@protoc_insertion_point(class_scope:proto_ff.NotifyTurnTask)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::TurnTask > tasks_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Turn_2eproto();
  friend void protobuf_AssignDesc_Turn_2eproto();
  friend void protobuf_ShutdownFile_Turn_2eproto();

  void InitAsDefaultInstance();
  static NotifyTurnTask* default_instance_;
};
// -------------------------------------------------------------------

class TurnRecvTaskReq : public ::google::protobuf::Message {
 public:
  TurnRecvTaskReq();
  virtual ~TurnRecvTaskReq();

  TurnRecvTaskReq(const TurnRecvTaskReq& from);

  inline TurnRecvTaskReq& operator=(const TurnRecvTaskReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TurnRecvTaskReq& default_instance();

  void Swap(TurnRecvTaskReq* other);

  // implements Message ----------------------------------------------

  TurnRecvTaskReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TurnRecvTaskReq& from);
  void MergeFrom(const TurnRecvTaskReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.TurnRecvTaskReq)
 private:
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Turn_2eproto();
  friend void protobuf_AssignDesc_Turn_2eproto();
  friend void protobuf_ShutdownFile_Turn_2eproto();

  void InitAsDefaultInstance();
  static TurnRecvTaskReq* default_instance_;
};
// -------------------------------------------------------------------

class TurnRecvTaskRsp : public ::google::protobuf::Message {
 public:
  TurnRecvTaskRsp();
  virtual ~TurnRecvTaskRsp();

  TurnRecvTaskRsp(const TurnRecvTaskRsp& from);

  inline TurnRecvTaskRsp& operator=(const TurnRecvTaskRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TurnRecvTaskRsp& default_instance();

  void Swap(TurnRecvTaskRsp* other);

  // implements Message ----------------------------------------------

  TurnRecvTaskRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TurnRecvTaskRsp& from);
  void MergeFrom(const TurnRecvTaskRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 ret = 1;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 1;
  inline ::google::protobuf::int32 ret() const;
  inline void set_ret(::google::protobuf::int32 value);

  // optional int32 id = 2;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 2;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.TurnRecvTaskRsp)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 ret_;
  ::google::protobuf::int32 id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Turn_2eproto();
  friend void protobuf_AssignDesc_Turn_2eproto();
  friend void protobuf_ShutdownFile_Turn_2eproto();

  void InitAsDefaultInstance();
  static TurnRecvTaskRsp* default_instance_;
};
// -------------------------------------------------------------------

class TurnLvReq : public ::google::protobuf::Message {
 public:
  TurnLvReq();
  virtual ~TurnLvReq();

  TurnLvReq(const TurnLvReq& from);

  inline TurnLvReq& operator=(const TurnLvReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TurnLvReq& default_instance();

  void Swap(TurnLvReq* other);

  // implements Message ----------------------------------------------

  TurnLvReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TurnLvReq& from);
  void MergeFrom(const TurnLvReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto_ff.TurnLvReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_Turn_2eproto();
  friend void protobuf_AssignDesc_Turn_2eproto();
  friend void protobuf_ShutdownFile_Turn_2eproto();

  void InitAsDefaultInstance();
  static TurnLvReq* default_instance_;
};
// -------------------------------------------------------------------

class TurnLvRsp : public ::google::protobuf::Message {
 public:
  TurnLvRsp();
  virtual ~TurnLvRsp();

  TurnLvRsp(const TurnLvRsp& from);

  inline TurnLvRsp& operator=(const TurnLvRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TurnLvRsp& default_instance();

  void Swap(TurnLvRsp* other);

  // implements Message ----------------------------------------------

  TurnLvRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TurnLvRsp& from);
  void MergeFrom(const TurnLvRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 ret = 1;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 1;
  inline ::google::protobuf::int32 ret() const;
  inline void set_ret(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.TurnLvRsp)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 ret_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Turn_2eproto();
  friend void protobuf_AssignDesc_Turn_2eproto();
  friend void protobuf_ShutdownFile_Turn_2eproto();

  void InitAsDefaultInstance();
  static TurnLvRsp* default_instance_;
};
// -------------------------------------------------------------------

class TurnHelperReq : public ::google::protobuf::Message {
 public:
  TurnHelperReq();
  virtual ~TurnHelperReq();

  TurnHelperReq(const TurnHelperReq& from);

  inline TurnHelperReq& operator=(const TurnHelperReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TurnHelperReq& default_instance();

  void Swap(TurnHelperReq* other);

  // implements Message ----------------------------------------------

  TurnHelperReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TurnHelperReq& from);
  void MergeFrom(const TurnHelperReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 cid = 1;
  inline bool has_cid() const;
  inline void clear_cid();
  static const int kCidFieldNumber = 1;
  inline ::google::protobuf::uint64 cid() const;
  inline void set_cid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.TurnHelperReq)
 private:
  inline void set_has_cid();
  inline void clear_has_cid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 cid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Turn_2eproto();
  friend void protobuf_AssignDesc_Turn_2eproto();
  friend void protobuf_ShutdownFile_Turn_2eproto();

  void InitAsDefaultInstance();
  static TurnHelperReq* default_instance_;
};
// -------------------------------------------------------------------

class TurnHelperRsp : public ::google::protobuf::Message {
 public:
  TurnHelperRsp();
  virtual ~TurnHelperRsp();

  TurnHelperRsp(const TurnHelperRsp& from);

  inline TurnHelperRsp& operator=(const TurnHelperRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TurnHelperRsp& default_instance();

  void Swap(TurnHelperRsp* other);

  // implements Message ----------------------------------------------

  TurnHelperRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TurnHelperRsp& from);
  void MergeFrom(const TurnHelperRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 ret = 1;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 1;
  inline ::google::protobuf::int32 ret() const;
  inline void set_ret(::google::protobuf::int32 value);

  // optional uint64 cid = 2;
  inline bool has_cid() const;
  inline void clear_cid();
  static const int kCidFieldNumber = 2;
  inline ::google::protobuf::uint64 cid() const;
  inline void set_cid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.TurnHelperRsp)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();
  inline void set_has_cid();
  inline void clear_has_cid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 cid_;
  ::google::protobuf::int32 ret_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Turn_2eproto();
  friend void protobuf_AssignDesc_Turn_2eproto();
  friend void protobuf_ShutdownFile_Turn_2eproto();

  void InitAsDefaultInstance();
  static TurnHelperRsp* default_instance_;
};
// -------------------------------------------------------------------

class NotifyTurnNewHelper : public ::google::protobuf::Message {
 public:
  NotifyTurnNewHelper();
  virtual ~NotifyTurnNewHelper();

  NotifyTurnNewHelper(const NotifyTurnNewHelper& from);

  inline NotifyTurnNewHelper& operator=(const NotifyTurnNewHelper& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NotifyTurnNewHelper& default_instance();

  void Swap(NotifyTurnNewHelper* other);

  // implements Message ----------------------------------------------

  NotifyTurnNewHelper* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NotifyTurnNewHelper& from);
  void MergeFrom(const NotifyTurnNewHelper& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 helper_cid = 1;
  inline bool has_helper_cid() const;
  inline void clear_helper_cid();
  static const int kHelperCidFieldNumber = 1;
  inline ::google::protobuf::uint64 helper_cid() const;
  inline void set_helper_cid(::google::protobuf::uint64 value);

  // optional bytes helper_name = 2;
  inline bool has_helper_name() const;
  inline void clear_helper_name();
  static const int kHelperNameFieldNumber = 2;
  inline const ::std::string& helper_name() const;
  inline void set_helper_name(const ::std::string& value);
  inline void set_helper_name(const char* value);
  inline void set_helper_name(const void* value, size_t size);
  inline ::std::string* mutable_helper_name();
  inline ::std::string* release_helper_name();
  inline void set_allocated_helper_name(::std::string* helper_name);

  // @@protoc_insertion_point(class_scope:proto_ff.NotifyTurnNewHelper)
 private:
  inline void set_has_helper_cid();
  inline void clear_has_helper_cid();
  inline void set_has_helper_name();
  inline void clear_has_helper_name();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 helper_cid_;
  ::std::string* helper_name_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Turn_2eproto();
  friend void protobuf_AssignDesc_Turn_2eproto();
  friend void protobuf_ShutdownFile_Turn_2eproto();

  void InitAsDefaultInstance();
  static NotifyTurnNewHelper* default_instance_;
};
// -------------------------------------------------------------------

class TurnChgReq : public ::google::protobuf::Message {
 public:
  TurnChgReq();
  virtual ~TurnChgReq();

  TurnChgReq(const TurnChgReq& from);

  inline TurnChgReq& operator=(const TurnChgReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TurnChgReq& default_instance();

  void Swap(TurnChgReq* other);

  // implements Message ----------------------------------------------

  TurnChgReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TurnChgReq& from);
  void MergeFrom(const TurnChgReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto_ff.TurnChgReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_Turn_2eproto();
  friend void protobuf_AssignDesc_Turn_2eproto();
  friend void protobuf_ShutdownFile_Turn_2eproto();

  void InitAsDefaultInstance();
  static TurnChgReq* default_instance_;
};
// -------------------------------------------------------------------

class TurnChgRsp : public ::google::protobuf::Message {
 public:
  TurnChgRsp();
  virtual ~TurnChgRsp();

  TurnChgRsp(const TurnChgRsp& from);

  inline TurnChgRsp& operator=(const TurnChgRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TurnChgRsp& default_instance();

  void Swap(TurnChgRsp* other);

  // implements Message ----------------------------------------------

  TurnChgRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TurnChgRsp& from);
  void MergeFrom(const TurnChgRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 ret = 1;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 1;
  inline ::google::protobuf::int32 ret() const;
  inline void set_ret(::google::protobuf::int32 value);

  // optional int32 code = 2;
  inline bool has_code() const;
  inline void clear_code();
  static const int kCodeFieldNumber = 2;
  inline ::google::protobuf::int32 code() const;
  inline void set_code(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.TurnChgRsp)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();
  inline void set_has_code();
  inline void clear_has_code();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 ret_;
  ::google::protobuf::int32 code_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Turn_2eproto();
  friend void protobuf_AssignDesc_Turn_2eproto();
  friend void protobuf_ShutdownFile_Turn_2eproto();

  void InitAsDefaultInstance();
  static TurnChgRsp* default_instance_;
};
// -------------------------------------------------------------------

class TurnEquipDressReq : public ::google::protobuf::Message {
 public:
  TurnEquipDressReq();
  virtual ~TurnEquipDressReq();

  TurnEquipDressReq(const TurnEquipDressReq& from);

  inline TurnEquipDressReq& operator=(const TurnEquipDressReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TurnEquipDressReq& default_instance();

  void Swap(TurnEquipDressReq* other);

  // implements Message ----------------------------------------------

  TurnEquipDressReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TurnEquipDressReq& from);
  void MergeFrom(const TurnEquipDressReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 bag_pos = 1;
  inline bool has_bag_pos() const;
  inline void clear_bag_pos();
  static const int kBagPosFieldNumber = 1;
  inline ::google::protobuf::int32 bag_pos() const;
  inline void set_bag_pos(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.TurnEquipDressReq)
 private:
  inline void set_has_bag_pos();
  inline void clear_has_bag_pos();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 bag_pos_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Turn_2eproto();
  friend void protobuf_AssignDesc_Turn_2eproto();
  friend void protobuf_ShutdownFile_Turn_2eproto();

  void InitAsDefaultInstance();
  static TurnEquipDressReq* default_instance_;
};
// -------------------------------------------------------------------

class TurnEquipDressRsp : public ::google::protobuf::Message {
 public:
  TurnEquipDressRsp();
  virtual ~TurnEquipDressRsp();

  TurnEquipDressRsp(const TurnEquipDressRsp& from);

  inline TurnEquipDressRsp& operator=(const TurnEquipDressRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TurnEquipDressRsp& default_instance();

  void Swap(TurnEquipDressRsp* other);

  // implements Message ----------------------------------------------

  TurnEquipDressRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TurnEquipDressRsp& from);
  void MergeFrom(const TurnEquipDressRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 bag_pos = 1;
  inline bool has_bag_pos() const;
  inline void clear_bag_pos();
  static const int kBagPosFieldNumber = 1;
  inline ::google::protobuf::int32 bag_pos() const;
  inline void set_bag_pos(::google::protobuf::int32 value);

  // optional int32 ret = 2;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 2;
  inline ::google::protobuf::int32 ret() const;
  inline void set_ret(::google::protobuf::int32 value);

  // optional int32 trans = 3;
  inline bool has_trans() const;
  inline void clear_trans();
  static const int kTransFieldNumber = 3;
  inline ::google::protobuf::int32 trans() const;
  inline void set_trans(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.TurnEquipDressRsp)
 private:
  inline void set_has_bag_pos();
  inline void clear_has_bag_pos();
  inline void set_has_ret();
  inline void clear_has_ret();
  inline void set_has_trans();
  inline void clear_has_trans();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 bag_pos_;
  ::google::protobuf::int32 ret_;
  ::google::protobuf::int32 trans_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_Turn_2eproto();
  friend void protobuf_AssignDesc_Turn_2eproto();
  friend void protobuf_ShutdownFile_Turn_2eproto();

  void InitAsDefaultInstance();
  static TurnEquipDressRsp* default_instance_;
};
// -------------------------------------------------------------------

class TurnStrongReq : public ::google::protobuf::Message {
 public:
  TurnStrongReq();
  virtual ~TurnStrongReq();

  TurnStrongReq(const TurnStrongReq& from);

  inline TurnStrongReq& operator=(const TurnStrongReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TurnStrongReq& default_instance();

  void Swap(TurnStrongReq* other);

  // implements Message ----------------------------------------------

  TurnStrongReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TurnStrongReq& from);
  void MergeFrom(const TurnStrongReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 lv = 1;
  inline bool has_lv() const;
  inline void clear_lv();
  static const int kLvFieldNumber = 1;
  inline ::google::protobuf::int32 lv() const;
  inline void set_lv(::google::protobuf::int32 value);

  // optional int32 pos = 2;
  inline bool has_pos() const;
  inline void clear_pos();
  static const int kPosFieldNumber = 2;
  inline ::google::protobuf::int32 pos() const;
  inline void set_pos(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.TurnStrongReq)
 private:
  inline void set_has_lv();
  inline void clear_has_lv();
  inline void set_has_pos();
  inline void clear_has_pos();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 lv_;
  ::google::protobuf::int32 pos_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Turn_2eproto();
  friend void protobuf_AssignDesc_Turn_2eproto();
  friend void protobuf_ShutdownFile_Turn_2eproto();

  void InitAsDefaultInstance();
  static TurnStrongReq* default_instance_;
};
// -------------------------------------------------------------------

class TurnStrongRsp : public ::google::protobuf::Message {
 public:
  TurnStrongRsp();
  virtual ~TurnStrongRsp();

  TurnStrongRsp(const TurnStrongRsp& from);

  inline TurnStrongRsp& operator=(const TurnStrongRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TurnStrongRsp& default_instance();

  void Swap(TurnStrongRsp* other);

  // implements Message ----------------------------------------------

  TurnStrongRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TurnStrongRsp& from);
  void MergeFrom(const TurnStrongRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 ret = 1;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 1;
  inline ::google::protobuf::int32 ret() const;
  inline void set_ret(::google::protobuf::int32 value);

  // optional int32 lv = 2;
  inline bool has_lv() const;
  inline void clear_lv();
  static const int kLvFieldNumber = 2;
  inline ::google::protobuf::int32 lv() const;
  inline void set_lv(::google::protobuf::int32 value);

  // optional int32 pos = 3;
  inline bool has_pos() const;
  inline void clear_pos();
  static const int kPosFieldNumber = 3;
  inline ::google::protobuf::int32 pos() const;
  inline void set_pos(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.TurnStrongRsp)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();
  inline void set_has_lv();
  inline void clear_has_lv();
  inline void set_has_pos();
  inline void clear_has_pos();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 ret_;
  ::google::protobuf::int32 lv_;
  ::google::protobuf::int32 pos_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_Turn_2eproto();
  friend void protobuf_AssignDesc_Turn_2eproto();
  friend void protobuf_ShutdownFile_Turn_2eproto();

  void InitAsDefaultInstance();
  static TurnStrongRsp* default_instance_;
};
// -------------------------------------------------------------------

class TurnEvolveReq : public ::google::protobuf::Message {
 public:
  TurnEvolveReq();
  virtual ~TurnEvolveReq();

  TurnEvolveReq(const TurnEvolveReq& from);

  inline TurnEvolveReq& operator=(const TurnEvolveReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TurnEvolveReq& default_instance();

  void Swap(TurnEvolveReq* other);

  // implements Message ----------------------------------------------

  TurnEvolveReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TurnEvolveReq& from);
  void MergeFrom(const TurnEvolveReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 lv = 1;
  inline bool has_lv() const;
  inline void clear_lv();
  static const int kLvFieldNumber = 1;
  inline ::google::protobuf::int32 lv() const;
  inline void set_lv(::google::protobuf::int32 value);

  // optional int32 pos = 2;
  inline bool has_pos() const;
  inline void clear_pos();
  static const int kPosFieldNumber = 2;
  inline ::google::protobuf::int32 pos() const;
  inline void set_pos(::google::protobuf::int32 value);

  // repeated int32 cost_bag_pos = 3;
  inline int cost_bag_pos_size() const;
  inline void clear_cost_bag_pos();
  static const int kCostBagPosFieldNumber = 3;
  inline ::google::protobuf::int32 cost_bag_pos(int index) const;
  inline void set_cost_bag_pos(int index, ::google::protobuf::int32 value);
  inline void add_cost_bag_pos(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      cost_bag_pos() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_cost_bag_pos();

  // @@protoc_insertion_point(class_scope:proto_ff.TurnEvolveReq)
 private:
  inline void set_has_lv();
  inline void clear_has_lv();
  inline void set_has_pos();
  inline void clear_has_pos();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 lv_;
  ::google::protobuf::int32 pos_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > cost_bag_pos_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_Turn_2eproto();
  friend void protobuf_AssignDesc_Turn_2eproto();
  friend void protobuf_ShutdownFile_Turn_2eproto();

  void InitAsDefaultInstance();
  static TurnEvolveReq* default_instance_;
};
// -------------------------------------------------------------------

class TurnEvolveRsp : public ::google::protobuf::Message {
 public:
  TurnEvolveRsp();
  virtual ~TurnEvolveRsp();

  TurnEvolveRsp(const TurnEvolveRsp& from);

  inline TurnEvolveRsp& operator=(const TurnEvolveRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TurnEvolveRsp& default_instance();

  void Swap(TurnEvolveRsp* other);

  // implements Message ----------------------------------------------

  TurnEvolveRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TurnEvolveRsp& from);
  void MergeFrom(const TurnEvolveRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 ret = 1;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 1;
  inline ::google::protobuf::int32 ret() const;
  inline void set_ret(::google::protobuf::int32 value);

  // optional int32 lv = 2;
  inline bool has_lv() const;
  inline void clear_lv();
  static const int kLvFieldNumber = 2;
  inline ::google::protobuf::int32 lv() const;
  inline void set_lv(::google::protobuf::int32 value);

  // optional int32 pos = 3;
  inline bool has_pos() const;
  inline void clear_pos();
  static const int kPosFieldNumber = 3;
  inline ::google::protobuf::int32 pos() const;
  inline void set_pos(::google::protobuf::int32 value);

  // repeated int32 cost_bag_pos = 4;
  inline int cost_bag_pos_size() const;
  inline void clear_cost_bag_pos();
  static const int kCostBagPosFieldNumber = 4;
  inline ::google::protobuf::int32 cost_bag_pos(int index) const;
  inline void set_cost_bag_pos(int index, ::google::protobuf::int32 value);
  inline void add_cost_bag_pos(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      cost_bag_pos() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_cost_bag_pos();

  // @@protoc_insertion_point(class_scope:proto_ff.TurnEvolveRsp)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();
  inline void set_has_lv();
  inline void clear_has_lv();
  inline void set_has_pos();
  inline void clear_has_pos();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 ret_;
  ::google::protobuf::int32 lv_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > cost_bag_pos_;
  ::google::protobuf::int32 pos_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_Turn_2eproto();
  friend void protobuf_AssignDesc_Turn_2eproto();
  friend void protobuf_ShutdownFile_Turn_2eproto();

  void InitAsDefaultInstance();
  static TurnEvolveRsp* default_instance_;
};
// -------------------------------------------------------------------

class TurnAwakenReq : public ::google::protobuf::Message {
 public:
  TurnAwakenReq();
  virtual ~TurnAwakenReq();

  TurnAwakenReq(const TurnAwakenReq& from);

  inline TurnAwakenReq& operator=(const TurnAwakenReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TurnAwakenReq& default_instance();

  void Swap(TurnAwakenReq* other);

  // implements Message ----------------------------------------------

  TurnAwakenReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TurnAwakenReq& from);
  void MergeFrom(const TurnAwakenReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 lv = 1;
  inline bool has_lv() const;
  inline void clear_lv();
  static const int kLvFieldNumber = 1;
  inline ::google::protobuf::int32 lv() const;
  inline void set_lv(::google::protobuf::int32 value);

  // optional int32 pos = 2;
  inline bool has_pos() const;
  inline void clear_pos();
  static const int kPosFieldNumber = 2;
  inline ::google::protobuf::int32 pos() const;
  inline void set_pos(::google::protobuf::int32 value);

  // repeated int32 cost_bag_pos = 3;
  inline int cost_bag_pos_size() const;
  inline void clear_cost_bag_pos();
  static const int kCostBagPosFieldNumber = 3;
  inline ::google::protobuf::int32 cost_bag_pos(int index) const;
  inline void set_cost_bag_pos(int index, ::google::protobuf::int32 value);
  inline void add_cost_bag_pos(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      cost_bag_pos() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_cost_bag_pos();

  // @@protoc_insertion_point(class_scope:proto_ff.TurnAwakenReq)
 private:
  inline void set_has_lv();
  inline void clear_has_lv();
  inline void set_has_pos();
  inline void clear_has_pos();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 lv_;
  ::google::protobuf::int32 pos_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > cost_bag_pos_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_Turn_2eproto();
  friend void protobuf_AssignDesc_Turn_2eproto();
  friend void protobuf_ShutdownFile_Turn_2eproto();

  void InitAsDefaultInstance();
  static TurnAwakenReq* default_instance_;
};
// -------------------------------------------------------------------

class TurnAwakenRsp : public ::google::protobuf::Message {
 public:
  TurnAwakenRsp();
  virtual ~TurnAwakenRsp();

  TurnAwakenRsp(const TurnAwakenRsp& from);

  inline TurnAwakenRsp& operator=(const TurnAwakenRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TurnAwakenRsp& default_instance();

  void Swap(TurnAwakenRsp* other);

  // implements Message ----------------------------------------------

  TurnAwakenRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TurnAwakenRsp& from);
  void MergeFrom(const TurnAwakenRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 ret = 1;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 1;
  inline ::google::protobuf::int32 ret() const;
  inline void set_ret(::google::protobuf::int32 value);

  // optional int32 lv = 2;
  inline bool has_lv() const;
  inline void clear_lv();
  static const int kLvFieldNumber = 2;
  inline ::google::protobuf::int32 lv() const;
  inline void set_lv(::google::protobuf::int32 value);

  // optional int32 pos = 3;
  inline bool has_pos() const;
  inline void clear_pos();
  static const int kPosFieldNumber = 3;
  inline ::google::protobuf::int32 pos() const;
  inline void set_pos(::google::protobuf::int32 value);

  // repeated int32 cost_bag_pos = 4;
  inline int cost_bag_pos_size() const;
  inline void clear_cost_bag_pos();
  static const int kCostBagPosFieldNumber = 4;
  inline ::google::protobuf::int32 cost_bag_pos(int index) const;
  inline void set_cost_bag_pos(int index, ::google::protobuf::int32 value);
  inline void add_cost_bag_pos(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      cost_bag_pos() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_cost_bag_pos();

  // @@protoc_insertion_point(class_scope:proto_ff.TurnAwakenRsp)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();
  inline void set_has_lv();
  inline void clear_has_lv();
  inline void set_has_pos();
  inline void clear_has_pos();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 ret_;
  ::google::protobuf::int32 lv_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > cost_bag_pos_;
  ::google::protobuf::int32 pos_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_Turn_2eproto();
  friend void protobuf_AssignDesc_Turn_2eproto();
  friend void protobuf_ShutdownFile_Turn_2eproto();

  void InitAsDefaultInstance();
  static TurnAwakenRsp* default_instance_;
};
// -------------------------------------------------------------------

class TurnComposeReq : public ::google::protobuf::Message {
 public:
  TurnComposeReq();
  virtual ~TurnComposeReq();

  TurnComposeReq(const TurnComposeReq& from);

  inline TurnComposeReq& operator=(const TurnComposeReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TurnComposeReq& default_instance();

  void Swap(TurnComposeReq* other);

  // implements Message ----------------------------------------------

  TurnComposeReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TurnComposeReq& from);
  void MergeFrom(const TurnComposeReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 lv = 1;
  inline bool has_lv() const;
  inline void clear_lv();
  static const int kLvFieldNumber = 1;
  inline ::google::protobuf::int32 lv() const;
  inline void set_lv(::google::protobuf::int32 value);

  // optional int32 pos = 2;
  inline bool has_pos() const;
  inline void clear_pos();
  static const int kPosFieldNumber = 2;
  inline ::google::protobuf::int32 pos() const;
  inline void set_pos(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.TurnComposeReq)
 private:
  inline void set_has_lv();
  inline void clear_has_lv();
  inline void set_has_pos();
  inline void clear_has_pos();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 lv_;
  ::google::protobuf::int32 pos_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Turn_2eproto();
  friend void protobuf_AssignDesc_Turn_2eproto();
  friend void protobuf_ShutdownFile_Turn_2eproto();

  void InitAsDefaultInstance();
  static TurnComposeReq* default_instance_;
};
// -------------------------------------------------------------------

class TurnComposeRsp : public ::google::protobuf::Message {
 public:
  TurnComposeRsp();
  virtual ~TurnComposeRsp();

  TurnComposeRsp(const TurnComposeRsp& from);

  inline TurnComposeRsp& operator=(const TurnComposeRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TurnComposeRsp& default_instance();

  void Swap(TurnComposeRsp* other);

  // implements Message ----------------------------------------------

  TurnComposeRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TurnComposeRsp& from);
  void MergeFrom(const TurnComposeRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 ret = 1;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 1;
  inline ::google::protobuf::int32 ret() const;
  inline void set_ret(::google::protobuf::int32 value);

  // optional int32 lv = 2;
  inline bool has_lv() const;
  inline void clear_lv();
  static const int kLvFieldNumber = 2;
  inline ::google::protobuf::int32 lv() const;
  inline void set_lv(::google::protobuf::int32 value);

  // optional int32 pos = 3;
  inline bool has_pos() const;
  inline void clear_pos();
  static const int kPosFieldNumber = 3;
  inline ::google::protobuf::int32 pos() const;
  inline void set_pos(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.TurnComposeRsp)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();
  inline void set_has_lv();
  inline void clear_has_lv();
  inline void set_has_pos();
  inline void clear_has_pos();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 ret_;
  ::google::protobuf::int32 lv_;
  ::google::protobuf::int32 pos_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_Turn_2eproto();
  friend void protobuf_AssignDesc_Turn_2eproto();
  friend void protobuf_ShutdownFile_Turn_2eproto();

  void InitAsDefaultInstance();
  static TurnComposeRsp* default_instance_;
};
// -------------------------------------------------------------------

class TurnStarReq : public ::google::protobuf::Message {
 public:
  TurnStarReq();
  virtual ~TurnStarReq();

  TurnStarReq(const TurnStarReq& from);

  inline TurnStarReq& operator=(const TurnStarReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TurnStarReq& default_instance();

  void Swap(TurnStarReq* other);

  // implements Message ----------------------------------------------

  TurnStarReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TurnStarReq& from);
  void MergeFrom(const TurnStarReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 lv = 1;
  inline bool has_lv() const;
  inline void clear_lv();
  static const int kLvFieldNumber = 1;
  inline ::google::protobuf::int32 lv() const;
  inline void set_lv(::google::protobuf::int32 value);

  // optional int32 pos = 2;
  inline bool has_pos() const;
  inline void clear_pos();
  static const int kPosFieldNumber = 2;
  inline ::google::protobuf::int32 pos() const;
  inline void set_pos(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.TurnStarReq)
 private:
  inline void set_has_lv();
  inline void clear_has_lv();
  inline void set_has_pos();
  inline void clear_has_pos();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 lv_;
  ::google::protobuf::int32 pos_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Turn_2eproto();
  friend void protobuf_AssignDesc_Turn_2eproto();
  friend void protobuf_ShutdownFile_Turn_2eproto();

  void InitAsDefaultInstance();
  static TurnStarReq* default_instance_;
};
// -------------------------------------------------------------------

class TurnStarRsp : public ::google::protobuf::Message {
 public:
  TurnStarRsp();
  virtual ~TurnStarRsp();

  TurnStarRsp(const TurnStarRsp& from);

  inline TurnStarRsp& operator=(const TurnStarRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TurnStarRsp& default_instance();

  void Swap(TurnStarRsp* other);

  // implements Message ----------------------------------------------

  TurnStarRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TurnStarRsp& from);
  void MergeFrom(const TurnStarRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 ret = 1;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 1;
  inline ::google::protobuf::int32 ret() const;
  inline void set_ret(::google::protobuf::int32 value);

  // optional int32 lv = 2;
  inline bool has_lv() const;
  inline void clear_lv();
  static const int kLvFieldNumber = 2;
  inline ::google::protobuf::int32 lv() const;
  inline void set_lv(::google::protobuf::int32 value);

  // optional int32 pos = 3;
  inline bool has_pos() const;
  inline void clear_pos();
  static const int kPosFieldNumber = 3;
  inline ::google::protobuf::int32 pos() const;
  inline void set_pos(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.TurnStarRsp)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();
  inline void set_has_lv();
  inline void clear_has_lv();
  inline void set_has_pos();
  inline void clear_has_pos();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 ret_;
  ::google::protobuf::int32 lv_;
  ::google::protobuf::int32 pos_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_Turn_2eproto();
  friend void protobuf_AssignDesc_Turn_2eproto();
  friend void protobuf_ShutdownFile_Turn_2eproto();

  void InitAsDefaultInstance();
  static TurnStarRsp* default_instance_;
};
// -------------------------------------------------------------------

class TurnStrongActiveReq : public ::google::protobuf::Message {
 public:
  TurnStrongActiveReq();
  virtual ~TurnStrongActiveReq();

  TurnStrongActiveReq(const TurnStrongActiveReq& from);

  inline TurnStrongActiveReq& operator=(const TurnStrongActiveReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TurnStrongActiveReq& default_instance();

  void Swap(TurnStrongActiveReq* other);

  // implements Message ----------------------------------------------

  TurnStrongActiveReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TurnStrongActiveReq& from);
  void MergeFrom(const TurnStrongActiveReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.TurnStrongActiveReq)
 private:
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Turn_2eproto();
  friend void protobuf_AssignDesc_Turn_2eproto();
  friend void protobuf_ShutdownFile_Turn_2eproto();

  void InitAsDefaultInstance();
  static TurnStrongActiveReq* default_instance_;
};
// -------------------------------------------------------------------

class TurnStrongActiveRsp : public ::google::protobuf::Message {
 public:
  TurnStrongActiveRsp();
  virtual ~TurnStrongActiveRsp();

  TurnStrongActiveRsp(const TurnStrongActiveRsp& from);

  inline TurnStrongActiveRsp& operator=(const TurnStrongActiveRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TurnStrongActiveRsp& default_instance();

  void Swap(TurnStrongActiveRsp* other);

  // implements Message ----------------------------------------------

  TurnStrongActiveRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TurnStrongActiveRsp& from);
  void MergeFrom(const TurnStrongActiveRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 ret = 1;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 1;
  inline ::google::protobuf::int32 ret() const;
  inline void set_ret(::google::protobuf::int32 value);

  // optional int32 id = 2;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 2;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.TurnStrongActiveRsp)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 ret_;
  ::google::protobuf::int32 id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Turn_2eproto();
  friend void protobuf_AssignDesc_Turn_2eproto();
  friend void protobuf_ShutdownFile_Turn_2eproto();

  void InitAsDefaultInstance();
  static TurnStrongActiveRsp* default_instance_;
};
// -------------------------------------------------------------------

class TurnStarActiveReq : public ::google::protobuf::Message {
 public:
  TurnStarActiveReq();
  virtual ~TurnStarActiveReq();

  TurnStarActiveReq(const TurnStarActiveReq& from);

  inline TurnStarActiveReq& operator=(const TurnStarActiveReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TurnStarActiveReq& default_instance();

  void Swap(TurnStarActiveReq* other);

  // implements Message ----------------------------------------------

  TurnStarActiveReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TurnStarActiveReq& from);
  void MergeFrom(const TurnStarActiveReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.TurnStarActiveReq)
 private:
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Turn_2eproto();
  friend void protobuf_AssignDesc_Turn_2eproto();
  friend void protobuf_ShutdownFile_Turn_2eproto();

  void InitAsDefaultInstance();
  static TurnStarActiveReq* default_instance_;
};
// -------------------------------------------------------------------

class TurnStarActiveRsp : public ::google::protobuf::Message {
 public:
  TurnStarActiveRsp();
  virtual ~TurnStarActiveRsp();

  TurnStarActiveRsp(const TurnStarActiveRsp& from);

  inline TurnStarActiveRsp& operator=(const TurnStarActiveRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TurnStarActiveRsp& default_instance();

  void Swap(TurnStarActiveRsp* other);

  // implements Message ----------------------------------------------

  TurnStarActiveRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TurnStarActiveRsp& from);
  void MergeFrom(const TurnStarActiveRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 ret = 1;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 1;
  inline ::google::protobuf::int32 ret() const;
  inline void set_ret(::google::protobuf::int32 value);

  // optional int32 id = 2;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 2;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.TurnStarActiveRsp)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 ret_;
  ::google::protobuf::int32 id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Turn_2eproto();
  friend void protobuf_AssignDesc_Turn_2eproto();
  friend void protobuf_ShutdownFile_Turn_2eproto();

  void InitAsDefaultInstance();
  static TurnStarActiveRsp* default_instance_;
};
// -------------------------------------------------------------------

class LCTurnHelperReq : public ::google::protobuf::Message {
 public:
  LCTurnHelperReq();
  virtual ~LCTurnHelperReq();

  LCTurnHelperReq(const LCTurnHelperReq& from);

  inline LCTurnHelperReq& operator=(const LCTurnHelperReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LCTurnHelperReq& default_instance();

  void Swap(LCTurnHelperReq* other);

  // implements Message ----------------------------------------------

  LCTurnHelperReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LCTurnHelperReq& from);
  void MergeFrom(const LCTurnHelperReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 src = 1;
  inline bool has_src() const;
  inline void clear_src();
  static const int kSrcFieldNumber = 1;
  inline ::google::protobuf::uint64 src() const;
  inline void set_src(::google::protobuf::uint64 value);

  // optional bytes src_name = 2;
  inline bool has_src_name() const;
  inline void clear_src_name();
  static const int kSrcNameFieldNumber = 2;
  inline const ::std::string& src_name() const;
  inline void set_src_name(const ::std::string& value);
  inline void set_src_name(const char* value);
  inline void set_src_name(const void* value, size_t size);
  inline ::std::string* mutable_src_name();
  inline ::std::string* release_src_name();
  inline void set_allocated_src_name(::std::string* src_name);

  // optional uint64 dst = 3;
  inline bool has_dst() const;
  inline void clear_dst();
  static const int kDstFieldNumber = 3;
  inline ::google::protobuf::uint64 dst() const;
  inline void set_dst(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.LCTurnHelperReq)
 private:
  inline void set_has_src();
  inline void clear_has_src();
  inline void set_has_src_name();
  inline void clear_has_src_name();
  inline void set_has_dst();
  inline void clear_has_dst();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 src_;
  ::std::string* src_name_;
  ::google::protobuf::uint64 dst_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_Turn_2eproto();
  friend void protobuf_AssignDesc_Turn_2eproto();
  friend void protobuf_ShutdownFile_Turn_2eproto();

  void InitAsDefaultInstance();
  static LCTurnHelperReq* default_instance_;
};
// -------------------------------------------------------------------

class CLNotifyTurnHelper : public ::google::protobuf::Message {
 public:
  CLNotifyTurnHelper();
  virtual ~CLNotifyTurnHelper();

  CLNotifyTurnHelper(const CLNotifyTurnHelper& from);

  inline CLNotifyTurnHelper& operator=(const CLNotifyTurnHelper& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CLNotifyTurnHelper& default_instance();

  void Swap(CLNotifyTurnHelper* other);

  // implements Message ----------------------------------------------

  CLNotifyTurnHelper* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CLNotifyTurnHelper& from);
  void MergeFrom(const CLNotifyTurnHelper& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 src = 1;
  inline bool has_src() const;
  inline void clear_src();
  static const int kSrcFieldNumber = 1;
  inline ::google::protobuf::uint64 src() const;
  inline void set_src(::google::protobuf::uint64 value);

  // optional bytes src_name = 2;
  inline bool has_src_name() const;
  inline void clear_src_name();
  static const int kSrcNameFieldNumber = 2;
  inline const ::std::string& src_name() const;
  inline void set_src_name(const ::std::string& value);
  inline void set_src_name(const char* value);
  inline void set_src_name(const void* value, size_t size);
  inline ::std::string* mutable_src_name();
  inline ::std::string* release_src_name();
  inline void set_allocated_src_name(::std::string* src_name);

  // optional uint64 dst = 3;
  inline bool has_dst() const;
  inline void clear_dst();
  static const int kDstFieldNumber = 3;
  inline ::google::protobuf::uint64 dst() const;
  inline void set_dst(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.CLNotifyTurnHelper)
 private:
  inline void set_has_src();
  inline void clear_has_src();
  inline void set_has_src_name();
  inline void clear_has_src_name();
  inline void set_has_dst();
  inline void clear_has_dst();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 src_;
  ::std::string* src_name_;
  ::google::protobuf::uint64 dst_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_Turn_2eproto();
  friend void protobuf_AssignDesc_Turn_2eproto();
  friend void protobuf_ShutdownFile_Turn_2eproto();

  void InitAsDefaultInstance();
  static CLNotifyTurnHelper* default_instance_;
};
// -------------------------------------------------------------------

class LCTurnHelperRsp : public ::google::protobuf::Message {
 public:
  LCTurnHelperRsp();
  virtual ~LCTurnHelperRsp();

  LCTurnHelperRsp(const LCTurnHelperRsp& from);

  inline LCTurnHelperRsp& operator=(const LCTurnHelperRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LCTurnHelperRsp& default_instance();

  void Swap(LCTurnHelperRsp* other);

  // implements Message ----------------------------------------------

  LCTurnHelperRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LCTurnHelperRsp& from);
  void MergeFrom(const LCTurnHelperRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 ret = 1;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 1;
  inline ::google::protobuf::int32 ret() const;
  inline void set_ret(::google::protobuf::int32 value);

  // optional uint64 src = 2;
  inline bool has_src() const;
  inline void clear_src();
  static const int kSrcFieldNumber = 2;
  inline ::google::protobuf::uint64 src() const;
  inline void set_src(::google::protobuf::uint64 value);

  // optional bytes src_name = 3;
  inline bool has_src_name() const;
  inline void clear_src_name();
  static const int kSrcNameFieldNumber = 3;
  inline const ::std::string& src_name() const;
  inline void set_src_name(const ::std::string& value);
  inline void set_src_name(const char* value);
  inline void set_src_name(const void* value, size_t size);
  inline ::std::string* mutable_src_name();
  inline ::std::string* release_src_name();
  inline void set_allocated_src_name(::std::string* src_name);

  // optional uint64 dst = 4;
  inline bool has_dst() const;
  inline void clear_dst();
  static const int kDstFieldNumber = 4;
  inline ::google::protobuf::uint64 dst() const;
  inline void set_dst(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.LCTurnHelperRsp)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();
  inline void set_has_src();
  inline void clear_has_src();
  inline void set_has_src_name();
  inline void clear_has_src_name();
  inline void set_has_dst();
  inline void clear_has_dst();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 src_;
  ::std::string* src_name_;
  ::google::protobuf::uint64 dst_;
  ::google::protobuf::int32 ret_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_Turn_2eproto();
  friend void protobuf_AssignDesc_Turn_2eproto();
  friend void protobuf_ShutdownFile_Turn_2eproto();

  void InitAsDefaultInstance();
  static LCTurnHelperRsp* default_instance_;
};
// ===================================================================


// ===================================================================

// NotifyTurn

// optional int32 type = 1;
inline bool NotifyTurn::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NotifyTurn::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NotifyTurn::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NotifyTurn::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 NotifyTurn::type() const {
  return type_;
}
inline void NotifyTurn::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// repeated .proto_ff.TurnEntry entrys = 2;
inline int NotifyTurn::entrys_size() const {
  return entrys_.size();
}
inline void NotifyTurn::clear_entrys() {
  entrys_.Clear();
}
inline const ::proto_ff::TurnEntry& NotifyTurn::entrys(int index) const {
  return entrys_.Get(index);
}
inline ::proto_ff::TurnEntry* NotifyTurn::mutable_entrys(int index) {
  return entrys_.Mutable(index);
}
inline ::proto_ff::TurnEntry* NotifyTurn::add_entrys() {
  return entrys_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::TurnEntry >&
NotifyTurn::entrys() const {
  return entrys_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::TurnEntry >*
NotifyTurn::mutable_entrys() {
  return &entrys_;
}

// -------------------------------------------------------------------

// NotifyTurnGrow

// optional int32 type = 1;
inline bool NotifyTurnGrow::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NotifyTurnGrow::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NotifyTurnGrow::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NotifyTurnGrow::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 NotifyTurnGrow::type() const {
  return type_;
}
inline void NotifyTurnGrow::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// optional int32 lv = 2;
inline bool NotifyTurnGrow::has_lv() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void NotifyTurnGrow::set_has_lv() {
  _has_bits_[0] |= 0x00000002u;
}
inline void NotifyTurnGrow::clear_has_lv() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void NotifyTurnGrow::clear_lv() {
  lv_ = 0;
  clear_has_lv();
}
inline ::google::protobuf::int32 NotifyTurnGrow::lv() const {
  return lv_;
}
inline void NotifyTurnGrow::set_lv(::google::protobuf::int32 value) {
  set_has_lv();
  lv_ = value;
}

// optional .proto_ff.TurnGrow grow = 3;
inline bool NotifyTurnGrow::has_grow() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void NotifyTurnGrow::set_has_grow() {
  _has_bits_[0] |= 0x00000004u;
}
inline void NotifyTurnGrow::clear_has_grow() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void NotifyTurnGrow::clear_grow() {
  if (grow_ != NULL) grow_->::proto_ff::TurnGrow::Clear();
  clear_has_grow();
}
inline const ::proto_ff::TurnGrow& NotifyTurnGrow::grow() const {
  return grow_ != NULL ? *grow_ : *default_instance_->grow_;
}
inline ::proto_ff::TurnGrow* NotifyTurnGrow::mutable_grow() {
  set_has_grow();
  if (grow_ == NULL) grow_ = new ::proto_ff::TurnGrow;
  return grow_;
}
inline ::proto_ff::TurnGrow* NotifyTurnGrow::release_grow() {
  clear_has_grow();
  ::proto_ff::TurnGrow* temp = grow_;
  grow_ = NULL;
  return temp;
}
inline void NotifyTurnGrow::set_allocated_grow(::proto_ff::TurnGrow* grow) {
  delete grow_;
  grow_ = grow;
  if (grow) {
    set_has_grow();
  } else {
    clear_has_grow();
  }
}

// repeated int32 strong_ids = 4;
inline int NotifyTurnGrow::strong_ids_size() const {
  return strong_ids_.size();
}
inline void NotifyTurnGrow::clear_strong_ids() {
  strong_ids_.Clear();
}
inline ::google::protobuf::int32 NotifyTurnGrow::strong_ids(int index) const {
  return strong_ids_.Get(index);
}
inline void NotifyTurnGrow::set_strong_ids(int index, ::google::protobuf::int32 value) {
  strong_ids_.Set(index, value);
}
inline void NotifyTurnGrow::add_strong_ids(::google::protobuf::int32 value) {
  strong_ids_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
NotifyTurnGrow::strong_ids() const {
  return strong_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
NotifyTurnGrow::mutable_strong_ids() {
  return &strong_ids_;
}

// -------------------------------------------------------------------

// NotifyTurnSimple

// optional .proto_ff.TurnSimple simple = 1;
inline bool NotifyTurnSimple::has_simple() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NotifyTurnSimple::set_has_simple() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NotifyTurnSimple::clear_has_simple() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NotifyTurnSimple::clear_simple() {
  if (simple_ != NULL) simple_->::proto_ff::TurnSimple::Clear();
  clear_has_simple();
}
inline const ::proto_ff::TurnSimple& NotifyTurnSimple::simple() const {
  return simple_ != NULL ? *simple_ : *default_instance_->simple_;
}
inline ::proto_ff::TurnSimple* NotifyTurnSimple::mutable_simple() {
  set_has_simple();
  if (simple_ == NULL) simple_ = new ::proto_ff::TurnSimple;
  return simple_;
}
inline ::proto_ff::TurnSimple* NotifyTurnSimple::release_simple() {
  clear_has_simple();
  ::proto_ff::TurnSimple* temp = simple_;
  simple_ = NULL;
  return temp;
}
inline void NotifyTurnSimple::set_allocated_simple(::proto_ff::TurnSimple* simple) {
  delete simple_;
  simple_ = simple;
  if (simple) {
    set_has_simple();
  } else {
    clear_has_simple();
  }
}

// -------------------------------------------------------------------

// NotifyTurnHelper

// repeated .proto_ff.TurnHelper infos = 1;
inline int NotifyTurnHelper::infos_size() const {
  return infos_.size();
}
inline void NotifyTurnHelper::clear_infos() {
  infos_.Clear();
}
inline const ::proto_ff::TurnHelper& NotifyTurnHelper::infos(int index) const {
  return infos_.Get(index);
}
inline ::proto_ff::TurnHelper* NotifyTurnHelper::mutable_infos(int index) {
  return infos_.Mutable(index);
}
inline ::proto_ff::TurnHelper* NotifyTurnHelper::add_infos() {
  return infos_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::TurnHelper >&
NotifyTurnHelper::infos() const {
  return infos_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::TurnHelper >*
NotifyTurnHelper::mutable_infos() {
  return &infos_;
}

// -------------------------------------------------------------------

// NotifyTurnTask

// repeated .proto_ff.TurnTask tasks = 1;
inline int NotifyTurnTask::tasks_size() const {
  return tasks_.size();
}
inline void NotifyTurnTask::clear_tasks() {
  tasks_.Clear();
}
inline const ::proto_ff::TurnTask& NotifyTurnTask::tasks(int index) const {
  return tasks_.Get(index);
}
inline ::proto_ff::TurnTask* NotifyTurnTask::mutable_tasks(int index) {
  return tasks_.Mutable(index);
}
inline ::proto_ff::TurnTask* NotifyTurnTask::add_tasks() {
  return tasks_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::TurnTask >&
NotifyTurnTask::tasks() const {
  return tasks_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::TurnTask >*
NotifyTurnTask::mutable_tasks() {
  return &tasks_;
}

// -------------------------------------------------------------------

// TurnRecvTaskReq

// optional int32 id = 1;
inline bool TurnRecvTaskReq::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TurnRecvTaskReq::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TurnRecvTaskReq::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TurnRecvTaskReq::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 TurnRecvTaskReq::id() const {
  return id_;
}
inline void TurnRecvTaskReq::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// -------------------------------------------------------------------

// TurnRecvTaskRsp

// optional int32 ret = 1;
inline bool TurnRecvTaskRsp::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TurnRecvTaskRsp::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TurnRecvTaskRsp::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TurnRecvTaskRsp::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
inline ::google::protobuf::int32 TurnRecvTaskRsp::ret() const {
  return ret_;
}
inline void TurnRecvTaskRsp::set_ret(::google::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
}

// optional int32 id = 2;
inline bool TurnRecvTaskRsp::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TurnRecvTaskRsp::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TurnRecvTaskRsp::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TurnRecvTaskRsp::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 TurnRecvTaskRsp::id() const {
  return id_;
}
inline void TurnRecvTaskRsp::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// -------------------------------------------------------------------

// TurnLvReq

// -------------------------------------------------------------------

// TurnLvRsp

// optional int32 ret = 1;
inline bool TurnLvRsp::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TurnLvRsp::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TurnLvRsp::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TurnLvRsp::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
inline ::google::protobuf::int32 TurnLvRsp::ret() const {
  return ret_;
}
inline void TurnLvRsp::set_ret(::google::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
}

// -------------------------------------------------------------------

// TurnHelperReq

// optional uint64 cid = 1;
inline bool TurnHelperReq::has_cid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TurnHelperReq::set_has_cid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TurnHelperReq::clear_has_cid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TurnHelperReq::clear_cid() {
  cid_ = GOOGLE_ULONGLONG(0);
  clear_has_cid();
}
inline ::google::protobuf::uint64 TurnHelperReq::cid() const {
  return cid_;
}
inline void TurnHelperReq::set_cid(::google::protobuf::uint64 value) {
  set_has_cid();
  cid_ = value;
}

// -------------------------------------------------------------------

// TurnHelperRsp

// optional int32 ret = 1;
inline bool TurnHelperRsp::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TurnHelperRsp::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TurnHelperRsp::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TurnHelperRsp::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
inline ::google::protobuf::int32 TurnHelperRsp::ret() const {
  return ret_;
}
inline void TurnHelperRsp::set_ret(::google::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
}

// optional uint64 cid = 2;
inline bool TurnHelperRsp::has_cid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TurnHelperRsp::set_has_cid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TurnHelperRsp::clear_has_cid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TurnHelperRsp::clear_cid() {
  cid_ = GOOGLE_ULONGLONG(0);
  clear_has_cid();
}
inline ::google::protobuf::uint64 TurnHelperRsp::cid() const {
  return cid_;
}
inline void TurnHelperRsp::set_cid(::google::protobuf::uint64 value) {
  set_has_cid();
  cid_ = value;
}

// -------------------------------------------------------------------

// NotifyTurnNewHelper

// optional uint64 helper_cid = 1;
inline bool NotifyTurnNewHelper::has_helper_cid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NotifyTurnNewHelper::set_has_helper_cid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NotifyTurnNewHelper::clear_has_helper_cid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NotifyTurnNewHelper::clear_helper_cid() {
  helper_cid_ = GOOGLE_ULONGLONG(0);
  clear_has_helper_cid();
}
inline ::google::protobuf::uint64 NotifyTurnNewHelper::helper_cid() const {
  return helper_cid_;
}
inline void NotifyTurnNewHelper::set_helper_cid(::google::protobuf::uint64 value) {
  set_has_helper_cid();
  helper_cid_ = value;
}

// optional bytes helper_name = 2;
inline bool NotifyTurnNewHelper::has_helper_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void NotifyTurnNewHelper::set_has_helper_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void NotifyTurnNewHelper::clear_has_helper_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void NotifyTurnNewHelper::clear_helper_name() {
  if (helper_name_ != &::google::protobuf::internal::kEmptyString) {
    helper_name_->clear();
  }
  clear_has_helper_name();
}
inline const ::std::string& NotifyTurnNewHelper::helper_name() const {
  return *helper_name_;
}
inline void NotifyTurnNewHelper::set_helper_name(const ::std::string& value) {
  set_has_helper_name();
  if (helper_name_ == &::google::protobuf::internal::kEmptyString) {
    helper_name_ = new ::std::string;
  }
  helper_name_->assign(value);
}
inline void NotifyTurnNewHelper::set_helper_name(const char* value) {
  set_has_helper_name();
  if (helper_name_ == &::google::protobuf::internal::kEmptyString) {
    helper_name_ = new ::std::string;
  }
  helper_name_->assign(value);
}
inline void NotifyTurnNewHelper::set_helper_name(const void* value, size_t size) {
  set_has_helper_name();
  if (helper_name_ == &::google::protobuf::internal::kEmptyString) {
    helper_name_ = new ::std::string;
  }
  helper_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* NotifyTurnNewHelper::mutable_helper_name() {
  set_has_helper_name();
  if (helper_name_ == &::google::protobuf::internal::kEmptyString) {
    helper_name_ = new ::std::string;
  }
  return helper_name_;
}
inline ::std::string* NotifyTurnNewHelper::release_helper_name() {
  clear_has_helper_name();
  if (helper_name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = helper_name_;
    helper_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void NotifyTurnNewHelper::set_allocated_helper_name(::std::string* helper_name) {
  if (helper_name_ != &::google::protobuf::internal::kEmptyString) {
    delete helper_name_;
  }
  if (helper_name) {
    set_has_helper_name();
    helper_name_ = helper_name;
  } else {
    clear_has_helper_name();
    helper_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// TurnChgReq

// -------------------------------------------------------------------

// TurnChgRsp

// optional int32 ret = 1;
inline bool TurnChgRsp::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TurnChgRsp::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TurnChgRsp::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TurnChgRsp::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
inline ::google::protobuf::int32 TurnChgRsp::ret() const {
  return ret_;
}
inline void TurnChgRsp::set_ret(::google::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
}

// optional int32 code = 2;
inline bool TurnChgRsp::has_code() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TurnChgRsp::set_has_code() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TurnChgRsp::clear_has_code() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TurnChgRsp::clear_code() {
  code_ = 0;
  clear_has_code();
}
inline ::google::protobuf::int32 TurnChgRsp::code() const {
  return code_;
}
inline void TurnChgRsp::set_code(::google::protobuf::int32 value) {
  set_has_code();
  code_ = value;
}

// -------------------------------------------------------------------

// TurnEquipDressReq

// optional int32 bag_pos = 1;
inline bool TurnEquipDressReq::has_bag_pos() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TurnEquipDressReq::set_has_bag_pos() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TurnEquipDressReq::clear_has_bag_pos() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TurnEquipDressReq::clear_bag_pos() {
  bag_pos_ = 0;
  clear_has_bag_pos();
}
inline ::google::protobuf::int32 TurnEquipDressReq::bag_pos() const {
  return bag_pos_;
}
inline void TurnEquipDressReq::set_bag_pos(::google::protobuf::int32 value) {
  set_has_bag_pos();
  bag_pos_ = value;
}

// -------------------------------------------------------------------

// TurnEquipDressRsp

// optional int32 bag_pos = 1;
inline bool TurnEquipDressRsp::has_bag_pos() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TurnEquipDressRsp::set_has_bag_pos() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TurnEquipDressRsp::clear_has_bag_pos() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TurnEquipDressRsp::clear_bag_pos() {
  bag_pos_ = 0;
  clear_has_bag_pos();
}
inline ::google::protobuf::int32 TurnEquipDressRsp::bag_pos() const {
  return bag_pos_;
}
inline void TurnEquipDressRsp::set_bag_pos(::google::protobuf::int32 value) {
  set_has_bag_pos();
  bag_pos_ = value;
}

// optional int32 ret = 2;
inline bool TurnEquipDressRsp::has_ret() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TurnEquipDressRsp::set_has_ret() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TurnEquipDressRsp::clear_has_ret() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TurnEquipDressRsp::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
inline ::google::protobuf::int32 TurnEquipDressRsp::ret() const {
  return ret_;
}
inline void TurnEquipDressRsp::set_ret(::google::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
}

// optional int32 trans = 3;
inline bool TurnEquipDressRsp::has_trans() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TurnEquipDressRsp::set_has_trans() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TurnEquipDressRsp::clear_has_trans() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TurnEquipDressRsp::clear_trans() {
  trans_ = 0;
  clear_has_trans();
}
inline ::google::protobuf::int32 TurnEquipDressRsp::trans() const {
  return trans_;
}
inline void TurnEquipDressRsp::set_trans(::google::protobuf::int32 value) {
  set_has_trans();
  trans_ = value;
}

// -------------------------------------------------------------------

// TurnStrongReq

// optional int32 lv = 1;
inline bool TurnStrongReq::has_lv() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TurnStrongReq::set_has_lv() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TurnStrongReq::clear_has_lv() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TurnStrongReq::clear_lv() {
  lv_ = 0;
  clear_has_lv();
}
inline ::google::protobuf::int32 TurnStrongReq::lv() const {
  return lv_;
}
inline void TurnStrongReq::set_lv(::google::protobuf::int32 value) {
  set_has_lv();
  lv_ = value;
}

// optional int32 pos = 2;
inline bool TurnStrongReq::has_pos() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TurnStrongReq::set_has_pos() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TurnStrongReq::clear_has_pos() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TurnStrongReq::clear_pos() {
  pos_ = 0;
  clear_has_pos();
}
inline ::google::protobuf::int32 TurnStrongReq::pos() const {
  return pos_;
}
inline void TurnStrongReq::set_pos(::google::protobuf::int32 value) {
  set_has_pos();
  pos_ = value;
}

// -------------------------------------------------------------------

// TurnStrongRsp

// optional int32 ret = 1;
inline bool TurnStrongRsp::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TurnStrongRsp::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TurnStrongRsp::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TurnStrongRsp::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
inline ::google::protobuf::int32 TurnStrongRsp::ret() const {
  return ret_;
}
inline void TurnStrongRsp::set_ret(::google::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
}

// optional int32 lv = 2;
inline bool TurnStrongRsp::has_lv() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TurnStrongRsp::set_has_lv() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TurnStrongRsp::clear_has_lv() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TurnStrongRsp::clear_lv() {
  lv_ = 0;
  clear_has_lv();
}
inline ::google::protobuf::int32 TurnStrongRsp::lv() const {
  return lv_;
}
inline void TurnStrongRsp::set_lv(::google::protobuf::int32 value) {
  set_has_lv();
  lv_ = value;
}

// optional int32 pos = 3;
inline bool TurnStrongRsp::has_pos() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TurnStrongRsp::set_has_pos() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TurnStrongRsp::clear_has_pos() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TurnStrongRsp::clear_pos() {
  pos_ = 0;
  clear_has_pos();
}
inline ::google::protobuf::int32 TurnStrongRsp::pos() const {
  return pos_;
}
inline void TurnStrongRsp::set_pos(::google::protobuf::int32 value) {
  set_has_pos();
  pos_ = value;
}

// -------------------------------------------------------------------

// TurnEvolveReq

// optional int32 lv = 1;
inline bool TurnEvolveReq::has_lv() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TurnEvolveReq::set_has_lv() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TurnEvolveReq::clear_has_lv() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TurnEvolveReq::clear_lv() {
  lv_ = 0;
  clear_has_lv();
}
inline ::google::protobuf::int32 TurnEvolveReq::lv() const {
  return lv_;
}
inline void TurnEvolveReq::set_lv(::google::protobuf::int32 value) {
  set_has_lv();
  lv_ = value;
}

// optional int32 pos = 2;
inline bool TurnEvolveReq::has_pos() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TurnEvolveReq::set_has_pos() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TurnEvolveReq::clear_has_pos() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TurnEvolveReq::clear_pos() {
  pos_ = 0;
  clear_has_pos();
}
inline ::google::protobuf::int32 TurnEvolveReq::pos() const {
  return pos_;
}
inline void TurnEvolveReq::set_pos(::google::protobuf::int32 value) {
  set_has_pos();
  pos_ = value;
}

// repeated int32 cost_bag_pos = 3;
inline int TurnEvolveReq::cost_bag_pos_size() const {
  return cost_bag_pos_.size();
}
inline void TurnEvolveReq::clear_cost_bag_pos() {
  cost_bag_pos_.Clear();
}
inline ::google::protobuf::int32 TurnEvolveReq::cost_bag_pos(int index) const {
  return cost_bag_pos_.Get(index);
}
inline void TurnEvolveReq::set_cost_bag_pos(int index, ::google::protobuf::int32 value) {
  cost_bag_pos_.Set(index, value);
}
inline void TurnEvolveReq::add_cost_bag_pos(::google::protobuf::int32 value) {
  cost_bag_pos_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
TurnEvolveReq::cost_bag_pos() const {
  return cost_bag_pos_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
TurnEvolveReq::mutable_cost_bag_pos() {
  return &cost_bag_pos_;
}

// -------------------------------------------------------------------

// TurnEvolveRsp

// optional int32 ret = 1;
inline bool TurnEvolveRsp::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TurnEvolveRsp::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TurnEvolveRsp::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TurnEvolveRsp::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
inline ::google::protobuf::int32 TurnEvolveRsp::ret() const {
  return ret_;
}
inline void TurnEvolveRsp::set_ret(::google::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
}

// optional int32 lv = 2;
inline bool TurnEvolveRsp::has_lv() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TurnEvolveRsp::set_has_lv() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TurnEvolveRsp::clear_has_lv() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TurnEvolveRsp::clear_lv() {
  lv_ = 0;
  clear_has_lv();
}
inline ::google::protobuf::int32 TurnEvolveRsp::lv() const {
  return lv_;
}
inline void TurnEvolveRsp::set_lv(::google::protobuf::int32 value) {
  set_has_lv();
  lv_ = value;
}

// optional int32 pos = 3;
inline bool TurnEvolveRsp::has_pos() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TurnEvolveRsp::set_has_pos() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TurnEvolveRsp::clear_has_pos() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TurnEvolveRsp::clear_pos() {
  pos_ = 0;
  clear_has_pos();
}
inline ::google::protobuf::int32 TurnEvolveRsp::pos() const {
  return pos_;
}
inline void TurnEvolveRsp::set_pos(::google::protobuf::int32 value) {
  set_has_pos();
  pos_ = value;
}

// repeated int32 cost_bag_pos = 4;
inline int TurnEvolveRsp::cost_bag_pos_size() const {
  return cost_bag_pos_.size();
}
inline void TurnEvolveRsp::clear_cost_bag_pos() {
  cost_bag_pos_.Clear();
}
inline ::google::protobuf::int32 TurnEvolveRsp::cost_bag_pos(int index) const {
  return cost_bag_pos_.Get(index);
}
inline void TurnEvolveRsp::set_cost_bag_pos(int index, ::google::protobuf::int32 value) {
  cost_bag_pos_.Set(index, value);
}
inline void TurnEvolveRsp::add_cost_bag_pos(::google::protobuf::int32 value) {
  cost_bag_pos_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
TurnEvolveRsp::cost_bag_pos() const {
  return cost_bag_pos_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
TurnEvolveRsp::mutable_cost_bag_pos() {
  return &cost_bag_pos_;
}

// -------------------------------------------------------------------

// TurnAwakenReq

// optional int32 lv = 1;
inline bool TurnAwakenReq::has_lv() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TurnAwakenReq::set_has_lv() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TurnAwakenReq::clear_has_lv() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TurnAwakenReq::clear_lv() {
  lv_ = 0;
  clear_has_lv();
}
inline ::google::protobuf::int32 TurnAwakenReq::lv() const {
  return lv_;
}
inline void TurnAwakenReq::set_lv(::google::protobuf::int32 value) {
  set_has_lv();
  lv_ = value;
}

// optional int32 pos = 2;
inline bool TurnAwakenReq::has_pos() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TurnAwakenReq::set_has_pos() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TurnAwakenReq::clear_has_pos() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TurnAwakenReq::clear_pos() {
  pos_ = 0;
  clear_has_pos();
}
inline ::google::protobuf::int32 TurnAwakenReq::pos() const {
  return pos_;
}
inline void TurnAwakenReq::set_pos(::google::protobuf::int32 value) {
  set_has_pos();
  pos_ = value;
}

// repeated int32 cost_bag_pos = 3;
inline int TurnAwakenReq::cost_bag_pos_size() const {
  return cost_bag_pos_.size();
}
inline void TurnAwakenReq::clear_cost_bag_pos() {
  cost_bag_pos_.Clear();
}
inline ::google::protobuf::int32 TurnAwakenReq::cost_bag_pos(int index) const {
  return cost_bag_pos_.Get(index);
}
inline void TurnAwakenReq::set_cost_bag_pos(int index, ::google::protobuf::int32 value) {
  cost_bag_pos_.Set(index, value);
}
inline void TurnAwakenReq::add_cost_bag_pos(::google::protobuf::int32 value) {
  cost_bag_pos_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
TurnAwakenReq::cost_bag_pos() const {
  return cost_bag_pos_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
TurnAwakenReq::mutable_cost_bag_pos() {
  return &cost_bag_pos_;
}

// -------------------------------------------------------------------

// TurnAwakenRsp

// optional int32 ret = 1;
inline bool TurnAwakenRsp::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TurnAwakenRsp::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TurnAwakenRsp::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TurnAwakenRsp::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
inline ::google::protobuf::int32 TurnAwakenRsp::ret() const {
  return ret_;
}
inline void TurnAwakenRsp::set_ret(::google::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
}

// optional int32 lv = 2;
inline bool TurnAwakenRsp::has_lv() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TurnAwakenRsp::set_has_lv() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TurnAwakenRsp::clear_has_lv() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TurnAwakenRsp::clear_lv() {
  lv_ = 0;
  clear_has_lv();
}
inline ::google::protobuf::int32 TurnAwakenRsp::lv() const {
  return lv_;
}
inline void TurnAwakenRsp::set_lv(::google::protobuf::int32 value) {
  set_has_lv();
  lv_ = value;
}

// optional int32 pos = 3;
inline bool TurnAwakenRsp::has_pos() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TurnAwakenRsp::set_has_pos() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TurnAwakenRsp::clear_has_pos() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TurnAwakenRsp::clear_pos() {
  pos_ = 0;
  clear_has_pos();
}
inline ::google::protobuf::int32 TurnAwakenRsp::pos() const {
  return pos_;
}
inline void TurnAwakenRsp::set_pos(::google::protobuf::int32 value) {
  set_has_pos();
  pos_ = value;
}

// repeated int32 cost_bag_pos = 4;
inline int TurnAwakenRsp::cost_bag_pos_size() const {
  return cost_bag_pos_.size();
}
inline void TurnAwakenRsp::clear_cost_bag_pos() {
  cost_bag_pos_.Clear();
}
inline ::google::protobuf::int32 TurnAwakenRsp::cost_bag_pos(int index) const {
  return cost_bag_pos_.Get(index);
}
inline void TurnAwakenRsp::set_cost_bag_pos(int index, ::google::protobuf::int32 value) {
  cost_bag_pos_.Set(index, value);
}
inline void TurnAwakenRsp::add_cost_bag_pos(::google::protobuf::int32 value) {
  cost_bag_pos_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
TurnAwakenRsp::cost_bag_pos() const {
  return cost_bag_pos_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
TurnAwakenRsp::mutable_cost_bag_pos() {
  return &cost_bag_pos_;
}

// -------------------------------------------------------------------

// TurnComposeReq

// optional int32 lv = 1;
inline bool TurnComposeReq::has_lv() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TurnComposeReq::set_has_lv() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TurnComposeReq::clear_has_lv() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TurnComposeReq::clear_lv() {
  lv_ = 0;
  clear_has_lv();
}
inline ::google::protobuf::int32 TurnComposeReq::lv() const {
  return lv_;
}
inline void TurnComposeReq::set_lv(::google::protobuf::int32 value) {
  set_has_lv();
  lv_ = value;
}

// optional int32 pos = 2;
inline bool TurnComposeReq::has_pos() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TurnComposeReq::set_has_pos() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TurnComposeReq::clear_has_pos() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TurnComposeReq::clear_pos() {
  pos_ = 0;
  clear_has_pos();
}
inline ::google::protobuf::int32 TurnComposeReq::pos() const {
  return pos_;
}
inline void TurnComposeReq::set_pos(::google::protobuf::int32 value) {
  set_has_pos();
  pos_ = value;
}

// -------------------------------------------------------------------

// TurnComposeRsp

// optional int32 ret = 1;
inline bool TurnComposeRsp::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TurnComposeRsp::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TurnComposeRsp::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TurnComposeRsp::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
inline ::google::protobuf::int32 TurnComposeRsp::ret() const {
  return ret_;
}
inline void TurnComposeRsp::set_ret(::google::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
}

// optional int32 lv = 2;
inline bool TurnComposeRsp::has_lv() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TurnComposeRsp::set_has_lv() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TurnComposeRsp::clear_has_lv() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TurnComposeRsp::clear_lv() {
  lv_ = 0;
  clear_has_lv();
}
inline ::google::protobuf::int32 TurnComposeRsp::lv() const {
  return lv_;
}
inline void TurnComposeRsp::set_lv(::google::protobuf::int32 value) {
  set_has_lv();
  lv_ = value;
}

// optional int32 pos = 3;
inline bool TurnComposeRsp::has_pos() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TurnComposeRsp::set_has_pos() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TurnComposeRsp::clear_has_pos() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TurnComposeRsp::clear_pos() {
  pos_ = 0;
  clear_has_pos();
}
inline ::google::protobuf::int32 TurnComposeRsp::pos() const {
  return pos_;
}
inline void TurnComposeRsp::set_pos(::google::protobuf::int32 value) {
  set_has_pos();
  pos_ = value;
}

// -------------------------------------------------------------------

// TurnStarReq

// optional int32 lv = 1;
inline bool TurnStarReq::has_lv() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TurnStarReq::set_has_lv() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TurnStarReq::clear_has_lv() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TurnStarReq::clear_lv() {
  lv_ = 0;
  clear_has_lv();
}
inline ::google::protobuf::int32 TurnStarReq::lv() const {
  return lv_;
}
inline void TurnStarReq::set_lv(::google::protobuf::int32 value) {
  set_has_lv();
  lv_ = value;
}

// optional int32 pos = 2;
inline bool TurnStarReq::has_pos() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TurnStarReq::set_has_pos() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TurnStarReq::clear_has_pos() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TurnStarReq::clear_pos() {
  pos_ = 0;
  clear_has_pos();
}
inline ::google::protobuf::int32 TurnStarReq::pos() const {
  return pos_;
}
inline void TurnStarReq::set_pos(::google::protobuf::int32 value) {
  set_has_pos();
  pos_ = value;
}

// -------------------------------------------------------------------

// TurnStarRsp

// optional int32 ret = 1;
inline bool TurnStarRsp::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TurnStarRsp::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TurnStarRsp::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TurnStarRsp::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
inline ::google::protobuf::int32 TurnStarRsp::ret() const {
  return ret_;
}
inline void TurnStarRsp::set_ret(::google::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
}

// optional int32 lv = 2;
inline bool TurnStarRsp::has_lv() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TurnStarRsp::set_has_lv() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TurnStarRsp::clear_has_lv() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TurnStarRsp::clear_lv() {
  lv_ = 0;
  clear_has_lv();
}
inline ::google::protobuf::int32 TurnStarRsp::lv() const {
  return lv_;
}
inline void TurnStarRsp::set_lv(::google::protobuf::int32 value) {
  set_has_lv();
  lv_ = value;
}

// optional int32 pos = 3;
inline bool TurnStarRsp::has_pos() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TurnStarRsp::set_has_pos() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TurnStarRsp::clear_has_pos() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TurnStarRsp::clear_pos() {
  pos_ = 0;
  clear_has_pos();
}
inline ::google::protobuf::int32 TurnStarRsp::pos() const {
  return pos_;
}
inline void TurnStarRsp::set_pos(::google::protobuf::int32 value) {
  set_has_pos();
  pos_ = value;
}

// -------------------------------------------------------------------

// TurnStrongActiveReq

// optional int32 id = 1;
inline bool TurnStrongActiveReq::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TurnStrongActiveReq::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TurnStrongActiveReq::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TurnStrongActiveReq::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 TurnStrongActiveReq::id() const {
  return id_;
}
inline void TurnStrongActiveReq::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// -------------------------------------------------------------------

// TurnStrongActiveRsp

// optional int32 ret = 1;
inline bool TurnStrongActiveRsp::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TurnStrongActiveRsp::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TurnStrongActiveRsp::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TurnStrongActiveRsp::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
inline ::google::protobuf::int32 TurnStrongActiveRsp::ret() const {
  return ret_;
}
inline void TurnStrongActiveRsp::set_ret(::google::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
}

// optional int32 id = 2;
inline bool TurnStrongActiveRsp::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TurnStrongActiveRsp::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TurnStrongActiveRsp::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TurnStrongActiveRsp::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 TurnStrongActiveRsp::id() const {
  return id_;
}
inline void TurnStrongActiveRsp::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// -------------------------------------------------------------------

// TurnStarActiveReq

// optional int32 id = 1;
inline bool TurnStarActiveReq::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TurnStarActiveReq::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TurnStarActiveReq::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TurnStarActiveReq::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 TurnStarActiveReq::id() const {
  return id_;
}
inline void TurnStarActiveReq::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// -------------------------------------------------------------------

// TurnStarActiveRsp

// optional int32 ret = 1;
inline bool TurnStarActiveRsp::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TurnStarActiveRsp::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TurnStarActiveRsp::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TurnStarActiveRsp::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
inline ::google::protobuf::int32 TurnStarActiveRsp::ret() const {
  return ret_;
}
inline void TurnStarActiveRsp::set_ret(::google::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
}

// optional int32 id = 2;
inline bool TurnStarActiveRsp::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TurnStarActiveRsp::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TurnStarActiveRsp::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TurnStarActiveRsp::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 TurnStarActiveRsp::id() const {
  return id_;
}
inline void TurnStarActiveRsp::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// -------------------------------------------------------------------

// LCTurnHelperReq

// optional uint64 src = 1;
inline bool LCTurnHelperReq::has_src() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LCTurnHelperReq::set_has_src() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LCTurnHelperReq::clear_has_src() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LCTurnHelperReq::clear_src() {
  src_ = GOOGLE_ULONGLONG(0);
  clear_has_src();
}
inline ::google::protobuf::uint64 LCTurnHelperReq::src() const {
  return src_;
}
inline void LCTurnHelperReq::set_src(::google::protobuf::uint64 value) {
  set_has_src();
  src_ = value;
}

// optional bytes src_name = 2;
inline bool LCTurnHelperReq::has_src_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LCTurnHelperReq::set_has_src_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LCTurnHelperReq::clear_has_src_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LCTurnHelperReq::clear_src_name() {
  if (src_name_ != &::google::protobuf::internal::kEmptyString) {
    src_name_->clear();
  }
  clear_has_src_name();
}
inline const ::std::string& LCTurnHelperReq::src_name() const {
  return *src_name_;
}
inline void LCTurnHelperReq::set_src_name(const ::std::string& value) {
  set_has_src_name();
  if (src_name_ == &::google::protobuf::internal::kEmptyString) {
    src_name_ = new ::std::string;
  }
  src_name_->assign(value);
}
inline void LCTurnHelperReq::set_src_name(const char* value) {
  set_has_src_name();
  if (src_name_ == &::google::protobuf::internal::kEmptyString) {
    src_name_ = new ::std::string;
  }
  src_name_->assign(value);
}
inline void LCTurnHelperReq::set_src_name(const void* value, size_t size) {
  set_has_src_name();
  if (src_name_ == &::google::protobuf::internal::kEmptyString) {
    src_name_ = new ::std::string;
  }
  src_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* LCTurnHelperReq::mutable_src_name() {
  set_has_src_name();
  if (src_name_ == &::google::protobuf::internal::kEmptyString) {
    src_name_ = new ::std::string;
  }
  return src_name_;
}
inline ::std::string* LCTurnHelperReq::release_src_name() {
  clear_has_src_name();
  if (src_name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = src_name_;
    src_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void LCTurnHelperReq::set_allocated_src_name(::std::string* src_name) {
  if (src_name_ != &::google::protobuf::internal::kEmptyString) {
    delete src_name_;
  }
  if (src_name) {
    set_has_src_name();
    src_name_ = src_name;
  } else {
    clear_has_src_name();
    src_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional uint64 dst = 3;
inline bool LCTurnHelperReq::has_dst() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LCTurnHelperReq::set_has_dst() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LCTurnHelperReq::clear_has_dst() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LCTurnHelperReq::clear_dst() {
  dst_ = GOOGLE_ULONGLONG(0);
  clear_has_dst();
}
inline ::google::protobuf::uint64 LCTurnHelperReq::dst() const {
  return dst_;
}
inline void LCTurnHelperReq::set_dst(::google::protobuf::uint64 value) {
  set_has_dst();
  dst_ = value;
}

// -------------------------------------------------------------------

// CLNotifyTurnHelper

// optional uint64 src = 1;
inline bool CLNotifyTurnHelper::has_src() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CLNotifyTurnHelper::set_has_src() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CLNotifyTurnHelper::clear_has_src() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CLNotifyTurnHelper::clear_src() {
  src_ = GOOGLE_ULONGLONG(0);
  clear_has_src();
}
inline ::google::protobuf::uint64 CLNotifyTurnHelper::src() const {
  return src_;
}
inline void CLNotifyTurnHelper::set_src(::google::protobuf::uint64 value) {
  set_has_src();
  src_ = value;
}

// optional bytes src_name = 2;
inline bool CLNotifyTurnHelper::has_src_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CLNotifyTurnHelper::set_has_src_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CLNotifyTurnHelper::clear_has_src_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CLNotifyTurnHelper::clear_src_name() {
  if (src_name_ != &::google::protobuf::internal::kEmptyString) {
    src_name_->clear();
  }
  clear_has_src_name();
}
inline const ::std::string& CLNotifyTurnHelper::src_name() const {
  return *src_name_;
}
inline void CLNotifyTurnHelper::set_src_name(const ::std::string& value) {
  set_has_src_name();
  if (src_name_ == &::google::protobuf::internal::kEmptyString) {
    src_name_ = new ::std::string;
  }
  src_name_->assign(value);
}
inline void CLNotifyTurnHelper::set_src_name(const char* value) {
  set_has_src_name();
  if (src_name_ == &::google::protobuf::internal::kEmptyString) {
    src_name_ = new ::std::string;
  }
  src_name_->assign(value);
}
inline void CLNotifyTurnHelper::set_src_name(const void* value, size_t size) {
  set_has_src_name();
  if (src_name_ == &::google::protobuf::internal::kEmptyString) {
    src_name_ = new ::std::string;
  }
  src_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CLNotifyTurnHelper::mutable_src_name() {
  set_has_src_name();
  if (src_name_ == &::google::protobuf::internal::kEmptyString) {
    src_name_ = new ::std::string;
  }
  return src_name_;
}
inline ::std::string* CLNotifyTurnHelper::release_src_name() {
  clear_has_src_name();
  if (src_name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = src_name_;
    src_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CLNotifyTurnHelper::set_allocated_src_name(::std::string* src_name) {
  if (src_name_ != &::google::protobuf::internal::kEmptyString) {
    delete src_name_;
  }
  if (src_name) {
    set_has_src_name();
    src_name_ = src_name;
  } else {
    clear_has_src_name();
    src_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional uint64 dst = 3;
inline bool CLNotifyTurnHelper::has_dst() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CLNotifyTurnHelper::set_has_dst() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CLNotifyTurnHelper::clear_has_dst() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CLNotifyTurnHelper::clear_dst() {
  dst_ = GOOGLE_ULONGLONG(0);
  clear_has_dst();
}
inline ::google::protobuf::uint64 CLNotifyTurnHelper::dst() const {
  return dst_;
}
inline void CLNotifyTurnHelper::set_dst(::google::protobuf::uint64 value) {
  set_has_dst();
  dst_ = value;
}

// -------------------------------------------------------------------

// LCTurnHelperRsp

// optional int32 ret = 1;
inline bool LCTurnHelperRsp::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LCTurnHelperRsp::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LCTurnHelperRsp::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LCTurnHelperRsp::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
inline ::google::protobuf::int32 LCTurnHelperRsp::ret() const {
  return ret_;
}
inline void LCTurnHelperRsp::set_ret(::google::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
}

// optional uint64 src = 2;
inline bool LCTurnHelperRsp::has_src() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LCTurnHelperRsp::set_has_src() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LCTurnHelperRsp::clear_has_src() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LCTurnHelperRsp::clear_src() {
  src_ = GOOGLE_ULONGLONG(0);
  clear_has_src();
}
inline ::google::protobuf::uint64 LCTurnHelperRsp::src() const {
  return src_;
}
inline void LCTurnHelperRsp::set_src(::google::protobuf::uint64 value) {
  set_has_src();
  src_ = value;
}

// optional bytes src_name = 3;
inline bool LCTurnHelperRsp::has_src_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LCTurnHelperRsp::set_has_src_name() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LCTurnHelperRsp::clear_has_src_name() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LCTurnHelperRsp::clear_src_name() {
  if (src_name_ != &::google::protobuf::internal::kEmptyString) {
    src_name_->clear();
  }
  clear_has_src_name();
}
inline const ::std::string& LCTurnHelperRsp::src_name() const {
  return *src_name_;
}
inline void LCTurnHelperRsp::set_src_name(const ::std::string& value) {
  set_has_src_name();
  if (src_name_ == &::google::protobuf::internal::kEmptyString) {
    src_name_ = new ::std::string;
  }
  src_name_->assign(value);
}
inline void LCTurnHelperRsp::set_src_name(const char* value) {
  set_has_src_name();
  if (src_name_ == &::google::protobuf::internal::kEmptyString) {
    src_name_ = new ::std::string;
  }
  src_name_->assign(value);
}
inline void LCTurnHelperRsp::set_src_name(const void* value, size_t size) {
  set_has_src_name();
  if (src_name_ == &::google::protobuf::internal::kEmptyString) {
    src_name_ = new ::std::string;
  }
  src_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* LCTurnHelperRsp::mutable_src_name() {
  set_has_src_name();
  if (src_name_ == &::google::protobuf::internal::kEmptyString) {
    src_name_ = new ::std::string;
  }
  return src_name_;
}
inline ::std::string* LCTurnHelperRsp::release_src_name() {
  clear_has_src_name();
  if (src_name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = src_name_;
    src_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void LCTurnHelperRsp::set_allocated_src_name(::std::string* src_name) {
  if (src_name_ != &::google::protobuf::internal::kEmptyString) {
    delete src_name_;
  }
  if (src_name) {
    set_has_src_name();
    src_name_ = src_name;
  } else {
    clear_has_src_name();
    src_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional uint64 dst = 4;
inline bool LCTurnHelperRsp::has_dst() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void LCTurnHelperRsp::set_has_dst() {
  _has_bits_[0] |= 0x00000008u;
}
inline void LCTurnHelperRsp::clear_has_dst() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void LCTurnHelperRsp::clear_dst() {
  dst_ = GOOGLE_ULONGLONG(0);
  clear_has_dst();
}
inline ::google::protobuf::uint64 LCTurnHelperRsp::dst() const {
  return dst_;
}
inline void LCTurnHelperRsp::set_dst(::google::protobuf::uint64 value) {
  set_has_dst();
  dst_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto_ff

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_Turn_2eproto__INCLUDED
