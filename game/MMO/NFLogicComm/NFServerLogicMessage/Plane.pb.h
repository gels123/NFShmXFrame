// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Plane.proto

#ifndef PROTOBUF_Plane_2eproto__INCLUDED
#define PROTOBUF_Plane_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "Com.pb.h"
#include "ComDefine.pb.h"
// @@protoc_insertion_point(includes)

namespace proto_ff {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_Plane_2eproto();
void protobuf_AssignDesc_Plane_2eproto();
void protobuf_ShutdownFile_Plane_2eproto();

class Plane_EnterReq;
class Plane_EnterRsp;
class Plane_QuitReq;
class Plane_QuitRsp;

// ===================================================================

class Plane_EnterReq : public ::google::protobuf::Message {
 public:
  Plane_EnterReq();
  virtual ~Plane_EnterReq();

  Plane_EnterReq(const Plane_EnterReq& from);

  inline Plane_EnterReq& operator=(const Plane_EnterReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Plane_EnterReq& default_instance();

  void Swap(Plane_EnterReq* other);

  // implements Message ----------------------------------------------

  Plane_EnterReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Plane_EnterReq& from);
  void MergeFrom(const Plane_EnterReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.Plane_EnterReq)
 private:
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Plane_2eproto();
  friend void protobuf_AssignDesc_Plane_2eproto();
  friend void protobuf_ShutdownFile_Plane_2eproto();

  void InitAsDefaultInstance();
  static Plane_EnterReq* default_instance_;
};
// -------------------------------------------------------------------

class Plane_EnterRsp : public ::google::protobuf::Message {
 public:
  Plane_EnterRsp();
  virtual ~Plane_EnterRsp();

  Plane_EnterRsp(const Plane_EnterRsp& from);

  inline Plane_EnterRsp& operator=(const Plane_EnterRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Plane_EnterRsp& default_instance();

  void Swap(Plane_EnterRsp* other);

  // implements Message ----------------------------------------------

  Plane_EnterRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Plane_EnterRsp& from);
  void MergeFrom(const Plane_EnterRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 ret = 1;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 1;
  inline ::google::protobuf::int32 ret() const;
  inline void set_ret(::google::protobuf::int32 value);

  // optional int32 id = 2;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 2;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.Plane_EnterRsp)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 ret_;
  ::google::protobuf::int32 id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Plane_2eproto();
  friend void protobuf_AssignDesc_Plane_2eproto();
  friend void protobuf_ShutdownFile_Plane_2eproto();

  void InitAsDefaultInstance();
  static Plane_EnterRsp* default_instance_;
};
// -------------------------------------------------------------------

class Plane_QuitReq : public ::google::protobuf::Message {
 public:
  Plane_QuitReq();
  virtual ~Plane_QuitReq();

  Plane_QuitReq(const Plane_QuitReq& from);

  inline Plane_QuitReq& operator=(const Plane_QuitReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Plane_QuitReq& default_instance();

  void Swap(Plane_QuitReq* other);

  // implements Message ----------------------------------------------

  Plane_QuitReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Plane_QuitReq& from);
  void MergeFrom(const Plane_QuitReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto_ff.Plane_QuitReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_Plane_2eproto();
  friend void protobuf_AssignDesc_Plane_2eproto();
  friend void protobuf_ShutdownFile_Plane_2eproto();

  void InitAsDefaultInstance();
  static Plane_QuitReq* default_instance_;
};
// -------------------------------------------------------------------

class Plane_QuitRsp : public ::google::protobuf::Message {
 public:
  Plane_QuitRsp();
  virtual ~Plane_QuitRsp();

  Plane_QuitRsp(const Plane_QuitRsp& from);

  inline Plane_QuitRsp& operator=(const Plane_QuitRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Plane_QuitRsp& default_instance();

  void Swap(Plane_QuitRsp* other);

  // implements Message ----------------------------------------------

  Plane_QuitRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Plane_QuitRsp& from);
  void MergeFrom(const Plane_QuitRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 ret = 1;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 1;
  inline ::google::protobuf::int32 ret() const;
  inline void set_ret(::google::protobuf::int32 value);

  // optional int32 id = 2;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 2;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.Plane_QuitRsp)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 ret_;
  ::google::protobuf::int32 id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Plane_2eproto();
  friend void protobuf_AssignDesc_Plane_2eproto();
  friend void protobuf_ShutdownFile_Plane_2eproto();

  void InitAsDefaultInstance();
  static Plane_QuitRsp* default_instance_;
};
// ===================================================================


// ===================================================================

// Plane_EnterReq

// optional int32 id = 1;
inline bool Plane_EnterReq::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Plane_EnterReq::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Plane_EnterReq::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Plane_EnterReq::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 Plane_EnterReq::id() const {
  return id_;
}
inline void Plane_EnterReq::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// -------------------------------------------------------------------

// Plane_EnterRsp

// required int32 ret = 1;
inline bool Plane_EnterRsp::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Plane_EnterRsp::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Plane_EnterRsp::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Plane_EnterRsp::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
inline ::google::protobuf::int32 Plane_EnterRsp::ret() const {
  return ret_;
}
inline void Plane_EnterRsp::set_ret(::google::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
}

// optional int32 id = 2;
inline bool Plane_EnterRsp::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Plane_EnterRsp::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Plane_EnterRsp::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Plane_EnterRsp::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 Plane_EnterRsp::id() const {
  return id_;
}
inline void Plane_EnterRsp::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// -------------------------------------------------------------------

// Plane_QuitReq

// -------------------------------------------------------------------

// Plane_QuitRsp

// required int32 ret = 1;
inline bool Plane_QuitRsp::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Plane_QuitRsp::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Plane_QuitRsp::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Plane_QuitRsp::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
inline ::google::protobuf::int32 Plane_QuitRsp::ret() const {
  return ret_;
}
inline void Plane_QuitRsp::set_ret(::google::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
}

// optional int32 id = 2;
inline bool Plane_QuitRsp::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Plane_QuitRsp::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Plane_QuitRsp::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Plane_QuitRsp::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 Plane_QuitRsp::id() const {
  return id_;
}
inline void Plane_QuitRsp::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto_ff

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_Plane_2eproto__INCLUDED
