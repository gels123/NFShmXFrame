// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ai.proto

#ifndef PROTOBUF_ai_2eproto__INCLUDED
#define PROTOBUF_ai_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "yd_fieldoptions.pb.h"
// @@protoc_insertion_point(includes)

namespace proto_ff {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_ai_2eproto();
void protobuf_AssignDesc_ai_2eproto();
void protobuf_ShutdownFile_ai_2eproto();

class aiaihpDesc;
class aiai;
class Sheet_aiai;

// ===================================================================

class aiaihpDesc : public ::google::protobuf::Message {
 public:
  aiaihpDesc();
  virtual ~aiaihpDesc();

  aiaihpDesc(const aiaihpDesc& from);

  inline aiaihpDesc& operator=(const aiaihpDesc& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const aiaihpDesc& default_instance();

  void Swap(aiaihpDesc* other);

  // implements Message ----------------------------------------------

  aiaihpDesc* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const aiaihpDesc& from);
  void MergeFrom(const aiaihpDesc& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 skill = 1;
  inline bool has_skill() const;
  inline void clear_skill();
  static const int kSkillFieldNumber = 1;
  inline ::google::protobuf::int64 skill() const;
  inline void set_skill(::google::protobuf::int64 value);

  // optional int32 percent = 2;
  inline bool has_percent() const;
  inline void clear_percent();
  static const int kPercentFieldNumber = 2;
  inline ::google::protobuf::int32 percent() const;
  inline void set_percent(::google::protobuf::int32 value);

  // optional int64 chat = 3;
  inline bool has_chat() const;
  inline void clear_chat();
  static const int kChatFieldNumber = 3;
  inline ::google::protobuf::int64 chat() const;
  inline void set_chat(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.aiaihpDesc)
 private:
  inline void set_has_skill();
  inline void clear_has_skill();
  inline void set_has_percent();
  inline void clear_has_percent();
  inline void set_has_chat();
  inline void clear_has_chat();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 skill_;
  ::google::protobuf::int64 chat_;
  ::google::protobuf::int32 percent_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_ai_2eproto();
  friend void protobuf_AssignDesc_ai_2eproto();
  friend void protobuf_ShutdownFile_ai_2eproto();

  void InitAsDefaultInstance();
  static aiaihpDesc* default_instance_;
};
// -------------------------------------------------------------------

class aiai : public ::google::protobuf::Message {
 public:
  aiai();
  virtual ~aiai();

  aiai(const aiai& from);

  inline aiai& operator=(const aiai& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const aiai& default_instance();

  void Swap(aiai* other);

  // implements Message ----------------------------------------------

  aiai* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const aiai& from);
  void MergeFrom(const aiai& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int64 id() const;
  inline void set_id(::google::protobuf::int64 value);

  // optional int32 type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // optional string deadHateRemain = 3;
  inline bool has_deadhateremain() const;
  inline void clear_deadhateremain();
  static const int kDeadHateRemainFieldNumber = 3;
  inline const ::std::string& deadhateremain() const;
  inline void set_deadhateremain(const ::std::string& value);
  inline void set_deadhateremain(const char* value);
  inline void set_deadhateremain(const char* value, size_t size);
  inline ::std::string* mutable_deadhateremain();
  inline ::std::string* release_deadhateremain();
  inline void set_allocated_deadhateremain(::std::string* deadhateremain);

  // optional string invisibleRemain = 4;
  inline bool has_invisibleremain() const;
  inline void clear_invisibleremain();
  static const int kInvisibleRemainFieldNumber = 4;
  inline const ::std::string& invisibleremain() const;
  inline void set_invisibleremain(const ::std::string& value);
  inline void set_invisibleremain(const char* value);
  inline void set_invisibleremain(const char* value, size_t size);
  inline ::std::string* mutable_invisibleremain();
  inline ::std::string* release_invisibleremain();
  inline void set_allocated_invisibleremain(::std::string* invisibleremain);

  // optional int32 isActive = 5;
  inline bool has_isactive() const;
  inline void clear_isactive();
  static const int kIsActiveFieldNumber = 5;
  inline ::google::protobuf::int32 isactive() const;
  inline void set_isactive(::google::protobuf::int32 value);

  // optional int32 returnType = 6;
  inline bool has_returntype() const;
  inline void clear_returntype();
  static const int kReturnTypeFieldNumber = 6;
  inline ::google::protobuf::int32 returntype() const;
  inline void set_returntype(::google::protobuf::int32 value);

  // optional int32 view = 7;
  inline bool has_view() const;
  inline void clear_view();
  static const int kViewFieldNumber = 7;
  inline ::google::protobuf::int32 view() const;
  inline void set_view(::google::protobuf::int32 value);

  // optional int32 isAttackedShowOff = 8;
  inline bool has_isattackedshowoff() const;
  inline void clear_isattackedshowoff();
  static const int kIsAttackedShowOffFieldNumber = 8;
  inline ::google::protobuf::int32 isattackedshowoff() const;
  inline void set_isattackedshowoff(::google::protobuf::int32 value);

  // optional int32 pursueRange = 9;
  inline bool has_pursuerange() const;
  inline void clear_pursuerange();
  static const int kPursueRangeFieldNumber = 9;
  inline ::google::protobuf::int32 pursuerange() const;
  inline void set_pursuerange(::google::protobuf::int32 value);

  // optional int32 actionRange = 10;
  inline bool has_actionrange() const;
  inline void clear_actionrange();
  static const int kActionRangeFieldNumber = 10;
  inline ::google::protobuf::int32 actionrange() const;
  inline void set_actionrange(::google::protobuf::int32 value);

  // optional int32 wakeupRadius = 11;
  inline bool has_wakeupradius() const;
  inline void clear_wakeupradius();
  static const int kWakeupRadiusFieldNumber = 11;
  inline ::google::protobuf::int32 wakeupradius() const;
  inline void set_wakeupradius(::google::protobuf::int32 value);

  // optional int32 isAIWorkWhenNobody = 12;
  inline bool has_isaiworkwhennobody() const;
  inline void clear_isaiworkwhennobody();
  static const int kIsAIWorkWhenNobodyFieldNumber = 12;
  inline ::google::protobuf::int32 isaiworkwhennobody() const;
  inline void set_isaiworkwhennobody(::google::protobuf::int32 value);

  // optional int32 bornEffectAIDelay = 13;
  inline bool has_borneffectaidelay() const;
  inline void clear_borneffectaidelay();
  static const int kBornEffectAIDelayFieldNumber = 13;
  inline ::google::protobuf::int32 borneffectaidelay() const;
  inline void set_borneffectaidelay(::google::protobuf::int32 value);

  // optional string initSkills = 14;
  inline bool has_initskills() const;
  inline void clear_initskills();
  static const int kInitSkillsFieldNumber = 14;
  inline const ::std::string& initskills() const;
  inline void set_initskills(const ::std::string& value);
  inline void set_initskills(const char* value);
  inline void set_initskills(const char* value, size_t size);
  inline ::std::string* mutable_initskills();
  inline ::std::string* release_initskills();
  inline void set_allocated_initskills(::std::string* initskills);

  // repeated .proto_ff.aiaihpDesc hp = 15;
  inline int hp_size() const;
  inline void clear_hp();
  static const int kHpFieldNumber = 15;
  inline const ::proto_ff::aiaihpDesc& hp(int index) const;
  inline ::proto_ff::aiaihpDesc* mutable_hp(int index);
  inline ::proto_ff::aiaihpDesc* add_hp();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::aiaihpDesc >&
      hp() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::aiaihpDesc >*
      mutable_hp();

  // @@protoc_insertion_point(class_scope:proto_ff.aiai)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_deadhateremain();
  inline void clear_has_deadhateremain();
  inline void set_has_invisibleremain();
  inline void clear_has_invisibleremain();
  inline void set_has_isactive();
  inline void clear_has_isactive();
  inline void set_has_returntype();
  inline void clear_has_returntype();
  inline void set_has_view();
  inline void clear_has_view();
  inline void set_has_isattackedshowoff();
  inline void clear_has_isattackedshowoff();
  inline void set_has_pursuerange();
  inline void clear_has_pursuerange();
  inline void set_has_actionrange();
  inline void clear_has_actionrange();
  inline void set_has_wakeupradius();
  inline void clear_has_wakeupradius();
  inline void set_has_isaiworkwhennobody();
  inline void clear_has_isaiworkwhennobody();
  inline void set_has_borneffectaidelay();
  inline void clear_has_borneffectaidelay();
  inline void set_has_initskills();
  inline void clear_has_initskills();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 id_;
  ::std::string* deadhateremain_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 isactive_;
  ::std::string* invisibleremain_;
  ::google::protobuf::int32 returntype_;
  ::google::protobuf::int32 view_;
  ::google::protobuf::int32 isattackedshowoff_;
  ::google::protobuf::int32 pursuerange_;
  ::google::protobuf::int32 actionrange_;
  ::google::protobuf::int32 wakeupradius_;
  ::google::protobuf::int32 isaiworkwhennobody_;
  ::google::protobuf::int32 borneffectaidelay_;
  ::std::string* initskills_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::aiaihpDesc > hp_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(15 + 31) / 32];

  friend void  protobuf_AddDesc_ai_2eproto();
  friend void protobuf_AssignDesc_ai_2eproto();
  friend void protobuf_ShutdownFile_ai_2eproto();

  void InitAsDefaultInstance();
  static aiai* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_aiai : public ::google::protobuf::Message {
 public:
  Sheet_aiai();
  virtual ~Sheet_aiai();

  Sheet_aiai(const Sheet_aiai& from);

  inline Sheet_aiai& operator=(const Sheet_aiai& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_aiai& default_instance();

  void Swap(Sheet_aiai* other);

  // implements Message ----------------------------------------------

  Sheet_aiai* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_aiai& from);
  void MergeFrom(const Sheet_aiai& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.aiai aiai_List = 1;
  inline int aiai_list_size() const;
  inline void clear_aiai_list();
  static const int kAiaiListFieldNumber = 1;
  inline const ::proto_ff::aiai& aiai_list(int index) const;
  inline ::proto_ff::aiai* mutable_aiai_list(int index);
  inline ::proto_ff::aiai* add_aiai_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::aiai >&
      aiai_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::aiai >*
      mutable_aiai_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_aiai)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::aiai > aiai_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_ai_2eproto();
  friend void protobuf_AssignDesc_ai_2eproto();
  friend void protobuf_ShutdownFile_ai_2eproto();

  void InitAsDefaultInstance();
  static Sheet_aiai* default_instance_;
};
// ===================================================================


// ===================================================================

// aiaihpDesc

// optional int64 skill = 1;
inline bool aiaihpDesc::has_skill() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void aiaihpDesc::set_has_skill() {
  _has_bits_[0] |= 0x00000001u;
}
inline void aiaihpDesc::clear_has_skill() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void aiaihpDesc::clear_skill() {
  skill_ = GOOGLE_LONGLONG(0);
  clear_has_skill();
}
inline ::google::protobuf::int64 aiaihpDesc::skill() const {
  return skill_;
}
inline void aiaihpDesc::set_skill(::google::protobuf::int64 value) {
  set_has_skill();
  skill_ = value;
}

// optional int32 percent = 2;
inline bool aiaihpDesc::has_percent() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void aiaihpDesc::set_has_percent() {
  _has_bits_[0] |= 0x00000002u;
}
inline void aiaihpDesc::clear_has_percent() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void aiaihpDesc::clear_percent() {
  percent_ = 0;
  clear_has_percent();
}
inline ::google::protobuf::int32 aiaihpDesc::percent() const {
  return percent_;
}
inline void aiaihpDesc::set_percent(::google::protobuf::int32 value) {
  set_has_percent();
  percent_ = value;
}

// optional int64 chat = 3;
inline bool aiaihpDesc::has_chat() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void aiaihpDesc::set_has_chat() {
  _has_bits_[0] |= 0x00000004u;
}
inline void aiaihpDesc::clear_has_chat() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void aiaihpDesc::clear_chat() {
  chat_ = GOOGLE_LONGLONG(0);
  clear_has_chat();
}
inline ::google::protobuf::int64 aiaihpDesc::chat() const {
  return chat_;
}
inline void aiaihpDesc::set_chat(::google::protobuf::int64 value) {
  set_has_chat();
  chat_ = value;
}

// -------------------------------------------------------------------

// aiai

// optional int64 id = 1;
inline bool aiai::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void aiai::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void aiai::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void aiai::clear_id() {
  id_ = GOOGLE_LONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::int64 aiai::id() const {
  return id_;
}
inline void aiai::set_id(::google::protobuf::int64 value) {
  set_has_id();
  id_ = value;
}

// optional int32 type = 2;
inline bool aiai::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void aiai::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void aiai::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void aiai::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 aiai::type() const {
  return type_;
}
inline void aiai::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// optional string deadHateRemain = 3;
inline bool aiai::has_deadhateremain() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void aiai::set_has_deadhateremain() {
  _has_bits_[0] |= 0x00000004u;
}
inline void aiai::clear_has_deadhateremain() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void aiai::clear_deadhateremain() {
  if (deadhateremain_ != &::google::protobuf::internal::kEmptyString) {
    deadhateremain_->clear();
  }
  clear_has_deadhateremain();
}
inline const ::std::string& aiai::deadhateremain() const {
  return *deadhateremain_;
}
inline void aiai::set_deadhateremain(const ::std::string& value) {
  set_has_deadhateremain();
  if (deadhateremain_ == &::google::protobuf::internal::kEmptyString) {
    deadhateremain_ = new ::std::string;
  }
  deadhateremain_->assign(value);
}
inline void aiai::set_deadhateremain(const char* value) {
  set_has_deadhateremain();
  if (deadhateremain_ == &::google::protobuf::internal::kEmptyString) {
    deadhateremain_ = new ::std::string;
  }
  deadhateremain_->assign(value);
}
inline void aiai::set_deadhateremain(const char* value, size_t size) {
  set_has_deadhateremain();
  if (deadhateremain_ == &::google::protobuf::internal::kEmptyString) {
    deadhateremain_ = new ::std::string;
  }
  deadhateremain_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* aiai::mutable_deadhateremain() {
  set_has_deadhateremain();
  if (deadhateremain_ == &::google::protobuf::internal::kEmptyString) {
    deadhateremain_ = new ::std::string;
  }
  return deadhateremain_;
}
inline ::std::string* aiai::release_deadhateremain() {
  clear_has_deadhateremain();
  if (deadhateremain_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = deadhateremain_;
    deadhateremain_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void aiai::set_allocated_deadhateremain(::std::string* deadhateremain) {
  if (deadhateremain_ != &::google::protobuf::internal::kEmptyString) {
    delete deadhateremain_;
  }
  if (deadhateremain) {
    set_has_deadhateremain();
    deadhateremain_ = deadhateremain;
  } else {
    clear_has_deadhateremain();
    deadhateremain_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string invisibleRemain = 4;
inline bool aiai::has_invisibleremain() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void aiai::set_has_invisibleremain() {
  _has_bits_[0] |= 0x00000008u;
}
inline void aiai::clear_has_invisibleremain() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void aiai::clear_invisibleremain() {
  if (invisibleremain_ != &::google::protobuf::internal::kEmptyString) {
    invisibleremain_->clear();
  }
  clear_has_invisibleremain();
}
inline const ::std::string& aiai::invisibleremain() const {
  return *invisibleremain_;
}
inline void aiai::set_invisibleremain(const ::std::string& value) {
  set_has_invisibleremain();
  if (invisibleremain_ == &::google::protobuf::internal::kEmptyString) {
    invisibleremain_ = new ::std::string;
  }
  invisibleremain_->assign(value);
}
inline void aiai::set_invisibleremain(const char* value) {
  set_has_invisibleremain();
  if (invisibleremain_ == &::google::protobuf::internal::kEmptyString) {
    invisibleremain_ = new ::std::string;
  }
  invisibleremain_->assign(value);
}
inline void aiai::set_invisibleremain(const char* value, size_t size) {
  set_has_invisibleremain();
  if (invisibleremain_ == &::google::protobuf::internal::kEmptyString) {
    invisibleremain_ = new ::std::string;
  }
  invisibleremain_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* aiai::mutable_invisibleremain() {
  set_has_invisibleremain();
  if (invisibleremain_ == &::google::protobuf::internal::kEmptyString) {
    invisibleremain_ = new ::std::string;
  }
  return invisibleremain_;
}
inline ::std::string* aiai::release_invisibleremain() {
  clear_has_invisibleremain();
  if (invisibleremain_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = invisibleremain_;
    invisibleremain_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void aiai::set_allocated_invisibleremain(::std::string* invisibleremain) {
  if (invisibleremain_ != &::google::protobuf::internal::kEmptyString) {
    delete invisibleremain_;
  }
  if (invisibleremain) {
    set_has_invisibleremain();
    invisibleremain_ = invisibleremain;
  } else {
    clear_has_invisibleremain();
    invisibleremain_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 isActive = 5;
inline bool aiai::has_isactive() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void aiai::set_has_isactive() {
  _has_bits_[0] |= 0x00000010u;
}
inline void aiai::clear_has_isactive() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void aiai::clear_isactive() {
  isactive_ = 0;
  clear_has_isactive();
}
inline ::google::protobuf::int32 aiai::isactive() const {
  return isactive_;
}
inline void aiai::set_isactive(::google::protobuf::int32 value) {
  set_has_isactive();
  isactive_ = value;
}

// optional int32 returnType = 6;
inline bool aiai::has_returntype() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void aiai::set_has_returntype() {
  _has_bits_[0] |= 0x00000020u;
}
inline void aiai::clear_has_returntype() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void aiai::clear_returntype() {
  returntype_ = 0;
  clear_has_returntype();
}
inline ::google::protobuf::int32 aiai::returntype() const {
  return returntype_;
}
inline void aiai::set_returntype(::google::protobuf::int32 value) {
  set_has_returntype();
  returntype_ = value;
}

// optional int32 view = 7;
inline bool aiai::has_view() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void aiai::set_has_view() {
  _has_bits_[0] |= 0x00000040u;
}
inline void aiai::clear_has_view() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void aiai::clear_view() {
  view_ = 0;
  clear_has_view();
}
inline ::google::protobuf::int32 aiai::view() const {
  return view_;
}
inline void aiai::set_view(::google::protobuf::int32 value) {
  set_has_view();
  view_ = value;
}

// optional int32 isAttackedShowOff = 8;
inline bool aiai::has_isattackedshowoff() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void aiai::set_has_isattackedshowoff() {
  _has_bits_[0] |= 0x00000080u;
}
inline void aiai::clear_has_isattackedshowoff() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void aiai::clear_isattackedshowoff() {
  isattackedshowoff_ = 0;
  clear_has_isattackedshowoff();
}
inline ::google::protobuf::int32 aiai::isattackedshowoff() const {
  return isattackedshowoff_;
}
inline void aiai::set_isattackedshowoff(::google::protobuf::int32 value) {
  set_has_isattackedshowoff();
  isattackedshowoff_ = value;
}

// optional int32 pursueRange = 9;
inline bool aiai::has_pursuerange() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void aiai::set_has_pursuerange() {
  _has_bits_[0] |= 0x00000100u;
}
inline void aiai::clear_has_pursuerange() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void aiai::clear_pursuerange() {
  pursuerange_ = 0;
  clear_has_pursuerange();
}
inline ::google::protobuf::int32 aiai::pursuerange() const {
  return pursuerange_;
}
inline void aiai::set_pursuerange(::google::protobuf::int32 value) {
  set_has_pursuerange();
  pursuerange_ = value;
}

// optional int32 actionRange = 10;
inline bool aiai::has_actionrange() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void aiai::set_has_actionrange() {
  _has_bits_[0] |= 0x00000200u;
}
inline void aiai::clear_has_actionrange() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void aiai::clear_actionrange() {
  actionrange_ = 0;
  clear_has_actionrange();
}
inline ::google::protobuf::int32 aiai::actionrange() const {
  return actionrange_;
}
inline void aiai::set_actionrange(::google::protobuf::int32 value) {
  set_has_actionrange();
  actionrange_ = value;
}

// optional int32 wakeupRadius = 11;
inline bool aiai::has_wakeupradius() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void aiai::set_has_wakeupradius() {
  _has_bits_[0] |= 0x00000400u;
}
inline void aiai::clear_has_wakeupradius() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void aiai::clear_wakeupradius() {
  wakeupradius_ = 0;
  clear_has_wakeupradius();
}
inline ::google::protobuf::int32 aiai::wakeupradius() const {
  return wakeupradius_;
}
inline void aiai::set_wakeupradius(::google::protobuf::int32 value) {
  set_has_wakeupradius();
  wakeupradius_ = value;
}

// optional int32 isAIWorkWhenNobody = 12;
inline bool aiai::has_isaiworkwhennobody() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void aiai::set_has_isaiworkwhennobody() {
  _has_bits_[0] |= 0x00000800u;
}
inline void aiai::clear_has_isaiworkwhennobody() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void aiai::clear_isaiworkwhennobody() {
  isaiworkwhennobody_ = 0;
  clear_has_isaiworkwhennobody();
}
inline ::google::protobuf::int32 aiai::isaiworkwhennobody() const {
  return isaiworkwhennobody_;
}
inline void aiai::set_isaiworkwhennobody(::google::protobuf::int32 value) {
  set_has_isaiworkwhennobody();
  isaiworkwhennobody_ = value;
}

// optional int32 bornEffectAIDelay = 13;
inline bool aiai::has_borneffectaidelay() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void aiai::set_has_borneffectaidelay() {
  _has_bits_[0] |= 0x00001000u;
}
inline void aiai::clear_has_borneffectaidelay() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void aiai::clear_borneffectaidelay() {
  borneffectaidelay_ = 0;
  clear_has_borneffectaidelay();
}
inline ::google::protobuf::int32 aiai::borneffectaidelay() const {
  return borneffectaidelay_;
}
inline void aiai::set_borneffectaidelay(::google::protobuf::int32 value) {
  set_has_borneffectaidelay();
  borneffectaidelay_ = value;
}

// optional string initSkills = 14;
inline bool aiai::has_initskills() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void aiai::set_has_initskills() {
  _has_bits_[0] |= 0x00002000u;
}
inline void aiai::clear_has_initskills() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void aiai::clear_initskills() {
  if (initskills_ != &::google::protobuf::internal::kEmptyString) {
    initskills_->clear();
  }
  clear_has_initskills();
}
inline const ::std::string& aiai::initskills() const {
  return *initskills_;
}
inline void aiai::set_initskills(const ::std::string& value) {
  set_has_initskills();
  if (initskills_ == &::google::protobuf::internal::kEmptyString) {
    initskills_ = new ::std::string;
  }
  initskills_->assign(value);
}
inline void aiai::set_initskills(const char* value) {
  set_has_initskills();
  if (initskills_ == &::google::protobuf::internal::kEmptyString) {
    initskills_ = new ::std::string;
  }
  initskills_->assign(value);
}
inline void aiai::set_initskills(const char* value, size_t size) {
  set_has_initskills();
  if (initskills_ == &::google::protobuf::internal::kEmptyString) {
    initskills_ = new ::std::string;
  }
  initskills_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* aiai::mutable_initskills() {
  set_has_initskills();
  if (initskills_ == &::google::protobuf::internal::kEmptyString) {
    initskills_ = new ::std::string;
  }
  return initskills_;
}
inline ::std::string* aiai::release_initskills() {
  clear_has_initskills();
  if (initskills_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = initskills_;
    initskills_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void aiai::set_allocated_initskills(::std::string* initskills) {
  if (initskills_ != &::google::protobuf::internal::kEmptyString) {
    delete initskills_;
  }
  if (initskills) {
    set_has_initskills();
    initskills_ = initskills;
  } else {
    clear_has_initskills();
    initskills_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// repeated .proto_ff.aiaihpDesc hp = 15;
inline int aiai::hp_size() const {
  return hp_.size();
}
inline void aiai::clear_hp() {
  hp_.Clear();
}
inline const ::proto_ff::aiaihpDesc& aiai::hp(int index) const {
  return hp_.Get(index);
}
inline ::proto_ff::aiaihpDesc* aiai::mutable_hp(int index) {
  return hp_.Mutable(index);
}
inline ::proto_ff::aiaihpDesc* aiai::add_hp() {
  return hp_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::aiaihpDesc >&
aiai::hp() const {
  return hp_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::aiaihpDesc >*
aiai::mutable_hp() {
  return &hp_;
}

// -------------------------------------------------------------------

// Sheet_aiai

// repeated .proto_ff.aiai aiai_List = 1;
inline int Sheet_aiai::aiai_list_size() const {
  return aiai_list_.size();
}
inline void Sheet_aiai::clear_aiai_list() {
  aiai_list_.Clear();
}
inline const ::proto_ff::aiai& Sheet_aiai::aiai_list(int index) const {
  return aiai_list_.Get(index);
}
inline ::proto_ff::aiai* Sheet_aiai::mutable_aiai_list(int index) {
  return aiai_list_.Mutable(index);
}
inline ::proto_ff::aiai* Sheet_aiai::add_aiai_list() {
  return aiai_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::aiai >&
Sheet_aiai::aiai_list() const {
  return aiai_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::aiai >*
Sheet_aiai::mutable_aiai_list() {
  return &aiai_list_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto_ff

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_ai_2eproto__INCLUDED
