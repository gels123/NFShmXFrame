// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: role.proto

#ifndef PROTOBUF_role_2eproto__INCLUDED
#define PROTOBUF_role_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "yd_fieldoptions.pb.h"
// @@protoc_insertion_point(includes)

namespace proto_ff {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_role_2eproto();
void protobuf_AssignDesc_role_2eproto();
void protobuf_ShutdownFile_role_2eproto();

class rolebornitemDesc;
class rolebornmailDesc;
class roleborn;
class Sheet_roleborn;
class rolemasterMaleattributeDesc;
class rolemasterMale;
class Sheet_rolemasterMale;
class rolemasterFemaleattributeDesc;
class rolemasterFemale;
class Sheet_rolemasterFemale;
class rolesickleMaleattributeDesc;
class rolesickleMale;
class Sheet_rolesickleMale;
class rolesickleFemaleattributeDesc;
class rolesickleFemale;
class Sheet_rolesickleFemale;
class roleswordMaleattributeDesc;
class roleswordMale;
class Sheet_roleswordMale;
class roleswordFemaleattributeDesc;
class roleswordFemale;
class Sheet_roleswordFemale;
class roletaidaoMaleattributeDesc;
class roletaidaoMale;
class Sheet_roletaidaoMale;
class roletaidaoFemaleattributeDesc;
class roletaidaoFemale;
class Sheet_roletaidaoFemale;
class roleexp;
class Sheet_roleexp;
class roleskillType;
class Sheet_roleskillType;
class roleaddSkill;
class Sheet_roleaddSkill;
class roleworldexp;
class Sheet_roleworldexp;

// ===================================================================

class rolebornitemDesc : public ::google::protobuf::Message {
 public:
  rolebornitemDesc();
  virtual ~rolebornitemDesc();

  rolebornitemDesc(const rolebornitemDesc& from);

  inline rolebornitemDesc& operator=(const rolebornitemDesc& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const rolebornitemDesc& default_instance();

  void Swap(rolebornitemDesc* other);

  // implements Message ----------------------------------------------

  rolebornitemDesc* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const rolebornitemDesc& from);
  void MergeFrom(const rolebornitemDesc& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 num = 1;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 1;
  inline ::google::protobuf::int32 num() const;
  inline void set_num(::google::protobuf::int32 value);

  // optional int64 name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline ::google::protobuf::int64 name() const;
  inline void set_name(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.rolebornitemDesc)
 private:
  inline void set_has_num();
  inline void clear_has_num();
  inline void set_has_name();
  inline void clear_has_name();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 name_;
  ::google::protobuf::int32 num_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_role_2eproto();
  friend void protobuf_AssignDesc_role_2eproto();
  friend void protobuf_ShutdownFile_role_2eproto();

  void InitAsDefaultInstance();
  static rolebornitemDesc* default_instance_;
};
// -------------------------------------------------------------------

class rolebornmailDesc : public ::google::protobuf::Message {
 public:
  rolebornmailDesc();
  virtual ~rolebornmailDesc();

  rolebornmailDesc(const rolebornmailDesc& from);

  inline rolebornmailDesc& operator=(const rolebornmailDesc& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const rolebornmailDesc& default_instance();

  void Swap(rolebornmailDesc* other);

  // implements Message ----------------------------------------------

  rolebornmailDesc* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const rolebornmailDesc& from);
  void MergeFrom(const rolebornmailDesc& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 num = 1;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 1;
  inline ::google::protobuf::int32 num() const;
  inline void set_num(::google::protobuf::int32 value);

  // optional int64 name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline ::google::protobuf::int64 name() const;
  inline void set_name(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.rolebornmailDesc)
 private:
  inline void set_has_num();
  inline void clear_has_num();
  inline void set_has_name();
  inline void clear_has_name();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 name_;
  ::google::protobuf::int32 num_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_role_2eproto();
  friend void protobuf_AssignDesc_role_2eproto();
  friend void protobuf_ShutdownFile_role_2eproto();

  void InitAsDefaultInstance();
  static rolebornmailDesc* default_instance_;
};
// -------------------------------------------------------------------

class roleborn : public ::google::protobuf::Message {
 public:
  roleborn();
  virtual ~roleborn();

  roleborn(const roleborn& from);

  inline roleborn& operator=(const roleborn& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const roleborn& default_instance();

  void Swap(roleborn* other);

  // implements Message ----------------------------------------------

  roleborn* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const roleborn& from);
  void MergeFrom(const roleborn& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 bornID = 1;
  inline bool has_bornid() const;
  inline void clear_bornid();
  static const int kBornIDFieldNumber = 1;
  inline ::google::protobuf::int64 bornid() const;
  inline void set_bornid(::google::protobuf::int64 value);

  // optional int32 professionID = 2;
  inline bool has_professionid() const;
  inline void clear_professionid();
  static const int kProfessionIDFieldNumber = 2;
  inline ::google::protobuf::int32 professionid() const;
  inline void set_professionid(::google::protobuf::int32 value);

  // optional string professionName = 3;
  inline bool has_professionname() const;
  inline void clear_professionname();
  static const int kProfessionNameFieldNumber = 3;
  inline const ::std::string& professionname() const;
  inline void set_professionname(const ::std::string& value);
  inline void set_professionname(const char* value);
  inline void set_professionname(const char* value, size_t size);
  inline ::std::string* mutable_professionname();
  inline ::std::string* release_professionname();
  inline void set_allocated_professionname(::std::string* professionname);

  // optional string placement = 4;
  inline bool has_placement() const;
  inline void clear_placement();
  static const int kPlacementFieldNumber = 4;
  inline const ::std::string& placement() const;
  inline void set_placement(const ::std::string& value);
  inline void set_placement(const char* value);
  inline void set_placement(const char* value, size_t size);
  inline ::std::string* mutable_placement();
  inline ::std::string* release_placement();
  inline void set_allocated_placement(::std::string* placement);

  // optional int32 gender = 5;
  inline bool has_gender() const;
  inline void clear_gender();
  static const int kGenderFieldNumber = 5;
  inline ::google::protobuf::int32 gender() const;
  inline void set_gender(::google::protobuf::int32 value);

  // optional int32 bornLevel = 6;
  inline bool has_bornlevel() const;
  inline void clear_bornlevel();
  static const int kBornLevelFieldNumber = 6;
  inline ::google::protobuf::int32 bornlevel() const;
  inline void set_bornlevel(::google::protobuf::int32 value);

  // optional int32 bornTitle = 7;
  inline bool has_borntitle() const;
  inline void clear_borntitle();
  static const int kBornTitleFieldNumber = 7;
  inline ::google::protobuf::int32 borntitle() const;
  inline void set_borntitle(::google::protobuf::int32 value);

  // optional int64 diamond = 8;
  inline bool has_diamond() const;
  inline void clear_diamond();
  static const int kDiamondFieldNumber = 8;
  inline ::google::protobuf::int64 diamond() const;
  inline void set_diamond(::google::protobuf::int64 value);

  // optional int64 bindDiamond = 9;
  inline bool has_binddiamond() const;
  inline void clear_binddiamond();
  static const int kBindDiamondFieldNumber = 9;
  inline ::google::protobuf::int64 binddiamond() const;
  inline void set_binddiamond(::google::protobuf::int64 value);

  // optional int64 gold = 10;
  inline bool has_gold() const;
  inline void clear_gold();
  static const int kGoldFieldNumber = 10;
  inline ::google::protobuf::int64 gold() const;
  inline void set_gold(::google::protobuf::int64 value);

  // optional int64 mapID = 11;
  inline bool has_mapid() const;
  inline void clear_mapid();
  static const int kMapIDFieldNumber = 11;
  inline ::google::protobuf::int64 mapid() const;
  inline void set_mapid(::google::protobuf::int64 value);

  // optional int32 birthFace = 12;
  inline bool has_birthface() const;
  inline void clear_birthface();
  static const int kBirthFaceFieldNumber = 12;
  inline ::google::protobuf::int32 birthface() const;
  inline void set_birthface(::google::protobuf::int32 value);

  // optional string icons = 13;
  inline bool has_icons() const;
  inline void clear_icons();
  static const int kIconsFieldNumber = 13;
  inline const ::std::string& icons() const;
  inline void set_icons(const ::std::string& value);
  inline void set_icons(const char* value);
  inline void set_icons(const char* value, size_t size);
  inline ::std::string* mutable_icons();
  inline ::std::string* release_icons();
  inline void set_allocated_icons(::std::string* icons);

  // optional string loginAvata = 14;
  inline bool has_loginavata() const;
  inline void clear_loginavata();
  static const int kLoginAvataFieldNumber = 14;
  inline const ::std::string& loginavata() const;
  inline void set_loginavata(const ::std::string& value);
  inline void set_loginavata(const char* value);
  inline void set_loginavata(const char* value, size_t size);
  inline ::std::string* mutable_loginavata();
  inline ::std::string* release_loginavata();
  inline void set_allocated_loginavata(::std::string* loginavata);

  // optional string newweapon = 15;
  inline bool has_newweapon() const;
  inline void clear_newweapon();
  static const int kNewweaponFieldNumber = 15;
  inline const ::std::string& newweapon() const;
  inline void set_newweapon(const ::std::string& value);
  inline void set_newweapon(const char* value);
  inline void set_newweapon(const char* value, size_t size);
  inline ::std::string* mutable_newweapon();
  inline ::std::string* release_newweapon();
  inline void set_allocated_newweapon(::std::string* newweapon);

  // optional string newclothing = 16;
  inline bool has_newclothing() const;
  inline void clear_newclothing();
  static const int kNewclothingFieldNumber = 16;
  inline const ::std::string& newclothing() const;
  inline void set_newclothing(const ::std::string& value);
  inline void set_newclothing(const char* value);
  inline void set_newclothing(const char* value, size_t size);
  inline ::std::string* mutable_newclothing();
  inline ::std::string* release_newclothing();
  inline void set_allocated_newclothing(::std::string* newclothing);

  // optional string weaponAvata = 17;
  inline bool has_weaponavata() const;
  inline void clear_weaponavata();
  static const int kWeaponAvataFieldNumber = 17;
  inline const ::std::string& weaponavata() const;
  inline void set_weaponavata(const ::std::string& value);
  inline void set_weaponavata(const char* value);
  inline void set_weaponavata(const char* value, size_t size);
  inline ::std::string* mutable_weaponavata();
  inline ::std::string* release_weaponavata();
  inline void set_allocated_weaponavata(::std::string* weaponavata);

  // optional string roleAvata = 18;
  inline bool has_roleavata() const;
  inline void clear_roleavata();
  static const int kRoleAvataFieldNumber = 18;
  inline const ::std::string& roleavata() const;
  inline void set_roleavata(const ::std::string& value);
  inline void set_roleavata(const char* value);
  inline void set_roleavata(const char* value, size_t size);
  inline ::std::string* mutable_roleavata();
  inline ::std::string* release_roleavata();
  inline void set_allocated_roleavata(::std::string* roleavata);

  // optional int32 hairColor = 19;
  inline bool has_haircolor() const;
  inline void clear_haircolor();
  static const int kHairColorFieldNumber = 19;
  inline ::google::protobuf::int32 haircolor() const;
  inline void set_haircolor(::google::protobuf::int32 value);

  // optional int32 clothesColor = 20;
  inline bool has_clothescolor() const;
  inline void clear_clothescolor();
  static const int kClothesColorFieldNumber = 20;
  inline ::google::protobuf::int32 clothescolor() const;
  inline void set_clothescolor(::google::protobuf::int32 value);

  // optional int32 skinColor = 21;
  inline bool has_skincolor() const;
  inline void clear_skincolor();
  static const int kSkinColorFieldNumber = 21;
  inline ::google::protobuf::int32 skincolor() const;
  inline void set_skincolor(::google::protobuf::int32 value);

  // optional int64 carryWeapons = 22;
  inline bool has_carryweapons() const;
  inline void clear_carryweapons();
  static const int kCarryWeaponsFieldNumber = 22;
  inline ::google::protobuf::int64 carryweapons() const;
  inline void set_carryweapons(::google::protobuf::int64 value);

  // optional int64 carryArmor = 23;
  inline bool has_carryarmor() const;
  inline void clear_carryarmor();
  static const int kCarryArmorFieldNumber = 23;
  inline ::google::protobuf::int64 carryarmor() const;
  inline void set_carryarmor(::google::protobuf::int64 value);

  // optional int64 carryCloak = 24;
  inline bool has_carrycloak() const;
  inline void clear_carrycloak();
  static const int kCarryCloakFieldNumber = 24;
  inline ::google::protobuf::int64 carrycloak() const;
  inline void set_carrycloak(::google::protobuf::int64 value);

  // optional int64 carryShoes = 25;
  inline bool has_carryshoes() const;
  inline void clear_carryshoes();
  static const int kCarryShoesFieldNumber = 25;
  inline ::google::protobuf::int64 carryshoes() const;
  inline void set_carryshoes(::google::protobuf::int64 value);

  // optional int64 carryNecklace = 26;
  inline bool has_carrynecklace() const;
  inline void clear_carrynecklace();
  static const int kCarryNecklaceFieldNumber = 26;
  inline ::google::protobuf::int64 carrynecklace() const;
  inline void set_carrynecklace(::google::protobuf::int64 value);

  // optional int64 carryAmulet = 27;
  inline bool has_carryamulet() const;
  inline void clear_carryamulet();
  static const int kCarryAmuletFieldNumber = 27;
  inline ::google::protobuf::int64 carryamulet() const;
  inline void set_carryamulet(::google::protobuf::int64 value);

  // optional int64 carryBracer = 28;
  inline bool has_carrybracer() const;
  inline void clear_carrybracer();
  static const int kCarryBracerFieldNumber = 28;
  inline ::google::protobuf::int64 carrybracer() const;
  inline void set_carrybracer(::google::protobuf::int64 value);

  // optional int64 carryRing = 29;
  inline bool has_carryring() const;
  inline void clear_carryring();
  static const int kCarryRingFieldNumber = 29;
  inline ::google::protobuf::int64 carryring() const;
  inline void set_carryring(::google::protobuf::int64 value);

  // optional int64 carryFashionWeapons = 30;
  inline bool has_carryfashionweapons() const;
  inline void clear_carryfashionweapons();
  static const int kCarryFashionWeaponsFieldNumber = 30;
  inline ::google::protobuf::int64 carryfashionweapons() const;
  inline void set_carryfashionweapons(::google::protobuf::int64 value);

  // optional int64 carryFashionArmor = 31;
  inline bool has_carryfashionarmor() const;
  inline void clear_carryfashionarmor();
  static const int kCarryFashionArmorFieldNumber = 31;
  inline ::google::protobuf::int64 carryfashionarmor() const;
  inline void set_carryfashionarmor(::google::protobuf::int64 value);

  // optional int64 carryWings = 32;
  inline bool has_carrywings() const;
  inline void clear_carrywings();
  static const int kCarryWingsFieldNumber = 32;
  inline ::google::protobuf::int64 carrywings() const;
  inline void set_carrywings(::google::protobuf::int64 value);

  // optional int32 mSpeed = 33;
  inline bool has_mspeed() const;
  inline void clear_mspeed();
  static const int kMSpeedFieldNumber = 33;
  inline ::google::protobuf::int32 mspeed() const;
  inline void set_mspeed(::google::protobuf::int32 value);

  // optional int32 view = 34;
  inline bool has_view() const;
  inline void clear_view();
  static const int kViewFieldNumber = 34;
  inline ::google::protobuf::int32 view() const;
  inline void set_view(::google::protobuf::int32 value);

  // optional int32 radius = 35;
  inline bool has_radius() const;
  inline void clear_radius();
  static const int kRadiusFieldNumber = 35;
  inline ::google::protobuf::int32 radius() const;
  inline void set_radius(::google::protobuf::int32 value);

  // optional int32 group = 36;
  inline bool has_group() const;
  inline void clear_group();
  static const int kGroupFieldNumber = 36;
  inline ::google::protobuf::int32 group() const;
  inline void set_group(::google::protobuf::int32 value);

  // optional int64 sheny = 37;
  inline bool has_sheny() const;
  inline void clear_sheny();
  static const int kShenyFieldNumber = 37;
  inline ::google::protobuf::int64 sheny() const;
  inline void set_sheny(::google::protobuf::int64 value);

  // optional int64 shenw = 38;
  inline bool has_shenw() const;
  inline void clear_shenw();
  static const int kShenwFieldNumber = 38;
  inline ::google::protobuf::int64 shenw() const;
  inline void set_shenw(::google::protobuf::int64 value);

  // repeated int32 actBuff = 39;
  inline int actbuff_size() const;
  inline void clear_actbuff();
  static const int kActBuffFieldNumber = 39;
  inline ::google::protobuf::int32 actbuff(int index) const;
  inline void set_actbuff(int index, ::google::protobuf::int32 value);
  inline void add_actbuff(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      actbuff() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_actbuff();

  // repeated .proto_ff.rolebornitemDesc item = 40;
  inline int item_size() const;
  inline void clear_item();
  static const int kItemFieldNumber = 40;
  inline const ::proto_ff::rolebornitemDesc& item(int index) const;
  inline ::proto_ff::rolebornitemDesc* mutable_item(int index);
  inline ::proto_ff::rolebornitemDesc* add_item();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::rolebornitemDesc >&
      item() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::rolebornitemDesc >*
      mutable_item();

  // repeated int64 actSkill = 41;
  inline int actskill_size() const;
  inline void clear_actskill();
  static const int kActSkillFieldNumber = 41;
  inline ::google::protobuf::int64 actskill(int index) const;
  inline void set_actskill(int index, ::google::protobuf::int64 value);
  inline void add_actskill(::google::protobuf::int64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      actskill() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_actskill();

  // repeated .proto_ff.rolebornmailDesc mail = 42;
  inline int mail_size() const;
  inline void clear_mail();
  static const int kMailFieldNumber = 42;
  inline const ::proto_ff::rolebornmailDesc& mail(int index) const;
  inline ::proto_ff::rolebornmailDesc* mutable_mail(int index);
  inline ::proto_ff::rolebornmailDesc* add_mail();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::rolebornmailDesc >&
      mail() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::rolebornmailDesc >*
      mutable_mail();

  // @@protoc_insertion_point(class_scope:proto_ff.roleborn)
 private:
  inline void set_has_bornid();
  inline void clear_has_bornid();
  inline void set_has_professionid();
  inline void clear_has_professionid();
  inline void set_has_professionname();
  inline void clear_has_professionname();
  inline void set_has_placement();
  inline void clear_has_placement();
  inline void set_has_gender();
  inline void clear_has_gender();
  inline void set_has_bornlevel();
  inline void clear_has_bornlevel();
  inline void set_has_borntitle();
  inline void clear_has_borntitle();
  inline void set_has_diamond();
  inline void clear_has_diamond();
  inline void set_has_binddiamond();
  inline void clear_has_binddiamond();
  inline void set_has_gold();
  inline void clear_has_gold();
  inline void set_has_mapid();
  inline void clear_has_mapid();
  inline void set_has_birthface();
  inline void clear_has_birthface();
  inline void set_has_icons();
  inline void clear_has_icons();
  inline void set_has_loginavata();
  inline void clear_has_loginavata();
  inline void set_has_newweapon();
  inline void clear_has_newweapon();
  inline void set_has_newclothing();
  inline void clear_has_newclothing();
  inline void set_has_weaponavata();
  inline void clear_has_weaponavata();
  inline void set_has_roleavata();
  inline void clear_has_roleavata();
  inline void set_has_haircolor();
  inline void clear_has_haircolor();
  inline void set_has_clothescolor();
  inline void clear_has_clothescolor();
  inline void set_has_skincolor();
  inline void clear_has_skincolor();
  inline void set_has_carryweapons();
  inline void clear_has_carryweapons();
  inline void set_has_carryarmor();
  inline void clear_has_carryarmor();
  inline void set_has_carrycloak();
  inline void clear_has_carrycloak();
  inline void set_has_carryshoes();
  inline void clear_has_carryshoes();
  inline void set_has_carrynecklace();
  inline void clear_has_carrynecklace();
  inline void set_has_carryamulet();
  inline void clear_has_carryamulet();
  inline void set_has_carrybracer();
  inline void clear_has_carrybracer();
  inline void set_has_carryring();
  inline void clear_has_carryring();
  inline void set_has_carryfashionweapons();
  inline void clear_has_carryfashionweapons();
  inline void set_has_carryfashionarmor();
  inline void clear_has_carryfashionarmor();
  inline void set_has_carrywings();
  inline void clear_has_carrywings();
  inline void set_has_mspeed();
  inline void clear_has_mspeed();
  inline void set_has_view();
  inline void clear_has_view();
  inline void set_has_radius();
  inline void clear_has_radius();
  inline void set_has_group();
  inline void clear_has_group();
  inline void set_has_sheny();
  inline void clear_has_sheny();
  inline void set_has_shenw();
  inline void clear_has_shenw();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 bornid_;
  ::std::string* professionname_;
  ::google::protobuf::int32 professionid_;
  ::google::protobuf::int32 gender_;
  ::std::string* placement_;
  ::google::protobuf::int32 bornlevel_;
  ::google::protobuf::int32 borntitle_;
  ::google::protobuf::int64 diamond_;
  ::google::protobuf::int64 binddiamond_;
  ::google::protobuf::int64 gold_;
  ::google::protobuf::int64 mapid_;
  ::std::string* icons_;
  ::std::string* loginavata_;
  ::std::string* newweapon_;
  ::google::protobuf::int32 birthface_;
  ::google::protobuf::int32 haircolor_;
  ::std::string* newclothing_;
  ::std::string* weaponavata_;
  ::std::string* roleavata_;
  ::google::protobuf::int32 clothescolor_;
  ::google::protobuf::int32 skincolor_;
  ::google::protobuf::int64 carryweapons_;
  ::google::protobuf::int64 carryarmor_;
  ::google::protobuf::int64 carrycloak_;
  ::google::protobuf::int64 carryshoes_;
  ::google::protobuf::int64 carrynecklace_;
  ::google::protobuf::int64 carryamulet_;
  ::google::protobuf::int64 carrybracer_;
  ::google::protobuf::int64 carryring_;
  ::google::protobuf::int64 carryfashionweapons_;
  ::google::protobuf::int64 carryfashionarmor_;
  ::google::protobuf::int64 carrywings_;
  ::google::protobuf::int32 mspeed_;
  ::google::protobuf::int32 view_;
  ::google::protobuf::int32 radius_;
  ::google::protobuf::int32 group_;
  ::google::protobuf::int64 sheny_;
  ::google::protobuf::int64 shenw_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > actbuff_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::rolebornitemDesc > item_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > actskill_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::rolebornmailDesc > mail_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(42 + 31) / 32];

  friend void  protobuf_AddDesc_role_2eproto();
  friend void protobuf_AssignDesc_role_2eproto();
  friend void protobuf_ShutdownFile_role_2eproto();

  void InitAsDefaultInstance();
  static roleborn* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_roleborn : public ::google::protobuf::Message {
 public:
  Sheet_roleborn();
  virtual ~Sheet_roleborn();

  Sheet_roleborn(const Sheet_roleborn& from);

  inline Sheet_roleborn& operator=(const Sheet_roleborn& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_roleborn& default_instance();

  void Swap(Sheet_roleborn* other);

  // implements Message ----------------------------------------------

  Sheet_roleborn* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_roleborn& from);
  void MergeFrom(const Sheet_roleborn& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.roleborn roleborn_List = 1;
  inline int roleborn_list_size() const;
  inline void clear_roleborn_list();
  static const int kRolebornListFieldNumber = 1;
  inline const ::proto_ff::roleborn& roleborn_list(int index) const;
  inline ::proto_ff::roleborn* mutable_roleborn_list(int index);
  inline ::proto_ff::roleborn* add_roleborn_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::roleborn >&
      roleborn_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::roleborn >*
      mutable_roleborn_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_roleborn)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::roleborn > roleborn_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_role_2eproto();
  friend void protobuf_AssignDesc_role_2eproto();
  friend void protobuf_ShutdownFile_role_2eproto();

  void InitAsDefaultInstance();
  static Sheet_roleborn* default_instance_;
};
// -------------------------------------------------------------------

class rolemasterMaleattributeDesc : public ::google::protobuf::Message {
 public:
  rolemasterMaleattributeDesc();
  virtual ~rolemasterMaleattributeDesc();

  rolemasterMaleattributeDesc(const rolemasterMaleattributeDesc& from);

  inline rolemasterMaleattributeDesc& operator=(const rolemasterMaleattributeDesc& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const rolemasterMaleattributeDesc& default_instance();

  void Swap(rolemasterMaleattributeDesc* other);

  // implements Message ----------------------------------------------

  rolemasterMaleattributeDesc* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const rolemasterMaleattributeDesc& from);
  void MergeFrom(const rolemasterMaleattributeDesc& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 Type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // optional int32 Value = 2;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 2;
  inline ::google::protobuf::int32 value() const;
  inline void set_value(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.rolemasterMaleattributeDesc)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_value();
  inline void clear_has_value();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 value_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_role_2eproto();
  friend void protobuf_AssignDesc_role_2eproto();
  friend void protobuf_ShutdownFile_role_2eproto();

  void InitAsDefaultInstance();
  static rolemasterMaleattributeDesc* default_instance_;
};
// -------------------------------------------------------------------

class rolemasterMale : public ::google::protobuf::Message {
 public:
  rolemasterMale();
  virtual ~rolemasterMale();

  rolemasterMale(const rolemasterMale& from);

  inline rolemasterMale& operator=(const rolemasterMale& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const rolemasterMale& default_instance();

  void Swap(rolemasterMale* other);

  // implements Message ----------------------------------------------

  rolemasterMale* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const rolemasterMale& from);
  void MergeFrom(const rolemasterMale& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 lv = 1;
  inline bool has_lv() const;
  inline void clear_lv();
  static const int kLvFieldNumber = 1;
  inline ::google::protobuf::int32 lv() const;
  inline void set_lv(::google::protobuf::int32 value);

  // optional int32 upgradePoint = 2;
  inline bool has_upgradepoint() const;
  inline void clear_upgradepoint();
  static const int kUpgradePointFieldNumber = 2;
  inline ::google::protobuf::int32 upgradepoint() const;
  inline void set_upgradepoint(::google::protobuf::int32 value);

  // repeated .proto_ff.rolemasterMaleattributeDesc attribute = 3;
  inline int attribute_size() const;
  inline void clear_attribute();
  static const int kAttributeFieldNumber = 3;
  inline const ::proto_ff::rolemasterMaleattributeDesc& attribute(int index) const;
  inline ::proto_ff::rolemasterMaleattributeDesc* mutable_attribute(int index);
  inline ::proto_ff::rolemasterMaleattributeDesc* add_attribute();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::rolemasterMaleattributeDesc >&
      attribute() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::rolemasterMaleattributeDesc >*
      mutable_attribute();

  // @@protoc_insertion_point(class_scope:proto_ff.rolemasterMale)
 private:
  inline void set_has_lv();
  inline void clear_has_lv();
  inline void set_has_upgradepoint();
  inline void clear_has_upgradepoint();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 lv_;
  ::google::protobuf::int32 upgradepoint_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::rolemasterMaleattributeDesc > attribute_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_role_2eproto();
  friend void protobuf_AssignDesc_role_2eproto();
  friend void protobuf_ShutdownFile_role_2eproto();

  void InitAsDefaultInstance();
  static rolemasterMale* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_rolemasterMale : public ::google::protobuf::Message {
 public:
  Sheet_rolemasterMale();
  virtual ~Sheet_rolemasterMale();

  Sheet_rolemasterMale(const Sheet_rolemasterMale& from);

  inline Sheet_rolemasterMale& operator=(const Sheet_rolemasterMale& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_rolemasterMale& default_instance();

  void Swap(Sheet_rolemasterMale* other);

  // implements Message ----------------------------------------------

  Sheet_rolemasterMale* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_rolemasterMale& from);
  void MergeFrom(const Sheet_rolemasterMale& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.rolemasterMale rolemasterMale_List = 1;
  inline int rolemastermale_list_size() const;
  inline void clear_rolemastermale_list();
  static const int kRolemasterMaleListFieldNumber = 1;
  inline const ::proto_ff::rolemasterMale& rolemastermale_list(int index) const;
  inline ::proto_ff::rolemasterMale* mutable_rolemastermale_list(int index);
  inline ::proto_ff::rolemasterMale* add_rolemastermale_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::rolemasterMale >&
      rolemastermale_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::rolemasterMale >*
      mutable_rolemastermale_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_rolemasterMale)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::rolemasterMale > rolemastermale_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_role_2eproto();
  friend void protobuf_AssignDesc_role_2eproto();
  friend void protobuf_ShutdownFile_role_2eproto();

  void InitAsDefaultInstance();
  static Sheet_rolemasterMale* default_instance_;
};
// -------------------------------------------------------------------

class rolemasterFemaleattributeDesc : public ::google::protobuf::Message {
 public:
  rolemasterFemaleattributeDesc();
  virtual ~rolemasterFemaleattributeDesc();

  rolemasterFemaleattributeDesc(const rolemasterFemaleattributeDesc& from);

  inline rolemasterFemaleattributeDesc& operator=(const rolemasterFemaleattributeDesc& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const rolemasterFemaleattributeDesc& default_instance();

  void Swap(rolemasterFemaleattributeDesc* other);

  // implements Message ----------------------------------------------

  rolemasterFemaleattributeDesc* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const rolemasterFemaleattributeDesc& from);
  void MergeFrom(const rolemasterFemaleattributeDesc& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 Type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // optional int32 Value = 2;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 2;
  inline ::google::protobuf::int32 value() const;
  inline void set_value(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.rolemasterFemaleattributeDesc)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_value();
  inline void clear_has_value();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 value_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_role_2eproto();
  friend void protobuf_AssignDesc_role_2eproto();
  friend void protobuf_ShutdownFile_role_2eproto();

  void InitAsDefaultInstance();
  static rolemasterFemaleattributeDesc* default_instance_;
};
// -------------------------------------------------------------------

class rolemasterFemale : public ::google::protobuf::Message {
 public:
  rolemasterFemale();
  virtual ~rolemasterFemale();

  rolemasterFemale(const rolemasterFemale& from);

  inline rolemasterFemale& operator=(const rolemasterFemale& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const rolemasterFemale& default_instance();

  void Swap(rolemasterFemale* other);

  // implements Message ----------------------------------------------

  rolemasterFemale* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const rolemasterFemale& from);
  void MergeFrom(const rolemasterFemale& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 lv = 1;
  inline bool has_lv() const;
  inline void clear_lv();
  static const int kLvFieldNumber = 1;
  inline ::google::protobuf::int32 lv() const;
  inline void set_lv(::google::protobuf::int32 value);

  // optional int32 upgradePoint = 2;
  inline bool has_upgradepoint() const;
  inline void clear_upgradepoint();
  static const int kUpgradePointFieldNumber = 2;
  inline ::google::protobuf::int32 upgradepoint() const;
  inline void set_upgradepoint(::google::protobuf::int32 value);

  // repeated .proto_ff.rolemasterFemaleattributeDesc attribute = 3;
  inline int attribute_size() const;
  inline void clear_attribute();
  static const int kAttributeFieldNumber = 3;
  inline const ::proto_ff::rolemasterFemaleattributeDesc& attribute(int index) const;
  inline ::proto_ff::rolemasterFemaleattributeDesc* mutable_attribute(int index);
  inline ::proto_ff::rolemasterFemaleattributeDesc* add_attribute();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::rolemasterFemaleattributeDesc >&
      attribute() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::rolemasterFemaleattributeDesc >*
      mutable_attribute();

  // @@protoc_insertion_point(class_scope:proto_ff.rolemasterFemale)
 private:
  inline void set_has_lv();
  inline void clear_has_lv();
  inline void set_has_upgradepoint();
  inline void clear_has_upgradepoint();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 lv_;
  ::google::protobuf::int32 upgradepoint_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::rolemasterFemaleattributeDesc > attribute_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_role_2eproto();
  friend void protobuf_AssignDesc_role_2eproto();
  friend void protobuf_ShutdownFile_role_2eproto();

  void InitAsDefaultInstance();
  static rolemasterFemale* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_rolemasterFemale : public ::google::protobuf::Message {
 public:
  Sheet_rolemasterFemale();
  virtual ~Sheet_rolemasterFemale();

  Sheet_rolemasterFemale(const Sheet_rolemasterFemale& from);

  inline Sheet_rolemasterFemale& operator=(const Sheet_rolemasterFemale& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_rolemasterFemale& default_instance();

  void Swap(Sheet_rolemasterFemale* other);

  // implements Message ----------------------------------------------

  Sheet_rolemasterFemale* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_rolemasterFemale& from);
  void MergeFrom(const Sheet_rolemasterFemale& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.rolemasterFemale rolemasterFemale_List = 1;
  inline int rolemasterfemale_list_size() const;
  inline void clear_rolemasterfemale_list();
  static const int kRolemasterFemaleListFieldNumber = 1;
  inline const ::proto_ff::rolemasterFemale& rolemasterfemale_list(int index) const;
  inline ::proto_ff::rolemasterFemale* mutable_rolemasterfemale_list(int index);
  inline ::proto_ff::rolemasterFemale* add_rolemasterfemale_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::rolemasterFemale >&
      rolemasterfemale_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::rolemasterFemale >*
      mutable_rolemasterfemale_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_rolemasterFemale)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::rolemasterFemale > rolemasterfemale_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_role_2eproto();
  friend void protobuf_AssignDesc_role_2eproto();
  friend void protobuf_ShutdownFile_role_2eproto();

  void InitAsDefaultInstance();
  static Sheet_rolemasterFemale* default_instance_;
};
// -------------------------------------------------------------------

class rolesickleMaleattributeDesc : public ::google::protobuf::Message {
 public:
  rolesickleMaleattributeDesc();
  virtual ~rolesickleMaleattributeDesc();

  rolesickleMaleattributeDesc(const rolesickleMaleattributeDesc& from);

  inline rolesickleMaleattributeDesc& operator=(const rolesickleMaleattributeDesc& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const rolesickleMaleattributeDesc& default_instance();

  void Swap(rolesickleMaleattributeDesc* other);

  // implements Message ----------------------------------------------

  rolesickleMaleattributeDesc* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const rolesickleMaleattributeDesc& from);
  void MergeFrom(const rolesickleMaleattributeDesc& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 Type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // optional int32 Value = 2;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 2;
  inline ::google::protobuf::int32 value() const;
  inline void set_value(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.rolesickleMaleattributeDesc)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_value();
  inline void clear_has_value();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 value_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_role_2eproto();
  friend void protobuf_AssignDesc_role_2eproto();
  friend void protobuf_ShutdownFile_role_2eproto();

  void InitAsDefaultInstance();
  static rolesickleMaleattributeDesc* default_instance_;
};
// -------------------------------------------------------------------

class rolesickleMale : public ::google::protobuf::Message {
 public:
  rolesickleMale();
  virtual ~rolesickleMale();

  rolesickleMale(const rolesickleMale& from);

  inline rolesickleMale& operator=(const rolesickleMale& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const rolesickleMale& default_instance();

  void Swap(rolesickleMale* other);

  // implements Message ----------------------------------------------

  rolesickleMale* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const rolesickleMale& from);
  void MergeFrom(const rolesickleMale& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 lv = 1;
  inline bool has_lv() const;
  inline void clear_lv();
  static const int kLvFieldNumber = 1;
  inline ::google::protobuf::int32 lv() const;
  inline void set_lv(::google::protobuf::int32 value);

  // optional int32 upgradePoint = 2;
  inline bool has_upgradepoint() const;
  inline void clear_upgradepoint();
  static const int kUpgradePointFieldNumber = 2;
  inline ::google::protobuf::int32 upgradepoint() const;
  inline void set_upgradepoint(::google::protobuf::int32 value);

  // repeated .proto_ff.rolesickleMaleattributeDesc attribute = 3;
  inline int attribute_size() const;
  inline void clear_attribute();
  static const int kAttributeFieldNumber = 3;
  inline const ::proto_ff::rolesickleMaleattributeDesc& attribute(int index) const;
  inline ::proto_ff::rolesickleMaleattributeDesc* mutable_attribute(int index);
  inline ::proto_ff::rolesickleMaleattributeDesc* add_attribute();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::rolesickleMaleattributeDesc >&
      attribute() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::rolesickleMaleattributeDesc >*
      mutable_attribute();

  // @@protoc_insertion_point(class_scope:proto_ff.rolesickleMale)
 private:
  inline void set_has_lv();
  inline void clear_has_lv();
  inline void set_has_upgradepoint();
  inline void clear_has_upgradepoint();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 lv_;
  ::google::protobuf::int32 upgradepoint_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::rolesickleMaleattributeDesc > attribute_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_role_2eproto();
  friend void protobuf_AssignDesc_role_2eproto();
  friend void protobuf_ShutdownFile_role_2eproto();

  void InitAsDefaultInstance();
  static rolesickleMale* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_rolesickleMale : public ::google::protobuf::Message {
 public:
  Sheet_rolesickleMale();
  virtual ~Sheet_rolesickleMale();

  Sheet_rolesickleMale(const Sheet_rolesickleMale& from);

  inline Sheet_rolesickleMale& operator=(const Sheet_rolesickleMale& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_rolesickleMale& default_instance();

  void Swap(Sheet_rolesickleMale* other);

  // implements Message ----------------------------------------------

  Sheet_rolesickleMale* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_rolesickleMale& from);
  void MergeFrom(const Sheet_rolesickleMale& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.rolesickleMale rolesickleMale_List = 1;
  inline int rolesicklemale_list_size() const;
  inline void clear_rolesicklemale_list();
  static const int kRolesickleMaleListFieldNumber = 1;
  inline const ::proto_ff::rolesickleMale& rolesicklemale_list(int index) const;
  inline ::proto_ff::rolesickleMale* mutable_rolesicklemale_list(int index);
  inline ::proto_ff::rolesickleMale* add_rolesicklemale_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::rolesickleMale >&
      rolesicklemale_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::rolesickleMale >*
      mutable_rolesicklemale_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_rolesickleMale)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::rolesickleMale > rolesicklemale_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_role_2eproto();
  friend void protobuf_AssignDesc_role_2eproto();
  friend void protobuf_ShutdownFile_role_2eproto();

  void InitAsDefaultInstance();
  static Sheet_rolesickleMale* default_instance_;
};
// -------------------------------------------------------------------

class rolesickleFemaleattributeDesc : public ::google::protobuf::Message {
 public:
  rolesickleFemaleattributeDesc();
  virtual ~rolesickleFemaleattributeDesc();

  rolesickleFemaleattributeDesc(const rolesickleFemaleattributeDesc& from);

  inline rolesickleFemaleattributeDesc& operator=(const rolesickleFemaleattributeDesc& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const rolesickleFemaleattributeDesc& default_instance();

  void Swap(rolesickleFemaleattributeDesc* other);

  // implements Message ----------------------------------------------

  rolesickleFemaleattributeDesc* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const rolesickleFemaleattributeDesc& from);
  void MergeFrom(const rolesickleFemaleattributeDesc& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 Type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // optional int32 Value = 2;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 2;
  inline ::google::protobuf::int32 value() const;
  inline void set_value(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.rolesickleFemaleattributeDesc)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_value();
  inline void clear_has_value();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 value_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_role_2eproto();
  friend void protobuf_AssignDesc_role_2eproto();
  friend void protobuf_ShutdownFile_role_2eproto();

  void InitAsDefaultInstance();
  static rolesickleFemaleattributeDesc* default_instance_;
};
// -------------------------------------------------------------------

class rolesickleFemale : public ::google::protobuf::Message {
 public:
  rolesickleFemale();
  virtual ~rolesickleFemale();

  rolesickleFemale(const rolesickleFemale& from);

  inline rolesickleFemale& operator=(const rolesickleFemale& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const rolesickleFemale& default_instance();

  void Swap(rolesickleFemale* other);

  // implements Message ----------------------------------------------

  rolesickleFemale* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const rolesickleFemale& from);
  void MergeFrom(const rolesickleFemale& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 lv = 1;
  inline bool has_lv() const;
  inline void clear_lv();
  static const int kLvFieldNumber = 1;
  inline ::google::protobuf::int32 lv() const;
  inline void set_lv(::google::protobuf::int32 value);

  // optional int32 upgradePoint = 2;
  inline bool has_upgradepoint() const;
  inline void clear_upgradepoint();
  static const int kUpgradePointFieldNumber = 2;
  inline ::google::protobuf::int32 upgradepoint() const;
  inline void set_upgradepoint(::google::protobuf::int32 value);

  // repeated .proto_ff.rolesickleFemaleattributeDesc attribute = 3;
  inline int attribute_size() const;
  inline void clear_attribute();
  static const int kAttributeFieldNumber = 3;
  inline const ::proto_ff::rolesickleFemaleattributeDesc& attribute(int index) const;
  inline ::proto_ff::rolesickleFemaleattributeDesc* mutable_attribute(int index);
  inline ::proto_ff::rolesickleFemaleattributeDesc* add_attribute();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::rolesickleFemaleattributeDesc >&
      attribute() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::rolesickleFemaleattributeDesc >*
      mutable_attribute();

  // @@protoc_insertion_point(class_scope:proto_ff.rolesickleFemale)
 private:
  inline void set_has_lv();
  inline void clear_has_lv();
  inline void set_has_upgradepoint();
  inline void clear_has_upgradepoint();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 lv_;
  ::google::protobuf::int32 upgradepoint_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::rolesickleFemaleattributeDesc > attribute_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_role_2eproto();
  friend void protobuf_AssignDesc_role_2eproto();
  friend void protobuf_ShutdownFile_role_2eproto();

  void InitAsDefaultInstance();
  static rolesickleFemale* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_rolesickleFemale : public ::google::protobuf::Message {
 public:
  Sheet_rolesickleFemale();
  virtual ~Sheet_rolesickleFemale();

  Sheet_rolesickleFemale(const Sheet_rolesickleFemale& from);

  inline Sheet_rolesickleFemale& operator=(const Sheet_rolesickleFemale& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_rolesickleFemale& default_instance();

  void Swap(Sheet_rolesickleFemale* other);

  // implements Message ----------------------------------------------

  Sheet_rolesickleFemale* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_rolesickleFemale& from);
  void MergeFrom(const Sheet_rolesickleFemale& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.rolesickleFemale rolesickleFemale_List = 1;
  inline int rolesicklefemale_list_size() const;
  inline void clear_rolesicklefemale_list();
  static const int kRolesickleFemaleListFieldNumber = 1;
  inline const ::proto_ff::rolesickleFemale& rolesicklefemale_list(int index) const;
  inline ::proto_ff::rolesickleFemale* mutable_rolesicklefemale_list(int index);
  inline ::proto_ff::rolesickleFemale* add_rolesicklefemale_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::rolesickleFemale >&
      rolesicklefemale_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::rolesickleFemale >*
      mutable_rolesicklefemale_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_rolesickleFemale)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::rolesickleFemale > rolesicklefemale_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_role_2eproto();
  friend void protobuf_AssignDesc_role_2eproto();
  friend void protobuf_ShutdownFile_role_2eproto();

  void InitAsDefaultInstance();
  static Sheet_rolesickleFemale* default_instance_;
};
// -------------------------------------------------------------------

class roleswordMaleattributeDesc : public ::google::protobuf::Message {
 public:
  roleswordMaleattributeDesc();
  virtual ~roleswordMaleattributeDesc();

  roleswordMaleattributeDesc(const roleswordMaleattributeDesc& from);

  inline roleswordMaleattributeDesc& operator=(const roleswordMaleattributeDesc& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const roleswordMaleattributeDesc& default_instance();

  void Swap(roleswordMaleattributeDesc* other);

  // implements Message ----------------------------------------------

  roleswordMaleattributeDesc* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const roleswordMaleattributeDesc& from);
  void MergeFrom(const roleswordMaleattributeDesc& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 Type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // optional int32 Value = 2;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 2;
  inline ::google::protobuf::int32 value() const;
  inline void set_value(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.roleswordMaleattributeDesc)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_value();
  inline void clear_has_value();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 value_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_role_2eproto();
  friend void protobuf_AssignDesc_role_2eproto();
  friend void protobuf_ShutdownFile_role_2eproto();

  void InitAsDefaultInstance();
  static roleswordMaleattributeDesc* default_instance_;
};
// -------------------------------------------------------------------

class roleswordMale : public ::google::protobuf::Message {
 public:
  roleswordMale();
  virtual ~roleswordMale();

  roleswordMale(const roleswordMale& from);

  inline roleswordMale& operator=(const roleswordMale& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const roleswordMale& default_instance();

  void Swap(roleswordMale* other);

  // implements Message ----------------------------------------------

  roleswordMale* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const roleswordMale& from);
  void MergeFrom(const roleswordMale& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 lv = 1;
  inline bool has_lv() const;
  inline void clear_lv();
  static const int kLvFieldNumber = 1;
  inline ::google::protobuf::int32 lv() const;
  inline void set_lv(::google::protobuf::int32 value);

  // optional int32 upgradePoint = 2;
  inline bool has_upgradepoint() const;
  inline void clear_upgradepoint();
  static const int kUpgradePointFieldNumber = 2;
  inline ::google::protobuf::int32 upgradepoint() const;
  inline void set_upgradepoint(::google::protobuf::int32 value);

  // repeated .proto_ff.roleswordMaleattributeDesc attribute = 3;
  inline int attribute_size() const;
  inline void clear_attribute();
  static const int kAttributeFieldNumber = 3;
  inline const ::proto_ff::roleswordMaleattributeDesc& attribute(int index) const;
  inline ::proto_ff::roleswordMaleattributeDesc* mutable_attribute(int index);
  inline ::proto_ff::roleswordMaleattributeDesc* add_attribute();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::roleswordMaleattributeDesc >&
      attribute() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::roleswordMaleattributeDesc >*
      mutable_attribute();

  // @@protoc_insertion_point(class_scope:proto_ff.roleswordMale)
 private:
  inline void set_has_lv();
  inline void clear_has_lv();
  inline void set_has_upgradepoint();
  inline void clear_has_upgradepoint();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 lv_;
  ::google::protobuf::int32 upgradepoint_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::roleswordMaleattributeDesc > attribute_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_role_2eproto();
  friend void protobuf_AssignDesc_role_2eproto();
  friend void protobuf_ShutdownFile_role_2eproto();

  void InitAsDefaultInstance();
  static roleswordMale* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_roleswordMale : public ::google::protobuf::Message {
 public:
  Sheet_roleswordMale();
  virtual ~Sheet_roleswordMale();

  Sheet_roleswordMale(const Sheet_roleswordMale& from);

  inline Sheet_roleswordMale& operator=(const Sheet_roleswordMale& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_roleswordMale& default_instance();

  void Swap(Sheet_roleswordMale* other);

  // implements Message ----------------------------------------------

  Sheet_roleswordMale* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_roleswordMale& from);
  void MergeFrom(const Sheet_roleswordMale& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.roleswordMale roleswordMale_List = 1;
  inline int roleswordmale_list_size() const;
  inline void clear_roleswordmale_list();
  static const int kRoleswordMaleListFieldNumber = 1;
  inline const ::proto_ff::roleswordMale& roleswordmale_list(int index) const;
  inline ::proto_ff::roleswordMale* mutable_roleswordmale_list(int index);
  inline ::proto_ff::roleswordMale* add_roleswordmale_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::roleswordMale >&
      roleswordmale_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::roleswordMale >*
      mutable_roleswordmale_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_roleswordMale)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::roleswordMale > roleswordmale_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_role_2eproto();
  friend void protobuf_AssignDesc_role_2eproto();
  friend void protobuf_ShutdownFile_role_2eproto();

  void InitAsDefaultInstance();
  static Sheet_roleswordMale* default_instance_;
};
// -------------------------------------------------------------------

class roleswordFemaleattributeDesc : public ::google::protobuf::Message {
 public:
  roleswordFemaleattributeDesc();
  virtual ~roleswordFemaleattributeDesc();

  roleswordFemaleattributeDesc(const roleswordFemaleattributeDesc& from);

  inline roleswordFemaleattributeDesc& operator=(const roleswordFemaleattributeDesc& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const roleswordFemaleattributeDesc& default_instance();

  void Swap(roleswordFemaleattributeDesc* other);

  // implements Message ----------------------------------------------

  roleswordFemaleattributeDesc* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const roleswordFemaleattributeDesc& from);
  void MergeFrom(const roleswordFemaleattributeDesc& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 Type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // optional int32 Value = 2;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 2;
  inline ::google::protobuf::int32 value() const;
  inline void set_value(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.roleswordFemaleattributeDesc)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_value();
  inline void clear_has_value();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 value_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_role_2eproto();
  friend void protobuf_AssignDesc_role_2eproto();
  friend void protobuf_ShutdownFile_role_2eproto();

  void InitAsDefaultInstance();
  static roleswordFemaleattributeDesc* default_instance_;
};
// -------------------------------------------------------------------

class roleswordFemale : public ::google::protobuf::Message {
 public:
  roleswordFemale();
  virtual ~roleswordFemale();

  roleswordFemale(const roleswordFemale& from);

  inline roleswordFemale& operator=(const roleswordFemale& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const roleswordFemale& default_instance();

  void Swap(roleswordFemale* other);

  // implements Message ----------------------------------------------

  roleswordFemale* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const roleswordFemale& from);
  void MergeFrom(const roleswordFemale& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 lv = 1;
  inline bool has_lv() const;
  inline void clear_lv();
  static const int kLvFieldNumber = 1;
  inline ::google::protobuf::int32 lv() const;
  inline void set_lv(::google::protobuf::int32 value);

  // optional int32 upgradePoint = 2;
  inline bool has_upgradepoint() const;
  inline void clear_upgradepoint();
  static const int kUpgradePointFieldNumber = 2;
  inline ::google::protobuf::int32 upgradepoint() const;
  inline void set_upgradepoint(::google::protobuf::int32 value);

  // repeated .proto_ff.roleswordFemaleattributeDesc attribute = 3;
  inline int attribute_size() const;
  inline void clear_attribute();
  static const int kAttributeFieldNumber = 3;
  inline const ::proto_ff::roleswordFemaleattributeDesc& attribute(int index) const;
  inline ::proto_ff::roleswordFemaleattributeDesc* mutable_attribute(int index);
  inline ::proto_ff::roleswordFemaleattributeDesc* add_attribute();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::roleswordFemaleattributeDesc >&
      attribute() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::roleswordFemaleattributeDesc >*
      mutable_attribute();

  // @@protoc_insertion_point(class_scope:proto_ff.roleswordFemale)
 private:
  inline void set_has_lv();
  inline void clear_has_lv();
  inline void set_has_upgradepoint();
  inline void clear_has_upgradepoint();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 lv_;
  ::google::protobuf::int32 upgradepoint_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::roleswordFemaleattributeDesc > attribute_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_role_2eproto();
  friend void protobuf_AssignDesc_role_2eproto();
  friend void protobuf_ShutdownFile_role_2eproto();

  void InitAsDefaultInstance();
  static roleswordFemale* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_roleswordFemale : public ::google::protobuf::Message {
 public:
  Sheet_roleswordFemale();
  virtual ~Sheet_roleswordFemale();

  Sheet_roleswordFemale(const Sheet_roleswordFemale& from);

  inline Sheet_roleswordFemale& operator=(const Sheet_roleswordFemale& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_roleswordFemale& default_instance();

  void Swap(Sheet_roleswordFemale* other);

  // implements Message ----------------------------------------------

  Sheet_roleswordFemale* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_roleswordFemale& from);
  void MergeFrom(const Sheet_roleswordFemale& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.roleswordFemale roleswordFemale_List = 1;
  inline int roleswordfemale_list_size() const;
  inline void clear_roleswordfemale_list();
  static const int kRoleswordFemaleListFieldNumber = 1;
  inline const ::proto_ff::roleswordFemale& roleswordfemale_list(int index) const;
  inline ::proto_ff::roleswordFemale* mutable_roleswordfemale_list(int index);
  inline ::proto_ff::roleswordFemale* add_roleswordfemale_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::roleswordFemale >&
      roleswordfemale_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::roleswordFemale >*
      mutable_roleswordfemale_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_roleswordFemale)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::roleswordFemale > roleswordfemale_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_role_2eproto();
  friend void protobuf_AssignDesc_role_2eproto();
  friend void protobuf_ShutdownFile_role_2eproto();

  void InitAsDefaultInstance();
  static Sheet_roleswordFemale* default_instance_;
};
// -------------------------------------------------------------------

class roletaidaoMaleattributeDesc : public ::google::protobuf::Message {
 public:
  roletaidaoMaleattributeDesc();
  virtual ~roletaidaoMaleattributeDesc();

  roletaidaoMaleattributeDesc(const roletaidaoMaleattributeDesc& from);

  inline roletaidaoMaleattributeDesc& operator=(const roletaidaoMaleattributeDesc& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const roletaidaoMaleattributeDesc& default_instance();

  void Swap(roletaidaoMaleattributeDesc* other);

  // implements Message ----------------------------------------------

  roletaidaoMaleattributeDesc* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const roletaidaoMaleattributeDesc& from);
  void MergeFrom(const roletaidaoMaleattributeDesc& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 Type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // optional int32 Value = 2;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 2;
  inline ::google::protobuf::int32 value() const;
  inline void set_value(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.roletaidaoMaleattributeDesc)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_value();
  inline void clear_has_value();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 value_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_role_2eproto();
  friend void protobuf_AssignDesc_role_2eproto();
  friend void protobuf_ShutdownFile_role_2eproto();

  void InitAsDefaultInstance();
  static roletaidaoMaleattributeDesc* default_instance_;
};
// -------------------------------------------------------------------

class roletaidaoMale : public ::google::protobuf::Message {
 public:
  roletaidaoMale();
  virtual ~roletaidaoMale();

  roletaidaoMale(const roletaidaoMale& from);

  inline roletaidaoMale& operator=(const roletaidaoMale& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const roletaidaoMale& default_instance();

  void Swap(roletaidaoMale* other);

  // implements Message ----------------------------------------------

  roletaidaoMale* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const roletaidaoMale& from);
  void MergeFrom(const roletaidaoMale& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 lv = 1;
  inline bool has_lv() const;
  inline void clear_lv();
  static const int kLvFieldNumber = 1;
  inline ::google::protobuf::int32 lv() const;
  inline void set_lv(::google::protobuf::int32 value);

  // optional int32 upgradePoint = 2;
  inline bool has_upgradepoint() const;
  inline void clear_upgradepoint();
  static const int kUpgradePointFieldNumber = 2;
  inline ::google::protobuf::int32 upgradepoint() const;
  inline void set_upgradepoint(::google::protobuf::int32 value);

  // repeated .proto_ff.roletaidaoMaleattributeDesc attribute = 3;
  inline int attribute_size() const;
  inline void clear_attribute();
  static const int kAttributeFieldNumber = 3;
  inline const ::proto_ff::roletaidaoMaleattributeDesc& attribute(int index) const;
  inline ::proto_ff::roletaidaoMaleattributeDesc* mutable_attribute(int index);
  inline ::proto_ff::roletaidaoMaleattributeDesc* add_attribute();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::roletaidaoMaleattributeDesc >&
      attribute() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::roletaidaoMaleattributeDesc >*
      mutable_attribute();

  // @@protoc_insertion_point(class_scope:proto_ff.roletaidaoMale)
 private:
  inline void set_has_lv();
  inline void clear_has_lv();
  inline void set_has_upgradepoint();
  inline void clear_has_upgradepoint();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 lv_;
  ::google::protobuf::int32 upgradepoint_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::roletaidaoMaleattributeDesc > attribute_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_role_2eproto();
  friend void protobuf_AssignDesc_role_2eproto();
  friend void protobuf_ShutdownFile_role_2eproto();

  void InitAsDefaultInstance();
  static roletaidaoMale* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_roletaidaoMale : public ::google::protobuf::Message {
 public:
  Sheet_roletaidaoMale();
  virtual ~Sheet_roletaidaoMale();

  Sheet_roletaidaoMale(const Sheet_roletaidaoMale& from);

  inline Sheet_roletaidaoMale& operator=(const Sheet_roletaidaoMale& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_roletaidaoMale& default_instance();

  void Swap(Sheet_roletaidaoMale* other);

  // implements Message ----------------------------------------------

  Sheet_roletaidaoMale* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_roletaidaoMale& from);
  void MergeFrom(const Sheet_roletaidaoMale& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.roletaidaoMale roletaidaoMale_List = 1;
  inline int roletaidaomale_list_size() const;
  inline void clear_roletaidaomale_list();
  static const int kRoletaidaoMaleListFieldNumber = 1;
  inline const ::proto_ff::roletaidaoMale& roletaidaomale_list(int index) const;
  inline ::proto_ff::roletaidaoMale* mutable_roletaidaomale_list(int index);
  inline ::proto_ff::roletaidaoMale* add_roletaidaomale_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::roletaidaoMale >&
      roletaidaomale_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::roletaidaoMale >*
      mutable_roletaidaomale_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_roletaidaoMale)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::roletaidaoMale > roletaidaomale_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_role_2eproto();
  friend void protobuf_AssignDesc_role_2eproto();
  friend void protobuf_ShutdownFile_role_2eproto();

  void InitAsDefaultInstance();
  static Sheet_roletaidaoMale* default_instance_;
};
// -------------------------------------------------------------------

class roletaidaoFemaleattributeDesc : public ::google::protobuf::Message {
 public:
  roletaidaoFemaleattributeDesc();
  virtual ~roletaidaoFemaleattributeDesc();

  roletaidaoFemaleattributeDesc(const roletaidaoFemaleattributeDesc& from);

  inline roletaidaoFemaleattributeDesc& operator=(const roletaidaoFemaleattributeDesc& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const roletaidaoFemaleattributeDesc& default_instance();

  void Swap(roletaidaoFemaleattributeDesc* other);

  // implements Message ----------------------------------------------

  roletaidaoFemaleattributeDesc* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const roletaidaoFemaleattributeDesc& from);
  void MergeFrom(const roletaidaoFemaleattributeDesc& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 Type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // optional int32 Value = 2;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 2;
  inline ::google::protobuf::int32 value() const;
  inline void set_value(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.roletaidaoFemaleattributeDesc)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_value();
  inline void clear_has_value();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 value_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_role_2eproto();
  friend void protobuf_AssignDesc_role_2eproto();
  friend void protobuf_ShutdownFile_role_2eproto();

  void InitAsDefaultInstance();
  static roletaidaoFemaleattributeDesc* default_instance_;
};
// -------------------------------------------------------------------

class roletaidaoFemale : public ::google::protobuf::Message {
 public:
  roletaidaoFemale();
  virtual ~roletaidaoFemale();

  roletaidaoFemale(const roletaidaoFemale& from);

  inline roletaidaoFemale& operator=(const roletaidaoFemale& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const roletaidaoFemale& default_instance();

  void Swap(roletaidaoFemale* other);

  // implements Message ----------------------------------------------

  roletaidaoFemale* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const roletaidaoFemale& from);
  void MergeFrom(const roletaidaoFemale& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 lv = 1;
  inline bool has_lv() const;
  inline void clear_lv();
  static const int kLvFieldNumber = 1;
  inline ::google::protobuf::int32 lv() const;
  inline void set_lv(::google::protobuf::int32 value);

  // optional int32 upgradePoint = 2;
  inline bool has_upgradepoint() const;
  inline void clear_upgradepoint();
  static const int kUpgradePointFieldNumber = 2;
  inline ::google::protobuf::int32 upgradepoint() const;
  inline void set_upgradepoint(::google::protobuf::int32 value);

  // repeated .proto_ff.roletaidaoFemaleattributeDesc attribute = 3;
  inline int attribute_size() const;
  inline void clear_attribute();
  static const int kAttributeFieldNumber = 3;
  inline const ::proto_ff::roletaidaoFemaleattributeDesc& attribute(int index) const;
  inline ::proto_ff::roletaidaoFemaleattributeDesc* mutable_attribute(int index);
  inline ::proto_ff::roletaidaoFemaleattributeDesc* add_attribute();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::roletaidaoFemaleattributeDesc >&
      attribute() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::roletaidaoFemaleattributeDesc >*
      mutable_attribute();

  // @@protoc_insertion_point(class_scope:proto_ff.roletaidaoFemale)
 private:
  inline void set_has_lv();
  inline void clear_has_lv();
  inline void set_has_upgradepoint();
  inline void clear_has_upgradepoint();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 lv_;
  ::google::protobuf::int32 upgradepoint_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::roletaidaoFemaleattributeDesc > attribute_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_role_2eproto();
  friend void protobuf_AssignDesc_role_2eproto();
  friend void protobuf_ShutdownFile_role_2eproto();

  void InitAsDefaultInstance();
  static roletaidaoFemale* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_roletaidaoFemale : public ::google::protobuf::Message {
 public:
  Sheet_roletaidaoFemale();
  virtual ~Sheet_roletaidaoFemale();

  Sheet_roletaidaoFemale(const Sheet_roletaidaoFemale& from);

  inline Sheet_roletaidaoFemale& operator=(const Sheet_roletaidaoFemale& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_roletaidaoFemale& default_instance();

  void Swap(Sheet_roletaidaoFemale* other);

  // implements Message ----------------------------------------------

  Sheet_roletaidaoFemale* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_roletaidaoFemale& from);
  void MergeFrom(const Sheet_roletaidaoFemale& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.roletaidaoFemale roletaidaoFemale_List = 1;
  inline int roletaidaofemale_list_size() const;
  inline void clear_roletaidaofemale_list();
  static const int kRoletaidaoFemaleListFieldNumber = 1;
  inline const ::proto_ff::roletaidaoFemale& roletaidaofemale_list(int index) const;
  inline ::proto_ff::roletaidaoFemale* mutable_roletaidaofemale_list(int index);
  inline ::proto_ff::roletaidaoFemale* add_roletaidaofemale_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::roletaidaoFemale >&
      roletaidaofemale_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::roletaidaoFemale >*
      mutable_roletaidaofemale_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_roletaidaoFemale)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::roletaidaoFemale > roletaidaofemale_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_role_2eproto();
  friend void protobuf_AssignDesc_role_2eproto();
  friend void protobuf_ShutdownFile_role_2eproto();

  void InitAsDefaultInstance();
  static Sheet_roletaidaoFemale* default_instance_;
};
// -------------------------------------------------------------------

class roleexp : public ::google::protobuf::Message {
 public:
  roleexp();
  virtual ~roleexp();

  roleexp(const roleexp& from);

  inline roleexp& operator=(const roleexp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const roleexp& default_instance();

  void Swap(roleexp* other);

  // implements Message ----------------------------------------------

  roleexp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const roleexp& from);
  void MergeFrom(const roleexp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 lv = 1;
  inline bool has_lv() const;
  inline void clear_lv();
  static const int kLvFieldNumber = 1;
  inline ::google::protobuf::int32 lv() const;
  inline void set_lv(::google::protobuf::int32 value);

  // optional int64 exp = 2;
  inline bool has_exp() const;
  inline void clear_exp();
  static const int kExpFieldNumber = 2;
  inline ::google::protobuf::int64 exp() const;
  inline void set_exp(::google::protobuf::int64 value);

  // optional int32 skillPoint = 3;
  inline bool has_skillpoint() const;
  inline void clear_skillpoint();
  static const int kSkillPointFieldNumber = 3;
  inline ::google::protobuf::int32 skillpoint() const;
  inline void set_skillpoint(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.roleexp)
 private:
  inline void set_has_lv();
  inline void clear_has_lv();
  inline void set_has_exp();
  inline void clear_has_exp();
  inline void set_has_skillpoint();
  inline void clear_has_skillpoint();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 exp_;
  ::google::protobuf::int32 lv_;
  ::google::protobuf::int32 skillpoint_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_role_2eproto();
  friend void protobuf_AssignDesc_role_2eproto();
  friend void protobuf_ShutdownFile_role_2eproto();

  void InitAsDefaultInstance();
  static roleexp* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_roleexp : public ::google::protobuf::Message {
 public:
  Sheet_roleexp();
  virtual ~Sheet_roleexp();

  Sheet_roleexp(const Sheet_roleexp& from);

  inline Sheet_roleexp& operator=(const Sheet_roleexp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_roleexp& default_instance();

  void Swap(Sheet_roleexp* other);

  // implements Message ----------------------------------------------

  Sheet_roleexp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_roleexp& from);
  void MergeFrom(const Sheet_roleexp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.roleexp roleexp_List = 1;
  inline int roleexp_list_size() const;
  inline void clear_roleexp_list();
  static const int kRoleexpListFieldNumber = 1;
  inline const ::proto_ff::roleexp& roleexp_list(int index) const;
  inline ::proto_ff::roleexp* mutable_roleexp_list(int index);
  inline ::proto_ff::roleexp* add_roleexp_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::roleexp >&
      roleexp_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::roleexp >*
      mutable_roleexp_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_roleexp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::roleexp > roleexp_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_role_2eproto();
  friend void protobuf_AssignDesc_role_2eproto();
  friend void protobuf_ShutdownFile_role_2eproto();

  void InitAsDefaultInstance();
  static Sheet_roleexp* default_instance_;
};
// -------------------------------------------------------------------

class roleskillType : public ::google::protobuf::Message {
 public:
  roleskillType();
  virtual ~roleskillType();

  roleskillType(const roleskillType& from);

  inline roleskillType& operator=(const roleskillType& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const roleskillType& default_instance();

  void Swap(roleskillType* other);

  // implements Message ----------------------------------------------

  roleskillType* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const roleskillType& from);
  void MergeFrom(const roleskillType& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 skillId = 1;
  inline bool has_skillid() const;
  inline void clear_skillid();
  static const int kSkillIdFieldNumber = 1;
  inline ::google::protobuf::int64 skillid() const;
  inline void set_skillid(::google::protobuf::int64 value);

  // optional int32 skillType = 2;
  inline bool has_skilltype() const;
  inline void clear_skilltype();
  static const int kSkillTypeFieldNumber = 2;
  inline ::google::protobuf::int32 skilltype() const;
  inline void set_skilltype(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.roleskillType)
 private:
  inline void set_has_skillid();
  inline void clear_has_skillid();
  inline void set_has_skilltype();
  inline void clear_has_skilltype();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 skillid_;
  ::google::protobuf::int32 skilltype_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_role_2eproto();
  friend void protobuf_AssignDesc_role_2eproto();
  friend void protobuf_ShutdownFile_role_2eproto();

  void InitAsDefaultInstance();
  static roleskillType* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_roleskillType : public ::google::protobuf::Message {
 public:
  Sheet_roleskillType();
  virtual ~Sheet_roleskillType();

  Sheet_roleskillType(const Sheet_roleskillType& from);

  inline Sheet_roleskillType& operator=(const Sheet_roleskillType& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_roleskillType& default_instance();

  void Swap(Sheet_roleskillType* other);

  // implements Message ----------------------------------------------

  Sheet_roleskillType* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_roleskillType& from);
  void MergeFrom(const Sheet_roleskillType& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.roleskillType roleskillType_List = 1;
  inline int roleskilltype_list_size() const;
  inline void clear_roleskilltype_list();
  static const int kRoleskillTypeListFieldNumber = 1;
  inline const ::proto_ff::roleskillType& roleskilltype_list(int index) const;
  inline ::proto_ff::roleskillType* mutable_roleskilltype_list(int index);
  inline ::proto_ff::roleskillType* add_roleskilltype_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::roleskillType >&
      roleskilltype_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::roleskillType >*
      mutable_roleskilltype_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_roleskillType)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::roleskillType > roleskilltype_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_role_2eproto();
  friend void protobuf_AssignDesc_role_2eproto();
  friend void protobuf_ShutdownFile_role_2eproto();

  void InitAsDefaultInstance();
  static Sheet_roleskillType* default_instance_;
};
// -------------------------------------------------------------------

class roleaddSkill : public ::google::protobuf::Message {
 public:
  roleaddSkill();
  virtual ~roleaddSkill();

  roleaddSkill(const roleaddSkill& from);

  inline roleaddSkill& operator=(const roleaddSkill& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const roleaddSkill& default_instance();

  void Swap(roleaddSkill* other);

  // implements Message ----------------------------------------------

  roleaddSkill* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const roleaddSkill& from);
  void MergeFrom(const roleaddSkill& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 Id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // optional int64 skillId = 2;
  inline bool has_skillid() const;
  inline void clear_skillid();
  static const int kSkillIdFieldNumber = 2;
  inline ::google::protobuf::int64 skillid() const;
  inline void set_skillid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.roleaddSkill)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_skillid();
  inline void clear_has_skillid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 skillid_;
  ::google::protobuf::int32 id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_role_2eproto();
  friend void protobuf_AssignDesc_role_2eproto();
  friend void protobuf_ShutdownFile_role_2eproto();

  void InitAsDefaultInstance();
  static roleaddSkill* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_roleaddSkill : public ::google::protobuf::Message {
 public:
  Sheet_roleaddSkill();
  virtual ~Sheet_roleaddSkill();

  Sheet_roleaddSkill(const Sheet_roleaddSkill& from);

  inline Sheet_roleaddSkill& operator=(const Sheet_roleaddSkill& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_roleaddSkill& default_instance();

  void Swap(Sheet_roleaddSkill* other);

  // implements Message ----------------------------------------------

  Sheet_roleaddSkill* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_roleaddSkill& from);
  void MergeFrom(const Sheet_roleaddSkill& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.roleaddSkill roleaddSkill_List = 1;
  inline int roleaddskill_list_size() const;
  inline void clear_roleaddskill_list();
  static const int kRoleaddSkillListFieldNumber = 1;
  inline const ::proto_ff::roleaddSkill& roleaddskill_list(int index) const;
  inline ::proto_ff::roleaddSkill* mutable_roleaddskill_list(int index);
  inline ::proto_ff::roleaddSkill* add_roleaddskill_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::roleaddSkill >&
      roleaddskill_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::roleaddSkill >*
      mutable_roleaddskill_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_roleaddSkill)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::roleaddSkill > roleaddskill_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_role_2eproto();
  friend void protobuf_AssignDesc_role_2eproto();
  friend void protobuf_ShutdownFile_role_2eproto();

  void InitAsDefaultInstance();
  static Sheet_roleaddSkill* default_instance_;
};
// -------------------------------------------------------------------

class roleworldexp : public ::google::protobuf::Message {
 public:
  roleworldexp();
  virtual ~roleworldexp();

  roleworldexp(const roleworldexp& from);

  inline roleworldexp& operator=(const roleworldexp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const roleworldexp& default_instance();

  void Swap(roleworldexp* other);

  // implements Message ----------------------------------------------

  roleworldexp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const roleworldexp& from);
  void MergeFrom(const roleworldexp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 lv = 1;
  inline bool has_lv() const;
  inline void clear_lv();
  static const int kLvFieldNumber = 1;
  inline ::google::protobuf::int64 lv() const;
  inline void set_lv(::google::protobuf::int64 value);

  // optional int32 worldExp = 2;
  inline bool has_worldexp() const;
  inline void clear_worldexp();
  static const int kWorldExpFieldNumber = 2;
  inline ::google::protobuf::int32 worldexp() const;
  inline void set_worldexp(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.roleworldexp)
 private:
  inline void set_has_lv();
  inline void clear_has_lv();
  inline void set_has_worldexp();
  inline void clear_has_worldexp();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 lv_;
  ::google::protobuf::int32 worldexp_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_role_2eproto();
  friend void protobuf_AssignDesc_role_2eproto();
  friend void protobuf_ShutdownFile_role_2eproto();

  void InitAsDefaultInstance();
  static roleworldexp* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_roleworldexp : public ::google::protobuf::Message {
 public:
  Sheet_roleworldexp();
  virtual ~Sheet_roleworldexp();

  Sheet_roleworldexp(const Sheet_roleworldexp& from);

  inline Sheet_roleworldexp& operator=(const Sheet_roleworldexp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_roleworldexp& default_instance();

  void Swap(Sheet_roleworldexp* other);

  // implements Message ----------------------------------------------

  Sheet_roleworldexp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_roleworldexp& from);
  void MergeFrom(const Sheet_roleworldexp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.roleworldexp roleworldexp_List = 1;
  inline int roleworldexp_list_size() const;
  inline void clear_roleworldexp_list();
  static const int kRoleworldexpListFieldNumber = 1;
  inline const ::proto_ff::roleworldexp& roleworldexp_list(int index) const;
  inline ::proto_ff::roleworldexp* mutable_roleworldexp_list(int index);
  inline ::proto_ff::roleworldexp* add_roleworldexp_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::roleworldexp >&
      roleworldexp_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::roleworldexp >*
      mutable_roleworldexp_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_roleworldexp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::roleworldexp > roleworldexp_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_role_2eproto();
  friend void protobuf_AssignDesc_role_2eproto();
  friend void protobuf_ShutdownFile_role_2eproto();

  void InitAsDefaultInstance();
  static Sheet_roleworldexp* default_instance_;
};
// ===================================================================


// ===================================================================

// rolebornitemDesc

// optional int32 num = 1;
inline bool rolebornitemDesc::has_num() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void rolebornitemDesc::set_has_num() {
  _has_bits_[0] |= 0x00000001u;
}
inline void rolebornitemDesc::clear_has_num() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void rolebornitemDesc::clear_num() {
  num_ = 0;
  clear_has_num();
}
inline ::google::protobuf::int32 rolebornitemDesc::num() const {
  return num_;
}
inline void rolebornitemDesc::set_num(::google::protobuf::int32 value) {
  set_has_num();
  num_ = value;
}

// optional int64 name = 2;
inline bool rolebornitemDesc::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void rolebornitemDesc::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void rolebornitemDesc::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void rolebornitemDesc::clear_name() {
  name_ = GOOGLE_LONGLONG(0);
  clear_has_name();
}
inline ::google::protobuf::int64 rolebornitemDesc::name() const {
  return name_;
}
inline void rolebornitemDesc::set_name(::google::protobuf::int64 value) {
  set_has_name();
  name_ = value;
}

// -------------------------------------------------------------------

// rolebornmailDesc

// optional int32 num = 1;
inline bool rolebornmailDesc::has_num() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void rolebornmailDesc::set_has_num() {
  _has_bits_[0] |= 0x00000001u;
}
inline void rolebornmailDesc::clear_has_num() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void rolebornmailDesc::clear_num() {
  num_ = 0;
  clear_has_num();
}
inline ::google::protobuf::int32 rolebornmailDesc::num() const {
  return num_;
}
inline void rolebornmailDesc::set_num(::google::protobuf::int32 value) {
  set_has_num();
  num_ = value;
}

// optional int64 name = 2;
inline bool rolebornmailDesc::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void rolebornmailDesc::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void rolebornmailDesc::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void rolebornmailDesc::clear_name() {
  name_ = GOOGLE_LONGLONG(0);
  clear_has_name();
}
inline ::google::protobuf::int64 rolebornmailDesc::name() const {
  return name_;
}
inline void rolebornmailDesc::set_name(::google::protobuf::int64 value) {
  set_has_name();
  name_ = value;
}

// -------------------------------------------------------------------

// roleborn

// optional int64 bornID = 1;
inline bool roleborn::has_bornid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void roleborn::set_has_bornid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void roleborn::clear_has_bornid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void roleborn::clear_bornid() {
  bornid_ = GOOGLE_LONGLONG(0);
  clear_has_bornid();
}
inline ::google::protobuf::int64 roleborn::bornid() const {
  return bornid_;
}
inline void roleborn::set_bornid(::google::protobuf::int64 value) {
  set_has_bornid();
  bornid_ = value;
}

// optional int32 professionID = 2;
inline bool roleborn::has_professionid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void roleborn::set_has_professionid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void roleborn::clear_has_professionid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void roleborn::clear_professionid() {
  professionid_ = 0;
  clear_has_professionid();
}
inline ::google::protobuf::int32 roleborn::professionid() const {
  return professionid_;
}
inline void roleborn::set_professionid(::google::protobuf::int32 value) {
  set_has_professionid();
  professionid_ = value;
}

// optional string professionName = 3;
inline bool roleborn::has_professionname() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void roleborn::set_has_professionname() {
  _has_bits_[0] |= 0x00000004u;
}
inline void roleborn::clear_has_professionname() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void roleborn::clear_professionname() {
  if (professionname_ != &::google::protobuf::internal::kEmptyString) {
    professionname_->clear();
  }
  clear_has_professionname();
}
inline const ::std::string& roleborn::professionname() const {
  return *professionname_;
}
inline void roleborn::set_professionname(const ::std::string& value) {
  set_has_professionname();
  if (professionname_ == &::google::protobuf::internal::kEmptyString) {
    professionname_ = new ::std::string;
  }
  professionname_->assign(value);
}
inline void roleborn::set_professionname(const char* value) {
  set_has_professionname();
  if (professionname_ == &::google::protobuf::internal::kEmptyString) {
    professionname_ = new ::std::string;
  }
  professionname_->assign(value);
}
inline void roleborn::set_professionname(const char* value, size_t size) {
  set_has_professionname();
  if (professionname_ == &::google::protobuf::internal::kEmptyString) {
    professionname_ = new ::std::string;
  }
  professionname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* roleborn::mutable_professionname() {
  set_has_professionname();
  if (professionname_ == &::google::protobuf::internal::kEmptyString) {
    professionname_ = new ::std::string;
  }
  return professionname_;
}
inline ::std::string* roleborn::release_professionname() {
  clear_has_professionname();
  if (professionname_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = professionname_;
    professionname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void roleborn::set_allocated_professionname(::std::string* professionname) {
  if (professionname_ != &::google::protobuf::internal::kEmptyString) {
    delete professionname_;
  }
  if (professionname) {
    set_has_professionname();
    professionname_ = professionname;
  } else {
    clear_has_professionname();
    professionname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string placement = 4;
inline bool roleborn::has_placement() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void roleborn::set_has_placement() {
  _has_bits_[0] |= 0x00000008u;
}
inline void roleborn::clear_has_placement() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void roleborn::clear_placement() {
  if (placement_ != &::google::protobuf::internal::kEmptyString) {
    placement_->clear();
  }
  clear_has_placement();
}
inline const ::std::string& roleborn::placement() const {
  return *placement_;
}
inline void roleborn::set_placement(const ::std::string& value) {
  set_has_placement();
  if (placement_ == &::google::protobuf::internal::kEmptyString) {
    placement_ = new ::std::string;
  }
  placement_->assign(value);
}
inline void roleborn::set_placement(const char* value) {
  set_has_placement();
  if (placement_ == &::google::protobuf::internal::kEmptyString) {
    placement_ = new ::std::string;
  }
  placement_->assign(value);
}
inline void roleborn::set_placement(const char* value, size_t size) {
  set_has_placement();
  if (placement_ == &::google::protobuf::internal::kEmptyString) {
    placement_ = new ::std::string;
  }
  placement_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* roleborn::mutable_placement() {
  set_has_placement();
  if (placement_ == &::google::protobuf::internal::kEmptyString) {
    placement_ = new ::std::string;
  }
  return placement_;
}
inline ::std::string* roleborn::release_placement() {
  clear_has_placement();
  if (placement_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = placement_;
    placement_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void roleborn::set_allocated_placement(::std::string* placement) {
  if (placement_ != &::google::protobuf::internal::kEmptyString) {
    delete placement_;
  }
  if (placement) {
    set_has_placement();
    placement_ = placement;
  } else {
    clear_has_placement();
    placement_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 gender = 5;
inline bool roleborn::has_gender() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void roleborn::set_has_gender() {
  _has_bits_[0] |= 0x00000010u;
}
inline void roleborn::clear_has_gender() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void roleborn::clear_gender() {
  gender_ = 0;
  clear_has_gender();
}
inline ::google::protobuf::int32 roleborn::gender() const {
  return gender_;
}
inline void roleborn::set_gender(::google::protobuf::int32 value) {
  set_has_gender();
  gender_ = value;
}

// optional int32 bornLevel = 6;
inline bool roleborn::has_bornlevel() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void roleborn::set_has_bornlevel() {
  _has_bits_[0] |= 0x00000020u;
}
inline void roleborn::clear_has_bornlevel() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void roleborn::clear_bornlevel() {
  bornlevel_ = 0;
  clear_has_bornlevel();
}
inline ::google::protobuf::int32 roleborn::bornlevel() const {
  return bornlevel_;
}
inline void roleborn::set_bornlevel(::google::protobuf::int32 value) {
  set_has_bornlevel();
  bornlevel_ = value;
}

// optional int32 bornTitle = 7;
inline bool roleborn::has_borntitle() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void roleborn::set_has_borntitle() {
  _has_bits_[0] |= 0x00000040u;
}
inline void roleborn::clear_has_borntitle() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void roleborn::clear_borntitle() {
  borntitle_ = 0;
  clear_has_borntitle();
}
inline ::google::protobuf::int32 roleborn::borntitle() const {
  return borntitle_;
}
inline void roleborn::set_borntitle(::google::protobuf::int32 value) {
  set_has_borntitle();
  borntitle_ = value;
}

// optional int64 diamond = 8;
inline bool roleborn::has_diamond() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void roleborn::set_has_diamond() {
  _has_bits_[0] |= 0x00000080u;
}
inline void roleborn::clear_has_diamond() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void roleborn::clear_diamond() {
  diamond_ = GOOGLE_LONGLONG(0);
  clear_has_diamond();
}
inline ::google::protobuf::int64 roleborn::diamond() const {
  return diamond_;
}
inline void roleborn::set_diamond(::google::protobuf::int64 value) {
  set_has_diamond();
  diamond_ = value;
}

// optional int64 bindDiamond = 9;
inline bool roleborn::has_binddiamond() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void roleborn::set_has_binddiamond() {
  _has_bits_[0] |= 0x00000100u;
}
inline void roleborn::clear_has_binddiamond() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void roleborn::clear_binddiamond() {
  binddiamond_ = GOOGLE_LONGLONG(0);
  clear_has_binddiamond();
}
inline ::google::protobuf::int64 roleborn::binddiamond() const {
  return binddiamond_;
}
inline void roleborn::set_binddiamond(::google::protobuf::int64 value) {
  set_has_binddiamond();
  binddiamond_ = value;
}

// optional int64 gold = 10;
inline bool roleborn::has_gold() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void roleborn::set_has_gold() {
  _has_bits_[0] |= 0x00000200u;
}
inline void roleborn::clear_has_gold() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void roleborn::clear_gold() {
  gold_ = GOOGLE_LONGLONG(0);
  clear_has_gold();
}
inline ::google::protobuf::int64 roleborn::gold() const {
  return gold_;
}
inline void roleborn::set_gold(::google::protobuf::int64 value) {
  set_has_gold();
  gold_ = value;
}

// optional int64 mapID = 11;
inline bool roleborn::has_mapid() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void roleborn::set_has_mapid() {
  _has_bits_[0] |= 0x00000400u;
}
inline void roleborn::clear_has_mapid() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void roleborn::clear_mapid() {
  mapid_ = GOOGLE_LONGLONG(0);
  clear_has_mapid();
}
inline ::google::protobuf::int64 roleborn::mapid() const {
  return mapid_;
}
inline void roleborn::set_mapid(::google::protobuf::int64 value) {
  set_has_mapid();
  mapid_ = value;
}

// optional int32 birthFace = 12;
inline bool roleborn::has_birthface() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void roleborn::set_has_birthface() {
  _has_bits_[0] |= 0x00000800u;
}
inline void roleborn::clear_has_birthface() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void roleborn::clear_birthface() {
  birthface_ = 0;
  clear_has_birthface();
}
inline ::google::protobuf::int32 roleborn::birthface() const {
  return birthface_;
}
inline void roleborn::set_birthface(::google::protobuf::int32 value) {
  set_has_birthface();
  birthface_ = value;
}

// optional string icons = 13;
inline bool roleborn::has_icons() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void roleborn::set_has_icons() {
  _has_bits_[0] |= 0x00001000u;
}
inline void roleborn::clear_has_icons() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void roleborn::clear_icons() {
  if (icons_ != &::google::protobuf::internal::kEmptyString) {
    icons_->clear();
  }
  clear_has_icons();
}
inline const ::std::string& roleborn::icons() const {
  return *icons_;
}
inline void roleborn::set_icons(const ::std::string& value) {
  set_has_icons();
  if (icons_ == &::google::protobuf::internal::kEmptyString) {
    icons_ = new ::std::string;
  }
  icons_->assign(value);
}
inline void roleborn::set_icons(const char* value) {
  set_has_icons();
  if (icons_ == &::google::protobuf::internal::kEmptyString) {
    icons_ = new ::std::string;
  }
  icons_->assign(value);
}
inline void roleborn::set_icons(const char* value, size_t size) {
  set_has_icons();
  if (icons_ == &::google::protobuf::internal::kEmptyString) {
    icons_ = new ::std::string;
  }
  icons_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* roleborn::mutable_icons() {
  set_has_icons();
  if (icons_ == &::google::protobuf::internal::kEmptyString) {
    icons_ = new ::std::string;
  }
  return icons_;
}
inline ::std::string* roleborn::release_icons() {
  clear_has_icons();
  if (icons_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = icons_;
    icons_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void roleborn::set_allocated_icons(::std::string* icons) {
  if (icons_ != &::google::protobuf::internal::kEmptyString) {
    delete icons_;
  }
  if (icons) {
    set_has_icons();
    icons_ = icons;
  } else {
    clear_has_icons();
    icons_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string loginAvata = 14;
inline bool roleborn::has_loginavata() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void roleborn::set_has_loginavata() {
  _has_bits_[0] |= 0x00002000u;
}
inline void roleborn::clear_has_loginavata() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void roleborn::clear_loginavata() {
  if (loginavata_ != &::google::protobuf::internal::kEmptyString) {
    loginavata_->clear();
  }
  clear_has_loginavata();
}
inline const ::std::string& roleborn::loginavata() const {
  return *loginavata_;
}
inline void roleborn::set_loginavata(const ::std::string& value) {
  set_has_loginavata();
  if (loginavata_ == &::google::protobuf::internal::kEmptyString) {
    loginavata_ = new ::std::string;
  }
  loginavata_->assign(value);
}
inline void roleborn::set_loginavata(const char* value) {
  set_has_loginavata();
  if (loginavata_ == &::google::protobuf::internal::kEmptyString) {
    loginavata_ = new ::std::string;
  }
  loginavata_->assign(value);
}
inline void roleborn::set_loginavata(const char* value, size_t size) {
  set_has_loginavata();
  if (loginavata_ == &::google::protobuf::internal::kEmptyString) {
    loginavata_ = new ::std::string;
  }
  loginavata_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* roleborn::mutable_loginavata() {
  set_has_loginavata();
  if (loginavata_ == &::google::protobuf::internal::kEmptyString) {
    loginavata_ = new ::std::string;
  }
  return loginavata_;
}
inline ::std::string* roleborn::release_loginavata() {
  clear_has_loginavata();
  if (loginavata_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = loginavata_;
    loginavata_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void roleborn::set_allocated_loginavata(::std::string* loginavata) {
  if (loginavata_ != &::google::protobuf::internal::kEmptyString) {
    delete loginavata_;
  }
  if (loginavata) {
    set_has_loginavata();
    loginavata_ = loginavata;
  } else {
    clear_has_loginavata();
    loginavata_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string newweapon = 15;
inline bool roleborn::has_newweapon() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void roleborn::set_has_newweapon() {
  _has_bits_[0] |= 0x00004000u;
}
inline void roleborn::clear_has_newweapon() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void roleborn::clear_newweapon() {
  if (newweapon_ != &::google::protobuf::internal::kEmptyString) {
    newweapon_->clear();
  }
  clear_has_newweapon();
}
inline const ::std::string& roleborn::newweapon() const {
  return *newweapon_;
}
inline void roleborn::set_newweapon(const ::std::string& value) {
  set_has_newweapon();
  if (newweapon_ == &::google::protobuf::internal::kEmptyString) {
    newweapon_ = new ::std::string;
  }
  newweapon_->assign(value);
}
inline void roleborn::set_newweapon(const char* value) {
  set_has_newweapon();
  if (newweapon_ == &::google::protobuf::internal::kEmptyString) {
    newweapon_ = new ::std::string;
  }
  newweapon_->assign(value);
}
inline void roleborn::set_newweapon(const char* value, size_t size) {
  set_has_newweapon();
  if (newweapon_ == &::google::protobuf::internal::kEmptyString) {
    newweapon_ = new ::std::string;
  }
  newweapon_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* roleborn::mutable_newweapon() {
  set_has_newweapon();
  if (newweapon_ == &::google::protobuf::internal::kEmptyString) {
    newweapon_ = new ::std::string;
  }
  return newweapon_;
}
inline ::std::string* roleborn::release_newweapon() {
  clear_has_newweapon();
  if (newweapon_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = newweapon_;
    newweapon_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void roleborn::set_allocated_newweapon(::std::string* newweapon) {
  if (newweapon_ != &::google::protobuf::internal::kEmptyString) {
    delete newweapon_;
  }
  if (newweapon) {
    set_has_newweapon();
    newweapon_ = newweapon;
  } else {
    clear_has_newweapon();
    newweapon_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string newclothing = 16;
inline bool roleborn::has_newclothing() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void roleborn::set_has_newclothing() {
  _has_bits_[0] |= 0x00008000u;
}
inline void roleborn::clear_has_newclothing() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void roleborn::clear_newclothing() {
  if (newclothing_ != &::google::protobuf::internal::kEmptyString) {
    newclothing_->clear();
  }
  clear_has_newclothing();
}
inline const ::std::string& roleborn::newclothing() const {
  return *newclothing_;
}
inline void roleborn::set_newclothing(const ::std::string& value) {
  set_has_newclothing();
  if (newclothing_ == &::google::protobuf::internal::kEmptyString) {
    newclothing_ = new ::std::string;
  }
  newclothing_->assign(value);
}
inline void roleborn::set_newclothing(const char* value) {
  set_has_newclothing();
  if (newclothing_ == &::google::protobuf::internal::kEmptyString) {
    newclothing_ = new ::std::string;
  }
  newclothing_->assign(value);
}
inline void roleborn::set_newclothing(const char* value, size_t size) {
  set_has_newclothing();
  if (newclothing_ == &::google::protobuf::internal::kEmptyString) {
    newclothing_ = new ::std::string;
  }
  newclothing_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* roleborn::mutable_newclothing() {
  set_has_newclothing();
  if (newclothing_ == &::google::protobuf::internal::kEmptyString) {
    newclothing_ = new ::std::string;
  }
  return newclothing_;
}
inline ::std::string* roleborn::release_newclothing() {
  clear_has_newclothing();
  if (newclothing_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = newclothing_;
    newclothing_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void roleborn::set_allocated_newclothing(::std::string* newclothing) {
  if (newclothing_ != &::google::protobuf::internal::kEmptyString) {
    delete newclothing_;
  }
  if (newclothing) {
    set_has_newclothing();
    newclothing_ = newclothing;
  } else {
    clear_has_newclothing();
    newclothing_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string weaponAvata = 17;
inline bool roleborn::has_weaponavata() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void roleborn::set_has_weaponavata() {
  _has_bits_[0] |= 0x00010000u;
}
inline void roleborn::clear_has_weaponavata() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void roleborn::clear_weaponavata() {
  if (weaponavata_ != &::google::protobuf::internal::kEmptyString) {
    weaponavata_->clear();
  }
  clear_has_weaponavata();
}
inline const ::std::string& roleborn::weaponavata() const {
  return *weaponavata_;
}
inline void roleborn::set_weaponavata(const ::std::string& value) {
  set_has_weaponavata();
  if (weaponavata_ == &::google::protobuf::internal::kEmptyString) {
    weaponavata_ = new ::std::string;
  }
  weaponavata_->assign(value);
}
inline void roleborn::set_weaponavata(const char* value) {
  set_has_weaponavata();
  if (weaponavata_ == &::google::protobuf::internal::kEmptyString) {
    weaponavata_ = new ::std::string;
  }
  weaponavata_->assign(value);
}
inline void roleborn::set_weaponavata(const char* value, size_t size) {
  set_has_weaponavata();
  if (weaponavata_ == &::google::protobuf::internal::kEmptyString) {
    weaponavata_ = new ::std::string;
  }
  weaponavata_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* roleborn::mutable_weaponavata() {
  set_has_weaponavata();
  if (weaponavata_ == &::google::protobuf::internal::kEmptyString) {
    weaponavata_ = new ::std::string;
  }
  return weaponavata_;
}
inline ::std::string* roleborn::release_weaponavata() {
  clear_has_weaponavata();
  if (weaponavata_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = weaponavata_;
    weaponavata_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void roleborn::set_allocated_weaponavata(::std::string* weaponavata) {
  if (weaponavata_ != &::google::protobuf::internal::kEmptyString) {
    delete weaponavata_;
  }
  if (weaponavata) {
    set_has_weaponavata();
    weaponavata_ = weaponavata;
  } else {
    clear_has_weaponavata();
    weaponavata_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string roleAvata = 18;
inline bool roleborn::has_roleavata() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void roleborn::set_has_roleavata() {
  _has_bits_[0] |= 0x00020000u;
}
inline void roleborn::clear_has_roleavata() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void roleborn::clear_roleavata() {
  if (roleavata_ != &::google::protobuf::internal::kEmptyString) {
    roleavata_->clear();
  }
  clear_has_roleavata();
}
inline const ::std::string& roleborn::roleavata() const {
  return *roleavata_;
}
inline void roleborn::set_roleavata(const ::std::string& value) {
  set_has_roleavata();
  if (roleavata_ == &::google::protobuf::internal::kEmptyString) {
    roleavata_ = new ::std::string;
  }
  roleavata_->assign(value);
}
inline void roleborn::set_roleavata(const char* value) {
  set_has_roleavata();
  if (roleavata_ == &::google::protobuf::internal::kEmptyString) {
    roleavata_ = new ::std::string;
  }
  roleavata_->assign(value);
}
inline void roleborn::set_roleavata(const char* value, size_t size) {
  set_has_roleavata();
  if (roleavata_ == &::google::protobuf::internal::kEmptyString) {
    roleavata_ = new ::std::string;
  }
  roleavata_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* roleborn::mutable_roleavata() {
  set_has_roleavata();
  if (roleavata_ == &::google::protobuf::internal::kEmptyString) {
    roleavata_ = new ::std::string;
  }
  return roleavata_;
}
inline ::std::string* roleborn::release_roleavata() {
  clear_has_roleavata();
  if (roleavata_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = roleavata_;
    roleavata_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void roleborn::set_allocated_roleavata(::std::string* roleavata) {
  if (roleavata_ != &::google::protobuf::internal::kEmptyString) {
    delete roleavata_;
  }
  if (roleavata) {
    set_has_roleavata();
    roleavata_ = roleavata;
  } else {
    clear_has_roleavata();
    roleavata_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 hairColor = 19;
inline bool roleborn::has_haircolor() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void roleborn::set_has_haircolor() {
  _has_bits_[0] |= 0x00040000u;
}
inline void roleborn::clear_has_haircolor() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void roleborn::clear_haircolor() {
  haircolor_ = 0;
  clear_has_haircolor();
}
inline ::google::protobuf::int32 roleborn::haircolor() const {
  return haircolor_;
}
inline void roleborn::set_haircolor(::google::protobuf::int32 value) {
  set_has_haircolor();
  haircolor_ = value;
}

// optional int32 clothesColor = 20;
inline bool roleborn::has_clothescolor() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void roleborn::set_has_clothescolor() {
  _has_bits_[0] |= 0x00080000u;
}
inline void roleborn::clear_has_clothescolor() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void roleborn::clear_clothescolor() {
  clothescolor_ = 0;
  clear_has_clothescolor();
}
inline ::google::protobuf::int32 roleborn::clothescolor() const {
  return clothescolor_;
}
inline void roleborn::set_clothescolor(::google::protobuf::int32 value) {
  set_has_clothescolor();
  clothescolor_ = value;
}

// optional int32 skinColor = 21;
inline bool roleborn::has_skincolor() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void roleborn::set_has_skincolor() {
  _has_bits_[0] |= 0x00100000u;
}
inline void roleborn::clear_has_skincolor() {
  _has_bits_[0] &= ~0x00100000u;
}
inline void roleborn::clear_skincolor() {
  skincolor_ = 0;
  clear_has_skincolor();
}
inline ::google::protobuf::int32 roleborn::skincolor() const {
  return skincolor_;
}
inline void roleborn::set_skincolor(::google::protobuf::int32 value) {
  set_has_skincolor();
  skincolor_ = value;
}

// optional int64 carryWeapons = 22;
inline bool roleborn::has_carryweapons() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
inline void roleborn::set_has_carryweapons() {
  _has_bits_[0] |= 0x00200000u;
}
inline void roleborn::clear_has_carryweapons() {
  _has_bits_[0] &= ~0x00200000u;
}
inline void roleborn::clear_carryweapons() {
  carryweapons_ = GOOGLE_LONGLONG(0);
  clear_has_carryweapons();
}
inline ::google::protobuf::int64 roleborn::carryweapons() const {
  return carryweapons_;
}
inline void roleborn::set_carryweapons(::google::protobuf::int64 value) {
  set_has_carryweapons();
  carryweapons_ = value;
}

// optional int64 carryArmor = 23;
inline bool roleborn::has_carryarmor() const {
  return (_has_bits_[0] & 0x00400000u) != 0;
}
inline void roleborn::set_has_carryarmor() {
  _has_bits_[0] |= 0x00400000u;
}
inline void roleborn::clear_has_carryarmor() {
  _has_bits_[0] &= ~0x00400000u;
}
inline void roleborn::clear_carryarmor() {
  carryarmor_ = GOOGLE_LONGLONG(0);
  clear_has_carryarmor();
}
inline ::google::protobuf::int64 roleborn::carryarmor() const {
  return carryarmor_;
}
inline void roleborn::set_carryarmor(::google::protobuf::int64 value) {
  set_has_carryarmor();
  carryarmor_ = value;
}

// optional int64 carryCloak = 24;
inline bool roleborn::has_carrycloak() const {
  return (_has_bits_[0] & 0x00800000u) != 0;
}
inline void roleborn::set_has_carrycloak() {
  _has_bits_[0] |= 0x00800000u;
}
inline void roleborn::clear_has_carrycloak() {
  _has_bits_[0] &= ~0x00800000u;
}
inline void roleborn::clear_carrycloak() {
  carrycloak_ = GOOGLE_LONGLONG(0);
  clear_has_carrycloak();
}
inline ::google::protobuf::int64 roleborn::carrycloak() const {
  return carrycloak_;
}
inline void roleborn::set_carrycloak(::google::protobuf::int64 value) {
  set_has_carrycloak();
  carrycloak_ = value;
}

// optional int64 carryShoes = 25;
inline bool roleborn::has_carryshoes() const {
  return (_has_bits_[0] & 0x01000000u) != 0;
}
inline void roleborn::set_has_carryshoes() {
  _has_bits_[0] |= 0x01000000u;
}
inline void roleborn::clear_has_carryshoes() {
  _has_bits_[0] &= ~0x01000000u;
}
inline void roleborn::clear_carryshoes() {
  carryshoes_ = GOOGLE_LONGLONG(0);
  clear_has_carryshoes();
}
inline ::google::protobuf::int64 roleborn::carryshoes() const {
  return carryshoes_;
}
inline void roleborn::set_carryshoes(::google::protobuf::int64 value) {
  set_has_carryshoes();
  carryshoes_ = value;
}

// optional int64 carryNecklace = 26;
inline bool roleborn::has_carrynecklace() const {
  return (_has_bits_[0] & 0x02000000u) != 0;
}
inline void roleborn::set_has_carrynecklace() {
  _has_bits_[0] |= 0x02000000u;
}
inline void roleborn::clear_has_carrynecklace() {
  _has_bits_[0] &= ~0x02000000u;
}
inline void roleborn::clear_carrynecklace() {
  carrynecklace_ = GOOGLE_LONGLONG(0);
  clear_has_carrynecklace();
}
inline ::google::protobuf::int64 roleborn::carrynecklace() const {
  return carrynecklace_;
}
inline void roleborn::set_carrynecklace(::google::protobuf::int64 value) {
  set_has_carrynecklace();
  carrynecklace_ = value;
}

// optional int64 carryAmulet = 27;
inline bool roleborn::has_carryamulet() const {
  return (_has_bits_[0] & 0x04000000u) != 0;
}
inline void roleborn::set_has_carryamulet() {
  _has_bits_[0] |= 0x04000000u;
}
inline void roleborn::clear_has_carryamulet() {
  _has_bits_[0] &= ~0x04000000u;
}
inline void roleborn::clear_carryamulet() {
  carryamulet_ = GOOGLE_LONGLONG(0);
  clear_has_carryamulet();
}
inline ::google::protobuf::int64 roleborn::carryamulet() const {
  return carryamulet_;
}
inline void roleborn::set_carryamulet(::google::protobuf::int64 value) {
  set_has_carryamulet();
  carryamulet_ = value;
}

// optional int64 carryBracer = 28;
inline bool roleborn::has_carrybracer() const {
  return (_has_bits_[0] & 0x08000000u) != 0;
}
inline void roleborn::set_has_carrybracer() {
  _has_bits_[0] |= 0x08000000u;
}
inline void roleborn::clear_has_carrybracer() {
  _has_bits_[0] &= ~0x08000000u;
}
inline void roleborn::clear_carrybracer() {
  carrybracer_ = GOOGLE_LONGLONG(0);
  clear_has_carrybracer();
}
inline ::google::protobuf::int64 roleborn::carrybracer() const {
  return carrybracer_;
}
inline void roleborn::set_carrybracer(::google::protobuf::int64 value) {
  set_has_carrybracer();
  carrybracer_ = value;
}

// optional int64 carryRing = 29;
inline bool roleborn::has_carryring() const {
  return (_has_bits_[0] & 0x10000000u) != 0;
}
inline void roleborn::set_has_carryring() {
  _has_bits_[0] |= 0x10000000u;
}
inline void roleborn::clear_has_carryring() {
  _has_bits_[0] &= ~0x10000000u;
}
inline void roleborn::clear_carryring() {
  carryring_ = GOOGLE_LONGLONG(0);
  clear_has_carryring();
}
inline ::google::protobuf::int64 roleborn::carryring() const {
  return carryring_;
}
inline void roleborn::set_carryring(::google::protobuf::int64 value) {
  set_has_carryring();
  carryring_ = value;
}

// optional int64 carryFashionWeapons = 30;
inline bool roleborn::has_carryfashionweapons() const {
  return (_has_bits_[0] & 0x20000000u) != 0;
}
inline void roleborn::set_has_carryfashionweapons() {
  _has_bits_[0] |= 0x20000000u;
}
inline void roleborn::clear_has_carryfashionweapons() {
  _has_bits_[0] &= ~0x20000000u;
}
inline void roleborn::clear_carryfashionweapons() {
  carryfashionweapons_ = GOOGLE_LONGLONG(0);
  clear_has_carryfashionweapons();
}
inline ::google::protobuf::int64 roleborn::carryfashionweapons() const {
  return carryfashionweapons_;
}
inline void roleborn::set_carryfashionweapons(::google::protobuf::int64 value) {
  set_has_carryfashionweapons();
  carryfashionweapons_ = value;
}

// optional int64 carryFashionArmor = 31;
inline bool roleborn::has_carryfashionarmor() const {
  return (_has_bits_[0] & 0x40000000u) != 0;
}
inline void roleborn::set_has_carryfashionarmor() {
  _has_bits_[0] |= 0x40000000u;
}
inline void roleborn::clear_has_carryfashionarmor() {
  _has_bits_[0] &= ~0x40000000u;
}
inline void roleborn::clear_carryfashionarmor() {
  carryfashionarmor_ = GOOGLE_LONGLONG(0);
  clear_has_carryfashionarmor();
}
inline ::google::protobuf::int64 roleborn::carryfashionarmor() const {
  return carryfashionarmor_;
}
inline void roleborn::set_carryfashionarmor(::google::protobuf::int64 value) {
  set_has_carryfashionarmor();
  carryfashionarmor_ = value;
}

// optional int64 carryWings = 32;
inline bool roleborn::has_carrywings() const {
  return (_has_bits_[0] & 0x80000000u) != 0;
}
inline void roleborn::set_has_carrywings() {
  _has_bits_[0] |= 0x80000000u;
}
inline void roleborn::clear_has_carrywings() {
  _has_bits_[0] &= ~0x80000000u;
}
inline void roleborn::clear_carrywings() {
  carrywings_ = GOOGLE_LONGLONG(0);
  clear_has_carrywings();
}
inline ::google::protobuf::int64 roleborn::carrywings() const {
  return carrywings_;
}
inline void roleborn::set_carrywings(::google::protobuf::int64 value) {
  set_has_carrywings();
  carrywings_ = value;
}

// optional int32 mSpeed = 33;
inline bool roleborn::has_mspeed() const {
  return (_has_bits_[1] & 0x00000001u) != 0;
}
inline void roleborn::set_has_mspeed() {
  _has_bits_[1] |= 0x00000001u;
}
inline void roleborn::clear_has_mspeed() {
  _has_bits_[1] &= ~0x00000001u;
}
inline void roleborn::clear_mspeed() {
  mspeed_ = 0;
  clear_has_mspeed();
}
inline ::google::protobuf::int32 roleborn::mspeed() const {
  return mspeed_;
}
inline void roleborn::set_mspeed(::google::protobuf::int32 value) {
  set_has_mspeed();
  mspeed_ = value;
}

// optional int32 view = 34;
inline bool roleborn::has_view() const {
  return (_has_bits_[1] & 0x00000002u) != 0;
}
inline void roleborn::set_has_view() {
  _has_bits_[1] |= 0x00000002u;
}
inline void roleborn::clear_has_view() {
  _has_bits_[1] &= ~0x00000002u;
}
inline void roleborn::clear_view() {
  view_ = 0;
  clear_has_view();
}
inline ::google::protobuf::int32 roleborn::view() const {
  return view_;
}
inline void roleborn::set_view(::google::protobuf::int32 value) {
  set_has_view();
  view_ = value;
}

// optional int32 radius = 35;
inline bool roleborn::has_radius() const {
  return (_has_bits_[1] & 0x00000004u) != 0;
}
inline void roleborn::set_has_radius() {
  _has_bits_[1] |= 0x00000004u;
}
inline void roleborn::clear_has_radius() {
  _has_bits_[1] &= ~0x00000004u;
}
inline void roleborn::clear_radius() {
  radius_ = 0;
  clear_has_radius();
}
inline ::google::protobuf::int32 roleborn::radius() const {
  return radius_;
}
inline void roleborn::set_radius(::google::protobuf::int32 value) {
  set_has_radius();
  radius_ = value;
}

// optional int32 group = 36;
inline bool roleborn::has_group() const {
  return (_has_bits_[1] & 0x00000008u) != 0;
}
inline void roleborn::set_has_group() {
  _has_bits_[1] |= 0x00000008u;
}
inline void roleborn::clear_has_group() {
  _has_bits_[1] &= ~0x00000008u;
}
inline void roleborn::clear_group() {
  group_ = 0;
  clear_has_group();
}
inline ::google::protobuf::int32 roleborn::group() const {
  return group_;
}
inline void roleborn::set_group(::google::protobuf::int32 value) {
  set_has_group();
  group_ = value;
}

// optional int64 sheny = 37;
inline bool roleborn::has_sheny() const {
  return (_has_bits_[1] & 0x00000010u) != 0;
}
inline void roleborn::set_has_sheny() {
  _has_bits_[1] |= 0x00000010u;
}
inline void roleborn::clear_has_sheny() {
  _has_bits_[1] &= ~0x00000010u;
}
inline void roleborn::clear_sheny() {
  sheny_ = GOOGLE_LONGLONG(0);
  clear_has_sheny();
}
inline ::google::protobuf::int64 roleborn::sheny() const {
  return sheny_;
}
inline void roleborn::set_sheny(::google::protobuf::int64 value) {
  set_has_sheny();
  sheny_ = value;
}

// optional int64 shenw = 38;
inline bool roleborn::has_shenw() const {
  return (_has_bits_[1] & 0x00000020u) != 0;
}
inline void roleborn::set_has_shenw() {
  _has_bits_[1] |= 0x00000020u;
}
inline void roleborn::clear_has_shenw() {
  _has_bits_[1] &= ~0x00000020u;
}
inline void roleborn::clear_shenw() {
  shenw_ = GOOGLE_LONGLONG(0);
  clear_has_shenw();
}
inline ::google::protobuf::int64 roleborn::shenw() const {
  return shenw_;
}
inline void roleborn::set_shenw(::google::protobuf::int64 value) {
  set_has_shenw();
  shenw_ = value;
}

// repeated int32 actBuff = 39;
inline int roleborn::actbuff_size() const {
  return actbuff_.size();
}
inline void roleborn::clear_actbuff() {
  actbuff_.Clear();
}
inline ::google::protobuf::int32 roleborn::actbuff(int index) const {
  return actbuff_.Get(index);
}
inline void roleborn::set_actbuff(int index, ::google::protobuf::int32 value) {
  actbuff_.Set(index, value);
}
inline void roleborn::add_actbuff(::google::protobuf::int32 value) {
  actbuff_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
roleborn::actbuff() const {
  return actbuff_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
roleborn::mutable_actbuff() {
  return &actbuff_;
}

// repeated .proto_ff.rolebornitemDesc item = 40;
inline int roleborn::item_size() const {
  return item_.size();
}
inline void roleborn::clear_item() {
  item_.Clear();
}
inline const ::proto_ff::rolebornitemDesc& roleborn::item(int index) const {
  return item_.Get(index);
}
inline ::proto_ff::rolebornitemDesc* roleborn::mutable_item(int index) {
  return item_.Mutable(index);
}
inline ::proto_ff::rolebornitemDesc* roleborn::add_item() {
  return item_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::rolebornitemDesc >&
roleborn::item() const {
  return item_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::rolebornitemDesc >*
roleborn::mutable_item() {
  return &item_;
}

// repeated int64 actSkill = 41;
inline int roleborn::actskill_size() const {
  return actskill_.size();
}
inline void roleborn::clear_actskill() {
  actskill_.Clear();
}
inline ::google::protobuf::int64 roleborn::actskill(int index) const {
  return actskill_.Get(index);
}
inline void roleborn::set_actskill(int index, ::google::protobuf::int64 value) {
  actskill_.Set(index, value);
}
inline void roleborn::add_actskill(::google::protobuf::int64 value) {
  actskill_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
roleborn::actskill() const {
  return actskill_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
roleborn::mutable_actskill() {
  return &actskill_;
}

// repeated .proto_ff.rolebornmailDesc mail = 42;
inline int roleborn::mail_size() const {
  return mail_.size();
}
inline void roleborn::clear_mail() {
  mail_.Clear();
}
inline const ::proto_ff::rolebornmailDesc& roleborn::mail(int index) const {
  return mail_.Get(index);
}
inline ::proto_ff::rolebornmailDesc* roleborn::mutable_mail(int index) {
  return mail_.Mutable(index);
}
inline ::proto_ff::rolebornmailDesc* roleborn::add_mail() {
  return mail_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::rolebornmailDesc >&
roleborn::mail() const {
  return mail_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::rolebornmailDesc >*
roleborn::mutable_mail() {
  return &mail_;
}

// -------------------------------------------------------------------

// Sheet_roleborn

// repeated .proto_ff.roleborn roleborn_List = 1;
inline int Sheet_roleborn::roleborn_list_size() const {
  return roleborn_list_.size();
}
inline void Sheet_roleborn::clear_roleborn_list() {
  roleborn_list_.Clear();
}
inline const ::proto_ff::roleborn& Sheet_roleborn::roleborn_list(int index) const {
  return roleborn_list_.Get(index);
}
inline ::proto_ff::roleborn* Sheet_roleborn::mutable_roleborn_list(int index) {
  return roleborn_list_.Mutable(index);
}
inline ::proto_ff::roleborn* Sheet_roleborn::add_roleborn_list() {
  return roleborn_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::roleborn >&
Sheet_roleborn::roleborn_list() const {
  return roleborn_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::roleborn >*
Sheet_roleborn::mutable_roleborn_list() {
  return &roleborn_list_;
}

// -------------------------------------------------------------------

// rolemasterMaleattributeDesc

// optional int32 Type = 1;
inline bool rolemasterMaleattributeDesc::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void rolemasterMaleattributeDesc::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void rolemasterMaleattributeDesc::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void rolemasterMaleattributeDesc::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 rolemasterMaleattributeDesc::type() const {
  return type_;
}
inline void rolemasterMaleattributeDesc::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// optional int32 Value = 2;
inline bool rolemasterMaleattributeDesc::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void rolemasterMaleattributeDesc::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void rolemasterMaleattributeDesc::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void rolemasterMaleattributeDesc::clear_value() {
  value_ = 0;
  clear_has_value();
}
inline ::google::protobuf::int32 rolemasterMaleattributeDesc::value() const {
  return value_;
}
inline void rolemasterMaleattributeDesc::set_value(::google::protobuf::int32 value) {
  set_has_value();
  value_ = value;
}

// -------------------------------------------------------------------

// rolemasterMale

// optional int32 lv = 1;
inline bool rolemasterMale::has_lv() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void rolemasterMale::set_has_lv() {
  _has_bits_[0] |= 0x00000001u;
}
inline void rolemasterMale::clear_has_lv() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void rolemasterMale::clear_lv() {
  lv_ = 0;
  clear_has_lv();
}
inline ::google::protobuf::int32 rolemasterMale::lv() const {
  return lv_;
}
inline void rolemasterMale::set_lv(::google::protobuf::int32 value) {
  set_has_lv();
  lv_ = value;
}

// optional int32 upgradePoint = 2;
inline bool rolemasterMale::has_upgradepoint() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void rolemasterMale::set_has_upgradepoint() {
  _has_bits_[0] |= 0x00000002u;
}
inline void rolemasterMale::clear_has_upgradepoint() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void rolemasterMale::clear_upgradepoint() {
  upgradepoint_ = 0;
  clear_has_upgradepoint();
}
inline ::google::protobuf::int32 rolemasterMale::upgradepoint() const {
  return upgradepoint_;
}
inline void rolemasterMale::set_upgradepoint(::google::protobuf::int32 value) {
  set_has_upgradepoint();
  upgradepoint_ = value;
}

// repeated .proto_ff.rolemasterMaleattributeDesc attribute = 3;
inline int rolemasterMale::attribute_size() const {
  return attribute_.size();
}
inline void rolemasterMale::clear_attribute() {
  attribute_.Clear();
}
inline const ::proto_ff::rolemasterMaleattributeDesc& rolemasterMale::attribute(int index) const {
  return attribute_.Get(index);
}
inline ::proto_ff::rolemasterMaleattributeDesc* rolemasterMale::mutable_attribute(int index) {
  return attribute_.Mutable(index);
}
inline ::proto_ff::rolemasterMaleattributeDesc* rolemasterMale::add_attribute() {
  return attribute_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::rolemasterMaleattributeDesc >&
rolemasterMale::attribute() const {
  return attribute_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::rolemasterMaleattributeDesc >*
rolemasterMale::mutable_attribute() {
  return &attribute_;
}

// -------------------------------------------------------------------

// Sheet_rolemasterMale

// repeated .proto_ff.rolemasterMale rolemasterMale_List = 1;
inline int Sheet_rolemasterMale::rolemastermale_list_size() const {
  return rolemastermale_list_.size();
}
inline void Sheet_rolemasterMale::clear_rolemastermale_list() {
  rolemastermale_list_.Clear();
}
inline const ::proto_ff::rolemasterMale& Sheet_rolemasterMale::rolemastermale_list(int index) const {
  return rolemastermale_list_.Get(index);
}
inline ::proto_ff::rolemasterMale* Sheet_rolemasterMale::mutable_rolemastermale_list(int index) {
  return rolemastermale_list_.Mutable(index);
}
inline ::proto_ff::rolemasterMale* Sheet_rolemasterMale::add_rolemastermale_list() {
  return rolemastermale_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::rolemasterMale >&
Sheet_rolemasterMale::rolemastermale_list() const {
  return rolemastermale_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::rolemasterMale >*
Sheet_rolemasterMale::mutable_rolemastermale_list() {
  return &rolemastermale_list_;
}

// -------------------------------------------------------------------

// rolemasterFemaleattributeDesc

// optional int32 Type = 1;
inline bool rolemasterFemaleattributeDesc::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void rolemasterFemaleattributeDesc::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void rolemasterFemaleattributeDesc::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void rolemasterFemaleattributeDesc::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 rolemasterFemaleattributeDesc::type() const {
  return type_;
}
inline void rolemasterFemaleattributeDesc::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// optional int32 Value = 2;
inline bool rolemasterFemaleattributeDesc::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void rolemasterFemaleattributeDesc::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void rolemasterFemaleattributeDesc::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void rolemasterFemaleattributeDesc::clear_value() {
  value_ = 0;
  clear_has_value();
}
inline ::google::protobuf::int32 rolemasterFemaleattributeDesc::value() const {
  return value_;
}
inline void rolemasterFemaleattributeDesc::set_value(::google::protobuf::int32 value) {
  set_has_value();
  value_ = value;
}

// -------------------------------------------------------------------

// rolemasterFemale

// optional int32 lv = 1;
inline bool rolemasterFemale::has_lv() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void rolemasterFemale::set_has_lv() {
  _has_bits_[0] |= 0x00000001u;
}
inline void rolemasterFemale::clear_has_lv() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void rolemasterFemale::clear_lv() {
  lv_ = 0;
  clear_has_lv();
}
inline ::google::protobuf::int32 rolemasterFemale::lv() const {
  return lv_;
}
inline void rolemasterFemale::set_lv(::google::protobuf::int32 value) {
  set_has_lv();
  lv_ = value;
}

// optional int32 upgradePoint = 2;
inline bool rolemasterFemale::has_upgradepoint() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void rolemasterFemale::set_has_upgradepoint() {
  _has_bits_[0] |= 0x00000002u;
}
inline void rolemasterFemale::clear_has_upgradepoint() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void rolemasterFemale::clear_upgradepoint() {
  upgradepoint_ = 0;
  clear_has_upgradepoint();
}
inline ::google::protobuf::int32 rolemasterFemale::upgradepoint() const {
  return upgradepoint_;
}
inline void rolemasterFemale::set_upgradepoint(::google::protobuf::int32 value) {
  set_has_upgradepoint();
  upgradepoint_ = value;
}

// repeated .proto_ff.rolemasterFemaleattributeDesc attribute = 3;
inline int rolemasterFemale::attribute_size() const {
  return attribute_.size();
}
inline void rolemasterFemale::clear_attribute() {
  attribute_.Clear();
}
inline const ::proto_ff::rolemasterFemaleattributeDesc& rolemasterFemale::attribute(int index) const {
  return attribute_.Get(index);
}
inline ::proto_ff::rolemasterFemaleattributeDesc* rolemasterFemale::mutable_attribute(int index) {
  return attribute_.Mutable(index);
}
inline ::proto_ff::rolemasterFemaleattributeDesc* rolemasterFemale::add_attribute() {
  return attribute_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::rolemasterFemaleattributeDesc >&
rolemasterFemale::attribute() const {
  return attribute_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::rolemasterFemaleattributeDesc >*
rolemasterFemale::mutable_attribute() {
  return &attribute_;
}

// -------------------------------------------------------------------

// Sheet_rolemasterFemale

// repeated .proto_ff.rolemasterFemale rolemasterFemale_List = 1;
inline int Sheet_rolemasterFemale::rolemasterfemale_list_size() const {
  return rolemasterfemale_list_.size();
}
inline void Sheet_rolemasterFemale::clear_rolemasterfemale_list() {
  rolemasterfemale_list_.Clear();
}
inline const ::proto_ff::rolemasterFemale& Sheet_rolemasterFemale::rolemasterfemale_list(int index) const {
  return rolemasterfemale_list_.Get(index);
}
inline ::proto_ff::rolemasterFemale* Sheet_rolemasterFemale::mutable_rolemasterfemale_list(int index) {
  return rolemasterfemale_list_.Mutable(index);
}
inline ::proto_ff::rolemasterFemale* Sheet_rolemasterFemale::add_rolemasterfemale_list() {
  return rolemasterfemale_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::rolemasterFemale >&
Sheet_rolemasterFemale::rolemasterfemale_list() const {
  return rolemasterfemale_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::rolemasterFemale >*
Sheet_rolemasterFemale::mutable_rolemasterfemale_list() {
  return &rolemasterfemale_list_;
}

// -------------------------------------------------------------------

// rolesickleMaleattributeDesc

// optional int32 Type = 1;
inline bool rolesickleMaleattributeDesc::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void rolesickleMaleattributeDesc::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void rolesickleMaleattributeDesc::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void rolesickleMaleattributeDesc::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 rolesickleMaleattributeDesc::type() const {
  return type_;
}
inline void rolesickleMaleattributeDesc::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// optional int32 Value = 2;
inline bool rolesickleMaleattributeDesc::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void rolesickleMaleattributeDesc::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void rolesickleMaleattributeDesc::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void rolesickleMaleattributeDesc::clear_value() {
  value_ = 0;
  clear_has_value();
}
inline ::google::protobuf::int32 rolesickleMaleattributeDesc::value() const {
  return value_;
}
inline void rolesickleMaleattributeDesc::set_value(::google::protobuf::int32 value) {
  set_has_value();
  value_ = value;
}

// -------------------------------------------------------------------

// rolesickleMale

// optional int32 lv = 1;
inline bool rolesickleMale::has_lv() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void rolesickleMale::set_has_lv() {
  _has_bits_[0] |= 0x00000001u;
}
inline void rolesickleMale::clear_has_lv() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void rolesickleMale::clear_lv() {
  lv_ = 0;
  clear_has_lv();
}
inline ::google::protobuf::int32 rolesickleMale::lv() const {
  return lv_;
}
inline void rolesickleMale::set_lv(::google::protobuf::int32 value) {
  set_has_lv();
  lv_ = value;
}

// optional int32 upgradePoint = 2;
inline bool rolesickleMale::has_upgradepoint() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void rolesickleMale::set_has_upgradepoint() {
  _has_bits_[0] |= 0x00000002u;
}
inline void rolesickleMale::clear_has_upgradepoint() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void rolesickleMale::clear_upgradepoint() {
  upgradepoint_ = 0;
  clear_has_upgradepoint();
}
inline ::google::protobuf::int32 rolesickleMale::upgradepoint() const {
  return upgradepoint_;
}
inline void rolesickleMale::set_upgradepoint(::google::protobuf::int32 value) {
  set_has_upgradepoint();
  upgradepoint_ = value;
}

// repeated .proto_ff.rolesickleMaleattributeDesc attribute = 3;
inline int rolesickleMale::attribute_size() const {
  return attribute_.size();
}
inline void rolesickleMale::clear_attribute() {
  attribute_.Clear();
}
inline const ::proto_ff::rolesickleMaleattributeDesc& rolesickleMale::attribute(int index) const {
  return attribute_.Get(index);
}
inline ::proto_ff::rolesickleMaleattributeDesc* rolesickleMale::mutable_attribute(int index) {
  return attribute_.Mutable(index);
}
inline ::proto_ff::rolesickleMaleattributeDesc* rolesickleMale::add_attribute() {
  return attribute_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::rolesickleMaleattributeDesc >&
rolesickleMale::attribute() const {
  return attribute_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::rolesickleMaleattributeDesc >*
rolesickleMale::mutable_attribute() {
  return &attribute_;
}

// -------------------------------------------------------------------

// Sheet_rolesickleMale

// repeated .proto_ff.rolesickleMale rolesickleMale_List = 1;
inline int Sheet_rolesickleMale::rolesicklemale_list_size() const {
  return rolesicklemale_list_.size();
}
inline void Sheet_rolesickleMale::clear_rolesicklemale_list() {
  rolesicklemale_list_.Clear();
}
inline const ::proto_ff::rolesickleMale& Sheet_rolesickleMale::rolesicklemale_list(int index) const {
  return rolesicklemale_list_.Get(index);
}
inline ::proto_ff::rolesickleMale* Sheet_rolesickleMale::mutable_rolesicklemale_list(int index) {
  return rolesicklemale_list_.Mutable(index);
}
inline ::proto_ff::rolesickleMale* Sheet_rolesickleMale::add_rolesicklemale_list() {
  return rolesicklemale_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::rolesickleMale >&
Sheet_rolesickleMale::rolesicklemale_list() const {
  return rolesicklemale_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::rolesickleMale >*
Sheet_rolesickleMale::mutable_rolesicklemale_list() {
  return &rolesicklemale_list_;
}

// -------------------------------------------------------------------

// rolesickleFemaleattributeDesc

// optional int32 Type = 1;
inline bool rolesickleFemaleattributeDesc::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void rolesickleFemaleattributeDesc::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void rolesickleFemaleattributeDesc::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void rolesickleFemaleattributeDesc::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 rolesickleFemaleattributeDesc::type() const {
  return type_;
}
inline void rolesickleFemaleattributeDesc::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// optional int32 Value = 2;
inline bool rolesickleFemaleattributeDesc::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void rolesickleFemaleattributeDesc::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void rolesickleFemaleattributeDesc::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void rolesickleFemaleattributeDesc::clear_value() {
  value_ = 0;
  clear_has_value();
}
inline ::google::protobuf::int32 rolesickleFemaleattributeDesc::value() const {
  return value_;
}
inline void rolesickleFemaleattributeDesc::set_value(::google::protobuf::int32 value) {
  set_has_value();
  value_ = value;
}

// -------------------------------------------------------------------

// rolesickleFemale

// optional int32 lv = 1;
inline bool rolesickleFemale::has_lv() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void rolesickleFemale::set_has_lv() {
  _has_bits_[0] |= 0x00000001u;
}
inline void rolesickleFemale::clear_has_lv() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void rolesickleFemale::clear_lv() {
  lv_ = 0;
  clear_has_lv();
}
inline ::google::protobuf::int32 rolesickleFemale::lv() const {
  return lv_;
}
inline void rolesickleFemale::set_lv(::google::protobuf::int32 value) {
  set_has_lv();
  lv_ = value;
}

// optional int32 upgradePoint = 2;
inline bool rolesickleFemale::has_upgradepoint() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void rolesickleFemale::set_has_upgradepoint() {
  _has_bits_[0] |= 0x00000002u;
}
inline void rolesickleFemale::clear_has_upgradepoint() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void rolesickleFemale::clear_upgradepoint() {
  upgradepoint_ = 0;
  clear_has_upgradepoint();
}
inline ::google::protobuf::int32 rolesickleFemale::upgradepoint() const {
  return upgradepoint_;
}
inline void rolesickleFemale::set_upgradepoint(::google::protobuf::int32 value) {
  set_has_upgradepoint();
  upgradepoint_ = value;
}

// repeated .proto_ff.rolesickleFemaleattributeDesc attribute = 3;
inline int rolesickleFemale::attribute_size() const {
  return attribute_.size();
}
inline void rolesickleFemale::clear_attribute() {
  attribute_.Clear();
}
inline const ::proto_ff::rolesickleFemaleattributeDesc& rolesickleFemale::attribute(int index) const {
  return attribute_.Get(index);
}
inline ::proto_ff::rolesickleFemaleattributeDesc* rolesickleFemale::mutable_attribute(int index) {
  return attribute_.Mutable(index);
}
inline ::proto_ff::rolesickleFemaleattributeDesc* rolesickleFemale::add_attribute() {
  return attribute_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::rolesickleFemaleattributeDesc >&
rolesickleFemale::attribute() const {
  return attribute_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::rolesickleFemaleattributeDesc >*
rolesickleFemale::mutable_attribute() {
  return &attribute_;
}

// -------------------------------------------------------------------

// Sheet_rolesickleFemale

// repeated .proto_ff.rolesickleFemale rolesickleFemale_List = 1;
inline int Sheet_rolesickleFemale::rolesicklefemale_list_size() const {
  return rolesicklefemale_list_.size();
}
inline void Sheet_rolesickleFemale::clear_rolesicklefemale_list() {
  rolesicklefemale_list_.Clear();
}
inline const ::proto_ff::rolesickleFemale& Sheet_rolesickleFemale::rolesicklefemale_list(int index) const {
  return rolesicklefemale_list_.Get(index);
}
inline ::proto_ff::rolesickleFemale* Sheet_rolesickleFemale::mutable_rolesicklefemale_list(int index) {
  return rolesicklefemale_list_.Mutable(index);
}
inline ::proto_ff::rolesickleFemale* Sheet_rolesickleFemale::add_rolesicklefemale_list() {
  return rolesicklefemale_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::rolesickleFemale >&
Sheet_rolesickleFemale::rolesicklefemale_list() const {
  return rolesicklefemale_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::rolesickleFemale >*
Sheet_rolesickleFemale::mutable_rolesicklefemale_list() {
  return &rolesicklefemale_list_;
}

// -------------------------------------------------------------------

// roleswordMaleattributeDesc

// optional int32 Type = 1;
inline bool roleswordMaleattributeDesc::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void roleswordMaleattributeDesc::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void roleswordMaleattributeDesc::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void roleswordMaleattributeDesc::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 roleswordMaleattributeDesc::type() const {
  return type_;
}
inline void roleswordMaleattributeDesc::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// optional int32 Value = 2;
inline bool roleswordMaleattributeDesc::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void roleswordMaleattributeDesc::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void roleswordMaleattributeDesc::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void roleswordMaleattributeDesc::clear_value() {
  value_ = 0;
  clear_has_value();
}
inline ::google::protobuf::int32 roleswordMaleattributeDesc::value() const {
  return value_;
}
inline void roleswordMaleattributeDesc::set_value(::google::protobuf::int32 value) {
  set_has_value();
  value_ = value;
}

// -------------------------------------------------------------------

// roleswordMale

// optional int32 lv = 1;
inline bool roleswordMale::has_lv() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void roleswordMale::set_has_lv() {
  _has_bits_[0] |= 0x00000001u;
}
inline void roleswordMale::clear_has_lv() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void roleswordMale::clear_lv() {
  lv_ = 0;
  clear_has_lv();
}
inline ::google::protobuf::int32 roleswordMale::lv() const {
  return lv_;
}
inline void roleswordMale::set_lv(::google::protobuf::int32 value) {
  set_has_lv();
  lv_ = value;
}

// optional int32 upgradePoint = 2;
inline bool roleswordMale::has_upgradepoint() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void roleswordMale::set_has_upgradepoint() {
  _has_bits_[0] |= 0x00000002u;
}
inline void roleswordMale::clear_has_upgradepoint() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void roleswordMale::clear_upgradepoint() {
  upgradepoint_ = 0;
  clear_has_upgradepoint();
}
inline ::google::protobuf::int32 roleswordMale::upgradepoint() const {
  return upgradepoint_;
}
inline void roleswordMale::set_upgradepoint(::google::protobuf::int32 value) {
  set_has_upgradepoint();
  upgradepoint_ = value;
}

// repeated .proto_ff.roleswordMaleattributeDesc attribute = 3;
inline int roleswordMale::attribute_size() const {
  return attribute_.size();
}
inline void roleswordMale::clear_attribute() {
  attribute_.Clear();
}
inline const ::proto_ff::roleswordMaleattributeDesc& roleswordMale::attribute(int index) const {
  return attribute_.Get(index);
}
inline ::proto_ff::roleswordMaleattributeDesc* roleswordMale::mutable_attribute(int index) {
  return attribute_.Mutable(index);
}
inline ::proto_ff::roleswordMaleattributeDesc* roleswordMale::add_attribute() {
  return attribute_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::roleswordMaleattributeDesc >&
roleswordMale::attribute() const {
  return attribute_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::roleswordMaleattributeDesc >*
roleswordMale::mutable_attribute() {
  return &attribute_;
}

// -------------------------------------------------------------------

// Sheet_roleswordMale

// repeated .proto_ff.roleswordMale roleswordMale_List = 1;
inline int Sheet_roleswordMale::roleswordmale_list_size() const {
  return roleswordmale_list_.size();
}
inline void Sheet_roleswordMale::clear_roleswordmale_list() {
  roleswordmale_list_.Clear();
}
inline const ::proto_ff::roleswordMale& Sheet_roleswordMale::roleswordmale_list(int index) const {
  return roleswordmale_list_.Get(index);
}
inline ::proto_ff::roleswordMale* Sheet_roleswordMale::mutable_roleswordmale_list(int index) {
  return roleswordmale_list_.Mutable(index);
}
inline ::proto_ff::roleswordMale* Sheet_roleswordMale::add_roleswordmale_list() {
  return roleswordmale_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::roleswordMale >&
Sheet_roleswordMale::roleswordmale_list() const {
  return roleswordmale_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::roleswordMale >*
Sheet_roleswordMale::mutable_roleswordmale_list() {
  return &roleswordmale_list_;
}

// -------------------------------------------------------------------

// roleswordFemaleattributeDesc

// optional int32 Type = 1;
inline bool roleswordFemaleattributeDesc::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void roleswordFemaleattributeDesc::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void roleswordFemaleattributeDesc::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void roleswordFemaleattributeDesc::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 roleswordFemaleattributeDesc::type() const {
  return type_;
}
inline void roleswordFemaleattributeDesc::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// optional int32 Value = 2;
inline bool roleswordFemaleattributeDesc::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void roleswordFemaleattributeDesc::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void roleswordFemaleattributeDesc::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void roleswordFemaleattributeDesc::clear_value() {
  value_ = 0;
  clear_has_value();
}
inline ::google::protobuf::int32 roleswordFemaleattributeDesc::value() const {
  return value_;
}
inline void roleswordFemaleattributeDesc::set_value(::google::protobuf::int32 value) {
  set_has_value();
  value_ = value;
}

// -------------------------------------------------------------------

// roleswordFemale

// optional int32 lv = 1;
inline bool roleswordFemale::has_lv() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void roleswordFemale::set_has_lv() {
  _has_bits_[0] |= 0x00000001u;
}
inline void roleswordFemale::clear_has_lv() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void roleswordFemale::clear_lv() {
  lv_ = 0;
  clear_has_lv();
}
inline ::google::protobuf::int32 roleswordFemale::lv() const {
  return lv_;
}
inline void roleswordFemale::set_lv(::google::protobuf::int32 value) {
  set_has_lv();
  lv_ = value;
}

// optional int32 upgradePoint = 2;
inline bool roleswordFemale::has_upgradepoint() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void roleswordFemale::set_has_upgradepoint() {
  _has_bits_[0] |= 0x00000002u;
}
inline void roleswordFemale::clear_has_upgradepoint() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void roleswordFemale::clear_upgradepoint() {
  upgradepoint_ = 0;
  clear_has_upgradepoint();
}
inline ::google::protobuf::int32 roleswordFemale::upgradepoint() const {
  return upgradepoint_;
}
inline void roleswordFemale::set_upgradepoint(::google::protobuf::int32 value) {
  set_has_upgradepoint();
  upgradepoint_ = value;
}

// repeated .proto_ff.roleswordFemaleattributeDesc attribute = 3;
inline int roleswordFemale::attribute_size() const {
  return attribute_.size();
}
inline void roleswordFemale::clear_attribute() {
  attribute_.Clear();
}
inline const ::proto_ff::roleswordFemaleattributeDesc& roleswordFemale::attribute(int index) const {
  return attribute_.Get(index);
}
inline ::proto_ff::roleswordFemaleattributeDesc* roleswordFemale::mutable_attribute(int index) {
  return attribute_.Mutable(index);
}
inline ::proto_ff::roleswordFemaleattributeDesc* roleswordFemale::add_attribute() {
  return attribute_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::roleswordFemaleattributeDesc >&
roleswordFemale::attribute() const {
  return attribute_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::roleswordFemaleattributeDesc >*
roleswordFemale::mutable_attribute() {
  return &attribute_;
}

// -------------------------------------------------------------------

// Sheet_roleswordFemale

// repeated .proto_ff.roleswordFemale roleswordFemale_List = 1;
inline int Sheet_roleswordFemale::roleswordfemale_list_size() const {
  return roleswordfemale_list_.size();
}
inline void Sheet_roleswordFemale::clear_roleswordfemale_list() {
  roleswordfemale_list_.Clear();
}
inline const ::proto_ff::roleswordFemale& Sheet_roleswordFemale::roleswordfemale_list(int index) const {
  return roleswordfemale_list_.Get(index);
}
inline ::proto_ff::roleswordFemale* Sheet_roleswordFemale::mutable_roleswordfemale_list(int index) {
  return roleswordfemale_list_.Mutable(index);
}
inline ::proto_ff::roleswordFemale* Sheet_roleswordFemale::add_roleswordfemale_list() {
  return roleswordfemale_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::roleswordFemale >&
Sheet_roleswordFemale::roleswordfemale_list() const {
  return roleswordfemale_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::roleswordFemale >*
Sheet_roleswordFemale::mutable_roleswordfemale_list() {
  return &roleswordfemale_list_;
}

// -------------------------------------------------------------------

// roletaidaoMaleattributeDesc

// optional int32 Type = 1;
inline bool roletaidaoMaleattributeDesc::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void roletaidaoMaleattributeDesc::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void roletaidaoMaleattributeDesc::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void roletaidaoMaleattributeDesc::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 roletaidaoMaleattributeDesc::type() const {
  return type_;
}
inline void roletaidaoMaleattributeDesc::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// optional int32 Value = 2;
inline bool roletaidaoMaleattributeDesc::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void roletaidaoMaleattributeDesc::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void roletaidaoMaleattributeDesc::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void roletaidaoMaleattributeDesc::clear_value() {
  value_ = 0;
  clear_has_value();
}
inline ::google::protobuf::int32 roletaidaoMaleattributeDesc::value() const {
  return value_;
}
inline void roletaidaoMaleattributeDesc::set_value(::google::protobuf::int32 value) {
  set_has_value();
  value_ = value;
}

// -------------------------------------------------------------------

// roletaidaoMale

// optional int32 lv = 1;
inline bool roletaidaoMale::has_lv() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void roletaidaoMale::set_has_lv() {
  _has_bits_[0] |= 0x00000001u;
}
inline void roletaidaoMale::clear_has_lv() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void roletaidaoMale::clear_lv() {
  lv_ = 0;
  clear_has_lv();
}
inline ::google::protobuf::int32 roletaidaoMale::lv() const {
  return lv_;
}
inline void roletaidaoMale::set_lv(::google::protobuf::int32 value) {
  set_has_lv();
  lv_ = value;
}

// optional int32 upgradePoint = 2;
inline bool roletaidaoMale::has_upgradepoint() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void roletaidaoMale::set_has_upgradepoint() {
  _has_bits_[0] |= 0x00000002u;
}
inline void roletaidaoMale::clear_has_upgradepoint() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void roletaidaoMale::clear_upgradepoint() {
  upgradepoint_ = 0;
  clear_has_upgradepoint();
}
inline ::google::protobuf::int32 roletaidaoMale::upgradepoint() const {
  return upgradepoint_;
}
inline void roletaidaoMale::set_upgradepoint(::google::protobuf::int32 value) {
  set_has_upgradepoint();
  upgradepoint_ = value;
}

// repeated .proto_ff.roletaidaoMaleattributeDesc attribute = 3;
inline int roletaidaoMale::attribute_size() const {
  return attribute_.size();
}
inline void roletaidaoMale::clear_attribute() {
  attribute_.Clear();
}
inline const ::proto_ff::roletaidaoMaleattributeDesc& roletaidaoMale::attribute(int index) const {
  return attribute_.Get(index);
}
inline ::proto_ff::roletaidaoMaleattributeDesc* roletaidaoMale::mutable_attribute(int index) {
  return attribute_.Mutable(index);
}
inline ::proto_ff::roletaidaoMaleattributeDesc* roletaidaoMale::add_attribute() {
  return attribute_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::roletaidaoMaleattributeDesc >&
roletaidaoMale::attribute() const {
  return attribute_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::roletaidaoMaleattributeDesc >*
roletaidaoMale::mutable_attribute() {
  return &attribute_;
}

// -------------------------------------------------------------------

// Sheet_roletaidaoMale

// repeated .proto_ff.roletaidaoMale roletaidaoMale_List = 1;
inline int Sheet_roletaidaoMale::roletaidaomale_list_size() const {
  return roletaidaomale_list_.size();
}
inline void Sheet_roletaidaoMale::clear_roletaidaomale_list() {
  roletaidaomale_list_.Clear();
}
inline const ::proto_ff::roletaidaoMale& Sheet_roletaidaoMale::roletaidaomale_list(int index) const {
  return roletaidaomale_list_.Get(index);
}
inline ::proto_ff::roletaidaoMale* Sheet_roletaidaoMale::mutable_roletaidaomale_list(int index) {
  return roletaidaomale_list_.Mutable(index);
}
inline ::proto_ff::roletaidaoMale* Sheet_roletaidaoMale::add_roletaidaomale_list() {
  return roletaidaomale_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::roletaidaoMale >&
Sheet_roletaidaoMale::roletaidaomale_list() const {
  return roletaidaomale_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::roletaidaoMale >*
Sheet_roletaidaoMale::mutable_roletaidaomale_list() {
  return &roletaidaomale_list_;
}

// -------------------------------------------------------------------

// roletaidaoFemaleattributeDesc

// optional int32 Type = 1;
inline bool roletaidaoFemaleattributeDesc::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void roletaidaoFemaleattributeDesc::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void roletaidaoFemaleattributeDesc::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void roletaidaoFemaleattributeDesc::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 roletaidaoFemaleattributeDesc::type() const {
  return type_;
}
inline void roletaidaoFemaleattributeDesc::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// optional int32 Value = 2;
inline bool roletaidaoFemaleattributeDesc::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void roletaidaoFemaleattributeDesc::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void roletaidaoFemaleattributeDesc::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void roletaidaoFemaleattributeDesc::clear_value() {
  value_ = 0;
  clear_has_value();
}
inline ::google::protobuf::int32 roletaidaoFemaleattributeDesc::value() const {
  return value_;
}
inline void roletaidaoFemaleattributeDesc::set_value(::google::protobuf::int32 value) {
  set_has_value();
  value_ = value;
}

// -------------------------------------------------------------------

// roletaidaoFemale

// optional int32 lv = 1;
inline bool roletaidaoFemale::has_lv() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void roletaidaoFemale::set_has_lv() {
  _has_bits_[0] |= 0x00000001u;
}
inline void roletaidaoFemale::clear_has_lv() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void roletaidaoFemale::clear_lv() {
  lv_ = 0;
  clear_has_lv();
}
inline ::google::protobuf::int32 roletaidaoFemale::lv() const {
  return lv_;
}
inline void roletaidaoFemale::set_lv(::google::protobuf::int32 value) {
  set_has_lv();
  lv_ = value;
}

// optional int32 upgradePoint = 2;
inline bool roletaidaoFemale::has_upgradepoint() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void roletaidaoFemale::set_has_upgradepoint() {
  _has_bits_[0] |= 0x00000002u;
}
inline void roletaidaoFemale::clear_has_upgradepoint() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void roletaidaoFemale::clear_upgradepoint() {
  upgradepoint_ = 0;
  clear_has_upgradepoint();
}
inline ::google::protobuf::int32 roletaidaoFemale::upgradepoint() const {
  return upgradepoint_;
}
inline void roletaidaoFemale::set_upgradepoint(::google::protobuf::int32 value) {
  set_has_upgradepoint();
  upgradepoint_ = value;
}

// repeated .proto_ff.roletaidaoFemaleattributeDesc attribute = 3;
inline int roletaidaoFemale::attribute_size() const {
  return attribute_.size();
}
inline void roletaidaoFemale::clear_attribute() {
  attribute_.Clear();
}
inline const ::proto_ff::roletaidaoFemaleattributeDesc& roletaidaoFemale::attribute(int index) const {
  return attribute_.Get(index);
}
inline ::proto_ff::roletaidaoFemaleattributeDesc* roletaidaoFemale::mutable_attribute(int index) {
  return attribute_.Mutable(index);
}
inline ::proto_ff::roletaidaoFemaleattributeDesc* roletaidaoFemale::add_attribute() {
  return attribute_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::roletaidaoFemaleattributeDesc >&
roletaidaoFemale::attribute() const {
  return attribute_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::roletaidaoFemaleattributeDesc >*
roletaidaoFemale::mutable_attribute() {
  return &attribute_;
}

// -------------------------------------------------------------------

// Sheet_roletaidaoFemale

// repeated .proto_ff.roletaidaoFemale roletaidaoFemale_List = 1;
inline int Sheet_roletaidaoFemale::roletaidaofemale_list_size() const {
  return roletaidaofemale_list_.size();
}
inline void Sheet_roletaidaoFemale::clear_roletaidaofemale_list() {
  roletaidaofemale_list_.Clear();
}
inline const ::proto_ff::roletaidaoFemale& Sheet_roletaidaoFemale::roletaidaofemale_list(int index) const {
  return roletaidaofemale_list_.Get(index);
}
inline ::proto_ff::roletaidaoFemale* Sheet_roletaidaoFemale::mutable_roletaidaofemale_list(int index) {
  return roletaidaofemale_list_.Mutable(index);
}
inline ::proto_ff::roletaidaoFemale* Sheet_roletaidaoFemale::add_roletaidaofemale_list() {
  return roletaidaofemale_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::roletaidaoFemale >&
Sheet_roletaidaoFemale::roletaidaofemale_list() const {
  return roletaidaofemale_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::roletaidaoFemale >*
Sheet_roletaidaoFemale::mutable_roletaidaofemale_list() {
  return &roletaidaofemale_list_;
}

// -------------------------------------------------------------------

// roleexp

// optional int32 lv = 1;
inline bool roleexp::has_lv() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void roleexp::set_has_lv() {
  _has_bits_[0] |= 0x00000001u;
}
inline void roleexp::clear_has_lv() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void roleexp::clear_lv() {
  lv_ = 0;
  clear_has_lv();
}
inline ::google::protobuf::int32 roleexp::lv() const {
  return lv_;
}
inline void roleexp::set_lv(::google::protobuf::int32 value) {
  set_has_lv();
  lv_ = value;
}

// optional int64 exp = 2;
inline bool roleexp::has_exp() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void roleexp::set_has_exp() {
  _has_bits_[0] |= 0x00000002u;
}
inline void roleexp::clear_has_exp() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void roleexp::clear_exp() {
  exp_ = GOOGLE_LONGLONG(0);
  clear_has_exp();
}
inline ::google::protobuf::int64 roleexp::exp() const {
  return exp_;
}
inline void roleexp::set_exp(::google::protobuf::int64 value) {
  set_has_exp();
  exp_ = value;
}

// optional int32 skillPoint = 3;
inline bool roleexp::has_skillpoint() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void roleexp::set_has_skillpoint() {
  _has_bits_[0] |= 0x00000004u;
}
inline void roleexp::clear_has_skillpoint() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void roleexp::clear_skillpoint() {
  skillpoint_ = 0;
  clear_has_skillpoint();
}
inline ::google::protobuf::int32 roleexp::skillpoint() const {
  return skillpoint_;
}
inline void roleexp::set_skillpoint(::google::protobuf::int32 value) {
  set_has_skillpoint();
  skillpoint_ = value;
}

// -------------------------------------------------------------------

// Sheet_roleexp

// repeated .proto_ff.roleexp roleexp_List = 1;
inline int Sheet_roleexp::roleexp_list_size() const {
  return roleexp_list_.size();
}
inline void Sheet_roleexp::clear_roleexp_list() {
  roleexp_list_.Clear();
}
inline const ::proto_ff::roleexp& Sheet_roleexp::roleexp_list(int index) const {
  return roleexp_list_.Get(index);
}
inline ::proto_ff::roleexp* Sheet_roleexp::mutable_roleexp_list(int index) {
  return roleexp_list_.Mutable(index);
}
inline ::proto_ff::roleexp* Sheet_roleexp::add_roleexp_list() {
  return roleexp_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::roleexp >&
Sheet_roleexp::roleexp_list() const {
  return roleexp_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::roleexp >*
Sheet_roleexp::mutable_roleexp_list() {
  return &roleexp_list_;
}

// -------------------------------------------------------------------

// roleskillType

// optional int64 skillId = 1;
inline bool roleskillType::has_skillid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void roleskillType::set_has_skillid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void roleskillType::clear_has_skillid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void roleskillType::clear_skillid() {
  skillid_ = GOOGLE_LONGLONG(0);
  clear_has_skillid();
}
inline ::google::protobuf::int64 roleskillType::skillid() const {
  return skillid_;
}
inline void roleskillType::set_skillid(::google::protobuf::int64 value) {
  set_has_skillid();
  skillid_ = value;
}

// optional int32 skillType = 2;
inline bool roleskillType::has_skilltype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void roleskillType::set_has_skilltype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void roleskillType::clear_has_skilltype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void roleskillType::clear_skilltype() {
  skilltype_ = 0;
  clear_has_skilltype();
}
inline ::google::protobuf::int32 roleskillType::skilltype() const {
  return skilltype_;
}
inline void roleskillType::set_skilltype(::google::protobuf::int32 value) {
  set_has_skilltype();
  skilltype_ = value;
}

// -------------------------------------------------------------------

// Sheet_roleskillType

// repeated .proto_ff.roleskillType roleskillType_List = 1;
inline int Sheet_roleskillType::roleskilltype_list_size() const {
  return roleskilltype_list_.size();
}
inline void Sheet_roleskillType::clear_roleskilltype_list() {
  roleskilltype_list_.Clear();
}
inline const ::proto_ff::roleskillType& Sheet_roleskillType::roleskilltype_list(int index) const {
  return roleskilltype_list_.Get(index);
}
inline ::proto_ff::roleskillType* Sheet_roleskillType::mutable_roleskilltype_list(int index) {
  return roleskilltype_list_.Mutable(index);
}
inline ::proto_ff::roleskillType* Sheet_roleskillType::add_roleskilltype_list() {
  return roleskilltype_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::roleskillType >&
Sheet_roleskillType::roleskilltype_list() const {
  return roleskilltype_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::roleskillType >*
Sheet_roleskillType::mutable_roleskilltype_list() {
  return &roleskilltype_list_;
}

// -------------------------------------------------------------------

// roleaddSkill

// optional int32 Id = 1;
inline bool roleaddSkill::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void roleaddSkill::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void roleaddSkill::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void roleaddSkill::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 roleaddSkill::id() const {
  return id_;
}
inline void roleaddSkill::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// optional int64 skillId = 2;
inline bool roleaddSkill::has_skillid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void roleaddSkill::set_has_skillid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void roleaddSkill::clear_has_skillid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void roleaddSkill::clear_skillid() {
  skillid_ = GOOGLE_LONGLONG(0);
  clear_has_skillid();
}
inline ::google::protobuf::int64 roleaddSkill::skillid() const {
  return skillid_;
}
inline void roleaddSkill::set_skillid(::google::protobuf::int64 value) {
  set_has_skillid();
  skillid_ = value;
}

// -------------------------------------------------------------------

// Sheet_roleaddSkill

// repeated .proto_ff.roleaddSkill roleaddSkill_List = 1;
inline int Sheet_roleaddSkill::roleaddskill_list_size() const {
  return roleaddskill_list_.size();
}
inline void Sheet_roleaddSkill::clear_roleaddskill_list() {
  roleaddskill_list_.Clear();
}
inline const ::proto_ff::roleaddSkill& Sheet_roleaddSkill::roleaddskill_list(int index) const {
  return roleaddskill_list_.Get(index);
}
inline ::proto_ff::roleaddSkill* Sheet_roleaddSkill::mutable_roleaddskill_list(int index) {
  return roleaddskill_list_.Mutable(index);
}
inline ::proto_ff::roleaddSkill* Sheet_roleaddSkill::add_roleaddskill_list() {
  return roleaddskill_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::roleaddSkill >&
Sheet_roleaddSkill::roleaddskill_list() const {
  return roleaddskill_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::roleaddSkill >*
Sheet_roleaddSkill::mutable_roleaddskill_list() {
  return &roleaddskill_list_;
}

// -------------------------------------------------------------------

// roleworldexp

// optional int64 lv = 1;
inline bool roleworldexp::has_lv() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void roleworldexp::set_has_lv() {
  _has_bits_[0] |= 0x00000001u;
}
inline void roleworldexp::clear_has_lv() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void roleworldexp::clear_lv() {
  lv_ = GOOGLE_LONGLONG(0);
  clear_has_lv();
}
inline ::google::protobuf::int64 roleworldexp::lv() const {
  return lv_;
}
inline void roleworldexp::set_lv(::google::protobuf::int64 value) {
  set_has_lv();
  lv_ = value;
}

// optional int32 worldExp = 2;
inline bool roleworldexp::has_worldexp() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void roleworldexp::set_has_worldexp() {
  _has_bits_[0] |= 0x00000002u;
}
inline void roleworldexp::clear_has_worldexp() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void roleworldexp::clear_worldexp() {
  worldexp_ = 0;
  clear_has_worldexp();
}
inline ::google::protobuf::int32 roleworldexp::worldexp() const {
  return worldexp_;
}
inline void roleworldexp::set_worldexp(::google::protobuf::int32 value) {
  set_has_worldexp();
  worldexp_ = value;
}

// -------------------------------------------------------------------

// Sheet_roleworldexp

// repeated .proto_ff.roleworldexp roleworldexp_List = 1;
inline int Sheet_roleworldexp::roleworldexp_list_size() const {
  return roleworldexp_list_.size();
}
inline void Sheet_roleworldexp::clear_roleworldexp_list() {
  roleworldexp_list_.Clear();
}
inline const ::proto_ff::roleworldexp& Sheet_roleworldexp::roleworldexp_list(int index) const {
  return roleworldexp_list_.Get(index);
}
inline ::proto_ff::roleworldexp* Sheet_roleworldexp::mutable_roleworldexp_list(int index) {
  return roleworldexp_list_.Mutable(index);
}
inline ::proto_ff::roleworldexp* Sheet_roleworldexp::add_roleworldexp_list() {
  return roleworldexp_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::roleworldexp >&
Sheet_roleworldexp::roleworldexp_list() const {
  return roleworldexp_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::roleworldexp >*
Sheet_roleworldexp::mutable_roleworldexp_list() {
  return &roleworldexp_list_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto_ff

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_role_2eproto__INCLUDED
