// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: E_Flash.proto

#ifndef PROTOBUF_E_5fFlash_2eproto__INCLUDED
#define PROTOBUF_E_5fFlash_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "yd_fieldoptions.pb.h"
// @@protoc_insertion_point(includes)

namespace proto_ff {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_E_5fFlash_2eproto();
void protobuf_AssignDesc_E_5fFlash_2eproto();
void protobuf_ShutdownFile_E_5fFlash_2eproto();

class E_FlashFlashMonsterDesc;
class E_FlashFlash;
class Sheet_FlashFlash;
class E_FlashItemflashMonsterDesc;
class E_FlashItemflash;
class Sheet_FlashItemflash;

// ===================================================================

class E_FlashFlashMonsterDesc : public ::google::protobuf::Message {
 public:
  E_FlashFlashMonsterDesc();
  virtual ~E_FlashFlashMonsterDesc();

  E_FlashFlashMonsterDesc(const E_FlashFlashMonsterDesc& from);

  inline E_FlashFlashMonsterDesc& operator=(const E_FlashFlashMonsterDesc& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_FlashFlashMonsterDesc& default_instance();

  void Swap(E_FlashFlashMonsterDesc* other);

  // implements Message ----------------------------------------------

  E_FlashFlashMonsterDesc* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_FlashFlashMonsterDesc& from);
  void MergeFrom(const E_FlashFlashMonsterDesc& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 m_Num = 1;
  inline bool has_m_num() const;
  inline void clear_m_num();
  static const int kMNumFieldNumber = 1;
  inline ::google::protobuf::int32 m_num() const;
  inline void set_m_num(::google::protobuf::int32 value);

  // optional int64 m_ID = 2;
  inline bool has_m_id() const;
  inline void clear_m_id();
  static const int kMIDFieldNumber = 2;
  inline ::google::protobuf::int64 m_id() const;
  inline void set_m_id(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.E_FlashFlashMonsterDesc)
 private:
  inline void set_has_m_num();
  inline void clear_has_m_num();
  inline void set_has_m_id();
  inline void clear_has_m_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 m_id_;
  ::google::protobuf::int32 m_num_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fFlash_2eproto();
  friend void protobuf_AssignDesc_E_5fFlash_2eproto();
  friend void protobuf_ShutdownFile_E_5fFlash_2eproto();

  void InitAsDefaultInstance();
  static E_FlashFlashMonsterDesc* default_instance_;
};
// -------------------------------------------------------------------

class E_FlashFlash : public ::google::protobuf::Message {
 public:
  E_FlashFlash();
  virtual ~E_FlashFlash();

  E_FlashFlash(const E_FlashFlash& from);

  inline E_FlashFlash& operator=(const E_FlashFlash& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_FlashFlash& default_instance();

  void Swap(E_FlashFlash* other);

  // implements Message ----------------------------------------------

  E_FlashFlash* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_FlashFlash& from);
  void MergeFrom(const E_FlashFlash& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 m_id = 1;
  inline bool has_m_id() const;
  inline void clear_m_id();
  static const int kMIdFieldNumber = 1;
  inline ::google::protobuf::int64 m_id() const;
  inline void set_m_id(::google::protobuf::int64 value);

  // optional int32 m_isLevelDynamic = 2;
  inline bool has_m_isleveldynamic() const;
  inline void clear_m_isleveldynamic();
  static const int kMIsLevelDynamicFieldNumber = 2;
  inline ::google::protobuf::int32 m_isleveldynamic() const;
  inline void set_m_isleveldynamic(::google::protobuf::int32 value);

  // optional int32 m_miniLevel = 3;
  inline bool has_m_minilevel() const;
  inline void clear_m_minilevel();
  static const int kMMiniLevelFieldNumber = 3;
  inline ::google::protobuf::int32 m_minilevel() const;
  inline void set_m_minilevel(::google::protobuf::int32 value);

  // optional int32 m_levelCheck = 4;
  inline bool has_m_levelcheck() const;
  inline void clear_m_levelcheck();
  static const int kMLevelCheckFieldNumber = 4;
  inline ::google::protobuf::int32 m_levelcheck() const;
  inline void set_m_levelcheck(::google::protobuf::int32 value);

  // optional int64 m_pointID = 5;
  inline bool has_m_pointid() const;
  inline void clear_m_pointid();
  static const int kMPointIDFieldNumber = 5;
  inline ::google::protobuf::int64 m_pointid() const;
  inline void set_m_pointid(::google::protobuf::int64 value);

  // optional int32 m_monster_Type = 6;
  inline bool has_m_monster_type() const;
  inline void clear_m_monster_type();
  static const int kMMonsterTypeFieldNumber = 6;
  inline ::google::protobuf::int32 m_monster_type() const;
  inline void set_m_monster_type(::google::protobuf::int32 value);

  // optional int32 m_monsterRefreshTime = 7;
  inline bool has_m_monsterrefreshtime() const;
  inline void clear_m_monsterrefreshtime();
  static const int kMMonsterRefreshTimeFieldNumber = 7;
  inline ::google::protobuf::int32 m_monsterrefreshtime() const;
  inline void set_m_monsterrefreshtime(::google::protobuf::int32 value);

  // repeated .proto_ff.E_FlashFlashMonsterDesc m_monster = 8;
  inline int m_monster_size() const;
  inline void clear_m_monster();
  static const int kMMonsterFieldNumber = 8;
  inline const ::proto_ff::E_FlashFlashMonsterDesc& m_monster(int index) const;
  inline ::proto_ff::E_FlashFlashMonsterDesc* mutable_m_monster(int index);
  inline ::proto_ff::E_FlashFlashMonsterDesc* add_m_monster();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_FlashFlashMonsterDesc >&
      m_monster() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_FlashFlashMonsterDesc >*
      mutable_m_monster();

  // @@protoc_insertion_point(class_scope:proto_ff.E_FlashFlash)
 private:
  inline void set_has_m_id();
  inline void clear_has_m_id();
  inline void set_has_m_isleveldynamic();
  inline void clear_has_m_isleveldynamic();
  inline void set_has_m_minilevel();
  inline void clear_has_m_minilevel();
  inline void set_has_m_levelcheck();
  inline void clear_has_m_levelcheck();
  inline void set_has_m_pointid();
  inline void clear_has_m_pointid();
  inline void set_has_m_monster_type();
  inline void clear_has_m_monster_type();
  inline void set_has_m_monsterrefreshtime();
  inline void clear_has_m_monsterrefreshtime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 m_id_;
  ::google::protobuf::int32 m_isleveldynamic_;
  ::google::protobuf::int32 m_minilevel_;
  ::google::protobuf::int64 m_pointid_;
  ::google::protobuf::int32 m_levelcheck_;
  ::google::protobuf::int32 m_monster_type_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_FlashFlashMonsterDesc > m_monster_;
  ::google::protobuf::int32 m_monsterrefreshtime_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fFlash_2eproto();
  friend void protobuf_AssignDesc_E_5fFlash_2eproto();
  friend void protobuf_ShutdownFile_E_5fFlash_2eproto();

  void InitAsDefaultInstance();
  static E_FlashFlash* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_FlashFlash : public ::google::protobuf::Message {
 public:
  Sheet_FlashFlash();
  virtual ~Sheet_FlashFlash();

  Sheet_FlashFlash(const Sheet_FlashFlash& from);

  inline Sheet_FlashFlash& operator=(const Sheet_FlashFlash& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_FlashFlash& default_instance();

  void Swap(Sheet_FlashFlash* other);

  // implements Message ----------------------------------------------

  Sheet_FlashFlash* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_FlashFlash& from);
  void MergeFrom(const Sheet_FlashFlash& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.E_FlashFlash E_FlashFlash_List = 1;
  inline int e_flashflash_list_size() const;
  inline void clear_e_flashflash_list();
  static const int kEFlashFlashListFieldNumber = 1;
  inline const ::proto_ff::E_FlashFlash& e_flashflash_list(int index) const;
  inline ::proto_ff::E_FlashFlash* mutable_e_flashflash_list(int index);
  inline ::proto_ff::E_FlashFlash* add_e_flashflash_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_FlashFlash >&
      e_flashflash_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_FlashFlash >*
      mutable_e_flashflash_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_FlashFlash)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_FlashFlash > e_flashflash_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fFlash_2eproto();
  friend void protobuf_AssignDesc_E_5fFlash_2eproto();
  friend void protobuf_ShutdownFile_E_5fFlash_2eproto();

  void InitAsDefaultInstance();
  static Sheet_FlashFlash* default_instance_;
};
// -------------------------------------------------------------------

class E_FlashItemflashMonsterDesc : public ::google::protobuf::Message {
 public:
  E_FlashItemflashMonsterDesc();
  virtual ~E_FlashItemflashMonsterDesc();

  E_FlashItemflashMonsterDesc(const E_FlashItemflashMonsterDesc& from);

  inline E_FlashItemflashMonsterDesc& operator=(const E_FlashItemflashMonsterDesc& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_FlashItemflashMonsterDesc& default_instance();

  void Swap(E_FlashItemflashMonsterDesc* other);

  // implements Message ----------------------------------------------

  E_FlashItemflashMonsterDesc* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_FlashItemflashMonsterDesc& from);
  void MergeFrom(const E_FlashItemflashMonsterDesc& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 m_weight = 1;
  inline bool has_m_weight() const;
  inline void clear_m_weight();
  static const int kMWeightFieldNumber = 1;
  inline ::google::protobuf::int32 m_weight() const;
  inline void set_m_weight(::google::protobuf::int32 value);

  // optional int64 m_Id = 2;
  inline bool has_m_id() const;
  inline void clear_m_id();
  static const int kMIdFieldNumber = 2;
  inline ::google::protobuf::int64 m_id() const;
  inline void set_m_id(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.E_FlashItemflashMonsterDesc)
 private:
  inline void set_has_m_weight();
  inline void clear_has_m_weight();
  inline void set_has_m_id();
  inline void clear_has_m_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 m_id_;
  ::google::protobuf::int32 m_weight_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fFlash_2eproto();
  friend void protobuf_AssignDesc_E_5fFlash_2eproto();
  friend void protobuf_ShutdownFile_E_5fFlash_2eproto();

  void InitAsDefaultInstance();
  static E_FlashItemflashMonsterDesc* default_instance_;
};
// -------------------------------------------------------------------

class E_FlashItemflash : public ::google::protobuf::Message {
 public:
  E_FlashItemflash();
  virtual ~E_FlashItemflash();

  E_FlashItemflash(const E_FlashItemflash& from);

  inline E_FlashItemflash& operator=(const E_FlashItemflash& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_FlashItemflash& default_instance();

  void Swap(E_FlashItemflash* other);

  // implements Message ----------------------------------------------

  E_FlashItemflash* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_FlashItemflash& from);
  void MergeFrom(const E_FlashItemflash& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 m_id = 1;
  inline bool has_m_id() const;
  inline void clear_m_id();
  static const int kMIdFieldNumber = 1;
  inline ::google::protobuf::int64 m_id() const;
  inline void set_m_id(::google::protobuf::int64 value);

  // optional string m_useMap = 2;
  inline bool has_m_usemap() const;
  inline void clear_m_usemap();
  static const int kMUseMapFieldNumber = 2;
  inline const ::std::string& m_usemap() const;
  inline void set_m_usemap(const ::std::string& value);
  inline void set_m_usemap(const char* value);
  inline void set_m_usemap(const char* value, size_t size);
  inline ::std::string* mutable_m_usemap();
  inline ::std::string* release_m_usemap();
  inline void set_allocated_m_usemap(::std::string* m_usemap);

  // optional int32 m_live = 3;
  inline bool has_m_live() const;
  inline void clear_m_live();
  static const int kMLiveFieldNumber = 3;
  inline ::google::protobuf::int32 m_live() const;
  inline void set_m_live(::google::protobuf::int32 value);

  // optional int32 m_levelwave = 4;
  inline bool has_m_levelwave() const;
  inline void clear_m_levelwave();
  static const int kMLevelwaveFieldNumber = 4;
  inline ::google::protobuf::int32 m_levelwave() const;
  inline void set_m_levelwave(::google::protobuf::int32 value);

  // optional int32 m_flashNum = 5;
  inline bool has_m_flashnum() const;
  inline void clear_m_flashnum();
  static const int kMFlashNumFieldNumber = 5;
  inline ::google::protobuf::int32 m_flashnum() const;
  inline void set_m_flashnum(::google::protobuf::int32 value);

  // repeated .proto_ff.E_FlashItemflashMonsterDesc m_monster = 6;
  inline int m_monster_size() const;
  inline void clear_m_monster();
  static const int kMMonsterFieldNumber = 6;
  inline const ::proto_ff::E_FlashItemflashMonsterDesc& m_monster(int index) const;
  inline ::proto_ff::E_FlashItemflashMonsterDesc* mutable_m_monster(int index);
  inline ::proto_ff::E_FlashItemflashMonsterDesc* add_m_monster();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_FlashItemflashMonsterDesc >&
      m_monster() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_FlashItemflashMonsterDesc >*
      mutable_m_monster();

  // @@protoc_insertion_point(class_scope:proto_ff.E_FlashItemflash)
 private:
  inline void set_has_m_id();
  inline void clear_has_m_id();
  inline void set_has_m_usemap();
  inline void clear_has_m_usemap();
  inline void set_has_m_live();
  inline void clear_has_m_live();
  inline void set_has_m_levelwave();
  inline void clear_has_m_levelwave();
  inline void set_has_m_flashnum();
  inline void clear_has_m_flashnum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 m_id_;
  ::std::string* m_usemap_;
  ::google::protobuf::int32 m_live_;
  ::google::protobuf::int32 m_levelwave_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_FlashItemflashMonsterDesc > m_monster_;
  ::google::protobuf::int32 m_flashnum_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fFlash_2eproto();
  friend void protobuf_AssignDesc_E_5fFlash_2eproto();
  friend void protobuf_ShutdownFile_E_5fFlash_2eproto();

  void InitAsDefaultInstance();
  static E_FlashItemflash* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_FlashItemflash : public ::google::protobuf::Message {
 public:
  Sheet_FlashItemflash();
  virtual ~Sheet_FlashItemflash();

  Sheet_FlashItemflash(const Sheet_FlashItemflash& from);

  inline Sheet_FlashItemflash& operator=(const Sheet_FlashItemflash& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_FlashItemflash& default_instance();

  void Swap(Sheet_FlashItemflash* other);

  // implements Message ----------------------------------------------

  Sheet_FlashItemflash* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_FlashItemflash& from);
  void MergeFrom(const Sheet_FlashItemflash& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.E_FlashItemflash E_FlashItemflash_List = 1;
  inline int e_flashitemflash_list_size() const;
  inline void clear_e_flashitemflash_list();
  static const int kEFlashItemflashListFieldNumber = 1;
  inline const ::proto_ff::E_FlashItemflash& e_flashitemflash_list(int index) const;
  inline ::proto_ff::E_FlashItemflash* mutable_e_flashitemflash_list(int index);
  inline ::proto_ff::E_FlashItemflash* add_e_flashitemflash_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_FlashItemflash >&
      e_flashitemflash_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_FlashItemflash >*
      mutable_e_flashitemflash_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_FlashItemflash)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_FlashItemflash > e_flashitemflash_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fFlash_2eproto();
  friend void protobuf_AssignDesc_E_5fFlash_2eproto();
  friend void protobuf_ShutdownFile_E_5fFlash_2eproto();

  void InitAsDefaultInstance();
  static Sheet_FlashItemflash* default_instance_;
};
// ===================================================================


// ===================================================================

// E_FlashFlashMonsterDesc

// optional int32 m_Num = 1;
inline bool E_FlashFlashMonsterDesc::has_m_num() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_FlashFlashMonsterDesc::set_has_m_num() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_FlashFlashMonsterDesc::clear_has_m_num() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_FlashFlashMonsterDesc::clear_m_num() {
  m_num_ = 0;
  clear_has_m_num();
}
inline ::google::protobuf::int32 E_FlashFlashMonsterDesc::m_num() const {
  return m_num_;
}
inline void E_FlashFlashMonsterDesc::set_m_num(::google::protobuf::int32 value) {
  set_has_m_num();
  m_num_ = value;
}

// optional int64 m_ID = 2;
inline bool E_FlashFlashMonsterDesc::has_m_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_FlashFlashMonsterDesc::set_has_m_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_FlashFlashMonsterDesc::clear_has_m_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_FlashFlashMonsterDesc::clear_m_id() {
  m_id_ = GOOGLE_LONGLONG(0);
  clear_has_m_id();
}
inline ::google::protobuf::int64 E_FlashFlashMonsterDesc::m_id() const {
  return m_id_;
}
inline void E_FlashFlashMonsterDesc::set_m_id(::google::protobuf::int64 value) {
  set_has_m_id();
  m_id_ = value;
}

// -------------------------------------------------------------------

// E_FlashFlash

// optional int64 m_id = 1;
inline bool E_FlashFlash::has_m_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_FlashFlash::set_has_m_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_FlashFlash::clear_has_m_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_FlashFlash::clear_m_id() {
  m_id_ = GOOGLE_LONGLONG(0);
  clear_has_m_id();
}
inline ::google::protobuf::int64 E_FlashFlash::m_id() const {
  return m_id_;
}
inline void E_FlashFlash::set_m_id(::google::protobuf::int64 value) {
  set_has_m_id();
  m_id_ = value;
}

// optional int32 m_isLevelDynamic = 2;
inline bool E_FlashFlash::has_m_isleveldynamic() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_FlashFlash::set_has_m_isleveldynamic() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_FlashFlash::clear_has_m_isleveldynamic() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_FlashFlash::clear_m_isleveldynamic() {
  m_isleveldynamic_ = 0;
  clear_has_m_isleveldynamic();
}
inline ::google::protobuf::int32 E_FlashFlash::m_isleveldynamic() const {
  return m_isleveldynamic_;
}
inline void E_FlashFlash::set_m_isleveldynamic(::google::protobuf::int32 value) {
  set_has_m_isleveldynamic();
  m_isleveldynamic_ = value;
}

// optional int32 m_miniLevel = 3;
inline bool E_FlashFlash::has_m_minilevel() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void E_FlashFlash::set_has_m_minilevel() {
  _has_bits_[0] |= 0x00000004u;
}
inline void E_FlashFlash::clear_has_m_minilevel() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void E_FlashFlash::clear_m_minilevel() {
  m_minilevel_ = 0;
  clear_has_m_minilevel();
}
inline ::google::protobuf::int32 E_FlashFlash::m_minilevel() const {
  return m_minilevel_;
}
inline void E_FlashFlash::set_m_minilevel(::google::protobuf::int32 value) {
  set_has_m_minilevel();
  m_minilevel_ = value;
}

// optional int32 m_levelCheck = 4;
inline bool E_FlashFlash::has_m_levelcheck() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void E_FlashFlash::set_has_m_levelcheck() {
  _has_bits_[0] |= 0x00000008u;
}
inline void E_FlashFlash::clear_has_m_levelcheck() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void E_FlashFlash::clear_m_levelcheck() {
  m_levelcheck_ = 0;
  clear_has_m_levelcheck();
}
inline ::google::protobuf::int32 E_FlashFlash::m_levelcheck() const {
  return m_levelcheck_;
}
inline void E_FlashFlash::set_m_levelcheck(::google::protobuf::int32 value) {
  set_has_m_levelcheck();
  m_levelcheck_ = value;
}

// optional int64 m_pointID = 5;
inline bool E_FlashFlash::has_m_pointid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void E_FlashFlash::set_has_m_pointid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void E_FlashFlash::clear_has_m_pointid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void E_FlashFlash::clear_m_pointid() {
  m_pointid_ = GOOGLE_LONGLONG(0);
  clear_has_m_pointid();
}
inline ::google::protobuf::int64 E_FlashFlash::m_pointid() const {
  return m_pointid_;
}
inline void E_FlashFlash::set_m_pointid(::google::protobuf::int64 value) {
  set_has_m_pointid();
  m_pointid_ = value;
}

// optional int32 m_monster_Type = 6;
inline bool E_FlashFlash::has_m_monster_type() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void E_FlashFlash::set_has_m_monster_type() {
  _has_bits_[0] |= 0x00000020u;
}
inline void E_FlashFlash::clear_has_m_monster_type() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void E_FlashFlash::clear_m_monster_type() {
  m_monster_type_ = 0;
  clear_has_m_monster_type();
}
inline ::google::protobuf::int32 E_FlashFlash::m_monster_type() const {
  return m_monster_type_;
}
inline void E_FlashFlash::set_m_monster_type(::google::protobuf::int32 value) {
  set_has_m_monster_type();
  m_monster_type_ = value;
}

// optional int32 m_monsterRefreshTime = 7;
inline bool E_FlashFlash::has_m_monsterrefreshtime() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void E_FlashFlash::set_has_m_monsterrefreshtime() {
  _has_bits_[0] |= 0x00000040u;
}
inline void E_FlashFlash::clear_has_m_monsterrefreshtime() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void E_FlashFlash::clear_m_monsterrefreshtime() {
  m_monsterrefreshtime_ = 0;
  clear_has_m_monsterrefreshtime();
}
inline ::google::protobuf::int32 E_FlashFlash::m_monsterrefreshtime() const {
  return m_monsterrefreshtime_;
}
inline void E_FlashFlash::set_m_monsterrefreshtime(::google::protobuf::int32 value) {
  set_has_m_monsterrefreshtime();
  m_monsterrefreshtime_ = value;
}

// repeated .proto_ff.E_FlashFlashMonsterDesc m_monster = 8;
inline int E_FlashFlash::m_monster_size() const {
  return m_monster_.size();
}
inline void E_FlashFlash::clear_m_monster() {
  m_monster_.Clear();
}
inline const ::proto_ff::E_FlashFlashMonsterDesc& E_FlashFlash::m_monster(int index) const {
  return m_monster_.Get(index);
}
inline ::proto_ff::E_FlashFlashMonsterDesc* E_FlashFlash::mutable_m_monster(int index) {
  return m_monster_.Mutable(index);
}
inline ::proto_ff::E_FlashFlashMonsterDesc* E_FlashFlash::add_m_monster() {
  return m_monster_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_FlashFlashMonsterDesc >&
E_FlashFlash::m_monster() const {
  return m_monster_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_FlashFlashMonsterDesc >*
E_FlashFlash::mutable_m_monster() {
  return &m_monster_;
}

// -------------------------------------------------------------------

// Sheet_FlashFlash

// repeated .proto_ff.E_FlashFlash E_FlashFlash_List = 1;
inline int Sheet_FlashFlash::e_flashflash_list_size() const {
  return e_flashflash_list_.size();
}
inline void Sheet_FlashFlash::clear_e_flashflash_list() {
  e_flashflash_list_.Clear();
}
inline const ::proto_ff::E_FlashFlash& Sheet_FlashFlash::e_flashflash_list(int index) const {
  return e_flashflash_list_.Get(index);
}
inline ::proto_ff::E_FlashFlash* Sheet_FlashFlash::mutable_e_flashflash_list(int index) {
  return e_flashflash_list_.Mutable(index);
}
inline ::proto_ff::E_FlashFlash* Sheet_FlashFlash::add_e_flashflash_list() {
  return e_flashflash_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_FlashFlash >&
Sheet_FlashFlash::e_flashflash_list() const {
  return e_flashflash_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_FlashFlash >*
Sheet_FlashFlash::mutable_e_flashflash_list() {
  return &e_flashflash_list_;
}

// -------------------------------------------------------------------

// E_FlashItemflashMonsterDesc

// optional int32 m_weight = 1;
inline bool E_FlashItemflashMonsterDesc::has_m_weight() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_FlashItemflashMonsterDesc::set_has_m_weight() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_FlashItemflashMonsterDesc::clear_has_m_weight() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_FlashItemflashMonsterDesc::clear_m_weight() {
  m_weight_ = 0;
  clear_has_m_weight();
}
inline ::google::protobuf::int32 E_FlashItemflashMonsterDesc::m_weight() const {
  return m_weight_;
}
inline void E_FlashItemflashMonsterDesc::set_m_weight(::google::protobuf::int32 value) {
  set_has_m_weight();
  m_weight_ = value;
}

// optional int64 m_Id = 2;
inline bool E_FlashItemflashMonsterDesc::has_m_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_FlashItemflashMonsterDesc::set_has_m_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_FlashItemflashMonsterDesc::clear_has_m_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_FlashItemflashMonsterDesc::clear_m_id() {
  m_id_ = GOOGLE_LONGLONG(0);
  clear_has_m_id();
}
inline ::google::protobuf::int64 E_FlashItemflashMonsterDesc::m_id() const {
  return m_id_;
}
inline void E_FlashItemflashMonsterDesc::set_m_id(::google::protobuf::int64 value) {
  set_has_m_id();
  m_id_ = value;
}

// -------------------------------------------------------------------

// E_FlashItemflash

// optional int64 m_id = 1;
inline bool E_FlashItemflash::has_m_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_FlashItemflash::set_has_m_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_FlashItemflash::clear_has_m_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_FlashItemflash::clear_m_id() {
  m_id_ = GOOGLE_LONGLONG(0);
  clear_has_m_id();
}
inline ::google::protobuf::int64 E_FlashItemflash::m_id() const {
  return m_id_;
}
inline void E_FlashItemflash::set_m_id(::google::protobuf::int64 value) {
  set_has_m_id();
  m_id_ = value;
}

// optional string m_useMap = 2;
inline bool E_FlashItemflash::has_m_usemap() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_FlashItemflash::set_has_m_usemap() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_FlashItemflash::clear_has_m_usemap() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_FlashItemflash::clear_m_usemap() {
  if (m_usemap_ != &::google::protobuf::internal::kEmptyString) {
    m_usemap_->clear();
  }
  clear_has_m_usemap();
}
inline const ::std::string& E_FlashItemflash::m_usemap() const {
  return *m_usemap_;
}
inline void E_FlashItemflash::set_m_usemap(const ::std::string& value) {
  set_has_m_usemap();
  if (m_usemap_ == &::google::protobuf::internal::kEmptyString) {
    m_usemap_ = new ::std::string;
  }
  m_usemap_->assign(value);
}
inline void E_FlashItemflash::set_m_usemap(const char* value) {
  set_has_m_usemap();
  if (m_usemap_ == &::google::protobuf::internal::kEmptyString) {
    m_usemap_ = new ::std::string;
  }
  m_usemap_->assign(value);
}
inline void E_FlashItemflash::set_m_usemap(const char* value, size_t size) {
  set_has_m_usemap();
  if (m_usemap_ == &::google::protobuf::internal::kEmptyString) {
    m_usemap_ = new ::std::string;
  }
  m_usemap_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* E_FlashItemflash::mutable_m_usemap() {
  set_has_m_usemap();
  if (m_usemap_ == &::google::protobuf::internal::kEmptyString) {
    m_usemap_ = new ::std::string;
  }
  return m_usemap_;
}
inline ::std::string* E_FlashItemflash::release_m_usemap() {
  clear_has_m_usemap();
  if (m_usemap_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = m_usemap_;
    m_usemap_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void E_FlashItemflash::set_allocated_m_usemap(::std::string* m_usemap) {
  if (m_usemap_ != &::google::protobuf::internal::kEmptyString) {
    delete m_usemap_;
  }
  if (m_usemap) {
    set_has_m_usemap();
    m_usemap_ = m_usemap;
  } else {
    clear_has_m_usemap();
    m_usemap_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 m_live = 3;
inline bool E_FlashItemflash::has_m_live() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void E_FlashItemflash::set_has_m_live() {
  _has_bits_[0] |= 0x00000004u;
}
inline void E_FlashItemflash::clear_has_m_live() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void E_FlashItemflash::clear_m_live() {
  m_live_ = 0;
  clear_has_m_live();
}
inline ::google::protobuf::int32 E_FlashItemflash::m_live() const {
  return m_live_;
}
inline void E_FlashItemflash::set_m_live(::google::protobuf::int32 value) {
  set_has_m_live();
  m_live_ = value;
}

// optional int32 m_levelwave = 4;
inline bool E_FlashItemflash::has_m_levelwave() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void E_FlashItemflash::set_has_m_levelwave() {
  _has_bits_[0] |= 0x00000008u;
}
inline void E_FlashItemflash::clear_has_m_levelwave() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void E_FlashItemflash::clear_m_levelwave() {
  m_levelwave_ = 0;
  clear_has_m_levelwave();
}
inline ::google::protobuf::int32 E_FlashItemflash::m_levelwave() const {
  return m_levelwave_;
}
inline void E_FlashItemflash::set_m_levelwave(::google::protobuf::int32 value) {
  set_has_m_levelwave();
  m_levelwave_ = value;
}

// optional int32 m_flashNum = 5;
inline bool E_FlashItemflash::has_m_flashnum() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void E_FlashItemflash::set_has_m_flashnum() {
  _has_bits_[0] |= 0x00000010u;
}
inline void E_FlashItemflash::clear_has_m_flashnum() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void E_FlashItemflash::clear_m_flashnum() {
  m_flashnum_ = 0;
  clear_has_m_flashnum();
}
inline ::google::protobuf::int32 E_FlashItemflash::m_flashnum() const {
  return m_flashnum_;
}
inline void E_FlashItemflash::set_m_flashnum(::google::protobuf::int32 value) {
  set_has_m_flashnum();
  m_flashnum_ = value;
}

// repeated .proto_ff.E_FlashItemflashMonsterDesc m_monster = 6;
inline int E_FlashItemflash::m_monster_size() const {
  return m_monster_.size();
}
inline void E_FlashItemflash::clear_m_monster() {
  m_monster_.Clear();
}
inline const ::proto_ff::E_FlashItemflashMonsterDesc& E_FlashItemflash::m_monster(int index) const {
  return m_monster_.Get(index);
}
inline ::proto_ff::E_FlashItemflashMonsterDesc* E_FlashItemflash::mutable_m_monster(int index) {
  return m_monster_.Mutable(index);
}
inline ::proto_ff::E_FlashItemflashMonsterDesc* E_FlashItemflash::add_m_monster() {
  return m_monster_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_FlashItemflashMonsterDesc >&
E_FlashItemflash::m_monster() const {
  return m_monster_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_FlashItemflashMonsterDesc >*
E_FlashItemflash::mutable_m_monster() {
  return &m_monster_;
}

// -------------------------------------------------------------------

// Sheet_FlashItemflash

// repeated .proto_ff.E_FlashItemflash E_FlashItemflash_List = 1;
inline int Sheet_FlashItemflash::e_flashitemflash_list_size() const {
  return e_flashitemflash_list_.size();
}
inline void Sheet_FlashItemflash::clear_e_flashitemflash_list() {
  e_flashitemflash_list_.Clear();
}
inline const ::proto_ff::E_FlashItemflash& Sheet_FlashItemflash::e_flashitemflash_list(int index) const {
  return e_flashitemflash_list_.Get(index);
}
inline ::proto_ff::E_FlashItemflash* Sheet_FlashItemflash::mutable_e_flashitemflash_list(int index) {
  return e_flashitemflash_list_.Mutable(index);
}
inline ::proto_ff::E_FlashItemflash* Sheet_FlashItemflash::add_e_flashitemflash_list() {
  return e_flashitemflash_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_FlashItemflash >&
Sheet_FlashItemflash::e_flashitemflash_list() const {
  return e_flashitemflash_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_FlashItemflash >*
Sheet_FlashItemflash::mutable_e_flashitemflash_list() {
  return &e_flashitemflash_list_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto_ff

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_E_5fFlash_2eproto__INCLUDED
