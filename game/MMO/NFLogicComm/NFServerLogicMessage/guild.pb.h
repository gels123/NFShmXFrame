// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: guild.proto

#ifndef PROTOBUF_guild_2eproto__INCLUDED
#define PROTOBUF_guild_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "yd_fieldoptions.pb.h"
// @@protoc_insertion_point(includes)

namespace proto_ff {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_guild_2eproto();
void protobuf_AssignDesc_guild_2eproto();
void protobuf_ShutdownFile_guild_2eproto();

class guildconstant;
class Sheet_guildconstant;
class guildlevel;
class Sheet_guildlevel;
class guildcollege;
class Sheet_guildcollege;
class guildposition;
class Sheet_guildposition;
class guildhouse;
class Sheet_guildhouse;
class guildgift;
class Sheet_guildgift;
class guildguildance;
class Sheet_guildguildance;
class guildwarconstant;
class Sheet_guildwarconstant;
class guildwarmorale;
class Sheet_guildwarmorale;
class guildwarrevive;
class Sheet_guildwarrevive;

// ===================================================================

class guildconstant : public ::google::protobuf::Message {
 public:
  guildconstant();
  virtual ~guildconstant();

  guildconstant(const guildconstant& from);

  inline guildconstant& operator=(const guildconstant& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const guildconstant& default_instance();

  void Swap(guildconstant* other);

  // implements Message ----------------------------------------------

  guildconstant* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const guildconstant& from);
  void MergeFrom(const guildconstant& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 constantid = 1;
  inline bool has_constantid() const;
  inline void clear_constantid();
  static const int kConstantidFieldNumber = 1;
  inline ::google::protobuf::int64 constantid() const;
  inline void set_constantid(::google::protobuf::int64 value);

  // optional int32 setDiamond = 2;
  inline bool has_setdiamond() const;
  inline void clear_setdiamond();
  static const int kSetDiamondFieldNumber = 2;
  inline ::google::protobuf::int32 setdiamond() const;
  inline void set_setdiamond(::google::protobuf::int32 value);

  // optional int32 offlineTime = 3;
  inline bool has_offlinetime() const;
  inline void clear_offlinetime();
  static const int kOfflineTimeFieldNumber = 3;
  inline ::google::protobuf::int32 offlinetime() const;
  inline void set_offlinetime(::google::protobuf::int32 value);

  // optional int32 EditRequireLV = 4;
  inline bool has_editrequirelv() const;
  inline void clear_editrequirelv();
  static const int kEditRequireLVFieldNumber = 4;
  inline ::google::protobuf::int32 editrequirelv() const;
  inline void set_editrequirelv(::google::protobuf::int32 value);

  // optional int32 leaveCoolingtime = 5;
  inline bool has_leavecoolingtime() const;
  inline void clear_leavecoolingtime();
  static const int kLeaveCoolingtimeFieldNumber = 5;
  inline ::google::protobuf::int32 leavecoolingtime() const;
  inline void set_leavecoolingtime(::google::protobuf::int32 value);

  // optional int32 houseLimit = 6;
  inline bool has_houselimit() const;
  inline void clear_houselimit();
  static const int kHouseLimitFieldNumber = 6;
  inline ::google::protobuf::int32 houselimit() const;
  inline void set_houselimit(::google::protobuf::int32 value);

  // optional int64 expID = 7;
  inline bool has_expid() const;
  inline void clear_expid();
  static const int kExpIDFieldNumber = 7;
  inline ::google::protobuf::int64 expid() const;
  inline void set_expid(::google::protobuf::int64 value);

  // optional int32 houseScore = 8;
  inline bool has_housescore() const;
  inline void clear_housescore();
  static const int kHouseScoreFieldNumber = 8;
  inline ::google::protobuf::int32 housescore() const;
  inline void set_housescore(::google::protobuf::int32 value);

  // optional int32 giftCD = 9;
  inline bool has_giftcd() const;
  inline void clear_giftcd();
  static const int kGiftCDFieldNumber = 9;
  inline ::google::protobuf::int32 giftcd() const;
  inline void set_giftcd(::google::protobuf::int32 value);

  // optional int32 autoCleanCellNum = 10;
  inline bool has_autocleancellnum() const;
  inline void clear_autocleancellnum();
  static const int kAutoCleanCellNumFieldNumber = 10;
  inline ::google::protobuf::int32 autocleancellnum() const;
  inline void set_autocleancellnum(::google::protobuf::int32 value);

  // optional int32 dismiss = 11;
  inline bool has_dismiss() const;
  inline void clear_dismiss();
  static const int kDismissFieldNumber = 11;
  inline ::google::protobuf::int32 dismiss() const;
  inline void set_dismiss(::google::protobuf::int32 value);

  // optional int32 transferGuild = 12;
  inline bool has_transferguild() const;
  inline void clear_transferguild();
  static const int kTransferGuildFieldNumber = 12;
  inline ::google::protobuf::int32 transferguild() const;
  inline void set_transferguild(::google::protobuf::int32 value);

  // repeated string initialAutoCleanQS = 13;
  inline int initialautocleanqs_size() const;
  inline void clear_initialautocleanqs();
  static const int kInitialAutoCleanQSFieldNumber = 13;
  inline const ::std::string& initialautocleanqs(int index) const;
  inline ::std::string* mutable_initialautocleanqs(int index);
  inline void set_initialautocleanqs(int index, const ::std::string& value);
  inline void set_initialautocleanqs(int index, const char* value);
  inline void set_initialautocleanqs(int index, const char* value, size_t size);
  inline ::std::string* add_initialautocleanqs();
  inline void add_initialautocleanqs(const ::std::string& value);
  inline void add_initialautocleanqs(const char* value);
  inline void add_initialautocleanqs(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& initialautocleanqs() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_initialautocleanqs();

  // @@protoc_insertion_point(class_scope:proto_ff.guildconstant)
 private:
  inline void set_has_constantid();
  inline void clear_has_constantid();
  inline void set_has_setdiamond();
  inline void clear_has_setdiamond();
  inline void set_has_offlinetime();
  inline void clear_has_offlinetime();
  inline void set_has_editrequirelv();
  inline void clear_has_editrequirelv();
  inline void set_has_leavecoolingtime();
  inline void clear_has_leavecoolingtime();
  inline void set_has_houselimit();
  inline void clear_has_houselimit();
  inline void set_has_expid();
  inline void clear_has_expid();
  inline void set_has_housescore();
  inline void clear_has_housescore();
  inline void set_has_giftcd();
  inline void clear_has_giftcd();
  inline void set_has_autocleancellnum();
  inline void clear_has_autocleancellnum();
  inline void set_has_dismiss();
  inline void clear_has_dismiss();
  inline void set_has_transferguild();
  inline void clear_has_transferguild();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 constantid_;
  ::google::protobuf::int32 setdiamond_;
  ::google::protobuf::int32 offlinetime_;
  ::google::protobuf::int32 editrequirelv_;
  ::google::protobuf::int32 leavecoolingtime_;
  ::google::protobuf::int64 expid_;
  ::google::protobuf::int32 houselimit_;
  ::google::protobuf::int32 housescore_;
  ::google::protobuf::int32 giftcd_;
  ::google::protobuf::int32 autocleancellnum_;
  ::google::protobuf::int32 dismiss_;
  ::google::protobuf::int32 transferguild_;
  ::google::protobuf::RepeatedPtrField< ::std::string> initialautocleanqs_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(13 + 31) / 32];

  friend void  protobuf_AddDesc_guild_2eproto();
  friend void protobuf_AssignDesc_guild_2eproto();
  friend void protobuf_ShutdownFile_guild_2eproto();

  void InitAsDefaultInstance();
  static guildconstant* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_guildconstant : public ::google::protobuf::Message {
 public:
  Sheet_guildconstant();
  virtual ~Sheet_guildconstant();

  Sheet_guildconstant(const Sheet_guildconstant& from);

  inline Sheet_guildconstant& operator=(const Sheet_guildconstant& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_guildconstant& default_instance();

  void Swap(Sheet_guildconstant* other);

  // implements Message ----------------------------------------------

  Sheet_guildconstant* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_guildconstant& from);
  void MergeFrom(const Sheet_guildconstant& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.guildconstant guildconstant_List = 1;
  inline int guildconstant_list_size() const;
  inline void clear_guildconstant_list();
  static const int kGuildconstantListFieldNumber = 1;
  inline const ::proto_ff::guildconstant& guildconstant_list(int index) const;
  inline ::proto_ff::guildconstant* mutable_guildconstant_list(int index);
  inline ::proto_ff::guildconstant* add_guildconstant_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::guildconstant >&
      guildconstant_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::guildconstant >*
      mutable_guildconstant_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_guildconstant)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::guildconstant > guildconstant_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_guild_2eproto();
  friend void protobuf_AssignDesc_guild_2eproto();
  friend void protobuf_ShutdownFile_guild_2eproto();

  void InitAsDefaultInstance();
  static Sheet_guildconstant* default_instance_;
};
// -------------------------------------------------------------------

class guildlevel : public ::google::protobuf::Message {
 public:
  guildlevel();
  virtual ~guildlevel();

  guildlevel(const guildlevel& from);

  inline guildlevel& operator=(const guildlevel& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const guildlevel& default_instance();

  void Swap(guildlevel* other);

  // implements Message ----------------------------------------------

  guildlevel* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const guildlevel& from);
  void MergeFrom(const guildlevel& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 guildLevel_Id = 1;
  inline bool has_guildlevel_id() const;
  inline void clear_guildlevel_id();
  static const int kGuildLevelIdFieldNumber = 1;
  inline ::google::protobuf::int32 guildlevel_id() const;
  inline void set_guildlevel_id(::google::protobuf::int32 value);

  // optional int32 guildLevel_EXP = 2;
  inline bool has_guildlevel_exp() const;
  inline void clear_guildlevel_exp();
  static const int kGuildLevelEXPFieldNumber = 2;
  inline ::google::protobuf::int32 guildlevel_exp() const;
  inline void set_guildlevel_exp(::google::protobuf::int32 value);

  // optional int32 guildLevel_member = 3;
  inline bool has_guildlevel_member() const;
  inline void clear_guildlevel_member();
  static const int kGuildLevelMemberFieldNumber = 3;
  inline ::google::protobuf::int32 guildlevel_member() const;
  inline void set_guildlevel_member(::google::protobuf::int32 value);

  // optional int32 guildLevel_VP = 4;
  inline bool has_guildlevel_vp() const;
  inline void clear_guildlevel_vp();
  static const int kGuildLevelVPFieldNumber = 4;
  inline ::google::protobuf::int32 guildlevel_vp() const;
  inline void set_guildlevel_vp(::google::protobuf::int32 value);

  // optional int32 guildLevel_NP = 5;
  inline bool has_guildlevel_np() const;
  inline void clear_guildlevel_np();
  static const int kGuildLevelNPFieldNumber = 5;
  inline ::google::protobuf::int32 guildlevel_np() const;
  inline void set_guildlevel_np(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.guildlevel)
 private:
  inline void set_has_guildlevel_id();
  inline void clear_has_guildlevel_id();
  inline void set_has_guildlevel_exp();
  inline void clear_has_guildlevel_exp();
  inline void set_has_guildlevel_member();
  inline void clear_has_guildlevel_member();
  inline void set_has_guildlevel_vp();
  inline void clear_has_guildlevel_vp();
  inline void set_has_guildlevel_np();
  inline void clear_has_guildlevel_np();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 guildlevel_id_;
  ::google::protobuf::int32 guildlevel_exp_;
  ::google::protobuf::int32 guildlevel_member_;
  ::google::protobuf::int32 guildlevel_vp_;
  ::google::protobuf::int32 guildlevel_np_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_guild_2eproto();
  friend void protobuf_AssignDesc_guild_2eproto();
  friend void protobuf_ShutdownFile_guild_2eproto();

  void InitAsDefaultInstance();
  static guildlevel* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_guildlevel : public ::google::protobuf::Message {
 public:
  Sheet_guildlevel();
  virtual ~Sheet_guildlevel();

  Sheet_guildlevel(const Sheet_guildlevel& from);

  inline Sheet_guildlevel& operator=(const Sheet_guildlevel& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_guildlevel& default_instance();

  void Swap(Sheet_guildlevel* other);

  // implements Message ----------------------------------------------

  Sheet_guildlevel* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_guildlevel& from);
  void MergeFrom(const Sheet_guildlevel& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.guildlevel guildlevel_List = 1;
  inline int guildlevel_list_size() const;
  inline void clear_guildlevel_list();
  static const int kGuildlevelListFieldNumber = 1;
  inline const ::proto_ff::guildlevel& guildlevel_list(int index) const;
  inline ::proto_ff::guildlevel* mutable_guildlevel_list(int index);
  inline ::proto_ff::guildlevel* add_guildlevel_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::guildlevel >&
      guildlevel_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::guildlevel >*
      mutable_guildlevel_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_guildlevel)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::guildlevel > guildlevel_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_guild_2eproto();
  friend void protobuf_AssignDesc_guild_2eproto();
  friend void protobuf_ShutdownFile_guild_2eproto();

  void InitAsDefaultInstance();
  static Sheet_guildlevel* default_instance_;
};
// -------------------------------------------------------------------

class guildcollege : public ::google::protobuf::Message {
 public:
  guildcollege();
  virtual ~guildcollege();

  guildcollege(const guildcollege& from);

  inline guildcollege& operator=(const guildcollege& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const guildcollege& default_instance();

  void Swap(guildcollege* other);

  // implements Message ----------------------------------------------

  guildcollege* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const guildcollege& from);
  void MergeFrom(const guildcollege& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 practiceId = 1;
  inline bool has_practiceid() const;
  inline void clear_practiceid();
  static const int kPracticeIdFieldNumber = 1;
  inline ::google::protobuf::int64 practiceid() const;
  inline void set_practiceid(::google::protobuf::int64 value);

  // optional int32 practiceType = 2;
  inline bool has_practicetype() const;
  inline void clear_practicetype();
  static const int kPracticeTypeFieldNumber = 2;
  inline ::google::protobuf::int32 practicetype() const;
  inline void set_practicetype(::google::protobuf::int32 value);

  // optional int32 learningNeed = 3;
  inline bool has_learningneed() const;
  inline void clear_learningneed();
  static const int kLearningNeedFieldNumber = 3;
  inline ::google::protobuf::int32 learningneed() const;
  inline void set_learningneed(::google::protobuf::int32 value);

  // optional int32 practiceLevel = 4;
  inline bool has_practicelevel() const;
  inline void clear_practicelevel();
  static const int kPracticeLevelFieldNumber = 4;
  inline ::google::protobuf::int32 practicelevel() const;
  inline void set_practicelevel(::google::protobuf::int32 value);

  // optional int32 playerLevelLimit = 5;
  inline bool has_playerlevellimit() const;
  inline void clear_playerlevellimit();
  static const int kPlayerLevelLimitFieldNumber = 5;
  inline ::google::protobuf::int32 playerlevellimit() const;
  inline void set_playerlevellimit(::google::protobuf::int32 value);

  // optional int32 attributeId = 6;
  inline bool has_attributeid() const;
  inline void clear_attributeid();
  static const int kAttributeIdFieldNumber = 6;
  inline ::google::protobuf::int32 attributeid() const;
  inline void set_attributeid(::google::protobuf::int32 value);

  // optional int32 attributeGain = 7;
  inline bool has_attributegain() const;
  inline void clear_attributegain();
  static const int kAttributeGainFieldNumber = 7;
  inline ::google::protobuf::int32 attributegain() const;
  inline void set_attributegain(::google::protobuf::int32 value);

  // optional int32 CostContribute = 8;
  inline bool has_costcontribute() const;
  inline void clear_costcontribute();
  static const int kCostContributeFieldNumber = 8;
  inline ::google::protobuf::int32 costcontribute() const;
  inline void set_costcontribute(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.guildcollege)
 private:
  inline void set_has_practiceid();
  inline void clear_has_practiceid();
  inline void set_has_practicetype();
  inline void clear_has_practicetype();
  inline void set_has_learningneed();
  inline void clear_has_learningneed();
  inline void set_has_practicelevel();
  inline void clear_has_practicelevel();
  inline void set_has_playerlevellimit();
  inline void clear_has_playerlevellimit();
  inline void set_has_attributeid();
  inline void clear_has_attributeid();
  inline void set_has_attributegain();
  inline void clear_has_attributegain();
  inline void set_has_costcontribute();
  inline void clear_has_costcontribute();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 practiceid_;
  ::google::protobuf::int32 practicetype_;
  ::google::protobuf::int32 learningneed_;
  ::google::protobuf::int32 practicelevel_;
  ::google::protobuf::int32 playerlevellimit_;
  ::google::protobuf::int32 attributeid_;
  ::google::protobuf::int32 attributegain_;
  ::google::protobuf::int32 costcontribute_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];

  friend void  protobuf_AddDesc_guild_2eproto();
  friend void protobuf_AssignDesc_guild_2eproto();
  friend void protobuf_ShutdownFile_guild_2eproto();

  void InitAsDefaultInstance();
  static guildcollege* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_guildcollege : public ::google::protobuf::Message {
 public:
  Sheet_guildcollege();
  virtual ~Sheet_guildcollege();

  Sheet_guildcollege(const Sheet_guildcollege& from);

  inline Sheet_guildcollege& operator=(const Sheet_guildcollege& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_guildcollege& default_instance();

  void Swap(Sheet_guildcollege* other);

  // implements Message ----------------------------------------------

  Sheet_guildcollege* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_guildcollege& from);
  void MergeFrom(const Sheet_guildcollege& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.guildcollege guildcollege_List = 1;
  inline int guildcollege_list_size() const;
  inline void clear_guildcollege_list();
  static const int kGuildcollegeListFieldNumber = 1;
  inline const ::proto_ff::guildcollege& guildcollege_list(int index) const;
  inline ::proto_ff::guildcollege* mutable_guildcollege_list(int index);
  inline ::proto_ff::guildcollege* add_guildcollege_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::guildcollege >&
      guildcollege_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::guildcollege >*
      mutable_guildcollege_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_guildcollege)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::guildcollege > guildcollege_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_guild_2eproto();
  friend void protobuf_AssignDesc_guild_2eproto();
  friend void protobuf_ShutdownFile_guild_2eproto();

  void InitAsDefaultInstance();
  static Sheet_guildcollege* default_instance_;
};
// -------------------------------------------------------------------

class guildposition : public ::google::protobuf::Message {
 public:
  guildposition();
  virtual ~guildposition();

  guildposition(const guildposition& from);

  inline guildposition& operator=(const guildposition& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const guildposition& default_instance();

  void Swap(guildposition* other);

  // implements Message ----------------------------------------------

  guildposition* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const guildposition& from);
  void MergeFrom(const guildposition& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 positionId = 1;
  inline bool has_positionid() const;
  inline void clear_positionid();
  static const int kPositionIdFieldNumber = 1;
  inline ::google::protobuf::int64 positionid() const;
  inline void set_positionid(::google::protobuf::int64 value);

  // optional int32 positionType = 2;
  inline bool has_positiontype() const;
  inline void clear_positiontype();
  static const int kPositionTypeFieldNumber = 2;
  inline ::google::protobuf::int32 positiontype() const;
  inline void set_positiontype(::google::protobuf::int32 value);

  // optional int32 allotMaterials = 3;
  inline bool has_allotmaterials() const;
  inline void clear_allotmaterials();
  static const int kAllotMaterialsFieldNumber = 3;
  inline ::google::protobuf::int32 allotmaterials() const;
  inline void set_allotmaterials(::google::protobuf::int32 value);

  // optional int32 admitNewcomer = 4;
  inline bool has_admitnewcomer() const;
  inline void clear_admitnewcomer();
  static const int kAdmitNewcomerFieldNumber = 4;
  inline ::google::protobuf::int32 admitnewcomer() const;
  inline void set_admitnewcomer(::google::protobuf::int32 value);

  // optional int32 appointAndRemoveVP = 5;
  inline bool has_appointandremovevp() const;
  inline void clear_appointandremovevp();
  static const int kAppointAndRemoveVPFieldNumber = 5;
  inline ::google::protobuf::int32 appointandremovevp() const;
  inline void set_appointandremovevp(::google::protobuf::int32 value);

  // optional int32 appointAndRemoveElder = 6;
  inline bool has_appointandremoveelder() const;
  inline void clear_appointandremoveelder();
  static const int kAppointAndRemoveElderFieldNumber = 6;
  inline ::google::protobuf::int32 appointandremoveelder() const;
  inline void set_appointandremoveelder(::google::protobuf::int32 value);

  // optional int32 expelVP = 7;
  inline bool has_expelvp() const;
  inline void clear_expelvp();
  static const int kExpelVPFieldNumber = 7;
  inline ::google::protobuf::int32 expelvp() const;
  inline void set_expelvp(::google::protobuf::int32 value);

  // optional int32 expelElder = 8;
  inline bool has_expelelder() const;
  inline void clear_expelelder();
  static const int kExpelElderFieldNumber = 8;
  inline ::google::protobuf::int32 expelelder() const;
  inline void set_expelelder(::google::protobuf::int32 value);

  // optional int32 expelMass = 9;
  inline bool has_expelmass() const;
  inline void clear_expelmass();
  static const int kExpelMassFieldNumber = 9;
  inline ::google::protobuf::int32 expelmass() const;
  inline void set_expelmass(::google::protobuf::int32 value);

  // optional int32 announcementEditing = 10;
  inline bool has_announcementediting() const;
  inline void clear_announcementediting();
  static const int kAnnouncementEditingFieldNumber = 10;
  inline ::google::protobuf::int32 announcementediting() const;
  inline void set_announcementediting(::google::protobuf::int32 value);

  // optional int32 joinCondition = 11;
  inline bool has_joincondition() const;
  inline void clear_joincondition();
  static const int kJoinConditionFieldNumber = 11;
  inline ::google::protobuf::int32 joincondition() const;
  inline void set_joincondition(::google::protobuf::int32 value);

  // optional int32 guildActivity = 12;
  inline bool has_guildactivity() const;
  inline void clear_guildactivity();
  static const int kGuildActivityFieldNumber = 12;
  inline ::google::protobuf::int32 guildactivity() const;
  inline void set_guildactivity(::google::protobuf::int32 value);

  // optional int32 dissolveAssignGuild = 13;
  inline bool has_dissolveassignguild() const;
  inline void clear_dissolveassignguild();
  static const int kDissolveAssignGuildFieldNumber = 13;
  inline ::google::protobuf::int32 dissolveassignguild() const;
  inline void set_dissolveassignguild(::google::protobuf::int32 value);

  // optional int32 clear = 14;
  inline bool has_clear() const;
  inline void clear_clear();
  static const int kClearFieldNumber = 14;
  inline ::google::protobuf::int32 clear() const;
  inline void set_clear(::google::protobuf::int32 value);

  // optional int32 changeName = 15;
  inline bool has_changename() const;
  inline void clear_changename();
  static const int kChangeNameFieldNumber = 15;
  inline ::google::protobuf::int32 changename() const;
  inline void set_changename(::google::protobuf::int32 value);

  // optional int32 automaticCleanDisplay = 16;
  inline bool has_automaticcleandisplay() const;
  inline void clear_automaticcleandisplay();
  static const int kAutomaticCleanDisplayFieldNumber = 16;
  inline ::google::protobuf::int32 automaticcleandisplay() const;
  inline void set_automaticcleandisplay(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.guildposition)
 private:
  inline void set_has_positionid();
  inline void clear_has_positionid();
  inline void set_has_positiontype();
  inline void clear_has_positiontype();
  inline void set_has_allotmaterials();
  inline void clear_has_allotmaterials();
  inline void set_has_admitnewcomer();
  inline void clear_has_admitnewcomer();
  inline void set_has_appointandremovevp();
  inline void clear_has_appointandremovevp();
  inline void set_has_appointandremoveelder();
  inline void clear_has_appointandremoveelder();
  inline void set_has_expelvp();
  inline void clear_has_expelvp();
  inline void set_has_expelelder();
  inline void clear_has_expelelder();
  inline void set_has_expelmass();
  inline void clear_has_expelmass();
  inline void set_has_announcementediting();
  inline void clear_has_announcementediting();
  inline void set_has_joincondition();
  inline void clear_has_joincondition();
  inline void set_has_guildactivity();
  inline void clear_has_guildactivity();
  inline void set_has_dissolveassignguild();
  inline void clear_has_dissolveassignguild();
  inline void set_has_clear();
  inline void clear_has_clear();
  inline void set_has_changename();
  inline void clear_has_changename();
  inline void set_has_automaticcleandisplay();
  inline void clear_has_automaticcleandisplay();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 positionid_;
  ::google::protobuf::int32 positiontype_;
  ::google::protobuf::int32 allotmaterials_;
  ::google::protobuf::int32 admitnewcomer_;
  ::google::protobuf::int32 appointandremovevp_;
  ::google::protobuf::int32 appointandremoveelder_;
  ::google::protobuf::int32 expelvp_;
  ::google::protobuf::int32 expelelder_;
  ::google::protobuf::int32 expelmass_;
  ::google::protobuf::int32 announcementediting_;
  ::google::protobuf::int32 joincondition_;
  ::google::protobuf::int32 guildactivity_;
  ::google::protobuf::int32 dissolveassignguild_;
  ::google::protobuf::int32 clear_;
  ::google::protobuf::int32 changename_;
  ::google::protobuf::int32 automaticcleandisplay_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(16 + 31) / 32];

  friend void  protobuf_AddDesc_guild_2eproto();
  friend void protobuf_AssignDesc_guild_2eproto();
  friend void protobuf_ShutdownFile_guild_2eproto();

  void InitAsDefaultInstance();
  static guildposition* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_guildposition : public ::google::protobuf::Message {
 public:
  Sheet_guildposition();
  virtual ~Sheet_guildposition();

  Sheet_guildposition(const Sheet_guildposition& from);

  inline Sheet_guildposition& operator=(const Sheet_guildposition& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_guildposition& default_instance();

  void Swap(Sheet_guildposition* other);

  // implements Message ----------------------------------------------

  Sheet_guildposition* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_guildposition& from);
  void MergeFrom(const Sheet_guildposition& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.guildposition guildposition_List = 1;
  inline int guildposition_list_size() const;
  inline void clear_guildposition_list();
  static const int kGuildpositionListFieldNumber = 1;
  inline const ::proto_ff::guildposition& guildposition_list(int index) const;
  inline ::proto_ff::guildposition* mutable_guildposition_list(int index);
  inline ::proto_ff::guildposition* add_guildposition_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::guildposition >&
      guildposition_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::guildposition >*
      mutable_guildposition_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_guildposition)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::guildposition > guildposition_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_guild_2eproto();
  friend void protobuf_AssignDesc_guild_2eproto();
  friend void protobuf_ShutdownFile_guild_2eproto();

  void InitAsDefaultInstance();
  static Sheet_guildposition* default_instance_;
};
// -------------------------------------------------------------------

class guildhouse : public ::google::protobuf::Message {
 public:
  guildhouse();
  virtual ~guildhouse();

  guildhouse(const guildhouse& from);

  inline guildhouse& operator=(const guildhouse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const guildhouse& default_instance();

  void Swap(guildhouse* other);

  // implements Message ----------------------------------------------

  guildhouse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const guildhouse& from);
  void MergeFrom(const guildhouse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 ID = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIDFieldNumber = 1;
  inline ::google::protobuf::int64 id() const;
  inline void set_id(::google::protobuf::int64 value);

  // optional int32 wearQuality = 2;
  inline bool has_wearquality() const;
  inline void clear_wearquality();
  static const int kWearQualityFieldNumber = 2;
  inline ::google::protobuf::int32 wearquality() const;
  inline void set_wearquality(::google::protobuf::int32 value);

  // optional int32 quality = 3;
  inline bool has_quality() const;
  inline void clear_quality();
  static const int kQualityFieldNumber = 3;
  inline ::google::protobuf::int32 quality() const;
  inline void set_quality(::google::protobuf::int32 value);

  // optional int32 houseScore = 4;
  inline bool has_housescore() const;
  inline void clear_housescore();
  static const int kHouseScoreFieldNumber = 4;
  inline ::google::protobuf::int32 housescore() const;
  inline void set_housescore(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.guildhouse)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_wearquality();
  inline void clear_has_wearquality();
  inline void set_has_quality();
  inline void clear_has_quality();
  inline void set_has_housescore();
  inline void clear_has_housescore();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 id_;
  ::google::protobuf::int32 wearquality_;
  ::google::protobuf::int32 quality_;
  ::google::protobuf::int32 housescore_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_guild_2eproto();
  friend void protobuf_AssignDesc_guild_2eproto();
  friend void protobuf_ShutdownFile_guild_2eproto();

  void InitAsDefaultInstance();
  static guildhouse* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_guildhouse : public ::google::protobuf::Message {
 public:
  Sheet_guildhouse();
  virtual ~Sheet_guildhouse();

  Sheet_guildhouse(const Sheet_guildhouse& from);

  inline Sheet_guildhouse& operator=(const Sheet_guildhouse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_guildhouse& default_instance();

  void Swap(Sheet_guildhouse* other);

  // implements Message ----------------------------------------------

  Sheet_guildhouse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_guildhouse& from);
  void MergeFrom(const Sheet_guildhouse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.guildhouse guildhouse_List = 1;
  inline int guildhouse_list_size() const;
  inline void clear_guildhouse_list();
  static const int kGuildhouseListFieldNumber = 1;
  inline const ::proto_ff::guildhouse& guildhouse_list(int index) const;
  inline ::proto_ff::guildhouse* mutable_guildhouse_list(int index);
  inline ::proto_ff::guildhouse* add_guildhouse_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::guildhouse >&
      guildhouse_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::guildhouse >*
      mutable_guildhouse_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_guildhouse)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::guildhouse > guildhouse_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_guild_2eproto();
  friend void protobuf_AssignDesc_guild_2eproto();
  friend void protobuf_ShutdownFile_guild_2eproto();

  void InitAsDefaultInstance();
  static Sheet_guildhouse* default_instance_;
};
// -------------------------------------------------------------------

class guildgift : public ::google::protobuf::Message {
 public:
  guildgift();
  virtual ~guildgift();

  guildgift(const guildgift& from);

  inline guildgift& operator=(const guildgift& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const guildgift& default_instance();

  void Swap(guildgift* other);

  // implements Message ----------------------------------------------

  guildgift* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const guildgift& from);
  void MergeFrom(const guildgift& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 ID = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIDFieldNumber = 1;
  inline ::google::protobuf::int64 id() const;
  inline void set_id(::google::protobuf::int64 value);

  // optional int32 type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // optional int32 money = 3;
  inline bool has_money() const;
  inline void clear_money();
  static const int kMoneyFieldNumber = 3;
  inline ::google::protobuf::int32 money() const;
  inline void set_money(::google::protobuf::int32 value);

  // optional int32 num = 4;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 4;
  inline ::google::protobuf::int32 num() const;
  inline void set_num(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.guildgift)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_money();
  inline void clear_has_money();
  inline void set_has_num();
  inline void clear_has_num();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 id_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 money_;
  ::google::protobuf::int32 num_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_guild_2eproto();
  friend void protobuf_AssignDesc_guild_2eproto();
  friend void protobuf_ShutdownFile_guild_2eproto();

  void InitAsDefaultInstance();
  static guildgift* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_guildgift : public ::google::protobuf::Message {
 public:
  Sheet_guildgift();
  virtual ~Sheet_guildgift();

  Sheet_guildgift(const Sheet_guildgift& from);

  inline Sheet_guildgift& operator=(const Sheet_guildgift& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_guildgift& default_instance();

  void Swap(Sheet_guildgift* other);

  // implements Message ----------------------------------------------

  Sheet_guildgift* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_guildgift& from);
  void MergeFrom(const Sheet_guildgift& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.guildgift guildgift_List = 1;
  inline int guildgift_list_size() const;
  inline void clear_guildgift_list();
  static const int kGuildgiftListFieldNumber = 1;
  inline const ::proto_ff::guildgift& guildgift_list(int index) const;
  inline ::proto_ff::guildgift* mutable_guildgift_list(int index);
  inline ::proto_ff::guildgift* add_guildgift_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::guildgift >&
      guildgift_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::guildgift >*
      mutable_guildgift_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_guildgift)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::guildgift > guildgift_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_guild_2eproto();
  friend void protobuf_AssignDesc_guild_2eproto();
  friend void protobuf_ShutdownFile_guild_2eproto();

  void InitAsDefaultInstance();
  static Sheet_guildgift* default_instance_;
};
// -------------------------------------------------------------------

class guildguildance : public ::google::protobuf::Message {
 public:
  guildguildance();
  virtual ~guildguildance();

  guildguildance(const guildguildance& from);

  inline guildguildance& operator=(const guildguildance& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const guildguildance& default_instance();

  void Swap(guildguildance* other);

  // implements Message ----------------------------------------------

  guildguildance* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const guildguildance& from);
  void MergeFrom(const guildguildance& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 guidanceId = 1;
  inline bool has_guidanceid() const;
  inline void clear_guidanceid();
  static const int kGuidanceIdFieldNumber = 1;
  inline ::google::protobuf::int32 guidanceid() const;
  inline void set_guidanceid(::google::protobuf::int32 value);

  // optional int32 guidanceType = 2;
  inline bool has_guidancetype() const;
  inline void clear_guidancetype();
  static const int kGuidanceTypeFieldNumber = 2;
  inline ::google::protobuf::int32 guidancetype() const;
  inline void set_guidancetype(::google::protobuf::int32 value);

  // optional int32 levelLimit = 3;
  inline bool has_levellimit() const;
  inline void clear_levellimit();
  static const int kLevelLimitFieldNumber = 3;
  inline ::google::protobuf::int32 levellimit() const;
  inline void set_levellimit(::google::protobuf::int32 value);

  // optional int32 triggerTpye = 4;
  inline bool has_triggertpye() const;
  inline void clear_triggertpye();
  static const int kTriggerTpyeFieldNumber = 4;
  inline ::google::protobuf::int32 triggertpye() const;
  inline void set_triggertpye(::google::protobuf::int32 value);

  // optional int32 cognateNpcId = 5;
  inline bool has_cognatenpcid() const;
  inline void clear_cognatenpcid();
  static const int kCognateNpcIdFieldNumber = 5;
  inline ::google::protobuf::int32 cognatenpcid() const;
  inline void set_cognatenpcid(::google::protobuf::int32 value);

  // optional int32 cognateUI = 6;
  inline bool has_cognateui() const;
  inline void clear_cognateui();
  static const int kCognateUIFieldNumber = 6;
  inline ::google::protobuf::int32 cognateui() const;
  inline void set_cognateui(::google::protobuf::int32 value);

  // optional int32 cognateActiveId = 7;
  inline bool has_cognateactiveid() const;
  inline void clear_cognateactiveid();
  static const int kCognateActiveIdFieldNumber = 7;
  inline ::google::protobuf::int32 cognateactiveid() const;
  inline void set_cognateactiveid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.guildguildance)
 private:
  inline void set_has_guidanceid();
  inline void clear_has_guidanceid();
  inline void set_has_guidancetype();
  inline void clear_has_guidancetype();
  inline void set_has_levellimit();
  inline void clear_has_levellimit();
  inline void set_has_triggertpye();
  inline void clear_has_triggertpye();
  inline void set_has_cognatenpcid();
  inline void clear_has_cognatenpcid();
  inline void set_has_cognateui();
  inline void clear_has_cognateui();
  inline void set_has_cognateactiveid();
  inline void clear_has_cognateactiveid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 guidanceid_;
  ::google::protobuf::int32 guidancetype_;
  ::google::protobuf::int32 levellimit_;
  ::google::protobuf::int32 triggertpye_;
  ::google::protobuf::int32 cognatenpcid_;
  ::google::protobuf::int32 cognateui_;
  ::google::protobuf::int32 cognateactiveid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  friend void  protobuf_AddDesc_guild_2eproto();
  friend void protobuf_AssignDesc_guild_2eproto();
  friend void protobuf_ShutdownFile_guild_2eproto();

  void InitAsDefaultInstance();
  static guildguildance* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_guildguildance : public ::google::protobuf::Message {
 public:
  Sheet_guildguildance();
  virtual ~Sheet_guildguildance();

  Sheet_guildguildance(const Sheet_guildguildance& from);

  inline Sheet_guildguildance& operator=(const Sheet_guildguildance& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_guildguildance& default_instance();

  void Swap(Sheet_guildguildance* other);

  // implements Message ----------------------------------------------

  Sheet_guildguildance* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_guildguildance& from);
  void MergeFrom(const Sheet_guildguildance& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.guildguildance guildguildance_List = 1;
  inline int guildguildance_list_size() const;
  inline void clear_guildguildance_list();
  static const int kGuildguildanceListFieldNumber = 1;
  inline const ::proto_ff::guildguildance& guildguildance_list(int index) const;
  inline ::proto_ff::guildguildance* mutable_guildguildance_list(int index);
  inline ::proto_ff::guildguildance* add_guildguildance_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::guildguildance >&
      guildguildance_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::guildguildance >*
      mutable_guildguildance_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_guildguildance)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::guildguildance > guildguildance_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_guild_2eproto();
  friend void protobuf_AssignDesc_guild_2eproto();
  friend void protobuf_ShutdownFile_guild_2eproto();

  void InitAsDefaultInstance();
  static Sheet_guildguildance* default_instance_;
};
// -------------------------------------------------------------------

class guildwarconstant : public ::google::protobuf::Message {
 public:
  guildwarconstant();
  virtual ~guildwarconstant();

  guildwarconstant(const guildwarconstant& from);

  inline guildwarconstant& operator=(const guildwarconstant& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const guildwarconstant& default_instance();

  void Swap(guildwarconstant* other);

  // implements Message ----------------------------------------------

  guildwarconstant* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const guildwarconstant& from);
  void MergeFrom(const guildwarconstant& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 warid = 1;
  inline bool has_warid() const;
  inline void clear_warid();
  static const int kWaridFieldNumber = 1;
  inline ::google::protobuf::int64 warid() const;
  inline void set_warid(::google::protobuf::int64 value);

  // optional int32 signopenCycle = 2;
  inline bool has_signopencycle() const;
  inline void clear_signopencycle();
  static const int kSignopenCycleFieldNumber = 2;
  inline ::google::protobuf::int32 signopencycle() const;
  inline void set_signopencycle(::google::protobuf::int32 value);

  // optional string signopenTime = 3;
  inline bool has_signopentime() const;
  inline void clear_signopentime();
  static const int kSignopenTimeFieldNumber = 3;
  inline const ::std::string& signopentime() const;
  inline void set_signopentime(const ::std::string& value);
  inline void set_signopentime(const char* value);
  inline void set_signopentime(const char* value, size_t size);
  inline ::std::string* mutable_signopentime();
  inline ::std::string* release_signopentime();
  inline void set_allocated_signopentime(::std::string* signopentime);

  // optional int32 signclosedCycle = 4;
  inline bool has_signclosedcycle() const;
  inline void clear_signclosedcycle();
  static const int kSignclosedCycleFieldNumber = 4;
  inline ::google::protobuf::int32 signclosedcycle() const;
  inline void set_signclosedcycle(::google::protobuf::int32 value);

  // optional string signclosedTime = 5;
  inline bool has_signclosedtime() const;
  inline void clear_signclosedtime();
  static const int kSignclosedTimeFieldNumber = 5;
  inline const ::std::string& signclosedtime() const;
  inline void set_signclosedtime(const ::std::string& value);
  inline void set_signclosedtime(const char* value);
  inline void set_signclosedtime(const char* value, size_t size);
  inline ::std::string* mutable_signclosedtime();
  inline ::std::string* release_signclosedtime();
  inline void set_allocated_signclosedtime(::std::string* signclosedtime);

  // optional int32 guildPosition = 6;
  inline bool has_guildposition() const;
  inline void clear_guildposition();
  static const int kGuildPositionFieldNumber = 6;
  inline ::google::protobuf::int32 guildposition() const;
  inline void set_guildposition(::google::protobuf::int32 value);

  // optional int32 guildNum = 7;
  inline bool has_guildnum() const;
  inline void clear_guildnum();
  static const int kGuildNumFieldNumber = 7;
  inline ::google::protobuf::int32 guildnum() const;
  inline void set_guildnum(::google::protobuf::int32 value);

  // optional int32 guildLevel = 8;
  inline bool has_guildlevel() const;
  inline void clear_guildlevel();
  static const int kGuildLevelFieldNumber = 8;
  inline ::google::protobuf::int32 guildlevel() const;
  inline void set_guildlevel(::google::protobuf::int32 value);

  // optional int32 enteropenCycle = 9;
  inline bool has_enteropencycle() const;
  inline void clear_enteropencycle();
  static const int kEnteropenCycleFieldNumber = 9;
  inline ::google::protobuf::int32 enteropencycle() const;
  inline void set_enteropencycle(::google::protobuf::int32 value);

  // optional string enteropenTime = 10;
  inline bool has_enteropentime() const;
  inline void clear_enteropentime();
  static const int kEnteropenTimeFieldNumber = 10;
  inline const ::std::string& enteropentime() const;
  inline void set_enteropentime(const ::std::string& value);
  inline void set_enteropentime(const char* value);
  inline void set_enteropentime(const char* value, size_t size);
  inline ::std::string* mutable_enteropentime();
  inline ::std::string* release_enteropentime();
  inline void set_allocated_enteropentime(::std::string* enteropentime);

  // optional int32 enterclosedCycle = 11;
  inline bool has_enterclosedcycle() const;
  inline void clear_enterclosedcycle();
  static const int kEnterclosedCycleFieldNumber = 11;
  inline ::google::protobuf::int32 enterclosedcycle() const;
  inline void set_enterclosedcycle(::google::protobuf::int32 value);

  // optional string enterclosedTime = 12;
  inline bool has_enterclosedtime() const;
  inline void clear_enterclosedtime();
  static const int kEnterclosedTimeFieldNumber = 12;
  inline const ::std::string& enterclosedtime() const;
  inline void set_enterclosedtime(const ::std::string& value);
  inline void set_enterclosedtime(const char* value);
  inline void set_enterclosedtime(const char* value, size_t size);
  inline ::std::string* mutable_enterclosedtime();
  inline ::std::string* release_enterclosedtime();
  inline void set_allocated_enterclosedtime(::std::string* enterclosedtime);

  // optional int32 guildwarBaseScore = 13;
  inline bool has_guildwarbasescore() const;
  inline void clear_guildwarbasescore();
  static const int kGuildwarBaseScoreFieldNumber = 13;
  inline ::google::protobuf::int32 guildwarbasescore() const;
  inline void set_guildwarbasescore(::google::protobuf::int32 value);

  // optional int32 guildwarWinScore = 14;
  inline bool has_guildwarwinscore() const;
  inline void clear_guildwarwinscore();
  static const int kGuildwarWinScoreFieldNumber = 14;
  inline ::google::protobuf::int32 guildwarwinscore() const;
  inline void set_guildwarwinscore(::google::protobuf::int32 value);

  // optional int32 guildwarLoseScore = 15;
  inline bool has_guildwarlosescore() const;
  inline void clear_guildwarlosescore();
  static const int kGuildwarLoseScoreFieldNumber = 15;
  inline ::google::protobuf::int32 guildwarlosescore() const;
  inline void set_guildwarlosescore(::google::protobuf::int32 value);

  // optional int32 guildwarDrawScore = 16;
  inline bool has_guildwardrawscore() const;
  inline void clear_guildwardrawscore();
  static const int kGuildwarDrawScoreFieldNumber = 16;
  inline ::google::protobuf::int32 guildwardrawscore() const;
  inline void set_guildwardrawscore(::google::protobuf::int32 value);

  // optional int32 maxMaterial = 17;
  inline bool has_maxmaterial() const;
  inline void clear_maxmaterial();
  static const int kMaxMaterialFieldNumber = 17;
  inline ::google::protobuf::int32 maxmaterial() const;
  inline void set_maxmaterial(::google::protobuf::int32 value);

  // optional int32 soldierCostMaterial = 18;
  inline bool has_soldiercostmaterial() const;
  inline void clear_soldiercostmaterial();
  static const int kSoldierCostMaterialFieldNumber = 18;
  inline ::google::protobuf::int32 soldiercostmaterial() const;
  inline void set_soldiercostmaterial(::google::protobuf::int32 value);

  // optional int32 soldierNum = 19;
  inline bool has_soldiernum() const;
  inline void clear_soldiernum();
  static const int kSoldierNumFieldNumber = 19;
  inline ::google::protobuf::int32 soldiernum() const;
  inline void set_soldiernum(::google::protobuf::int32 value);

  // optional int32 soldierCD = 20;
  inline bool has_soldiercd() const;
  inline void clear_soldiercd();
  static const int kSoldierCDFieldNumber = 20;
  inline ::google::protobuf::int32 soldiercd() const;
  inline void set_soldiercd(::google::protobuf::int32 value);

  // optional int32 renewBaseCost = 21;
  inline bool has_renewbasecost() const;
  inline void clear_renewbasecost();
  static const int kRenewBaseCostFieldNumber = 21;
  inline ::google::protobuf::int32 renewbasecost() const;
  inline void set_renewbasecost(::google::protobuf::int32 value);

  // optional int32 renewBaseHP = 22;
  inline bool has_renewbasehp() const;
  inline void clear_renewbasehp();
  static const int kRenewBaseHPFieldNumber = 22;
  inline ::google::protobuf::int32 renewbasehp() const;
  inline void set_renewbasehp(::google::protobuf::int32 value);

  // optional int32 renewBaseCD = 23;
  inline bool has_renewbasecd() const;
  inline void clear_renewbasecd();
  static const int kRenewBaseCDFieldNumber = 23;
  inline ::google::protobuf::int32 renewbasecd() const;
  inline void set_renewbasecd(::google::protobuf::int32 value);

  // optional int32 reviveCD = 24;
  inline bool has_revivecd() const;
  inline void clear_revivecd();
  static const int kReviveCDFieldNumber = 24;
  inline ::google::protobuf::int32 revivecd() const;
  inline void set_revivecd(::google::protobuf::int32 value);

  // optional int64 guildwarWinItem = 25;
  inline bool has_guildwarwinitem() const;
  inline void clear_guildwarwinitem();
  static const int kGuildwarWinItemFieldNumber = 25;
  inline ::google::protobuf::int64 guildwarwinitem() const;
  inline void set_guildwarwinitem(::google::protobuf::int64 value);

  // optional int32 guildwarWinNum = 26;
  inline bool has_guildwarwinnum() const;
  inline void clear_guildwarwinnum();
  static const int kGuildwarWinNumFieldNumber = 26;
  inline ::google::protobuf::int32 guildwarwinnum() const;
  inline void set_guildwarwinnum(::google::protobuf::int32 value);

  // optional int64 guildwarLoseItem = 27;
  inline bool has_guildwarloseitem() const;
  inline void clear_guildwarloseitem();
  static const int kGuildwarLoseItemFieldNumber = 27;
  inline ::google::protobuf::int64 guildwarloseitem() const;
  inline void set_guildwarloseitem(::google::protobuf::int64 value);

  // optional int32 guildwarLoseNum = 28;
  inline bool has_guildwarlosenum() const;
  inline void clear_guildwarlosenum();
  static const int kGuildwarLoseNumFieldNumber = 28;
  inline ::google::protobuf::int32 guildwarlosenum() const;
  inline void set_guildwarlosenum(::google::protobuf::int32 value);

  // optional int64 guildwarDrawItem = 29;
  inline bool has_guildwardrawitem() const;
  inline void clear_guildwardrawitem();
  static const int kGuildwarDrawItemFieldNumber = 29;
  inline ::google::protobuf::int64 guildwardrawitem() const;
  inline void set_guildwardrawitem(::google::protobuf::int64 value);

  // optional int32 guildwarDrawNum = 30;
  inline bool has_guildwardrawnum() const;
  inline void clear_guildwardrawnum();
  static const int kGuildwarDrawNumFieldNumber = 30;
  inline ::google::protobuf::int32 guildwardrawnum() const;
  inline void set_guildwardrawnum(::google::protobuf::int32 value);

  // optional int64 MaterialId = 31;
  inline bool has_materialid() const;
  inline void clear_materialid();
  static const int kMaterialIdFieldNumber = 31;
  inline ::google::protobuf::int64 materialid() const;
  inline void set_materialid(::google::protobuf::int64 value);

  // optional int32 MaterialConversion = 32;
  inline bool has_materialconversion() const;
  inline void clear_materialconversion();
  static const int kMaterialConversionFieldNumber = 32;
  inline ::google::protobuf::int32 materialconversion() const;
  inline void set_materialconversion(::google::protobuf::int32 value);

  // optional int32 GuildWarExp = 33;
  inline bool has_guildwarexp() const;
  inline void clear_guildwarexp();
  static const int kGuildWarExpFieldNumber = 33;
  inline ::google::protobuf::int32 guildwarexp() const;
  inline void set_guildwarexp(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.guildwarconstant)
 private:
  inline void set_has_warid();
  inline void clear_has_warid();
  inline void set_has_signopencycle();
  inline void clear_has_signopencycle();
  inline void set_has_signopentime();
  inline void clear_has_signopentime();
  inline void set_has_signclosedcycle();
  inline void clear_has_signclosedcycle();
  inline void set_has_signclosedtime();
  inline void clear_has_signclosedtime();
  inline void set_has_guildposition();
  inline void clear_has_guildposition();
  inline void set_has_guildnum();
  inline void clear_has_guildnum();
  inline void set_has_guildlevel();
  inline void clear_has_guildlevel();
  inline void set_has_enteropencycle();
  inline void clear_has_enteropencycle();
  inline void set_has_enteropentime();
  inline void clear_has_enteropentime();
  inline void set_has_enterclosedcycle();
  inline void clear_has_enterclosedcycle();
  inline void set_has_enterclosedtime();
  inline void clear_has_enterclosedtime();
  inline void set_has_guildwarbasescore();
  inline void clear_has_guildwarbasescore();
  inline void set_has_guildwarwinscore();
  inline void clear_has_guildwarwinscore();
  inline void set_has_guildwarlosescore();
  inline void clear_has_guildwarlosescore();
  inline void set_has_guildwardrawscore();
  inline void clear_has_guildwardrawscore();
  inline void set_has_maxmaterial();
  inline void clear_has_maxmaterial();
  inline void set_has_soldiercostmaterial();
  inline void clear_has_soldiercostmaterial();
  inline void set_has_soldiernum();
  inline void clear_has_soldiernum();
  inline void set_has_soldiercd();
  inline void clear_has_soldiercd();
  inline void set_has_renewbasecost();
  inline void clear_has_renewbasecost();
  inline void set_has_renewbasehp();
  inline void clear_has_renewbasehp();
  inline void set_has_renewbasecd();
  inline void clear_has_renewbasecd();
  inline void set_has_revivecd();
  inline void clear_has_revivecd();
  inline void set_has_guildwarwinitem();
  inline void clear_has_guildwarwinitem();
  inline void set_has_guildwarwinnum();
  inline void clear_has_guildwarwinnum();
  inline void set_has_guildwarloseitem();
  inline void clear_has_guildwarloseitem();
  inline void set_has_guildwarlosenum();
  inline void clear_has_guildwarlosenum();
  inline void set_has_guildwardrawitem();
  inline void clear_has_guildwardrawitem();
  inline void set_has_guildwardrawnum();
  inline void clear_has_guildwardrawnum();
  inline void set_has_materialid();
  inline void clear_has_materialid();
  inline void set_has_materialconversion();
  inline void clear_has_materialconversion();
  inline void set_has_guildwarexp();
  inline void clear_has_guildwarexp();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 warid_;
  ::std::string* signopentime_;
  ::google::protobuf::int32 signopencycle_;
  ::google::protobuf::int32 signclosedcycle_;
  ::std::string* signclosedtime_;
  ::google::protobuf::int32 guildposition_;
  ::google::protobuf::int32 guildnum_;
  ::google::protobuf::int32 guildlevel_;
  ::google::protobuf::int32 enteropencycle_;
  ::std::string* enteropentime_;
  ::std::string* enterclosedtime_;
  ::google::protobuf::int32 enterclosedcycle_;
  ::google::protobuf::int32 guildwarbasescore_;
  ::google::protobuf::int32 guildwarwinscore_;
  ::google::protobuf::int32 guildwarlosescore_;
  ::google::protobuf::int32 guildwardrawscore_;
  ::google::protobuf::int32 maxmaterial_;
  ::google::protobuf::int32 soldiercostmaterial_;
  ::google::protobuf::int32 soldiernum_;
  ::google::protobuf::int32 soldiercd_;
  ::google::protobuf::int32 renewbasecost_;
  ::google::protobuf::int32 renewbasehp_;
  ::google::protobuf::int32 renewbasecd_;
  ::google::protobuf::int64 guildwarwinitem_;
  ::google::protobuf::int32 revivecd_;
  ::google::protobuf::int32 guildwarwinnum_;
  ::google::protobuf::int64 guildwarloseitem_;
  ::google::protobuf::int64 guildwardrawitem_;
  ::google::protobuf::int32 guildwarlosenum_;
  ::google::protobuf::int32 guildwardrawnum_;
  ::google::protobuf::int64 materialid_;
  ::google::protobuf::int32 materialconversion_;
  ::google::protobuf::int32 guildwarexp_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(33 + 31) / 32];

  friend void  protobuf_AddDesc_guild_2eproto();
  friend void protobuf_AssignDesc_guild_2eproto();
  friend void protobuf_ShutdownFile_guild_2eproto();

  void InitAsDefaultInstance();
  static guildwarconstant* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_guildwarconstant : public ::google::protobuf::Message {
 public:
  Sheet_guildwarconstant();
  virtual ~Sheet_guildwarconstant();

  Sheet_guildwarconstant(const Sheet_guildwarconstant& from);

  inline Sheet_guildwarconstant& operator=(const Sheet_guildwarconstant& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_guildwarconstant& default_instance();

  void Swap(Sheet_guildwarconstant* other);

  // implements Message ----------------------------------------------

  Sheet_guildwarconstant* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_guildwarconstant& from);
  void MergeFrom(const Sheet_guildwarconstant& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.guildwarconstant guildwarconstant_List = 1;
  inline int guildwarconstant_list_size() const;
  inline void clear_guildwarconstant_list();
  static const int kGuildwarconstantListFieldNumber = 1;
  inline const ::proto_ff::guildwarconstant& guildwarconstant_list(int index) const;
  inline ::proto_ff::guildwarconstant* mutable_guildwarconstant_list(int index);
  inline ::proto_ff::guildwarconstant* add_guildwarconstant_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::guildwarconstant >&
      guildwarconstant_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::guildwarconstant >*
      mutable_guildwarconstant_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_guildwarconstant)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::guildwarconstant > guildwarconstant_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_guild_2eproto();
  friend void protobuf_AssignDesc_guild_2eproto();
  friend void protobuf_ShutdownFile_guild_2eproto();

  void InitAsDefaultInstance();
  static Sheet_guildwarconstant* default_instance_;
};
// -------------------------------------------------------------------

class guildwarmorale : public ::google::protobuf::Message {
 public:
  guildwarmorale();
  virtual ~guildwarmorale();

  guildwarmorale(const guildwarmorale& from);

  inline guildwarmorale& operator=(const guildwarmorale& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const guildwarmorale& default_instance();

  void Swap(guildwarmorale* other);

  // implements Message ----------------------------------------------

  guildwarmorale* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const guildwarmorale& from);
  void MergeFrom(const guildwarmorale& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 moraleLevel = 1;
  inline bool has_moralelevel() const;
  inline void clear_moralelevel();
  static const int kMoraleLevelFieldNumber = 1;
  inline ::google::protobuf::int64 moralelevel() const;
  inline void set_moralelevel(::google::protobuf::int64 value);

  // optional int32 costMaterial = 2;
  inline bool has_costmaterial() const;
  inline void clear_costmaterial();
  static const int kCostMaterialFieldNumber = 2;
  inline ::google::protobuf::int32 costmaterial() const;
  inline void set_costmaterial(::google::protobuf::int32 value);

  // optional int64 skillId = 3;
  inline bool has_skillid() const;
  inline void clear_skillid();
  static const int kSkillIdFieldNumber = 3;
  inline ::google::protobuf::int64 skillid() const;
  inline void set_skillid(::google::protobuf::int64 value);

  // optional int32 skillLevel = 4;
  inline bool has_skilllevel() const;
  inline void clear_skilllevel();
  static const int kSkillLevelFieldNumber = 4;
  inline ::google::protobuf::int32 skilllevel() const;
  inline void set_skilllevel(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.guildwarmorale)
 private:
  inline void set_has_moralelevel();
  inline void clear_has_moralelevel();
  inline void set_has_costmaterial();
  inline void clear_has_costmaterial();
  inline void set_has_skillid();
  inline void clear_has_skillid();
  inline void set_has_skilllevel();
  inline void clear_has_skilllevel();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 moralelevel_;
  ::google::protobuf::int64 skillid_;
  ::google::protobuf::int32 costmaterial_;
  ::google::protobuf::int32 skilllevel_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_guild_2eproto();
  friend void protobuf_AssignDesc_guild_2eproto();
  friend void protobuf_ShutdownFile_guild_2eproto();

  void InitAsDefaultInstance();
  static guildwarmorale* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_guildwarmorale : public ::google::protobuf::Message {
 public:
  Sheet_guildwarmorale();
  virtual ~Sheet_guildwarmorale();

  Sheet_guildwarmorale(const Sheet_guildwarmorale& from);

  inline Sheet_guildwarmorale& operator=(const Sheet_guildwarmorale& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_guildwarmorale& default_instance();

  void Swap(Sheet_guildwarmorale* other);

  // implements Message ----------------------------------------------

  Sheet_guildwarmorale* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_guildwarmorale& from);
  void MergeFrom(const Sheet_guildwarmorale& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.guildwarmorale guildwarmorale_List = 1;
  inline int guildwarmorale_list_size() const;
  inline void clear_guildwarmorale_list();
  static const int kGuildwarmoraleListFieldNumber = 1;
  inline const ::proto_ff::guildwarmorale& guildwarmorale_list(int index) const;
  inline ::proto_ff::guildwarmorale* mutable_guildwarmorale_list(int index);
  inline ::proto_ff::guildwarmorale* add_guildwarmorale_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::guildwarmorale >&
      guildwarmorale_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::guildwarmorale >*
      mutable_guildwarmorale_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_guildwarmorale)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::guildwarmorale > guildwarmorale_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_guild_2eproto();
  friend void protobuf_AssignDesc_guild_2eproto();
  friend void protobuf_ShutdownFile_guild_2eproto();

  void InitAsDefaultInstance();
  static Sheet_guildwarmorale* default_instance_;
};
// -------------------------------------------------------------------

class guildwarrevive : public ::google::protobuf::Message {
 public:
  guildwarrevive();
  virtual ~guildwarrevive();

  guildwarrevive(const guildwarrevive& from);

  inline guildwarrevive& operator=(const guildwarrevive& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const guildwarrevive& default_instance();

  void Swap(guildwarrevive* other);

  // implements Message ----------------------------------------------

  guildwarrevive* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const guildwarrevive& from);
  void MergeFrom(const guildwarrevive& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 reviveNum = 1;
  inline bool has_revivenum() const;
  inline void clear_revivenum();
  static const int kReviveNumFieldNumber = 1;
  inline ::google::protobuf::int32 revivenum() const;
  inline void set_revivenum(::google::protobuf::int32 value);

  // optional int32 reviveCost = 2;
  inline bool has_revivecost() const;
  inline void clear_revivecost();
  static const int kReviveCostFieldNumber = 2;
  inline ::google::protobuf::int32 revivecost() const;
  inline void set_revivecost(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.guildwarrevive)
 private:
  inline void set_has_revivenum();
  inline void clear_has_revivenum();
  inline void set_has_revivecost();
  inline void clear_has_revivecost();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 revivenum_;
  ::google::protobuf::int32 revivecost_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_guild_2eproto();
  friend void protobuf_AssignDesc_guild_2eproto();
  friend void protobuf_ShutdownFile_guild_2eproto();

  void InitAsDefaultInstance();
  static guildwarrevive* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_guildwarrevive : public ::google::protobuf::Message {
 public:
  Sheet_guildwarrevive();
  virtual ~Sheet_guildwarrevive();

  Sheet_guildwarrevive(const Sheet_guildwarrevive& from);

  inline Sheet_guildwarrevive& operator=(const Sheet_guildwarrevive& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_guildwarrevive& default_instance();

  void Swap(Sheet_guildwarrevive* other);

  // implements Message ----------------------------------------------

  Sheet_guildwarrevive* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_guildwarrevive& from);
  void MergeFrom(const Sheet_guildwarrevive& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.guildwarrevive guildwarrevive_List = 1;
  inline int guildwarrevive_list_size() const;
  inline void clear_guildwarrevive_list();
  static const int kGuildwarreviveListFieldNumber = 1;
  inline const ::proto_ff::guildwarrevive& guildwarrevive_list(int index) const;
  inline ::proto_ff::guildwarrevive* mutable_guildwarrevive_list(int index);
  inline ::proto_ff::guildwarrevive* add_guildwarrevive_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::guildwarrevive >&
      guildwarrevive_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::guildwarrevive >*
      mutable_guildwarrevive_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_guildwarrevive)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::guildwarrevive > guildwarrevive_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_guild_2eproto();
  friend void protobuf_AssignDesc_guild_2eproto();
  friend void protobuf_ShutdownFile_guild_2eproto();

  void InitAsDefaultInstance();
  static Sheet_guildwarrevive* default_instance_;
};
// ===================================================================


// ===================================================================

// guildconstant

// optional int64 constantid = 1;
inline bool guildconstant::has_constantid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void guildconstant::set_has_constantid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void guildconstant::clear_has_constantid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void guildconstant::clear_constantid() {
  constantid_ = GOOGLE_LONGLONG(0);
  clear_has_constantid();
}
inline ::google::protobuf::int64 guildconstant::constantid() const {
  return constantid_;
}
inline void guildconstant::set_constantid(::google::protobuf::int64 value) {
  set_has_constantid();
  constantid_ = value;
}

// optional int32 setDiamond = 2;
inline bool guildconstant::has_setdiamond() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void guildconstant::set_has_setdiamond() {
  _has_bits_[0] |= 0x00000002u;
}
inline void guildconstant::clear_has_setdiamond() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void guildconstant::clear_setdiamond() {
  setdiamond_ = 0;
  clear_has_setdiamond();
}
inline ::google::protobuf::int32 guildconstant::setdiamond() const {
  return setdiamond_;
}
inline void guildconstant::set_setdiamond(::google::protobuf::int32 value) {
  set_has_setdiamond();
  setdiamond_ = value;
}

// optional int32 offlineTime = 3;
inline bool guildconstant::has_offlinetime() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void guildconstant::set_has_offlinetime() {
  _has_bits_[0] |= 0x00000004u;
}
inline void guildconstant::clear_has_offlinetime() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void guildconstant::clear_offlinetime() {
  offlinetime_ = 0;
  clear_has_offlinetime();
}
inline ::google::protobuf::int32 guildconstant::offlinetime() const {
  return offlinetime_;
}
inline void guildconstant::set_offlinetime(::google::protobuf::int32 value) {
  set_has_offlinetime();
  offlinetime_ = value;
}

// optional int32 EditRequireLV = 4;
inline bool guildconstant::has_editrequirelv() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void guildconstant::set_has_editrequirelv() {
  _has_bits_[0] |= 0x00000008u;
}
inline void guildconstant::clear_has_editrequirelv() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void guildconstant::clear_editrequirelv() {
  editrequirelv_ = 0;
  clear_has_editrequirelv();
}
inline ::google::protobuf::int32 guildconstant::editrequirelv() const {
  return editrequirelv_;
}
inline void guildconstant::set_editrequirelv(::google::protobuf::int32 value) {
  set_has_editrequirelv();
  editrequirelv_ = value;
}

// optional int32 leaveCoolingtime = 5;
inline bool guildconstant::has_leavecoolingtime() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void guildconstant::set_has_leavecoolingtime() {
  _has_bits_[0] |= 0x00000010u;
}
inline void guildconstant::clear_has_leavecoolingtime() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void guildconstant::clear_leavecoolingtime() {
  leavecoolingtime_ = 0;
  clear_has_leavecoolingtime();
}
inline ::google::protobuf::int32 guildconstant::leavecoolingtime() const {
  return leavecoolingtime_;
}
inline void guildconstant::set_leavecoolingtime(::google::protobuf::int32 value) {
  set_has_leavecoolingtime();
  leavecoolingtime_ = value;
}

// optional int32 houseLimit = 6;
inline bool guildconstant::has_houselimit() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void guildconstant::set_has_houselimit() {
  _has_bits_[0] |= 0x00000020u;
}
inline void guildconstant::clear_has_houselimit() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void guildconstant::clear_houselimit() {
  houselimit_ = 0;
  clear_has_houselimit();
}
inline ::google::protobuf::int32 guildconstant::houselimit() const {
  return houselimit_;
}
inline void guildconstant::set_houselimit(::google::protobuf::int32 value) {
  set_has_houselimit();
  houselimit_ = value;
}

// optional int64 expID = 7;
inline bool guildconstant::has_expid() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void guildconstant::set_has_expid() {
  _has_bits_[0] |= 0x00000040u;
}
inline void guildconstant::clear_has_expid() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void guildconstant::clear_expid() {
  expid_ = GOOGLE_LONGLONG(0);
  clear_has_expid();
}
inline ::google::protobuf::int64 guildconstant::expid() const {
  return expid_;
}
inline void guildconstant::set_expid(::google::protobuf::int64 value) {
  set_has_expid();
  expid_ = value;
}

// optional int32 houseScore = 8;
inline bool guildconstant::has_housescore() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void guildconstant::set_has_housescore() {
  _has_bits_[0] |= 0x00000080u;
}
inline void guildconstant::clear_has_housescore() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void guildconstant::clear_housescore() {
  housescore_ = 0;
  clear_has_housescore();
}
inline ::google::protobuf::int32 guildconstant::housescore() const {
  return housescore_;
}
inline void guildconstant::set_housescore(::google::protobuf::int32 value) {
  set_has_housescore();
  housescore_ = value;
}

// optional int32 giftCD = 9;
inline bool guildconstant::has_giftcd() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void guildconstant::set_has_giftcd() {
  _has_bits_[0] |= 0x00000100u;
}
inline void guildconstant::clear_has_giftcd() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void guildconstant::clear_giftcd() {
  giftcd_ = 0;
  clear_has_giftcd();
}
inline ::google::protobuf::int32 guildconstant::giftcd() const {
  return giftcd_;
}
inline void guildconstant::set_giftcd(::google::protobuf::int32 value) {
  set_has_giftcd();
  giftcd_ = value;
}

// optional int32 autoCleanCellNum = 10;
inline bool guildconstant::has_autocleancellnum() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void guildconstant::set_has_autocleancellnum() {
  _has_bits_[0] |= 0x00000200u;
}
inline void guildconstant::clear_has_autocleancellnum() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void guildconstant::clear_autocleancellnum() {
  autocleancellnum_ = 0;
  clear_has_autocleancellnum();
}
inline ::google::protobuf::int32 guildconstant::autocleancellnum() const {
  return autocleancellnum_;
}
inline void guildconstant::set_autocleancellnum(::google::protobuf::int32 value) {
  set_has_autocleancellnum();
  autocleancellnum_ = value;
}

// optional int32 dismiss = 11;
inline bool guildconstant::has_dismiss() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void guildconstant::set_has_dismiss() {
  _has_bits_[0] |= 0x00000400u;
}
inline void guildconstant::clear_has_dismiss() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void guildconstant::clear_dismiss() {
  dismiss_ = 0;
  clear_has_dismiss();
}
inline ::google::protobuf::int32 guildconstant::dismiss() const {
  return dismiss_;
}
inline void guildconstant::set_dismiss(::google::protobuf::int32 value) {
  set_has_dismiss();
  dismiss_ = value;
}

// optional int32 transferGuild = 12;
inline bool guildconstant::has_transferguild() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void guildconstant::set_has_transferguild() {
  _has_bits_[0] |= 0x00000800u;
}
inline void guildconstant::clear_has_transferguild() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void guildconstant::clear_transferguild() {
  transferguild_ = 0;
  clear_has_transferguild();
}
inline ::google::protobuf::int32 guildconstant::transferguild() const {
  return transferguild_;
}
inline void guildconstant::set_transferguild(::google::protobuf::int32 value) {
  set_has_transferguild();
  transferguild_ = value;
}

// repeated string initialAutoCleanQS = 13;
inline int guildconstant::initialautocleanqs_size() const {
  return initialautocleanqs_.size();
}
inline void guildconstant::clear_initialautocleanqs() {
  initialautocleanqs_.Clear();
}
inline const ::std::string& guildconstant::initialautocleanqs(int index) const {
  return initialautocleanqs_.Get(index);
}
inline ::std::string* guildconstant::mutable_initialautocleanqs(int index) {
  return initialautocleanqs_.Mutable(index);
}
inline void guildconstant::set_initialautocleanqs(int index, const ::std::string& value) {
  initialautocleanqs_.Mutable(index)->assign(value);
}
inline void guildconstant::set_initialautocleanqs(int index, const char* value) {
  initialautocleanqs_.Mutable(index)->assign(value);
}
inline void guildconstant::set_initialautocleanqs(int index, const char* value, size_t size) {
  initialautocleanqs_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* guildconstant::add_initialautocleanqs() {
  return initialautocleanqs_.Add();
}
inline void guildconstant::add_initialautocleanqs(const ::std::string& value) {
  initialautocleanqs_.Add()->assign(value);
}
inline void guildconstant::add_initialautocleanqs(const char* value) {
  initialautocleanqs_.Add()->assign(value);
}
inline void guildconstant::add_initialautocleanqs(const char* value, size_t size) {
  initialautocleanqs_.Add()->assign(reinterpret_cast<const char*>(value), size);
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
guildconstant::initialautocleanqs() const {
  return initialautocleanqs_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
guildconstant::mutable_initialautocleanqs() {
  return &initialautocleanqs_;
}

// -------------------------------------------------------------------

// Sheet_guildconstant

// repeated .proto_ff.guildconstant guildconstant_List = 1;
inline int Sheet_guildconstant::guildconstant_list_size() const {
  return guildconstant_list_.size();
}
inline void Sheet_guildconstant::clear_guildconstant_list() {
  guildconstant_list_.Clear();
}
inline const ::proto_ff::guildconstant& Sheet_guildconstant::guildconstant_list(int index) const {
  return guildconstant_list_.Get(index);
}
inline ::proto_ff::guildconstant* Sheet_guildconstant::mutable_guildconstant_list(int index) {
  return guildconstant_list_.Mutable(index);
}
inline ::proto_ff::guildconstant* Sheet_guildconstant::add_guildconstant_list() {
  return guildconstant_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::guildconstant >&
Sheet_guildconstant::guildconstant_list() const {
  return guildconstant_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::guildconstant >*
Sheet_guildconstant::mutable_guildconstant_list() {
  return &guildconstant_list_;
}

// -------------------------------------------------------------------

// guildlevel

// optional int32 guildLevel_Id = 1;
inline bool guildlevel::has_guildlevel_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void guildlevel::set_has_guildlevel_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void guildlevel::clear_has_guildlevel_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void guildlevel::clear_guildlevel_id() {
  guildlevel_id_ = 0;
  clear_has_guildlevel_id();
}
inline ::google::protobuf::int32 guildlevel::guildlevel_id() const {
  return guildlevel_id_;
}
inline void guildlevel::set_guildlevel_id(::google::protobuf::int32 value) {
  set_has_guildlevel_id();
  guildlevel_id_ = value;
}

// optional int32 guildLevel_EXP = 2;
inline bool guildlevel::has_guildlevel_exp() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void guildlevel::set_has_guildlevel_exp() {
  _has_bits_[0] |= 0x00000002u;
}
inline void guildlevel::clear_has_guildlevel_exp() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void guildlevel::clear_guildlevel_exp() {
  guildlevel_exp_ = 0;
  clear_has_guildlevel_exp();
}
inline ::google::protobuf::int32 guildlevel::guildlevel_exp() const {
  return guildlevel_exp_;
}
inline void guildlevel::set_guildlevel_exp(::google::protobuf::int32 value) {
  set_has_guildlevel_exp();
  guildlevel_exp_ = value;
}

// optional int32 guildLevel_member = 3;
inline bool guildlevel::has_guildlevel_member() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void guildlevel::set_has_guildlevel_member() {
  _has_bits_[0] |= 0x00000004u;
}
inline void guildlevel::clear_has_guildlevel_member() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void guildlevel::clear_guildlevel_member() {
  guildlevel_member_ = 0;
  clear_has_guildlevel_member();
}
inline ::google::protobuf::int32 guildlevel::guildlevel_member() const {
  return guildlevel_member_;
}
inline void guildlevel::set_guildlevel_member(::google::protobuf::int32 value) {
  set_has_guildlevel_member();
  guildlevel_member_ = value;
}

// optional int32 guildLevel_VP = 4;
inline bool guildlevel::has_guildlevel_vp() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void guildlevel::set_has_guildlevel_vp() {
  _has_bits_[0] |= 0x00000008u;
}
inline void guildlevel::clear_has_guildlevel_vp() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void guildlevel::clear_guildlevel_vp() {
  guildlevel_vp_ = 0;
  clear_has_guildlevel_vp();
}
inline ::google::protobuf::int32 guildlevel::guildlevel_vp() const {
  return guildlevel_vp_;
}
inline void guildlevel::set_guildlevel_vp(::google::protobuf::int32 value) {
  set_has_guildlevel_vp();
  guildlevel_vp_ = value;
}

// optional int32 guildLevel_NP = 5;
inline bool guildlevel::has_guildlevel_np() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void guildlevel::set_has_guildlevel_np() {
  _has_bits_[0] |= 0x00000010u;
}
inline void guildlevel::clear_has_guildlevel_np() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void guildlevel::clear_guildlevel_np() {
  guildlevel_np_ = 0;
  clear_has_guildlevel_np();
}
inline ::google::protobuf::int32 guildlevel::guildlevel_np() const {
  return guildlevel_np_;
}
inline void guildlevel::set_guildlevel_np(::google::protobuf::int32 value) {
  set_has_guildlevel_np();
  guildlevel_np_ = value;
}

// -------------------------------------------------------------------

// Sheet_guildlevel

// repeated .proto_ff.guildlevel guildlevel_List = 1;
inline int Sheet_guildlevel::guildlevel_list_size() const {
  return guildlevel_list_.size();
}
inline void Sheet_guildlevel::clear_guildlevel_list() {
  guildlevel_list_.Clear();
}
inline const ::proto_ff::guildlevel& Sheet_guildlevel::guildlevel_list(int index) const {
  return guildlevel_list_.Get(index);
}
inline ::proto_ff::guildlevel* Sheet_guildlevel::mutable_guildlevel_list(int index) {
  return guildlevel_list_.Mutable(index);
}
inline ::proto_ff::guildlevel* Sheet_guildlevel::add_guildlevel_list() {
  return guildlevel_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::guildlevel >&
Sheet_guildlevel::guildlevel_list() const {
  return guildlevel_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::guildlevel >*
Sheet_guildlevel::mutable_guildlevel_list() {
  return &guildlevel_list_;
}

// -------------------------------------------------------------------

// guildcollege

// optional int64 practiceId = 1;
inline bool guildcollege::has_practiceid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void guildcollege::set_has_practiceid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void guildcollege::clear_has_practiceid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void guildcollege::clear_practiceid() {
  practiceid_ = GOOGLE_LONGLONG(0);
  clear_has_practiceid();
}
inline ::google::protobuf::int64 guildcollege::practiceid() const {
  return practiceid_;
}
inline void guildcollege::set_practiceid(::google::protobuf::int64 value) {
  set_has_practiceid();
  practiceid_ = value;
}

// optional int32 practiceType = 2;
inline bool guildcollege::has_practicetype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void guildcollege::set_has_practicetype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void guildcollege::clear_has_practicetype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void guildcollege::clear_practicetype() {
  practicetype_ = 0;
  clear_has_practicetype();
}
inline ::google::protobuf::int32 guildcollege::practicetype() const {
  return practicetype_;
}
inline void guildcollege::set_practicetype(::google::protobuf::int32 value) {
  set_has_practicetype();
  practicetype_ = value;
}

// optional int32 learningNeed = 3;
inline bool guildcollege::has_learningneed() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void guildcollege::set_has_learningneed() {
  _has_bits_[0] |= 0x00000004u;
}
inline void guildcollege::clear_has_learningneed() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void guildcollege::clear_learningneed() {
  learningneed_ = 0;
  clear_has_learningneed();
}
inline ::google::protobuf::int32 guildcollege::learningneed() const {
  return learningneed_;
}
inline void guildcollege::set_learningneed(::google::protobuf::int32 value) {
  set_has_learningneed();
  learningneed_ = value;
}

// optional int32 practiceLevel = 4;
inline bool guildcollege::has_practicelevel() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void guildcollege::set_has_practicelevel() {
  _has_bits_[0] |= 0x00000008u;
}
inline void guildcollege::clear_has_practicelevel() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void guildcollege::clear_practicelevel() {
  practicelevel_ = 0;
  clear_has_practicelevel();
}
inline ::google::protobuf::int32 guildcollege::practicelevel() const {
  return practicelevel_;
}
inline void guildcollege::set_practicelevel(::google::protobuf::int32 value) {
  set_has_practicelevel();
  practicelevel_ = value;
}

// optional int32 playerLevelLimit = 5;
inline bool guildcollege::has_playerlevellimit() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void guildcollege::set_has_playerlevellimit() {
  _has_bits_[0] |= 0x00000010u;
}
inline void guildcollege::clear_has_playerlevellimit() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void guildcollege::clear_playerlevellimit() {
  playerlevellimit_ = 0;
  clear_has_playerlevellimit();
}
inline ::google::protobuf::int32 guildcollege::playerlevellimit() const {
  return playerlevellimit_;
}
inline void guildcollege::set_playerlevellimit(::google::protobuf::int32 value) {
  set_has_playerlevellimit();
  playerlevellimit_ = value;
}

// optional int32 attributeId = 6;
inline bool guildcollege::has_attributeid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void guildcollege::set_has_attributeid() {
  _has_bits_[0] |= 0x00000020u;
}
inline void guildcollege::clear_has_attributeid() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void guildcollege::clear_attributeid() {
  attributeid_ = 0;
  clear_has_attributeid();
}
inline ::google::protobuf::int32 guildcollege::attributeid() const {
  return attributeid_;
}
inline void guildcollege::set_attributeid(::google::protobuf::int32 value) {
  set_has_attributeid();
  attributeid_ = value;
}

// optional int32 attributeGain = 7;
inline bool guildcollege::has_attributegain() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void guildcollege::set_has_attributegain() {
  _has_bits_[0] |= 0x00000040u;
}
inline void guildcollege::clear_has_attributegain() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void guildcollege::clear_attributegain() {
  attributegain_ = 0;
  clear_has_attributegain();
}
inline ::google::protobuf::int32 guildcollege::attributegain() const {
  return attributegain_;
}
inline void guildcollege::set_attributegain(::google::protobuf::int32 value) {
  set_has_attributegain();
  attributegain_ = value;
}

// optional int32 CostContribute = 8;
inline bool guildcollege::has_costcontribute() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void guildcollege::set_has_costcontribute() {
  _has_bits_[0] |= 0x00000080u;
}
inline void guildcollege::clear_has_costcontribute() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void guildcollege::clear_costcontribute() {
  costcontribute_ = 0;
  clear_has_costcontribute();
}
inline ::google::protobuf::int32 guildcollege::costcontribute() const {
  return costcontribute_;
}
inline void guildcollege::set_costcontribute(::google::protobuf::int32 value) {
  set_has_costcontribute();
  costcontribute_ = value;
}

// -------------------------------------------------------------------

// Sheet_guildcollege

// repeated .proto_ff.guildcollege guildcollege_List = 1;
inline int Sheet_guildcollege::guildcollege_list_size() const {
  return guildcollege_list_.size();
}
inline void Sheet_guildcollege::clear_guildcollege_list() {
  guildcollege_list_.Clear();
}
inline const ::proto_ff::guildcollege& Sheet_guildcollege::guildcollege_list(int index) const {
  return guildcollege_list_.Get(index);
}
inline ::proto_ff::guildcollege* Sheet_guildcollege::mutable_guildcollege_list(int index) {
  return guildcollege_list_.Mutable(index);
}
inline ::proto_ff::guildcollege* Sheet_guildcollege::add_guildcollege_list() {
  return guildcollege_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::guildcollege >&
Sheet_guildcollege::guildcollege_list() const {
  return guildcollege_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::guildcollege >*
Sheet_guildcollege::mutable_guildcollege_list() {
  return &guildcollege_list_;
}

// -------------------------------------------------------------------

// guildposition

// optional int64 positionId = 1;
inline bool guildposition::has_positionid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void guildposition::set_has_positionid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void guildposition::clear_has_positionid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void guildposition::clear_positionid() {
  positionid_ = GOOGLE_LONGLONG(0);
  clear_has_positionid();
}
inline ::google::protobuf::int64 guildposition::positionid() const {
  return positionid_;
}
inline void guildposition::set_positionid(::google::protobuf::int64 value) {
  set_has_positionid();
  positionid_ = value;
}

// optional int32 positionType = 2;
inline bool guildposition::has_positiontype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void guildposition::set_has_positiontype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void guildposition::clear_has_positiontype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void guildposition::clear_positiontype() {
  positiontype_ = 0;
  clear_has_positiontype();
}
inline ::google::protobuf::int32 guildposition::positiontype() const {
  return positiontype_;
}
inline void guildposition::set_positiontype(::google::protobuf::int32 value) {
  set_has_positiontype();
  positiontype_ = value;
}

// optional int32 allotMaterials = 3;
inline bool guildposition::has_allotmaterials() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void guildposition::set_has_allotmaterials() {
  _has_bits_[0] |= 0x00000004u;
}
inline void guildposition::clear_has_allotmaterials() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void guildposition::clear_allotmaterials() {
  allotmaterials_ = 0;
  clear_has_allotmaterials();
}
inline ::google::protobuf::int32 guildposition::allotmaterials() const {
  return allotmaterials_;
}
inline void guildposition::set_allotmaterials(::google::protobuf::int32 value) {
  set_has_allotmaterials();
  allotmaterials_ = value;
}

// optional int32 admitNewcomer = 4;
inline bool guildposition::has_admitnewcomer() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void guildposition::set_has_admitnewcomer() {
  _has_bits_[0] |= 0x00000008u;
}
inline void guildposition::clear_has_admitnewcomer() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void guildposition::clear_admitnewcomer() {
  admitnewcomer_ = 0;
  clear_has_admitnewcomer();
}
inline ::google::protobuf::int32 guildposition::admitnewcomer() const {
  return admitnewcomer_;
}
inline void guildposition::set_admitnewcomer(::google::protobuf::int32 value) {
  set_has_admitnewcomer();
  admitnewcomer_ = value;
}

// optional int32 appointAndRemoveVP = 5;
inline bool guildposition::has_appointandremovevp() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void guildposition::set_has_appointandremovevp() {
  _has_bits_[0] |= 0x00000010u;
}
inline void guildposition::clear_has_appointandremovevp() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void guildposition::clear_appointandremovevp() {
  appointandremovevp_ = 0;
  clear_has_appointandremovevp();
}
inline ::google::protobuf::int32 guildposition::appointandremovevp() const {
  return appointandremovevp_;
}
inline void guildposition::set_appointandremovevp(::google::protobuf::int32 value) {
  set_has_appointandremovevp();
  appointandremovevp_ = value;
}

// optional int32 appointAndRemoveElder = 6;
inline bool guildposition::has_appointandremoveelder() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void guildposition::set_has_appointandremoveelder() {
  _has_bits_[0] |= 0x00000020u;
}
inline void guildposition::clear_has_appointandremoveelder() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void guildposition::clear_appointandremoveelder() {
  appointandremoveelder_ = 0;
  clear_has_appointandremoveelder();
}
inline ::google::protobuf::int32 guildposition::appointandremoveelder() const {
  return appointandremoveelder_;
}
inline void guildposition::set_appointandremoveelder(::google::protobuf::int32 value) {
  set_has_appointandremoveelder();
  appointandremoveelder_ = value;
}

// optional int32 expelVP = 7;
inline bool guildposition::has_expelvp() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void guildposition::set_has_expelvp() {
  _has_bits_[0] |= 0x00000040u;
}
inline void guildposition::clear_has_expelvp() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void guildposition::clear_expelvp() {
  expelvp_ = 0;
  clear_has_expelvp();
}
inline ::google::protobuf::int32 guildposition::expelvp() const {
  return expelvp_;
}
inline void guildposition::set_expelvp(::google::protobuf::int32 value) {
  set_has_expelvp();
  expelvp_ = value;
}

// optional int32 expelElder = 8;
inline bool guildposition::has_expelelder() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void guildposition::set_has_expelelder() {
  _has_bits_[0] |= 0x00000080u;
}
inline void guildposition::clear_has_expelelder() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void guildposition::clear_expelelder() {
  expelelder_ = 0;
  clear_has_expelelder();
}
inline ::google::protobuf::int32 guildposition::expelelder() const {
  return expelelder_;
}
inline void guildposition::set_expelelder(::google::protobuf::int32 value) {
  set_has_expelelder();
  expelelder_ = value;
}

// optional int32 expelMass = 9;
inline bool guildposition::has_expelmass() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void guildposition::set_has_expelmass() {
  _has_bits_[0] |= 0x00000100u;
}
inline void guildposition::clear_has_expelmass() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void guildposition::clear_expelmass() {
  expelmass_ = 0;
  clear_has_expelmass();
}
inline ::google::protobuf::int32 guildposition::expelmass() const {
  return expelmass_;
}
inline void guildposition::set_expelmass(::google::protobuf::int32 value) {
  set_has_expelmass();
  expelmass_ = value;
}

// optional int32 announcementEditing = 10;
inline bool guildposition::has_announcementediting() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void guildposition::set_has_announcementediting() {
  _has_bits_[0] |= 0x00000200u;
}
inline void guildposition::clear_has_announcementediting() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void guildposition::clear_announcementediting() {
  announcementediting_ = 0;
  clear_has_announcementediting();
}
inline ::google::protobuf::int32 guildposition::announcementediting() const {
  return announcementediting_;
}
inline void guildposition::set_announcementediting(::google::protobuf::int32 value) {
  set_has_announcementediting();
  announcementediting_ = value;
}

// optional int32 joinCondition = 11;
inline bool guildposition::has_joincondition() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void guildposition::set_has_joincondition() {
  _has_bits_[0] |= 0x00000400u;
}
inline void guildposition::clear_has_joincondition() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void guildposition::clear_joincondition() {
  joincondition_ = 0;
  clear_has_joincondition();
}
inline ::google::protobuf::int32 guildposition::joincondition() const {
  return joincondition_;
}
inline void guildposition::set_joincondition(::google::protobuf::int32 value) {
  set_has_joincondition();
  joincondition_ = value;
}

// optional int32 guildActivity = 12;
inline bool guildposition::has_guildactivity() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void guildposition::set_has_guildactivity() {
  _has_bits_[0] |= 0x00000800u;
}
inline void guildposition::clear_has_guildactivity() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void guildposition::clear_guildactivity() {
  guildactivity_ = 0;
  clear_has_guildactivity();
}
inline ::google::protobuf::int32 guildposition::guildactivity() const {
  return guildactivity_;
}
inline void guildposition::set_guildactivity(::google::protobuf::int32 value) {
  set_has_guildactivity();
  guildactivity_ = value;
}

// optional int32 dissolveAssignGuild = 13;
inline bool guildposition::has_dissolveassignguild() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void guildposition::set_has_dissolveassignguild() {
  _has_bits_[0] |= 0x00001000u;
}
inline void guildposition::clear_has_dissolveassignguild() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void guildposition::clear_dissolveassignguild() {
  dissolveassignguild_ = 0;
  clear_has_dissolveassignguild();
}
inline ::google::protobuf::int32 guildposition::dissolveassignguild() const {
  return dissolveassignguild_;
}
inline void guildposition::set_dissolveassignguild(::google::protobuf::int32 value) {
  set_has_dissolveassignguild();
  dissolveassignguild_ = value;
}

// optional int32 clear = 14;
inline bool guildposition::has_clear() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void guildposition::set_has_clear() {
  _has_bits_[0] |= 0x00002000u;
}
inline void guildposition::clear_has_clear() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void guildposition::clear_clear() {
  clear_ = 0;
  clear_has_clear();
}
inline ::google::protobuf::int32 guildposition::clear() const {
  return clear_;
}
inline void guildposition::set_clear(::google::protobuf::int32 value) {
  set_has_clear();
  clear_ = value;
}

// optional int32 changeName = 15;
inline bool guildposition::has_changename() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void guildposition::set_has_changename() {
  _has_bits_[0] |= 0x00004000u;
}
inline void guildposition::clear_has_changename() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void guildposition::clear_changename() {
  changename_ = 0;
  clear_has_changename();
}
inline ::google::protobuf::int32 guildposition::changename() const {
  return changename_;
}
inline void guildposition::set_changename(::google::protobuf::int32 value) {
  set_has_changename();
  changename_ = value;
}

// optional int32 automaticCleanDisplay = 16;
inline bool guildposition::has_automaticcleandisplay() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void guildposition::set_has_automaticcleandisplay() {
  _has_bits_[0] |= 0x00008000u;
}
inline void guildposition::clear_has_automaticcleandisplay() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void guildposition::clear_automaticcleandisplay() {
  automaticcleandisplay_ = 0;
  clear_has_automaticcleandisplay();
}
inline ::google::protobuf::int32 guildposition::automaticcleandisplay() const {
  return automaticcleandisplay_;
}
inline void guildposition::set_automaticcleandisplay(::google::protobuf::int32 value) {
  set_has_automaticcleandisplay();
  automaticcleandisplay_ = value;
}

// -------------------------------------------------------------------

// Sheet_guildposition

// repeated .proto_ff.guildposition guildposition_List = 1;
inline int Sheet_guildposition::guildposition_list_size() const {
  return guildposition_list_.size();
}
inline void Sheet_guildposition::clear_guildposition_list() {
  guildposition_list_.Clear();
}
inline const ::proto_ff::guildposition& Sheet_guildposition::guildposition_list(int index) const {
  return guildposition_list_.Get(index);
}
inline ::proto_ff::guildposition* Sheet_guildposition::mutable_guildposition_list(int index) {
  return guildposition_list_.Mutable(index);
}
inline ::proto_ff::guildposition* Sheet_guildposition::add_guildposition_list() {
  return guildposition_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::guildposition >&
Sheet_guildposition::guildposition_list() const {
  return guildposition_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::guildposition >*
Sheet_guildposition::mutable_guildposition_list() {
  return &guildposition_list_;
}

// -------------------------------------------------------------------

// guildhouse

// optional int64 ID = 1;
inline bool guildhouse::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void guildhouse::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void guildhouse::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void guildhouse::clear_id() {
  id_ = GOOGLE_LONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::int64 guildhouse::id() const {
  return id_;
}
inline void guildhouse::set_id(::google::protobuf::int64 value) {
  set_has_id();
  id_ = value;
}

// optional int32 wearQuality = 2;
inline bool guildhouse::has_wearquality() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void guildhouse::set_has_wearquality() {
  _has_bits_[0] |= 0x00000002u;
}
inline void guildhouse::clear_has_wearquality() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void guildhouse::clear_wearquality() {
  wearquality_ = 0;
  clear_has_wearquality();
}
inline ::google::protobuf::int32 guildhouse::wearquality() const {
  return wearquality_;
}
inline void guildhouse::set_wearquality(::google::protobuf::int32 value) {
  set_has_wearquality();
  wearquality_ = value;
}

// optional int32 quality = 3;
inline bool guildhouse::has_quality() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void guildhouse::set_has_quality() {
  _has_bits_[0] |= 0x00000004u;
}
inline void guildhouse::clear_has_quality() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void guildhouse::clear_quality() {
  quality_ = 0;
  clear_has_quality();
}
inline ::google::protobuf::int32 guildhouse::quality() const {
  return quality_;
}
inline void guildhouse::set_quality(::google::protobuf::int32 value) {
  set_has_quality();
  quality_ = value;
}

// optional int32 houseScore = 4;
inline bool guildhouse::has_housescore() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void guildhouse::set_has_housescore() {
  _has_bits_[0] |= 0x00000008u;
}
inline void guildhouse::clear_has_housescore() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void guildhouse::clear_housescore() {
  housescore_ = 0;
  clear_has_housescore();
}
inline ::google::protobuf::int32 guildhouse::housescore() const {
  return housescore_;
}
inline void guildhouse::set_housescore(::google::protobuf::int32 value) {
  set_has_housescore();
  housescore_ = value;
}

// -------------------------------------------------------------------

// Sheet_guildhouse

// repeated .proto_ff.guildhouse guildhouse_List = 1;
inline int Sheet_guildhouse::guildhouse_list_size() const {
  return guildhouse_list_.size();
}
inline void Sheet_guildhouse::clear_guildhouse_list() {
  guildhouse_list_.Clear();
}
inline const ::proto_ff::guildhouse& Sheet_guildhouse::guildhouse_list(int index) const {
  return guildhouse_list_.Get(index);
}
inline ::proto_ff::guildhouse* Sheet_guildhouse::mutable_guildhouse_list(int index) {
  return guildhouse_list_.Mutable(index);
}
inline ::proto_ff::guildhouse* Sheet_guildhouse::add_guildhouse_list() {
  return guildhouse_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::guildhouse >&
Sheet_guildhouse::guildhouse_list() const {
  return guildhouse_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::guildhouse >*
Sheet_guildhouse::mutable_guildhouse_list() {
  return &guildhouse_list_;
}

// -------------------------------------------------------------------

// guildgift

// optional int64 ID = 1;
inline bool guildgift::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void guildgift::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void guildgift::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void guildgift::clear_id() {
  id_ = GOOGLE_LONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::int64 guildgift::id() const {
  return id_;
}
inline void guildgift::set_id(::google::protobuf::int64 value) {
  set_has_id();
  id_ = value;
}

// optional int32 type = 2;
inline bool guildgift::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void guildgift::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void guildgift::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void guildgift::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 guildgift::type() const {
  return type_;
}
inline void guildgift::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// optional int32 money = 3;
inline bool guildgift::has_money() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void guildgift::set_has_money() {
  _has_bits_[0] |= 0x00000004u;
}
inline void guildgift::clear_has_money() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void guildgift::clear_money() {
  money_ = 0;
  clear_has_money();
}
inline ::google::protobuf::int32 guildgift::money() const {
  return money_;
}
inline void guildgift::set_money(::google::protobuf::int32 value) {
  set_has_money();
  money_ = value;
}

// optional int32 num = 4;
inline bool guildgift::has_num() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void guildgift::set_has_num() {
  _has_bits_[0] |= 0x00000008u;
}
inline void guildgift::clear_has_num() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void guildgift::clear_num() {
  num_ = 0;
  clear_has_num();
}
inline ::google::protobuf::int32 guildgift::num() const {
  return num_;
}
inline void guildgift::set_num(::google::protobuf::int32 value) {
  set_has_num();
  num_ = value;
}

// -------------------------------------------------------------------

// Sheet_guildgift

// repeated .proto_ff.guildgift guildgift_List = 1;
inline int Sheet_guildgift::guildgift_list_size() const {
  return guildgift_list_.size();
}
inline void Sheet_guildgift::clear_guildgift_list() {
  guildgift_list_.Clear();
}
inline const ::proto_ff::guildgift& Sheet_guildgift::guildgift_list(int index) const {
  return guildgift_list_.Get(index);
}
inline ::proto_ff::guildgift* Sheet_guildgift::mutable_guildgift_list(int index) {
  return guildgift_list_.Mutable(index);
}
inline ::proto_ff::guildgift* Sheet_guildgift::add_guildgift_list() {
  return guildgift_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::guildgift >&
Sheet_guildgift::guildgift_list() const {
  return guildgift_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::guildgift >*
Sheet_guildgift::mutable_guildgift_list() {
  return &guildgift_list_;
}

// -------------------------------------------------------------------

// guildguildance

// optional int32 guidanceId = 1;
inline bool guildguildance::has_guidanceid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void guildguildance::set_has_guidanceid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void guildguildance::clear_has_guidanceid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void guildguildance::clear_guidanceid() {
  guidanceid_ = 0;
  clear_has_guidanceid();
}
inline ::google::protobuf::int32 guildguildance::guidanceid() const {
  return guidanceid_;
}
inline void guildguildance::set_guidanceid(::google::protobuf::int32 value) {
  set_has_guidanceid();
  guidanceid_ = value;
}

// optional int32 guidanceType = 2;
inline bool guildguildance::has_guidancetype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void guildguildance::set_has_guidancetype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void guildguildance::clear_has_guidancetype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void guildguildance::clear_guidancetype() {
  guidancetype_ = 0;
  clear_has_guidancetype();
}
inline ::google::protobuf::int32 guildguildance::guidancetype() const {
  return guidancetype_;
}
inline void guildguildance::set_guidancetype(::google::protobuf::int32 value) {
  set_has_guidancetype();
  guidancetype_ = value;
}

// optional int32 levelLimit = 3;
inline bool guildguildance::has_levellimit() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void guildguildance::set_has_levellimit() {
  _has_bits_[0] |= 0x00000004u;
}
inline void guildguildance::clear_has_levellimit() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void guildguildance::clear_levellimit() {
  levellimit_ = 0;
  clear_has_levellimit();
}
inline ::google::protobuf::int32 guildguildance::levellimit() const {
  return levellimit_;
}
inline void guildguildance::set_levellimit(::google::protobuf::int32 value) {
  set_has_levellimit();
  levellimit_ = value;
}

// optional int32 triggerTpye = 4;
inline bool guildguildance::has_triggertpye() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void guildguildance::set_has_triggertpye() {
  _has_bits_[0] |= 0x00000008u;
}
inline void guildguildance::clear_has_triggertpye() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void guildguildance::clear_triggertpye() {
  triggertpye_ = 0;
  clear_has_triggertpye();
}
inline ::google::protobuf::int32 guildguildance::triggertpye() const {
  return triggertpye_;
}
inline void guildguildance::set_triggertpye(::google::protobuf::int32 value) {
  set_has_triggertpye();
  triggertpye_ = value;
}

// optional int32 cognateNpcId = 5;
inline bool guildguildance::has_cognatenpcid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void guildguildance::set_has_cognatenpcid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void guildguildance::clear_has_cognatenpcid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void guildguildance::clear_cognatenpcid() {
  cognatenpcid_ = 0;
  clear_has_cognatenpcid();
}
inline ::google::protobuf::int32 guildguildance::cognatenpcid() const {
  return cognatenpcid_;
}
inline void guildguildance::set_cognatenpcid(::google::protobuf::int32 value) {
  set_has_cognatenpcid();
  cognatenpcid_ = value;
}

// optional int32 cognateUI = 6;
inline bool guildguildance::has_cognateui() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void guildguildance::set_has_cognateui() {
  _has_bits_[0] |= 0x00000020u;
}
inline void guildguildance::clear_has_cognateui() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void guildguildance::clear_cognateui() {
  cognateui_ = 0;
  clear_has_cognateui();
}
inline ::google::protobuf::int32 guildguildance::cognateui() const {
  return cognateui_;
}
inline void guildguildance::set_cognateui(::google::protobuf::int32 value) {
  set_has_cognateui();
  cognateui_ = value;
}

// optional int32 cognateActiveId = 7;
inline bool guildguildance::has_cognateactiveid() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void guildguildance::set_has_cognateactiveid() {
  _has_bits_[0] |= 0x00000040u;
}
inline void guildguildance::clear_has_cognateactiveid() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void guildguildance::clear_cognateactiveid() {
  cognateactiveid_ = 0;
  clear_has_cognateactiveid();
}
inline ::google::protobuf::int32 guildguildance::cognateactiveid() const {
  return cognateactiveid_;
}
inline void guildguildance::set_cognateactiveid(::google::protobuf::int32 value) {
  set_has_cognateactiveid();
  cognateactiveid_ = value;
}

// -------------------------------------------------------------------

// Sheet_guildguildance

// repeated .proto_ff.guildguildance guildguildance_List = 1;
inline int Sheet_guildguildance::guildguildance_list_size() const {
  return guildguildance_list_.size();
}
inline void Sheet_guildguildance::clear_guildguildance_list() {
  guildguildance_list_.Clear();
}
inline const ::proto_ff::guildguildance& Sheet_guildguildance::guildguildance_list(int index) const {
  return guildguildance_list_.Get(index);
}
inline ::proto_ff::guildguildance* Sheet_guildguildance::mutable_guildguildance_list(int index) {
  return guildguildance_list_.Mutable(index);
}
inline ::proto_ff::guildguildance* Sheet_guildguildance::add_guildguildance_list() {
  return guildguildance_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::guildguildance >&
Sheet_guildguildance::guildguildance_list() const {
  return guildguildance_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::guildguildance >*
Sheet_guildguildance::mutable_guildguildance_list() {
  return &guildguildance_list_;
}

// -------------------------------------------------------------------

// guildwarconstant

// optional int64 warid = 1;
inline bool guildwarconstant::has_warid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void guildwarconstant::set_has_warid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void guildwarconstant::clear_has_warid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void guildwarconstant::clear_warid() {
  warid_ = GOOGLE_LONGLONG(0);
  clear_has_warid();
}
inline ::google::protobuf::int64 guildwarconstant::warid() const {
  return warid_;
}
inline void guildwarconstant::set_warid(::google::protobuf::int64 value) {
  set_has_warid();
  warid_ = value;
}

// optional int32 signopenCycle = 2;
inline bool guildwarconstant::has_signopencycle() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void guildwarconstant::set_has_signopencycle() {
  _has_bits_[0] |= 0x00000002u;
}
inline void guildwarconstant::clear_has_signopencycle() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void guildwarconstant::clear_signopencycle() {
  signopencycle_ = 0;
  clear_has_signopencycle();
}
inline ::google::protobuf::int32 guildwarconstant::signopencycle() const {
  return signopencycle_;
}
inline void guildwarconstant::set_signopencycle(::google::protobuf::int32 value) {
  set_has_signopencycle();
  signopencycle_ = value;
}

// optional string signopenTime = 3;
inline bool guildwarconstant::has_signopentime() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void guildwarconstant::set_has_signopentime() {
  _has_bits_[0] |= 0x00000004u;
}
inline void guildwarconstant::clear_has_signopentime() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void guildwarconstant::clear_signopentime() {
  if (signopentime_ != &::google::protobuf::internal::kEmptyString) {
    signopentime_->clear();
  }
  clear_has_signopentime();
}
inline const ::std::string& guildwarconstant::signopentime() const {
  return *signopentime_;
}
inline void guildwarconstant::set_signopentime(const ::std::string& value) {
  set_has_signopentime();
  if (signopentime_ == &::google::protobuf::internal::kEmptyString) {
    signopentime_ = new ::std::string;
  }
  signopentime_->assign(value);
}
inline void guildwarconstant::set_signopentime(const char* value) {
  set_has_signopentime();
  if (signopentime_ == &::google::protobuf::internal::kEmptyString) {
    signopentime_ = new ::std::string;
  }
  signopentime_->assign(value);
}
inline void guildwarconstant::set_signopentime(const char* value, size_t size) {
  set_has_signopentime();
  if (signopentime_ == &::google::protobuf::internal::kEmptyString) {
    signopentime_ = new ::std::string;
  }
  signopentime_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* guildwarconstant::mutable_signopentime() {
  set_has_signopentime();
  if (signopentime_ == &::google::protobuf::internal::kEmptyString) {
    signopentime_ = new ::std::string;
  }
  return signopentime_;
}
inline ::std::string* guildwarconstant::release_signopentime() {
  clear_has_signopentime();
  if (signopentime_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = signopentime_;
    signopentime_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void guildwarconstant::set_allocated_signopentime(::std::string* signopentime) {
  if (signopentime_ != &::google::protobuf::internal::kEmptyString) {
    delete signopentime_;
  }
  if (signopentime) {
    set_has_signopentime();
    signopentime_ = signopentime;
  } else {
    clear_has_signopentime();
    signopentime_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 signclosedCycle = 4;
inline bool guildwarconstant::has_signclosedcycle() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void guildwarconstant::set_has_signclosedcycle() {
  _has_bits_[0] |= 0x00000008u;
}
inline void guildwarconstant::clear_has_signclosedcycle() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void guildwarconstant::clear_signclosedcycle() {
  signclosedcycle_ = 0;
  clear_has_signclosedcycle();
}
inline ::google::protobuf::int32 guildwarconstant::signclosedcycle() const {
  return signclosedcycle_;
}
inline void guildwarconstant::set_signclosedcycle(::google::protobuf::int32 value) {
  set_has_signclosedcycle();
  signclosedcycle_ = value;
}

// optional string signclosedTime = 5;
inline bool guildwarconstant::has_signclosedtime() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void guildwarconstant::set_has_signclosedtime() {
  _has_bits_[0] |= 0x00000010u;
}
inline void guildwarconstant::clear_has_signclosedtime() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void guildwarconstant::clear_signclosedtime() {
  if (signclosedtime_ != &::google::protobuf::internal::kEmptyString) {
    signclosedtime_->clear();
  }
  clear_has_signclosedtime();
}
inline const ::std::string& guildwarconstant::signclosedtime() const {
  return *signclosedtime_;
}
inline void guildwarconstant::set_signclosedtime(const ::std::string& value) {
  set_has_signclosedtime();
  if (signclosedtime_ == &::google::protobuf::internal::kEmptyString) {
    signclosedtime_ = new ::std::string;
  }
  signclosedtime_->assign(value);
}
inline void guildwarconstant::set_signclosedtime(const char* value) {
  set_has_signclosedtime();
  if (signclosedtime_ == &::google::protobuf::internal::kEmptyString) {
    signclosedtime_ = new ::std::string;
  }
  signclosedtime_->assign(value);
}
inline void guildwarconstant::set_signclosedtime(const char* value, size_t size) {
  set_has_signclosedtime();
  if (signclosedtime_ == &::google::protobuf::internal::kEmptyString) {
    signclosedtime_ = new ::std::string;
  }
  signclosedtime_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* guildwarconstant::mutable_signclosedtime() {
  set_has_signclosedtime();
  if (signclosedtime_ == &::google::protobuf::internal::kEmptyString) {
    signclosedtime_ = new ::std::string;
  }
  return signclosedtime_;
}
inline ::std::string* guildwarconstant::release_signclosedtime() {
  clear_has_signclosedtime();
  if (signclosedtime_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = signclosedtime_;
    signclosedtime_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void guildwarconstant::set_allocated_signclosedtime(::std::string* signclosedtime) {
  if (signclosedtime_ != &::google::protobuf::internal::kEmptyString) {
    delete signclosedtime_;
  }
  if (signclosedtime) {
    set_has_signclosedtime();
    signclosedtime_ = signclosedtime;
  } else {
    clear_has_signclosedtime();
    signclosedtime_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 guildPosition = 6;
inline bool guildwarconstant::has_guildposition() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void guildwarconstant::set_has_guildposition() {
  _has_bits_[0] |= 0x00000020u;
}
inline void guildwarconstant::clear_has_guildposition() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void guildwarconstant::clear_guildposition() {
  guildposition_ = 0;
  clear_has_guildposition();
}
inline ::google::protobuf::int32 guildwarconstant::guildposition() const {
  return guildposition_;
}
inline void guildwarconstant::set_guildposition(::google::protobuf::int32 value) {
  set_has_guildposition();
  guildposition_ = value;
}

// optional int32 guildNum = 7;
inline bool guildwarconstant::has_guildnum() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void guildwarconstant::set_has_guildnum() {
  _has_bits_[0] |= 0x00000040u;
}
inline void guildwarconstant::clear_has_guildnum() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void guildwarconstant::clear_guildnum() {
  guildnum_ = 0;
  clear_has_guildnum();
}
inline ::google::protobuf::int32 guildwarconstant::guildnum() const {
  return guildnum_;
}
inline void guildwarconstant::set_guildnum(::google::protobuf::int32 value) {
  set_has_guildnum();
  guildnum_ = value;
}

// optional int32 guildLevel = 8;
inline bool guildwarconstant::has_guildlevel() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void guildwarconstant::set_has_guildlevel() {
  _has_bits_[0] |= 0x00000080u;
}
inline void guildwarconstant::clear_has_guildlevel() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void guildwarconstant::clear_guildlevel() {
  guildlevel_ = 0;
  clear_has_guildlevel();
}
inline ::google::protobuf::int32 guildwarconstant::guildlevel() const {
  return guildlevel_;
}
inline void guildwarconstant::set_guildlevel(::google::protobuf::int32 value) {
  set_has_guildlevel();
  guildlevel_ = value;
}

// optional int32 enteropenCycle = 9;
inline bool guildwarconstant::has_enteropencycle() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void guildwarconstant::set_has_enteropencycle() {
  _has_bits_[0] |= 0x00000100u;
}
inline void guildwarconstant::clear_has_enteropencycle() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void guildwarconstant::clear_enteropencycle() {
  enteropencycle_ = 0;
  clear_has_enteropencycle();
}
inline ::google::protobuf::int32 guildwarconstant::enteropencycle() const {
  return enteropencycle_;
}
inline void guildwarconstant::set_enteropencycle(::google::protobuf::int32 value) {
  set_has_enteropencycle();
  enteropencycle_ = value;
}

// optional string enteropenTime = 10;
inline bool guildwarconstant::has_enteropentime() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void guildwarconstant::set_has_enteropentime() {
  _has_bits_[0] |= 0x00000200u;
}
inline void guildwarconstant::clear_has_enteropentime() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void guildwarconstant::clear_enteropentime() {
  if (enteropentime_ != &::google::protobuf::internal::kEmptyString) {
    enteropentime_->clear();
  }
  clear_has_enteropentime();
}
inline const ::std::string& guildwarconstant::enteropentime() const {
  return *enteropentime_;
}
inline void guildwarconstant::set_enteropentime(const ::std::string& value) {
  set_has_enteropentime();
  if (enteropentime_ == &::google::protobuf::internal::kEmptyString) {
    enteropentime_ = new ::std::string;
  }
  enteropentime_->assign(value);
}
inline void guildwarconstant::set_enteropentime(const char* value) {
  set_has_enteropentime();
  if (enteropentime_ == &::google::protobuf::internal::kEmptyString) {
    enteropentime_ = new ::std::string;
  }
  enteropentime_->assign(value);
}
inline void guildwarconstant::set_enteropentime(const char* value, size_t size) {
  set_has_enteropentime();
  if (enteropentime_ == &::google::protobuf::internal::kEmptyString) {
    enteropentime_ = new ::std::string;
  }
  enteropentime_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* guildwarconstant::mutable_enteropentime() {
  set_has_enteropentime();
  if (enteropentime_ == &::google::protobuf::internal::kEmptyString) {
    enteropentime_ = new ::std::string;
  }
  return enteropentime_;
}
inline ::std::string* guildwarconstant::release_enteropentime() {
  clear_has_enteropentime();
  if (enteropentime_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = enteropentime_;
    enteropentime_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void guildwarconstant::set_allocated_enteropentime(::std::string* enteropentime) {
  if (enteropentime_ != &::google::protobuf::internal::kEmptyString) {
    delete enteropentime_;
  }
  if (enteropentime) {
    set_has_enteropentime();
    enteropentime_ = enteropentime;
  } else {
    clear_has_enteropentime();
    enteropentime_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 enterclosedCycle = 11;
inline bool guildwarconstant::has_enterclosedcycle() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void guildwarconstant::set_has_enterclosedcycle() {
  _has_bits_[0] |= 0x00000400u;
}
inline void guildwarconstant::clear_has_enterclosedcycle() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void guildwarconstant::clear_enterclosedcycle() {
  enterclosedcycle_ = 0;
  clear_has_enterclosedcycle();
}
inline ::google::protobuf::int32 guildwarconstant::enterclosedcycle() const {
  return enterclosedcycle_;
}
inline void guildwarconstant::set_enterclosedcycle(::google::protobuf::int32 value) {
  set_has_enterclosedcycle();
  enterclosedcycle_ = value;
}

// optional string enterclosedTime = 12;
inline bool guildwarconstant::has_enterclosedtime() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void guildwarconstant::set_has_enterclosedtime() {
  _has_bits_[0] |= 0x00000800u;
}
inline void guildwarconstant::clear_has_enterclosedtime() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void guildwarconstant::clear_enterclosedtime() {
  if (enterclosedtime_ != &::google::protobuf::internal::kEmptyString) {
    enterclosedtime_->clear();
  }
  clear_has_enterclosedtime();
}
inline const ::std::string& guildwarconstant::enterclosedtime() const {
  return *enterclosedtime_;
}
inline void guildwarconstant::set_enterclosedtime(const ::std::string& value) {
  set_has_enterclosedtime();
  if (enterclosedtime_ == &::google::protobuf::internal::kEmptyString) {
    enterclosedtime_ = new ::std::string;
  }
  enterclosedtime_->assign(value);
}
inline void guildwarconstant::set_enterclosedtime(const char* value) {
  set_has_enterclosedtime();
  if (enterclosedtime_ == &::google::protobuf::internal::kEmptyString) {
    enterclosedtime_ = new ::std::string;
  }
  enterclosedtime_->assign(value);
}
inline void guildwarconstant::set_enterclosedtime(const char* value, size_t size) {
  set_has_enterclosedtime();
  if (enterclosedtime_ == &::google::protobuf::internal::kEmptyString) {
    enterclosedtime_ = new ::std::string;
  }
  enterclosedtime_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* guildwarconstant::mutable_enterclosedtime() {
  set_has_enterclosedtime();
  if (enterclosedtime_ == &::google::protobuf::internal::kEmptyString) {
    enterclosedtime_ = new ::std::string;
  }
  return enterclosedtime_;
}
inline ::std::string* guildwarconstant::release_enterclosedtime() {
  clear_has_enterclosedtime();
  if (enterclosedtime_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = enterclosedtime_;
    enterclosedtime_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void guildwarconstant::set_allocated_enterclosedtime(::std::string* enterclosedtime) {
  if (enterclosedtime_ != &::google::protobuf::internal::kEmptyString) {
    delete enterclosedtime_;
  }
  if (enterclosedtime) {
    set_has_enterclosedtime();
    enterclosedtime_ = enterclosedtime;
  } else {
    clear_has_enterclosedtime();
    enterclosedtime_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 guildwarBaseScore = 13;
inline bool guildwarconstant::has_guildwarbasescore() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void guildwarconstant::set_has_guildwarbasescore() {
  _has_bits_[0] |= 0x00001000u;
}
inline void guildwarconstant::clear_has_guildwarbasescore() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void guildwarconstant::clear_guildwarbasescore() {
  guildwarbasescore_ = 0;
  clear_has_guildwarbasescore();
}
inline ::google::protobuf::int32 guildwarconstant::guildwarbasescore() const {
  return guildwarbasescore_;
}
inline void guildwarconstant::set_guildwarbasescore(::google::protobuf::int32 value) {
  set_has_guildwarbasescore();
  guildwarbasescore_ = value;
}

// optional int32 guildwarWinScore = 14;
inline bool guildwarconstant::has_guildwarwinscore() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void guildwarconstant::set_has_guildwarwinscore() {
  _has_bits_[0] |= 0x00002000u;
}
inline void guildwarconstant::clear_has_guildwarwinscore() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void guildwarconstant::clear_guildwarwinscore() {
  guildwarwinscore_ = 0;
  clear_has_guildwarwinscore();
}
inline ::google::protobuf::int32 guildwarconstant::guildwarwinscore() const {
  return guildwarwinscore_;
}
inline void guildwarconstant::set_guildwarwinscore(::google::protobuf::int32 value) {
  set_has_guildwarwinscore();
  guildwarwinscore_ = value;
}

// optional int32 guildwarLoseScore = 15;
inline bool guildwarconstant::has_guildwarlosescore() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void guildwarconstant::set_has_guildwarlosescore() {
  _has_bits_[0] |= 0x00004000u;
}
inline void guildwarconstant::clear_has_guildwarlosescore() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void guildwarconstant::clear_guildwarlosescore() {
  guildwarlosescore_ = 0;
  clear_has_guildwarlosescore();
}
inline ::google::protobuf::int32 guildwarconstant::guildwarlosescore() const {
  return guildwarlosescore_;
}
inline void guildwarconstant::set_guildwarlosescore(::google::protobuf::int32 value) {
  set_has_guildwarlosescore();
  guildwarlosescore_ = value;
}

// optional int32 guildwarDrawScore = 16;
inline bool guildwarconstant::has_guildwardrawscore() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void guildwarconstant::set_has_guildwardrawscore() {
  _has_bits_[0] |= 0x00008000u;
}
inline void guildwarconstant::clear_has_guildwardrawscore() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void guildwarconstant::clear_guildwardrawscore() {
  guildwardrawscore_ = 0;
  clear_has_guildwardrawscore();
}
inline ::google::protobuf::int32 guildwarconstant::guildwardrawscore() const {
  return guildwardrawscore_;
}
inline void guildwarconstant::set_guildwardrawscore(::google::protobuf::int32 value) {
  set_has_guildwardrawscore();
  guildwardrawscore_ = value;
}

// optional int32 maxMaterial = 17;
inline bool guildwarconstant::has_maxmaterial() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void guildwarconstant::set_has_maxmaterial() {
  _has_bits_[0] |= 0x00010000u;
}
inline void guildwarconstant::clear_has_maxmaterial() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void guildwarconstant::clear_maxmaterial() {
  maxmaterial_ = 0;
  clear_has_maxmaterial();
}
inline ::google::protobuf::int32 guildwarconstant::maxmaterial() const {
  return maxmaterial_;
}
inline void guildwarconstant::set_maxmaterial(::google::protobuf::int32 value) {
  set_has_maxmaterial();
  maxmaterial_ = value;
}

// optional int32 soldierCostMaterial = 18;
inline bool guildwarconstant::has_soldiercostmaterial() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void guildwarconstant::set_has_soldiercostmaterial() {
  _has_bits_[0] |= 0x00020000u;
}
inline void guildwarconstant::clear_has_soldiercostmaterial() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void guildwarconstant::clear_soldiercostmaterial() {
  soldiercostmaterial_ = 0;
  clear_has_soldiercostmaterial();
}
inline ::google::protobuf::int32 guildwarconstant::soldiercostmaterial() const {
  return soldiercostmaterial_;
}
inline void guildwarconstant::set_soldiercostmaterial(::google::protobuf::int32 value) {
  set_has_soldiercostmaterial();
  soldiercostmaterial_ = value;
}

// optional int32 soldierNum = 19;
inline bool guildwarconstant::has_soldiernum() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void guildwarconstant::set_has_soldiernum() {
  _has_bits_[0] |= 0x00040000u;
}
inline void guildwarconstant::clear_has_soldiernum() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void guildwarconstant::clear_soldiernum() {
  soldiernum_ = 0;
  clear_has_soldiernum();
}
inline ::google::protobuf::int32 guildwarconstant::soldiernum() const {
  return soldiernum_;
}
inline void guildwarconstant::set_soldiernum(::google::protobuf::int32 value) {
  set_has_soldiernum();
  soldiernum_ = value;
}

// optional int32 soldierCD = 20;
inline bool guildwarconstant::has_soldiercd() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void guildwarconstant::set_has_soldiercd() {
  _has_bits_[0] |= 0x00080000u;
}
inline void guildwarconstant::clear_has_soldiercd() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void guildwarconstant::clear_soldiercd() {
  soldiercd_ = 0;
  clear_has_soldiercd();
}
inline ::google::protobuf::int32 guildwarconstant::soldiercd() const {
  return soldiercd_;
}
inline void guildwarconstant::set_soldiercd(::google::protobuf::int32 value) {
  set_has_soldiercd();
  soldiercd_ = value;
}

// optional int32 renewBaseCost = 21;
inline bool guildwarconstant::has_renewbasecost() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void guildwarconstant::set_has_renewbasecost() {
  _has_bits_[0] |= 0x00100000u;
}
inline void guildwarconstant::clear_has_renewbasecost() {
  _has_bits_[0] &= ~0x00100000u;
}
inline void guildwarconstant::clear_renewbasecost() {
  renewbasecost_ = 0;
  clear_has_renewbasecost();
}
inline ::google::protobuf::int32 guildwarconstant::renewbasecost() const {
  return renewbasecost_;
}
inline void guildwarconstant::set_renewbasecost(::google::protobuf::int32 value) {
  set_has_renewbasecost();
  renewbasecost_ = value;
}

// optional int32 renewBaseHP = 22;
inline bool guildwarconstant::has_renewbasehp() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
inline void guildwarconstant::set_has_renewbasehp() {
  _has_bits_[0] |= 0x00200000u;
}
inline void guildwarconstant::clear_has_renewbasehp() {
  _has_bits_[0] &= ~0x00200000u;
}
inline void guildwarconstant::clear_renewbasehp() {
  renewbasehp_ = 0;
  clear_has_renewbasehp();
}
inline ::google::protobuf::int32 guildwarconstant::renewbasehp() const {
  return renewbasehp_;
}
inline void guildwarconstant::set_renewbasehp(::google::protobuf::int32 value) {
  set_has_renewbasehp();
  renewbasehp_ = value;
}

// optional int32 renewBaseCD = 23;
inline bool guildwarconstant::has_renewbasecd() const {
  return (_has_bits_[0] & 0x00400000u) != 0;
}
inline void guildwarconstant::set_has_renewbasecd() {
  _has_bits_[0] |= 0x00400000u;
}
inline void guildwarconstant::clear_has_renewbasecd() {
  _has_bits_[0] &= ~0x00400000u;
}
inline void guildwarconstant::clear_renewbasecd() {
  renewbasecd_ = 0;
  clear_has_renewbasecd();
}
inline ::google::protobuf::int32 guildwarconstant::renewbasecd() const {
  return renewbasecd_;
}
inline void guildwarconstant::set_renewbasecd(::google::protobuf::int32 value) {
  set_has_renewbasecd();
  renewbasecd_ = value;
}

// optional int32 reviveCD = 24;
inline bool guildwarconstant::has_revivecd() const {
  return (_has_bits_[0] & 0x00800000u) != 0;
}
inline void guildwarconstant::set_has_revivecd() {
  _has_bits_[0] |= 0x00800000u;
}
inline void guildwarconstant::clear_has_revivecd() {
  _has_bits_[0] &= ~0x00800000u;
}
inline void guildwarconstant::clear_revivecd() {
  revivecd_ = 0;
  clear_has_revivecd();
}
inline ::google::protobuf::int32 guildwarconstant::revivecd() const {
  return revivecd_;
}
inline void guildwarconstant::set_revivecd(::google::protobuf::int32 value) {
  set_has_revivecd();
  revivecd_ = value;
}

// optional int64 guildwarWinItem = 25;
inline bool guildwarconstant::has_guildwarwinitem() const {
  return (_has_bits_[0] & 0x01000000u) != 0;
}
inline void guildwarconstant::set_has_guildwarwinitem() {
  _has_bits_[0] |= 0x01000000u;
}
inline void guildwarconstant::clear_has_guildwarwinitem() {
  _has_bits_[0] &= ~0x01000000u;
}
inline void guildwarconstant::clear_guildwarwinitem() {
  guildwarwinitem_ = GOOGLE_LONGLONG(0);
  clear_has_guildwarwinitem();
}
inline ::google::protobuf::int64 guildwarconstant::guildwarwinitem() const {
  return guildwarwinitem_;
}
inline void guildwarconstant::set_guildwarwinitem(::google::protobuf::int64 value) {
  set_has_guildwarwinitem();
  guildwarwinitem_ = value;
}

// optional int32 guildwarWinNum = 26;
inline bool guildwarconstant::has_guildwarwinnum() const {
  return (_has_bits_[0] & 0x02000000u) != 0;
}
inline void guildwarconstant::set_has_guildwarwinnum() {
  _has_bits_[0] |= 0x02000000u;
}
inline void guildwarconstant::clear_has_guildwarwinnum() {
  _has_bits_[0] &= ~0x02000000u;
}
inline void guildwarconstant::clear_guildwarwinnum() {
  guildwarwinnum_ = 0;
  clear_has_guildwarwinnum();
}
inline ::google::protobuf::int32 guildwarconstant::guildwarwinnum() const {
  return guildwarwinnum_;
}
inline void guildwarconstant::set_guildwarwinnum(::google::protobuf::int32 value) {
  set_has_guildwarwinnum();
  guildwarwinnum_ = value;
}

// optional int64 guildwarLoseItem = 27;
inline bool guildwarconstant::has_guildwarloseitem() const {
  return (_has_bits_[0] & 0x04000000u) != 0;
}
inline void guildwarconstant::set_has_guildwarloseitem() {
  _has_bits_[0] |= 0x04000000u;
}
inline void guildwarconstant::clear_has_guildwarloseitem() {
  _has_bits_[0] &= ~0x04000000u;
}
inline void guildwarconstant::clear_guildwarloseitem() {
  guildwarloseitem_ = GOOGLE_LONGLONG(0);
  clear_has_guildwarloseitem();
}
inline ::google::protobuf::int64 guildwarconstant::guildwarloseitem() const {
  return guildwarloseitem_;
}
inline void guildwarconstant::set_guildwarloseitem(::google::protobuf::int64 value) {
  set_has_guildwarloseitem();
  guildwarloseitem_ = value;
}

// optional int32 guildwarLoseNum = 28;
inline bool guildwarconstant::has_guildwarlosenum() const {
  return (_has_bits_[0] & 0x08000000u) != 0;
}
inline void guildwarconstant::set_has_guildwarlosenum() {
  _has_bits_[0] |= 0x08000000u;
}
inline void guildwarconstant::clear_has_guildwarlosenum() {
  _has_bits_[0] &= ~0x08000000u;
}
inline void guildwarconstant::clear_guildwarlosenum() {
  guildwarlosenum_ = 0;
  clear_has_guildwarlosenum();
}
inline ::google::protobuf::int32 guildwarconstant::guildwarlosenum() const {
  return guildwarlosenum_;
}
inline void guildwarconstant::set_guildwarlosenum(::google::protobuf::int32 value) {
  set_has_guildwarlosenum();
  guildwarlosenum_ = value;
}

// optional int64 guildwarDrawItem = 29;
inline bool guildwarconstant::has_guildwardrawitem() const {
  return (_has_bits_[0] & 0x10000000u) != 0;
}
inline void guildwarconstant::set_has_guildwardrawitem() {
  _has_bits_[0] |= 0x10000000u;
}
inline void guildwarconstant::clear_has_guildwardrawitem() {
  _has_bits_[0] &= ~0x10000000u;
}
inline void guildwarconstant::clear_guildwardrawitem() {
  guildwardrawitem_ = GOOGLE_LONGLONG(0);
  clear_has_guildwardrawitem();
}
inline ::google::protobuf::int64 guildwarconstant::guildwardrawitem() const {
  return guildwardrawitem_;
}
inline void guildwarconstant::set_guildwardrawitem(::google::protobuf::int64 value) {
  set_has_guildwardrawitem();
  guildwardrawitem_ = value;
}

// optional int32 guildwarDrawNum = 30;
inline bool guildwarconstant::has_guildwardrawnum() const {
  return (_has_bits_[0] & 0x20000000u) != 0;
}
inline void guildwarconstant::set_has_guildwardrawnum() {
  _has_bits_[0] |= 0x20000000u;
}
inline void guildwarconstant::clear_has_guildwardrawnum() {
  _has_bits_[0] &= ~0x20000000u;
}
inline void guildwarconstant::clear_guildwardrawnum() {
  guildwardrawnum_ = 0;
  clear_has_guildwardrawnum();
}
inline ::google::protobuf::int32 guildwarconstant::guildwardrawnum() const {
  return guildwardrawnum_;
}
inline void guildwarconstant::set_guildwardrawnum(::google::protobuf::int32 value) {
  set_has_guildwardrawnum();
  guildwardrawnum_ = value;
}

// optional int64 MaterialId = 31;
inline bool guildwarconstant::has_materialid() const {
  return (_has_bits_[0] & 0x40000000u) != 0;
}
inline void guildwarconstant::set_has_materialid() {
  _has_bits_[0] |= 0x40000000u;
}
inline void guildwarconstant::clear_has_materialid() {
  _has_bits_[0] &= ~0x40000000u;
}
inline void guildwarconstant::clear_materialid() {
  materialid_ = GOOGLE_LONGLONG(0);
  clear_has_materialid();
}
inline ::google::protobuf::int64 guildwarconstant::materialid() const {
  return materialid_;
}
inline void guildwarconstant::set_materialid(::google::protobuf::int64 value) {
  set_has_materialid();
  materialid_ = value;
}

// optional int32 MaterialConversion = 32;
inline bool guildwarconstant::has_materialconversion() const {
  return (_has_bits_[0] & 0x80000000u) != 0;
}
inline void guildwarconstant::set_has_materialconversion() {
  _has_bits_[0] |= 0x80000000u;
}
inline void guildwarconstant::clear_has_materialconversion() {
  _has_bits_[0] &= ~0x80000000u;
}
inline void guildwarconstant::clear_materialconversion() {
  materialconversion_ = 0;
  clear_has_materialconversion();
}
inline ::google::protobuf::int32 guildwarconstant::materialconversion() const {
  return materialconversion_;
}
inline void guildwarconstant::set_materialconversion(::google::protobuf::int32 value) {
  set_has_materialconversion();
  materialconversion_ = value;
}

// optional int32 GuildWarExp = 33;
inline bool guildwarconstant::has_guildwarexp() const {
  return (_has_bits_[1] & 0x00000001u) != 0;
}
inline void guildwarconstant::set_has_guildwarexp() {
  _has_bits_[1] |= 0x00000001u;
}
inline void guildwarconstant::clear_has_guildwarexp() {
  _has_bits_[1] &= ~0x00000001u;
}
inline void guildwarconstant::clear_guildwarexp() {
  guildwarexp_ = 0;
  clear_has_guildwarexp();
}
inline ::google::protobuf::int32 guildwarconstant::guildwarexp() const {
  return guildwarexp_;
}
inline void guildwarconstant::set_guildwarexp(::google::protobuf::int32 value) {
  set_has_guildwarexp();
  guildwarexp_ = value;
}

// -------------------------------------------------------------------

// Sheet_guildwarconstant

// repeated .proto_ff.guildwarconstant guildwarconstant_List = 1;
inline int Sheet_guildwarconstant::guildwarconstant_list_size() const {
  return guildwarconstant_list_.size();
}
inline void Sheet_guildwarconstant::clear_guildwarconstant_list() {
  guildwarconstant_list_.Clear();
}
inline const ::proto_ff::guildwarconstant& Sheet_guildwarconstant::guildwarconstant_list(int index) const {
  return guildwarconstant_list_.Get(index);
}
inline ::proto_ff::guildwarconstant* Sheet_guildwarconstant::mutable_guildwarconstant_list(int index) {
  return guildwarconstant_list_.Mutable(index);
}
inline ::proto_ff::guildwarconstant* Sheet_guildwarconstant::add_guildwarconstant_list() {
  return guildwarconstant_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::guildwarconstant >&
Sheet_guildwarconstant::guildwarconstant_list() const {
  return guildwarconstant_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::guildwarconstant >*
Sheet_guildwarconstant::mutable_guildwarconstant_list() {
  return &guildwarconstant_list_;
}

// -------------------------------------------------------------------

// guildwarmorale

// optional int64 moraleLevel = 1;
inline bool guildwarmorale::has_moralelevel() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void guildwarmorale::set_has_moralelevel() {
  _has_bits_[0] |= 0x00000001u;
}
inline void guildwarmorale::clear_has_moralelevel() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void guildwarmorale::clear_moralelevel() {
  moralelevel_ = GOOGLE_LONGLONG(0);
  clear_has_moralelevel();
}
inline ::google::protobuf::int64 guildwarmorale::moralelevel() const {
  return moralelevel_;
}
inline void guildwarmorale::set_moralelevel(::google::protobuf::int64 value) {
  set_has_moralelevel();
  moralelevel_ = value;
}

// optional int32 costMaterial = 2;
inline bool guildwarmorale::has_costmaterial() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void guildwarmorale::set_has_costmaterial() {
  _has_bits_[0] |= 0x00000002u;
}
inline void guildwarmorale::clear_has_costmaterial() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void guildwarmorale::clear_costmaterial() {
  costmaterial_ = 0;
  clear_has_costmaterial();
}
inline ::google::protobuf::int32 guildwarmorale::costmaterial() const {
  return costmaterial_;
}
inline void guildwarmorale::set_costmaterial(::google::protobuf::int32 value) {
  set_has_costmaterial();
  costmaterial_ = value;
}

// optional int64 skillId = 3;
inline bool guildwarmorale::has_skillid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void guildwarmorale::set_has_skillid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void guildwarmorale::clear_has_skillid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void guildwarmorale::clear_skillid() {
  skillid_ = GOOGLE_LONGLONG(0);
  clear_has_skillid();
}
inline ::google::protobuf::int64 guildwarmorale::skillid() const {
  return skillid_;
}
inline void guildwarmorale::set_skillid(::google::protobuf::int64 value) {
  set_has_skillid();
  skillid_ = value;
}

// optional int32 skillLevel = 4;
inline bool guildwarmorale::has_skilllevel() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void guildwarmorale::set_has_skilllevel() {
  _has_bits_[0] |= 0x00000008u;
}
inline void guildwarmorale::clear_has_skilllevel() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void guildwarmorale::clear_skilllevel() {
  skilllevel_ = 0;
  clear_has_skilllevel();
}
inline ::google::protobuf::int32 guildwarmorale::skilllevel() const {
  return skilllevel_;
}
inline void guildwarmorale::set_skilllevel(::google::protobuf::int32 value) {
  set_has_skilllevel();
  skilllevel_ = value;
}

// -------------------------------------------------------------------

// Sheet_guildwarmorale

// repeated .proto_ff.guildwarmorale guildwarmorale_List = 1;
inline int Sheet_guildwarmorale::guildwarmorale_list_size() const {
  return guildwarmorale_list_.size();
}
inline void Sheet_guildwarmorale::clear_guildwarmorale_list() {
  guildwarmorale_list_.Clear();
}
inline const ::proto_ff::guildwarmorale& Sheet_guildwarmorale::guildwarmorale_list(int index) const {
  return guildwarmorale_list_.Get(index);
}
inline ::proto_ff::guildwarmorale* Sheet_guildwarmorale::mutable_guildwarmorale_list(int index) {
  return guildwarmorale_list_.Mutable(index);
}
inline ::proto_ff::guildwarmorale* Sheet_guildwarmorale::add_guildwarmorale_list() {
  return guildwarmorale_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::guildwarmorale >&
Sheet_guildwarmorale::guildwarmorale_list() const {
  return guildwarmorale_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::guildwarmorale >*
Sheet_guildwarmorale::mutable_guildwarmorale_list() {
  return &guildwarmorale_list_;
}

// -------------------------------------------------------------------

// guildwarrevive

// optional int32 reviveNum = 1;
inline bool guildwarrevive::has_revivenum() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void guildwarrevive::set_has_revivenum() {
  _has_bits_[0] |= 0x00000001u;
}
inline void guildwarrevive::clear_has_revivenum() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void guildwarrevive::clear_revivenum() {
  revivenum_ = 0;
  clear_has_revivenum();
}
inline ::google::protobuf::int32 guildwarrevive::revivenum() const {
  return revivenum_;
}
inline void guildwarrevive::set_revivenum(::google::protobuf::int32 value) {
  set_has_revivenum();
  revivenum_ = value;
}

// optional int32 reviveCost = 2;
inline bool guildwarrevive::has_revivecost() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void guildwarrevive::set_has_revivecost() {
  _has_bits_[0] |= 0x00000002u;
}
inline void guildwarrevive::clear_has_revivecost() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void guildwarrevive::clear_revivecost() {
  revivecost_ = 0;
  clear_has_revivecost();
}
inline ::google::protobuf::int32 guildwarrevive::revivecost() const {
  return revivecost_;
}
inline void guildwarrevive::set_revivecost(::google::protobuf::int32 value) {
  set_has_revivecost();
  revivecost_ = value;
}

// -------------------------------------------------------------------

// Sheet_guildwarrevive

// repeated .proto_ff.guildwarrevive guildwarrevive_List = 1;
inline int Sheet_guildwarrevive::guildwarrevive_list_size() const {
  return guildwarrevive_list_.size();
}
inline void Sheet_guildwarrevive::clear_guildwarrevive_list() {
  guildwarrevive_list_.Clear();
}
inline const ::proto_ff::guildwarrevive& Sheet_guildwarrevive::guildwarrevive_list(int index) const {
  return guildwarrevive_list_.Get(index);
}
inline ::proto_ff::guildwarrevive* Sheet_guildwarrevive::mutable_guildwarrevive_list(int index) {
  return guildwarrevive_list_.Mutable(index);
}
inline ::proto_ff::guildwarrevive* Sheet_guildwarrevive::add_guildwarrevive_list() {
  return guildwarrevive_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::guildwarrevive >&
Sheet_guildwarrevive::guildwarrevive_list() const {
  return guildwarrevive_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::guildwarrevive >*
Sheet_guildwarrevive::mutable_guildwarrevive_list() {
  return &guildwarrevive_list_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto_ff

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_guild_2eproto__INCLUDED
