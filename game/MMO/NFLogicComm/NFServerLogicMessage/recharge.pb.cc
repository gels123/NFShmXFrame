// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: recharge.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "recharge.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace proto_ff {

namespace {

const ::google::protobuf::Descriptor* E_RechargeRechargeItemDesc_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_RechargeRechargeItemDesc_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_RechargeRechargeChannelDesc_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_RechargeRechargeChannelDesc_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_RechargeRecharge_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_RechargeRecharge_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_RechargeRecharge_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_RechargeRecharge_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_recharge_2eproto() {
  protobuf_AddDesc_recharge_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "recharge.proto");
  GOOGLE_CHECK(file != NULL);
  E_RechargeRechargeItemDesc_descriptor_ = file->message_type(0);
  static const int E_RechargeRechargeItemDesc_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_RechargeRechargeItemDesc, m_num_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_RechargeRechargeItemDesc, m_id_),
  };
  E_RechargeRechargeItemDesc_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_RechargeRechargeItemDesc_descriptor_,
      E_RechargeRechargeItemDesc::default_instance_,
      E_RechargeRechargeItemDesc_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_RechargeRechargeItemDesc, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_RechargeRechargeItemDesc, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_RechargeRechargeItemDesc));
  E_RechargeRechargeChannelDesc_descriptor_ = file->message_type(1);
  static const int E_RechargeRechargeChannelDesc_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_RechargeRechargeChannelDesc, m_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_RechargeRechargeChannelDesc, m_point_),
  };
  E_RechargeRechargeChannelDesc_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_RechargeRechargeChannelDesc_descriptor_,
      E_RechargeRechargeChannelDesc::default_instance_,
      E_RechargeRechargeChannelDesc_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_RechargeRechargeChannelDesc, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_RechargeRechargeChannelDesc, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_RechargeRechargeChannelDesc));
  E_RechargeRecharge_descriptor_ = file->message_type(2);
  static const int E_RechargeRecharge_offsets_[20] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_RechargeRecharge, m_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_RechargeRecharge, m_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_RechargeRecharge, m_defaultpoint_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_RechargeRecharge, m_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_RechargeRecharge, m_unit_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_RechargeRecharge, m_beizhu_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_RechargeRecharge, m_quantity_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_RechargeRecharge, m_itemnum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_RechargeRecharge, m_multipletimes_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_RechargeRecharge, m_multiplereward_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_RechargeRecharge, m_zuanshitype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_RechargeRecharge, m_vipexp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_RechargeRecharge, m_vipexplimit_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_RechargeRecharge, m_activitycount_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_RechargeRecharge, m_price_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_RechargeRecharge, m_presentid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_RechargeRecharge, m_fristpresent_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_RechargeRecharge, m_icon_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_RechargeRecharge, m_item_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_RechargeRecharge, m_channel_),
  };
  E_RechargeRecharge_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_RechargeRecharge_descriptor_,
      E_RechargeRecharge::default_instance_,
      E_RechargeRecharge_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_RechargeRecharge, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_RechargeRecharge, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_RechargeRecharge));
  Sheet_RechargeRecharge_descriptor_ = file->message_type(3);
  static const int Sheet_RechargeRecharge_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_RechargeRecharge, e_rechargerecharge_list_),
  };
  Sheet_RechargeRecharge_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_RechargeRecharge_descriptor_,
      Sheet_RechargeRecharge::default_instance_,
      Sheet_RechargeRecharge_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_RechargeRecharge, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_RechargeRecharge, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_RechargeRecharge));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_recharge_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_RechargeRechargeItemDesc_descriptor_, &E_RechargeRechargeItemDesc::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_RechargeRechargeChannelDesc_descriptor_, &E_RechargeRechargeChannelDesc::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_RechargeRecharge_descriptor_, &E_RechargeRecharge::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_RechargeRecharge_descriptor_, &Sheet_RechargeRecharge::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_recharge_2eproto() {
  delete E_RechargeRechargeItemDesc::default_instance_;
  delete E_RechargeRechargeItemDesc_reflection_;
  delete E_RechargeRechargeChannelDesc::default_instance_;
  delete E_RechargeRechargeChannelDesc_reflection_;
  delete E_RechargeRecharge::default_instance_;
  delete E_RechargeRecharge_reflection_;
  delete Sheet_RechargeRecharge::default_instance_;
  delete Sheet_RechargeRecharge_reflection_;
}

void protobuf_AddDesc_recharge_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::yd_fieldoptions::protobuf_AddDesc_yd_5ffieldoptions_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\016recharge.proto\022\010proto_ff\032\025yd_fieldopti"
    "ons.proto\"M\n\032E_RechargeRechargeItemDesc\022"
    "\031\n\005m_num\030\001 \001(\005B\n\302\377\024\006\346\225\260\351\207\217\022\024\n\004m_id\030\002 \001(\003"
    "B\006\302\377\024\002id\"Y\n\035E_RechargeRechargeChannelDes"
    "c\022\024\n\004m_id\030\001 \001(\005B\006\302\377\024\002id\022\"\n\007m_point\030\002 \001(\t"
    "B\021\302\377\024\t\350\256\241\350\264\271\347\202\271\220\301\024<\"\354\006\n\022E_RechargeRechar"
    "ge\022\024\n\004m_id\030\001 \001(\005B\006\302\377\024\002id\022\036\n\006m_name\030\002 \001(\t"
    "B\016\302\377\024\006\345\220\215\347\247\260\220\301\024<\022/\n\016m_defaultpoint\030\003 \001(\t"
    "B\027\302\377\024\017\351\273\230\350\256\244\350\256\241\350\264\271\347\202\271\220\301\024<\022 \n\006m_type\030\004 \001("
    "\005B\020\302\377\024\014\345\205\205\345\200\274\347\261\273\345\236\213\022\036\n\006m_unit\030\005 \001(\tB\016\302\377\024"
    "\006\345\215\225\344\275\215\220\301\024<\022!\n\010m_beizhu\030\006 \001(\tB\017\302\377\024\006\345\244\207\346\263"
    "\250\220\301\024\310\001\022$\n\nm_quantity\030\007 \001(\003B\020\302\377\024\014\350\216\267\345\217\226\346\241"
    "\243\344\275\215\022,\n\tm_itemnum\030\010 \001(\005B\031\302\377\024\025\350\216\267\345\276\227\347\211\251\345\223"
    "\201\347\232\204\346\225\260\351\207\217\022)\n\017m_multipletimes\030\t \001(\003B\020\302\377\024"
    "\014\351\207\215\345\244\215\346\254\241\346\225\260\022*\n\020m_multiplereward\030\n \001(\003B"
    "\020\302\377\024\014\351\207\215\345\244\215\345\245\226\345\212\261\022\'\n\rm_zuanshitype\030\013 \001(\005"
    "B\020\302\377\024\014\350\216\267\345\217\226\347\261\273\345\236\213\022\037\n\010m_vipexp\030\014 \001(\005B\r\302\377"
    "\024\tvip\347\273\217\351\252\214\022*\n\rm_vipexplimit\030\r \001(\005B\023\302\377\024\017"
    "vip\347\273\217\351\252\214\351\231\220\345\210\266\022/\n\017m_activitycount\030\016 \001(\005"
    "B\026\302\377\024\022\350\277\220\350\220\245\346\264\273\345\212\250\350\256\241\346\225\260\022\033\n\007m_price\030\017 \001("
    "\005B\n\302\377\024\006\345\224\256\344\273\267\022-\n\013m_presentid\030\020 \001(\005B\030\302\377\024\024"
    "\351\246\226\345\205\205\350\265\240\351\200\201\347\211\251\345\223\201id\022.\n\016m_fristpresent\030\021"
    " \001(\005B\026\302\377\024\022\351\246\226\345\205\205\350\265\240\351\200\201\346\225\260\351\207\217\022\036\n\006m_icon\030\022"
    " \001(\tB\016\302\377\024\006\345\233\276\346\240\207\220\301\024<\022P\n\006m_item\030\023 \003(\0132$.p"
    "roto_ff.E_RechargeRechargeItemDescB\032\302\377\024\022"
    "\345\205\205\345\200\274\350\265\240\351\200\201\347\211\251\345\223\201\210\301\024\002\022J\n\tm_channel\030\024 \003("
    "\0132\'.proto_ff.E_RechargeRechargeChannelDe"
    "scB\016\302\377\024\006\346\270\240\351\201\223\210\301\024\004\"^\n\026Sheet_RechargeRech"
    "arge\022D\n\027E_RechargeRecharge_List\030\001 \003(\0132\034."
    "proto_ff.E_RechargeRechargeB\005\210\301\024\320\017", 1194);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "recharge.proto", &protobuf_RegisterTypes);
  E_RechargeRechargeItemDesc::default_instance_ = new E_RechargeRechargeItemDesc();
  E_RechargeRechargeChannelDesc::default_instance_ = new E_RechargeRechargeChannelDesc();
  E_RechargeRecharge::default_instance_ = new E_RechargeRecharge();
  Sheet_RechargeRecharge::default_instance_ = new Sheet_RechargeRecharge();
  E_RechargeRechargeItemDesc::default_instance_->InitAsDefaultInstance();
  E_RechargeRechargeChannelDesc::default_instance_->InitAsDefaultInstance();
  E_RechargeRecharge::default_instance_->InitAsDefaultInstance();
  Sheet_RechargeRecharge::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_recharge_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_recharge_2eproto {
  StaticDescriptorInitializer_recharge_2eproto() {
    protobuf_AddDesc_recharge_2eproto();
  }
} static_descriptor_initializer_recharge_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int E_RechargeRechargeItemDesc::kMNumFieldNumber;
const int E_RechargeRechargeItemDesc::kMIdFieldNumber;
#endif  // !_MSC_VER

E_RechargeRechargeItemDesc::E_RechargeRechargeItemDesc()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_RechargeRechargeItemDesc::InitAsDefaultInstance() {
}

E_RechargeRechargeItemDesc::E_RechargeRechargeItemDesc(const E_RechargeRechargeItemDesc& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_RechargeRechargeItemDesc::SharedCtor() {
  _cached_size_ = 0;
  m_num_ = 0;
  m_id_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_RechargeRechargeItemDesc::~E_RechargeRechargeItemDesc() {
  SharedDtor();
}

void E_RechargeRechargeItemDesc::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_RechargeRechargeItemDesc::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_RechargeRechargeItemDesc::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_RechargeRechargeItemDesc_descriptor_;
}

const E_RechargeRechargeItemDesc& E_RechargeRechargeItemDesc::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_recharge_2eproto();
  return *default_instance_;
}

E_RechargeRechargeItemDesc* E_RechargeRechargeItemDesc::default_instance_ = NULL;

E_RechargeRechargeItemDesc* E_RechargeRechargeItemDesc::New() const {
  return new E_RechargeRechargeItemDesc;
}

void E_RechargeRechargeItemDesc::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_num_ = 0;
    m_id_ = GOOGLE_LONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_RechargeRechargeItemDesc::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_num = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_num_)));
          set_has_m_num();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_id;
        break;
      }

      // optional int64 m_id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &m_id_)));
          set_has_m_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_RechargeRechargeItemDesc::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_num = 1;
  if (has_m_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_num(), output);
  }

  // optional int64 m_id = 2;
  if (has_m_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->m_id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_RechargeRechargeItemDesc::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_num = 1;
  if (has_m_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_num(), target);
  }

  // optional int64 m_id = 2;
  if (has_m_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->m_id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_RechargeRechargeItemDesc::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_num = 1;
    if (has_m_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_num());
    }

    // optional int64 m_id = 2;
    if (has_m_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->m_id());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_RechargeRechargeItemDesc::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_RechargeRechargeItemDesc* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_RechargeRechargeItemDesc*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_RechargeRechargeItemDesc::MergeFrom(const E_RechargeRechargeItemDesc& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_num()) {
      set_m_num(from.m_num());
    }
    if (from.has_m_id()) {
      set_m_id(from.m_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_RechargeRechargeItemDesc::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_RechargeRechargeItemDesc::CopyFrom(const E_RechargeRechargeItemDesc& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_RechargeRechargeItemDesc::IsInitialized() const {

  return true;
}

void E_RechargeRechargeItemDesc::Swap(E_RechargeRechargeItemDesc* other) {
  if (other != this) {
    std::swap(m_num_, other->m_num_);
    std::swap(m_id_, other->m_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_RechargeRechargeItemDesc::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_RechargeRechargeItemDesc_descriptor_;
  metadata.reflection = E_RechargeRechargeItemDesc_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_RechargeRechargeChannelDesc::kMIdFieldNumber;
const int E_RechargeRechargeChannelDesc::kMPointFieldNumber;
#endif  // !_MSC_VER

E_RechargeRechargeChannelDesc::E_RechargeRechargeChannelDesc()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_RechargeRechargeChannelDesc::InitAsDefaultInstance() {
}

E_RechargeRechargeChannelDesc::E_RechargeRechargeChannelDesc(const E_RechargeRechargeChannelDesc& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_RechargeRechargeChannelDesc::SharedCtor() {
  _cached_size_ = 0;
  m_id_ = 0;
  m_point_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_RechargeRechargeChannelDesc::~E_RechargeRechargeChannelDesc() {
  SharedDtor();
}

void E_RechargeRechargeChannelDesc::SharedDtor() {
  if (m_point_ != &::google::protobuf::internal::kEmptyString) {
    delete m_point_;
  }
  if (this != default_instance_) {
  }
}

void E_RechargeRechargeChannelDesc::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_RechargeRechargeChannelDesc::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_RechargeRechargeChannelDesc_descriptor_;
}

const E_RechargeRechargeChannelDesc& E_RechargeRechargeChannelDesc::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_recharge_2eproto();
  return *default_instance_;
}

E_RechargeRechargeChannelDesc* E_RechargeRechargeChannelDesc::default_instance_ = NULL;

E_RechargeRechargeChannelDesc* E_RechargeRechargeChannelDesc::New() const {
  return new E_RechargeRechargeChannelDesc;
}

void E_RechargeRechargeChannelDesc::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_id_ = 0;
    if (has_m_point()) {
      if (m_point_ != &::google::protobuf::internal::kEmptyString) {
        m_point_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_RechargeRechargeChannelDesc::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_id_)));
          set_has_m_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_m_point;
        break;
      }

      // optional string m_point = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_point:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_m_point()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->m_point().data(), this->m_point().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_RechargeRechargeChannelDesc::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_id(), output);
  }

  // optional string m_point = 2;
  if (has_m_point()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_point().data(), this->m_point().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->m_point(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_RechargeRechargeChannelDesc::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_id(), target);
  }

  // optional string m_point = 2;
  if (has_m_point()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_point().data(), this->m_point().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->m_point(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_RechargeRechargeChannelDesc::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_id = 1;
    if (has_m_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_id());
    }

    // optional string m_point = 2;
    if (has_m_point()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->m_point());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_RechargeRechargeChannelDesc::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_RechargeRechargeChannelDesc* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_RechargeRechargeChannelDesc*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_RechargeRechargeChannelDesc::MergeFrom(const E_RechargeRechargeChannelDesc& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_id()) {
      set_m_id(from.m_id());
    }
    if (from.has_m_point()) {
      set_m_point(from.m_point());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_RechargeRechargeChannelDesc::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_RechargeRechargeChannelDesc::CopyFrom(const E_RechargeRechargeChannelDesc& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_RechargeRechargeChannelDesc::IsInitialized() const {

  return true;
}

void E_RechargeRechargeChannelDesc::Swap(E_RechargeRechargeChannelDesc* other) {
  if (other != this) {
    std::swap(m_id_, other->m_id_);
    std::swap(m_point_, other->m_point_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_RechargeRechargeChannelDesc::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_RechargeRechargeChannelDesc_descriptor_;
  metadata.reflection = E_RechargeRechargeChannelDesc_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_RechargeRecharge::kMIdFieldNumber;
const int E_RechargeRecharge::kMNameFieldNumber;
const int E_RechargeRecharge::kMDefaultpointFieldNumber;
const int E_RechargeRecharge::kMTypeFieldNumber;
const int E_RechargeRecharge::kMUnitFieldNumber;
const int E_RechargeRecharge::kMBeizhuFieldNumber;
const int E_RechargeRecharge::kMQuantityFieldNumber;
const int E_RechargeRecharge::kMItemnumFieldNumber;
const int E_RechargeRecharge::kMMultipletimesFieldNumber;
const int E_RechargeRecharge::kMMultiplerewardFieldNumber;
const int E_RechargeRecharge::kMZuanshitypeFieldNumber;
const int E_RechargeRecharge::kMVipexpFieldNumber;
const int E_RechargeRecharge::kMVipexplimitFieldNumber;
const int E_RechargeRecharge::kMActivitycountFieldNumber;
const int E_RechargeRecharge::kMPriceFieldNumber;
const int E_RechargeRecharge::kMPresentidFieldNumber;
const int E_RechargeRecharge::kMFristpresentFieldNumber;
const int E_RechargeRecharge::kMIconFieldNumber;
const int E_RechargeRecharge::kMItemFieldNumber;
const int E_RechargeRecharge::kMChannelFieldNumber;
#endif  // !_MSC_VER

E_RechargeRecharge::E_RechargeRecharge()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_RechargeRecharge::InitAsDefaultInstance() {
}

E_RechargeRecharge::E_RechargeRecharge(const E_RechargeRecharge& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_RechargeRecharge::SharedCtor() {
  _cached_size_ = 0;
  m_id_ = 0;
  m_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  m_defaultpoint_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  m_type_ = 0;
  m_unit_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  m_beizhu_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  m_quantity_ = GOOGLE_LONGLONG(0);
  m_itemnum_ = 0;
  m_multipletimes_ = GOOGLE_LONGLONG(0);
  m_multiplereward_ = GOOGLE_LONGLONG(0);
  m_zuanshitype_ = 0;
  m_vipexp_ = 0;
  m_vipexplimit_ = 0;
  m_activitycount_ = 0;
  m_price_ = 0;
  m_presentid_ = 0;
  m_fristpresent_ = 0;
  m_icon_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_RechargeRecharge::~E_RechargeRecharge() {
  SharedDtor();
}

void E_RechargeRecharge::SharedDtor() {
  if (m_name_ != &::google::protobuf::internal::kEmptyString) {
    delete m_name_;
  }
  if (m_defaultpoint_ != &::google::protobuf::internal::kEmptyString) {
    delete m_defaultpoint_;
  }
  if (m_unit_ != &::google::protobuf::internal::kEmptyString) {
    delete m_unit_;
  }
  if (m_beizhu_ != &::google::protobuf::internal::kEmptyString) {
    delete m_beizhu_;
  }
  if (m_icon_ != &::google::protobuf::internal::kEmptyString) {
    delete m_icon_;
  }
  if (this != default_instance_) {
  }
}

void E_RechargeRecharge::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_RechargeRecharge::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_RechargeRecharge_descriptor_;
}

const E_RechargeRecharge& E_RechargeRecharge::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_recharge_2eproto();
  return *default_instance_;
}

E_RechargeRecharge* E_RechargeRecharge::default_instance_ = NULL;

E_RechargeRecharge* E_RechargeRecharge::New() const {
  return new E_RechargeRecharge;
}

void E_RechargeRecharge::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_id_ = 0;
    if (has_m_name()) {
      if (m_name_ != &::google::protobuf::internal::kEmptyString) {
        m_name_->clear();
      }
    }
    if (has_m_defaultpoint()) {
      if (m_defaultpoint_ != &::google::protobuf::internal::kEmptyString) {
        m_defaultpoint_->clear();
      }
    }
    m_type_ = 0;
    if (has_m_unit()) {
      if (m_unit_ != &::google::protobuf::internal::kEmptyString) {
        m_unit_->clear();
      }
    }
    if (has_m_beizhu()) {
      if (m_beizhu_ != &::google::protobuf::internal::kEmptyString) {
        m_beizhu_->clear();
      }
    }
    m_quantity_ = GOOGLE_LONGLONG(0);
    m_itemnum_ = 0;
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    m_multipletimes_ = GOOGLE_LONGLONG(0);
    m_multiplereward_ = GOOGLE_LONGLONG(0);
    m_zuanshitype_ = 0;
    m_vipexp_ = 0;
    m_vipexplimit_ = 0;
    m_activitycount_ = 0;
    m_price_ = 0;
    m_presentid_ = 0;
  }
  if (_has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    m_fristpresent_ = 0;
    if (has_m_icon()) {
      if (m_icon_ != &::google::protobuf::internal::kEmptyString) {
        m_icon_->clear();
      }
    }
  }
  m_item_.Clear();
  m_channel_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_RechargeRecharge::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_id_)));
          set_has_m_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_m_name;
        break;
      }

      // optional string m_name = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_m_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->m_name().data(), this->m_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_m_defaultpoint;
        break;
      }

      // optional string m_defaultpoint = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_defaultpoint:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_m_defaultpoint()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->m_defaultpoint().data(), this->m_defaultpoint().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_m_type;
        break;
      }

      // optional int32 m_type = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_type_)));
          set_has_m_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_m_unit;
        break;
      }

      // optional string m_unit = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_unit:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_m_unit()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->m_unit().data(), this->m_unit().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_m_beizhu;
        break;
      }

      // optional string m_beizhu = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_beizhu:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_m_beizhu()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->m_beizhu().data(), this->m_beizhu().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_m_quantity;
        break;
      }

      // optional int64 m_quantity = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_quantity:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &m_quantity_)));
          set_has_m_quantity();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(64)) goto parse_m_itemnum;
        break;
      }

      // optional int32 m_itemnum = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_itemnum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_itemnum_)));
          set_has_m_itemnum();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(72)) goto parse_m_multipletimes;
        break;
      }

      // optional int64 m_multipletimes = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_multipletimes:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &m_multipletimes_)));
          set_has_m_multipletimes();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(80)) goto parse_m_multiplereward;
        break;
      }

      // optional int64 m_multiplereward = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_multiplereward:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &m_multiplereward_)));
          set_has_m_multiplereward();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(88)) goto parse_m_zuanshitype;
        break;
      }

      // optional int32 m_zuanshitype = 11;
      case 11: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_zuanshitype:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_zuanshitype_)));
          set_has_m_zuanshitype();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(96)) goto parse_m_vipexp;
        break;
      }

      // optional int32 m_vipexp = 12;
      case 12: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_vipexp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_vipexp_)));
          set_has_m_vipexp();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(104)) goto parse_m_vipexplimit;
        break;
      }

      // optional int32 m_vipexplimit = 13;
      case 13: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_vipexplimit:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_vipexplimit_)));
          set_has_m_vipexplimit();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(112)) goto parse_m_activitycount;
        break;
      }

      // optional int32 m_activitycount = 14;
      case 14: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_activitycount:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_activitycount_)));
          set_has_m_activitycount();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(120)) goto parse_m_price;
        break;
      }

      // optional int32 m_price = 15;
      case 15: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_price:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_price_)));
          set_has_m_price();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(128)) goto parse_m_presentid;
        break;
      }

      // optional int32 m_presentid = 16;
      case 16: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_presentid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_presentid_)));
          set_has_m_presentid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(136)) goto parse_m_fristpresent;
        break;
      }

      // optional int32 m_fristpresent = 17;
      case 17: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_fristpresent:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_fristpresent_)));
          set_has_m_fristpresent();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(146)) goto parse_m_icon;
        break;
      }

      // optional string m_icon = 18;
      case 18: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_icon:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_m_icon()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->m_icon().data(), this->m_icon().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(154)) goto parse_m_item;
        break;
      }

      // repeated .proto_ff.E_RechargeRechargeItemDesc m_item = 19;
      case 19: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_item:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_m_item()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(154)) goto parse_m_item;
        if (input->ExpectTag(162)) goto parse_m_channel;
        break;
      }

      // repeated .proto_ff.E_RechargeRechargeChannelDesc m_channel = 20;
      case 20: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_channel:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_m_channel()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(162)) goto parse_m_channel;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_RechargeRecharge::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_id(), output);
  }

  // optional string m_name = 2;
  if (has_m_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_name().data(), this->m_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->m_name(), output);
  }

  // optional string m_defaultpoint = 3;
  if (has_m_defaultpoint()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_defaultpoint().data(), this->m_defaultpoint().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->m_defaultpoint(), output);
  }

  // optional int32 m_type = 4;
  if (has_m_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->m_type(), output);
  }

  // optional string m_unit = 5;
  if (has_m_unit()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_unit().data(), this->m_unit().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->m_unit(), output);
  }

  // optional string m_beizhu = 6;
  if (has_m_beizhu()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_beizhu().data(), this->m_beizhu().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      6, this->m_beizhu(), output);
  }

  // optional int64 m_quantity = 7;
  if (has_m_quantity()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(7, this->m_quantity(), output);
  }

  // optional int32 m_itemnum = 8;
  if (has_m_itemnum()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->m_itemnum(), output);
  }

  // optional int64 m_multipletimes = 9;
  if (has_m_multipletimes()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(9, this->m_multipletimes(), output);
  }

  // optional int64 m_multiplereward = 10;
  if (has_m_multiplereward()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(10, this->m_multiplereward(), output);
  }

  // optional int32 m_zuanshitype = 11;
  if (has_m_zuanshitype()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->m_zuanshitype(), output);
  }

  // optional int32 m_vipexp = 12;
  if (has_m_vipexp()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(12, this->m_vipexp(), output);
  }

  // optional int32 m_vipexplimit = 13;
  if (has_m_vipexplimit()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(13, this->m_vipexplimit(), output);
  }

  // optional int32 m_activitycount = 14;
  if (has_m_activitycount()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(14, this->m_activitycount(), output);
  }

  // optional int32 m_price = 15;
  if (has_m_price()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(15, this->m_price(), output);
  }

  // optional int32 m_presentid = 16;
  if (has_m_presentid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(16, this->m_presentid(), output);
  }

  // optional int32 m_fristpresent = 17;
  if (has_m_fristpresent()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(17, this->m_fristpresent(), output);
  }

  // optional string m_icon = 18;
  if (has_m_icon()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_icon().data(), this->m_icon().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      18, this->m_icon(), output);
  }

  // repeated .proto_ff.E_RechargeRechargeItemDesc m_item = 19;
  for (int i = 0; i < this->m_item_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      19, this->m_item(i), output);
  }

  // repeated .proto_ff.E_RechargeRechargeChannelDesc m_channel = 20;
  for (int i = 0; i < this->m_channel_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      20, this->m_channel(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_RechargeRecharge::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_id(), target);
  }

  // optional string m_name = 2;
  if (has_m_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_name().data(), this->m_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->m_name(), target);
  }

  // optional string m_defaultpoint = 3;
  if (has_m_defaultpoint()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_defaultpoint().data(), this->m_defaultpoint().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->m_defaultpoint(), target);
  }

  // optional int32 m_type = 4;
  if (has_m_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->m_type(), target);
  }

  // optional string m_unit = 5;
  if (has_m_unit()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_unit().data(), this->m_unit().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->m_unit(), target);
  }

  // optional string m_beizhu = 6;
  if (has_m_beizhu()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_beizhu().data(), this->m_beizhu().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->m_beizhu(), target);
  }

  // optional int64 m_quantity = 7;
  if (has_m_quantity()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(7, this->m_quantity(), target);
  }

  // optional int32 m_itemnum = 8;
  if (has_m_itemnum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->m_itemnum(), target);
  }

  // optional int64 m_multipletimes = 9;
  if (has_m_multipletimes()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(9, this->m_multipletimes(), target);
  }

  // optional int64 m_multiplereward = 10;
  if (has_m_multiplereward()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(10, this->m_multiplereward(), target);
  }

  // optional int32 m_zuanshitype = 11;
  if (has_m_zuanshitype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->m_zuanshitype(), target);
  }

  // optional int32 m_vipexp = 12;
  if (has_m_vipexp()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(12, this->m_vipexp(), target);
  }

  // optional int32 m_vipexplimit = 13;
  if (has_m_vipexplimit()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(13, this->m_vipexplimit(), target);
  }

  // optional int32 m_activitycount = 14;
  if (has_m_activitycount()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(14, this->m_activitycount(), target);
  }

  // optional int32 m_price = 15;
  if (has_m_price()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(15, this->m_price(), target);
  }

  // optional int32 m_presentid = 16;
  if (has_m_presentid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(16, this->m_presentid(), target);
  }

  // optional int32 m_fristpresent = 17;
  if (has_m_fristpresent()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(17, this->m_fristpresent(), target);
  }

  // optional string m_icon = 18;
  if (has_m_icon()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_icon().data(), this->m_icon().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        18, this->m_icon(), target);
  }

  // repeated .proto_ff.E_RechargeRechargeItemDesc m_item = 19;
  for (int i = 0; i < this->m_item_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        19, this->m_item(i), target);
  }

  // repeated .proto_ff.E_RechargeRechargeChannelDesc m_channel = 20;
  for (int i = 0; i < this->m_channel_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        20, this->m_channel(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_RechargeRecharge::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_id = 1;
    if (has_m_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_id());
    }

    // optional string m_name = 2;
    if (has_m_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->m_name());
    }

    // optional string m_defaultpoint = 3;
    if (has_m_defaultpoint()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->m_defaultpoint());
    }

    // optional int32 m_type = 4;
    if (has_m_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_type());
    }

    // optional string m_unit = 5;
    if (has_m_unit()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->m_unit());
    }

    // optional string m_beizhu = 6;
    if (has_m_beizhu()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->m_beizhu());
    }

    // optional int64 m_quantity = 7;
    if (has_m_quantity()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->m_quantity());
    }

    // optional int32 m_itemnum = 8;
    if (has_m_itemnum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_itemnum());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional int64 m_multipletimes = 9;
    if (has_m_multipletimes()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->m_multipletimes());
    }

    // optional int64 m_multiplereward = 10;
    if (has_m_multiplereward()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->m_multiplereward());
    }

    // optional int32 m_zuanshitype = 11;
    if (has_m_zuanshitype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_zuanshitype());
    }

    // optional int32 m_vipexp = 12;
    if (has_m_vipexp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_vipexp());
    }

    // optional int32 m_vipexplimit = 13;
    if (has_m_vipexplimit()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_vipexplimit());
    }

    // optional int32 m_activitycount = 14;
    if (has_m_activitycount()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_activitycount());
    }

    // optional int32 m_price = 15;
    if (has_m_price()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_price());
    }

    // optional int32 m_presentid = 16;
    if (has_m_presentid()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_presentid());
    }

  }
  if (_has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    // optional int32 m_fristpresent = 17;
    if (has_m_fristpresent()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_fristpresent());
    }

    // optional string m_icon = 18;
    if (has_m_icon()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->m_icon());
    }

  }
  // repeated .proto_ff.E_RechargeRechargeItemDesc m_item = 19;
  total_size += 2 * this->m_item_size();
  for (int i = 0; i < this->m_item_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->m_item(i));
  }

  // repeated .proto_ff.E_RechargeRechargeChannelDesc m_channel = 20;
  total_size += 2 * this->m_channel_size();
  for (int i = 0; i < this->m_channel_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->m_channel(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_RechargeRecharge::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_RechargeRecharge* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_RechargeRecharge*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_RechargeRecharge::MergeFrom(const E_RechargeRecharge& from) {
  GOOGLE_CHECK_NE(&from, this);
  m_item_.MergeFrom(from.m_item_);
  m_channel_.MergeFrom(from.m_channel_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_id()) {
      set_m_id(from.m_id());
    }
    if (from.has_m_name()) {
      set_m_name(from.m_name());
    }
    if (from.has_m_defaultpoint()) {
      set_m_defaultpoint(from.m_defaultpoint());
    }
    if (from.has_m_type()) {
      set_m_type(from.m_type());
    }
    if (from.has_m_unit()) {
      set_m_unit(from.m_unit());
    }
    if (from.has_m_beizhu()) {
      set_m_beizhu(from.m_beizhu());
    }
    if (from.has_m_quantity()) {
      set_m_quantity(from.m_quantity());
    }
    if (from.has_m_itemnum()) {
      set_m_itemnum(from.m_itemnum());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_m_multipletimes()) {
      set_m_multipletimes(from.m_multipletimes());
    }
    if (from.has_m_multiplereward()) {
      set_m_multiplereward(from.m_multiplereward());
    }
    if (from.has_m_zuanshitype()) {
      set_m_zuanshitype(from.m_zuanshitype());
    }
    if (from.has_m_vipexp()) {
      set_m_vipexp(from.m_vipexp());
    }
    if (from.has_m_vipexplimit()) {
      set_m_vipexplimit(from.m_vipexplimit());
    }
    if (from.has_m_activitycount()) {
      set_m_activitycount(from.m_activitycount());
    }
    if (from.has_m_price()) {
      set_m_price(from.m_price());
    }
    if (from.has_m_presentid()) {
      set_m_presentid(from.m_presentid());
    }
  }
  if (from._has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    if (from.has_m_fristpresent()) {
      set_m_fristpresent(from.m_fristpresent());
    }
    if (from.has_m_icon()) {
      set_m_icon(from.m_icon());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_RechargeRecharge::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_RechargeRecharge::CopyFrom(const E_RechargeRecharge& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_RechargeRecharge::IsInitialized() const {

  return true;
}

void E_RechargeRecharge::Swap(E_RechargeRecharge* other) {
  if (other != this) {
    std::swap(m_id_, other->m_id_);
    std::swap(m_name_, other->m_name_);
    std::swap(m_defaultpoint_, other->m_defaultpoint_);
    std::swap(m_type_, other->m_type_);
    std::swap(m_unit_, other->m_unit_);
    std::swap(m_beizhu_, other->m_beizhu_);
    std::swap(m_quantity_, other->m_quantity_);
    std::swap(m_itemnum_, other->m_itemnum_);
    std::swap(m_multipletimes_, other->m_multipletimes_);
    std::swap(m_multiplereward_, other->m_multiplereward_);
    std::swap(m_zuanshitype_, other->m_zuanshitype_);
    std::swap(m_vipexp_, other->m_vipexp_);
    std::swap(m_vipexplimit_, other->m_vipexplimit_);
    std::swap(m_activitycount_, other->m_activitycount_);
    std::swap(m_price_, other->m_price_);
    std::swap(m_presentid_, other->m_presentid_);
    std::swap(m_fristpresent_, other->m_fristpresent_);
    std::swap(m_icon_, other->m_icon_);
    m_item_.Swap(&other->m_item_);
    m_channel_.Swap(&other->m_channel_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_RechargeRecharge::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_RechargeRecharge_descriptor_;
  metadata.reflection = E_RechargeRecharge_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_RechargeRecharge::kERechargeRechargeListFieldNumber;
#endif  // !_MSC_VER

Sheet_RechargeRecharge::Sheet_RechargeRecharge()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_RechargeRecharge::InitAsDefaultInstance() {
}

Sheet_RechargeRecharge::Sheet_RechargeRecharge(const Sheet_RechargeRecharge& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_RechargeRecharge::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_RechargeRecharge::~Sheet_RechargeRecharge() {
  SharedDtor();
}

void Sheet_RechargeRecharge::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_RechargeRecharge::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_RechargeRecharge::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_RechargeRecharge_descriptor_;
}

const Sheet_RechargeRecharge& Sheet_RechargeRecharge::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_recharge_2eproto();
  return *default_instance_;
}

Sheet_RechargeRecharge* Sheet_RechargeRecharge::default_instance_ = NULL;

Sheet_RechargeRecharge* Sheet_RechargeRecharge::New() const {
  return new Sheet_RechargeRecharge;
}

void Sheet_RechargeRecharge::Clear() {
  e_rechargerecharge_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_RechargeRecharge::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.E_RechargeRecharge E_RechargeRecharge_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_E_RechargeRecharge_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_e_rechargerecharge_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_E_RechargeRecharge_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_RechargeRecharge::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.E_RechargeRecharge E_RechargeRecharge_List = 1;
  for (int i = 0; i < this->e_rechargerecharge_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->e_rechargerecharge_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_RechargeRecharge::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.E_RechargeRecharge E_RechargeRecharge_List = 1;
  for (int i = 0; i < this->e_rechargerecharge_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->e_rechargerecharge_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_RechargeRecharge::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.E_RechargeRecharge E_RechargeRecharge_List = 1;
  total_size += 1 * this->e_rechargerecharge_list_size();
  for (int i = 0; i < this->e_rechargerecharge_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->e_rechargerecharge_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_RechargeRecharge::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_RechargeRecharge* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_RechargeRecharge*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_RechargeRecharge::MergeFrom(const Sheet_RechargeRecharge& from) {
  GOOGLE_CHECK_NE(&from, this);
  e_rechargerecharge_list_.MergeFrom(from.e_rechargerecharge_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_RechargeRecharge::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_RechargeRecharge::CopyFrom(const Sheet_RechargeRecharge& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_RechargeRecharge::IsInitialized() const {

  return true;
}

void Sheet_RechargeRecharge::Swap(Sheet_RechargeRecharge* other) {
  if (other != this) {
    e_rechargerecharge_list_.Swap(&other->e_rechargerecharge_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_RechargeRecharge::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_RechargeRecharge_descriptor_;
  metadata.reflection = Sheet_RechargeRecharge_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto_ff

// @@protoc_insertion_point(global_scope)
