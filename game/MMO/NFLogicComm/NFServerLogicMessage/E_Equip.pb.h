// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: E_Equip.proto

#ifndef PROTOBUF_E_5fEquip_2eproto__INCLUDED
#define PROTOBUF_E_5fEquip_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "yd_fieldoptions.pb.h"
// @@protoc_insertion_point(includes)

namespace proto_ff {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_E_5fEquip_2eproto();
void protobuf_AssignDesc_E_5fEquip_2eproto();
void protobuf_ShutdownFile_E_5fEquip_2eproto();

class E_EquipEquip;
class Sheet_EquipEquip;
class E_EquipAttributeAttributeDesc;
class E_EquipAttribute;
class Sheet_EquipAttribute;
class E_EquipSpecattAttributeDesc;
class E_EquipSpecatt;
class Sheet_EquipSpecatt;
class E_EquipStrongTypeDesc;
class E_EquipStrong;
class Sheet_EquipStrong;
class E_EquipStrongexpCostDesc;
class E_EquipStrongexp;
class Sheet_EquipStrongexp;
class E_EquipBeaststrongTypeDesc;
class E_EquipBeaststrong;
class Sheet_EquipBeaststrong;
class E_EquipStrongtotalAttributeDesc;
class E_EquipStrongtotal;
class Sheet_EquipStrongtotal;
class E_EquipGem;
class Sheet_EquipGem;
class E_EquipGemlv;
class Sheet_EquipGemlv;
class E_EquipStoveattAttributeDesc;
class E_EquipStoveatt;
class Sheet_EquipStoveatt;
class E_EquipStoveexp;
class Sheet_EquipStoveexp;
class E_EquipGrade;
class Sheet_EquipGrade;
class E_EquipClearAttributeDesc;
class E_EquipClearSectionDesc;
class E_EquipClear;
class Sheet_EquipClear;
class E_EquipSuitAttributeDesc;
class E_EquipSuit;
class Sheet_EquipSuit;
class E_EquipBreakBreakDesc;
class E_EquipBreak;
class Sheet_EquipBreak;

// ===================================================================

class E_EquipEquip : public ::google::protobuf::Message {
 public:
  E_EquipEquip();
  virtual ~E_EquipEquip();

  E_EquipEquip(const E_EquipEquip& from);

  inline E_EquipEquip& operator=(const E_EquipEquip& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_EquipEquip& default_instance();

  void Swap(E_EquipEquip* other);

  // implements Message ----------------------------------------------

  E_EquipEquip* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_EquipEquip& from);
  void MergeFrom(const E_EquipEquip& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 m_id = 1;
  inline bool has_m_id() const;
  inline void clear_m_id();
  static const int kMIdFieldNumber = 1;
  inline ::google::protobuf::int64 m_id() const;
  inline void set_m_id(::google::protobuf::int64 value);

  // optional string m_name = 2;
  inline bool has_m_name() const;
  inline void clear_m_name();
  static const int kMNameFieldNumber = 2;
  inline const ::std::string& m_name() const;
  inline void set_m_name(const ::std::string& value);
  inline void set_m_name(const char* value);
  inline void set_m_name(const char* value, size_t size);
  inline ::std::string* mutable_m_name();
  inline ::std::string* release_m_name();
  inline void set_allocated_m_name(::std::string* m_name);

  // optional int32 m_type = 3;
  inline bool has_m_type() const;
  inline void clear_m_type();
  static const int kMTypeFieldNumber = 3;
  inline ::google::protobuf::int32 m_type() const;
  inline void set_m_type(::google::protobuf::int32 value);

  // optional int32 m_wearQuality = 4;
  inline bool has_m_wearquality() const;
  inline void clear_m_wearquality();
  static const int kMWearQualityFieldNumber = 4;
  inline ::google::protobuf::int32 m_wearquality() const;
  inline void set_m_wearquality(::google::protobuf::int32 value);

  // optional int32 m_position = 5;
  inline bool has_m_position() const;
  inline void clear_m_position();
  static const int kMPositionFieldNumber = 5;
  inline ::google::protobuf::int32 m_position() const;
  inline void set_m_position(::google::protobuf::int32 value);

  // optional string m_profession = 6;
  inline bool has_m_profession() const;
  inline void clear_m_profession();
  static const int kMProfessionFieldNumber = 6;
  inline const ::std::string& m_profession() const;
  inline void set_m_profession(const ::std::string& value);
  inline void set_m_profession(const char* value);
  inline void set_m_profession(const char* value, size_t size);
  inline ::std::string* mutable_m_profession();
  inline ::std::string* release_m_profession();
  inline void set_allocated_m_profession(::std::string* m_profession);

  // optional int32 m_professionLv = 7;
  inline bool has_m_professionlv() const;
  inline void clear_m_professionlv();
  static const int kMProfessionLvFieldNumber = 7;
  inline ::google::protobuf::int32 m_professionlv() const;
  inline void set_m_professionlv(::google::protobuf::int32 value);

  // optional int32 m_level = 8;
  inline bool has_m_level() const;
  inline void clear_m_level();
  static const int kMLevelFieldNumber = 8;
  inline ::google::protobuf::int32 m_level() const;
  inline void set_m_level(::google::protobuf::int32 value);

  // optional int32 m_quality = 9;
  inline bool has_m_quality() const;
  inline void clear_m_quality();
  static const int kMQualityFieldNumber = 9;
  inline ::google::protobuf::int32 m_quality() const;
  inline void set_m_quality(::google::protobuf::int32 value);

  // optional int32 m_attributeID = 10;
  inline bool has_m_attributeid() const;
  inline void clear_m_attributeid();
  static const int kMAttributeIDFieldNumber = 10;
  inline ::google::protobuf::int32 m_attributeid() const;
  inline void set_m_attributeid(::google::protobuf::int32 value);

  // optional int32 m_star = 11;
  inline bool has_m_star() const;
  inline void clear_m_star();
  static const int kMStarFieldNumber = 11;
  inline ::google::protobuf::int32 m_star() const;
  inline void set_m_star(::google::protobuf::int32 value);

  // optional int32 m_notCompose = 12;
  inline bool has_m_notcompose() const;
  inline void clear_m_notcompose();
  static const int kMNotComposeFieldNumber = 12;
  inline ::google::protobuf::int32 m_notcompose() const;
  inline void set_m_notcompose(::google::protobuf::int32 value);

  // optional int32 m_isCanbind = 13;
  inline bool has_m_iscanbind() const;
  inline void clear_m_iscanbind();
  static const int kMIsCanbindFieldNumber = 13;
  inline ::google::protobuf::int32 m_iscanbind() const;
  inline void set_m_iscanbind(::google::protobuf::int32 value);

  // optional int32 m_isTradeBind = 14;
  inline bool has_m_istradebind() const;
  inline void clear_m_istradebind();
  static const int kMIsTradeBindFieldNumber = 14;
  inline ::google::protobuf::int32 m_istradebind() const;
  inline void set_m_istradebind(::google::protobuf::int32 value);

  // optional int32 m_sellPrice = 15;
  inline bool has_m_sellprice() const;
  inline void clear_m_sellprice();
  static const int kMSellPriceFieldNumber = 15;
  inline ::google::protobuf::int32 m_sellprice() const;
  inline void set_m_sellprice(::google::protobuf::int32 value);

  // optional string m_icon = 16;
  inline bool has_m_icon() const;
  inline void clear_m_icon();
  static const int kMIconFieldNumber = 16;
  inline const ::std::string& m_icon() const;
  inline void set_m_icon(const ::std::string& value);
  inline void set_m_icon(const char* value);
  inline void set_m_icon(const char* value, size_t size);
  inline ::std::string* mutable_m_icon();
  inline ::std::string* release_m_icon();
  inline void set_allocated_m_icon(::std::string* m_icon);

  // optional int32 m_time = 17;
  inline bool has_m_time() const;
  inline void clear_m_time();
  static const int kMTimeFieldNumber = 17;
  inline ::google::protobuf::int32 m_time() const;
  inline void set_m_time(::google::protobuf::int32 value);

  // optional int32 m_broadcast = 18;
  inline bool has_m_broadcast() const;
  inline void clear_m_broadcast();
  static const int kMBroadcastFieldNumber = 18;
  inline ::google::protobuf::int32 m_broadcast() const;
  inline void set_m_broadcast(::google::protobuf::int32 value);

  // optional string m_meltingResult = 19;
  inline bool has_m_meltingresult() const;
  inline void clear_m_meltingresult();
  static const int kMMeltingResultFieldNumber = 19;
  inline const ::std::string& m_meltingresult() const;
  inline void set_m_meltingresult(const ::std::string& value);
  inline void set_m_meltingresult(const char* value);
  inline void set_m_meltingresult(const char* value, size_t size);
  inline ::std::string* mutable_m_meltingresult();
  inline ::std::string* release_m_meltingresult();
  inline void set_allocated_m_meltingresult(::std::string* m_meltingresult);

  // optional string m_skillId = 20;
  inline bool has_m_skillid() const;
  inline void clear_m_skillid();
  static const int kMSkillIdFieldNumber = 20;
  inline const ::std::string& m_skillid() const;
  inline void set_m_skillid(const ::std::string& value);
  inline void set_m_skillid(const char* value);
  inline void set_m_skillid(const char* value, size_t size);
  inline ::std::string* mutable_m_skillid();
  inline ::std::string* release_m_skillid();
  inline void set_allocated_m_skillid(::std::string* m_skillid);

  // optional int32 m_privilegeGroupId = 21;
  inline bool has_m_privilegegroupid() const;
  inline void clear_m_privilegegroupid();
  static const int kMPrivilegeGroupIdFieldNumber = 21;
  inline ::google::protobuf::int32 m_privilegegroupid() const;
  inline void set_m_privilegegroupid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.E_EquipEquip)
 private:
  inline void set_has_m_id();
  inline void clear_has_m_id();
  inline void set_has_m_name();
  inline void clear_has_m_name();
  inline void set_has_m_type();
  inline void clear_has_m_type();
  inline void set_has_m_wearquality();
  inline void clear_has_m_wearquality();
  inline void set_has_m_position();
  inline void clear_has_m_position();
  inline void set_has_m_profession();
  inline void clear_has_m_profession();
  inline void set_has_m_professionlv();
  inline void clear_has_m_professionlv();
  inline void set_has_m_level();
  inline void clear_has_m_level();
  inline void set_has_m_quality();
  inline void clear_has_m_quality();
  inline void set_has_m_attributeid();
  inline void clear_has_m_attributeid();
  inline void set_has_m_star();
  inline void clear_has_m_star();
  inline void set_has_m_notcompose();
  inline void clear_has_m_notcompose();
  inline void set_has_m_iscanbind();
  inline void clear_has_m_iscanbind();
  inline void set_has_m_istradebind();
  inline void clear_has_m_istradebind();
  inline void set_has_m_sellprice();
  inline void clear_has_m_sellprice();
  inline void set_has_m_icon();
  inline void clear_has_m_icon();
  inline void set_has_m_time();
  inline void clear_has_m_time();
  inline void set_has_m_broadcast();
  inline void clear_has_m_broadcast();
  inline void set_has_m_meltingresult();
  inline void clear_has_m_meltingresult();
  inline void set_has_m_skillid();
  inline void clear_has_m_skillid();
  inline void set_has_m_privilegegroupid();
  inline void clear_has_m_privilegegroupid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 m_id_;
  ::std::string* m_name_;
  ::google::protobuf::int32 m_type_;
  ::google::protobuf::int32 m_wearquality_;
  ::std::string* m_profession_;
  ::google::protobuf::int32 m_position_;
  ::google::protobuf::int32 m_professionlv_;
  ::google::protobuf::int32 m_level_;
  ::google::protobuf::int32 m_quality_;
  ::google::protobuf::int32 m_attributeid_;
  ::google::protobuf::int32 m_star_;
  ::google::protobuf::int32 m_notcompose_;
  ::google::protobuf::int32 m_iscanbind_;
  ::google::protobuf::int32 m_istradebind_;
  ::google::protobuf::int32 m_sellprice_;
  ::std::string* m_icon_;
  ::google::protobuf::int32 m_time_;
  ::google::protobuf::int32 m_broadcast_;
  ::std::string* m_meltingresult_;
  ::std::string* m_skillid_;
  ::google::protobuf::int32 m_privilegegroupid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(21 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fEquip_2eproto();
  friend void protobuf_AssignDesc_E_5fEquip_2eproto();
  friend void protobuf_ShutdownFile_E_5fEquip_2eproto();

  void InitAsDefaultInstance();
  static E_EquipEquip* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_EquipEquip : public ::google::protobuf::Message {
 public:
  Sheet_EquipEquip();
  virtual ~Sheet_EquipEquip();

  Sheet_EquipEquip(const Sheet_EquipEquip& from);

  inline Sheet_EquipEquip& operator=(const Sheet_EquipEquip& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_EquipEquip& default_instance();

  void Swap(Sheet_EquipEquip* other);

  // implements Message ----------------------------------------------

  Sheet_EquipEquip* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_EquipEquip& from);
  void MergeFrom(const Sheet_EquipEquip& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.E_EquipEquip E_EquipEquip_List = 1;
  inline int e_equipequip_list_size() const;
  inline void clear_e_equipequip_list();
  static const int kEEquipEquipListFieldNumber = 1;
  inline const ::proto_ff::E_EquipEquip& e_equipequip_list(int index) const;
  inline ::proto_ff::E_EquipEquip* mutable_e_equipequip_list(int index);
  inline ::proto_ff::E_EquipEquip* add_e_equipequip_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipEquip >&
      e_equipequip_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipEquip >*
      mutable_e_equipequip_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_EquipEquip)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipEquip > e_equipequip_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fEquip_2eproto();
  friend void protobuf_AssignDesc_E_5fEquip_2eproto();
  friend void protobuf_ShutdownFile_E_5fEquip_2eproto();

  void InitAsDefaultInstance();
  static Sheet_EquipEquip* default_instance_;
};
// -------------------------------------------------------------------

class E_EquipAttributeAttributeDesc : public ::google::protobuf::Message {
 public:
  E_EquipAttributeAttributeDesc();
  virtual ~E_EquipAttributeAttributeDesc();

  E_EquipAttributeAttributeDesc(const E_EquipAttributeAttributeDesc& from);

  inline E_EquipAttributeAttributeDesc& operator=(const E_EquipAttributeAttributeDesc& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_EquipAttributeAttributeDesc& default_instance();

  void Swap(E_EquipAttributeAttributeDesc* other);

  // implements Message ----------------------------------------------

  E_EquipAttributeAttributeDesc* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_EquipAttributeAttributeDesc& from);
  void MergeFrom(const E_EquipAttributeAttributeDesc& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 m_valueMax = 1;
  inline bool has_m_valuemax() const;
  inline void clear_m_valuemax();
  static const int kMValueMaxFieldNumber = 1;
  inline ::google::protobuf::int32 m_valuemax() const;
  inline void set_m_valuemax(::google::protobuf::int32 value);

  // optional int32 m_valueMin = 2;
  inline bool has_m_valuemin() const;
  inline void clear_m_valuemin();
  static const int kMValueMinFieldNumber = 2;
  inline ::google::protobuf::int32 m_valuemin() const;
  inline void set_m_valuemin(::google::protobuf::int32 value);

  // optional int32 m_type = 3;
  inline bool has_m_type() const;
  inline void clear_m_type();
  static const int kMTypeFieldNumber = 3;
  inline ::google::protobuf::int32 m_type() const;
  inline void set_m_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.E_EquipAttributeAttributeDesc)
 private:
  inline void set_has_m_valuemax();
  inline void clear_has_m_valuemax();
  inline void set_has_m_valuemin();
  inline void clear_has_m_valuemin();
  inline void set_has_m_type();
  inline void clear_has_m_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_valuemax_;
  ::google::protobuf::int32 m_valuemin_;
  ::google::protobuf::int32 m_type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fEquip_2eproto();
  friend void protobuf_AssignDesc_E_5fEquip_2eproto();
  friend void protobuf_ShutdownFile_E_5fEquip_2eproto();

  void InitAsDefaultInstance();
  static E_EquipAttributeAttributeDesc* default_instance_;
};
// -------------------------------------------------------------------

class E_EquipAttribute : public ::google::protobuf::Message {
 public:
  E_EquipAttribute();
  virtual ~E_EquipAttribute();

  E_EquipAttribute(const E_EquipAttribute& from);

  inline E_EquipAttribute& operator=(const E_EquipAttribute& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_EquipAttribute& default_instance();

  void Swap(E_EquipAttribute* other);

  // implements Message ----------------------------------------------

  E_EquipAttribute* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_EquipAttribute& from);
  void MergeFrom(const E_EquipAttribute& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 m_id = 1;
  inline bool has_m_id() const;
  inline void clear_m_id();
  static const int kMIdFieldNumber = 1;
  inline ::google::protobuf::int32 m_id() const;
  inline void set_m_id(::google::protobuf::int32 value);

  // optional int32 m_blueStarNum = 2;
  inline bool has_m_bluestarnum() const;
  inline void clear_m_bluestarnum();
  static const int kMBlueStarNumFieldNumber = 2;
  inline ::google::protobuf::int32 m_bluestarnum() const;
  inline void set_m_bluestarnum(::google::protobuf::int32 value);

  // optional string m_blueStar_type = 3;
  inline bool has_m_bluestar_type() const;
  inline void clear_m_bluestar_type();
  static const int kMBlueStarTypeFieldNumber = 3;
  inline const ::std::string& m_bluestar_type() const;
  inline void set_m_bluestar_type(const ::std::string& value);
  inline void set_m_bluestar_type(const char* value);
  inline void set_m_bluestar_type(const char* value, size_t size);
  inline ::std::string* mutable_m_bluestar_type();
  inline ::std::string* release_m_bluestar_type();
  inline void set_allocated_m_bluestar_type(::std::string* m_bluestar_type);

  // optional string m_blueStar_lv = 4;
  inline bool has_m_bluestar_lv() const;
  inline void clear_m_bluestar_lv();
  static const int kMBlueStarLvFieldNumber = 4;
  inline const ::std::string& m_bluestar_lv() const;
  inline void set_m_bluestar_lv(const ::std::string& value);
  inline void set_m_bluestar_lv(const char* value);
  inline void set_m_bluestar_lv(const char* value, size_t size);
  inline ::std::string* mutable_m_bluestar_lv();
  inline ::std::string* release_m_bluestar_lv();
  inline void set_allocated_m_bluestar_lv(::std::string* m_bluestar_lv);

  // optional string m_blueStar_number = 5;
  inline bool has_m_bluestar_number() const;
  inline void clear_m_bluestar_number();
  static const int kMBlueStarNumberFieldNumber = 5;
  inline const ::std::string& m_bluestar_number() const;
  inline void set_m_bluestar_number(const ::std::string& value);
  inline void set_m_bluestar_number(const char* value);
  inline void set_m_bluestar_number(const char* value, size_t size);
  inline ::std::string* mutable_m_bluestar_number();
  inline ::std::string* release_m_bluestar_number();
  inline void set_allocated_m_bluestar_number(::std::string* m_bluestar_number);

  // optional int32 m_specid = 6;
  inline bool has_m_specid() const;
  inline void clear_m_specid();
  static const int kMSpecidFieldNumber = 6;
  inline ::google::protobuf::int32 m_specid() const;
  inline void set_m_specid(::google::protobuf::int32 value);

  // optional int32 m_specialAttributeDown = 7;
  inline bool has_m_specialattributedown() const;
  inline void clear_m_specialattributedown();
  static const int kMSpecialAttributeDownFieldNumber = 7;
  inline ::google::protobuf::int32 m_specialattributedown() const;
  inline void set_m_specialattributedown(::google::protobuf::int32 value);

  // optional int32 m_specialAttributeUp = 8;
  inline bool has_m_specialattributeup() const;
  inline void clear_m_specialattributeup();
  static const int kMSpecialAttributeUpFieldNumber = 8;
  inline ::google::protobuf::int32 m_specialattributeup() const;
  inline void set_m_specialattributeup(::google::protobuf::int32 value);

  // optional string m_specialAttribute_typeLibrary = 9;
  inline bool has_m_specialattribute_typelibrary() const;
  inline void clear_m_specialattribute_typelibrary();
  static const int kMSpecialAttributeTypeLibraryFieldNumber = 9;
  inline const ::std::string& m_specialattribute_typelibrary() const;
  inline void set_m_specialattribute_typelibrary(const ::std::string& value);
  inline void set_m_specialattribute_typelibrary(const char* value);
  inline void set_m_specialattribute_typelibrary(const char* value, size_t size);
  inline ::std::string* mutable_m_specialattribute_typelibrary();
  inline ::std::string* release_m_specialattribute_typelibrary();
  inline void set_allocated_m_specialattribute_typelibrary(::std::string* m_specialattribute_typelibrary);

  // optional string m_specialAttribute_valueMin = 10;
  inline bool has_m_specialattribute_valuemin() const;
  inline void clear_m_specialattribute_valuemin();
  static const int kMSpecialAttributeValueMinFieldNumber = 10;
  inline const ::std::string& m_specialattribute_valuemin() const;
  inline void set_m_specialattribute_valuemin(const ::std::string& value);
  inline void set_m_specialattribute_valuemin(const char* value);
  inline void set_m_specialattribute_valuemin(const char* value, size_t size);
  inline ::std::string* mutable_m_specialattribute_valuemin();
  inline ::std::string* release_m_specialattribute_valuemin();
  inline void set_allocated_m_specialattribute_valuemin(::std::string* m_specialattribute_valuemin);

  // optional string m_specialAttribute_valueMax = 11;
  inline bool has_m_specialattribute_valuemax() const;
  inline void clear_m_specialattribute_valuemax();
  static const int kMSpecialAttributeValueMaxFieldNumber = 11;
  inline const ::std::string& m_specialattribute_valuemax() const;
  inline void set_m_specialattribute_valuemax(const ::std::string& value);
  inline void set_m_specialattribute_valuemax(const char* value);
  inline void set_m_specialattribute_valuemax(const char* value, size_t size);
  inline ::std::string* mutable_m_specialattribute_valuemax();
  inline ::std::string* release_m_specialattribute_valuemax();
  inline void set_allocated_m_specialattribute_valuemax(::std::string* m_specialattribute_valuemax);

  // optional string m_godAttribute_type = 12;
  inline bool has_m_godattribute_type() const;
  inline void clear_m_godattribute_type();
  static const int kMGodAttributeTypeFieldNumber = 12;
  inline const ::std::string& m_godattribute_type() const;
  inline void set_m_godattribute_type(const ::std::string& value);
  inline void set_m_godattribute_type(const char* value);
  inline void set_m_godattribute_type(const char* value, size_t size);
  inline ::std::string* mutable_m_godattribute_type();
  inline ::std::string* release_m_godattribute_type();
  inline void set_allocated_m_godattribute_type(::std::string* m_godattribute_type);

  // optional string m_godAttribute_valueMin = 13;
  inline bool has_m_godattribute_valuemin() const;
  inline void clear_m_godattribute_valuemin();
  static const int kMGodAttributeValueMinFieldNumber = 13;
  inline const ::std::string& m_godattribute_valuemin() const;
  inline void set_m_godattribute_valuemin(const ::std::string& value);
  inline void set_m_godattribute_valuemin(const char* value);
  inline void set_m_godattribute_valuemin(const char* value, size_t size);
  inline ::std::string* mutable_m_godattribute_valuemin();
  inline ::std::string* release_m_godattribute_valuemin();
  inline void set_allocated_m_godattribute_valuemin(::std::string* m_godattribute_valuemin);

  // optional string m_godAttribute_valueMax = 14;
  inline bool has_m_godattribute_valuemax() const;
  inline void clear_m_godattribute_valuemax();
  static const int kMGodAttributeValueMaxFieldNumber = 14;
  inline const ::std::string& m_godattribute_valuemax() const;
  inline void set_m_godattribute_valuemax(const ::std::string& value);
  inline void set_m_godattribute_valuemax(const char* value);
  inline void set_m_godattribute_valuemax(const char* value, size_t size);
  inline ::std::string* mutable_m_godattribute_valuemax();
  inline ::std::string* release_m_godattribute_valuemax();
  inline void set_allocated_m_godattribute_valuemax(::std::string* m_godattribute_valuemax);

  // optional string m_silverStarLib = 15;
  inline bool has_m_silverstarlib() const;
  inline void clear_m_silverstarlib();
  static const int kMSilverStarLibFieldNumber = 15;
  inline const ::std::string& m_silverstarlib() const;
  inline void set_m_silverstarlib(const ::std::string& value);
  inline void set_m_silverstarlib(const char* value);
  inline void set_m_silverstarlib(const char* value, size_t size);
  inline ::std::string* mutable_m_silverstarlib();
  inline ::std::string* release_m_silverstarlib();
  inline void set_allocated_m_silverstarlib(::std::string* m_silverstarlib);

  // optional string m_silverStarValue = 16;
  inline bool has_m_silverstarvalue() const;
  inline void clear_m_silverstarvalue();
  static const int kMSilverStarValueFieldNumber = 16;
  inline const ::std::string& m_silverstarvalue() const;
  inline void set_m_silverstarvalue(const ::std::string& value);
  inline void set_m_silverstarvalue(const char* value);
  inline void set_m_silverstarvalue(const char* value, size_t size);
  inline ::std::string* mutable_m_silverstarvalue();
  inline ::std::string* release_m_silverstarvalue();
  inline void set_allocated_m_silverstarvalue(::std::string* m_silverstarvalue);

  // optional string m_goldStarLib = 17;
  inline bool has_m_goldstarlib() const;
  inline void clear_m_goldstarlib();
  static const int kMGoldStarLibFieldNumber = 17;
  inline const ::std::string& m_goldstarlib() const;
  inline void set_m_goldstarlib(const ::std::string& value);
  inline void set_m_goldstarlib(const char* value);
  inline void set_m_goldstarlib(const char* value, size_t size);
  inline ::std::string* mutable_m_goldstarlib();
  inline ::std::string* release_m_goldstarlib();
  inline void set_allocated_m_goldstarlib(::std::string* m_goldstarlib);

  // optional string m_goldStarValue = 18;
  inline bool has_m_goldstarvalue() const;
  inline void clear_m_goldstarvalue();
  static const int kMGoldStarValueFieldNumber = 18;
  inline const ::std::string& m_goldstarvalue() const;
  inline void set_m_goldstarvalue(const ::std::string& value);
  inline void set_m_goldstarvalue(const char* value);
  inline void set_m_goldstarvalue(const char* value, size_t size);
  inline ::std::string* mutable_m_goldstarvalue();
  inline ::std::string* release_m_goldstarvalue();
  inline void set_allocated_m_goldstarvalue(::std::string* m_goldstarvalue);

  // optional string m_godeviAtt = 19;
  inline bool has_m_godeviatt() const;
  inline void clear_m_godeviatt();
  static const int kMGodeviAttFieldNumber = 19;
  inline const ::std::string& m_godeviatt() const;
  inline void set_m_godeviatt(const ::std::string& value);
  inline void set_m_godeviatt(const char* value);
  inline void set_m_godeviatt(const char* value, size_t size);
  inline ::std::string* mutable_m_godeviatt();
  inline ::std::string* release_m_godeviatt();
  inline void set_allocated_m_godeviatt(::std::string* m_godeviatt);

  // optional string m_godeviAttValue = 20;
  inline bool has_m_godeviattvalue() const;
  inline void clear_m_godeviattvalue();
  static const int kMGodeviAttValueFieldNumber = 20;
  inline const ::std::string& m_godeviattvalue() const;
  inline void set_m_godeviattvalue(const ::std::string& value);
  inline void set_m_godeviattvalue(const char* value);
  inline void set_m_godeviattvalue(const char* value, size_t size);
  inline ::std::string* mutable_m_godeviattvalue();
  inline ::std::string* release_m_godeviattvalue();
  inline void set_allocated_m_godeviattvalue(::std::string* m_godeviattvalue);

  // optional string m_godevilSkill = 21;
  inline bool has_m_godevilskill() const;
  inline void clear_m_godevilskill();
  static const int kMGodevilSkillFieldNumber = 21;
  inline const ::std::string& m_godevilskill() const;
  inline void set_m_godevilskill(const ::std::string& value);
  inline void set_m_godevilskill(const char* value);
  inline void set_m_godevilskill(const char* value, size_t size);
  inline ::std::string* mutable_m_godevilskill();
  inline ::std::string* release_m_godevilskill();
  inline void set_allocated_m_godevilskill(::std::string* m_godevilskill);

  // repeated .proto_ff.E_EquipAttributeAttributeDesc m_attribute = 22;
  inline int m_attribute_size() const;
  inline void clear_m_attribute();
  static const int kMAttributeFieldNumber = 22;
  inline const ::proto_ff::E_EquipAttributeAttributeDesc& m_attribute(int index) const;
  inline ::proto_ff::E_EquipAttributeAttributeDesc* mutable_m_attribute(int index);
  inline ::proto_ff::E_EquipAttributeAttributeDesc* add_m_attribute();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipAttributeAttributeDesc >&
      m_attribute() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipAttributeAttributeDesc >*
      mutable_m_attribute();

  // repeated string m_star_Library = 23;
  inline int m_star_library_size() const;
  inline void clear_m_star_library();
  static const int kMStarLibraryFieldNumber = 23;
  inline const ::std::string& m_star_library(int index) const;
  inline ::std::string* mutable_m_star_library(int index);
  inline void set_m_star_library(int index, const ::std::string& value);
  inline void set_m_star_library(int index, const char* value);
  inline void set_m_star_library(int index, const char* value, size_t size);
  inline ::std::string* add_m_star_library();
  inline void add_m_star_library(const ::std::string& value);
  inline void add_m_star_library(const char* value);
  inline void add_m_star_library(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& m_star_library() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_m_star_library();

  // @@protoc_insertion_point(class_scope:proto_ff.E_EquipAttribute)
 private:
  inline void set_has_m_id();
  inline void clear_has_m_id();
  inline void set_has_m_bluestarnum();
  inline void clear_has_m_bluestarnum();
  inline void set_has_m_bluestar_type();
  inline void clear_has_m_bluestar_type();
  inline void set_has_m_bluestar_lv();
  inline void clear_has_m_bluestar_lv();
  inline void set_has_m_bluestar_number();
  inline void clear_has_m_bluestar_number();
  inline void set_has_m_specid();
  inline void clear_has_m_specid();
  inline void set_has_m_specialattributedown();
  inline void clear_has_m_specialattributedown();
  inline void set_has_m_specialattributeup();
  inline void clear_has_m_specialattributeup();
  inline void set_has_m_specialattribute_typelibrary();
  inline void clear_has_m_specialattribute_typelibrary();
  inline void set_has_m_specialattribute_valuemin();
  inline void clear_has_m_specialattribute_valuemin();
  inline void set_has_m_specialattribute_valuemax();
  inline void clear_has_m_specialattribute_valuemax();
  inline void set_has_m_godattribute_type();
  inline void clear_has_m_godattribute_type();
  inline void set_has_m_godattribute_valuemin();
  inline void clear_has_m_godattribute_valuemin();
  inline void set_has_m_godattribute_valuemax();
  inline void clear_has_m_godattribute_valuemax();
  inline void set_has_m_silverstarlib();
  inline void clear_has_m_silverstarlib();
  inline void set_has_m_silverstarvalue();
  inline void clear_has_m_silverstarvalue();
  inline void set_has_m_goldstarlib();
  inline void clear_has_m_goldstarlib();
  inline void set_has_m_goldstarvalue();
  inline void clear_has_m_goldstarvalue();
  inline void set_has_m_godeviatt();
  inline void clear_has_m_godeviatt();
  inline void set_has_m_godeviattvalue();
  inline void clear_has_m_godeviattvalue();
  inline void set_has_m_godevilskill();
  inline void clear_has_m_godevilskill();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_id_;
  ::google::protobuf::int32 m_bluestarnum_;
  ::std::string* m_bluestar_type_;
  ::std::string* m_bluestar_lv_;
  ::std::string* m_bluestar_number_;
  ::google::protobuf::int32 m_specid_;
  ::google::protobuf::int32 m_specialattributedown_;
  ::std::string* m_specialattribute_typelibrary_;
  ::std::string* m_specialattribute_valuemin_;
  ::std::string* m_specialattribute_valuemax_;
  ::std::string* m_godattribute_type_;
  ::std::string* m_godattribute_valuemin_;
  ::std::string* m_godattribute_valuemax_;
  ::std::string* m_silverstarlib_;
  ::std::string* m_silverstarvalue_;
  ::std::string* m_goldstarlib_;
  ::std::string* m_goldstarvalue_;
  ::std::string* m_godeviatt_;
  ::std::string* m_godeviattvalue_;
  ::std::string* m_godevilskill_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipAttributeAttributeDesc > m_attribute_;
  ::google::protobuf::RepeatedPtrField< ::std::string> m_star_library_;
  ::google::protobuf::int32 m_specialattributeup_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(23 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fEquip_2eproto();
  friend void protobuf_AssignDesc_E_5fEquip_2eproto();
  friend void protobuf_ShutdownFile_E_5fEquip_2eproto();

  void InitAsDefaultInstance();
  static E_EquipAttribute* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_EquipAttribute : public ::google::protobuf::Message {
 public:
  Sheet_EquipAttribute();
  virtual ~Sheet_EquipAttribute();

  Sheet_EquipAttribute(const Sheet_EquipAttribute& from);

  inline Sheet_EquipAttribute& operator=(const Sheet_EquipAttribute& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_EquipAttribute& default_instance();

  void Swap(Sheet_EquipAttribute* other);

  // implements Message ----------------------------------------------

  Sheet_EquipAttribute* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_EquipAttribute& from);
  void MergeFrom(const Sheet_EquipAttribute& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.E_EquipAttribute E_EquipAttribute_List = 1;
  inline int e_equipattribute_list_size() const;
  inline void clear_e_equipattribute_list();
  static const int kEEquipAttributeListFieldNumber = 1;
  inline const ::proto_ff::E_EquipAttribute& e_equipattribute_list(int index) const;
  inline ::proto_ff::E_EquipAttribute* mutable_e_equipattribute_list(int index);
  inline ::proto_ff::E_EquipAttribute* add_e_equipattribute_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipAttribute >&
      e_equipattribute_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipAttribute >*
      mutable_e_equipattribute_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_EquipAttribute)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipAttribute > e_equipattribute_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fEquip_2eproto();
  friend void protobuf_AssignDesc_E_5fEquip_2eproto();
  friend void protobuf_ShutdownFile_E_5fEquip_2eproto();

  void InitAsDefaultInstance();
  static Sheet_EquipAttribute* default_instance_;
};
// -------------------------------------------------------------------

class E_EquipSpecattAttributeDesc : public ::google::protobuf::Message {
 public:
  E_EquipSpecattAttributeDesc();
  virtual ~E_EquipSpecattAttributeDesc();

  E_EquipSpecattAttributeDesc(const E_EquipSpecattAttributeDesc& from);

  inline E_EquipSpecattAttributeDesc& operator=(const E_EquipSpecattAttributeDesc& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_EquipSpecattAttributeDesc& default_instance();

  void Swap(E_EquipSpecattAttributeDesc* other);

  // implements Message ----------------------------------------------

  E_EquipSpecattAttributeDesc* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_EquipSpecattAttributeDesc& from);
  void MergeFrom(const E_EquipSpecattAttributeDesc& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 m_value = 1;
  inline bool has_m_value() const;
  inline void clear_m_value();
  static const int kMValueFieldNumber = 1;
  inline ::google::protobuf::int32 m_value() const;
  inline void set_m_value(::google::protobuf::int32 value);

  // optional int32 m_type = 2;
  inline bool has_m_type() const;
  inline void clear_m_type();
  static const int kMTypeFieldNumber = 2;
  inline ::google::protobuf::int32 m_type() const;
  inline void set_m_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.E_EquipSpecattAttributeDesc)
 private:
  inline void set_has_m_value();
  inline void clear_has_m_value();
  inline void set_has_m_type();
  inline void clear_has_m_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_value_;
  ::google::protobuf::int32 m_type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fEquip_2eproto();
  friend void protobuf_AssignDesc_E_5fEquip_2eproto();
  friend void protobuf_ShutdownFile_E_5fEquip_2eproto();

  void InitAsDefaultInstance();
  static E_EquipSpecattAttributeDesc* default_instance_;
};
// -------------------------------------------------------------------

class E_EquipSpecatt : public ::google::protobuf::Message {
 public:
  E_EquipSpecatt();
  virtual ~E_EquipSpecatt();

  E_EquipSpecatt(const E_EquipSpecatt& from);

  inline E_EquipSpecatt& operator=(const E_EquipSpecatt& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_EquipSpecatt& default_instance();

  void Swap(E_EquipSpecatt* other);

  // implements Message ----------------------------------------------

  E_EquipSpecatt* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_EquipSpecatt& from);
  void MergeFrom(const E_EquipSpecatt& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 m_id = 1;
  inline bool has_m_id() const;
  inline void clear_m_id();
  static const int kMIdFieldNumber = 1;
  inline ::google::protobuf::int32 m_id() const;
  inline void set_m_id(::google::protobuf::int32 value);

  // optional int32 m_groupid = 2;
  inline bool has_m_groupid() const;
  inline void clear_m_groupid();
  static const int kMGroupidFieldNumber = 2;
  inline ::google::protobuf::int32 m_groupid() const;
  inline void set_m_groupid(::google::protobuf::int32 value);

  // optional int32 m_lv = 3;
  inline bool has_m_lv() const;
  inline void clear_m_lv();
  static const int kMLvFieldNumber = 3;
  inline ::google::protobuf::int32 m_lv() const;
  inline void set_m_lv(::google::protobuf::int32 value);

  // optional string m_Zlname = 4;
  inline bool has_m_zlname() const;
  inline void clear_m_zlname();
  static const int kMZlnameFieldNumber = 4;
  inline const ::std::string& m_zlname() const;
  inline void set_m_zlname(const ::std::string& value);
  inline void set_m_zlname(const char* value);
  inline void set_m_zlname(const char* value, size_t size);
  inline ::std::string* mutable_m_zlname();
  inline ::std::string* release_m_zlname();
  inline void set_allocated_m_zlname(::std::string* m_zlname);

  // repeated .proto_ff.E_EquipSpecattAttributeDesc m_attribute = 5;
  inline int m_attribute_size() const;
  inline void clear_m_attribute();
  static const int kMAttributeFieldNumber = 5;
  inline const ::proto_ff::E_EquipSpecattAttributeDesc& m_attribute(int index) const;
  inline ::proto_ff::E_EquipSpecattAttributeDesc* mutable_m_attribute(int index);
  inline ::proto_ff::E_EquipSpecattAttributeDesc* add_m_attribute();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipSpecattAttributeDesc >&
      m_attribute() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipSpecattAttributeDesc >*
      mutable_m_attribute();

  // @@protoc_insertion_point(class_scope:proto_ff.E_EquipSpecatt)
 private:
  inline void set_has_m_id();
  inline void clear_has_m_id();
  inline void set_has_m_groupid();
  inline void clear_has_m_groupid();
  inline void set_has_m_lv();
  inline void clear_has_m_lv();
  inline void set_has_m_zlname();
  inline void clear_has_m_zlname();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_id_;
  ::google::protobuf::int32 m_groupid_;
  ::std::string* m_zlname_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipSpecattAttributeDesc > m_attribute_;
  ::google::protobuf::int32 m_lv_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fEquip_2eproto();
  friend void protobuf_AssignDesc_E_5fEquip_2eproto();
  friend void protobuf_ShutdownFile_E_5fEquip_2eproto();

  void InitAsDefaultInstance();
  static E_EquipSpecatt* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_EquipSpecatt : public ::google::protobuf::Message {
 public:
  Sheet_EquipSpecatt();
  virtual ~Sheet_EquipSpecatt();

  Sheet_EquipSpecatt(const Sheet_EquipSpecatt& from);

  inline Sheet_EquipSpecatt& operator=(const Sheet_EquipSpecatt& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_EquipSpecatt& default_instance();

  void Swap(Sheet_EquipSpecatt* other);

  // implements Message ----------------------------------------------

  Sheet_EquipSpecatt* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_EquipSpecatt& from);
  void MergeFrom(const Sheet_EquipSpecatt& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.E_EquipSpecatt E_EquipSpecatt_List = 1;
  inline int e_equipspecatt_list_size() const;
  inline void clear_e_equipspecatt_list();
  static const int kEEquipSpecattListFieldNumber = 1;
  inline const ::proto_ff::E_EquipSpecatt& e_equipspecatt_list(int index) const;
  inline ::proto_ff::E_EquipSpecatt* mutable_e_equipspecatt_list(int index);
  inline ::proto_ff::E_EquipSpecatt* add_e_equipspecatt_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipSpecatt >&
      e_equipspecatt_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipSpecatt >*
      mutable_e_equipspecatt_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_EquipSpecatt)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipSpecatt > e_equipspecatt_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fEquip_2eproto();
  friend void protobuf_AssignDesc_E_5fEquip_2eproto();
  friend void protobuf_ShutdownFile_E_5fEquip_2eproto();

  void InitAsDefaultInstance();
  static Sheet_EquipSpecatt* default_instance_;
};
// -------------------------------------------------------------------

class E_EquipStrongTypeDesc : public ::google::protobuf::Message {
 public:
  E_EquipStrongTypeDesc();
  virtual ~E_EquipStrongTypeDesc();

  E_EquipStrongTypeDesc(const E_EquipStrongTypeDesc& from);

  inline E_EquipStrongTypeDesc& operator=(const E_EquipStrongTypeDesc& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_EquipStrongTypeDesc& default_instance();

  void Swap(E_EquipStrongTypeDesc* other);

  // implements Message ----------------------------------------------

  E_EquipStrongTypeDesc* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_EquipStrongTypeDesc& from);
  void MergeFrom(const E_EquipStrongTypeDesc& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string m_num = 1;
  inline bool has_m_num() const;
  inline void clear_m_num();
  static const int kMNumFieldNumber = 1;
  inline const ::std::string& m_num() const;
  inline void set_m_num(const ::std::string& value);
  inline void set_m_num(const char* value);
  inline void set_m_num(const char* value, size_t size);
  inline ::std::string* mutable_m_num();
  inline ::std::string* release_m_num();
  inline void set_allocated_m_num(::std::string* m_num);

  // optional int32 m_id = 2;
  inline bool has_m_id() const;
  inline void clear_m_id();
  static const int kMIdFieldNumber = 2;
  inline ::google::protobuf::int32 m_id() const;
  inline void set_m_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.E_EquipStrongTypeDesc)
 private:
  inline void set_has_m_num();
  inline void clear_has_m_num();
  inline void set_has_m_id();
  inline void clear_has_m_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* m_num_;
  ::google::protobuf::int32 m_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fEquip_2eproto();
  friend void protobuf_AssignDesc_E_5fEquip_2eproto();
  friend void protobuf_ShutdownFile_E_5fEquip_2eproto();

  void InitAsDefaultInstance();
  static E_EquipStrongTypeDesc* default_instance_;
};
// -------------------------------------------------------------------

class E_EquipStrong : public ::google::protobuf::Message {
 public:
  E_EquipStrong();
  virtual ~E_EquipStrong();

  E_EquipStrong(const E_EquipStrong& from);

  inline E_EquipStrong& operator=(const E_EquipStrong& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_EquipStrong& default_instance();

  void Swap(E_EquipStrong* other);

  // implements Message ----------------------------------------------

  E_EquipStrong* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_EquipStrong& from);
  void MergeFrom(const E_EquipStrong& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 m_id = 1;
  inline bool has_m_id() const;
  inline void clear_m_id();
  static const int kMIdFieldNumber = 1;
  inline ::google::protobuf::int64 m_id() const;
  inline void set_m_id(::google::protobuf::int64 value);

  // optional int32 m_position = 2;
  inline bool has_m_position() const;
  inline void clear_m_position();
  static const int kMPositionFieldNumber = 2;
  inline ::google::protobuf::int32 m_position() const;
  inline void set_m_position(::google::protobuf::int32 value);

  // optional int32 m_wearQuality = 3;
  inline bool has_m_wearquality() const;
  inline void clear_m_wearquality();
  static const int kMWearQualityFieldNumber = 3;
  inline ::google::protobuf::int32 m_wearquality() const;
  inline void set_m_wearquality(::google::protobuf::int32 value);

  // optional int32 m_srtongUp = 4;
  inline bool has_m_srtongup() const;
  inline void clear_m_srtongup();
  static const int kMSrtongUpFieldNumber = 4;
  inline ::google::protobuf::int32 m_srtongup() const;
  inline void set_m_srtongup(::google::protobuf::int32 value);

  // repeated .proto_ff.E_EquipStrongTypeDesc m_type = 5;
  inline int m_type_size() const;
  inline void clear_m_type();
  static const int kMTypeFieldNumber = 5;
  inline const ::proto_ff::E_EquipStrongTypeDesc& m_type(int index) const;
  inline ::proto_ff::E_EquipStrongTypeDesc* mutable_m_type(int index);
  inline ::proto_ff::E_EquipStrongTypeDesc* add_m_type();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipStrongTypeDesc >&
      m_type() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipStrongTypeDesc >*
      mutable_m_type();

  // @@protoc_insertion_point(class_scope:proto_ff.E_EquipStrong)
 private:
  inline void set_has_m_id();
  inline void clear_has_m_id();
  inline void set_has_m_position();
  inline void clear_has_m_position();
  inline void set_has_m_wearquality();
  inline void clear_has_m_wearquality();
  inline void set_has_m_srtongup();
  inline void clear_has_m_srtongup();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 m_id_;
  ::google::protobuf::int32 m_position_;
  ::google::protobuf::int32 m_wearquality_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipStrongTypeDesc > m_type_;
  ::google::protobuf::int32 m_srtongup_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fEquip_2eproto();
  friend void protobuf_AssignDesc_E_5fEquip_2eproto();
  friend void protobuf_ShutdownFile_E_5fEquip_2eproto();

  void InitAsDefaultInstance();
  static E_EquipStrong* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_EquipStrong : public ::google::protobuf::Message {
 public:
  Sheet_EquipStrong();
  virtual ~Sheet_EquipStrong();

  Sheet_EquipStrong(const Sheet_EquipStrong& from);

  inline Sheet_EquipStrong& operator=(const Sheet_EquipStrong& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_EquipStrong& default_instance();

  void Swap(Sheet_EquipStrong* other);

  // implements Message ----------------------------------------------

  Sheet_EquipStrong* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_EquipStrong& from);
  void MergeFrom(const Sheet_EquipStrong& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.E_EquipStrong E_EquipStrong_List = 1;
  inline int e_equipstrong_list_size() const;
  inline void clear_e_equipstrong_list();
  static const int kEEquipStrongListFieldNumber = 1;
  inline const ::proto_ff::E_EquipStrong& e_equipstrong_list(int index) const;
  inline ::proto_ff::E_EquipStrong* mutable_e_equipstrong_list(int index);
  inline ::proto_ff::E_EquipStrong* add_e_equipstrong_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipStrong >&
      e_equipstrong_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipStrong >*
      mutable_e_equipstrong_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_EquipStrong)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipStrong > e_equipstrong_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fEquip_2eproto();
  friend void protobuf_AssignDesc_E_5fEquip_2eproto();
  friend void protobuf_ShutdownFile_E_5fEquip_2eproto();

  void InitAsDefaultInstance();
  static Sheet_EquipStrong* default_instance_;
};
// -------------------------------------------------------------------

class E_EquipStrongexpCostDesc : public ::google::protobuf::Message {
 public:
  E_EquipStrongexpCostDesc();
  virtual ~E_EquipStrongexpCostDesc();

  E_EquipStrongexpCostDesc(const E_EquipStrongexpCostDesc& from);

  inline E_EquipStrongexpCostDesc& operator=(const E_EquipStrongexpCostDesc& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_EquipStrongexpCostDesc& default_instance();

  void Swap(E_EquipStrongexpCostDesc* other);

  // implements Message ----------------------------------------------

  E_EquipStrongexpCostDesc* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_EquipStrongexpCostDesc& from);
  void MergeFrom(const E_EquipStrongexpCostDesc& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 m_Num = 1;
  inline bool has_m_num() const;
  inline void clear_m_num();
  static const int kMNumFieldNumber = 1;
  inline ::google::protobuf::int32 m_num() const;
  inline void set_m_num(::google::protobuf::int32 value);

  // optional int32 m_Item = 2;
  inline bool has_m_item() const;
  inline void clear_m_item();
  static const int kMItemFieldNumber = 2;
  inline ::google::protobuf::int32 m_item() const;
  inline void set_m_item(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.E_EquipStrongexpCostDesc)
 private:
  inline void set_has_m_num();
  inline void clear_has_m_num();
  inline void set_has_m_item();
  inline void clear_has_m_item();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_num_;
  ::google::protobuf::int32 m_item_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fEquip_2eproto();
  friend void protobuf_AssignDesc_E_5fEquip_2eproto();
  friend void protobuf_ShutdownFile_E_5fEquip_2eproto();

  void InitAsDefaultInstance();
  static E_EquipStrongexpCostDesc* default_instance_;
};
// -------------------------------------------------------------------

class E_EquipStrongexp : public ::google::protobuf::Message {
 public:
  E_EquipStrongexp();
  virtual ~E_EquipStrongexp();

  E_EquipStrongexp(const E_EquipStrongexp& from);

  inline E_EquipStrongexp& operator=(const E_EquipStrongexp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_EquipStrongexp& default_instance();

  void Swap(E_EquipStrongexp* other);

  // implements Message ----------------------------------------------

  E_EquipStrongexp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_EquipStrongexp& from);
  void MergeFrom(const E_EquipStrongexp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 m_Lv = 1;
  inline bool has_m_lv() const;
  inline void clear_m_lv();
  static const int kMLvFieldNumber = 1;
  inline ::google::protobuf::int32 m_lv() const;
  inline void set_m_lv(::google::protobuf::int32 value);

  // optional int32 m_gold = 2;
  inline bool has_m_gold() const;
  inline void clear_m_gold();
  static const int kMGoldFieldNumber = 2;
  inline ::google::protobuf::int32 m_gold() const;
  inline void set_m_gold(::google::protobuf::int32 value);

  // repeated string m_positionType = 3;
  inline int m_positiontype_size() const;
  inline void clear_m_positiontype();
  static const int kMPositionTypeFieldNumber = 3;
  inline const ::std::string& m_positiontype(int index) const;
  inline ::std::string* mutable_m_positiontype(int index);
  inline void set_m_positiontype(int index, const ::std::string& value);
  inline void set_m_positiontype(int index, const char* value);
  inline void set_m_positiontype(int index, const char* value, size_t size);
  inline ::std::string* add_m_positiontype();
  inline void add_m_positiontype(const ::std::string& value);
  inline void add_m_positiontype(const char* value);
  inline void add_m_positiontype(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& m_positiontype() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_m_positiontype();

  // repeated .proto_ff.E_EquipStrongexpCostDesc m_cost = 4;
  inline int m_cost_size() const;
  inline void clear_m_cost();
  static const int kMCostFieldNumber = 4;
  inline const ::proto_ff::E_EquipStrongexpCostDesc& m_cost(int index) const;
  inline ::proto_ff::E_EquipStrongexpCostDesc* mutable_m_cost(int index);
  inline ::proto_ff::E_EquipStrongexpCostDesc* add_m_cost();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipStrongexpCostDesc >&
      m_cost() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipStrongexpCostDesc >*
      mutable_m_cost();

  // @@protoc_insertion_point(class_scope:proto_ff.E_EquipStrongexp)
 private:
  inline void set_has_m_lv();
  inline void clear_has_m_lv();
  inline void set_has_m_gold();
  inline void clear_has_m_gold();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_lv_;
  ::google::protobuf::int32 m_gold_;
  ::google::protobuf::RepeatedPtrField< ::std::string> m_positiontype_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipStrongexpCostDesc > m_cost_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fEquip_2eproto();
  friend void protobuf_AssignDesc_E_5fEquip_2eproto();
  friend void protobuf_ShutdownFile_E_5fEquip_2eproto();

  void InitAsDefaultInstance();
  static E_EquipStrongexp* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_EquipStrongexp : public ::google::protobuf::Message {
 public:
  Sheet_EquipStrongexp();
  virtual ~Sheet_EquipStrongexp();

  Sheet_EquipStrongexp(const Sheet_EquipStrongexp& from);

  inline Sheet_EquipStrongexp& operator=(const Sheet_EquipStrongexp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_EquipStrongexp& default_instance();

  void Swap(Sheet_EquipStrongexp* other);

  // implements Message ----------------------------------------------

  Sheet_EquipStrongexp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_EquipStrongexp& from);
  void MergeFrom(const Sheet_EquipStrongexp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.E_EquipStrongexp E_EquipStrongexp_List = 1;
  inline int e_equipstrongexp_list_size() const;
  inline void clear_e_equipstrongexp_list();
  static const int kEEquipStrongexpListFieldNumber = 1;
  inline const ::proto_ff::E_EquipStrongexp& e_equipstrongexp_list(int index) const;
  inline ::proto_ff::E_EquipStrongexp* mutable_e_equipstrongexp_list(int index);
  inline ::proto_ff::E_EquipStrongexp* add_e_equipstrongexp_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipStrongexp >&
      e_equipstrongexp_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipStrongexp >*
      mutable_e_equipstrongexp_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_EquipStrongexp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipStrongexp > e_equipstrongexp_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fEquip_2eproto();
  friend void protobuf_AssignDesc_E_5fEquip_2eproto();
  friend void protobuf_ShutdownFile_E_5fEquip_2eproto();

  void InitAsDefaultInstance();
  static Sheet_EquipStrongexp* default_instance_;
};
// -------------------------------------------------------------------

class E_EquipBeaststrongTypeDesc : public ::google::protobuf::Message {
 public:
  E_EquipBeaststrongTypeDesc();
  virtual ~E_EquipBeaststrongTypeDesc();

  E_EquipBeaststrongTypeDesc(const E_EquipBeaststrongTypeDesc& from);

  inline E_EquipBeaststrongTypeDesc& operator=(const E_EquipBeaststrongTypeDesc& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_EquipBeaststrongTypeDesc& default_instance();

  void Swap(E_EquipBeaststrongTypeDesc* other);

  // implements Message ----------------------------------------------

  E_EquipBeaststrongTypeDesc* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_EquipBeaststrongTypeDesc& from);
  void MergeFrom(const E_EquipBeaststrongTypeDesc& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string m_num = 1;
  inline bool has_m_num() const;
  inline void clear_m_num();
  static const int kMNumFieldNumber = 1;
  inline const ::std::string& m_num() const;
  inline void set_m_num(const ::std::string& value);
  inline void set_m_num(const char* value);
  inline void set_m_num(const char* value, size_t size);
  inline ::std::string* mutable_m_num();
  inline ::std::string* release_m_num();
  inline void set_allocated_m_num(::std::string* m_num);

  // optional int32 m_id = 2;
  inline bool has_m_id() const;
  inline void clear_m_id();
  static const int kMIdFieldNumber = 2;
  inline ::google::protobuf::int32 m_id() const;
  inline void set_m_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.E_EquipBeaststrongTypeDesc)
 private:
  inline void set_has_m_num();
  inline void clear_has_m_num();
  inline void set_has_m_id();
  inline void clear_has_m_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* m_num_;
  ::google::protobuf::int32 m_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fEquip_2eproto();
  friend void protobuf_AssignDesc_E_5fEquip_2eproto();
  friend void protobuf_ShutdownFile_E_5fEquip_2eproto();

  void InitAsDefaultInstance();
  static E_EquipBeaststrongTypeDesc* default_instance_;
};
// -------------------------------------------------------------------

class E_EquipBeaststrong : public ::google::protobuf::Message {
 public:
  E_EquipBeaststrong();
  virtual ~E_EquipBeaststrong();

  E_EquipBeaststrong(const E_EquipBeaststrong& from);

  inline E_EquipBeaststrong& operator=(const E_EquipBeaststrong& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_EquipBeaststrong& default_instance();

  void Swap(E_EquipBeaststrong* other);

  // implements Message ----------------------------------------------

  E_EquipBeaststrong* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_EquipBeaststrong& from);
  void MergeFrom(const E_EquipBeaststrong& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 m_id = 1;
  inline bool has_m_id() const;
  inline void clear_m_id();
  static const int kMIdFieldNumber = 1;
  inline ::google::protobuf::int64 m_id() const;
  inline void set_m_id(::google::protobuf::int64 value);

  // optional int32 m_position = 2;
  inline bool has_m_position() const;
  inline void clear_m_position();
  static const int kMPositionFieldNumber = 2;
  inline ::google::protobuf::int32 m_position() const;
  inline void set_m_position(::google::protobuf::int32 value);

  // optional int32 m_wearQuality = 3;
  inline bool has_m_wearquality() const;
  inline void clear_m_wearquality();
  static const int kMWearQualityFieldNumber = 3;
  inline ::google::protobuf::int32 m_wearquality() const;
  inline void set_m_wearquality(::google::protobuf::int32 value);

  // optional int32 m_srtongUp = 4;
  inline bool has_m_srtongup() const;
  inline void clear_m_srtongup();
  static const int kMSrtongUpFieldNumber = 4;
  inline ::google::protobuf::int32 m_srtongup() const;
  inline void set_m_srtongup(::google::protobuf::int32 value);

  // repeated .proto_ff.E_EquipBeaststrongTypeDesc m_type = 5;
  inline int m_type_size() const;
  inline void clear_m_type();
  static const int kMTypeFieldNumber = 5;
  inline const ::proto_ff::E_EquipBeaststrongTypeDesc& m_type(int index) const;
  inline ::proto_ff::E_EquipBeaststrongTypeDesc* mutable_m_type(int index);
  inline ::proto_ff::E_EquipBeaststrongTypeDesc* add_m_type();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipBeaststrongTypeDesc >&
      m_type() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipBeaststrongTypeDesc >*
      mutable_m_type();

  // @@protoc_insertion_point(class_scope:proto_ff.E_EquipBeaststrong)
 private:
  inline void set_has_m_id();
  inline void clear_has_m_id();
  inline void set_has_m_position();
  inline void clear_has_m_position();
  inline void set_has_m_wearquality();
  inline void clear_has_m_wearquality();
  inline void set_has_m_srtongup();
  inline void clear_has_m_srtongup();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 m_id_;
  ::google::protobuf::int32 m_position_;
  ::google::protobuf::int32 m_wearquality_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipBeaststrongTypeDesc > m_type_;
  ::google::protobuf::int32 m_srtongup_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fEquip_2eproto();
  friend void protobuf_AssignDesc_E_5fEquip_2eproto();
  friend void protobuf_ShutdownFile_E_5fEquip_2eproto();

  void InitAsDefaultInstance();
  static E_EquipBeaststrong* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_EquipBeaststrong : public ::google::protobuf::Message {
 public:
  Sheet_EquipBeaststrong();
  virtual ~Sheet_EquipBeaststrong();

  Sheet_EquipBeaststrong(const Sheet_EquipBeaststrong& from);

  inline Sheet_EquipBeaststrong& operator=(const Sheet_EquipBeaststrong& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_EquipBeaststrong& default_instance();

  void Swap(Sheet_EquipBeaststrong* other);

  // implements Message ----------------------------------------------

  Sheet_EquipBeaststrong* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_EquipBeaststrong& from);
  void MergeFrom(const Sheet_EquipBeaststrong& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.E_EquipBeaststrong E_EquipBeaststrong_List = 1;
  inline int e_equipbeaststrong_list_size() const;
  inline void clear_e_equipbeaststrong_list();
  static const int kEEquipBeaststrongListFieldNumber = 1;
  inline const ::proto_ff::E_EquipBeaststrong& e_equipbeaststrong_list(int index) const;
  inline ::proto_ff::E_EquipBeaststrong* mutable_e_equipbeaststrong_list(int index);
  inline ::proto_ff::E_EquipBeaststrong* add_e_equipbeaststrong_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipBeaststrong >&
      e_equipbeaststrong_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipBeaststrong >*
      mutable_e_equipbeaststrong_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_EquipBeaststrong)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipBeaststrong > e_equipbeaststrong_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fEquip_2eproto();
  friend void protobuf_AssignDesc_E_5fEquip_2eproto();
  friend void protobuf_ShutdownFile_E_5fEquip_2eproto();

  void InitAsDefaultInstance();
  static Sheet_EquipBeaststrong* default_instance_;
};
// -------------------------------------------------------------------

class E_EquipStrongtotalAttributeDesc : public ::google::protobuf::Message {
 public:
  E_EquipStrongtotalAttributeDesc();
  virtual ~E_EquipStrongtotalAttributeDesc();

  E_EquipStrongtotalAttributeDesc(const E_EquipStrongtotalAttributeDesc& from);

  inline E_EquipStrongtotalAttributeDesc& operator=(const E_EquipStrongtotalAttributeDesc& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_EquipStrongtotalAttributeDesc& default_instance();

  void Swap(E_EquipStrongtotalAttributeDesc* other);

  // implements Message ----------------------------------------------

  E_EquipStrongtotalAttributeDesc* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_EquipStrongtotalAttributeDesc& from);
  void MergeFrom(const E_EquipStrongtotalAttributeDesc& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 m_value = 1;
  inline bool has_m_value() const;
  inline void clear_m_value();
  static const int kMValueFieldNumber = 1;
  inline ::google::protobuf::int32 m_value() const;
  inline void set_m_value(::google::protobuf::int32 value);

  // optional int32 m_type = 2;
  inline bool has_m_type() const;
  inline void clear_m_type();
  static const int kMTypeFieldNumber = 2;
  inline ::google::protobuf::int32 m_type() const;
  inline void set_m_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.E_EquipStrongtotalAttributeDesc)
 private:
  inline void set_has_m_value();
  inline void clear_has_m_value();
  inline void set_has_m_type();
  inline void clear_has_m_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_value_;
  ::google::protobuf::int32 m_type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fEquip_2eproto();
  friend void protobuf_AssignDesc_E_5fEquip_2eproto();
  friend void protobuf_ShutdownFile_E_5fEquip_2eproto();

  void InitAsDefaultInstance();
  static E_EquipStrongtotalAttributeDesc* default_instance_;
};
// -------------------------------------------------------------------

class E_EquipStrongtotal : public ::google::protobuf::Message {
 public:
  E_EquipStrongtotal();
  virtual ~E_EquipStrongtotal();

  E_EquipStrongtotal(const E_EquipStrongtotal& from);

  inline E_EquipStrongtotal& operator=(const E_EquipStrongtotal& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_EquipStrongtotal& default_instance();

  void Swap(E_EquipStrongtotal* other);

  // implements Message ----------------------------------------------

  E_EquipStrongtotal* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_EquipStrongtotal& from);
  void MergeFrom(const E_EquipStrongtotal& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 m_id = 1;
  inline bool has_m_id() const;
  inline void clear_m_id();
  static const int kMIdFieldNumber = 1;
  inline ::google::protobuf::int64 m_id() const;
  inline void set_m_id(::google::protobuf::int64 value);

  // optional int32 m_idType = 2;
  inline bool has_m_idtype() const;
  inline void clear_m_idtype();
  static const int kMIdTypeFieldNumber = 2;
  inline ::google::protobuf::int32 m_idtype() const;
  inline void set_m_idtype(::google::protobuf::int32 value);

  // optional int32 m_idNum = 3;
  inline bool has_m_idnum() const;
  inline void clear_m_idnum();
  static const int kMIdNumFieldNumber = 3;
  inline ::google::protobuf::int32 m_idnum() const;
  inline void set_m_idnum(::google::protobuf::int32 value);

  // repeated .proto_ff.E_EquipStrongtotalAttributeDesc m_attribute = 4;
  inline int m_attribute_size() const;
  inline void clear_m_attribute();
  static const int kMAttributeFieldNumber = 4;
  inline const ::proto_ff::E_EquipStrongtotalAttributeDesc& m_attribute(int index) const;
  inline ::proto_ff::E_EquipStrongtotalAttributeDesc* mutable_m_attribute(int index);
  inline ::proto_ff::E_EquipStrongtotalAttributeDesc* add_m_attribute();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipStrongtotalAttributeDesc >&
      m_attribute() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipStrongtotalAttributeDesc >*
      mutable_m_attribute();

  // @@protoc_insertion_point(class_scope:proto_ff.E_EquipStrongtotal)
 private:
  inline void set_has_m_id();
  inline void clear_has_m_id();
  inline void set_has_m_idtype();
  inline void clear_has_m_idtype();
  inline void set_has_m_idnum();
  inline void clear_has_m_idnum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 m_id_;
  ::google::protobuf::int32 m_idtype_;
  ::google::protobuf::int32 m_idnum_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipStrongtotalAttributeDesc > m_attribute_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fEquip_2eproto();
  friend void protobuf_AssignDesc_E_5fEquip_2eproto();
  friend void protobuf_ShutdownFile_E_5fEquip_2eproto();

  void InitAsDefaultInstance();
  static E_EquipStrongtotal* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_EquipStrongtotal : public ::google::protobuf::Message {
 public:
  Sheet_EquipStrongtotal();
  virtual ~Sheet_EquipStrongtotal();

  Sheet_EquipStrongtotal(const Sheet_EquipStrongtotal& from);

  inline Sheet_EquipStrongtotal& operator=(const Sheet_EquipStrongtotal& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_EquipStrongtotal& default_instance();

  void Swap(Sheet_EquipStrongtotal* other);

  // implements Message ----------------------------------------------

  Sheet_EquipStrongtotal* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_EquipStrongtotal& from);
  void MergeFrom(const Sheet_EquipStrongtotal& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.E_EquipStrongtotal E_EquipStrongtotal_List = 1;
  inline int e_equipstrongtotal_list_size() const;
  inline void clear_e_equipstrongtotal_list();
  static const int kEEquipStrongtotalListFieldNumber = 1;
  inline const ::proto_ff::E_EquipStrongtotal& e_equipstrongtotal_list(int index) const;
  inline ::proto_ff::E_EquipStrongtotal* mutable_e_equipstrongtotal_list(int index);
  inline ::proto_ff::E_EquipStrongtotal* add_e_equipstrongtotal_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipStrongtotal >&
      e_equipstrongtotal_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipStrongtotal >*
      mutable_e_equipstrongtotal_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_EquipStrongtotal)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipStrongtotal > e_equipstrongtotal_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fEquip_2eproto();
  friend void protobuf_AssignDesc_E_5fEquip_2eproto();
  friend void protobuf_ShutdownFile_E_5fEquip_2eproto();

  void InitAsDefaultInstance();
  static Sheet_EquipStrongtotal* default_instance_;
};
// -------------------------------------------------------------------

class E_EquipGem : public ::google::protobuf::Message {
 public:
  E_EquipGem();
  virtual ~E_EquipGem();

  E_EquipGem(const E_EquipGem& from);

  inline E_EquipGem& operator=(const E_EquipGem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_EquipGem& default_instance();

  void Swap(E_EquipGem* other);

  // implements Message ----------------------------------------------

  E_EquipGem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_EquipGem& from);
  void MergeFrom(const E_EquipGem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 m_position = 1;
  inline bool has_m_position() const;
  inline void clear_m_position();
  static const int kMPositionFieldNumber = 1;
  inline ::google::protobuf::int32 m_position() const;
  inline void set_m_position(::google::protobuf::int32 value);

  // optional string m_gemType = 2;
  inline bool has_m_gemtype() const;
  inline void clear_m_gemtype();
  static const int kMGemTypeFieldNumber = 2;
  inline const ::std::string& m_gemtype() const;
  inline void set_m_gemtype(const ::std::string& value);
  inline void set_m_gemtype(const char* value);
  inline void set_m_gemtype(const char* value, size_t size);
  inline ::std::string* mutable_m_gemtype();
  inline ::std::string* release_m_gemtype();
  inline void set_allocated_m_gemtype(::std::string* m_gemtype);

  // optional int32 m_speciallyGemType = 3;
  inline bool has_m_speciallygemtype() const;
  inline void clear_m_speciallygemtype();
  static const int kMSpeciallyGemTypeFieldNumber = 3;
  inline ::google::protobuf::int32 m_speciallygemtype() const;
  inline void set_m_speciallygemtype(::google::protobuf::int32 value);

  // optional int32 m_payUnlockItem = 4;
  inline bool has_m_payunlockitem() const;
  inline void clear_m_payunlockitem();
  static const int kMPayUnlockItemFieldNumber = 4;
  inline ::google::protobuf::int32 m_payunlockitem() const;
  inline void set_m_payunlockitem(::google::protobuf::int32 value);

  // optional int32 m_payUnlockNnm = 5;
  inline bool has_m_payunlocknnm() const;
  inline void clear_m_payunlocknnm();
  static const int kMPayUnlockNnmFieldNumber = 5;
  inline ::google::protobuf::int32 m_payunlocknnm() const;
  inline void set_m_payunlocknnm(::google::protobuf::int32 value);

  // optional string m_commonGemBuy = 6;
  inline bool has_m_commongembuy() const;
  inline void clear_m_commongembuy();
  static const int kMCommonGemBuyFieldNumber = 6;
  inline const ::std::string& m_commongembuy() const;
  inline void set_m_commongembuy(const ::std::string& value);
  inline void set_m_commongembuy(const char* value);
  inline void set_m_commongembuy(const char* value, size_t size);
  inline ::std::string* mutable_m_commongembuy();
  inline ::std::string* release_m_commongembuy();
  inline void set_allocated_m_commongembuy(::std::string* m_commongembuy);

  // optional string m_speciallyGemBuy = 7;
  inline bool has_m_speciallygembuy() const;
  inline void clear_m_speciallygembuy();
  static const int kMSpeciallyGemBuyFieldNumber = 7;
  inline const ::std::string& m_speciallygembuy() const;
  inline void set_m_speciallygembuy(const ::std::string& value);
  inline void set_m_speciallygembuy(const char* value);
  inline void set_m_speciallygembuy(const char* value, size_t size);
  inline ::std::string* mutable_m_speciallygembuy();
  inline ::std::string* release_m_speciallygembuy();
  inline void set_allocated_m_speciallygembuy(::std::string* m_speciallygembuy);

  // repeated int32 m_gemUnlock = 8;
  inline int m_gemunlock_size() const;
  inline void clear_m_gemunlock();
  static const int kMGemUnlockFieldNumber = 8;
  inline ::google::protobuf::int32 m_gemunlock(int index) const;
  inline void set_m_gemunlock(int index, ::google::protobuf::int32 value);
  inline void add_m_gemunlock(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      m_gemunlock() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_m_gemunlock();

  // @@protoc_insertion_point(class_scope:proto_ff.E_EquipGem)
 private:
  inline void set_has_m_position();
  inline void clear_has_m_position();
  inline void set_has_m_gemtype();
  inline void clear_has_m_gemtype();
  inline void set_has_m_speciallygemtype();
  inline void clear_has_m_speciallygemtype();
  inline void set_has_m_payunlockitem();
  inline void clear_has_m_payunlockitem();
  inline void set_has_m_payunlocknnm();
  inline void clear_has_m_payunlocknnm();
  inline void set_has_m_commongembuy();
  inline void clear_has_m_commongembuy();
  inline void set_has_m_speciallygembuy();
  inline void clear_has_m_speciallygembuy();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* m_gemtype_;
  ::google::protobuf::int32 m_position_;
  ::google::protobuf::int32 m_speciallygemtype_;
  ::google::protobuf::int32 m_payunlockitem_;
  ::google::protobuf::int32 m_payunlocknnm_;
  ::std::string* m_commongembuy_;
  ::std::string* m_speciallygembuy_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > m_gemunlock_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fEquip_2eproto();
  friend void protobuf_AssignDesc_E_5fEquip_2eproto();
  friend void protobuf_ShutdownFile_E_5fEquip_2eproto();

  void InitAsDefaultInstance();
  static E_EquipGem* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_EquipGem : public ::google::protobuf::Message {
 public:
  Sheet_EquipGem();
  virtual ~Sheet_EquipGem();

  Sheet_EquipGem(const Sheet_EquipGem& from);

  inline Sheet_EquipGem& operator=(const Sheet_EquipGem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_EquipGem& default_instance();

  void Swap(Sheet_EquipGem* other);

  // implements Message ----------------------------------------------

  Sheet_EquipGem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_EquipGem& from);
  void MergeFrom(const Sheet_EquipGem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.E_EquipGem E_EquipGem_List = 1;
  inline int e_equipgem_list_size() const;
  inline void clear_e_equipgem_list();
  static const int kEEquipGemListFieldNumber = 1;
  inline const ::proto_ff::E_EquipGem& e_equipgem_list(int index) const;
  inline ::proto_ff::E_EquipGem* mutable_e_equipgem_list(int index);
  inline ::proto_ff::E_EquipGem* add_e_equipgem_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipGem >&
      e_equipgem_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipGem >*
      mutable_e_equipgem_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_EquipGem)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipGem > e_equipgem_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fEquip_2eproto();
  friend void protobuf_AssignDesc_E_5fEquip_2eproto();
  friend void protobuf_ShutdownFile_E_5fEquip_2eproto();

  void InitAsDefaultInstance();
  static Sheet_EquipGem* default_instance_;
};
// -------------------------------------------------------------------

class E_EquipGemlv : public ::google::protobuf::Message {
 public:
  E_EquipGemlv();
  virtual ~E_EquipGemlv();

  E_EquipGemlv(const E_EquipGemlv& from);

  inline E_EquipGemlv& operator=(const E_EquipGemlv& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_EquipGemlv& default_instance();

  void Swap(E_EquipGemlv* other);

  // implements Message ----------------------------------------------

  E_EquipGemlv* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_EquipGemlv& from);
  void MergeFrom(const E_EquipGemlv& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 m_id = 1;
  inline bool has_m_id() const;
  inline void clear_m_id();
  static const int kMIdFieldNumber = 1;
  inline ::google::protobuf::int32 m_id() const;
  inline void set_m_id(::google::protobuf::int32 value);

  // optional int32 m_preId = 2;
  inline bool has_m_preid() const;
  inline void clear_m_preid();
  static const int kMPreIdFieldNumber = 2;
  inline ::google::protobuf::int32 m_preid() const;
  inline void set_m_preid(::google::protobuf::int32 value);

  // optional int32 m_nextId = 3;
  inline bool has_m_nextid() const;
  inline void clear_m_nextid();
  static const int kMNextIdFieldNumber = 3;
  inline ::google::protobuf::int32 m_nextid() const;
  inline void set_m_nextid(::google::protobuf::int32 value);

  // optional string m_numb = 4;
  inline bool has_m_numb() const;
  inline void clear_m_numb();
  static const int kMNumbFieldNumber = 4;
  inline const ::std::string& m_numb() const;
  inline void set_m_numb(const ::std::string& value);
  inline void set_m_numb(const char* value);
  inline void set_m_numb(const char* value, size_t size);
  inline ::std::string* mutable_m_numb();
  inline ::std::string* release_m_numb();
  inline void set_allocated_m_numb(::std::string* m_numb);

  // optional int32 m_nextValue = 5;
  inline bool has_m_nextvalue() const;
  inline void clear_m_nextvalue();
  static const int kMNextValueFieldNumber = 5;
  inline ::google::protobuf::int32 m_nextvalue() const;
  inline void set_m_nextvalue(::google::protobuf::int32 value);

  // optional int32 m_costGold = 6;
  inline bool has_m_costgold() const;
  inline void clear_m_costgold();
  static const int kMCostGoldFieldNumber = 6;
  inline ::google::protobuf::int32 m_costgold() const;
  inline void set_m_costgold(::google::protobuf::int32 value);

  // optional int32 m_mallID = 7;
  inline bool has_m_mallid() const;
  inline void clear_m_mallid();
  static const int kMMallIDFieldNumber = 7;
  inline ::google::protobuf::int32 m_mallid() const;
  inline void set_m_mallid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.E_EquipGemlv)
 private:
  inline void set_has_m_id();
  inline void clear_has_m_id();
  inline void set_has_m_preid();
  inline void clear_has_m_preid();
  inline void set_has_m_nextid();
  inline void clear_has_m_nextid();
  inline void set_has_m_numb();
  inline void clear_has_m_numb();
  inline void set_has_m_nextvalue();
  inline void clear_has_m_nextvalue();
  inline void set_has_m_costgold();
  inline void clear_has_m_costgold();
  inline void set_has_m_mallid();
  inline void clear_has_m_mallid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_id_;
  ::google::protobuf::int32 m_preid_;
  ::std::string* m_numb_;
  ::google::protobuf::int32 m_nextid_;
  ::google::protobuf::int32 m_nextvalue_;
  ::google::protobuf::int32 m_costgold_;
  ::google::protobuf::int32 m_mallid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fEquip_2eproto();
  friend void protobuf_AssignDesc_E_5fEquip_2eproto();
  friend void protobuf_ShutdownFile_E_5fEquip_2eproto();

  void InitAsDefaultInstance();
  static E_EquipGemlv* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_EquipGemlv : public ::google::protobuf::Message {
 public:
  Sheet_EquipGemlv();
  virtual ~Sheet_EquipGemlv();

  Sheet_EquipGemlv(const Sheet_EquipGemlv& from);

  inline Sheet_EquipGemlv& operator=(const Sheet_EquipGemlv& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_EquipGemlv& default_instance();

  void Swap(Sheet_EquipGemlv* other);

  // implements Message ----------------------------------------------

  Sheet_EquipGemlv* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_EquipGemlv& from);
  void MergeFrom(const Sheet_EquipGemlv& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.E_EquipGemlv E_EquipGemlv_List = 1;
  inline int e_equipgemlv_list_size() const;
  inline void clear_e_equipgemlv_list();
  static const int kEEquipGemlvListFieldNumber = 1;
  inline const ::proto_ff::E_EquipGemlv& e_equipgemlv_list(int index) const;
  inline ::proto_ff::E_EquipGemlv* mutable_e_equipgemlv_list(int index);
  inline ::proto_ff::E_EquipGemlv* add_e_equipgemlv_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipGemlv >&
      e_equipgemlv_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipGemlv >*
      mutable_e_equipgemlv_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_EquipGemlv)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipGemlv > e_equipgemlv_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fEquip_2eproto();
  friend void protobuf_AssignDesc_E_5fEquip_2eproto();
  friend void protobuf_ShutdownFile_E_5fEquip_2eproto();

  void InitAsDefaultInstance();
  static Sheet_EquipGemlv* default_instance_;
};
// -------------------------------------------------------------------

class E_EquipStoveattAttributeDesc : public ::google::protobuf::Message {
 public:
  E_EquipStoveattAttributeDesc();
  virtual ~E_EquipStoveattAttributeDesc();

  E_EquipStoveattAttributeDesc(const E_EquipStoveattAttributeDesc& from);

  inline E_EquipStoveattAttributeDesc& operator=(const E_EquipStoveattAttributeDesc& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_EquipStoveattAttributeDesc& default_instance();

  void Swap(E_EquipStoveattAttributeDesc* other);

  // implements Message ----------------------------------------------

  E_EquipStoveattAttributeDesc* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_EquipStoveattAttributeDesc& from);
  void MergeFrom(const E_EquipStoveattAttributeDesc& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 m_value = 1;
  inline bool has_m_value() const;
  inline void clear_m_value();
  static const int kMValueFieldNumber = 1;
  inline ::google::protobuf::int32 m_value() const;
  inline void set_m_value(::google::protobuf::int32 value);

  // optional int32 m_type = 2;
  inline bool has_m_type() const;
  inline void clear_m_type();
  static const int kMTypeFieldNumber = 2;
  inline ::google::protobuf::int32 m_type() const;
  inline void set_m_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.E_EquipStoveattAttributeDesc)
 private:
  inline void set_has_m_value();
  inline void clear_has_m_value();
  inline void set_has_m_type();
  inline void clear_has_m_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_value_;
  ::google::protobuf::int32 m_type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fEquip_2eproto();
  friend void protobuf_AssignDesc_E_5fEquip_2eproto();
  friend void protobuf_ShutdownFile_E_5fEquip_2eproto();

  void InitAsDefaultInstance();
  static E_EquipStoveattAttributeDesc* default_instance_;
};
// -------------------------------------------------------------------

class E_EquipStoveatt : public ::google::protobuf::Message {
 public:
  E_EquipStoveatt();
  virtual ~E_EquipStoveatt();

  E_EquipStoveatt(const E_EquipStoveatt& from);

  inline E_EquipStoveatt& operator=(const E_EquipStoveatt& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_EquipStoveatt& default_instance();

  void Swap(E_EquipStoveatt* other);

  // implements Message ----------------------------------------------

  E_EquipStoveatt* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_EquipStoveatt& from);
  void MergeFrom(const E_EquipStoveatt& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 m_lv = 1;
  inline bool has_m_lv() const;
  inline void clear_m_lv();
  static const int kMLvFieldNumber = 1;
  inline ::google::protobuf::int32 m_lv() const;
  inline void set_m_lv(::google::protobuf::int32 value);

  // optional int64 m_exp = 2;
  inline bool has_m_exp() const;
  inline void clear_m_exp();
  static const int kMExpFieldNumber = 2;
  inline ::google::protobuf::int64 m_exp() const;
  inline void set_m_exp(::google::protobuf::int64 value);

  // repeated .proto_ff.E_EquipStoveattAttributeDesc m_attribute = 3;
  inline int m_attribute_size() const;
  inline void clear_m_attribute();
  static const int kMAttributeFieldNumber = 3;
  inline const ::proto_ff::E_EquipStoveattAttributeDesc& m_attribute(int index) const;
  inline ::proto_ff::E_EquipStoveattAttributeDesc* mutable_m_attribute(int index);
  inline ::proto_ff::E_EquipStoveattAttributeDesc* add_m_attribute();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipStoveattAttributeDesc >&
      m_attribute() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipStoveattAttributeDesc >*
      mutable_m_attribute();

  // @@protoc_insertion_point(class_scope:proto_ff.E_EquipStoveatt)
 private:
  inline void set_has_m_lv();
  inline void clear_has_m_lv();
  inline void set_has_m_exp();
  inline void clear_has_m_exp();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 m_exp_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipStoveattAttributeDesc > m_attribute_;
  ::google::protobuf::int32 m_lv_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fEquip_2eproto();
  friend void protobuf_AssignDesc_E_5fEquip_2eproto();
  friend void protobuf_ShutdownFile_E_5fEquip_2eproto();

  void InitAsDefaultInstance();
  static E_EquipStoveatt* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_EquipStoveatt : public ::google::protobuf::Message {
 public:
  Sheet_EquipStoveatt();
  virtual ~Sheet_EquipStoveatt();

  Sheet_EquipStoveatt(const Sheet_EquipStoveatt& from);

  inline Sheet_EquipStoveatt& operator=(const Sheet_EquipStoveatt& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_EquipStoveatt& default_instance();

  void Swap(Sheet_EquipStoveatt* other);

  // implements Message ----------------------------------------------

  Sheet_EquipStoveatt* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_EquipStoveatt& from);
  void MergeFrom(const Sheet_EquipStoveatt& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.E_EquipStoveatt E_EquipStoveatt_List = 1;
  inline int e_equipstoveatt_list_size() const;
  inline void clear_e_equipstoveatt_list();
  static const int kEEquipStoveattListFieldNumber = 1;
  inline const ::proto_ff::E_EquipStoveatt& e_equipstoveatt_list(int index) const;
  inline ::proto_ff::E_EquipStoveatt* mutable_e_equipstoveatt_list(int index);
  inline ::proto_ff::E_EquipStoveatt* add_e_equipstoveatt_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipStoveatt >&
      e_equipstoveatt_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipStoveatt >*
      mutable_e_equipstoveatt_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_EquipStoveatt)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipStoveatt > e_equipstoveatt_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fEquip_2eproto();
  friend void protobuf_AssignDesc_E_5fEquip_2eproto();
  friend void protobuf_ShutdownFile_E_5fEquip_2eproto();

  void InitAsDefaultInstance();
  static Sheet_EquipStoveatt* default_instance_;
};
// -------------------------------------------------------------------

class E_EquipStoveexp : public ::google::protobuf::Message {
 public:
  E_EquipStoveexp();
  virtual ~E_EquipStoveexp();

  E_EquipStoveexp(const E_EquipStoveexp& from);

  inline E_EquipStoveexp& operator=(const E_EquipStoveexp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_EquipStoveexp& default_instance();

  void Swap(E_EquipStoveexp* other);

  // implements Message ----------------------------------------------

  E_EquipStoveexp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_EquipStoveexp& from);
  void MergeFrom(const E_EquipStoveexp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 m_ID = 1;
  inline bool has_m_id() const;
  inline void clear_m_id();
  static const int kMIDFieldNumber = 1;
  inline ::google::protobuf::int32 m_id() const;
  inline void set_m_id(::google::protobuf::int32 value);

  // optional int32 m_exp = 2;
  inline bool has_m_exp() const;
  inline void clear_m_exp();
  static const int kMExpFieldNumber = 2;
  inline ::google::protobuf::int32 m_exp() const;
  inline void set_m_exp(::google::protobuf::int32 value);

  // optional int32 m_wearQuality = 3;
  inline bool has_m_wearquality() const;
  inline void clear_m_wearquality();
  static const int kMWearQualityFieldNumber = 3;
  inline ::google::protobuf::int32 m_wearquality() const;
  inline void set_m_wearquality(::google::protobuf::int32 value);

  // optional int32 m_quality = 4;
  inline bool has_m_quality() const;
  inline void clear_m_quality();
  static const int kMQualityFieldNumber = 4;
  inline ::google::protobuf::int32 m_quality() const;
  inline void set_m_quality(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.E_EquipStoveexp)
 private:
  inline void set_has_m_id();
  inline void clear_has_m_id();
  inline void set_has_m_exp();
  inline void clear_has_m_exp();
  inline void set_has_m_wearquality();
  inline void clear_has_m_wearquality();
  inline void set_has_m_quality();
  inline void clear_has_m_quality();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_id_;
  ::google::protobuf::int32 m_exp_;
  ::google::protobuf::int32 m_wearquality_;
  ::google::protobuf::int32 m_quality_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fEquip_2eproto();
  friend void protobuf_AssignDesc_E_5fEquip_2eproto();
  friend void protobuf_ShutdownFile_E_5fEquip_2eproto();

  void InitAsDefaultInstance();
  static E_EquipStoveexp* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_EquipStoveexp : public ::google::protobuf::Message {
 public:
  Sheet_EquipStoveexp();
  virtual ~Sheet_EquipStoveexp();

  Sheet_EquipStoveexp(const Sheet_EquipStoveexp& from);

  inline Sheet_EquipStoveexp& operator=(const Sheet_EquipStoveexp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_EquipStoveexp& default_instance();

  void Swap(Sheet_EquipStoveexp* other);

  // implements Message ----------------------------------------------

  Sheet_EquipStoveexp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_EquipStoveexp& from);
  void MergeFrom(const Sheet_EquipStoveexp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.E_EquipStoveexp E_EquipStoveexp_List = 1;
  inline int e_equipstoveexp_list_size() const;
  inline void clear_e_equipstoveexp_list();
  static const int kEEquipStoveexpListFieldNumber = 1;
  inline const ::proto_ff::E_EquipStoveexp& e_equipstoveexp_list(int index) const;
  inline ::proto_ff::E_EquipStoveexp* mutable_e_equipstoveexp_list(int index);
  inline ::proto_ff::E_EquipStoveexp* add_e_equipstoveexp_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipStoveexp >&
      e_equipstoveexp_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipStoveexp >*
      mutable_e_equipstoveexp_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_EquipStoveexp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipStoveexp > e_equipstoveexp_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fEquip_2eproto();
  friend void protobuf_AssignDesc_E_5fEquip_2eproto();
  friend void protobuf_ShutdownFile_E_5fEquip_2eproto();

  void InitAsDefaultInstance();
  static Sheet_EquipStoveexp* default_instance_;
};
// -------------------------------------------------------------------

class E_EquipGrade : public ::google::protobuf::Message {
 public:
  E_EquipGrade();
  virtual ~E_EquipGrade();

  E_EquipGrade(const E_EquipGrade& from);

  inline E_EquipGrade& operator=(const E_EquipGrade& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_EquipGrade& default_instance();

  void Swap(E_EquipGrade* other);

  // implements Message ----------------------------------------------

  E_EquipGrade* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_EquipGrade& from);
  void MergeFrom(const E_EquipGrade& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 m_ID = 1;
  inline bool has_m_id() const;
  inline void clear_m_id();
  static const int kMIDFieldNumber = 1;
  inline ::google::protobuf::int32 m_id() const;
  inline void set_m_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.E_EquipGrade)
 private:
  inline void set_has_m_id();
  inline void clear_has_m_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fEquip_2eproto();
  friend void protobuf_AssignDesc_E_5fEquip_2eproto();
  friend void protobuf_ShutdownFile_E_5fEquip_2eproto();

  void InitAsDefaultInstance();
  static E_EquipGrade* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_EquipGrade : public ::google::protobuf::Message {
 public:
  Sheet_EquipGrade();
  virtual ~Sheet_EquipGrade();

  Sheet_EquipGrade(const Sheet_EquipGrade& from);

  inline Sheet_EquipGrade& operator=(const Sheet_EquipGrade& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_EquipGrade& default_instance();

  void Swap(Sheet_EquipGrade* other);

  // implements Message ----------------------------------------------

  Sheet_EquipGrade* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_EquipGrade& from);
  void MergeFrom(const Sheet_EquipGrade& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.E_EquipGrade E_EquipGrade_List = 1;
  inline int e_equipgrade_list_size() const;
  inline void clear_e_equipgrade_list();
  static const int kEEquipGradeListFieldNumber = 1;
  inline const ::proto_ff::E_EquipGrade& e_equipgrade_list(int index) const;
  inline ::proto_ff::E_EquipGrade* mutable_e_equipgrade_list(int index);
  inline ::proto_ff::E_EquipGrade* add_e_equipgrade_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipGrade >&
      e_equipgrade_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipGrade >*
      mutable_e_equipgrade_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_EquipGrade)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipGrade > e_equipgrade_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fEquip_2eproto();
  friend void protobuf_AssignDesc_E_5fEquip_2eproto();
  friend void protobuf_ShutdownFile_E_5fEquip_2eproto();

  void InitAsDefaultInstance();
  static Sheet_EquipGrade* default_instance_;
};
// -------------------------------------------------------------------

class E_EquipClearAttributeDesc : public ::google::protobuf::Message {
 public:
  E_EquipClearAttributeDesc();
  virtual ~E_EquipClearAttributeDesc();

  E_EquipClearAttributeDesc(const E_EquipClearAttributeDesc& from);

  inline E_EquipClearAttributeDesc& operator=(const E_EquipClearAttributeDesc& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_EquipClearAttributeDesc& default_instance();

  void Swap(E_EquipClearAttributeDesc* other);

  // implements Message ----------------------------------------------

  E_EquipClearAttributeDesc* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_EquipClearAttributeDesc& from);
  void MergeFrom(const E_EquipClearAttributeDesc& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string m_value = 1;
  inline bool has_m_value() const;
  inline void clear_m_value();
  static const int kMValueFieldNumber = 1;
  inline const ::std::string& m_value() const;
  inline void set_m_value(const ::std::string& value);
  inline void set_m_value(const char* value);
  inline void set_m_value(const char* value, size_t size);
  inline ::std::string* mutable_m_value();
  inline ::std::string* release_m_value();
  inline void set_allocated_m_value(::std::string* m_value);

  // @@protoc_insertion_point(class_scope:proto_ff.E_EquipClearAttributeDesc)
 private:
  inline void set_has_m_value();
  inline void clear_has_m_value();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* m_value_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fEquip_2eproto();
  friend void protobuf_AssignDesc_E_5fEquip_2eproto();
  friend void protobuf_ShutdownFile_E_5fEquip_2eproto();

  void InitAsDefaultInstance();
  static E_EquipClearAttributeDesc* default_instance_;
};
// -------------------------------------------------------------------

class E_EquipClearSectionDesc : public ::google::protobuf::Message {
 public:
  E_EquipClearSectionDesc();
  virtual ~E_EquipClearSectionDesc();

  E_EquipClearSectionDesc(const E_EquipClearSectionDesc& from);

  inline E_EquipClearSectionDesc& operator=(const E_EquipClearSectionDesc& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_EquipClearSectionDesc& default_instance();

  void Swap(E_EquipClearSectionDesc* other);

  // implements Message ----------------------------------------------

  E_EquipClearSectionDesc* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_EquipClearSectionDesc& from);
  void MergeFrom(const E_EquipClearSectionDesc& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string m_up = 1;
  inline bool has_m_up() const;
  inline void clear_m_up();
  static const int kMUpFieldNumber = 1;
  inline const ::std::string& m_up() const;
  inline void set_m_up(const ::std::string& value);
  inline void set_m_up(const char* value);
  inline void set_m_up(const char* value, size_t size);
  inline ::std::string* mutable_m_up();
  inline ::std::string* release_m_up();
  inline void set_allocated_m_up(::std::string* m_up);

  // optional string m_down = 2;
  inline bool has_m_down() const;
  inline void clear_m_down();
  static const int kMDownFieldNumber = 2;
  inline const ::std::string& m_down() const;
  inline void set_m_down(const ::std::string& value);
  inline void set_m_down(const char* value);
  inline void set_m_down(const char* value, size_t size);
  inline ::std::string* mutable_m_down();
  inline ::std::string* release_m_down();
  inline void set_allocated_m_down(::std::string* m_down);

  // optional string m_type = 3;
  inline bool has_m_type() const;
  inline void clear_m_type();
  static const int kMTypeFieldNumber = 3;
  inline const ::std::string& m_type() const;
  inline void set_m_type(const ::std::string& value);
  inline void set_m_type(const char* value);
  inline void set_m_type(const char* value, size_t size);
  inline ::std::string* mutable_m_type();
  inline ::std::string* release_m_type();
  inline void set_allocated_m_type(::std::string* m_type);

  // optional string m_g = 4;
  inline bool has_m_g() const;
  inline void clear_m_g();
  static const int kMGFieldNumber = 4;
  inline const ::std::string& m_g() const;
  inline void set_m_g(const ::std::string& value);
  inline void set_m_g(const char* value);
  inline void set_m_g(const char* value, size_t size);
  inline ::std::string* mutable_m_g();
  inline ::std::string* release_m_g();
  inline void set_allocated_m_g(::std::string* m_g);

  // optional int32 m_p = 5;
  inline bool has_m_p() const;
  inline void clear_m_p();
  static const int kMPFieldNumber = 5;
  inline ::google::protobuf::int32 m_p() const;
  inline void set_m_p(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.E_EquipClearSectionDesc)
 private:
  inline void set_has_m_up();
  inline void clear_has_m_up();
  inline void set_has_m_down();
  inline void clear_has_m_down();
  inline void set_has_m_type();
  inline void clear_has_m_type();
  inline void set_has_m_g();
  inline void clear_has_m_g();
  inline void set_has_m_p();
  inline void clear_has_m_p();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* m_up_;
  ::std::string* m_down_;
  ::std::string* m_type_;
  ::std::string* m_g_;
  ::google::protobuf::int32 m_p_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fEquip_2eproto();
  friend void protobuf_AssignDesc_E_5fEquip_2eproto();
  friend void protobuf_ShutdownFile_E_5fEquip_2eproto();

  void InitAsDefaultInstance();
  static E_EquipClearSectionDesc* default_instance_;
};
// -------------------------------------------------------------------

class E_EquipClear : public ::google::protobuf::Message {
 public:
  E_EquipClear();
  virtual ~E_EquipClear();

  E_EquipClear(const E_EquipClear& from);

  inline E_EquipClear& operator=(const E_EquipClear& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_EquipClear& default_instance();

  void Swap(E_EquipClear* other);

  // implements Message ----------------------------------------------

  E_EquipClear* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_EquipClear& from);
  void MergeFrom(const E_EquipClear& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 m_id = 1;
  inline bool has_m_id() const;
  inline void clear_m_id();
  static const int kMIdFieldNumber = 1;
  inline ::google::protobuf::int32 m_id() const;
  inline void set_m_id(::google::protobuf::int32 value);

  // optional string m_value = 2;
  inline bool has_m_value() const;
  inline void clear_m_value();
  static const int kMValueFieldNumber = 2;
  inline const ::std::string& m_value() const;
  inline void set_m_value(const ::std::string& value);
  inline void set_m_value(const char* value);
  inline void set_m_value(const char* value, size_t size);
  inline ::std::string* mutable_m_value();
  inline ::std::string* release_m_value();
  inline void set_allocated_m_value(::std::string* m_value);

  // optional int32 m_unlockItem = 3;
  inline bool has_m_unlockitem() const;
  inline void clear_m_unlockitem();
  static const int kMUnlockItemFieldNumber = 3;
  inline ::google::protobuf::int32 m_unlockitem() const;
  inline void set_m_unlockitem(::google::protobuf::int32 value);

  // optional string m_unlockNum = 4;
  inline bool has_m_unlocknum() const;
  inline void clear_m_unlocknum();
  static const int kMUnlockNumFieldNumber = 4;
  inline const ::std::string& m_unlocknum() const;
  inline void set_m_unlocknum(const ::std::string& value);
  inline void set_m_unlocknum(const char* value);
  inline void set_m_unlocknum(const char* value, size_t size);
  inline ::std::string* mutable_m_unlocknum();
  inline ::std::string* release_m_unlocknum();
  inline void set_allocated_m_unlocknum(::std::string* m_unlocknum);

  // optional int64 m_consumeId = 5;
  inline bool has_m_consumeid() const;
  inline void clear_m_consumeid();
  static const int kMConsumeIdFieldNumber = 5;
  inline ::google::protobuf::int64 m_consumeid() const;
  inline void set_m_consumeid(::google::protobuf::int64 value);

  // optional string m_consumeNum = 6;
  inline bool has_m_consumenum() const;
  inline void clear_m_consumenum();
  static const int kMConsumeNumFieldNumber = 6;
  inline const ::std::string& m_consumenum() const;
  inline void set_m_consumenum(const ::std::string& value);
  inline void set_m_consumenum(const char* value);
  inline void set_m_consumenum(const char* value, size_t size);
  inline ::std::string* mutable_m_consumenum();
  inline ::std::string* release_m_consumenum();
  inline void set_allocated_m_consumenum(::std::string* m_consumenum);

  // optional string m_lockingId = 7;
  inline bool has_m_lockingid() const;
  inline void clear_m_lockingid();
  static const int kMLockingIdFieldNumber = 7;
  inline const ::std::string& m_lockingid() const;
  inline void set_m_lockingid(const ::std::string& value);
  inline void set_m_lockingid(const char* value);
  inline void set_m_lockingid(const char* value, size_t size);
  inline ::std::string* mutable_m_lockingid();
  inline ::std::string* release_m_lockingid();
  inline void set_allocated_m_lockingid(::std::string* m_lockingid);

  // optional string m_lockingNum = 8;
  inline bool has_m_lockingnum() const;
  inline void clear_m_lockingnum();
  static const int kMLockingNumFieldNumber = 8;
  inline const ::std::string& m_lockingnum() const;
  inline void set_m_lockingnum(const ::std::string& value);
  inline void set_m_lockingnum(const char* value);
  inline void set_m_lockingnum(const char* value, size_t size);
  inline ::std::string* mutable_m_lockingnum();
  inline ::std::string* release_m_lockingnum();
  inline void set_allocated_m_lockingnum(::std::string* m_lockingnum);

  // repeated .proto_ff.E_EquipClearAttributeDesc m_attribute = 9;
  inline int m_attribute_size() const;
  inline void clear_m_attribute();
  static const int kMAttributeFieldNumber = 9;
  inline const ::proto_ff::E_EquipClearAttributeDesc& m_attribute(int index) const;
  inline ::proto_ff::E_EquipClearAttributeDesc* mutable_m_attribute(int index);
  inline ::proto_ff::E_EquipClearAttributeDesc* add_m_attribute();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipClearAttributeDesc >&
      m_attribute() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipClearAttributeDesc >*
      mutable_m_attribute();

  // repeated .proto_ff.E_EquipClearSectionDesc m_Section = 10;
  inline int m_section_size() const;
  inline void clear_m_section();
  static const int kMSectionFieldNumber = 10;
  inline const ::proto_ff::E_EquipClearSectionDesc& m_section(int index) const;
  inline ::proto_ff::E_EquipClearSectionDesc* mutable_m_section(int index);
  inline ::proto_ff::E_EquipClearSectionDesc* add_m_section();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipClearSectionDesc >&
      m_section() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipClearSectionDesc >*
      mutable_m_section();

  // @@protoc_insertion_point(class_scope:proto_ff.E_EquipClear)
 private:
  inline void set_has_m_id();
  inline void clear_has_m_id();
  inline void set_has_m_value();
  inline void clear_has_m_value();
  inline void set_has_m_unlockitem();
  inline void clear_has_m_unlockitem();
  inline void set_has_m_unlocknum();
  inline void clear_has_m_unlocknum();
  inline void set_has_m_consumeid();
  inline void clear_has_m_consumeid();
  inline void set_has_m_consumenum();
  inline void clear_has_m_consumenum();
  inline void set_has_m_lockingid();
  inline void clear_has_m_lockingid();
  inline void set_has_m_lockingnum();
  inline void clear_has_m_lockingnum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* m_value_;
  ::google::protobuf::int32 m_id_;
  ::google::protobuf::int32 m_unlockitem_;
  ::std::string* m_unlocknum_;
  ::google::protobuf::int64 m_consumeid_;
  ::std::string* m_consumenum_;
  ::std::string* m_lockingid_;
  ::std::string* m_lockingnum_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipClearAttributeDesc > m_attribute_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipClearSectionDesc > m_section_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(10 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fEquip_2eproto();
  friend void protobuf_AssignDesc_E_5fEquip_2eproto();
  friend void protobuf_ShutdownFile_E_5fEquip_2eproto();

  void InitAsDefaultInstance();
  static E_EquipClear* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_EquipClear : public ::google::protobuf::Message {
 public:
  Sheet_EquipClear();
  virtual ~Sheet_EquipClear();

  Sheet_EquipClear(const Sheet_EquipClear& from);

  inline Sheet_EquipClear& operator=(const Sheet_EquipClear& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_EquipClear& default_instance();

  void Swap(Sheet_EquipClear* other);

  // implements Message ----------------------------------------------

  Sheet_EquipClear* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_EquipClear& from);
  void MergeFrom(const Sheet_EquipClear& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.E_EquipClear E_EquipClear_List = 1;
  inline int e_equipclear_list_size() const;
  inline void clear_e_equipclear_list();
  static const int kEEquipClearListFieldNumber = 1;
  inline const ::proto_ff::E_EquipClear& e_equipclear_list(int index) const;
  inline ::proto_ff::E_EquipClear* mutable_e_equipclear_list(int index);
  inline ::proto_ff::E_EquipClear* add_e_equipclear_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipClear >&
      e_equipclear_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipClear >*
      mutable_e_equipclear_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_EquipClear)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipClear > e_equipclear_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fEquip_2eproto();
  friend void protobuf_AssignDesc_E_5fEquip_2eproto();
  friend void protobuf_ShutdownFile_E_5fEquip_2eproto();

  void InitAsDefaultInstance();
  static Sheet_EquipClear* default_instance_;
};
// -------------------------------------------------------------------

class E_EquipSuitAttributeDesc : public ::google::protobuf::Message {
 public:
  E_EquipSuitAttributeDesc();
  virtual ~E_EquipSuitAttributeDesc();

  E_EquipSuitAttributeDesc(const E_EquipSuitAttributeDesc& from);

  inline E_EquipSuitAttributeDesc& operator=(const E_EquipSuitAttributeDesc& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_EquipSuitAttributeDesc& default_instance();

  void Swap(E_EquipSuitAttributeDesc* other);

  // implements Message ----------------------------------------------

  E_EquipSuitAttributeDesc* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_EquipSuitAttributeDesc& from);
  void MergeFrom(const E_EquipSuitAttributeDesc& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string m_value = 1;
  inline bool has_m_value() const;
  inline void clear_m_value();
  static const int kMValueFieldNumber = 1;
  inline const ::std::string& m_value() const;
  inline void set_m_value(const ::std::string& value);
  inline void set_m_value(const char* value);
  inline void set_m_value(const char* value, size_t size);
  inline ::std::string* mutable_m_value();
  inline ::std::string* release_m_value();
  inline void set_allocated_m_value(::std::string* m_value);

  // optional int32 m_sctivation = 2;
  inline bool has_m_sctivation() const;
  inline void clear_m_sctivation();
  static const int kMSctivationFieldNumber = 2;
  inline ::google::protobuf::int32 m_sctivation() const;
  inline void set_m_sctivation(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.E_EquipSuitAttributeDesc)
 private:
  inline void set_has_m_value();
  inline void clear_has_m_value();
  inline void set_has_m_sctivation();
  inline void clear_has_m_sctivation();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* m_value_;
  ::google::protobuf::int32 m_sctivation_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fEquip_2eproto();
  friend void protobuf_AssignDesc_E_5fEquip_2eproto();
  friend void protobuf_ShutdownFile_E_5fEquip_2eproto();

  void InitAsDefaultInstance();
  static E_EquipSuitAttributeDesc* default_instance_;
};
// -------------------------------------------------------------------

class E_EquipSuit : public ::google::protobuf::Message {
 public:
  E_EquipSuit();
  virtual ~E_EquipSuit();

  E_EquipSuit(const E_EquipSuit& from);

  inline E_EquipSuit& operator=(const E_EquipSuit& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_EquipSuit& default_instance();

  void Swap(E_EquipSuit* other);

  // implements Message ----------------------------------------------

  E_EquipSuit* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_EquipSuit& from);
  void MergeFrom(const E_EquipSuit& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 m_id = 1;
  inline bool has_m_id() const;
  inline void clear_m_id();
  static const int kMIdFieldNumber = 1;
  inline ::google::protobuf::int64 m_id() const;
  inline void set_m_id(::google::protobuf::int64 value);

  // optional int32 m_type = 2;
  inline bool has_m_type() const;
  inline void clear_m_type();
  static const int kMTypeFieldNumber = 2;
  inline ::google::protobuf::int32 m_type() const;
  inline void set_m_type(::google::protobuf::int32 value);

  // optional int32 m_suitLv = 3;
  inline bool has_m_suitlv() const;
  inline void clear_m_suitlv();
  static const int kMSuitLvFieldNumber = 3;
  inline ::google::protobuf::int32 m_suitlv() const;
  inline void set_m_suitlv(::google::protobuf::int32 value);

  // optional int32 m_wearQuality = 4;
  inline bool has_m_wearquality() const;
  inline void clear_m_wearquality();
  static const int kMWearQualityFieldNumber = 4;
  inline ::google::protobuf::int32 m_wearquality() const;
  inline void set_m_wearquality(::google::protobuf::int32 value);

  // optional int32 m_colour = 5;
  inline bool has_m_colour() const;
  inline void clear_m_colour();
  static const int kMColourFieldNumber = 5;
  inline ::google::protobuf::int32 m_colour() const;
  inline void set_m_colour(::google::protobuf::int32 value);

  // optional string m_afterName = 6;
  inline bool has_m_aftername() const;
  inline void clear_m_aftername();
  static const int kMAfterNameFieldNumber = 6;
  inline const ::std::string& m_aftername() const;
  inline void set_m_aftername(const ::std::string& value);
  inline void set_m_aftername(const char* value);
  inline void set_m_aftername(const char* value, size_t size);
  inline ::std::string* mutable_m_aftername();
  inline ::std::string* release_m_aftername();
  inline void set_allocated_m_aftername(::std::string* m_aftername);

  // optional int32 m_suiteValue = 7;
  inline bool has_m_suitevalue() const;
  inline void clear_m_suitevalue();
  static const int kMSuiteValueFieldNumber = 7;
  inline ::google::protobuf::int32 m_suitevalue() const;
  inline void set_m_suitevalue(::google::protobuf::int32 value);

  // repeated .proto_ff.E_EquipSuitAttributeDesc m_attribute = 8;
  inline int m_attribute_size() const;
  inline void clear_m_attribute();
  static const int kMAttributeFieldNumber = 8;
  inline const ::proto_ff::E_EquipSuitAttributeDesc& m_attribute(int index) const;
  inline ::proto_ff::E_EquipSuitAttributeDesc* mutable_m_attribute(int index);
  inline ::proto_ff::E_EquipSuitAttributeDesc* add_m_attribute();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipSuitAttributeDesc >&
      m_attribute() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipSuitAttributeDesc >*
      mutable_m_attribute();

  // repeated string m_malePosition = 9;
  inline int m_maleposition_size() const;
  inline void clear_m_maleposition();
  static const int kMMalePositionFieldNumber = 9;
  inline const ::std::string& m_maleposition(int index) const;
  inline ::std::string* mutable_m_maleposition(int index);
  inline void set_m_maleposition(int index, const ::std::string& value);
  inline void set_m_maleposition(int index, const char* value);
  inline void set_m_maleposition(int index, const char* value, size_t size);
  inline ::std::string* add_m_maleposition();
  inline void add_m_maleposition(const ::std::string& value);
  inline void add_m_maleposition(const char* value);
  inline void add_m_maleposition(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& m_maleposition() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_m_maleposition();

  // repeated string m_femalePosition = 10;
  inline int m_femaleposition_size() const;
  inline void clear_m_femaleposition();
  static const int kMFemalePositionFieldNumber = 10;
  inline const ::std::string& m_femaleposition(int index) const;
  inline ::std::string* mutable_m_femaleposition(int index);
  inline void set_m_femaleposition(int index, const ::std::string& value);
  inline void set_m_femaleposition(int index, const char* value);
  inline void set_m_femaleposition(int index, const char* value, size_t size);
  inline ::std::string* add_m_femaleposition();
  inline void add_m_femaleposition(const ::std::string& value);
  inline void add_m_femaleposition(const char* value);
  inline void add_m_femaleposition(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& m_femaleposition() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_m_femaleposition();

  // @@protoc_insertion_point(class_scope:proto_ff.E_EquipSuit)
 private:
  inline void set_has_m_id();
  inline void clear_has_m_id();
  inline void set_has_m_type();
  inline void clear_has_m_type();
  inline void set_has_m_suitlv();
  inline void clear_has_m_suitlv();
  inline void set_has_m_wearquality();
  inline void clear_has_m_wearquality();
  inline void set_has_m_colour();
  inline void clear_has_m_colour();
  inline void set_has_m_aftername();
  inline void clear_has_m_aftername();
  inline void set_has_m_suitevalue();
  inline void clear_has_m_suitevalue();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 m_id_;
  ::google::protobuf::int32 m_type_;
  ::google::protobuf::int32 m_suitlv_;
  ::google::protobuf::int32 m_wearquality_;
  ::google::protobuf::int32 m_colour_;
  ::std::string* m_aftername_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipSuitAttributeDesc > m_attribute_;
  ::google::protobuf::RepeatedPtrField< ::std::string> m_maleposition_;
  ::google::protobuf::RepeatedPtrField< ::std::string> m_femaleposition_;
  ::google::protobuf::int32 m_suitevalue_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(10 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fEquip_2eproto();
  friend void protobuf_AssignDesc_E_5fEquip_2eproto();
  friend void protobuf_ShutdownFile_E_5fEquip_2eproto();

  void InitAsDefaultInstance();
  static E_EquipSuit* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_EquipSuit : public ::google::protobuf::Message {
 public:
  Sheet_EquipSuit();
  virtual ~Sheet_EquipSuit();

  Sheet_EquipSuit(const Sheet_EquipSuit& from);

  inline Sheet_EquipSuit& operator=(const Sheet_EquipSuit& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_EquipSuit& default_instance();

  void Swap(Sheet_EquipSuit* other);

  // implements Message ----------------------------------------------

  Sheet_EquipSuit* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_EquipSuit& from);
  void MergeFrom(const Sheet_EquipSuit& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.E_EquipSuit E_EquipSuit_List = 1;
  inline int e_equipsuit_list_size() const;
  inline void clear_e_equipsuit_list();
  static const int kEEquipSuitListFieldNumber = 1;
  inline const ::proto_ff::E_EquipSuit& e_equipsuit_list(int index) const;
  inline ::proto_ff::E_EquipSuit* mutable_e_equipsuit_list(int index);
  inline ::proto_ff::E_EquipSuit* add_e_equipsuit_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipSuit >&
      e_equipsuit_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipSuit >*
      mutable_e_equipsuit_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_EquipSuit)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipSuit > e_equipsuit_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fEquip_2eproto();
  friend void protobuf_AssignDesc_E_5fEquip_2eproto();
  friend void protobuf_ShutdownFile_E_5fEquip_2eproto();

  void InitAsDefaultInstance();
  static Sheet_EquipSuit* default_instance_;
};
// -------------------------------------------------------------------

class E_EquipBreakBreakDesc : public ::google::protobuf::Message {
 public:
  E_EquipBreakBreakDesc();
  virtual ~E_EquipBreakBreakDesc();

  E_EquipBreakBreakDesc(const E_EquipBreakBreakDesc& from);

  inline E_EquipBreakBreakDesc& operator=(const E_EquipBreakBreakDesc& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_EquipBreakBreakDesc& default_instance();

  void Swap(E_EquipBreakBreakDesc* other);

  // implements Message ----------------------------------------------

  E_EquipBreakBreakDesc* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_EquipBreakBreakDesc& from);
  void MergeFrom(const E_EquipBreakBreakDesc& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 m_Num = 1;
  inline bool has_m_num() const;
  inline void clear_m_num();
  static const int kMNumFieldNumber = 1;
  inline ::google::protobuf::int32 m_num() const;
  inline void set_m_num(::google::protobuf::int32 value);

  // optional int32 m_Item = 2;
  inline bool has_m_item() const;
  inline void clear_m_item();
  static const int kMItemFieldNumber = 2;
  inline ::google::protobuf::int32 m_item() const;
  inline void set_m_item(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.E_EquipBreakBreakDesc)
 private:
  inline void set_has_m_num();
  inline void clear_has_m_num();
  inline void set_has_m_item();
  inline void clear_has_m_item();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_num_;
  ::google::protobuf::int32 m_item_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fEquip_2eproto();
  friend void protobuf_AssignDesc_E_5fEquip_2eproto();
  friend void protobuf_ShutdownFile_E_5fEquip_2eproto();

  void InitAsDefaultInstance();
  static E_EquipBreakBreakDesc* default_instance_;
};
// -------------------------------------------------------------------

class E_EquipBreak : public ::google::protobuf::Message {
 public:
  E_EquipBreak();
  virtual ~E_EquipBreak();

  E_EquipBreak(const E_EquipBreak& from);

  inline E_EquipBreak& operator=(const E_EquipBreak& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_EquipBreak& default_instance();

  void Swap(E_EquipBreak* other);

  // implements Message ----------------------------------------------

  E_EquipBreak* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_EquipBreak& from);
  void MergeFrom(const E_EquipBreak& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 m_Lv = 1;
  inline bool has_m_lv() const;
  inline void clear_m_lv();
  static const int kMLvFieldNumber = 1;
  inline ::google::protobuf::int32 m_lv() const;
  inline void set_m_lv(::google::protobuf::int32 value);

  // optional int32 m_step = 2;
  inline bool has_m_step() const;
  inline void clear_m_step();
  static const int kMStepFieldNumber = 2;
  inline ::google::protobuf::int32 m_step() const;
  inline void set_m_step(::google::protobuf::int32 value);

  // optional string m_positionType = 3;
  inline bool has_m_positiontype() const;
  inline void clear_m_positiontype();
  static const int kMPositionTypeFieldNumber = 3;
  inline const ::std::string& m_positiontype() const;
  inline void set_m_positiontype(const ::std::string& value);
  inline void set_m_positiontype(const char* value);
  inline void set_m_positiontype(const char* value, size_t size);
  inline ::std::string* mutable_m_positiontype();
  inline ::std::string* release_m_positiontype();
  inline void set_allocated_m_positiontype(::std::string* m_positiontype);

  // optional int32 m_basic = 4;
  inline bool has_m_basic() const;
  inline void clear_m_basic();
  static const int kMBasicFieldNumber = 4;
  inline ::google::protobuf::int32 m_basic() const;
  inline void set_m_basic(::google::protobuf::int32 value);

  // optional int32 m_star = 5;
  inline bool has_m_star() const;
  inline void clear_m_star();
  static const int kMStarFieldNumber = 5;
  inline ::google::protobuf::int32 m_star() const;
  inline void set_m_star(::google::protobuf::int32 value);

  // repeated .proto_ff.E_EquipBreakBreakDesc m_break = 6;
  inline int m_break_size() const;
  inline void clear_m_break();
  static const int kMBreakFieldNumber = 6;
  inline const ::proto_ff::E_EquipBreakBreakDesc& m_break(int index) const;
  inline ::proto_ff::E_EquipBreakBreakDesc* mutable_m_break(int index);
  inline ::proto_ff::E_EquipBreakBreakDesc* add_m_break();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipBreakBreakDesc >&
      m_break() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipBreakBreakDesc >*
      mutable_m_break();

  // @@protoc_insertion_point(class_scope:proto_ff.E_EquipBreak)
 private:
  inline void set_has_m_lv();
  inline void clear_has_m_lv();
  inline void set_has_m_step();
  inline void clear_has_m_step();
  inline void set_has_m_positiontype();
  inline void clear_has_m_positiontype();
  inline void set_has_m_basic();
  inline void clear_has_m_basic();
  inline void set_has_m_star();
  inline void clear_has_m_star();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_lv_;
  ::google::protobuf::int32 m_step_;
  ::std::string* m_positiontype_;
  ::google::protobuf::int32 m_basic_;
  ::google::protobuf::int32 m_star_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipBreakBreakDesc > m_break_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fEquip_2eproto();
  friend void protobuf_AssignDesc_E_5fEquip_2eproto();
  friend void protobuf_ShutdownFile_E_5fEquip_2eproto();

  void InitAsDefaultInstance();
  static E_EquipBreak* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_EquipBreak : public ::google::protobuf::Message {
 public:
  Sheet_EquipBreak();
  virtual ~Sheet_EquipBreak();

  Sheet_EquipBreak(const Sheet_EquipBreak& from);

  inline Sheet_EquipBreak& operator=(const Sheet_EquipBreak& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_EquipBreak& default_instance();

  void Swap(Sheet_EquipBreak* other);

  // implements Message ----------------------------------------------

  Sheet_EquipBreak* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_EquipBreak& from);
  void MergeFrom(const Sheet_EquipBreak& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.E_EquipBreak E_EquipBreak_List = 1;
  inline int e_equipbreak_list_size() const;
  inline void clear_e_equipbreak_list();
  static const int kEEquipBreakListFieldNumber = 1;
  inline const ::proto_ff::E_EquipBreak& e_equipbreak_list(int index) const;
  inline ::proto_ff::E_EquipBreak* mutable_e_equipbreak_list(int index);
  inline ::proto_ff::E_EquipBreak* add_e_equipbreak_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipBreak >&
      e_equipbreak_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipBreak >*
      mutable_e_equipbreak_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_EquipBreak)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipBreak > e_equipbreak_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fEquip_2eproto();
  friend void protobuf_AssignDesc_E_5fEquip_2eproto();
  friend void protobuf_ShutdownFile_E_5fEquip_2eproto();

  void InitAsDefaultInstance();
  static Sheet_EquipBreak* default_instance_;
};
// ===================================================================


// ===================================================================

// E_EquipEquip

// optional int64 m_id = 1;
inline bool E_EquipEquip::has_m_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_EquipEquip::set_has_m_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_EquipEquip::clear_has_m_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_EquipEquip::clear_m_id() {
  m_id_ = GOOGLE_LONGLONG(0);
  clear_has_m_id();
}
inline ::google::protobuf::int64 E_EquipEquip::m_id() const {
  return m_id_;
}
inline void E_EquipEquip::set_m_id(::google::protobuf::int64 value) {
  set_has_m_id();
  m_id_ = value;
}

// optional string m_name = 2;
inline bool E_EquipEquip::has_m_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_EquipEquip::set_has_m_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_EquipEquip::clear_has_m_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_EquipEquip::clear_m_name() {
  if (m_name_ != &::google::protobuf::internal::kEmptyString) {
    m_name_->clear();
  }
  clear_has_m_name();
}
inline const ::std::string& E_EquipEquip::m_name() const {
  return *m_name_;
}
inline void E_EquipEquip::set_m_name(const ::std::string& value) {
  set_has_m_name();
  if (m_name_ == &::google::protobuf::internal::kEmptyString) {
    m_name_ = new ::std::string;
  }
  m_name_->assign(value);
}
inline void E_EquipEquip::set_m_name(const char* value) {
  set_has_m_name();
  if (m_name_ == &::google::protobuf::internal::kEmptyString) {
    m_name_ = new ::std::string;
  }
  m_name_->assign(value);
}
inline void E_EquipEquip::set_m_name(const char* value, size_t size) {
  set_has_m_name();
  if (m_name_ == &::google::protobuf::internal::kEmptyString) {
    m_name_ = new ::std::string;
  }
  m_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* E_EquipEquip::mutable_m_name() {
  set_has_m_name();
  if (m_name_ == &::google::protobuf::internal::kEmptyString) {
    m_name_ = new ::std::string;
  }
  return m_name_;
}
inline ::std::string* E_EquipEquip::release_m_name() {
  clear_has_m_name();
  if (m_name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = m_name_;
    m_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void E_EquipEquip::set_allocated_m_name(::std::string* m_name) {
  if (m_name_ != &::google::protobuf::internal::kEmptyString) {
    delete m_name_;
  }
  if (m_name) {
    set_has_m_name();
    m_name_ = m_name;
  } else {
    clear_has_m_name();
    m_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 m_type = 3;
inline bool E_EquipEquip::has_m_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void E_EquipEquip::set_has_m_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void E_EquipEquip::clear_has_m_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void E_EquipEquip::clear_m_type() {
  m_type_ = 0;
  clear_has_m_type();
}
inline ::google::protobuf::int32 E_EquipEquip::m_type() const {
  return m_type_;
}
inline void E_EquipEquip::set_m_type(::google::protobuf::int32 value) {
  set_has_m_type();
  m_type_ = value;
}

// optional int32 m_wearQuality = 4;
inline bool E_EquipEquip::has_m_wearquality() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void E_EquipEquip::set_has_m_wearquality() {
  _has_bits_[0] |= 0x00000008u;
}
inline void E_EquipEquip::clear_has_m_wearquality() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void E_EquipEquip::clear_m_wearquality() {
  m_wearquality_ = 0;
  clear_has_m_wearquality();
}
inline ::google::protobuf::int32 E_EquipEquip::m_wearquality() const {
  return m_wearquality_;
}
inline void E_EquipEquip::set_m_wearquality(::google::protobuf::int32 value) {
  set_has_m_wearquality();
  m_wearquality_ = value;
}

// optional int32 m_position = 5;
inline bool E_EquipEquip::has_m_position() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void E_EquipEquip::set_has_m_position() {
  _has_bits_[0] |= 0x00000010u;
}
inline void E_EquipEquip::clear_has_m_position() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void E_EquipEquip::clear_m_position() {
  m_position_ = 0;
  clear_has_m_position();
}
inline ::google::protobuf::int32 E_EquipEquip::m_position() const {
  return m_position_;
}
inline void E_EquipEquip::set_m_position(::google::protobuf::int32 value) {
  set_has_m_position();
  m_position_ = value;
}

// optional string m_profession = 6;
inline bool E_EquipEquip::has_m_profession() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void E_EquipEquip::set_has_m_profession() {
  _has_bits_[0] |= 0x00000020u;
}
inline void E_EquipEquip::clear_has_m_profession() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void E_EquipEquip::clear_m_profession() {
  if (m_profession_ != &::google::protobuf::internal::kEmptyString) {
    m_profession_->clear();
  }
  clear_has_m_profession();
}
inline const ::std::string& E_EquipEquip::m_profession() const {
  return *m_profession_;
}
inline void E_EquipEquip::set_m_profession(const ::std::string& value) {
  set_has_m_profession();
  if (m_profession_ == &::google::protobuf::internal::kEmptyString) {
    m_profession_ = new ::std::string;
  }
  m_profession_->assign(value);
}
inline void E_EquipEquip::set_m_profession(const char* value) {
  set_has_m_profession();
  if (m_profession_ == &::google::protobuf::internal::kEmptyString) {
    m_profession_ = new ::std::string;
  }
  m_profession_->assign(value);
}
inline void E_EquipEquip::set_m_profession(const char* value, size_t size) {
  set_has_m_profession();
  if (m_profession_ == &::google::protobuf::internal::kEmptyString) {
    m_profession_ = new ::std::string;
  }
  m_profession_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* E_EquipEquip::mutable_m_profession() {
  set_has_m_profession();
  if (m_profession_ == &::google::protobuf::internal::kEmptyString) {
    m_profession_ = new ::std::string;
  }
  return m_profession_;
}
inline ::std::string* E_EquipEquip::release_m_profession() {
  clear_has_m_profession();
  if (m_profession_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = m_profession_;
    m_profession_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void E_EquipEquip::set_allocated_m_profession(::std::string* m_profession) {
  if (m_profession_ != &::google::protobuf::internal::kEmptyString) {
    delete m_profession_;
  }
  if (m_profession) {
    set_has_m_profession();
    m_profession_ = m_profession;
  } else {
    clear_has_m_profession();
    m_profession_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 m_professionLv = 7;
inline bool E_EquipEquip::has_m_professionlv() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void E_EquipEquip::set_has_m_professionlv() {
  _has_bits_[0] |= 0x00000040u;
}
inline void E_EquipEquip::clear_has_m_professionlv() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void E_EquipEquip::clear_m_professionlv() {
  m_professionlv_ = 0;
  clear_has_m_professionlv();
}
inline ::google::protobuf::int32 E_EquipEquip::m_professionlv() const {
  return m_professionlv_;
}
inline void E_EquipEquip::set_m_professionlv(::google::protobuf::int32 value) {
  set_has_m_professionlv();
  m_professionlv_ = value;
}

// optional int32 m_level = 8;
inline bool E_EquipEquip::has_m_level() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void E_EquipEquip::set_has_m_level() {
  _has_bits_[0] |= 0x00000080u;
}
inline void E_EquipEquip::clear_has_m_level() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void E_EquipEquip::clear_m_level() {
  m_level_ = 0;
  clear_has_m_level();
}
inline ::google::protobuf::int32 E_EquipEquip::m_level() const {
  return m_level_;
}
inline void E_EquipEquip::set_m_level(::google::protobuf::int32 value) {
  set_has_m_level();
  m_level_ = value;
}

// optional int32 m_quality = 9;
inline bool E_EquipEquip::has_m_quality() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void E_EquipEquip::set_has_m_quality() {
  _has_bits_[0] |= 0x00000100u;
}
inline void E_EquipEquip::clear_has_m_quality() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void E_EquipEquip::clear_m_quality() {
  m_quality_ = 0;
  clear_has_m_quality();
}
inline ::google::protobuf::int32 E_EquipEquip::m_quality() const {
  return m_quality_;
}
inline void E_EquipEquip::set_m_quality(::google::protobuf::int32 value) {
  set_has_m_quality();
  m_quality_ = value;
}

// optional int32 m_attributeID = 10;
inline bool E_EquipEquip::has_m_attributeid() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void E_EquipEquip::set_has_m_attributeid() {
  _has_bits_[0] |= 0x00000200u;
}
inline void E_EquipEquip::clear_has_m_attributeid() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void E_EquipEquip::clear_m_attributeid() {
  m_attributeid_ = 0;
  clear_has_m_attributeid();
}
inline ::google::protobuf::int32 E_EquipEquip::m_attributeid() const {
  return m_attributeid_;
}
inline void E_EquipEquip::set_m_attributeid(::google::protobuf::int32 value) {
  set_has_m_attributeid();
  m_attributeid_ = value;
}

// optional int32 m_star = 11;
inline bool E_EquipEquip::has_m_star() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void E_EquipEquip::set_has_m_star() {
  _has_bits_[0] |= 0x00000400u;
}
inline void E_EquipEquip::clear_has_m_star() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void E_EquipEquip::clear_m_star() {
  m_star_ = 0;
  clear_has_m_star();
}
inline ::google::protobuf::int32 E_EquipEquip::m_star() const {
  return m_star_;
}
inline void E_EquipEquip::set_m_star(::google::protobuf::int32 value) {
  set_has_m_star();
  m_star_ = value;
}

// optional int32 m_notCompose = 12;
inline bool E_EquipEquip::has_m_notcompose() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void E_EquipEquip::set_has_m_notcompose() {
  _has_bits_[0] |= 0x00000800u;
}
inline void E_EquipEquip::clear_has_m_notcompose() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void E_EquipEquip::clear_m_notcompose() {
  m_notcompose_ = 0;
  clear_has_m_notcompose();
}
inline ::google::protobuf::int32 E_EquipEquip::m_notcompose() const {
  return m_notcompose_;
}
inline void E_EquipEquip::set_m_notcompose(::google::protobuf::int32 value) {
  set_has_m_notcompose();
  m_notcompose_ = value;
}

// optional int32 m_isCanbind = 13;
inline bool E_EquipEquip::has_m_iscanbind() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void E_EquipEquip::set_has_m_iscanbind() {
  _has_bits_[0] |= 0x00001000u;
}
inline void E_EquipEquip::clear_has_m_iscanbind() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void E_EquipEquip::clear_m_iscanbind() {
  m_iscanbind_ = 0;
  clear_has_m_iscanbind();
}
inline ::google::protobuf::int32 E_EquipEquip::m_iscanbind() const {
  return m_iscanbind_;
}
inline void E_EquipEquip::set_m_iscanbind(::google::protobuf::int32 value) {
  set_has_m_iscanbind();
  m_iscanbind_ = value;
}

// optional int32 m_isTradeBind = 14;
inline bool E_EquipEquip::has_m_istradebind() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void E_EquipEquip::set_has_m_istradebind() {
  _has_bits_[0] |= 0x00002000u;
}
inline void E_EquipEquip::clear_has_m_istradebind() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void E_EquipEquip::clear_m_istradebind() {
  m_istradebind_ = 0;
  clear_has_m_istradebind();
}
inline ::google::protobuf::int32 E_EquipEquip::m_istradebind() const {
  return m_istradebind_;
}
inline void E_EquipEquip::set_m_istradebind(::google::protobuf::int32 value) {
  set_has_m_istradebind();
  m_istradebind_ = value;
}

// optional int32 m_sellPrice = 15;
inline bool E_EquipEquip::has_m_sellprice() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void E_EquipEquip::set_has_m_sellprice() {
  _has_bits_[0] |= 0x00004000u;
}
inline void E_EquipEquip::clear_has_m_sellprice() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void E_EquipEquip::clear_m_sellprice() {
  m_sellprice_ = 0;
  clear_has_m_sellprice();
}
inline ::google::protobuf::int32 E_EquipEquip::m_sellprice() const {
  return m_sellprice_;
}
inline void E_EquipEquip::set_m_sellprice(::google::protobuf::int32 value) {
  set_has_m_sellprice();
  m_sellprice_ = value;
}

// optional string m_icon = 16;
inline bool E_EquipEquip::has_m_icon() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void E_EquipEquip::set_has_m_icon() {
  _has_bits_[0] |= 0x00008000u;
}
inline void E_EquipEquip::clear_has_m_icon() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void E_EquipEquip::clear_m_icon() {
  if (m_icon_ != &::google::protobuf::internal::kEmptyString) {
    m_icon_->clear();
  }
  clear_has_m_icon();
}
inline const ::std::string& E_EquipEquip::m_icon() const {
  return *m_icon_;
}
inline void E_EquipEquip::set_m_icon(const ::std::string& value) {
  set_has_m_icon();
  if (m_icon_ == &::google::protobuf::internal::kEmptyString) {
    m_icon_ = new ::std::string;
  }
  m_icon_->assign(value);
}
inline void E_EquipEquip::set_m_icon(const char* value) {
  set_has_m_icon();
  if (m_icon_ == &::google::protobuf::internal::kEmptyString) {
    m_icon_ = new ::std::string;
  }
  m_icon_->assign(value);
}
inline void E_EquipEquip::set_m_icon(const char* value, size_t size) {
  set_has_m_icon();
  if (m_icon_ == &::google::protobuf::internal::kEmptyString) {
    m_icon_ = new ::std::string;
  }
  m_icon_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* E_EquipEquip::mutable_m_icon() {
  set_has_m_icon();
  if (m_icon_ == &::google::protobuf::internal::kEmptyString) {
    m_icon_ = new ::std::string;
  }
  return m_icon_;
}
inline ::std::string* E_EquipEquip::release_m_icon() {
  clear_has_m_icon();
  if (m_icon_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = m_icon_;
    m_icon_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void E_EquipEquip::set_allocated_m_icon(::std::string* m_icon) {
  if (m_icon_ != &::google::protobuf::internal::kEmptyString) {
    delete m_icon_;
  }
  if (m_icon) {
    set_has_m_icon();
    m_icon_ = m_icon;
  } else {
    clear_has_m_icon();
    m_icon_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 m_time = 17;
inline bool E_EquipEquip::has_m_time() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void E_EquipEquip::set_has_m_time() {
  _has_bits_[0] |= 0x00010000u;
}
inline void E_EquipEquip::clear_has_m_time() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void E_EquipEquip::clear_m_time() {
  m_time_ = 0;
  clear_has_m_time();
}
inline ::google::protobuf::int32 E_EquipEquip::m_time() const {
  return m_time_;
}
inline void E_EquipEquip::set_m_time(::google::protobuf::int32 value) {
  set_has_m_time();
  m_time_ = value;
}

// optional int32 m_broadcast = 18;
inline bool E_EquipEquip::has_m_broadcast() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void E_EquipEquip::set_has_m_broadcast() {
  _has_bits_[0] |= 0x00020000u;
}
inline void E_EquipEquip::clear_has_m_broadcast() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void E_EquipEquip::clear_m_broadcast() {
  m_broadcast_ = 0;
  clear_has_m_broadcast();
}
inline ::google::protobuf::int32 E_EquipEquip::m_broadcast() const {
  return m_broadcast_;
}
inline void E_EquipEquip::set_m_broadcast(::google::protobuf::int32 value) {
  set_has_m_broadcast();
  m_broadcast_ = value;
}

// optional string m_meltingResult = 19;
inline bool E_EquipEquip::has_m_meltingresult() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void E_EquipEquip::set_has_m_meltingresult() {
  _has_bits_[0] |= 0x00040000u;
}
inline void E_EquipEquip::clear_has_m_meltingresult() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void E_EquipEquip::clear_m_meltingresult() {
  if (m_meltingresult_ != &::google::protobuf::internal::kEmptyString) {
    m_meltingresult_->clear();
  }
  clear_has_m_meltingresult();
}
inline const ::std::string& E_EquipEquip::m_meltingresult() const {
  return *m_meltingresult_;
}
inline void E_EquipEquip::set_m_meltingresult(const ::std::string& value) {
  set_has_m_meltingresult();
  if (m_meltingresult_ == &::google::protobuf::internal::kEmptyString) {
    m_meltingresult_ = new ::std::string;
  }
  m_meltingresult_->assign(value);
}
inline void E_EquipEquip::set_m_meltingresult(const char* value) {
  set_has_m_meltingresult();
  if (m_meltingresult_ == &::google::protobuf::internal::kEmptyString) {
    m_meltingresult_ = new ::std::string;
  }
  m_meltingresult_->assign(value);
}
inline void E_EquipEquip::set_m_meltingresult(const char* value, size_t size) {
  set_has_m_meltingresult();
  if (m_meltingresult_ == &::google::protobuf::internal::kEmptyString) {
    m_meltingresult_ = new ::std::string;
  }
  m_meltingresult_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* E_EquipEquip::mutable_m_meltingresult() {
  set_has_m_meltingresult();
  if (m_meltingresult_ == &::google::protobuf::internal::kEmptyString) {
    m_meltingresult_ = new ::std::string;
  }
  return m_meltingresult_;
}
inline ::std::string* E_EquipEquip::release_m_meltingresult() {
  clear_has_m_meltingresult();
  if (m_meltingresult_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = m_meltingresult_;
    m_meltingresult_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void E_EquipEquip::set_allocated_m_meltingresult(::std::string* m_meltingresult) {
  if (m_meltingresult_ != &::google::protobuf::internal::kEmptyString) {
    delete m_meltingresult_;
  }
  if (m_meltingresult) {
    set_has_m_meltingresult();
    m_meltingresult_ = m_meltingresult;
  } else {
    clear_has_m_meltingresult();
    m_meltingresult_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string m_skillId = 20;
inline bool E_EquipEquip::has_m_skillid() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void E_EquipEquip::set_has_m_skillid() {
  _has_bits_[0] |= 0x00080000u;
}
inline void E_EquipEquip::clear_has_m_skillid() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void E_EquipEquip::clear_m_skillid() {
  if (m_skillid_ != &::google::protobuf::internal::kEmptyString) {
    m_skillid_->clear();
  }
  clear_has_m_skillid();
}
inline const ::std::string& E_EquipEquip::m_skillid() const {
  return *m_skillid_;
}
inline void E_EquipEquip::set_m_skillid(const ::std::string& value) {
  set_has_m_skillid();
  if (m_skillid_ == &::google::protobuf::internal::kEmptyString) {
    m_skillid_ = new ::std::string;
  }
  m_skillid_->assign(value);
}
inline void E_EquipEquip::set_m_skillid(const char* value) {
  set_has_m_skillid();
  if (m_skillid_ == &::google::protobuf::internal::kEmptyString) {
    m_skillid_ = new ::std::string;
  }
  m_skillid_->assign(value);
}
inline void E_EquipEquip::set_m_skillid(const char* value, size_t size) {
  set_has_m_skillid();
  if (m_skillid_ == &::google::protobuf::internal::kEmptyString) {
    m_skillid_ = new ::std::string;
  }
  m_skillid_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* E_EquipEquip::mutable_m_skillid() {
  set_has_m_skillid();
  if (m_skillid_ == &::google::protobuf::internal::kEmptyString) {
    m_skillid_ = new ::std::string;
  }
  return m_skillid_;
}
inline ::std::string* E_EquipEquip::release_m_skillid() {
  clear_has_m_skillid();
  if (m_skillid_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = m_skillid_;
    m_skillid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void E_EquipEquip::set_allocated_m_skillid(::std::string* m_skillid) {
  if (m_skillid_ != &::google::protobuf::internal::kEmptyString) {
    delete m_skillid_;
  }
  if (m_skillid) {
    set_has_m_skillid();
    m_skillid_ = m_skillid;
  } else {
    clear_has_m_skillid();
    m_skillid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 m_privilegeGroupId = 21;
inline bool E_EquipEquip::has_m_privilegegroupid() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void E_EquipEquip::set_has_m_privilegegroupid() {
  _has_bits_[0] |= 0x00100000u;
}
inline void E_EquipEquip::clear_has_m_privilegegroupid() {
  _has_bits_[0] &= ~0x00100000u;
}
inline void E_EquipEquip::clear_m_privilegegroupid() {
  m_privilegegroupid_ = 0;
  clear_has_m_privilegegroupid();
}
inline ::google::protobuf::int32 E_EquipEquip::m_privilegegroupid() const {
  return m_privilegegroupid_;
}
inline void E_EquipEquip::set_m_privilegegroupid(::google::protobuf::int32 value) {
  set_has_m_privilegegroupid();
  m_privilegegroupid_ = value;
}

// -------------------------------------------------------------------

// Sheet_EquipEquip

// repeated .proto_ff.E_EquipEquip E_EquipEquip_List = 1;
inline int Sheet_EquipEquip::e_equipequip_list_size() const {
  return e_equipequip_list_.size();
}
inline void Sheet_EquipEquip::clear_e_equipequip_list() {
  e_equipequip_list_.Clear();
}
inline const ::proto_ff::E_EquipEquip& Sheet_EquipEquip::e_equipequip_list(int index) const {
  return e_equipequip_list_.Get(index);
}
inline ::proto_ff::E_EquipEquip* Sheet_EquipEquip::mutable_e_equipequip_list(int index) {
  return e_equipequip_list_.Mutable(index);
}
inline ::proto_ff::E_EquipEquip* Sheet_EquipEquip::add_e_equipequip_list() {
  return e_equipequip_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipEquip >&
Sheet_EquipEquip::e_equipequip_list() const {
  return e_equipequip_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipEquip >*
Sheet_EquipEquip::mutable_e_equipequip_list() {
  return &e_equipequip_list_;
}

// -------------------------------------------------------------------

// E_EquipAttributeAttributeDesc

// optional int32 m_valueMax = 1;
inline bool E_EquipAttributeAttributeDesc::has_m_valuemax() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_EquipAttributeAttributeDesc::set_has_m_valuemax() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_EquipAttributeAttributeDesc::clear_has_m_valuemax() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_EquipAttributeAttributeDesc::clear_m_valuemax() {
  m_valuemax_ = 0;
  clear_has_m_valuemax();
}
inline ::google::protobuf::int32 E_EquipAttributeAttributeDesc::m_valuemax() const {
  return m_valuemax_;
}
inline void E_EquipAttributeAttributeDesc::set_m_valuemax(::google::protobuf::int32 value) {
  set_has_m_valuemax();
  m_valuemax_ = value;
}

// optional int32 m_valueMin = 2;
inline bool E_EquipAttributeAttributeDesc::has_m_valuemin() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_EquipAttributeAttributeDesc::set_has_m_valuemin() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_EquipAttributeAttributeDesc::clear_has_m_valuemin() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_EquipAttributeAttributeDesc::clear_m_valuemin() {
  m_valuemin_ = 0;
  clear_has_m_valuemin();
}
inline ::google::protobuf::int32 E_EquipAttributeAttributeDesc::m_valuemin() const {
  return m_valuemin_;
}
inline void E_EquipAttributeAttributeDesc::set_m_valuemin(::google::protobuf::int32 value) {
  set_has_m_valuemin();
  m_valuemin_ = value;
}

// optional int32 m_type = 3;
inline bool E_EquipAttributeAttributeDesc::has_m_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void E_EquipAttributeAttributeDesc::set_has_m_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void E_EquipAttributeAttributeDesc::clear_has_m_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void E_EquipAttributeAttributeDesc::clear_m_type() {
  m_type_ = 0;
  clear_has_m_type();
}
inline ::google::protobuf::int32 E_EquipAttributeAttributeDesc::m_type() const {
  return m_type_;
}
inline void E_EquipAttributeAttributeDesc::set_m_type(::google::protobuf::int32 value) {
  set_has_m_type();
  m_type_ = value;
}

// -------------------------------------------------------------------

// E_EquipAttribute

// optional int32 m_id = 1;
inline bool E_EquipAttribute::has_m_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_EquipAttribute::set_has_m_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_EquipAttribute::clear_has_m_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_EquipAttribute::clear_m_id() {
  m_id_ = 0;
  clear_has_m_id();
}
inline ::google::protobuf::int32 E_EquipAttribute::m_id() const {
  return m_id_;
}
inline void E_EquipAttribute::set_m_id(::google::protobuf::int32 value) {
  set_has_m_id();
  m_id_ = value;
}

// optional int32 m_blueStarNum = 2;
inline bool E_EquipAttribute::has_m_bluestarnum() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_EquipAttribute::set_has_m_bluestarnum() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_EquipAttribute::clear_has_m_bluestarnum() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_EquipAttribute::clear_m_bluestarnum() {
  m_bluestarnum_ = 0;
  clear_has_m_bluestarnum();
}
inline ::google::protobuf::int32 E_EquipAttribute::m_bluestarnum() const {
  return m_bluestarnum_;
}
inline void E_EquipAttribute::set_m_bluestarnum(::google::protobuf::int32 value) {
  set_has_m_bluestarnum();
  m_bluestarnum_ = value;
}

// optional string m_blueStar_type = 3;
inline bool E_EquipAttribute::has_m_bluestar_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void E_EquipAttribute::set_has_m_bluestar_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void E_EquipAttribute::clear_has_m_bluestar_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void E_EquipAttribute::clear_m_bluestar_type() {
  if (m_bluestar_type_ != &::google::protobuf::internal::kEmptyString) {
    m_bluestar_type_->clear();
  }
  clear_has_m_bluestar_type();
}
inline const ::std::string& E_EquipAttribute::m_bluestar_type() const {
  return *m_bluestar_type_;
}
inline void E_EquipAttribute::set_m_bluestar_type(const ::std::string& value) {
  set_has_m_bluestar_type();
  if (m_bluestar_type_ == &::google::protobuf::internal::kEmptyString) {
    m_bluestar_type_ = new ::std::string;
  }
  m_bluestar_type_->assign(value);
}
inline void E_EquipAttribute::set_m_bluestar_type(const char* value) {
  set_has_m_bluestar_type();
  if (m_bluestar_type_ == &::google::protobuf::internal::kEmptyString) {
    m_bluestar_type_ = new ::std::string;
  }
  m_bluestar_type_->assign(value);
}
inline void E_EquipAttribute::set_m_bluestar_type(const char* value, size_t size) {
  set_has_m_bluestar_type();
  if (m_bluestar_type_ == &::google::protobuf::internal::kEmptyString) {
    m_bluestar_type_ = new ::std::string;
  }
  m_bluestar_type_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* E_EquipAttribute::mutable_m_bluestar_type() {
  set_has_m_bluestar_type();
  if (m_bluestar_type_ == &::google::protobuf::internal::kEmptyString) {
    m_bluestar_type_ = new ::std::string;
  }
  return m_bluestar_type_;
}
inline ::std::string* E_EquipAttribute::release_m_bluestar_type() {
  clear_has_m_bluestar_type();
  if (m_bluestar_type_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = m_bluestar_type_;
    m_bluestar_type_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void E_EquipAttribute::set_allocated_m_bluestar_type(::std::string* m_bluestar_type) {
  if (m_bluestar_type_ != &::google::protobuf::internal::kEmptyString) {
    delete m_bluestar_type_;
  }
  if (m_bluestar_type) {
    set_has_m_bluestar_type();
    m_bluestar_type_ = m_bluestar_type;
  } else {
    clear_has_m_bluestar_type();
    m_bluestar_type_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string m_blueStar_lv = 4;
inline bool E_EquipAttribute::has_m_bluestar_lv() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void E_EquipAttribute::set_has_m_bluestar_lv() {
  _has_bits_[0] |= 0x00000008u;
}
inline void E_EquipAttribute::clear_has_m_bluestar_lv() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void E_EquipAttribute::clear_m_bluestar_lv() {
  if (m_bluestar_lv_ != &::google::protobuf::internal::kEmptyString) {
    m_bluestar_lv_->clear();
  }
  clear_has_m_bluestar_lv();
}
inline const ::std::string& E_EquipAttribute::m_bluestar_lv() const {
  return *m_bluestar_lv_;
}
inline void E_EquipAttribute::set_m_bluestar_lv(const ::std::string& value) {
  set_has_m_bluestar_lv();
  if (m_bluestar_lv_ == &::google::protobuf::internal::kEmptyString) {
    m_bluestar_lv_ = new ::std::string;
  }
  m_bluestar_lv_->assign(value);
}
inline void E_EquipAttribute::set_m_bluestar_lv(const char* value) {
  set_has_m_bluestar_lv();
  if (m_bluestar_lv_ == &::google::protobuf::internal::kEmptyString) {
    m_bluestar_lv_ = new ::std::string;
  }
  m_bluestar_lv_->assign(value);
}
inline void E_EquipAttribute::set_m_bluestar_lv(const char* value, size_t size) {
  set_has_m_bluestar_lv();
  if (m_bluestar_lv_ == &::google::protobuf::internal::kEmptyString) {
    m_bluestar_lv_ = new ::std::string;
  }
  m_bluestar_lv_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* E_EquipAttribute::mutable_m_bluestar_lv() {
  set_has_m_bluestar_lv();
  if (m_bluestar_lv_ == &::google::protobuf::internal::kEmptyString) {
    m_bluestar_lv_ = new ::std::string;
  }
  return m_bluestar_lv_;
}
inline ::std::string* E_EquipAttribute::release_m_bluestar_lv() {
  clear_has_m_bluestar_lv();
  if (m_bluestar_lv_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = m_bluestar_lv_;
    m_bluestar_lv_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void E_EquipAttribute::set_allocated_m_bluestar_lv(::std::string* m_bluestar_lv) {
  if (m_bluestar_lv_ != &::google::protobuf::internal::kEmptyString) {
    delete m_bluestar_lv_;
  }
  if (m_bluestar_lv) {
    set_has_m_bluestar_lv();
    m_bluestar_lv_ = m_bluestar_lv;
  } else {
    clear_has_m_bluestar_lv();
    m_bluestar_lv_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string m_blueStar_number = 5;
inline bool E_EquipAttribute::has_m_bluestar_number() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void E_EquipAttribute::set_has_m_bluestar_number() {
  _has_bits_[0] |= 0x00000010u;
}
inline void E_EquipAttribute::clear_has_m_bluestar_number() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void E_EquipAttribute::clear_m_bluestar_number() {
  if (m_bluestar_number_ != &::google::protobuf::internal::kEmptyString) {
    m_bluestar_number_->clear();
  }
  clear_has_m_bluestar_number();
}
inline const ::std::string& E_EquipAttribute::m_bluestar_number() const {
  return *m_bluestar_number_;
}
inline void E_EquipAttribute::set_m_bluestar_number(const ::std::string& value) {
  set_has_m_bluestar_number();
  if (m_bluestar_number_ == &::google::protobuf::internal::kEmptyString) {
    m_bluestar_number_ = new ::std::string;
  }
  m_bluestar_number_->assign(value);
}
inline void E_EquipAttribute::set_m_bluestar_number(const char* value) {
  set_has_m_bluestar_number();
  if (m_bluestar_number_ == &::google::protobuf::internal::kEmptyString) {
    m_bluestar_number_ = new ::std::string;
  }
  m_bluestar_number_->assign(value);
}
inline void E_EquipAttribute::set_m_bluestar_number(const char* value, size_t size) {
  set_has_m_bluestar_number();
  if (m_bluestar_number_ == &::google::protobuf::internal::kEmptyString) {
    m_bluestar_number_ = new ::std::string;
  }
  m_bluestar_number_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* E_EquipAttribute::mutable_m_bluestar_number() {
  set_has_m_bluestar_number();
  if (m_bluestar_number_ == &::google::protobuf::internal::kEmptyString) {
    m_bluestar_number_ = new ::std::string;
  }
  return m_bluestar_number_;
}
inline ::std::string* E_EquipAttribute::release_m_bluestar_number() {
  clear_has_m_bluestar_number();
  if (m_bluestar_number_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = m_bluestar_number_;
    m_bluestar_number_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void E_EquipAttribute::set_allocated_m_bluestar_number(::std::string* m_bluestar_number) {
  if (m_bluestar_number_ != &::google::protobuf::internal::kEmptyString) {
    delete m_bluestar_number_;
  }
  if (m_bluestar_number) {
    set_has_m_bluestar_number();
    m_bluestar_number_ = m_bluestar_number;
  } else {
    clear_has_m_bluestar_number();
    m_bluestar_number_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 m_specid = 6;
inline bool E_EquipAttribute::has_m_specid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void E_EquipAttribute::set_has_m_specid() {
  _has_bits_[0] |= 0x00000020u;
}
inline void E_EquipAttribute::clear_has_m_specid() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void E_EquipAttribute::clear_m_specid() {
  m_specid_ = 0;
  clear_has_m_specid();
}
inline ::google::protobuf::int32 E_EquipAttribute::m_specid() const {
  return m_specid_;
}
inline void E_EquipAttribute::set_m_specid(::google::protobuf::int32 value) {
  set_has_m_specid();
  m_specid_ = value;
}

// optional int32 m_specialAttributeDown = 7;
inline bool E_EquipAttribute::has_m_specialattributedown() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void E_EquipAttribute::set_has_m_specialattributedown() {
  _has_bits_[0] |= 0x00000040u;
}
inline void E_EquipAttribute::clear_has_m_specialattributedown() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void E_EquipAttribute::clear_m_specialattributedown() {
  m_specialattributedown_ = 0;
  clear_has_m_specialattributedown();
}
inline ::google::protobuf::int32 E_EquipAttribute::m_specialattributedown() const {
  return m_specialattributedown_;
}
inline void E_EquipAttribute::set_m_specialattributedown(::google::protobuf::int32 value) {
  set_has_m_specialattributedown();
  m_specialattributedown_ = value;
}

// optional int32 m_specialAttributeUp = 8;
inline bool E_EquipAttribute::has_m_specialattributeup() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void E_EquipAttribute::set_has_m_specialattributeup() {
  _has_bits_[0] |= 0x00000080u;
}
inline void E_EquipAttribute::clear_has_m_specialattributeup() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void E_EquipAttribute::clear_m_specialattributeup() {
  m_specialattributeup_ = 0;
  clear_has_m_specialattributeup();
}
inline ::google::protobuf::int32 E_EquipAttribute::m_specialattributeup() const {
  return m_specialattributeup_;
}
inline void E_EquipAttribute::set_m_specialattributeup(::google::protobuf::int32 value) {
  set_has_m_specialattributeup();
  m_specialattributeup_ = value;
}

// optional string m_specialAttribute_typeLibrary = 9;
inline bool E_EquipAttribute::has_m_specialattribute_typelibrary() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void E_EquipAttribute::set_has_m_specialattribute_typelibrary() {
  _has_bits_[0] |= 0x00000100u;
}
inline void E_EquipAttribute::clear_has_m_specialattribute_typelibrary() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void E_EquipAttribute::clear_m_specialattribute_typelibrary() {
  if (m_specialattribute_typelibrary_ != &::google::protobuf::internal::kEmptyString) {
    m_specialattribute_typelibrary_->clear();
  }
  clear_has_m_specialattribute_typelibrary();
}
inline const ::std::string& E_EquipAttribute::m_specialattribute_typelibrary() const {
  return *m_specialattribute_typelibrary_;
}
inline void E_EquipAttribute::set_m_specialattribute_typelibrary(const ::std::string& value) {
  set_has_m_specialattribute_typelibrary();
  if (m_specialattribute_typelibrary_ == &::google::protobuf::internal::kEmptyString) {
    m_specialattribute_typelibrary_ = new ::std::string;
  }
  m_specialattribute_typelibrary_->assign(value);
}
inline void E_EquipAttribute::set_m_specialattribute_typelibrary(const char* value) {
  set_has_m_specialattribute_typelibrary();
  if (m_specialattribute_typelibrary_ == &::google::protobuf::internal::kEmptyString) {
    m_specialattribute_typelibrary_ = new ::std::string;
  }
  m_specialattribute_typelibrary_->assign(value);
}
inline void E_EquipAttribute::set_m_specialattribute_typelibrary(const char* value, size_t size) {
  set_has_m_specialattribute_typelibrary();
  if (m_specialattribute_typelibrary_ == &::google::protobuf::internal::kEmptyString) {
    m_specialattribute_typelibrary_ = new ::std::string;
  }
  m_specialattribute_typelibrary_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* E_EquipAttribute::mutable_m_specialattribute_typelibrary() {
  set_has_m_specialattribute_typelibrary();
  if (m_specialattribute_typelibrary_ == &::google::protobuf::internal::kEmptyString) {
    m_specialattribute_typelibrary_ = new ::std::string;
  }
  return m_specialattribute_typelibrary_;
}
inline ::std::string* E_EquipAttribute::release_m_specialattribute_typelibrary() {
  clear_has_m_specialattribute_typelibrary();
  if (m_specialattribute_typelibrary_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = m_specialattribute_typelibrary_;
    m_specialattribute_typelibrary_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void E_EquipAttribute::set_allocated_m_specialattribute_typelibrary(::std::string* m_specialattribute_typelibrary) {
  if (m_specialattribute_typelibrary_ != &::google::protobuf::internal::kEmptyString) {
    delete m_specialattribute_typelibrary_;
  }
  if (m_specialattribute_typelibrary) {
    set_has_m_specialattribute_typelibrary();
    m_specialattribute_typelibrary_ = m_specialattribute_typelibrary;
  } else {
    clear_has_m_specialattribute_typelibrary();
    m_specialattribute_typelibrary_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string m_specialAttribute_valueMin = 10;
inline bool E_EquipAttribute::has_m_specialattribute_valuemin() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void E_EquipAttribute::set_has_m_specialattribute_valuemin() {
  _has_bits_[0] |= 0x00000200u;
}
inline void E_EquipAttribute::clear_has_m_specialattribute_valuemin() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void E_EquipAttribute::clear_m_specialattribute_valuemin() {
  if (m_specialattribute_valuemin_ != &::google::protobuf::internal::kEmptyString) {
    m_specialattribute_valuemin_->clear();
  }
  clear_has_m_specialattribute_valuemin();
}
inline const ::std::string& E_EquipAttribute::m_specialattribute_valuemin() const {
  return *m_specialattribute_valuemin_;
}
inline void E_EquipAttribute::set_m_specialattribute_valuemin(const ::std::string& value) {
  set_has_m_specialattribute_valuemin();
  if (m_specialattribute_valuemin_ == &::google::protobuf::internal::kEmptyString) {
    m_specialattribute_valuemin_ = new ::std::string;
  }
  m_specialattribute_valuemin_->assign(value);
}
inline void E_EquipAttribute::set_m_specialattribute_valuemin(const char* value) {
  set_has_m_specialattribute_valuemin();
  if (m_specialattribute_valuemin_ == &::google::protobuf::internal::kEmptyString) {
    m_specialattribute_valuemin_ = new ::std::string;
  }
  m_specialattribute_valuemin_->assign(value);
}
inline void E_EquipAttribute::set_m_specialattribute_valuemin(const char* value, size_t size) {
  set_has_m_specialattribute_valuemin();
  if (m_specialattribute_valuemin_ == &::google::protobuf::internal::kEmptyString) {
    m_specialattribute_valuemin_ = new ::std::string;
  }
  m_specialattribute_valuemin_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* E_EquipAttribute::mutable_m_specialattribute_valuemin() {
  set_has_m_specialattribute_valuemin();
  if (m_specialattribute_valuemin_ == &::google::protobuf::internal::kEmptyString) {
    m_specialattribute_valuemin_ = new ::std::string;
  }
  return m_specialattribute_valuemin_;
}
inline ::std::string* E_EquipAttribute::release_m_specialattribute_valuemin() {
  clear_has_m_specialattribute_valuemin();
  if (m_specialattribute_valuemin_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = m_specialattribute_valuemin_;
    m_specialattribute_valuemin_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void E_EquipAttribute::set_allocated_m_specialattribute_valuemin(::std::string* m_specialattribute_valuemin) {
  if (m_specialattribute_valuemin_ != &::google::protobuf::internal::kEmptyString) {
    delete m_specialattribute_valuemin_;
  }
  if (m_specialattribute_valuemin) {
    set_has_m_specialattribute_valuemin();
    m_specialattribute_valuemin_ = m_specialattribute_valuemin;
  } else {
    clear_has_m_specialattribute_valuemin();
    m_specialattribute_valuemin_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string m_specialAttribute_valueMax = 11;
inline bool E_EquipAttribute::has_m_specialattribute_valuemax() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void E_EquipAttribute::set_has_m_specialattribute_valuemax() {
  _has_bits_[0] |= 0x00000400u;
}
inline void E_EquipAttribute::clear_has_m_specialattribute_valuemax() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void E_EquipAttribute::clear_m_specialattribute_valuemax() {
  if (m_specialattribute_valuemax_ != &::google::protobuf::internal::kEmptyString) {
    m_specialattribute_valuemax_->clear();
  }
  clear_has_m_specialattribute_valuemax();
}
inline const ::std::string& E_EquipAttribute::m_specialattribute_valuemax() const {
  return *m_specialattribute_valuemax_;
}
inline void E_EquipAttribute::set_m_specialattribute_valuemax(const ::std::string& value) {
  set_has_m_specialattribute_valuemax();
  if (m_specialattribute_valuemax_ == &::google::protobuf::internal::kEmptyString) {
    m_specialattribute_valuemax_ = new ::std::string;
  }
  m_specialattribute_valuemax_->assign(value);
}
inline void E_EquipAttribute::set_m_specialattribute_valuemax(const char* value) {
  set_has_m_specialattribute_valuemax();
  if (m_specialattribute_valuemax_ == &::google::protobuf::internal::kEmptyString) {
    m_specialattribute_valuemax_ = new ::std::string;
  }
  m_specialattribute_valuemax_->assign(value);
}
inline void E_EquipAttribute::set_m_specialattribute_valuemax(const char* value, size_t size) {
  set_has_m_specialattribute_valuemax();
  if (m_specialattribute_valuemax_ == &::google::protobuf::internal::kEmptyString) {
    m_specialattribute_valuemax_ = new ::std::string;
  }
  m_specialattribute_valuemax_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* E_EquipAttribute::mutable_m_specialattribute_valuemax() {
  set_has_m_specialattribute_valuemax();
  if (m_specialattribute_valuemax_ == &::google::protobuf::internal::kEmptyString) {
    m_specialattribute_valuemax_ = new ::std::string;
  }
  return m_specialattribute_valuemax_;
}
inline ::std::string* E_EquipAttribute::release_m_specialattribute_valuemax() {
  clear_has_m_specialattribute_valuemax();
  if (m_specialattribute_valuemax_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = m_specialattribute_valuemax_;
    m_specialattribute_valuemax_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void E_EquipAttribute::set_allocated_m_specialattribute_valuemax(::std::string* m_specialattribute_valuemax) {
  if (m_specialattribute_valuemax_ != &::google::protobuf::internal::kEmptyString) {
    delete m_specialattribute_valuemax_;
  }
  if (m_specialattribute_valuemax) {
    set_has_m_specialattribute_valuemax();
    m_specialattribute_valuemax_ = m_specialattribute_valuemax;
  } else {
    clear_has_m_specialattribute_valuemax();
    m_specialattribute_valuemax_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string m_godAttribute_type = 12;
inline bool E_EquipAttribute::has_m_godattribute_type() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void E_EquipAttribute::set_has_m_godattribute_type() {
  _has_bits_[0] |= 0x00000800u;
}
inline void E_EquipAttribute::clear_has_m_godattribute_type() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void E_EquipAttribute::clear_m_godattribute_type() {
  if (m_godattribute_type_ != &::google::protobuf::internal::kEmptyString) {
    m_godattribute_type_->clear();
  }
  clear_has_m_godattribute_type();
}
inline const ::std::string& E_EquipAttribute::m_godattribute_type() const {
  return *m_godattribute_type_;
}
inline void E_EquipAttribute::set_m_godattribute_type(const ::std::string& value) {
  set_has_m_godattribute_type();
  if (m_godattribute_type_ == &::google::protobuf::internal::kEmptyString) {
    m_godattribute_type_ = new ::std::string;
  }
  m_godattribute_type_->assign(value);
}
inline void E_EquipAttribute::set_m_godattribute_type(const char* value) {
  set_has_m_godattribute_type();
  if (m_godattribute_type_ == &::google::protobuf::internal::kEmptyString) {
    m_godattribute_type_ = new ::std::string;
  }
  m_godattribute_type_->assign(value);
}
inline void E_EquipAttribute::set_m_godattribute_type(const char* value, size_t size) {
  set_has_m_godattribute_type();
  if (m_godattribute_type_ == &::google::protobuf::internal::kEmptyString) {
    m_godattribute_type_ = new ::std::string;
  }
  m_godattribute_type_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* E_EquipAttribute::mutable_m_godattribute_type() {
  set_has_m_godattribute_type();
  if (m_godattribute_type_ == &::google::protobuf::internal::kEmptyString) {
    m_godattribute_type_ = new ::std::string;
  }
  return m_godattribute_type_;
}
inline ::std::string* E_EquipAttribute::release_m_godattribute_type() {
  clear_has_m_godattribute_type();
  if (m_godattribute_type_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = m_godattribute_type_;
    m_godattribute_type_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void E_EquipAttribute::set_allocated_m_godattribute_type(::std::string* m_godattribute_type) {
  if (m_godattribute_type_ != &::google::protobuf::internal::kEmptyString) {
    delete m_godattribute_type_;
  }
  if (m_godattribute_type) {
    set_has_m_godattribute_type();
    m_godattribute_type_ = m_godattribute_type;
  } else {
    clear_has_m_godattribute_type();
    m_godattribute_type_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string m_godAttribute_valueMin = 13;
inline bool E_EquipAttribute::has_m_godattribute_valuemin() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void E_EquipAttribute::set_has_m_godattribute_valuemin() {
  _has_bits_[0] |= 0x00001000u;
}
inline void E_EquipAttribute::clear_has_m_godattribute_valuemin() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void E_EquipAttribute::clear_m_godattribute_valuemin() {
  if (m_godattribute_valuemin_ != &::google::protobuf::internal::kEmptyString) {
    m_godattribute_valuemin_->clear();
  }
  clear_has_m_godattribute_valuemin();
}
inline const ::std::string& E_EquipAttribute::m_godattribute_valuemin() const {
  return *m_godattribute_valuemin_;
}
inline void E_EquipAttribute::set_m_godattribute_valuemin(const ::std::string& value) {
  set_has_m_godattribute_valuemin();
  if (m_godattribute_valuemin_ == &::google::protobuf::internal::kEmptyString) {
    m_godattribute_valuemin_ = new ::std::string;
  }
  m_godattribute_valuemin_->assign(value);
}
inline void E_EquipAttribute::set_m_godattribute_valuemin(const char* value) {
  set_has_m_godattribute_valuemin();
  if (m_godattribute_valuemin_ == &::google::protobuf::internal::kEmptyString) {
    m_godattribute_valuemin_ = new ::std::string;
  }
  m_godattribute_valuemin_->assign(value);
}
inline void E_EquipAttribute::set_m_godattribute_valuemin(const char* value, size_t size) {
  set_has_m_godattribute_valuemin();
  if (m_godattribute_valuemin_ == &::google::protobuf::internal::kEmptyString) {
    m_godattribute_valuemin_ = new ::std::string;
  }
  m_godattribute_valuemin_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* E_EquipAttribute::mutable_m_godattribute_valuemin() {
  set_has_m_godattribute_valuemin();
  if (m_godattribute_valuemin_ == &::google::protobuf::internal::kEmptyString) {
    m_godattribute_valuemin_ = new ::std::string;
  }
  return m_godattribute_valuemin_;
}
inline ::std::string* E_EquipAttribute::release_m_godattribute_valuemin() {
  clear_has_m_godattribute_valuemin();
  if (m_godattribute_valuemin_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = m_godattribute_valuemin_;
    m_godattribute_valuemin_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void E_EquipAttribute::set_allocated_m_godattribute_valuemin(::std::string* m_godattribute_valuemin) {
  if (m_godattribute_valuemin_ != &::google::protobuf::internal::kEmptyString) {
    delete m_godattribute_valuemin_;
  }
  if (m_godattribute_valuemin) {
    set_has_m_godattribute_valuemin();
    m_godattribute_valuemin_ = m_godattribute_valuemin;
  } else {
    clear_has_m_godattribute_valuemin();
    m_godattribute_valuemin_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string m_godAttribute_valueMax = 14;
inline bool E_EquipAttribute::has_m_godattribute_valuemax() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void E_EquipAttribute::set_has_m_godattribute_valuemax() {
  _has_bits_[0] |= 0x00002000u;
}
inline void E_EquipAttribute::clear_has_m_godattribute_valuemax() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void E_EquipAttribute::clear_m_godattribute_valuemax() {
  if (m_godattribute_valuemax_ != &::google::protobuf::internal::kEmptyString) {
    m_godattribute_valuemax_->clear();
  }
  clear_has_m_godattribute_valuemax();
}
inline const ::std::string& E_EquipAttribute::m_godattribute_valuemax() const {
  return *m_godattribute_valuemax_;
}
inline void E_EquipAttribute::set_m_godattribute_valuemax(const ::std::string& value) {
  set_has_m_godattribute_valuemax();
  if (m_godattribute_valuemax_ == &::google::protobuf::internal::kEmptyString) {
    m_godattribute_valuemax_ = new ::std::string;
  }
  m_godattribute_valuemax_->assign(value);
}
inline void E_EquipAttribute::set_m_godattribute_valuemax(const char* value) {
  set_has_m_godattribute_valuemax();
  if (m_godattribute_valuemax_ == &::google::protobuf::internal::kEmptyString) {
    m_godattribute_valuemax_ = new ::std::string;
  }
  m_godattribute_valuemax_->assign(value);
}
inline void E_EquipAttribute::set_m_godattribute_valuemax(const char* value, size_t size) {
  set_has_m_godattribute_valuemax();
  if (m_godattribute_valuemax_ == &::google::protobuf::internal::kEmptyString) {
    m_godattribute_valuemax_ = new ::std::string;
  }
  m_godattribute_valuemax_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* E_EquipAttribute::mutable_m_godattribute_valuemax() {
  set_has_m_godattribute_valuemax();
  if (m_godattribute_valuemax_ == &::google::protobuf::internal::kEmptyString) {
    m_godattribute_valuemax_ = new ::std::string;
  }
  return m_godattribute_valuemax_;
}
inline ::std::string* E_EquipAttribute::release_m_godattribute_valuemax() {
  clear_has_m_godattribute_valuemax();
  if (m_godattribute_valuemax_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = m_godattribute_valuemax_;
    m_godattribute_valuemax_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void E_EquipAttribute::set_allocated_m_godattribute_valuemax(::std::string* m_godattribute_valuemax) {
  if (m_godattribute_valuemax_ != &::google::protobuf::internal::kEmptyString) {
    delete m_godattribute_valuemax_;
  }
  if (m_godattribute_valuemax) {
    set_has_m_godattribute_valuemax();
    m_godattribute_valuemax_ = m_godattribute_valuemax;
  } else {
    clear_has_m_godattribute_valuemax();
    m_godattribute_valuemax_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string m_silverStarLib = 15;
inline bool E_EquipAttribute::has_m_silverstarlib() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void E_EquipAttribute::set_has_m_silverstarlib() {
  _has_bits_[0] |= 0x00004000u;
}
inline void E_EquipAttribute::clear_has_m_silverstarlib() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void E_EquipAttribute::clear_m_silverstarlib() {
  if (m_silverstarlib_ != &::google::protobuf::internal::kEmptyString) {
    m_silverstarlib_->clear();
  }
  clear_has_m_silverstarlib();
}
inline const ::std::string& E_EquipAttribute::m_silverstarlib() const {
  return *m_silverstarlib_;
}
inline void E_EquipAttribute::set_m_silverstarlib(const ::std::string& value) {
  set_has_m_silverstarlib();
  if (m_silverstarlib_ == &::google::protobuf::internal::kEmptyString) {
    m_silverstarlib_ = new ::std::string;
  }
  m_silverstarlib_->assign(value);
}
inline void E_EquipAttribute::set_m_silverstarlib(const char* value) {
  set_has_m_silverstarlib();
  if (m_silverstarlib_ == &::google::protobuf::internal::kEmptyString) {
    m_silverstarlib_ = new ::std::string;
  }
  m_silverstarlib_->assign(value);
}
inline void E_EquipAttribute::set_m_silverstarlib(const char* value, size_t size) {
  set_has_m_silverstarlib();
  if (m_silverstarlib_ == &::google::protobuf::internal::kEmptyString) {
    m_silverstarlib_ = new ::std::string;
  }
  m_silverstarlib_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* E_EquipAttribute::mutable_m_silverstarlib() {
  set_has_m_silverstarlib();
  if (m_silverstarlib_ == &::google::protobuf::internal::kEmptyString) {
    m_silverstarlib_ = new ::std::string;
  }
  return m_silverstarlib_;
}
inline ::std::string* E_EquipAttribute::release_m_silverstarlib() {
  clear_has_m_silverstarlib();
  if (m_silverstarlib_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = m_silverstarlib_;
    m_silverstarlib_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void E_EquipAttribute::set_allocated_m_silverstarlib(::std::string* m_silverstarlib) {
  if (m_silverstarlib_ != &::google::protobuf::internal::kEmptyString) {
    delete m_silverstarlib_;
  }
  if (m_silverstarlib) {
    set_has_m_silverstarlib();
    m_silverstarlib_ = m_silverstarlib;
  } else {
    clear_has_m_silverstarlib();
    m_silverstarlib_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string m_silverStarValue = 16;
inline bool E_EquipAttribute::has_m_silverstarvalue() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void E_EquipAttribute::set_has_m_silverstarvalue() {
  _has_bits_[0] |= 0x00008000u;
}
inline void E_EquipAttribute::clear_has_m_silverstarvalue() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void E_EquipAttribute::clear_m_silverstarvalue() {
  if (m_silverstarvalue_ != &::google::protobuf::internal::kEmptyString) {
    m_silverstarvalue_->clear();
  }
  clear_has_m_silverstarvalue();
}
inline const ::std::string& E_EquipAttribute::m_silverstarvalue() const {
  return *m_silverstarvalue_;
}
inline void E_EquipAttribute::set_m_silverstarvalue(const ::std::string& value) {
  set_has_m_silverstarvalue();
  if (m_silverstarvalue_ == &::google::protobuf::internal::kEmptyString) {
    m_silverstarvalue_ = new ::std::string;
  }
  m_silverstarvalue_->assign(value);
}
inline void E_EquipAttribute::set_m_silverstarvalue(const char* value) {
  set_has_m_silverstarvalue();
  if (m_silverstarvalue_ == &::google::protobuf::internal::kEmptyString) {
    m_silverstarvalue_ = new ::std::string;
  }
  m_silverstarvalue_->assign(value);
}
inline void E_EquipAttribute::set_m_silverstarvalue(const char* value, size_t size) {
  set_has_m_silverstarvalue();
  if (m_silverstarvalue_ == &::google::protobuf::internal::kEmptyString) {
    m_silverstarvalue_ = new ::std::string;
  }
  m_silverstarvalue_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* E_EquipAttribute::mutable_m_silverstarvalue() {
  set_has_m_silverstarvalue();
  if (m_silverstarvalue_ == &::google::protobuf::internal::kEmptyString) {
    m_silverstarvalue_ = new ::std::string;
  }
  return m_silverstarvalue_;
}
inline ::std::string* E_EquipAttribute::release_m_silverstarvalue() {
  clear_has_m_silverstarvalue();
  if (m_silverstarvalue_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = m_silverstarvalue_;
    m_silverstarvalue_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void E_EquipAttribute::set_allocated_m_silverstarvalue(::std::string* m_silverstarvalue) {
  if (m_silverstarvalue_ != &::google::protobuf::internal::kEmptyString) {
    delete m_silverstarvalue_;
  }
  if (m_silverstarvalue) {
    set_has_m_silverstarvalue();
    m_silverstarvalue_ = m_silverstarvalue;
  } else {
    clear_has_m_silverstarvalue();
    m_silverstarvalue_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string m_goldStarLib = 17;
inline bool E_EquipAttribute::has_m_goldstarlib() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void E_EquipAttribute::set_has_m_goldstarlib() {
  _has_bits_[0] |= 0x00010000u;
}
inline void E_EquipAttribute::clear_has_m_goldstarlib() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void E_EquipAttribute::clear_m_goldstarlib() {
  if (m_goldstarlib_ != &::google::protobuf::internal::kEmptyString) {
    m_goldstarlib_->clear();
  }
  clear_has_m_goldstarlib();
}
inline const ::std::string& E_EquipAttribute::m_goldstarlib() const {
  return *m_goldstarlib_;
}
inline void E_EquipAttribute::set_m_goldstarlib(const ::std::string& value) {
  set_has_m_goldstarlib();
  if (m_goldstarlib_ == &::google::protobuf::internal::kEmptyString) {
    m_goldstarlib_ = new ::std::string;
  }
  m_goldstarlib_->assign(value);
}
inline void E_EquipAttribute::set_m_goldstarlib(const char* value) {
  set_has_m_goldstarlib();
  if (m_goldstarlib_ == &::google::protobuf::internal::kEmptyString) {
    m_goldstarlib_ = new ::std::string;
  }
  m_goldstarlib_->assign(value);
}
inline void E_EquipAttribute::set_m_goldstarlib(const char* value, size_t size) {
  set_has_m_goldstarlib();
  if (m_goldstarlib_ == &::google::protobuf::internal::kEmptyString) {
    m_goldstarlib_ = new ::std::string;
  }
  m_goldstarlib_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* E_EquipAttribute::mutable_m_goldstarlib() {
  set_has_m_goldstarlib();
  if (m_goldstarlib_ == &::google::protobuf::internal::kEmptyString) {
    m_goldstarlib_ = new ::std::string;
  }
  return m_goldstarlib_;
}
inline ::std::string* E_EquipAttribute::release_m_goldstarlib() {
  clear_has_m_goldstarlib();
  if (m_goldstarlib_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = m_goldstarlib_;
    m_goldstarlib_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void E_EquipAttribute::set_allocated_m_goldstarlib(::std::string* m_goldstarlib) {
  if (m_goldstarlib_ != &::google::protobuf::internal::kEmptyString) {
    delete m_goldstarlib_;
  }
  if (m_goldstarlib) {
    set_has_m_goldstarlib();
    m_goldstarlib_ = m_goldstarlib;
  } else {
    clear_has_m_goldstarlib();
    m_goldstarlib_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string m_goldStarValue = 18;
inline bool E_EquipAttribute::has_m_goldstarvalue() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void E_EquipAttribute::set_has_m_goldstarvalue() {
  _has_bits_[0] |= 0x00020000u;
}
inline void E_EquipAttribute::clear_has_m_goldstarvalue() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void E_EquipAttribute::clear_m_goldstarvalue() {
  if (m_goldstarvalue_ != &::google::protobuf::internal::kEmptyString) {
    m_goldstarvalue_->clear();
  }
  clear_has_m_goldstarvalue();
}
inline const ::std::string& E_EquipAttribute::m_goldstarvalue() const {
  return *m_goldstarvalue_;
}
inline void E_EquipAttribute::set_m_goldstarvalue(const ::std::string& value) {
  set_has_m_goldstarvalue();
  if (m_goldstarvalue_ == &::google::protobuf::internal::kEmptyString) {
    m_goldstarvalue_ = new ::std::string;
  }
  m_goldstarvalue_->assign(value);
}
inline void E_EquipAttribute::set_m_goldstarvalue(const char* value) {
  set_has_m_goldstarvalue();
  if (m_goldstarvalue_ == &::google::protobuf::internal::kEmptyString) {
    m_goldstarvalue_ = new ::std::string;
  }
  m_goldstarvalue_->assign(value);
}
inline void E_EquipAttribute::set_m_goldstarvalue(const char* value, size_t size) {
  set_has_m_goldstarvalue();
  if (m_goldstarvalue_ == &::google::protobuf::internal::kEmptyString) {
    m_goldstarvalue_ = new ::std::string;
  }
  m_goldstarvalue_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* E_EquipAttribute::mutable_m_goldstarvalue() {
  set_has_m_goldstarvalue();
  if (m_goldstarvalue_ == &::google::protobuf::internal::kEmptyString) {
    m_goldstarvalue_ = new ::std::string;
  }
  return m_goldstarvalue_;
}
inline ::std::string* E_EquipAttribute::release_m_goldstarvalue() {
  clear_has_m_goldstarvalue();
  if (m_goldstarvalue_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = m_goldstarvalue_;
    m_goldstarvalue_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void E_EquipAttribute::set_allocated_m_goldstarvalue(::std::string* m_goldstarvalue) {
  if (m_goldstarvalue_ != &::google::protobuf::internal::kEmptyString) {
    delete m_goldstarvalue_;
  }
  if (m_goldstarvalue) {
    set_has_m_goldstarvalue();
    m_goldstarvalue_ = m_goldstarvalue;
  } else {
    clear_has_m_goldstarvalue();
    m_goldstarvalue_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string m_godeviAtt = 19;
inline bool E_EquipAttribute::has_m_godeviatt() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void E_EquipAttribute::set_has_m_godeviatt() {
  _has_bits_[0] |= 0x00040000u;
}
inline void E_EquipAttribute::clear_has_m_godeviatt() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void E_EquipAttribute::clear_m_godeviatt() {
  if (m_godeviatt_ != &::google::protobuf::internal::kEmptyString) {
    m_godeviatt_->clear();
  }
  clear_has_m_godeviatt();
}
inline const ::std::string& E_EquipAttribute::m_godeviatt() const {
  return *m_godeviatt_;
}
inline void E_EquipAttribute::set_m_godeviatt(const ::std::string& value) {
  set_has_m_godeviatt();
  if (m_godeviatt_ == &::google::protobuf::internal::kEmptyString) {
    m_godeviatt_ = new ::std::string;
  }
  m_godeviatt_->assign(value);
}
inline void E_EquipAttribute::set_m_godeviatt(const char* value) {
  set_has_m_godeviatt();
  if (m_godeviatt_ == &::google::protobuf::internal::kEmptyString) {
    m_godeviatt_ = new ::std::string;
  }
  m_godeviatt_->assign(value);
}
inline void E_EquipAttribute::set_m_godeviatt(const char* value, size_t size) {
  set_has_m_godeviatt();
  if (m_godeviatt_ == &::google::protobuf::internal::kEmptyString) {
    m_godeviatt_ = new ::std::string;
  }
  m_godeviatt_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* E_EquipAttribute::mutable_m_godeviatt() {
  set_has_m_godeviatt();
  if (m_godeviatt_ == &::google::protobuf::internal::kEmptyString) {
    m_godeviatt_ = new ::std::string;
  }
  return m_godeviatt_;
}
inline ::std::string* E_EquipAttribute::release_m_godeviatt() {
  clear_has_m_godeviatt();
  if (m_godeviatt_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = m_godeviatt_;
    m_godeviatt_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void E_EquipAttribute::set_allocated_m_godeviatt(::std::string* m_godeviatt) {
  if (m_godeviatt_ != &::google::protobuf::internal::kEmptyString) {
    delete m_godeviatt_;
  }
  if (m_godeviatt) {
    set_has_m_godeviatt();
    m_godeviatt_ = m_godeviatt;
  } else {
    clear_has_m_godeviatt();
    m_godeviatt_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string m_godeviAttValue = 20;
inline bool E_EquipAttribute::has_m_godeviattvalue() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void E_EquipAttribute::set_has_m_godeviattvalue() {
  _has_bits_[0] |= 0x00080000u;
}
inline void E_EquipAttribute::clear_has_m_godeviattvalue() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void E_EquipAttribute::clear_m_godeviattvalue() {
  if (m_godeviattvalue_ != &::google::protobuf::internal::kEmptyString) {
    m_godeviattvalue_->clear();
  }
  clear_has_m_godeviattvalue();
}
inline const ::std::string& E_EquipAttribute::m_godeviattvalue() const {
  return *m_godeviattvalue_;
}
inline void E_EquipAttribute::set_m_godeviattvalue(const ::std::string& value) {
  set_has_m_godeviattvalue();
  if (m_godeviattvalue_ == &::google::protobuf::internal::kEmptyString) {
    m_godeviattvalue_ = new ::std::string;
  }
  m_godeviattvalue_->assign(value);
}
inline void E_EquipAttribute::set_m_godeviattvalue(const char* value) {
  set_has_m_godeviattvalue();
  if (m_godeviattvalue_ == &::google::protobuf::internal::kEmptyString) {
    m_godeviattvalue_ = new ::std::string;
  }
  m_godeviattvalue_->assign(value);
}
inline void E_EquipAttribute::set_m_godeviattvalue(const char* value, size_t size) {
  set_has_m_godeviattvalue();
  if (m_godeviattvalue_ == &::google::protobuf::internal::kEmptyString) {
    m_godeviattvalue_ = new ::std::string;
  }
  m_godeviattvalue_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* E_EquipAttribute::mutable_m_godeviattvalue() {
  set_has_m_godeviattvalue();
  if (m_godeviattvalue_ == &::google::protobuf::internal::kEmptyString) {
    m_godeviattvalue_ = new ::std::string;
  }
  return m_godeviattvalue_;
}
inline ::std::string* E_EquipAttribute::release_m_godeviattvalue() {
  clear_has_m_godeviattvalue();
  if (m_godeviattvalue_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = m_godeviattvalue_;
    m_godeviattvalue_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void E_EquipAttribute::set_allocated_m_godeviattvalue(::std::string* m_godeviattvalue) {
  if (m_godeviattvalue_ != &::google::protobuf::internal::kEmptyString) {
    delete m_godeviattvalue_;
  }
  if (m_godeviattvalue) {
    set_has_m_godeviattvalue();
    m_godeviattvalue_ = m_godeviattvalue;
  } else {
    clear_has_m_godeviattvalue();
    m_godeviattvalue_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string m_godevilSkill = 21;
inline bool E_EquipAttribute::has_m_godevilskill() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void E_EquipAttribute::set_has_m_godevilskill() {
  _has_bits_[0] |= 0x00100000u;
}
inline void E_EquipAttribute::clear_has_m_godevilskill() {
  _has_bits_[0] &= ~0x00100000u;
}
inline void E_EquipAttribute::clear_m_godevilskill() {
  if (m_godevilskill_ != &::google::protobuf::internal::kEmptyString) {
    m_godevilskill_->clear();
  }
  clear_has_m_godevilskill();
}
inline const ::std::string& E_EquipAttribute::m_godevilskill() const {
  return *m_godevilskill_;
}
inline void E_EquipAttribute::set_m_godevilskill(const ::std::string& value) {
  set_has_m_godevilskill();
  if (m_godevilskill_ == &::google::protobuf::internal::kEmptyString) {
    m_godevilskill_ = new ::std::string;
  }
  m_godevilskill_->assign(value);
}
inline void E_EquipAttribute::set_m_godevilskill(const char* value) {
  set_has_m_godevilskill();
  if (m_godevilskill_ == &::google::protobuf::internal::kEmptyString) {
    m_godevilskill_ = new ::std::string;
  }
  m_godevilskill_->assign(value);
}
inline void E_EquipAttribute::set_m_godevilskill(const char* value, size_t size) {
  set_has_m_godevilskill();
  if (m_godevilskill_ == &::google::protobuf::internal::kEmptyString) {
    m_godevilskill_ = new ::std::string;
  }
  m_godevilskill_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* E_EquipAttribute::mutable_m_godevilskill() {
  set_has_m_godevilskill();
  if (m_godevilskill_ == &::google::protobuf::internal::kEmptyString) {
    m_godevilskill_ = new ::std::string;
  }
  return m_godevilskill_;
}
inline ::std::string* E_EquipAttribute::release_m_godevilskill() {
  clear_has_m_godevilskill();
  if (m_godevilskill_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = m_godevilskill_;
    m_godevilskill_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void E_EquipAttribute::set_allocated_m_godevilskill(::std::string* m_godevilskill) {
  if (m_godevilskill_ != &::google::protobuf::internal::kEmptyString) {
    delete m_godevilskill_;
  }
  if (m_godevilskill) {
    set_has_m_godevilskill();
    m_godevilskill_ = m_godevilskill;
  } else {
    clear_has_m_godevilskill();
    m_godevilskill_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// repeated .proto_ff.E_EquipAttributeAttributeDesc m_attribute = 22;
inline int E_EquipAttribute::m_attribute_size() const {
  return m_attribute_.size();
}
inline void E_EquipAttribute::clear_m_attribute() {
  m_attribute_.Clear();
}
inline const ::proto_ff::E_EquipAttributeAttributeDesc& E_EquipAttribute::m_attribute(int index) const {
  return m_attribute_.Get(index);
}
inline ::proto_ff::E_EquipAttributeAttributeDesc* E_EquipAttribute::mutable_m_attribute(int index) {
  return m_attribute_.Mutable(index);
}
inline ::proto_ff::E_EquipAttributeAttributeDesc* E_EquipAttribute::add_m_attribute() {
  return m_attribute_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipAttributeAttributeDesc >&
E_EquipAttribute::m_attribute() const {
  return m_attribute_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipAttributeAttributeDesc >*
E_EquipAttribute::mutable_m_attribute() {
  return &m_attribute_;
}

// repeated string m_star_Library = 23;
inline int E_EquipAttribute::m_star_library_size() const {
  return m_star_library_.size();
}
inline void E_EquipAttribute::clear_m_star_library() {
  m_star_library_.Clear();
}
inline const ::std::string& E_EquipAttribute::m_star_library(int index) const {
  return m_star_library_.Get(index);
}
inline ::std::string* E_EquipAttribute::mutable_m_star_library(int index) {
  return m_star_library_.Mutable(index);
}
inline void E_EquipAttribute::set_m_star_library(int index, const ::std::string& value) {
  m_star_library_.Mutable(index)->assign(value);
}
inline void E_EquipAttribute::set_m_star_library(int index, const char* value) {
  m_star_library_.Mutable(index)->assign(value);
}
inline void E_EquipAttribute::set_m_star_library(int index, const char* value, size_t size) {
  m_star_library_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* E_EquipAttribute::add_m_star_library() {
  return m_star_library_.Add();
}
inline void E_EquipAttribute::add_m_star_library(const ::std::string& value) {
  m_star_library_.Add()->assign(value);
}
inline void E_EquipAttribute::add_m_star_library(const char* value) {
  m_star_library_.Add()->assign(value);
}
inline void E_EquipAttribute::add_m_star_library(const char* value, size_t size) {
  m_star_library_.Add()->assign(reinterpret_cast<const char*>(value), size);
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
E_EquipAttribute::m_star_library() const {
  return m_star_library_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
E_EquipAttribute::mutable_m_star_library() {
  return &m_star_library_;
}

// -------------------------------------------------------------------

// Sheet_EquipAttribute

// repeated .proto_ff.E_EquipAttribute E_EquipAttribute_List = 1;
inline int Sheet_EquipAttribute::e_equipattribute_list_size() const {
  return e_equipattribute_list_.size();
}
inline void Sheet_EquipAttribute::clear_e_equipattribute_list() {
  e_equipattribute_list_.Clear();
}
inline const ::proto_ff::E_EquipAttribute& Sheet_EquipAttribute::e_equipattribute_list(int index) const {
  return e_equipattribute_list_.Get(index);
}
inline ::proto_ff::E_EquipAttribute* Sheet_EquipAttribute::mutable_e_equipattribute_list(int index) {
  return e_equipattribute_list_.Mutable(index);
}
inline ::proto_ff::E_EquipAttribute* Sheet_EquipAttribute::add_e_equipattribute_list() {
  return e_equipattribute_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipAttribute >&
Sheet_EquipAttribute::e_equipattribute_list() const {
  return e_equipattribute_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipAttribute >*
Sheet_EquipAttribute::mutable_e_equipattribute_list() {
  return &e_equipattribute_list_;
}

// -------------------------------------------------------------------

// E_EquipSpecattAttributeDesc

// optional int32 m_value = 1;
inline bool E_EquipSpecattAttributeDesc::has_m_value() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_EquipSpecattAttributeDesc::set_has_m_value() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_EquipSpecattAttributeDesc::clear_has_m_value() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_EquipSpecattAttributeDesc::clear_m_value() {
  m_value_ = 0;
  clear_has_m_value();
}
inline ::google::protobuf::int32 E_EquipSpecattAttributeDesc::m_value() const {
  return m_value_;
}
inline void E_EquipSpecattAttributeDesc::set_m_value(::google::protobuf::int32 value) {
  set_has_m_value();
  m_value_ = value;
}

// optional int32 m_type = 2;
inline bool E_EquipSpecattAttributeDesc::has_m_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_EquipSpecattAttributeDesc::set_has_m_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_EquipSpecattAttributeDesc::clear_has_m_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_EquipSpecattAttributeDesc::clear_m_type() {
  m_type_ = 0;
  clear_has_m_type();
}
inline ::google::protobuf::int32 E_EquipSpecattAttributeDesc::m_type() const {
  return m_type_;
}
inline void E_EquipSpecattAttributeDesc::set_m_type(::google::protobuf::int32 value) {
  set_has_m_type();
  m_type_ = value;
}

// -------------------------------------------------------------------

// E_EquipSpecatt

// optional int32 m_id = 1;
inline bool E_EquipSpecatt::has_m_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_EquipSpecatt::set_has_m_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_EquipSpecatt::clear_has_m_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_EquipSpecatt::clear_m_id() {
  m_id_ = 0;
  clear_has_m_id();
}
inline ::google::protobuf::int32 E_EquipSpecatt::m_id() const {
  return m_id_;
}
inline void E_EquipSpecatt::set_m_id(::google::protobuf::int32 value) {
  set_has_m_id();
  m_id_ = value;
}

// optional int32 m_groupid = 2;
inline bool E_EquipSpecatt::has_m_groupid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_EquipSpecatt::set_has_m_groupid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_EquipSpecatt::clear_has_m_groupid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_EquipSpecatt::clear_m_groupid() {
  m_groupid_ = 0;
  clear_has_m_groupid();
}
inline ::google::protobuf::int32 E_EquipSpecatt::m_groupid() const {
  return m_groupid_;
}
inline void E_EquipSpecatt::set_m_groupid(::google::protobuf::int32 value) {
  set_has_m_groupid();
  m_groupid_ = value;
}

// optional int32 m_lv = 3;
inline bool E_EquipSpecatt::has_m_lv() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void E_EquipSpecatt::set_has_m_lv() {
  _has_bits_[0] |= 0x00000004u;
}
inline void E_EquipSpecatt::clear_has_m_lv() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void E_EquipSpecatt::clear_m_lv() {
  m_lv_ = 0;
  clear_has_m_lv();
}
inline ::google::protobuf::int32 E_EquipSpecatt::m_lv() const {
  return m_lv_;
}
inline void E_EquipSpecatt::set_m_lv(::google::protobuf::int32 value) {
  set_has_m_lv();
  m_lv_ = value;
}

// optional string m_Zlname = 4;
inline bool E_EquipSpecatt::has_m_zlname() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void E_EquipSpecatt::set_has_m_zlname() {
  _has_bits_[0] |= 0x00000008u;
}
inline void E_EquipSpecatt::clear_has_m_zlname() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void E_EquipSpecatt::clear_m_zlname() {
  if (m_zlname_ != &::google::protobuf::internal::kEmptyString) {
    m_zlname_->clear();
  }
  clear_has_m_zlname();
}
inline const ::std::string& E_EquipSpecatt::m_zlname() const {
  return *m_zlname_;
}
inline void E_EquipSpecatt::set_m_zlname(const ::std::string& value) {
  set_has_m_zlname();
  if (m_zlname_ == &::google::protobuf::internal::kEmptyString) {
    m_zlname_ = new ::std::string;
  }
  m_zlname_->assign(value);
}
inline void E_EquipSpecatt::set_m_zlname(const char* value) {
  set_has_m_zlname();
  if (m_zlname_ == &::google::protobuf::internal::kEmptyString) {
    m_zlname_ = new ::std::string;
  }
  m_zlname_->assign(value);
}
inline void E_EquipSpecatt::set_m_zlname(const char* value, size_t size) {
  set_has_m_zlname();
  if (m_zlname_ == &::google::protobuf::internal::kEmptyString) {
    m_zlname_ = new ::std::string;
  }
  m_zlname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* E_EquipSpecatt::mutable_m_zlname() {
  set_has_m_zlname();
  if (m_zlname_ == &::google::protobuf::internal::kEmptyString) {
    m_zlname_ = new ::std::string;
  }
  return m_zlname_;
}
inline ::std::string* E_EquipSpecatt::release_m_zlname() {
  clear_has_m_zlname();
  if (m_zlname_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = m_zlname_;
    m_zlname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void E_EquipSpecatt::set_allocated_m_zlname(::std::string* m_zlname) {
  if (m_zlname_ != &::google::protobuf::internal::kEmptyString) {
    delete m_zlname_;
  }
  if (m_zlname) {
    set_has_m_zlname();
    m_zlname_ = m_zlname;
  } else {
    clear_has_m_zlname();
    m_zlname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// repeated .proto_ff.E_EquipSpecattAttributeDesc m_attribute = 5;
inline int E_EquipSpecatt::m_attribute_size() const {
  return m_attribute_.size();
}
inline void E_EquipSpecatt::clear_m_attribute() {
  m_attribute_.Clear();
}
inline const ::proto_ff::E_EquipSpecattAttributeDesc& E_EquipSpecatt::m_attribute(int index) const {
  return m_attribute_.Get(index);
}
inline ::proto_ff::E_EquipSpecattAttributeDesc* E_EquipSpecatt::mutable_m_attribute(int index) {
  return m_attribute_.Mutable(index);
}
inline ::proto_ff::E_EquipSpecattAttributeDesc* E_EquipSpecatt::add_m_attribute() {
  return m_attribute_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipSpecattAttributeDesc >&
E_EquipSpecatt::m_attribute() const {
  return m_attribute_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipSpecattAttributeDesc >*
E_EquipSpecatt::mutable_m_attribute() {
  return &m_attribute_;
}

// -------------------------------------------------------------------

// Sheet_EquipSpecatt

// repeated .proto_ff.E_EquipSpecatt E_EquipSpecatt_List = 1;
inline int Sheet_EquipSpecatt::e_equipspecatt_list_size() const {
  return e_equipspecatt_list_.size();
}
inline void Sheet_EquipSpecatt::clear_e_equipspecatt_list() {
  e_equipspecatt_list_.Clear();
}
inline const ::proto_ff::E_EquipSpecatt& Sheet_EquipSpecatt::e_equipspecatt_list(int index) const {
  return e_equipspecatt_list_.Get(index);
}
inline ::proto_ff::E_EquipSpecatt* Sheet_EquipSpecatt::mutable_e_equipspecatt_list(int index) {
  return e_equipspecatt_list_.Mutable(index);
}
inline ::proto_ff::E_EquipSpecatt* Sheet_EquipSpecatt::add_e_equipspecatt_list() {
  return e_equipspecatt_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipSpecatt >&
Sheet_EquipSpecatt::e_equipspecatt_list() const {
  return e_equipspecatt_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipSpecatt >*
Sheet_EquipSpecatt::mutable_e_equipspecatt_list() {
  return &e_equipspecatt_list_;
}

// -------------------------------------------------------------------

// E_EquipStrongTypeDesc

// optional string m_num = 1;
inline bool E_EquipStrongTypeDesc::has_m_num() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_EquipStrongTypeDesc::set_has_m_num() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_EquipStrongTypeDesc::clear_has_m_num() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_EquipStrongTypeDesc::clear_m_num() {
  if (m_num_ != &::google::protobuf::internal::kEmptyString) {
    m_num_->clear();
  }
  clear_has_m_num();
}
inline const ::std::string& E_EquipStrongTypeDesc::m_num() const {
  return *m_num_;
}
inline void E_EquipStrongTypeDesc::set_m_num(const ::std::string& value) {
  set_has_m_num();
  if (m_num_ == &::google::protobuf::internal::kEmptyString) {
    m_num_ = new ::std::string;
  }
  m_num_->assign(value);
}
inline void E_EquipStrongTypeDesc::set_m_num(const char* value) {
  set_has_m_num();
  if (m_num_ == &::google::protobuf::internal::kEmptyString) {
    m_num_ = new ::std::string;
  }
  m_num_->assign(value);
}
inline void E_EquipStrongTypeDesc::set_m_num(const char* value, size_t size) {
  set_has_m_num();
  if (m_num_ == &::google::protobuf::internal::kEmptyString) {
    m_num_ = new ::std::string;
  }
  m_num_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* E_EquipStrongTypeDesc::mutable_m_num() {
  set_has_m_num();
  if (m_num_ == &::google::protobuf::internal::kEmptyString) {
    m_num_ = new ::std::string;
  }
  return m_num_;
}
inline ::std::string* E_EquipStrongTypeDesc::release_m_num() {
  clear_has_m_num();
  if (m_num_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = m_num_;
    m_num_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void E_EquipStrongTypeDesc::set_allocated_m_num(::std::string* m_num) {
  if (m_num_ != &::google::protobuf::internal::kEmptyString) {
    delete m_num_;
  }
  if (m_num) {
    set_has_m_num();
    m_num_ = m_num;
  } else {
    clear_has_m_num();
    m_num_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 m_id = 2;
inline bool E_EquipStrongTypeDesc::has_m_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_EquipStrongTypeDesc::set_has_m_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_EquipStrongTypeDesc::clear_has_m_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_EquipStrongTypeDesc::clear_m_id() {
  m_id_ = 0;
  clear_has_m_id();
}
inline ::google::protobuf::int32 E_EquipStrongTypeDesc::m_id() const {
  return m_id_;
}
inline void E_EquipStrongTypeDesc::set_m_id(::google::protobuf::int32 value) {
  set_has_m_id();
  m_id_ = value;
}

// -------------------------------------------------------------------

// E_EquipStrong

// optional int64 m_id = 1;
inline bool E_EquipStrong::has_m_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_EquipStrong::set_has_m_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_EquipStrong::clear_has_m_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_EquipStrong::clear_m_id() {
  m_id_ = GOOGLE_LONGLONG(0);
  clear_has_m_id();
}
inline ::google::protobuf::int64 E_EquipStrong::m_id() const {
  return m_id_;
}
inline void E_EquipStrong::set_m_id(::google::protobuf::int64 value) {
  set_has_m_id();
  m_id_ = value;
}

// optional int32 m_position = 2;
inline bool E_EquipStrong::has_m_position() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_EquipStrong::set_has_m_position() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_EquipStrong::clear_has_m_position() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_EquipStrong::clear_m_position() {
  m_position_ = 0;
  clear_has_m_position();
}
inline ::google::protobuf::int32 E_EquipStrong::m_position() const {
  return m_position_;
}
inline void E_EquipStrong::set_m_position(::google::protobuf::int32 value) {
  set_has_m_position();
  m_position_ = value;
}

// optional int32 m_wearQuality = 3;
inline bool E_EquipStrong::has_m_wearquality() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void E_EquipStrong::set_has_m_wearquality() {
  _has_bits_[0] |= 0x00000004u;
}
inline void E_EquipStrong::clear_has_m_wearquality() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void E_EquipStrong::clear_m_wearquality() {
  m_wearquality_ = 0;
  clear_has_m_wearquality();
}
inline ::google::protobuf::int32 E_EquipStrong::m_wearquality() const {
  return m_wearquality_;
}
inline void E_EquipStrong::set_m_wearquality(::google::protobuf::int32 value) {
  set_has_m_wearquality();
  m_wearquality_ = value;
}

// optional int32 m_srtongUp = 4;
inline bool E_EquipStrong::has_m_srtongup() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void E_EquipStrong::set_has_m_srtongup() {
  _has_bits_[0] |= 0x00000008u;
}
inline void E_EquipStrong::clear_has_m_srtongup() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void E_EquipStrong::clear_m_srtongup() {
  m_srtongup_ = 0;
  clear_has_m_srtongup();
}
inline ::google::protobuf::int32 E_EquipStrong::m_srtongup() const {
  return m_srtongup_;
}
inline void E_EquipStrong::set_m_srtongup(::google::protobuf::int32 value) {
  set_has_m_srtongup();
  m_srtongup_ = value;
}

// repeated .proto_ff.E_EquipStrongTypeDesc m_type = 5;
inline int E_EquipStrong::m_type_size() const {
  return m_type_.size();
}
inline void E_EquipStrong::clear_m_type() {
  m_type_.Clear();
}
inline const ::proto_ff::E_EquipStrongTypeDesc& E_EquipStrong::m_type(int index) const {
  return m_type_.Get(index);
}
inline ::proto_ff::E_EquipStrongTypeDesc* E_EquipStrong::mutable_m_type(int index) {
  return m_type_.Mutable(index);
}
inline ::proto_ff::E_EquipStrongTypeDesc* E_EquipStrong::add_m_type() {
  return m_type_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipStrongTypeDesc >&
E_EquipStrong::m_type() const {
  return m_type_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipStrongTypeDesc >*
E_EquipStrong::mutable_m_type() {
  return &m_type_;
}

// -------------------------------------------------------------------

// Sheet_EquipStrong

// repeated .proto_ff.E_EquipStrong E_EquipStrong_List = 1;
inline int Sheet_EquipStrong::e_equipstrong_list_size() const {
  return e_equipstrong_list_.size();
}
inline void Sheet_EquipStrong::clear_e_equipstrong_list() {
  e_equipstrong_list_.Clear();
}
inline const ::proto_ff::E_EquipStrong& Sheet_EquipStrong::e_equipstrong_list(int index) const {
  return e_equipstrong_list_.Get(index);
}
inline ::proto_ff::E_EquipStrong* Sheet_EquipStrong::mutable_e_equipstrong_list(int index) {
  return e_equipstrong_list_.Mutable(index);
}
inline ::proto_ff::E_EquipStrong* Sheet_EquipStrong::add_e_equipstrong_list() {
  return e_equipstrong_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipStrong >&
Sheet_EquipStrong::e_equipstrong_list() const {
  return e_equipstrong_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipStrong >*
Sheet_EquipStrong::mutable_e_equipstrong_list() {
  return &e_equipstrong_list_;
}

// -------------------------------------------------------------------

// E_EquipStrongexpCostDesc

// optional int32 m_Num = 1;
inline bool E_EquipStrongexpCostDesc::has_m_num() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_EquipStrongexpCostDesc::set_has_m_num() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_EquipStrongexpCostDesc::clear_has_m_num() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_EquipStrongexpCostDesc::clear_m_num() {
  m_num_ = 0;
  clear_has_m_num();
}
inline ::google::protobuf::int32 E_EquipStrongexpCostDesc::m_num() const {
  return m_num_;
}
inline void E_EquipStrongexpCostDesc::set_m_num(::google::protobuf::int32 value) {
  set_has_m_num();
  m_num_ = value;
}

// optional int32 m_Item = 2;
inline bool E_EquipStrongexpCostDesc::has_m_item() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_EquipStrongexpCostDesc::set_has_m_item() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_EquipStrongexpCostDesc::clear_has_m_item() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_EquipStrongexpCostDesc::clear_m_item() {
  m_item_ = 0;
  clear_has_m_item();
}
inline ::google::protobuf::int32 E_EquipStrongexpCostDesc::m_item() const {
  return m_item_;
}
inline void E_EquipStrongexpCostDesc::set_m_item(::google::protobuf::int32 value) {
  set_has_m_item();
  m_item_ = value;
}

// -------------------------------------------------------------------

// E_EquipStrongexp

// optional int32 m_Lv = 1;
inline bool E_EquipStrongexp::has_m_lv() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_EquipStrongexp::set_has_m_lv() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_EquipStrongexp::clear_has_m_lv() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_EquipStrongexp::clear_m_lv() {
  m_lv_ = 0;
  clear_has_m_lv();
}
inline ::google::protobuf::int32 E_EquipStrongexp::m_lv() const {
  return m_lv_;
}
inline void E_EquipStrongexp::set_m_lv(::google::protobuf::int32 value) {
  set_has_m_lv();
  m_lv_ = value;
}

// optional int32 m_gold = 2;
inline bool E_EquipStrongexp::has_m_gold() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_EquipStrongexp::set_has_m_gold() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_EquipStrongexp::clear_has_m_gold() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_EquipStrongexp::clear_m_gold() {
  m_gold_ = 0;
  clear_has_m_gold();
}
inline ::google::protobuf::int32 E_EquipStrongexp::m_gold() const {
  return m_gold_;
}
inline void E_EquipStrongexp::set_m_gold(::google::protobuf::int32 value) {
  set_has_m_gold();
  m_gold_ = value;
}

// repeated string m_positionType = 3;
inline int E_EquipStrongexp::m_positiontype_size() const {
  return m_positiontype_.size();
}
inline void E_EquipStrongexp::clear_m_positiontype() {
  m_positiontype_.Clear();
}
inline const ::std::string& E_EquipStrongexp::m_positiontype(int index) const {
  return m_positiontype_.Get(index);
}
inline ::std::string* E_EquipStrongexp::mutable_m_positiontype(int index) {
  return m_positiontype_.Mutable(index);
}
inline void E_EquipStrongexp::set_m_positiontype(int index, const ::std::string& value) {
  m_positiontype_.Mutable(index)->assign(value);
}
inline void E_EquipStrongexp::set_m_positiontype(int index, const char* value) {
  m_positiontype_.Mutable(index)->assign(value);
}
inline void E_EquipStrongexp::set_m_positiontype(int index, const char* value, size_t size) {
  m_positiontype_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* E_EquipStrongexp::add_m_positiontype() {
  return m_positiontype_.Add();
}
inline void E_EquipStrongexp::add_m_positiontype(const ::std::string& value) {
  m_positiontype_.Add()->assign(value);
}
inline void E_EquipStrongexp::add_m_positiontype(const char* value) {
  m_positiontype_.Add()->assign(value);
}
inline void E_EquipStrongexp::add_m_positiontype(const char* value, size_t size) {
  m_positiontype_.Add()->assign(reinterpret_cast<const char*>(value), size);
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
E_EquipStrongexp::m_positiontype() const {
  return m_positiontype_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
E_EquipStrongexp::mutable_m_positiontype() {
  return &m_positiontype_;
}

// repeated .proto_ff.E_EquipStrongexpCostDesc m_cost = 4;
inline int E_EquipStrongexp::m_cost_size() const {
  return m_cost_.size();
}
inline void E_EquipStrongexp::clear_m_cost() {
  m_cost_.Clear();
}
inline const ::proto_ff::E_EquipStrongexpCostDesc& E_EquipStrongexp::m_cost(int index) const {
  return m_cost_.Get(index);
}
inline ::proto_ff::E_EquipStrongexpCostDesc* E_EquipStrongexp::mutable_m_cost(int index) {
  return m_cost_.Mutable(index);
}
inline ::proto_ff::E_EquipStrongexpCostDesc* E_EquipStrongexp::add_m_cost() {
  return m_cost_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipStrongexpCostDesc >&
E_EquipStrongexp::m_cost() const {
  return m_cost_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipStrongexpCostDesc >*
E_EquipStrongexp::mutable_m_cost() {
  return &m_cost_;
}

// -------------------------------------------------------------------

// Sheet_EquipStrongexp

// repeated .proto_ff.E_EquipStrongexp E_EquipStrongexp_List = 1;
inline int Sheet_EquipStrongexp::e_equipstrongexp_list_size() const {
  return e_equipstrongexp_list_.size();
}
inline void Sheet_EquipStrongexp::clear_e_equipstrongexp_list() {
  e_equipstrongexp_list_.Clear();
}
inline const ::proto_ff::E_EquipStrongexp& Sheet_EquipStrongexp::e_equipstrongexp_list(int index) const {
  return e_equipstrongexp_list_.Get(index);
}
inline ::proto_ff::E_EquipStrongexp* Sheet_EquipStrongexp::mutable_e_equipstrongexp_list(int index) {
  return e_equipstrongexp_list_.Mutable(index);
}
inline ::proto_ff::E_EquipStrongexp* Sheet_EquipStrongexp::add_e_equipstrongexp_list() {
  return e_equipstrongexp_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipStrongexp >&
Sheet_EquipStrongexp::e_equipstrongexp_list() const {
  return e_equipstrongexp_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipStrongexp >*
Sheet_EquipStrongexp::mutable_e_equipstrongexp_list() {
  return &e_equipstrongexp_list_;
}

// -------------------------------------------------------------------

// E_EquipBeaststrongTypeDesc

// optional string m_num = 1;
inline bool E_EquipBeaststrongTypeDesc::has_m_num() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_EquipBeaststrongTypeDesc::set_has_m_num() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_EquipBeaststrongTypeDesc::clear_has_m_num() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_EquipBeaststrongTypeDesc::clear_m_num() {
  if (m_num_ != &::google::protobuf::internal::kEmptyString) {
    m_num_->clear();
  }
  clear_has_m_num();
}
inline const ::std::string& E_EquipBeaststrongTypeDesc::m_num() const {
  return *m_num_;
}
inline void E_EquipBeaststrongTypeDesc::set_m_num(const ::std::string& value) {
  set_has_m_num();
  if (m_num_ == &::google::protobuf::internal::kEmptyString) {
    m_num_ = new ::std::string;
  }
  m_num_->assign(value);
}
inline void E_EquipBeaststrongTypeDesc::set_m_num(const char* value) {
  set_has_m_num();
  if (m_num_ == &::google::protobuf::internal::kEmptyString) {
    m_num_ = new ::std::string;
  }
  m_num_->assign(value);
}
inline void E_EquipBeaststrongTypeDesc::set_m_num(const char* value, size_t size) {
  set_has_m_num();
  if (m_num_ == &::google::protobuf::internal::kEmptyString) {
    m_num_ = new ::std::string;
  }
  m_num_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* E_EquipBeaststrongTypeDesc::mutable_m_num() {
  set_has_m_num();
  if (m_num_ == &::google::protobuf::internal::kEmptyString) {
    m_num_ = new ::std::string;
  }
  return m_num_;
}
inline ::std::string* E_EquipBeaststrongTypeDesc::release_m_num() {
  clear_has_m_num();
  if (m_num_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = m_num_;
    m_num_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void E_EquipBeaststrongTypeDesc::set_allocated_m_num(::std::string* m_num) {
  if (m_num_ != &::google::protobuf::internal::kEmptyString) {
    delete m_num_;
  }
  if (m_num) {
    set_has_m_num();
    m_num_ = m_num;
  } else {
    clear_has_m_num();
    m_num_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 m_id = 2;
inline bool E_EquipBeaststrongTypeDesc::has_m_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_EquipBeaststrongTypeDesc::set_has_m_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_EquipBeaststrongTypeDesc::clear_has_m_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_EquipBeaststrongTypeDesc::clear_m_id() {
  m_id_ = 0;
  clear_has_m_id();
}
inline ::google::protobuf::int32 E_EquipBeaststrongTypeDesc::m_id() const {
  return m_id_;
}
inline void E_EquipBeaststrongTypeDesc::set_m_id(::google::protobuf::int32 value) {
  set_has_m_id();
  m_id_ = value;
}

// -------------------------------------------------------------------

// E_EquipBeaststrong

// optional int64 m_id = 1;
inline bool E_EquipBeaststrong::has_m_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_EquipBeaststrong::set_has_m_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_EquipBeaststrong::clear_has_m_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_EquipBeaststrong::clear_m_id() {
  m_id_ = GOOGLE_LONGLONG(0);
  clear_has_m_id();
}
inline ::google::protobuf::int64 E_EquipBeaststrong::m_id() const {
  return m_id_;
}
inline void E_EquipBeaststrong::set_m_id(::google::protobuf::int64 value) {
  set_has_m_id();
  m_id_ = value;
}

// optional int32 m_position = 2;
inline bool E_EquipBeaststrong::has_m_position() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_EquipBeaststrong::set_has_m_position() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_EquipBeaststrong::clear_has_m_position() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_EquipBeaststrong::clear_m_position() {
  m_position_ = 0;
  clear_has_m_position();
}
inline ::google::protobuf::int32 E_EquipBeaststrong::m_position() const {
  return m_position_;
}
inline void E_EquipBeaststrong::set_m_position(::google::protobuf::int32 value) {
  set_has_m_position();
  m_position_ = value;
}

// optional int32 m_wearQuality = 3;
inline bool E_EquipBeaststrong::has_m_wearquality() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void E_EquipBeaststrong::set_has_m_wearquality() {
  _has_bits_[0] |= 0x00000004u;
}
inline void E_EquipBeaststrong::clear_has_m_wearquality() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void E_EquipBeaststrong::clear_m_wearquality() {
  m_wearquality_ = 0;
  clear_has_m_wearquality();
}
inline ::google::protobuf::int32 E_EquipBeaststrong::m_wearquality() const {
  return m_wearquality_;
}
inline void E_EquipBeaststrong::set_m_wearquality(::google::protobuf::int32 value) {
  set_has_m_wearquality();
  m_wearquality_ = value;
}

// optional int32 m_srtongUp = 4;
inline bool E_EquipBeaststrong::has_m_srtongup() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void E_EquipBeaststrong::set_has_m_srtongup() {
  _has_bits_[0] |= 0x00000008u;
}
inline void E_EquipBeaststrong::clear_has_m_srtongup() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void E_EquipBeaststrong::clear_m_srtongup() {
  m_srtongup_ = 0;
  clear_has_m_srtongup();
}
inline ::google::protobuf::int32 E_EquipBeaststrong::m_srtongup() const {
  return m_srtongup_;
}
inline void E_EquipBeaststrong::set_m_srtongup(::google::protobuf::int32 value) {
  set_has_m_srtongup();
  m_srtongup_ = value;
}

// repeated .proto_ff.E_EquipBeaststrongTypeDesc m_type = 5;
inline int E_EquipBeaststrong::m_type_size() const {
  return m_type_.size();
}
inline void E_EquipBeaststrong::clear_m_type() {
  m_type_.Clear();
}
inline const ::proto_ff::E_EquipBeaststrongTypeDesc& E_EquipBeaststrong::m_type(int index) const {
  return m_type_.Get(index);
}
inline ::proto_ff::E_EquipBeaststrongTypeDesc* E_EquipBeaststrong::mutable_m_type(int index) {
  return m_type_.Mutable(index);
}
inline ::proto_ff::E_EquipBeaststrongTypeDesc* E_EquipBeaststrong::add_m_type() {
  return m_type_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipBeaststrongTypeDesc >&
E_EquipBeaststrong::m_type() const {
  return m_type_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipBeaststrongTypeDesc >*
E_EquipBeaststrong::mutable_m_type() {
  return &m_type_;
}

// -------------------------------------------------------------------

// Sheet_EquipBeaststrong

// repeated .proto_ff.E_EquipBeaststrong E_EquipBeaststrong_List = 1;
inline int Sheet_EquipBeaststrong::e_equipbeaststrong_list_size() const {
  return e_equipbeaststrong_list_.size();
}
inline void Sheet_EquipBeaststrong::clear_e_equipbeaststrong_list() {
  e_equipbeaststrong_list_.Clear();
}
inline const ::proto_ff::E_EquipBeaststrong& Sheet_EquipBeaststrong::e_equipbeaststrong_list(int index) const {
  return e_equipbeaststrong_list_.Get(index);
}
inline ::proto_ff::E_EquipBeaststrong* Sheet_EquipBeaststrong::mutable_e_equipbeaststrong_list(int index) {
  return e_equipbeaststrong_list_.Mutable(index);
}
inline ::proto_ff::E_EquipBeaststrong* Sheet_EquipBeaststrong::add_e_equipbeaststrong_list() {
  return e_equipbeaststrong_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipBeaststrong >&
Sheet_EquipBeaststrong::e_equipbeaststrong_list() const {
  return e_equipbeaststrong_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipBeaststrong >*
Sheet_EquipBeaststrong::mutable_e_equipbeaststrong_list() {
  return &e_equipbeaststrong_list_;
}

// -------------------------------------------------------------------

// E_EquipStrongtotalAttributeDesc

// optional int32 m_value = 1;
inline bool E_EquipStrongtotalAttributeDesc::has_m_value() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_EquipStrongtotalAttributeDesc::set_has_m_value() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_EquipStrongtotalAttributeDesc::clear_has_m_value() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_EquipStrongtotalAttributeDesc::clear_m_value() {
  m_value_ = 0;
  clear_has_m_value();
}
inline ::google::protobuf::int32 E_EquipStrongtotalAttributeDesc::m_value() const {
  return m_value_;
}
inline void E_EquipStrongtotalAttributeDesc::set_m_value(::google::protobuf::int32 value) {
  set_has_m_value();
  m_value_ = value;
}

// optional int32 m_type = 2;
inline bool E_EquipStrongtotalAttributeDesc::has_m_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_EquipStrongtotalAttributeDesc::set_has_m_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_EquipStrongtotalAttributeDesc::clear_has_m_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_EquipStrongtotalAttributeDesc::clear_m_type() {
  m_type_ = 0;
  clear_has_m_type();
}
inline ::google::protobuf::int32 E_EquipStrongtotalAttributeDesc::m_type() const {
  return m_type_;
}
inline void E_EquipStrongtotalAttributeDesc::set_m_type(::google::protobuf::int32 value) {
  set_has_m_type();
  m_type_ = value;
}

// -------------------------------------------------------------------

// E_EquipStrongtotal

// optional int64 m_id = 1;
inline bool E_EquipStrongtotal::has_m_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_EquipStrongtotal::set_has_m_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_EquipStrongtotal::clear_has_m_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_EquipStrongtotal::clear_m_id() {
  m_id_ = GOOGLE_LONGLONG(0);
  clear_has_m_id();
}
inline ::google::protobuf::int64 E_EquipStrongtotal::m_id() const {
  return m_id_;
}
inline void E_EquipStrongtotal::set_m_id(::google::protobuf::int64 value) {
  set_has_m_id();
  m_id_ = value;
}

// optional int32 m_idType = 2;
inline bool E_EquipStrongtotal::has_m_idtype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_EquipStrongtotal::set_has_m_idtype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_EquipStrongtotal::clear_has_m_idtype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_EquipStrongtotal::clear_m_idtype() {
  m_idtype_ = 0;
  clear_has_m_idtype();
}
inline ::google::protobuf::int32 E_EquipStrongtotal::m_idtype() const {
  return m_idtype_;
}
inline void E_EquipStrongtotal::set_m_idtype(::google::protobuf::int32 value) {
  set_has_m_idtype();
  m_idtype_ = value;
}

// optional int32 m_idNum = 3;
inline bool E_EquipStrongtotal::has_m_idnum() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void E_EquipStrongtotal::set_has_m_idnum() {
  _has_bits_[0] |= 0x00000004u;
}
inline void E_EquipStrongtotal::clear_has_m_idnum() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void E_EquipStrongtotal::clear_m_idnum() {
  m_idnum_ = 0;
  clear_has_m_idnum();
}
inline ::google::protobuf::int32 E_EquipStrongtotal::m_idnum() const {
  return m_idnum_;
}
inline void E_EquipStrongtotal::set_m_idnum(::google::protobuf::int32 value) {
  set_has_m_idnum();
  m_idnum_ = value;
}

// repeated .proto_ff.E_EquipStrongtotalAttributeDesc m_attribute = 4;
inline int E_EquipStrongtotal::m_attribute_size() const {
  return m_attribute_.size();
}
inline void E_EquipStrongtotal::clear_m_attribute() {
  m_attribute_.Clear();
}
inline const ::proto_ff::E_EquipStrongtotalAttributeDesc& E_EquipStrongtotal::m_attribute(int index) const {
  return m_attribute_.Get(index);
}
inline ::proto_ff::E_EquipStrongtotalAttributeDesc* E_EquipStrongtotal::mutable_m_attribute(int index) {
  return m_attribute_.Mutable(index);
}
inline ::proto_ff::E_EquipStrongtotalAttributeDesc* E_EquipStrongtotal::add_m_attribute() {
  return m_attribute_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipStrongtotalAttributeDesc >&
E_EquipStrongtotal::m_attribute() const {
  return m_attribute_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipStrongtotalAttributeDesc >*
E_EquipStrongtotal::mutable_m_attribute() {
  return &m_attribute_;
}

// -------------------------------------------------------------------

// Sheet_EquipStrongtotal

// repeated .proto_ff.E_EquipStrongtotal E_EquipStrongtotal_List = 1;
inline int Sheet_EquipStrongtotal::e_equipstrongtotal_list_size() const {
  return e_equipstrongtotal_list_.size();
}
inline void Sheet_EquipStrongtotal::clear_e_equipstrongtotal_list() {
  e_equipstrongtotal_list_.Clear();
}
inline const ::proto_ff::E_EquipStrongtotal& Sheet_EquipStrongtotal::e_equipstrongtotal_list(int index) const {
  return e_equipstrongtotal_list_.Get(index);
}
inline ::proto_ff::E_EquipStrongtotal* Sheet_EquipStrongtotal::mutable_e_equipstrongtotal_list(int index) {
  return e_equipstrongtotal_list_.Mutable(index);
}
inline ::proto_ff::E_EquipStrongtotal* Sheet_EquipStrongtotal::add_e_equipstrongtotal_list() {
  return e_equipstrongtotal_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipStrongtotal >&
Sheet_EquipStrongtotal::e_equipstrongtotal_list() const {
  return e_equipstrongtotal_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipStrongtotal >*
Sheet_EquipStrongtotal::mutable_e_equipstrongtotal_list() {
  return &e_equipstrongtotal_list_;
}

// -------------------------------------------------------------------

// E_EquipGem

// optional int32 m_position = 1;
inline bool E_EquipGem::has_m_position() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_EquipGem::set_has_m_position() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_EquipGem::clear_has_m_position() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_EquipGem::clear_m_position() {
  m_position_ = 0;
  clear_has_m_position();
}
inline ::google::protobuf::int32 E_EquipGem::m_position() const {
  return m_position_;
}
inline void E_EquipGem::set_m_position(::google::protobuf::int32 value) {
  set_has_m_position();
  m_position_ = value;
}

// optional string m_gemType = 2;
inline bool E_EquipGem::has_m_gemtype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_EquipGem::set_has_m_gemtype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_EquipGem::clear_has_m_gemtype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_EquipGem::clear_m_gemtype() {
  if (m_gemtype_ != &::google::protobuf::internal::kEmptyString) {
    m_gemtype_->clear();
  }
  clear_has_m_gemtype();
}
inline const ::std::string& E_EquipGem::m_gemtype() const {
  return *m_gemtype_;
}
inline void E_EquipGem::set_m_gemtype(const ::std::string& value) {
  set_has_m_gemtype();
  if (m_gemtype_ == &::google::protobuf::internal::kEmptyString) {
    m_gemtype_ = new ::std::string;
  }
  m_gemtype_->assign(value);
}
inline void E_EquipGem::set_m_gemtype(const char* value) {
  set_has_m_gemtype();
  if (m_gemtype_ == &::google::protobuf::internal::kEmptyString) {
    m_gemtype_ = new ::std::string;
  }
  m_gemtype_->assign(value);
}
inline void E_EquipGem::set_m_gemtype(const char* value, size_t size) {
  set_has_m_gemtype();
  if (m_gemtype_ == &::google::protobuf::internal::kEmptyString) {
    m_gemtype_ = new ::std::string;
  }
  m_gemtype_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* E_EquipGem::mutable_m_gemtype() {
  set_has_m_gemtype();
  if (m_gemtype_ == &::google::protobuf::internal::kEmptyString) {
    m_gemtype_ = new ::std::string;
  }
  return m_gemtype_;
}
inline ::std::string* E_EquipGem::release_m_gemtype() {
  clear_has_m_gemtype();
  if (m_gemtype_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = m_gemtype_;
    m_gemtype_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void E_EquipGem::set_allocated_m_gemtype(::std::string* m_gemtype) {
  if (m_gemtype_ != &::google::protobuf::internal::kEmptyString) {
    delete m_gemtype_;
  }
  if (m_gemtype) {
    set_has_m_gemtype();
    m_gemtype_ = m_gemtype;
  } else {
    clear_has_m_gemtype();
    m_gemtype_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 m_speciallyGemType = 3;
inline bool E_EquipGem::has_m_speciallygemtype() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void E_EquipGem::set_has_m_speciallygemtype() {
  _has_bits_[0] |= 0x00000004u;
}
inline void E_EquipGem::clear_has_m_speciallygemtype() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void E_EquipGem::clear_m_speciallygemtype() {
  m_speciallygemtype_ = 0;
  clear_has_m_speciallygemtype();
}
inline ::google::protobuf::int32 E_EquipGem::m_speciallygemtype() const {
  return m_speciallygemtype_;
}
inline void E_EquipGem::set_m_speciallygemtype(::google::protobuf::int32 value) {
  set_has_m_speciallygemtype();
  m_speciallygemtype_ = value;
}

// optional int32 m_payUnlockItem = 4;
inline bool E_EquipGem::has_m_payunlockitem() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void E_EquipGem::set_has_m_payunlockitem() {
  _has_bits_[0] |= 0x00000008u;
}
inline void E_EquipGem::clear_has_m_payunlockitem() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void E_EquipGem::clear_m_payunlockitem() {
  m_payunlockitem_ = 0;
  clear_has_m_payunlockitem();
}
inline ::google::protobuf::int32 E_EquipGem::m_payunlockitem() const {
  return m_payunlockitem_;
}
inline void E_EquipGem::set_m_payunlockitem(::google::protobuf::int32 value) {
  set_has_m_payunlockitem();
  m_payunlockitem_ = value;
}

// optional int32 m_payUnlockNnm = 5;
inline bool E_EquipGem::has_m_payunlocknnm() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void E_EquipGem::set_has_m_payunlocknnm() {
  _has_bits_[0] |= 0x00000010u;
}
inline void E_EquipGem::clear_has_m_payunlocknnm() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void E_EquipGem::clear_m_payunlocknnm() {
  m_payunlocknnm_ = 0;
  clear_has_m_payunlocknnm();
}
inline ::google::protobuf::int32 E_EquipGem::m_payunlocknnm() const {
  return m_payunlocknnm_;
}
inline void E_EquipGem::set_m_payunlocknnm(::google::protobuf::int32 value) {
  set_has_m_payunlocknnm();
  m_payunlocknnm_ = value;
}

// optional string m_commonGemBuy = 6;
inline bool E_EquipGem::has_m_commongembuy() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void E_EquipGem::set_has_m_commongembuy() {
  _has_bits_[0] |= 0x00000020u;
}
inline void E_EquipGem::clear_has_m_commongembuy() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void E_EquipGem::clear_m_commongembuy() {
  if (m_commongembuy_ != &::google::protobuf::internal::kEmptyString) {
    m_commongembuy_->clear();
  }
  clear_has_m_commongembuy();
}
inline const ::std::string& E_EquipGem::m_commongembuy() const {
  return *m_commongembuy_;
}
inline void E_EquipGem::set_m_commongembuy(const ::std::string& value) {
  set_has_m_commongembuy();
  if (m_commongembuy_ == &::google::protobuf::internal::kEmptyString) {
    m_commongembuy_ = new ::std::string;
  }
  m_commongembuy_->assign(value);
}
inline void E_EquipGem::set_m_commongembuy(const char* value) {
  set_has_m_commongembuy();
  if (m_commongembuy_ == &::google::protobuf::internal::kEmptyString) {
    m_commongembuy_ = new ::std::string;
  }
  m_commongembuy_->assign(value);
}
inline void E_EquipGem::set_m_commongembuy(const char* value, size_t size) {
  set_has_m_commongembuy();
  if (m_commongembuy_ == &::google::protobuf::internal::kEmptyString) {
    m_commongembuy_ = new ::std::string;
  }
  m_commongembuy_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* E_EquipGem::mutable_m_commongembuy() {
  set_has_m_commongembuy();
  if (m_commongembuy_ == &::google::protobuf::internal::kEmptyString) {
    m_commongembuy_ = new ::std::string;
  }
  return m_commongembuy_;
}
inline ::std::string* E_EquipGem::release_m_commongembuy() {
  clear_has_m_commongembuy();
  if (m_commongembuy_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = m_commongembuy_;
    m_commongembuy_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void E_EquipGem::set_allocated_m_commongembuy(::std::string* m_commongembuy) {
  if (m_commongembuy_ != &::google::protobuf::internal::kEmptyString) {
    delete m_commongembuy_;
  }
  if (m_commongembuy) {
    set_has_m_commongembuy();
    m_commongembuy_ = m_commongembuy;
  } else {
    clear_has_m_commongembuy();
    m_commongembuy_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string m_speciallyGemBuy = 7;
inline bool E_EquipGem::has_m_speciallygembuy() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void E_EquipGem::set_has_m_speciallygembuy() {
  _has_bits_[0] |= 0x00000040u;
}
inline void E_EquipGem::clear_has_m_speciallygembuy() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void E_EquipGem::clear_m_speciallygembuy() {
  if (m_speciallygembuy_ != &::google::protobuf::internal::kEmptyString) {
    m_speciallygembuy_->clear();
  }
  clear_has_m_speciallygembuy();
}
inline const ::std::string& E_EquipGem::m_speciallygembuy() const {
  return *m_speciallygembuy_;
}
inline void E_EquipGem::set_m_speciallygembuy(const ::std::string& value) {
  set_has_m_speciallygembuy();
  if (m_speciallygembuy_ == &::google::protobuf::internal::kEmptyString) {
    m_speciallygembuy_ = new ::std::string;
  }
  m_speciallygembuy_->assign(value);
}
inline void E_EquipGem::set_m_speciallygembuy(const char* value) {
  set_has_m_speciallygembuy();
  if (m_speciallygembuy_ == &::google::protobuf::internal::kEmptyString) {
    m_speciallygembuy_ = new ::std::string;
  }
  m_speciallygembuy_->assign(value);
}
inline void E_EquipGem::set_m_speciallygembuy(const char* value, size_t size) {
  set_has_m_speciallygembuy();
  if (m_speciallygembuy_ == &::google::protobuf::internal::kEmptyString) {
    m_speciallygembuy_ = new ::std::string;
  }
  m_speciallygembuy_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* E_EquipGem::mutable_m_speciallygembuy() {
  set_has_m_speciallygembuy();
  if (m_speciallygembuy_ == &::google::protobuf::internal::kEmptyString) {
    m_speciallygembuy_ = new ::std::string;
  }
  return m_speciallygembuy_;
}
inline ::std::string* E_EquipGem::release_m_speciallygembuy() {
  clear_has_m_speciallygembuy();
  if (m_speciallygembuy_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = m_speciallygembuy_;
    m_speciallygembuy_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void E_EquipGem::set_allocated_m_speciallygembuy(::std::string* m_speciallygembuy) {
  if (m_speciallygembuy_ != &::google::protobuf::internal::kEmptyString) {
    delete m_speciallygembuy_;
  }
  if (m_speciallygembuy) {
    set_has_m_speciallygembuy();
    m_speciallygembuy_ = m_speciallygembuy;
  } else {
    clear_has_m_speciallygembuy();
    m_speciallygembuy_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// repeated int32 m_gemUnlock = 8;
inline int E_EquipGem::m_gemunlock_size() const {
  return m_gemunlock_.size();
}
inline void E_EquipGem::clear_m_gemunlock() {
  m_gemunlock_.Clear();
}
inline ::google::protobuf::int32 E_EquipGem::m_gemunlock(int index) const {
  return m_gemunlock_.Get(index);
}
inline void E_EquipGem::set_m_gemunlock(int index, ::google::protobuf::int32 value) {
  m_gemunlock_.Set(index, value);
}
inline void E_EquipGem::add_m_gemunlock(::google::protobuf::int32 value) {
  m_gemunlock_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
E_EquipGem::m_gemunlock() const {
  return m_gemunlock_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
E_EquipGem::mutable_m_gemunlock() {
  return &m_gemunlock_;
}

// -------------------------------------------------------------------

// Sheet_EquipGem

// repeated .proto_ff.E_EquipGem E_EquipGem_List = 1;
inline int Sheet_EquipGem::e_equipgem_list_size() const {
  return e_equipgem_list_.size();
}
inline void Sheet_EquipGem::clear_e_equipgem_list() {
  e_equipgem_list_.Clear();
}
inline const ::proto_ff::E_EquipGem& Sheet_EquipGem::e_equipgem_list(int index) const {
  return e_equipgem_list_.Get(index);
}
inline ::proto_ff::E_EquipGem* Sheet_EquipGem::mutable_e_equipgem_list(int index) {
  return e_equipgem_list_.Mutable(index);
}
inline ::proto_ff::E_EquipGem* Sheet_EquipGem::add_e_equipgem_list() {
  return e_equipgem_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipGem >&
Sheet_EquipGem::e_equipgem_list() const {
  return e_equipgem_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipGem >*
Sheet_EquipGem::mutable_e_equipgem_list() {
  return &e_equipgem_list_;
}

// -------------------------------------------------------------------

// E_EquipGemlv

// optional int32 m_id = 1;
inline bool E_EquipGemlv::has_m_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_EquipGemlv::set_has_m_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_EquipGemlv::clear_has_m_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_EquipGemlv::clear_m_id() {
  m_id_ = 0;
  clear_has_m_id();
}
inline ::google::protobuf::int32 E_EquipGemlv::m_id() const {
  return m_id_;
}
inline void E_EquipGemlv::set_m_id(::google::protobuf::int32 value) {
  set_has_m_id();
  m_id_ = value;
}

// optional int32 m_preId = 2;
inline bool E_EquipGemlv::has_m_preid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_EquipGemlv::set_has_m_preid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_EquipGemlv::clear_has_m_preid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_EquipGemlv::clear_m_preid() {
  m_preid_ = 0;
  clear_has_m_preid();
}
inline ::google::protobuf::int32 E_EquipGemlv::m_preid() const {
  return m_preid_;
}
inline void E_EquipGemlv::set_m_preid(::google::protobuf::int32 value) {
  set_has_m_preid();
  m_preid_ = value;
}

// optional int32 m_nextId = 3;
inline bool E_EquipGemlv::has_m_nextid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void E_EquipGemlv::set_has_m_nextid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void E_EquipGemlv::clear_has_m_nextid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void E_EquipGemlv::clear_m_nextid() {
  m_nextid_ = 0;
  clear_has_m_nextid();
}
inline ::google::protobuf::int32 E_EquipGemlv::m_nextid() const {
  return m_nextid_;
}
inline void E_EquipGemlv::set_m_nextid(::google::protobuf::int32 value) {
  set_has_m_nextid();
  m_nextid_ = value;
}

// optional string m_numb = 4;
inline bool E_EquipGemlv::has_m_numb() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void E_EquipGemlv::set_has_m_numb() {
  _has_bits_[0] |= 0x00000008u;
}
inline void E_EquipGemlv::clear_has_m_numb() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void E_EquipGemlv::clear_m_numb() {
  if (m_numb_ != &::google::protobuf::internal::kEmptyString) {
    m_numb_->clear();
  }
  clear_has_m_numb();
}
inline const ::std::string& E_EquipGemlv::m_numb() const {
  return *m_numb_;
}
inline void E_EquipGemlv::set_m_numb(const ::std::string& value) {
  set_has_m_numb();
  if (m_numb_ == &::google::protobuf::internal::kEmptyString) {
    m_numb_ = new ::std::string;
  }
  m_numb_->assign(value);
}
inline void E_EquipGemlv::set_m_numb(const char* value) {
  set_has_m_numb();
  if (m_numb_ == &::google::protobuf::internal::kEmptyString) {
    m_numb_ = new ::std::string;
  }
  m_numb_->assign(value);
}
inline void E_EquipGemlv::set_m_numb(const char* value, size_t size) {
  set_has_m_numb();
  if (m_numb_ == &::google::protobuf::internal::kEmptyString) {
    m_numb_ = new ::std::string;
  }
  m_numb_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* E_EquipGemlv::mutable_m_numb() {
  set_has_m_numb();
  if (m_numb_ == &::google::protobuf::internal::kEmptyString) {
    m_numb_ = new ::std::string;
  }
  return m_numb_;
}
inline ::std::string* E_EquipGemlv::release_m_numb() {
  clear_has_m_numb();
  if (m_numb_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = m_numb_;
    m_numb_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void E_EquipGemlv::set_allocated_m_numb(::std::string* m_numb) {
  if (m_numb_ != &::google::protobuf::internal::kEmptyString) {
    delete m_numb_;
  }
  if (m_numb) {
    set_has_m_numb();
    m_numb_ = m_numb;
  } else {
    clear_has_m_numb();
    m_numb_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 m_nextValue = 5;
inline bool E_EquipGemlv::has_m_nextvalue() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void E_EquipGemlv::set_has_m_nextvalue() {
  _has_bits_[0] |= 0x00000010u;
}
inline void E_EquipGemlv::clear_has_m_nextvalue() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void E_EquipGemlv::clear_m_nextvalue() {
  m_nextvalue_ = 0;
  clear_has_m_nextvalue();
}
inline ::google::protobuf::int32 E_EquipGemlv::m_nextvalue() const {
  return m_nextvalue_;
}
inline void E_EquipGemlv::set_m_nextvalue(::google::protobuf::int32 value) {
  set_has_m_nextvalue();
  m_nextvalue_ = value;
}

// optional int32 m_costGold = 6;
inline bool E_EquipGemlv::has_m_costgold() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void E_EquipGemlv::set_has_m_costgold() {
  _has_bits_[0] |= 0x00000020u;
}
inline void E_EquipGemlv::clear_has_m_costgold() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void E_EquipGemlv::clear_m_costgold() {
  m_costgold_ = 0;
  clear_has_m_costgold();
}
inline ::google::protobuf::int32 E_EquipGemlv::m_costgold() const {
  return m_costgold_;
}
inline void E_EquipGemlv::set_m_costgold(::google::protobuf::int32 value) {
  set_has_m_costgold();
  m_costgold_ = value;
}

// optional int32 m_mallID = 7;
inline bool E_EquipGemlv::has_m_mallid() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void E_EquipGemlv::set_has_m_mallid() {
  _has_bits_[0] |= 0x00000040u;
}
inline void E_EquipGemlv::clear_has_m_mallid() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void E_EquipGemlv::clear_m_mallid() {
  m_mallid_ = 0;
  clear_has_m_mallid();
}
inline ::google::protobuf::int32 E_EquipGemlv::m_mallid() const {
  return m_mallid_;
}
inline void E_EquipGemlv::set_m_mallid(::google::protobuf::int32 value) {
  set_has_m_mallid();
  m_mallid_ = value;
}

// -------------------------------------------------------------------

// Sheet_EquipGemlv

// repeated .proto_ff.E_EquipGemlv E_EquipGemlv_List = 1;
inline int Sheet_EquipGemlv::e_equipgemlv_list_size() const {
  return e_equipgemlv_list_.size();
}
inline void Sheet_EquipGemlv::clear_e_equipgemlv_list() {
  e_equipgemlv_list_.Clear();
}
inline const ::proto_ff::E_EquipGemlv& Sheet_EquipGemlv::e_equipgemlv_list(int index) const {
  return e_equipgemlv_list_.Get(index);
}
inline ::proto_ff::E_EquipGemlv* Sheet_EquipGemlv::mutable_e_equipgemlv_list(int index) {
  return e_equipgemlv_list_.Mutable(index);
}
inline ::proto_ff::E_EquipGemlv* Sheet_EquipGemlv::add_e_equipgemlv_list() {
  return e_equipgemlv_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipGemlv >&
Sheet_EquipGemlv::e_equipgemlv_list() const {
  return e_equipgemlv_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipGemlv >*
Sheet_EquipGemlv::mutable_e_equipgemlv_list() {
  return &e_equipgemlv_list_;
}

// -------------------------------------------------------------------

// E_EquipStoveattAttributeDesc

// optional int32 m_value = 1;
inline bool E_EquipStoveattAttributeDesc::has_m_value() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_EquipStoveattAttributeDesc::set_has_m_value() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_EquipStoveattAttributeDesc::clear_has_m_value() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_EquipStoveattAttributeDesc::clear_m_value() {
  m_value_ = 0;
  clear_has_m_value();
}
inline ::google::protobuf::int32 E_EquipStoveattAttributeDesc::m_value() const {
  return m_value_;
}
inline void E_EquipStoveattAttributeDesc::set_m_value(::google::protobuf::int32 value) {
  set_has_m_value();
  m_value_ = value;
}

// optional int32 m_type = 2;
inline bool E_EquipStoveattAttributeDesc::has_m_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_EquipStoveattAttributeDesc::set_has_m_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_EquipStoveattAttributeDesc::clear_has_m_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_EquipStoveattAttributeDesc::clear_m_type() {
  m_type_ = 0;
  clear_has_m_type();
}
inline ::google::protobuf::int32 E_EquipStoveattAttributeDesc::m_type() const {
  return m_type_;
}
inline void E_EquipStoveattAttributeDesc::set_m_type(::google::protobuf::int32 value) {
  set_has_m_type();
  m_type_ = value;
}

// -------------------------------------------------------------------

// E_EquipStoveatt

// optional int32 m_lv = 1;
inline bool E_EquipStoveatt::has_m_lv() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_EquipStoveatt::set_has_m_lv() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_EquipStoveatt::clear_has_m_lv() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_EquipStoveatt::clear_m_lv() {
  m_lv_ = 0;
  clear_has_m_lv();
}
inline ::google::protobuf::int32 E_EquipStoveatt::m_lv() const {
  return m_lv_;
}
inline void E_EquipStoveatt::set_m_lv(::google::protobuf::int32 value) {
  set_has_m_lv();
  m_lv_ = value;
}

// optional int64 m_exp = 2;
inline bool E_EquipStoveatt::has_m_exp() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_EquipStoveatt::set_has_m_exp() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_EquipStoveatt::clear_has_m_exp() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_EquipStoveatt::clear_m_exp() {
  m_exp_ = GOOGLE_LONGLONG(0);
  clear_has_m_exp();
}
inline ::google::protobuf::int64 E_EquipStoveatt::m_exp() const {
  return m_exp_;
}
inline void E_EquipStoveatt::set_m_exp(::google::protobuf::int64 value) {
  set_has_m_exp();
  m_exp_ = value;
}

// repeated .proto_ff.E_EquipStoveattAttributeDesc m_attribute = 3;
inline int E_EquipStoveatt::m_attribute_size() const {
  return m_attribute_.size();
}
inline void E_EquipStoveatt::clear_m_attribute() {
  m_attribute_.Clear();
}
inline const ::proto_ff::E_EquipStoveattAttributeDesc& E_EquipStoveatt::m_attribute(int index) const {
  return m_attribute_.Get(index);
}
inline ::proto_ff::E_EquipStoveattAttributeDesc* E_EquipStoveatt::mutable_m_attribute(int index) {
  return m_attribute_.Mutable(index);
}
inline ::proto_ff::E_EquipStoveattAttributeDesc* E_EquipStoveatt::add_m_attribute() {
  return m_attribute_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipStoveattAttributeDesc >&
E_EquipStoveatt::m_attribute() const {
  return m_attribute_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipStoveattAttributeDesc >*
E_EquipStoveatt::mutable_m_attribute() {
  return &m_attribute_;
}

// -------------------------------------------------------------------

// Sheet_EquipStoveatt

// repeated .proto_ff.E_EquipStoveatt E_EquipStoveatt_List = 1;
inline int Sheet_EquipStoveatt::e_equipstoveatt_list_size() const {
  return e_equipstoveatt_list_.size();
}
inline void Sheet_EquipStoveatt::clear_e_equipstoveatt_list() {
  e_equipstoveatt_list_.Clear();
}
inline const ::proto_ff::E_EquipStoveatt& Sheet_EquipStoveatt::e_equipstoveatt_list(int index) const {
  return e_equipstoveatt_list_.Get(index);
}
inline ::proto_ff::E_EquipStoveatt* Sheet_EquipStoveatt::mutable_e_equipstoveatt_list(int index) {
  return e_equipstoveatt_list_.Mutable(index);
}
inline ::proto_ff::E_EquipStoveatt* Sheet_EquipStoveatt::add_e_equipstoveatt_list() {
  return e_equipstoveatt_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipStoveatt >&
Sheet_EquipStoveatt::e_equipstoveatt_list() const {
  return e_equipstoveatt_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipStoveatt >*
Sheet_EquipStoveatt::mutable_e_equipstoveatt_list() {
  return &e_equipstoveatt_list_;
}

// -------------------------------------------------------------------

// E_EquipStoveexp

// optional int32 m_ID = 1;
inline bool E_EquipStoveexp::has_m_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_EquipStoveexp::set_has_m_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_EquipStoveexp::clear_has_m_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_EquipStoveexp::clear_m_id() {
  m_id_ = 0;
  clear_has_m_id();
}
inline ::google::protobuf::int32 E_EquipStoveexp::m_id() const {
  return m_id_;
}
inline void E_EquipStoveexp::set_m_id(::google::protobuf::int32 value) {
  set_has_m_id();
  m_id_ = value;
}

// optional int32 m_exp = 2;
inline bool E_EquipStoveexp::has_m_exp() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_EquipStoveexp::set_has_m_exp() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_EquipStoveexp::clear_has_m_exp() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_EquipStoveexp::clear_m_exp() {
  m_exp_ = 0;
  clear_has_m_exp();
}
inline ::google::protobuf::int32 E_EquipStoveexp::m_exp() const {
  return m_exp_;
}
inline void E_EquipStoveexp::set_m_exp(::google::protobuf::int32 value) {
  set_has_m_exp();
  m_exp_ = value;
}

// optional int32 m_wearQuality = 3;
inline bool E_EquipStoveexp::has_m_wearquality() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void E_EquipStoveexp::set_has_m_wearquality() {
  _has_bits_[0] |= 0x00000004u;
}
inline void E_EquipStoveexp::clear_has_m_wearquality() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void E_EquipStoveexp::clear_m_wearquality() {
  m_wearquality_ = 0;
  clear_has_m_wearquality();
}
inline ::google::protobuf::int32 E_EquipStoveexp::m_wearquality() const {
  return m_wearquality_;
}
inline void E_EquipStoveexp::set_m_wearquality(::google::protobuf::int32 value) {
  set_has_m_wearquality();
  m_wearquality_ = value;
}

// optional int32 m_quality = 4;
inline bool E_EquipStoveexp::has_m_quality() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void E_EquipStoveexp::set_has_m_quality() {
  _has_bits_[0] |= 0x00000008u;
}
inline void E_EquipStoveexp::clear_has_m_quality() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void E_EquipStoveexp::clear_m_quality() {
  m_quality_ = 0;
  clear_has_m_quality();
}
inline ::google::protobuf::int32 E_EquipStoveexp::m_quality() const {
  return m_quality_;
}
inline void E_EquipStoveexp::set_m_quality(::google::protobuf::int32 value) {
  set_has_m_quality();
  m_quality_ = value;
}

// -------------------------------------------------------------------

// Sheet_EquipStoveexp

// repeated .proto_ff.E_EquipStoveexp E_EquipStoveexp_List = 1;
inline int Sheet_EquipStoveexp::e_equipstoveexp_list_size() const {
  return e_equipstoveexp_list_.size();
}
inline void Sheet_EquipStoveexp::clear_e_equipstoveexp_list() {
  e_equipstoveexp_list_.Clear();
}
inline const ::proto_ff::E_EquipStoveexp& Sheet_EquipStoveexp::e_equipstoveexp_list(int index) const {
  return e_equipstoveexp_list_.Get(index);
}
inline ::proto_ff::E_EquipStoveexp* Sheet_EquipStoveexp::mutable_e_equipstoveexp_list(int index) {
  return e_equipstoveexp_list_.Mutable(index);
}
inline ::proto_ff::E_EquipStoveexp* Sheet_EquipStoveexp::add_e_equipstoveexp_list() {
  return e_equipstoveexp_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipStoveexp >&
Sheet_EquipStoveexp::e_equipstoveexp_list() const {
  return e_equipstoveexp_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipStoveexp >*
Sheet_EquipStoveexp::mutable_e_equipstoveexp_list() {
  return &e_equipstoveexp_list_;
}

// -------------------------------------------------------------------

// E_EquipGrade

// optional int32 m_ID = 1;
inline bool E_EquipGrade::has_m_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_EquipGrade::set_has_m_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_EquipGrade::clear_has_m_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_EquipGrade::clear_m_id() {
  m_id_ = 0;
  clear_has_m_id();
}
inline ::google::protobuf::int32 E_EquipGrade::m_id() const {
  return m_id_;
}
inline void E_EquipGrade::set_m_id(::google::protobuf::int32 value) {
  set_has_m_id();
  m_id_ = value;
}

// -------------------------------------------------------------------

// Sheet_EquipGrade

// repeated .proto_ff.E_EquipGrade E_EquipGrade_List = 1;
inline int Sheet_EquipGrade::e_equipgrade_list_size() const {
  return e_equipgrade_list_.size();
}
inline void Sheet_EquipGrade::clear_e_equipgrade_list() {
  e_equipgrade_list_.Clear();
}
inline const ::proto_ff::E_EquipGrade& Sheet_EquipGrade::e_equipgrade_list(int index) const {
  return e_equipgrade_list_.Get(index);
}
inline ::proto_ff::E_EquipGrade* Sheet_EquipGrade::mutable_e_equipgrade_list(int index) {
  return e_equipgrade_list_.Mutable(index);
}
inline ::proto_ff::E_EquipGrade* Sheet_EquipGrade::add_e_equipgrade_list() {
  return e_equipgrade_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipGrade >&
Sheet_EquipGrade::e_equipgrade_list() const {
  return e_equipgrade_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipGrade >*
Sheet_EquipGrade::mutable_e_equipgrade_list() {
  return &e_equipgrade_list_;
}

// -------------------------------------------------------------------

// E_EquipClearAttributeDesc

// optional string m_value = 1;
inline bool E_EquipClearAttributeDesc::has_m_value() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_EquipClearAttributeDesc::set_has_m_value() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_EquipClearAttributeDesc::clear_has_m_value() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_EquipClearAttributeDesc::clear_m_value() {
  if (m_value_ != &::google::protobuf::internal::kEmptyString) {
    m_value_->clear();
  }
  clear_has_m_value();
}
inline const ::std::string& E_EquipClearAttributeDesc::m_value() const {
  return *m_value_;
}
inline void E_EquipClearAttributeDesc::set_m_value(const ::std::string& value) {
  set_has_m_value();
  if (m_value_ == &::google::protobuf::internal::kEmptyString) {
    m_value_ = new ::std::string;
  }
  m_value_->assign(value);
}
inline void E_EquipClearAttributeDesc::set_m_value(const char* value) {
  set_has_m_value();
  if (m_value_ == &::google::protobuf::internal::kEmptyString) {
    m_value_ = new ::std::string;
  }
  m_value_->assign(value);
}
inline void E_EquipClearAttributeDesc::set_m_value(const char* value, size_t size) {
  set_has_m_value();
  if (m_value_ == &::google::protobuf::internal::kEmptyString) {
    m_value_ = new ::std::string;
  }
  m_value_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* E_EquipClearAttributeDesc::mutable_m_value() {
  set_has_m_value();
  if (m_value_ == &::google::protobuf::internal::kEmptyString) {
    m_value_ = new ::std::string;
  }
  return m_value_;
}
inline ::std::string* E_EquipClearAttributeDesc::release_m_value() {
  clear_has_m_value();
  if (m_value_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = m_value_;
    m_value_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void E_EquipClearAttributeDesc::set_allocated_m_value(::std::string* m_value) {
  if (m_value_ != &::google::protobuf::internal::kEmptyString) {
    delete m_value_;
  }
  if (m_value) {
    set_has_m_value();
    m_value_ = m_value;
  } else {
    clear_has_m_value();
    m_value_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// E_EquipClearSectionDesc

// optional string m_up = 1;
inline bool E_EquipClearSectionDesc::has_m_up() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_EquipClearSectionDesc::set_has_m_up() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_EquipClearSectionDesc::clear_has_m_up() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_EquipClearSectionDesc::clear_m_up() {
  if (m_up_ != &::google::protobuf::internal::kEmptyString) {
    m_up_->clear();
  }
  clear_has_m_up();
}
inline const ::std::string& E_EquipClearSectionDesc::m_up() const {
  return *m_up_;
}
inline void E_EquipClearSectionDesc::set_m_up(const ::std::string& value) {
  set_has_m_up();
  if (m_up_ == &::google::protobuf::internal::kEmptyString) {
    m_up_ = new ::std::string;
  }
  m_up_->assign(value);
}
inline void E_EquipClearSectionDesc::set_m_up(const char* value) {
  set_has_m_up();
  if (m_up_ == &::google::protobuf::internal::kEmptyString) {
    m_up_ = new ::std::string;
  }
  m_up_->assign(value);
}
inline void E_EquipClearSectionDesc::set_m_up(const char* value, size_t size) {
  set_has_m_up();
  if (m_up_ == &::google::protobuf::internal::kEmptyString) {
    m_up_ = new ::std::string;
  }
  m_up_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* E_EquipClearSectionDesc::mutable_m_up() {
  set_has_m_up();
  if (m_up_ == &::google::protobuf::internal::kEmptyString) {
    m_up_ = new ::std::string;
  }
  return m_up_;
}
inline ::std::string* E_EquipClearSectionDesc::release_m_up() {
  clear_has_m_up();
  if (m_up_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = m_up_;
    m_up_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void E_EquipClearSectionDesc::set_allocated_m_up(::std::string* m_up) {
  if (m_up_ != &::google::protobuf::internal::kEmptyString) {
    delete m_up_;
  }
  if (m_up) {
    set_has_m_up();
    m_up_ = m_up;
  } else {
    clear_has_m_up();
    m_up_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string m_down = 2;
inline bool E_EquipClearSectionDesc::has_m_down() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_EquipClearSectionDesc::set_has_m_down() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_EquipClearSectionDesc::clear_has_m_down() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_EquipClearSectionDesc::clear_m_down() {
  if (m_down_ != &::google::protobuf::internal::kEmptyString) {
    m_down_->clear();
  }
  clear_has_m_down();
}
inline const ::std::string& E_EquipClearSectionDesc::m_down() const {
  return *m_down_;
}
inline void E_EquipClearSectionDesc::set_m_down(const ::std::string& value) {
  set_has_m_down();
  if (m_down_ == &::google::protobuf::internal::kEmptyString) {
    m_down_ = new ::std::string;
  }
  m_down_->assign(value);
}
inline void E_EquipClearSectionDesc::set_m_down(const char* value) {
  set_has_m_down();
  if (m_down_ == &::google::protobuf::internal::kEmptyString) {
    m_down_ = new ::std::string;
  }
  m_down_->assign(value);
}
inline void E_EquipClearSectionDesc::set_m_down(const char* value, size_t size) {
  set_has_m_down();
  if (m_down_ == &::google::protobuf::internal::kEmptyString) {
    m_down_ = new ::std::string;
  }
  m_down_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* E_EquipClearSectionDesc::mutable_m_down() {
  set_has_m_down();
  if (m_down_ == &::google::protobuf::internal::kEmptyString) {
    m_down_ = new ::std::string;
  }
  return m_down_;
}
inline ::std::string* E_EquipClearSectionDesc::release_m_down() {
  clear_has_m_down();
  if (m_down_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = m_down_;
    m_down_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void E_EquipClearSectionDesc::set_allocated_m_down(::std::string* m_down) {
  if (m_down_ != &::google::protobuf::internal::kEmptyString) {
    delete m_down_;
  }
  if (m_down) {
    set_has_m_down();
    m_down_ = m_down;
  } else {
    clear_has_m_down();
    m_down_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string m_type = 3;
inline bool E_EquipClearSectionDesc::has_m_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void E_EquipClearSectionDesc::set_has_m_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void E_EquipClearSectionDesc::clear_has_m_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void E_EquipClearSectionDesc::clear_m_type() {
  if (m_type_ != &::google::protobuf::internal::kEmptyString) {
    m_type_->clear();
  }
  clear_has_m_type();
}
inline const ::std::string& E_EquipClearSectionDesc::m_type() const {
  return *m_type_;
}
inline void E_EquipClearSectionDesc::set_m_type(const ::std::string& value) {
  set_has_m_type();
  if (m_type_ == &::google::protobuf::internal::kEmptyString) {
    m_type_ = new ::std::string;
  }
  m_type_->assign(value);
}
inline void E_EquipClearSectionDesc::set_m_type(const char* value) {
  set_has_m_type();
  if (m_type_ == &::google::protobuf::internal::kEmptyString) {
    m_type_ = new ::std::string;
  }
  m_type_->assign(value);
}
inline void E_EquipClearSectionDesc::set_m_type(const char* value, size_t size) {
  set_has_m_type();
  if (m_type_ == &::google::protobuf::internal::kEmptyString) {
    m_type_ = new ::std::string;
  }
  m_type_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* E_EquipClearSectionDesc::mutable_m_type() {
  set_has_m_type();
  if (m_type_ == &::google::protobuf::internal::kEmptyString) {
    m_type_ = new ::std::string;
  }
  return m_type_;
}
inline ::std::string* E_EquipClearSectionDesc::release_m_type() {
  clear_has_m_type();
  if (m_type_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = m_type_;
    m_type_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void E_EquipClearSectionDesc::set_allocated_m_type(::std::string* m_type) {
  if (m_type_ != &::google::protobuf::internal::kEmptyString) {
    delete m_type_;
  }
  if (m_type) {
    set_has_m_type();
    m_type_ = m_type;
  } else {
    clear_has_m_type();
    m_type_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string m_g = 4;
inline bool E_EquipClearSectionDesc::has_m_g() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void E_EquipClearSectionDesc::set_has_m_g() {
  _has_bits_[0] |= 0x00000008u;
}
inline void E_EquipClearSectionDesc::clear_has_m_g() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void E_EquipClearSectionDesc::clear_m_g() {
  if (m_g_ != &::google::protobuf::internal::kEmptyString) {
    m_g_->clear();
  }
  clear_has_m_g();
}
inline const ::std::string& E_EquipClearSectionDesc::m_g() const {
  return *m_g_;
}
inline void E_EquipClearSectionDesc::set_m_g(const ::std::string& value) {
  set_has_m_g();
  if (m_g_ == &::google::protobuf::internal::kEmptyString) {
    m_g_ = new ::std::string;
  }
  m_g_->assign(value);
}
inline void E_EquipClearSectionDesc::set_m_g(const char* value) {
  set_has_m_g();
  if (m_g_ == &::google::protobuf::internal::kEmptyString) {
    m_g_ = new ::std::string;
  }
  m_g_->assign(value);
}
inline void E_EquipClearSectionDesc::set_m_g(const char* value, size_t size) {
  set_has_m_g();
  if (m_g_ == &::google::protobuf::internal::kEmptyString) {
    m_g_ = new ::std::string;
  }
  m_g_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* E_EquipClearSectionDesc::mutable_m_g() {
  set_has_m_g();
  if (m_g_ == &::google::protobuf::internal::kEmptyString) {
    m_g_ = new ::std::string;
  }
  return m_g_;
}
inline ::std::string* E_EquipClearSectionDesc::release_m_g() {
  clear_has_m_g();
  if (m_g_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = m_g_;
    m_g_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void E_EquipClearSectionDesc::set_allocated_m_g(::std::string* m_g) {
  if (m_g_ != &::google::protobuf::internal::kEmptyString) {
    delete m_g_;
  }
  if (m_g) {
    set_has_m_g();
    m_g_ = m_g;
  } else {
    clear_has_m_g();
    m_g_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 m_p = 5;
inline bool E_EquipClearSectionDesc::has_m_p() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void E_EquipClearSectionDesc::set_has_m_p() {
  _has_bits_[0] |= 0x00000010u;
}
inline void E_EquipClearSectionDesc::clear_has_m_p() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void E_EquipClearSectionDesc::clear_m_p() {
  m_p_ = 0;
  clear_has_m_p();
}
inline ::google::protobuf::int32 E_EquipClearSectionDesc::m_p() const {
  return m_p_;
}
inline void E_EquipClearSectionDesc::set_m_p(::google::protobuf::int32 value) {
  set_has_m_p();
  m_p_ = value;
}

// -------------------------------------------------------------------

// E_EquipClear

// optional int32 m_id = 1;
inline bool E_EquipClear::has_m_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_EquipClear::set_has_m_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_EquipClear::clear_has_m_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_EquipClear::clear_m_id() {
  m_id_ = 0;
  clear_has_m_id();
}
inline ::google::protobuf::int32 E_EquipClear::m_id() const {
  return m_id_;
}
inline void E_EquipClear::set_m_id(::google::protobuf::int32 value) {
  set_has_m_id();
  m_id_ = value;
}

// optional string m_value = 2;
inline bool E_EquipClear::has_m_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_EquipClear::set_has_m_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_EquipClear::clear_has_m_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_EquipClear::clear_m_value() {
  if (m_value_ != &::google::protobuf::internal::kEmptyString) {
    m_value_->clear();
  }
  clear_has_m_value();
}
inline const ::std::string& E_EquipClear::m_value() const {
  return *m_value_;
}
inline void E_EquipClear::set_m_value(const ::std::string& value) {
  set_has_m_value();
  if (m_value_ == &::google::protobuf::internal::kEmptyString) {
    m_value_ = new ::std::string;
  }
  m_value_->assign(value);
}
inline void E_EquipClear::set_m_value(const char* value) {
  set_has_m_value();
  if (m_value_ == &::google::protobuf::internal::kEmptyString) {
    m_value_ = new ::std::string;
  }
  m_value_->assign(value);
}
inline void E_EquipClear::set_m_value(const char* value, size_t size) {
  set_has_m_value();
  if (m_value_ == &::google::protobuf::internal::kEmptyString) {
    m_value_ = new ::std::string;
  }
  m_value_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* E_EquipClear::mutable_m_value() {
  set_has_m_value();
  if (m_value_ == &::google::protobuf::internal::kEmptyString) {
    m_value_ = new ::std::string;
  }
  return m_value_;
}
inline ::std::string* E_EquipClear::release_m_value() {
  clear_has_m_value();
  if (m_value_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = m_value_;
    m_value_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void E_EquipClear::set_allocated_m_value(::std::string* m_value) {
  if (m_value_ != &::google::protobuf::internal::kEmptyString) {
    delete m_value_;
  }
  if (m_value) {
    set_has_m_value();
    m_value_ = m_value;
  } else {
    clear_has_m_value();
    m_value_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 m_unlockItem = 3;
inline bool E_EquipClear::has_m_unlockitem() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void E_EquipClear::set_has_m_unlockitem() {
  _has_bits_[0] |= 0x00000004u;
}
inline void E_EquipClear::clear_has_m_unlockitem() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void E_EquipClear::clear_m_unlockitem() {
  m_unlockitem_ = 0;
  clear_has_m_unlockitem();
}
inline ::google::protobuf::int32 E_EquipClear::m_unlockitem() const {
  return m_unlockitem_;
}
inline void E_EquipClear::set_m_unlockitem(::google::protobuf::int32 value) {
  set_has_m_unlockitem();
  m_unlockitem_ = value;
}

// optional string m_unlockNum = 4;
inline bool E_EquipClear::has_m_unlocknum() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void E_EquipClear::set_has_m_unlocknum() {
  _has_bits_[0] |= 0x00000008u;
}
inline void E_EquipClear::clear_has_m_unlocknum() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void E_EquipClear::clear_m_unlocknum() {
  if (m_unlocknum_ != &::google::protobuf::internal::kEmptyString) {
    m_unlocknum_->clear();
  }
  clear_has_m_unlocknum();
}
inline const ::std::string& E_EquipClear::m_unlocknum() const {
  return *m_unlocknum_;
}
inline void E_EquipClear::set_m_unlocknum(const ::std::string& value) {
  set_has_m_unlocknum();
  if (m_unlocknum_ == &::google::protobuf::internal::kEmptyString) {
    m_unlocknum_ = new ::std::string;
  }
  m_unlocknum_->assign(value);
}
inline void E_EquipClear::set_m_unlocknum(const char* value) {
  set_has_m_unlocknum();
  if (m_unlocknum_ == &::google::protobuf::internal::kEmptyString) {
    m_unlocknum_ = new ::std::string;
  }
  m_unlocknum_->assign(value);
}
inline void E_EquipClear::set_m_unlocknum(const char* value, size_t size) {
  set_has_m_unlocknum();
  if (m_unlocknum_ == &::google::protobuf::internal::kEmptyString) {
    m_unlocknum_ = new ::std::string;
  }
  m_unlocknum_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* E_EquipClear::mutable_m_unlocknum() {
  set_has_m_unlocknum();
  if (m_unlocknum_ == &::google::protobuf::internal::kEmptyString) {
    m_unlocknum_ = new ::std::string;
  }
  return m_unlocknum_;
}
inline ::std::string* E_EquipClear::release_m_unlocknum() {
  clear_has_m_unlocknum();
  if (m_unlocknum_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = m_unlocknum_;
    m_unlocknum_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void E_EquipClear::set_allocated_m_unlocknum(::std::string* m_unlocknum) {
  if (m_unlocknum_ != &::google::protobuf::internal::kEmptyString) {
    delete m_unlocknum_;
  }
  if (m_unlocknum) {
    set_has_m_unlocknum();
    m_unlocknum_ = m_unlocknum;
  } else {
    clear_has_m_unlocknum();
    m_unlocknum_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int64 m_consumeId = 5;
inline bool E_EquipClear::has_m_consumeid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void E_EquipClear::set_has_m_consumeid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void E_EquipClear::clear_has_m_consumeid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void E_EquipClear::clear_m_consumeid() {
  m_consumeid_ = GOOGLE_LONGLONG(0);
  clear_has_m_consumeid();
}
inline ::google::protobuf::int64 E_EquipClear::m_consumeid() const {
  return m_consumeid_;
}
inline void E_EquipClear::set_m_consumeid(::google::protobuf::int64 value) {
  set_has_m_consumeid();
  m_consumeid_ = value;
}

// optional string m_consumeNum = 6;
inline bool E_EquipClear::has_m_consumenum() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void E_EquipClear::set_has_m_consumenum() {
  _has_bits_[0] |= 0x00000020u;
}
inline void E_EquipClear::clear_has_m_consumenum() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void E_EquipClear::clear_m_consumenum() {
  if (m_consumenum_ != &::google::protobuf::internal::kEmptyString) {
    m_consumenum_->clear();
  }
  clear_has_m_consumenum();
}
inline const ::std::string& E_EquipClear::m_consumenum() const {
  return *m_consumenum_;
}
inline void E_EquipClear::set_m_consumenum(const ::std::string& value) {
  set_has_m_consumenum();
  if (m_consumenum_ == &::google::protobuf::internal::kEmptyString) {
    m_consumenum_ = new ::std::string;
  }
  m_consumenum_->assign(value);
}
inline void E_EquipClear::set_m_consumenum(const char* value) {
  set_has_m_consumenum();
  if (m_consumenum_ == &::google::protobuf::internal::kEmptyString) {
    m_consumenum_ = new ::std::string;
  }
  m_consumenum_->assign(value);
}
inline void E_EquipClear::set_m_consumenum(const char* value, size_t size) {
  set_has_m_consumenum();
  if (m_consumenum_ == &::google::protobuf::internal::kEmptyString) {
    m_consumenum_ = new ::std::string;
  }
  m_consumenum_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* E_EquipClear::mutable_m_consumenum() {
  set_has_m_consumenum();
  if (m_consumenum_ == &::google::protobuf::internal::kEmptyString) {
    m_consumenum_ = new ::std::string;
  }
  return m_consumenum_;
}
inline ::std::string* E_EquipClear::release_m_consumenum() {
  clear_has_m_consumenum();
  if (m_consumenum_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = m_consumenum_;
    m_consumenum_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void E_EquipClear::set_allocated_m_consumenum(::std::string* m_consumenum) {
  if (m_consumenum_ != &::google::protobuf::internal::kEmptyString) {
    delete m_consumenum_;
  }
  if (m_consumenum) {
    set_has_m_consumenum();
    m_consumenum_ = m_consumenum;
  } else {
    clear_has_m_consumenum();
    m_consumenum_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string m_lockingId = 7;
inline bool E_EquipClear::has_m_lockingid() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void E_EquipClear::set_has_m_lockingid() {
  _has_bits_[0] |= 0x00000040u;
}
inline void E_EquipClear::clear_has_m_lockingid() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void E_EquipClear::clear_m_lockingid() {
  if (m_lockingid_ != &::google::protobuf::internal::kEmptyString) {
    m_lockingid_->clear();
  }
  clear_has_m_lockingid();
}
inline const ::std::string& E_EquipClear::m_lockingid() const {
  return *m_lockingid_;
}
inline void E_EquipClear::set_m_lockingid(const ::std::string& value) {
  set_has_m_lockingid();
  if (m_lockingid_ == &::google::protobuf::internal::kEmptyString) {
    m_lockingid_ = new ::std::string;
  }
  m_lockingid_->assign(value);
}
inline void E_EquipClear::set_m_lockingid(const char* value) {
  set_has_m_lockingid();
  if (m_lockingid_ == &::google::protobuf::internal::kEmptyString) {
    m_lockingid_ = new ::std::string;
  }
  m_lockingid_->assign(value);
}
inline void E_EquipClear::set_m_lockingid(const char* value, size_t size) {
  set_has_m_lockingid();
  if (m_lockingid_ == &::google::protobuf::internal::kEmptyString) {
    m_lockingid_ = new ::std::string;
  }
  m_lockingid_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* E_EquipClear::mutable_m_lockingid() {
  set_has_m_lockingid();
  if (m_lockingid_ == &::google::protobuf::internal::kEmptyString) {
    m_lockingid_ = new ::std::string;
  }
  return m_lockingid_;
}
inline ::std::string* E_EquipClear::release_m_lockingid() {
  clear_has_m_lockingid();
  if (m_lockingid_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = m_lockingid_;
    m_lockingid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void E_EquipClear::set_allocated_m_lockingid(::std::string* m_lockingid) {
  if (m_lockingid_ != &::google::protobuf::internal::kEmptyString) {
    delete m_lockingid_;
  }
  if (m_lockingid) {
    set_has_m_lockingid();
    m_lockingid_ = m_lockingid;
  } else {
    clear_has_m_lockingid();
    m_lockingid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string m_lockingNum = 8;
inline bool E_EquipClear::has_m_lockingnum() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void E_EquipClear::set_has_m_lockingnum() {
  _has_bits_[0] |= 0x00000080u;
}
inline void E_EquipClear::clear_has_m_lockingnum() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void E_EquipClear::clear_m_lockingnum() {
  if (m_lockingnum_ != &::google::protobuf::internal::kEmptyString) {
    m_lockingnum_->clear();
  }
  clear_has_m_lockingnum();
}
inline const ::std::string& E_EquipClear::m_lockingnum() const {
  return *m_lockingnum_;
}
inline void E_EquipClear::set_m_lockingnum(const ::std::string& value) {
  set_has_m_lockingnum();
  if (m_lockingnum_ == &::google::protobuf::internal::kEmptyString) {
    m_lockingnum_ = new ::std::string;
  }
  m_lockingnum_->assign(value);
}
inline void E_EquipClear::set_m_lockingnum(const char* value) {
  set_has_m_lockingnum();
  if (m_lockingnum_ == &::google::protobuf::internal::kEmptyString) {
    m_lockingnum_ = new ::std::string;
  }
  m_lockingnum_->assign(value);
}
inline void E_EquipClear::set_m_lockingnum(const char* value, size_t size) {
  set_has_m_lockingnum();
  if (m_lockingnum_ == &::google::protobuf::internal::kEmptyString) {
    m_lockingnum_ = new ::std::string;
  }
  m_lockingnum_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* E_EquipClear::mutable_m_lockingnum() {
  set_has_m_lockingnum();
  if (m_lockingnum_ == &::google::protobuf::internal::kEmptyString) {
    m_lockingnum_ = new ::std::string;
  }
  return m_lockingnum_;
}
inline ::std::string* E_EquipClear::release_m_lockingnum() {
  clear_has_m_lockingnum();
  if (m_lockingnum_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = m_lockingnum_;
    m_lockingnum_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void E_EquipClear::set_allocated_m_lockingnum(::std::string* m_lockingnum) {
  if (m_lockingnum_ != &::google::protobuf::internal::kEmptyString) {
    delete m_lockingnum_;
  }
  if (m_lockingnum) {
    set_has_m_lockingnum();
    m_lockingnum_ = m_lockingnum;
  } else {
    clear_has_m_lockingnum();
    m_lockingnum_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// repeated .proto_ff.E_EquipClearAttributeDesc m_attribute = 9;
inline int E_EquipClear::m_attribute_size() const {
  return m_attribute_.size();
}
inline void E_EquipClear::clear_m_attribute() {
  m_attribute_.Clear();
}
inline const ::proto_ff::E_EquipClearAttributeDesc& E_EquipClear::m_attribute(int index) const {
  return m_attribute_.Get(index);
}
inline ::proto_ff::E_EquipClearAttributeDesc* E_EquipClear::mutable_m_attribute(int index) {
  return m_attribute_.Mutable(index);
}
inline ::proto_ff::E_EquipClearAttributeDesc* E_EquipClear::add_m_attribute() {
  return m_attribute_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipClearAttributeDesc >&
E_EquipClear::m_attribute() const {
  return m_attribute_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipClearAttributeDesc >*
E_EquipClear::mutable_m_attribute() {
  return &m_attribute_;
}

// repeated .proto_ff.E_EquipClearSectionDesc m_Section = 10;
inline int E_EquipClear::m_section_size() const {
  return m_section_.size();
}
inline void E_EquipClear::clear_m_section() {
  m_section_.Clear();
}
inline const ::proto_ff::E_EquipClearSectionDesc& E_EquipClear::m_section(int index) const {
  return m_section_.Get(index);
}
inline ::proto_ff::E_EquipClearSectionDesc* E_EquipClear::mutable_m_section(int index) {
  return m_section_.Mutable(index);
}
inline ::proto_ff::E_EquipClearSectionDesc* E_EquipClear::add_m_section() {
  return m_section_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipClearSectionDesc >&
E_EquipClear::m_section() const {
  return m_section_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipClearSectionDesc >*
E_EquipClear::mutable_m_section() {
  return &m_section_;
}

// -------------------------------------------------------------------

// Sheet_EquipClear

// repeated .proto_ff.E_EquipClear E_EquipClear_List = 1;
inline int Sheet_EquipClear::e_equipclear_list_size() const {
  return e_equipclear_list_.size();
}
inline void Sheet_EquipClear::clear_e_equipclear_list() {
  e_equipclear_list_.Clear();
}
inline const ::proto_ff::E_EquipClear& Sheet_EquipClear::e_equipclear_list(int index) const {
  return e_equipclear_list_.Get(index);
}
inline ::proto_ff::E_EquipClear* Sheet_EquipClear::mutable_e_equipclear_list(int index) {
  return e_equipclear_list_.Mutable(index);
}
inline ::proto_ff::E_EquipClear* Sheet_EquipClear::add_e_equipclear_list() {
  return e_equipclear_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipClear >&
Sheet_EquipClear::e_equipclear_list() const {
  return e_equipclear_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipClear >*
Sheet_EquipClear::mutable_e_equipclear_list() {
  return &e_equipclear_list_;
}

// -------------------------------------------------------------------

// E_EquipSuitAttributeDesc

// optional string m_value = 1;
inline bool E_EquipSuitAttributeDesc::has_m_value() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_EquipSuitAttributeDesc::set_has_m_value() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_EquipSuitAttributeDesc::clear_has_m_value() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_EquipSuitAttributeDesc::clear_m_value() {
  if (m_value_ != &::google::protobuf::internal::kEmptyString) {
    m_value_->clear();
  }
  clear_has_m_value();
}
inline const ::std::string& E_EquipSuitAttributeDesc::m_value() const {
  return *m_value_;
}
inline void E_EquipSuitAttributeDesc::set_m_value(const ::std::string& value) {
  set_has_m_value();
  if (m_value_ == &::google::protobuf::internal::kEmptyString) {
    m_value_ = new ::std::string;
  }
  m_value_->assign(value);
}
inline void E_EquipSuitAttributeDesc::set_m_value(const char* value) {
  set_has_m_value();
  if (m_value_ == &::google::protobuf::internal::kEmptyString) {
    m_value_ = new ::std::string;
  }
  m_value_->assign(value);
}
inline void E_EquipSuitAttributeDesc::set_m_value(const char* value, size_t size) {
  set_has_m_value();
  if (m_value_ == &::google::protobuf::internal::kEmptyString) {
    m_value_ = new ::std::string;
  }
  m_value_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* E_EquipSuitAttributeDesc::mutable_m_value() {
  set_has_m_value();
  if (m_value_ == &::google::protobuf::internal::kEmptyString) {
    m_value_ = new ::std::string;
  }
  return m_value_;
}
inline ::std::string* E_EquipSuitAttributeDesc::release_m_value() {
  clear_has_m_value();
  if (m_value_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = m_value_;
    m_value_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void E_EquipSuitAttributeDesc::set_allocated_m_value(::std::string* m_value) {
  if (m_value_ != &::google::protobuf::internal::kEmptyString) {
    delete m_value_;
  }
  if (m_value) {
    set_has_m_value();
    m_value_ = m_value;
  } else {
    clear_has_m_value();
    m_value_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 m_sctivation = 2;
inline bool E_EquipSuitAttributeDesc::has_m_sctivation() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_EquipSuitAttributeDesc::set_has_m_sctivation() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_EquipSuitAttributeDesc::clear_has_m_sctivation() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_EquipSuitAttributeDesc::clear_m_sctivation() {
  m_sctivation_ = 0;
  clear_has_m_sctivation();
}
inline ::google::protobuf::int32 E_EquipSuitAttributeDesc::m_sctivation() const {
  return m_sctivation_;
}
inline void E_EquipSuitAttributeDesc::set_m_sctivation(::google::protobuf::int32 value) {
  set_has_m_sctivation();
  m_sctivation_ = value;
}

// -------------------------------------------------------------------

// E_EquipSuit

// optional int64 m_id = 1;
inline bool E_EquipSuit::has_m_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_EquipSuit::set_has_m_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_EquipSuit::clear_has_m_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_EquipSuit::clear_m_id() {
  m_id_ = GOOGLE_LONGLONG(0);
  clear_has_m_id();
}
inline ::google::protobuf::int64 E_EquipSuit::m_id() const {
  return m_id_;
}
inline void E_EquipSuit::set_m_id(::google::protobuf::int64 value) {
  set_has_m_id();
  m_id_ = value;
}

// optional int32 m_type = 2;
inline bool E_EquipSuit::has_m_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_EquipSuit::set_has_m_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_EquipSuit::clear_has_m_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_EquipSuit::clear_m_type() {
  m_type_ = 0;
  clear_has_m_type();
}
inline ::google::protobuf::int32 E_EquipSuit::m_type() const {
  return m_type_;
}
inline void E_EquipSuit::set_m_type(::google::protobuf::int32 value) {
  set_has_m_type();
  m_type_ = value;
}

// optional int32 m_suitLv = 3;
inline bool E_EquipSuit::has_m_suitlv() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void E_EquipSuit::set_has_m_suitlv() {
  _has_bits_[0] |= 0x00000004u;
}
inline void E_EquipSuit::clear_has_m_suitlv() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void E_EquipSuit::clear_m_suitlv() {
  m_suitlv_ = 0;
  clear_has_m_suitlv();
}
inline ::google::protobuf::int32 E_EquipSuit::m_suitlv() const {
  return m_suitlv_;
}
inline void E_EquipSuit::set_m_suitlv(::google::protobuf::int32 value) {
  set_has_m_suitlv();
  m_suitlv_ = value;
}

// optional int32 m_wearQuality = 4;
inline bool E_EquipSuit::has_m_wearquality() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void E_EquipSuit::set_has_m_wearquality() {
  _has_bits_[0] |= 0x00000008u;
}
inline void E_EquipSuit::clear_has_m_wearquality() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void E_EquipSuit::clear_m_wearquality() {
  m_wearquality_ = 0;
  clear_has_m_wearquality();
}
inline ::google::protobuf::int32 E_EquipSuit::m_wearquality() const {
  return m_wearquality_;
}
inline void E_EquipSuit::set_m_wearquality(::google::protobuf::int32 value) {
  set_has_m_wearquality();
  m_wearquality_ = value;
}

// optional int32 m_colour = 5;
inline bool E_EquipSuit::has_m_colour() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void E_EquipSuit::set_has_m_colour() {
  _has_bits_[0] |= 0x00000010u;
}
inline void E_EquipSuit::clear_has_m_colour() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void E_EquipSuit::clear_m_colour() {
  m_colour_ = 0;
  clear_has_m_colour();
}
inline ::google::protobuf::int32 E_EquipSuit::m_colour() const {
  return m_colour_;
}
inline void E_EquipSuit::set_m_colour(::google::protobuf::int32 value) {
  set_has_m_colour();
  m_colour_ = value;
}

// optional string m_afterName = 6;
inline bool E_EquipSuit::has_m_aftername() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void E_EquipSuit::set_has_m_aftername() {
  _has_bits_[0] |= 0x00000020u;
}
inline void E_EquipSuit::clear_has_m_aftername() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void E_EquipSuit::clear_m_aftername() {
  if (m_aftername_ != &::google::protobuf::internal::kEmptyString) {
    m_aftername_->clear();
  }
  clear_has_m_aftername();
}
inline const ::std::string& E_EquipSuit::m_aftername() const {
  return *m_aftername_;
}
inline void E_EquipSuit::set_m_aftername(const ::std::string& value) {
  set_has_m_aftername();
  if (m_aftername_ == &::google::protobuf::internal::kEmptyString) {
    m_aftername_ = new ::std::string;
  }
  m_aftername_->assign(value);
}
inline void E_EquipSuit::set_m_aftername(const char* value) {
  set_has_m_aftername();
  if (m_aftername_ == &::google::protobuf::internal::kEmptyString) {
    m_aftername_ = new ::std::string;
  }
  m_aftername_->assign(value);
}
inline void E_EquipSuit::set_m_aftername(const char* value, size_t size) {
  set_has_m_aftername();
  if (m_aftername_ == &::google::protobuf::internal::kEmptyString) {
    m_aftername_ = new ::std::string;
  }
  m_aftername_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* E_EquipSuit::mutable_m_aftername() {
  set_has_m_aftername();
  if (m_aftername_ == &::google::protobuf::internal::kEmptyString) {
    m_aftername_ = new ::std::string;
  }
  return m_aftername_;
}
inline ::std::string* E_EquipSuit::release_m_aftername() {
  clear_has_m_aftername();
  if (m_aftername_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = m_aftername_;
    m_aftername_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void E_EquipSuit::set_allocated_m_aftername(::std::string* m_aftername) {
  if (m_aftername_ != &::google::protobuf::internal::kEmptyString) {
    delete m_aftername_;
  }
  if (m_aftername) {
    set_has_m_aftername();
    m_aftername_ = m_aftername;
  } else {
    clear_has_m_aftername();
    m_aftername_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 m_suiteValue = 7;
inline bool E_EquipSuit::has_m_suitevalue() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void E_EquipSuit::set_has_m_suitevalue() {
  _has_bits_[0] |= 0x00000040u;
}
inline void E_EquipSuit::clear_has_m_suitevalue() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void E_EquipSuit::clear_m_suitevalue() {
  m_suitevalue_ = 0;
  clear_has_m_suitevalue();
}
inline ::google::protobuf::int32 E_EquipSuit::m_suitevalue() const {
  return m_suitevalue_;
}
inline void E_EquipSuit::set_m_suitevalue(::google::protobuf::int32 value) {
  set_has_m_suitevalue();
  m_suitevalue_ = value;
}

// repeated .proto_ff.E_EquipSuitAttributeDesc m_attribute = 8;
inline int E_EquipSuit::m_attribute_size() const {
  return m_attribute_.size();
}
inline void E_EquipSuit::clear_m_attribute() {
  m_attribute_.Clear();
}
inline const ::proto_ff::E_EquipSuitAttributeDesc& E_EquipSuit::m_attribute(int index) const {
  return m_attribute_.Get(index);
}
inline ::proto_ff::E_EquipSuitAttributeDesc* E_EquipSuit::mutable_m_attribute(int index) {
  return m_attribute_.Mutable(index);
}
inline ::proto_ff::E_EquipSuitAttributeDesc* E_EquipSuit::add_m_attribute() {
  return m_attribute_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipSuitAttributeDesc >&
E_EquipSuit::m_attribute() const {
  return m_attribute_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipSuitAttributeDesc >*
E_EquipSuit::mutable_m_attribute() {
  return &m_attribute_;
}

// repeated string m_malePosition = 9;
inline int E_EquipSuit::m_maleposition_size() const {
  return m_maleposition_.size();
}
inline void E_EquipSuit::clear_m_maleposition() {
  m_maleposition_.Clear();
}
inline const ::std::string& E_EquipSuit::m_maleposition(int index) const {
  return m_maleposition_.Get(index);
}
inline ::std::string* E_EquipSuit::mutable_m_maleposition(int index) {
  return m_maleposition_.Mutable(index);
}
inline void E_EquipSuit::set_m_maleposition(int index, const ::std::string& value) {
  m_maleposition_.Mutable(index)->assign(value);
}
inline void E_EquipSuit::set_m_maleposition(int index, const char* value) {
  m_maleposition_.Mutable(index)->assign(value);
}
inline void E_EquipSuit::set_m_maleposition(int index, const char* value, size_t size) {
  m_maleposition_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* E_EquipSuit::add_m_maleposition() {
  return m_maleposition_.Add();
}
inline void E_EquipSuit::add_m_maleposition(const ::std::string& value) {
  m_maleposition_.Add()->assign(value);
}
inline void E_EquipSuit::add_m_maleposition(const char* value) {
  m_maleposition_.Add()->assign(value);
}
inline void E_EquipSuit::add_m_maleposition(const char* value, size_t size) {
  m_maleposition_.Add()->assign(reinterpret_cast<const char*>(value), size);
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
E_EquipSuit::m_maleposition() const {
  return m_maleposition_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
E_EquipSuit::mutable_m_maleposition() {
  return &m_maleposition_;
}

// repeated string m_femalePosition = 10;
inline int E_EquipSuit::m_femaleposition_size() const {
  return m_femaleposition_.size();
}
inline void E_EquipSuit::clear_m_femaleposition() {
  m_femaleposition_.Clear();
}
inline const ::std::string& E_EquipSuit::m_femaleposition(int index) const {
  return m_femaleposition_.Get(index);
}
inline ::std::string* E_EquipSuit::mutable_m_femaleposition(int index) {
  return m_femaleposition_.Mutable(index);
}
inline void E_EquipSuit::set_m_femaleposition(int index, const ::std::string& value) {
  m_femaleposition_.Mutable(index)->assign(value);
}
inline void E_EquipSuit::set_m_femaleposition(int index, const char* value) {
  m_femaleposition_.Mutable(index)->assign(value);
}
inline void E_EquipSuit::set_m_femaleposition(int index, const char* value, size_t size) {
  m_femaleposition_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* E_EquipSuit::add_m_femaleposition() {
  return m_femaleposition_.Add();
}
inline void E_EquipSuit::add_m_femaleposition(const ::std::string& value) {
  m_femaleposition_.Add()->assign(value);
}
inline void E_EquipSuit::add_m_femaleposition(const char* value) {
  m_femaleposition_.Add()->assign(value);
}
inline void E_EquipSuit::add_m_femaleposition(const char* value, size_t size) {
  m_femaleposition_.Add()->assign(reinterpret_cast<const char*>(value), size);
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
E_EquipSuit::m_femaleposition() const {
  return m_femaleposition_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
E_EquipSuit::mutable_m_femaleposition() {
  return &m_femaleposition_;
}

// -------------------------------------------------------------------

// Sheet_EquipSuit

// repeated .proto_ff.E_EquipSuit E_EquipSuit_List = 1;
inline int Sheet_EquipSuit::e_equipsuit_list_size() const {
  return e_equipsuit_list_.size();
}
inline void Sheet_EquipSuit::clear_e_equipsuit_list() {
  e_equipsuit_list_.Clear();
}
inline const ::proto_ff::E_EquipSuit& Sheet_EquipSuit::e_equipsuit_list(int index) const {
  return e_equipsuit_list_.Get(index);
}
inline ::proto_ff::E_EquipSuit* Sheet_EquipSuit::mutable_e_equipsuit_list(int index) {
  return e_equipsuit_list_.Mutable(index);
}
inline ::proto_ff::E_EquipSuit* Sheet_EquipSuit::add_e_equipsuit_list() {
  return e_equipsuit_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipSuit >&
Sheet_EquipSuit::e_equipsuit_list() const {
  return e_equipsuit_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipSuit >*
Sheet_EquipSuit::mutable_e_equipsuit_list() {
  return &e_equipsuit_list_;
}

// -------------------------------------------------------------------

// E_EquipBreakBreakDesc

// optional int32 m_Num = 1;
inline bool E_EquipBreakBreakDesc::has_m_num() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_EquipBreakBreakDesc::set_has_m_num() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_EquipBreakBreakDesc::clear_has_m_num() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_EquipBreakBreakDesc::clear_m_num() {
  m_num_ = 0;
  clear_has_m_num();
}
inline ::google::protobuf::int32 E_EquipBreakBreakDesc::m_num() const {
  return m_num_;
}
inline void E_EquipBreakBreakDesc::set_m_num(::google::protobuf::int32 value) {
  set_has_m_num();
  m_num_ = value;
}

// optional int32 m_Item = 2;
inline bool E_EquipBreakBreakDesc::has_m_item() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_EquipBreakBreakDesc::set_has_m_item() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_EquipBreakBreakDesc::clear_has_m_item() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_EquipBreakBreakDesc::clear_m_item() {
  m_item_ = 0;
  clear_has_m_item();
}
inline ::google::protobuf::int32 E_EquipBreakBreakDesc::m_item() const {
  return m_item_;
}
inline void E_EquipBreakBreakDesc::set_m_item(::google::protobuf::int32 value) {
  set_has_m_item();
  m_item_ = value;
}

// -------------------------------------------------------------------

// E_EquipBreak

// optional int32 m_Lv = 1;
inline bool E_EquipBreak::has_m_lv() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_EquipBreak::set_has_m_lv() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_EquipBreak::clear_has_m_lv() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_EquipBreak::clear_m_lv() {
  m_lv_ = 0;
  clear_has_m_lv();
}
inline ::google::protobuf::int32 E_EquipBreak::m_lv() const {
  return m_lv_;
}
inline void E_EquipBreak::set_m_lv(::google::protobuf::int32 value) {
  set_has_m_lv();
  m_lv_ = value;
}

// optional int32 m_step = 2;
inline bool E_EquipBreak::has_m_step() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_EquipBreak::set_has_m_step() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_EquipBreak::clear_has_m_step() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_EquipBreak::clear_m_step() {
  m_step_ = 0;
  clear_has_m_step();
}
inline ::google::protobuf::int32 E_EquipBreak::m_step() const {
  return m_step_;
}
inline void E_EquipBreak::set_m_step(::google::protobuf::int32 value) {
  set_has_m_step();
  m_step_ = value;
}

// optional string m_positionType = 3;
inline bool E_EquipBreak::has_m_positiontype() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void E_EquipBreak::set_has_m_positiontype() {
  _has_bits_[0] |= 0x00000004u;
}
inline void E_EquipBreak::clear_has_m_positiontype() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void E_EquipBreak::clear_m_positiontype() {
  if (m_positiontype_ != &::google::protobuf::internal::kEmptyString) {
    m_positiontype_->clear();
  }
  clear_has_m_positiontype();
}
inline const ::std::string& E_EquipBreak::m_positiontype() const {
  return *m_positiontype_;
}
inline void E_EquipBreak::set_m_positiontype(const ::std::string& value) {
  set_has_m_positiontype();
  if (m_positiontype_ == &::google::protobuf::internal::kEmptyString) {
    m_positiontype_ = new ::std::string;
  }
  m_positiontype_->assign(value);
}
inline void E_EquipBreak::set_m_positiontype(const char* value) {
  set_has_m_positiontype();
  if (m_positiontype_ == &::google::protobuf::internal::kEmptyString) {
    m_positiontype_ = new ::std::string;
  }
  m_positiontype_->assign(value);
}
inline void E_EquipBreak::set_m_positiontype(const char* value, size_t size) {
  set_has_m_positiontype();
  if (m_positiontype_ == &::google::protobuf::internal::kEmptyString) {
    m_positiontype_ = new ::std::string;
  }
  m_positiontype_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* E_EquipBreak::mutable_m_positiontype() {
  set_has_m_positiontype();
  if (m_positiontype_ == &::google::protobuf::internal::kEmptyString) {
    m_positiontype_ = new ::std::string;
  }
  return m_positiontype_;
}
inline ::std::string* E_EquipBreak::release_m_positiontype() {
  clear_has_m_positiontype();
  if (m_positiontype_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = m_positiontype_;
    m_positiontype_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void E_EquipBreak::set_allocated_m_positiontype(::std::string* m_positiontype) {
  if (m_positiontype_ != &::google::protobuf::internal::kEmptyString) {
    delete m_positiontype_;
  }
  if (m_positiontype) {
    set_has_m_positiontype();
    m_positiontype_ = m_positiontype;
  } else {
    clear_has_m_positiontype();
    m_positiontype_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 m_basic = 4;
inline bool E_EquipBreak::has_m_basic() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void E_EquipBreak::set_has_m_basic() {
  _has_bits_[0] |= 0x00000008u;
}
inline void E_EquipBreak::clear_has_m_basic() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void E_EquipBreak::clear_m_basic() {
  m_basic_ = 0;
  clear_has_m_basic();
}
inline ::google::protobuf::int32 E_EquipBreak::m_basic() const {
  return m_basic_;
}
inline void E_EquipBreak::set_m_basic(::google::protobuf::int32 value) {
  set_has_m_basic();
  m_basic_ = value;
}

// optional int32 m_star = 5;
inline bool E_EquipBreak::has_m_star() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void E_EquipBreak::set_has_m_star() {
  _has_bits_[0] |= 0x00000010u;
}
inline void E_EquipBreak::clear_has_m_star() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void E_EquipBreak::clear_m_star() {
  m_star_ = 0;
  clear_has_m_star();
}
inline ::google::protobuf::int32 E_EquipBreak::m_star() const {
  return m_star_;
}
inline void E_EquipBreak::set_m_star(::google::protobuf::int32 value) {
  set_has_m_star();
  m_star_ = value;
}

// repeated .proto_ff.E_EquipBreakBreakDesc m_break = 6;
inline int E_EquipBreak::m_break_size() const {
  return m_break_.size();
}
inline void E_EquipBreak::clear_m_break() {
  m_break_.Clear();
}
inline const ::proto_ff::E_EquipBreakBreakDesc& E_EquipBreak::m_break(int index) const {
  return m_break_.Get(index);
}
inline ::proto_ff::E_EquipBreakBreakDesc* E_EquipBreak::mutable_m_break(int index) {
  return m_break_.Mutable(index);
}
inline ::proto_ff::E_EquipBreakBreakDesc* E_EquipBreak::add_m_break() {
  return m_break_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipBreakBreakDesc >&
E_EquipBreak::m_break() const {
  return m_break_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipBreakBreakDesc >*
E_EquipBreak::mutable_m_break() {
  return &m_break_;
}

// -------------------------------------------------------------------

// Sheet_EquipBreak

// repeated .proto_ff.E_EquipBreak E_EquipBreak_List = 1;
inline int Sheet_EquipBreak::e_equipbreak_list_size() const {
  return e_equipbreak_list_.size();
}
inline void Sheet_EquipBreak::clear_e_equipbreak_list() {
  e_equipbreak_list_.Clear();
}
inline const ::proto_ff::E_EquipBreak& Sheet_EquipBreak::e_equipbreak_list(int index) const {
  return e_equipbreak_list_.Get(index);
}
inline ::proto_ff::E_EquipBreak* Sheet_EquipBreak::mutable_e_equipbreak_list(int index) {
  return e_equipbreak_list_.Mutable(index);
}
inline ::proto_ff::E_EquipBreak* Sheet_EquipBreak::add_e_equipbreak_list() {
  return e_equipbreak_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipBreak >&
Sheet_EquipBreak::e_equipbreak_list() const {
  return e_equipbreak_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_EquipBreak >*
Sheet_EquipBreak::mutable_e_equipbreak_list() {
  return &e_equipbreak_list_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto_ff

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_E_5fEquip_2eproto__INCLUDED
