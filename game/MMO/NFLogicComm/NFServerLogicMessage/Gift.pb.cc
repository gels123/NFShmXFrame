// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Gift.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "Gift.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace proto_ff {

namespace {

const ::google::protobuf::Descriptor* GiftCondProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GiftCondProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* GiftZeroProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GiftZeroProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* GiftZeroLogProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GiftZeroLogProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* GiftCond_InfoReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GiftCond_InfoReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* GiftCond_InfoRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GiftCond_InfoRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* GiftCond_UpdateRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GiftCond_UpdateRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* GiftCond_BuyReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GiftCond_BuyReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* GiftCond_BuyRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GiftCond_BuyRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* GiftZero_InfoReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GiftZero_InfoReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* GiftZero_InfoRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GiftZero_InfoRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* GiftZero_UpdateRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GiftZero_UpdateRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* GiftZero_BuyReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GiftZero_BuyReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* GiftZero_BuyRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GiftZero_BuyRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* GiftZero_FetchReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GiftZero_FetchReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* GiftZero_FetchRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GiftZero_FetchRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* GiftZero_LogReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GiftZero_LogReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* GiftZero_LogRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GiftZero_LogRsp_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_Gift_2eproto() {
  protobuf_AddDesc_Gift_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "Gift.proto");
  GOOGLE_CHECK(file != NULL);
  GiftCondProto_descriptor_ = file->message_type(0);
  static const int GiftCondProto_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GiftCondProto, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GiftCondProto, buy_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GiftCondProto, close_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GiftCondProto, lefttime_),
  };
  GiftCondProto_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GiftCondProto_descriptor_,
      GiftCondProto::default_instance_,
      GiftCondProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GiftCondProto, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GiftCondProto, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GiftCondProto));
  GiftZeroProto_descriptor_ = file->message_type(1);
  static const int GiftZeroProto_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GiftZeroProto, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GiftZeroProto, buy_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GiftZeroProto, fetch_),
  };
  GiftZeroProto_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GiftZeroProto_descriptor_,
      GiftZeroProto::default_instance_,
      GiftZeroProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GiftZeroProto, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GiftZeroProto, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GiftZeroProto));
  GiftZeroLogProto_descriptor_ = file->message_type(2);
  static const int GiftZeroLogProto_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GiftZeroLogProto, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GiftZeroLogProto, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GiftZeroLogProto, value_),
  };
  GiftZeroLogProto_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GiftZeroLogProto_descriptor_,
      GiftZeroLogProto::default_instance_,
      GiftZeroLogProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GiftZeroLogProto, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GiftZeroLogProto, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GiftZeroLogProto));
  GiftCond_InfoReq_descriptor_ = file->message_type(3);
  static const int GiftCond_InfoReq_offsets_[1] = {
  };
  GiftCond_InfoReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GiftCond_InfoReq_descriptor_,
      GiftCond_InfoReq::default_instance_,
      GiftCond_InfoReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GiftCond_InfoReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GiftCond_InfoReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GiftCond_InfoReq));
  GiftCond_InfoRsp_descriptor_ = file->message_type(4);
  static const int GiftCond_InfoRsp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GiftCond_InfoRsp, cond_),
  };
  GiftCond_InfoRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GiftCond_InfoRsp_descriptor_,
      GiftCond_InfoRsp::default_instance_,
      GiftCond_InfoRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GiftCond_InfoRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GiftCond_InfoRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GiftCond_InfoRsp));
  GiftCond_UpdateRsp_descriptor_ = file->message_type(5);
  static const int GiftCond_UpdateRsp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GiftCond_UpdateRsp, cond_),
  };
  GiftCond_UpdateRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GiftCond_UpdateRsp_descriptor_,
      GiftCond_UpdateRsp::default_instance_,
      GiftCond_UpdateRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GiftCond_UpdateRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GiftCond_UpdateRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GiftCond_UpdateRsp));
  GiftCond_BuyReq_descriptor_ = file->message_type(6);
  static const int GiftCond_BuyReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GiftCond_BuyReq, id_),
  };
  GiftCond_BuyReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GiftCond_BuyReq_descriptor_,
      GiftCond_BuyReq::default_instance_,
      GiftCond_BuyReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GiftCond_BuyReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GiftCond_BuyReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GiftCond_BuyReq));
  GiftCond_BuyRsp_descriptor_ = file->message_type(7);
  static const int GiftCond_BuyRsp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GiftCond_BuyRsp, ret_),
  };
  GiftCond_BuyRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GiftCond_BuyRsp_descriptor_,
      GiftCond_BuyRsp::default_instance_,
      GiftCond_BuyRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GiftCond_BuyRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GiftCond_BuyRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GiftCond_BuyRsp));
  GiftZero_InfoReq_descriptor_ = file->message_type(8);
  static const int GiftZero_InfoReq_offsets_[1] = {
  };
  GiftZero_InfoReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GiftZero_InfoReq_descriptor_,
      GiftZero_InfoReq::default_instance_,
      GiftZero_InfoReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GiftZero_InfoReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GiftZero_InfoReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GiftZero_InfoReq));
  GiftZero_InfoRsp_descriptor_ = file->message_type(9);
  static const int GiftZero_InfoRsp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GiftZero_InfoRsp, zero_),
  };
  GiftZero_InfoRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GiftZero_InfoRsp_descriptor_,
      GiftZero_InfoRsp::default_instance_,
      GiftZero_InfoRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GiftZero_InfoRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GiftZero_InfoRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GiftZero_InfoRsp));
  GiftZero_UpdateRsp_descriptor_ = file->message_type(10);
  static const int GiftZero_UpdateRsp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GiftZero_UpdateRsp, zero_),
  };
  GiftZero_UpdateRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GiftZero_UpdateRsp_descriptor_,
      GiftZero_UpdateRsp::default_instance_,
      GiftZero_UpdateRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GiftZero_UpdateRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GiftZero_UpdateRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GiftZero_UpdateRsp));
  GiftZero_BuyReq_descriptor_ = file->message_type(11);
  static const int GiftZero_BuyReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GiftZero_BuyReq, id_),
  };
  GiftZero_BuyReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GiftZero_BuyReq_descriptor_,
      GiftZero_BuyReq::default_instance_,
      GiftZero_BuyReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GiftZero_BuyReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GiftZero_BuyReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GiftZero_BuyReq));
  GiftZero_BuyRsp_descriptor_ = file->message_type(12);
  static const int GiftZero_BuyRsp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GiftZero_BuyRsp, ret_),
  };
  GiftZero_BuyRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GiftZero_BuyRsp_descriptor_,
      GiftZero_BuyRsp::default_instance_,
      GiftZero_BuyRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GiftZero_BuyRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GiftZero_BuyRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GiftZero_BuyRsp));
  GiftZero_FetchReq_descriptor_ = file->message_type(13);
  static const int GiftZero_FetchReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GiftZero_FetchReq, id_),
  };
  GiftZero_FetchReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GiftZero_FetchReq_descriptor_,
      GiftZero_FetchReq::default_instance_,
      GiftZero_FetchReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GiftZero_FetchReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GiftZero_FetchReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GiftZero_FetchReq));
  GiftZero_FetchRsp_descriptor_ = file->message_type(14);
  static const int GiftZero_FetchRsp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GiftZero_FetchRsp, ret_),
  };
  GiftZero_FetchRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GiftZero_FetchRsp_descriptor_,
      GiftZero_FetchRsp::default_instance_,
      GiftZero_FetchRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GiftZero_FetchRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GiftZero_FetchRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GiftZero_FetchRsp));
  GiftZero_LogReq_descriptor_ = file->message_type(15);
  static const int GiftZero_LogReq_offsets_[1] = {
  };
  GiftZero_LogReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GiftZero_LogReq_descriptor_,
      GiftZero_LogReq::default_instance_,
      GiftZero_LogReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GiftZero_LogReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GiftZero_LogReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GiftZero_LogReq));
  GiftZero_LogRsp_descriptor_ = file->message_type(16);
  static const int GiftZero_LogRsp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GiftZero_LogRsp, log_),
  };
  GiftZero_LogRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GiftZero_LogRsp_descriptor_,
      GiftZero_LogRsp::default_instance_,
      GiftZero_LogRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GiftZero_LogRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GiftZero_LogRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GiftZero_LogRsp));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_Gift_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GiftCondProto_descriptor_, &GiftCondProto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GiftZeroProto_descriptor_, &GiftZeroProto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GiftZeroLogProto_descriptor_, &GiftZeroLogProto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GiftCond_InfoReq_descriptor_, &GiftCond_InfoReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GiftCond_InfoRsp_descriptor_, &GiftCond_InfoRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GiftCond_UpdateRsp_descriptor_, &GiftCond_UpdateRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GiftCond_BuyReq_descriptor_, &GiftCond_BuyReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GiftCond_BuyRsp_descriptor_, &GiftCond_BuyRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GiftZero_InfoReq_descriptor_, &GiftZero_InfoReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GiftZero_InfoRsp_descriptor_, &GiftZero_InfoRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GiftZero_UpdateRsp_descriptor_, &GiftZero_UpdateRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GiftZero_BuyReq_descriptor_, &GiftZero_BuyReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GiftZero_BuyRsp_descriptor_, &GiftZero_BuyRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GiftZero_FetchReq_descriptor_, &GiftZero_FetchReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GiftZero_FetchRsp_descriptor_, &GiftZero_FetchRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GiftZero_LogReq_descriptor_, &GiftZero_LogReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GiftZero_LogRsp_descriptor_, &GiftZero_LogRsp::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_Gift_2eproto() {
  delete GiftCondProto::default_instance_;
  delete GiftCondProto_reflection_;
  delete GiftZeroProto::default_instance_;
  delete GiftZeroProto_reflection_;
  delete GiftZeroLogProto::default_instance_;
  delete GiftZeroLogProto_reflection_;
  delete GiftCond_InfoReq::default_instance_;
  delete GiftCond_InfoReq_reflection_;
  delete GiftCond_InfoRsp::default_instance_;
  delete GiftCond_InfoRsp_reflection_;
  delete GiftCond_UpdateRsp::default_instance_;
  delete GiftCond_UpdateRsp_reflection_;
  delete GiftCond_BuyReq::default_instance_;
  delete GiftCond_BuyReq_reflection_;
  delete GiftCond_BuyRsp::default_instance_;
  delete GiftCond_BuyRsp_reflection_;
  delete GiftZero_InfoReq::default_instance_;
  delete GiftZero_InfoReq_reflection_;
  delete GiftZero_InfoRsp::default_instance_;
  delete GiftZero_InfoRsp_reflection_;
  delete GiftZero_UpdateRsp::default_instance_;
  delete GiftZero_UpdateRsp_reflection_;
  delete GiftZero_BuyReq::default_instance_;
  delete GiftZero_BuyReq_reflection_;
  delete GiftZero_BuyRsp::default_instance_;
  delete GiftZero_BuyRsp_reflection_;
  delete GiftZero_FetchReq::default_instance_;
  delete GiftZero_FetchReq_reflection_;
  delete GiftZero_FetchRsp::default_instance_;
  delete GiftZero_FetchRsp_reflection_;
  delete GiftZero_LogReq::default_instance_;
  delete GiftZero_LogReq_reflection_;
  delete GiftZero_LogRsp::default_instance_;
  delete GiftZero_LogRsp_reflection_;
}

void protobuf_AddDesc_Gift_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::proto_ff::protobuf_AddDesc_Com_2eproto();
  ::proto_ff::protobuf_AddDesc_ComDefine_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\nGift.proto\022\010proto_ff\032\tCom.proto\032\017ComDe"
    "fine.proto\"I\n\rGiftCondProto\022\n\n\002id\030\001 \001(\005\022"
    "\013\n\003buy\030\002 \001(\005\022\r\n\005close\030\003 \001(\005\022\020\n\010lefttime\030"
    "\004 \001(\005\"7\n\rGiftZeroProto\022\n\n\002id\030\001 \001(\005\022\013\n\003bu"
    "y\030\002 \001(\005\022\r\n\005fetch\030\003 \001(\005\"=\n\020GiftZeroLogPro"
    "to\022\014\n\004name\030\001 \001(\014\022\014\n\004type\030\002 \001(\005\022\r\n\005value\030"
    "\003 \001(\005\"\022\n\020GiftCond_InfoReq\"9\n\020GiftCond_In"
    "foRsp\022%\n\004cond\030\001 \003(\0132\027.proto_ff.GiftCondP"
    "roto\";\n\022GiftCond_UpdateRsp\022%\n\004cond\030\001 \003(\013"
    "2\027.proto_ff.GiftCondProto\"\035\n\017GiftCond_Bu"
    "yReq\022\n\n\002id\030\001 \001(\005\"\036\n\017GiftCond_BuyRsp\022\013\n\003r"
    "et\030\001 \002(\005\"\022\n\020GiftZero_InfoReq\"9\n\020GiftZero"
    "_InfoRsp\022%\n\004zero\030\001 \003(\0132\027.proto_ff.GiftZe"
    "roProto\";\n\022GiftZero_UpdateRsp\022%\n\004zero\030\001 "
    "\003(\0132\027.proto_ff.GiftZeroProto\"\035\n\017GiftZero"
    "_BuyReq\022\n\n\002id\030\001 \001(\005\"\036\n\017GiftZero_BuyRsp\022\013"
    "\n\003ret\030\001 \002(\005\"\037\n\021GiftZero_FetchReq\022\n\n\002id\030\001"
    " \001(\005\" \n\021GiftZero_FetchRsp\022\013\n\003ret\030\001 \002(\005\"\021"
    "\n\017GiftZero_LogReq\":\n\017GiftZero_LogRsp\022\'\n\003"
    "log\030\001 \003(\0132\032.proto_ff.GiftZeroLogProto", 797);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "Gift.proto", &protobuf_RegisterTypes);
  GiftCondProto::default_instance_ = new GiftCondProto();
  GiftZeroProto::default_instance_ = new GiftZeroProto();
  GiftZeroLogProto::default_instance_ = new GiftZeroLogProto();
  GiftCond_InfoReq::default_instance_ = new GiftCond_InfoReq();
  GiftCond_InfoRsp::default_instance_ = new GiftCond_InfoRsp();
  GiftCond_UpdateRsp::default_instance_ = new GiftCond_UpdateRsp();
  GiftCond_BuyReq::default_instance_ = new GiftCond_BuyReq();
  GiftCond_BuyRsp::default_instance_ = new GiftCond_BuyRsp();
  GiftZero_InfoReq::default_instance_ = new GiftZero_InfoReq();
  GiftZero_InfoRsp::default_instance_ = new GiftZero_InfoRsp();
  GiftZero_UpdateRsp::default_instance_ = new GiftZero_UpdateRsp();
  GiftZero_BuyReq::default_instance_ = new GiftZero_BuyReq();
  GiftZero_BuyRsp::default_instance_ = new GiftZero_BuyRsp();
  GiftZero_FetchReq::default_instance_ = new GiftZero_FetchReq();
  GiftZero_FetchRsp::default_instance_ = new GiftZero_FetchRsp();
  GiftZero_LogReq::default_instance_ = new GiftZero_LogReq();
  GiftZero_LogRsp::default_instance_ = new GiftZero_LogRsp();
  GiftCondProto::default_instance_->InitAsDefaultInstance();
  GiftZeroProto::default_instance_->InitAsDefaultInstance();
  GiftZeroLogProto::default_instance_->InitAsDefaultInstance();
  GiftCond_InfoReq::default_instance_->InitAsDefaultInstance();
  GiftCond_InfoRsp::default_instance_->InitAsDefaultInstance();
  GiftCond_UpdateRsp::default_instance_->InitAsDefaultInstance();
  GiftCond_BuyReq::default_instance_->InitAsDefaultInstance();
  GiftCond_BuyRsp::default_instance_->InitAsDefaultInstance();
  GiftZero_InfoReq::default_instance_->InitAsDefaultInstance();
  GiftZero_InfoRsp::default_instance_->InitAsDefaultInstance();
  GiftZero_UpdateRsp::default_instance_->InitAsDefaultInstance();
  GiftZero_BuyReq::default_instance_->InitAsDefaultInstance();
  GiftZero_BuyRsp::default_instance_->InitAsDefaultInstance();
  GiftZero_FetchReq::default_instance_->InitAsDefaultInstance();
  GiftZero_FetchRsp::default_instance_->InitAsDefaultInstance();
  GiftZero_LogReq::default_instance_->InitAsDefaultInstance();
  GiftZero_LogRsp::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_Gift_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_Gift_2eproto {
  StaticDescriptorInitializer_Gift_2eproto() {
    protobuf_AddDesc_Gift_2eproto();
  }
} static_descriptor_initializer_Gift_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int GiftCondProto::kIdFieldNumber;
const int GiftCondProto::kBuyFieldNumber;
const int GiftCondProto::kCloseFieldNumber;
const int GiftCondProto::kLefttimeFieldNumber;
#endif  // !_MSC_VER

GiftCondProto::GiftCondProto()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void GiftCondProto::InitAsDefaultInstance() {
}

GiftCondProto::GiftCondProto(const GiftCondProto& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void GiftCondProto::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0;
  buy_ = 0;
  close_ = 0;
  lefttime_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GiftCondProto::~GiftCondProto() {
  SharedDtor();
}

void GiftCondProto::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GiftCondProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GiftCondProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GiftCondProto_descriptor_;
}

const GiftCondProto& GiftCondProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Gift_2eproto();
  return *default_instance_;
}

GiftCondProto* GiftCondProto::default_instance_ = NULL;

GiftCondProto* GiftCondProto::New() const {
  return new GiftCondProto;
}

void GiftCondProto::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    id_ = 0;
    buy_ = 0;
    close_ = 0;
    lefttime_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GiftCondProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_buy;
        break;
      }

      // optional int32 buy = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_buy:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &buy_)));
          set_has_buy();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_close;
        break;
      }

      // optional int32 close = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_close:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &close_)));
          set_has_close();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_lefttime;
        break;
      }

      // optional int32 lefttime = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_lefttime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &lefttime_)));
          set_has_lefttime();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void GiftCondProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // optional int32 buy = 2;
  if (has_buy()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->buy(), output);
  }

  // optional int32 close = 3;
  if (has_close()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->close(), output);
  }

  // optional int32 lefttime = 4;
  if (has_lefttime()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->lefttime(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* GiftCondProto::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // optional int32 buy = 2;
  if (has_buy()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->buy(), target);
  }

  // optional int32 close = 3;
  if (has_close()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->close(), target);
  }

  // optional int32 lefttime = 4;
  if (has_lefttime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->lefttime(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int GiftCondProto::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->id());
    }

    // optional int32 buy = 2;
    if (has_buy()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->buy());
    }

    // optional int32 close = 3;
    if (has_close()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->close());
    }

    // optional int32 lefttime = 4;
    if (has_lefttime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->lefttime());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GiftCondProto::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GiftCondProto* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GiftCondProto*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GiftCondProto::MergeFrom(const GiftCondProto& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_buy()) {
      set_buy(from.buy());
    }
    if (from.has_close()) {
      set_close(from.close());
    }
    if (from.has_lefttime()) {
      set_lefttime(from.lefttime());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GiftCondProto::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GiftCondProto::CopyFrom(const GiftCondProto& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GiftCondProto::IsInitialized() const {

  return true;
}

void GiftCondProto::Swap(GiftCondProto* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(buy_, other->buy_);
    std::swap(close_, other->close_);
    std::swap(lefttime_, other->lefttime_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GiftCondProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GiftCondProto_descriptor_;
  metadata.reflection = GiftCondProto_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GiftZeroProto::kIdFieldNumber;
const int GiftZeroProto::kBuyFieldNumber;
const int GiftZeroProto::kFetchFieldNumber;
#endif  // !_MSC_VER

GiftZeroProto::GiftZeroProto()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void GiftZeroProto::InitAsDefaultInstance() {
}

GiftZeroProto::GiftZeroProto(const GiftZeroProto& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void GiftZeroProto::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0;
  buy_ = 0;
  fetch_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GiftZeroProto::~GiftZeroProto() {
  SharedDtor();
}

void GiftZeroProto::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GiftZeroProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GiftZeroProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GiftZeroProto_descriptor_;
}

const GiftZeroProto& GiftZeroProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Gift_2eproto();
  return *default_instance_;
}

GiftZeroProto* GiftZeroProto::default_instance_ = NULL;

GiftZeroProto* GiftZeroProto::New() const {
  return new GiftZeroProto;
}

void GiftZeroProto::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    id_ = 0;
    buy_ = 0;
    fetch_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GiftZeroProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_buy;
        break;
      }

      // optional int32 buy = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_buy:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &buy_)));
          set_has_buy();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_fetch;
        break;
      }

      // optional int32 fetch = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_fetch:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &fetch_)));
          set_has_fetch();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void GiftZeroProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // optional int32 buy = 2;
  if (has_buy()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->buy(), output);
  }

  // optional int32 fetch = 3;
  if (has_fetch()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->fetch(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* GiftZeroProto::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // optional int32 buy = 2;
  if (has_buy()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->buy(), target);
  }

  // optional int32 fetch = 3;
  if (has_fetch()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->fetch(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int GiftZeroProto::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->id());
    }

    // optional int32 buy = 2;
    if (has_buy()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->buy());
    }

    // optional int32 fetch = 3;
    if (has_fetch()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->fetch());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GiftZeroProto::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GiftZeroProto* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GiftZeroProto*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GiftZeroProto::MergeFrom(const GiftZeroProto& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_buy()) {
      set_buy(from.buy());
    }
    if (from.has_fetch()) {
      set_fetch(from.fetch());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GiftZeroProto::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GiftZeroProto::CopyFrom(const GiftZeroProto& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GiftZeroProto::IsInitialized() const {

  return true;
}

void GiftZeroProto::Swap(GiftZeroProto* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(buy_, other->buy_);
    std::swap(fetch_, other->fetch_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GiftZeroProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GiftZeroProto_descriptor_;
  metadata.reflection = GiftZeroProto_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GiftZeroLogProto::kNameFieldNumber;
const int GiftZeroLogProto::kTypeFieldNumber;
const int GiftZeroLogProto::kValueFieldNumber;
#endif  // !_MSC_VER

GiftZeroLogProto::GiftZeroLogProto()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void GiftZeroLogProto::InitAsDefaultInstance() {
}

GiftZeroLogProto::GiftZeroLogProto(const GiftZeroLogProto& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void GiftZeroLogProto::SharedCtor() {
  _cached_size_ = 0;
  name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  type_ = 0;
  value_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GiftZeroLogProto::~GiftZeroLogProto() {
  SharedDtor();
}

void GiftZeroLogProto::SharedDtor() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (this != default_instance_) {
  }
}

void GiftZeroLogProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GiftZeroLogProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GiftZeroLogProto_descriptor_;
}

const GiftZeroLogProto& GiftZeroLogProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Gift_2eproto();
  return *default_instance_;
}

GiftZeroLogProto* GiftZeroLogProto::default_instance_ = NULL;

GiftZeroLogProto* GiftZeroLogProto::New() const {
  return new GiftZeroLogProto;
}

void GiftZeroLogProto::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_name()) {
      if (name_ != &::google::protobuf::internal::kEmptyString) {
        name_->clear();
      }
    }
    type_ = 0;
    value_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GiftZeroLogProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes name = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_name()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_type;
        break;
      }

      // optional int32 type = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_value;
        break;
      }

      // optional int32 value = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_value:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &value_)));
          set_has_value();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void GiftZeroLogProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional bytes name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      1, this->name(), output);
  }

  // optional int32 type = 2;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->type(), output);
  }

  // optional int32 value = 3;
  if (has_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->value(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* GiftZeroLogProto::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional bytes name = 1;
  if (has_name()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->name(), target);
  }

  // optional int32 type = 2;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->type(), target);
  }

  // optional int32 value = 3;
  if (has_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->value(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int GiftZeroLogProto::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional bytes name = 1;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->name());
    }

    // optional int32 type = 2;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type());
    }

    // optional int32 value = 3;
    if (has_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->value());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GiftZeroLogProto::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GiftZeroLogProto* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GiftZeroLogProto*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GiftZeroLogProto::MergeFrom(const GiftZeroLogProto& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_name()) {
      set_name(from.name());
    }
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_value()) {
      set_value(from.value());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GiftZeroLogProto::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GiftZeroLogProto::CopyFrom(const GiftZeroLogProto& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GiftZeroLogProto::IsInitialized() const {

  return true;
}

void GiftZeroLogProto::Swap(GiftZeroLogProto* other) {
  if (other != this) {
    std::swap(name_, other->name_);
    std::swap(type_, other->type_);
    std::swap(value_, other->value_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GiftZeroLogProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GiftZeroLogProto_descriptor_;
  metadata.reflection = GiftZeroLogProto_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

GiftCond_InfoReq::GiftCond_InfoReq()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void GiftCond_InfoReq::InitAsDefaultInstance() {
}

GiftCond_InfoReq::GiftCond_InfoReq(const GiftCond_InfoReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void GiftCond_InfoReq::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GiftCond_InfoReq::~GiftCond_InfoReq() {
  SharedDtor();
}

void GiftCond_InfoReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GiftCond_InfoReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GiftCond_InfoReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GiftCond_InfoReq_descriptor_;
}

const GiftCond_InfoReq& GiftCond_InfoReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Gift_2eproto();
  return *default_instance_;
}

GiftCond_InfoReq* GiftCond_InfoReq::default_instance_ = NULL;

GiftCond_InfoReq* GiftCond_InfoReq::New() const {
  return new GiftCond_InfoReq;
}

void GiftCond_InfoReq::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GiftCond_InfoReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void GiftCond_InfoReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* GiftCond_InfoReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int GiftCond_InfoReq::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GiftCond_InfoReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GiftCond_InfoReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GiftCond_InfoReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GiftCond_InfoReq::MergeFrom(const GiftCond_InfoReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GiftCond_InfoReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GiftCond_InfoReq::CopyFrom(const GiftCond_InfoReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GiftCond_InfoReq::IsInitialized() const {

  return true;
}

void GiftCond_InfoReq::Swap(GiftCond_InfoReq* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GiftCond_InfoReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GiftCond_InfoReq_descriptor_;
  metadata.reflection = GiftCond_InfoReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GiftCond_InfoRsp::kCondFieldNumber;
#endif  // !_MSC_VER

GiftCond_InfoRsp::GiftCond_InfoRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void GiftCond_InfoRsp::InitAsDefaultInstance() {
}

GiftCond_InfoRsp::GiftCond_InfoRsp(const GiftCond_InfoRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void GiftCond_InfoRsp::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GiftCond_InfoRsp::~GiftCond_InfoRsp() {
  SharedDtor();
}

void GiftCond_InfoRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GiftCond_InfoRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GiftCond_InfoRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GiftCond_InfoRsp_descriptor_;
}

const GiftCond_InfoRsp& GiftCond_InfoRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Gift_2eproto();
  return *default_instance_;
}

GiftCond_InfoRsp* GiftCond_InfoRsp::default_instance_ = NULL;

GiftCond_InfoRsp* GiftCond_InfoRsp::New() const {
  return new GiftCond_InfoRsp;
}

void GiftCond_InfoRsp::Clear() {
  cond_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GiftCond_InfoRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.GiftCondProto cond = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_cond:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_cond()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_cond;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void GiftCond_InfoRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.GiftCondProto cond = 1;
  for (int i = 0; i < this->cond_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->cond(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* GiftCond_InfoRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.GiftCondProto cond = 1;
  for (int i = 0; i < this->cond_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->cond(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int GiftCond_InfoRsp::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.GiftCondProto cond = 1;
  total_size += 1 * this->cond_size();
  for (int i = 0; i < this->cond_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->cond(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GiftCond_InfoRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GiftCond_InfoRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GiftCond_InfoRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GiftCond_InfoRsp::MergeFrom(const GiftCond_InfoRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  cond_.MergeFrom(from.cond_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GiftCond_InfoRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GiftCond_InfoRsp::CopyFrom(const GiftCond_InfoRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GiftCond_InfoRsp::IsInitialized() const {

  return true;
}

void GiftCond_InfoRsp::Swap(GiftCond_InfoRsp* other) {
  if (other != this) {
    cond_.Swap(&other->cond_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GiftCond_InfoRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GiftCond_InfoRsp_descriptor_;
  metadata.reflection = GiftCond_InfoRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GiftCond_UpdateRsp::kCondFieldNumber;
#endif  // !_MSC_VER

GiftCond_UpdateRsp::GiftCond_UpdateRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void GiftCond_UpdateRsp::InitAsDefaultInstance() {
}

GiftCond_UpdateRsp::GiftCond_UpdateRsp(const GiftCond_UpdateRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void GiftCond_UpdateRsp::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GiftCond_UpdateRsp::~GiftCond_UpdateRsp() {
  SharedDtor();
}

void GiftCond_UpdateRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GiftCond_UpdateRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GiftCond_UpdateRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GiftCond_UpdateRsp_descriptor_;
}

const GiftCond_UpdateRsp& GiftCond_UpdateRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Gift_2eproto();
  return *default_instance_;
}

GiftCond_UpdateRsp* GiftCond_UpdateRsp::default_instance_ = NULL;

GiftCond_UpdateRsp* GiftCond_UpdateRsp::New() const {
  return new GiftCond_UpdateRsp;
}

void GiftCond_UpdateRsp::Clear() {
  cond_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GiftCond_UpdateRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.GiftCondProto cond = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_cond:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_cond()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_cond;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void GiftCond_UpdateRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.GiftCondProto cond = 1;
  for (int i = 0; i < this->cond_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->cond(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* GiftCond_UpdateRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.GiftCondProto cond = 1;
  for (int i = 0; i < this->cond_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->cond(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int GiftCond_UpdateRsp::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.GiftCondProto cond = 1;
  total_size += 1 * this->cond_size();
  for (int i = 0; i < this->cond_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->cond(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GiftCond_UpdateRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GiftCond_UpdateRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GiftCond_UpdateRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GiftCond_UpdateRsp::MergeFrom(const GiftCond_UpdateRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  cond_.MergeFrom(from.cond_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GiftCond_UpdateRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GiftCond_UpdateRsp::CopyFrom(const GiftCond_UpdateRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GiftCond_UpdateRsp::IsInitialized() const {

  return true;
}

void GiftCond_UpdateRsp::Swap(GiftCond_UpdateRsp* other) {
  if (other != this) {
    cond_.Swap(&other->cond_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GiftCond_UpdateRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GiftCond_UpdateRsp_descriptor_;
  metadata.reflection = GiftCond_UpdateRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GiftCond_BuyReq::kIdFieldNumber;
#endif  // !_MSC_VER

GiftCond_BuyReq::GiftCond_BuyReq()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void GiftCond_BuyReq::InitAsDefaultInstance() {
}

GiftCond_BuyReq::GiftCond_BuyReq(const GiftCond_BuyReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void GiftCond_BuyReq::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GiftCond_BuyReq::~GiftCond_BuyReq() {
  SharedDtor();
}

void GiftCond_BuyReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GiftCond_BuyReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GiftCond_BuyReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GiftCond_BuyReq_descriptor_;
}

const GiftCond_BuyReq& GiftCond_BuyReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Gift_2eproto();
  return *default_instance_;
}

GiftCond_BuyReq* GiftCond_BuyReq::default_instance_ = NULL;

GiftCond_BuyReq* GiftCond_BuyReq::New() const {
  return new GiftCond_BuyReq;
}

void GiftCond_BuyReq::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GiftCond_BuyReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void GiftCond_BuyReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* GiftCond_BuyReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int GiftCond_BuyReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->id());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GiftCond_BuyReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GiftCond_BuyReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GiftCond_BuyReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GiftCond_BuyReq::MergeFrom(const GiftCond_BuyReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GiftCond_BuyReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GiftCond_BuyReq::CopyFrom(const GiftCond_BuyReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GiftCond_BuyReq::IsInitialized() const {

  return true;
}

void GiftCond_BuyReq::Swap(GiftCond_BuyReq* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GiftCond_BuyReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GiftCond_BuyReq_descriptor_;
  metadata.reflection = GiftCond_BuyReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GiftCond_BuyRsp::kRetFieldNumber;
#endif  // !_MSC_VER

GiftCond_BuyRsp::GiftCond_BuyRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void GiftCond_BuyRsp::InitAsDefaultInstance() {
}

GiftCond_BuyRsp::GiftCond_BuyRsp(const GiftCond_BuyRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void GiftCond_BuyRsp::SharedCtor() {
  _cached_size_ = 0;
  ret_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GiftCond_BuyRsp::~GiftCond_BuyRsp() {
  SharedDtor();
}

void GiftCond_BuyRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GiftCond_BuyRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GiftCond_BuyRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GiftCond_BuyRsp_descriptor_;
}

const GiftCond_BuyRsp& GiftCond_BuyRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Gift_2eproto();
  return *default_instance_;
}

GiftCond_BuyRsp* GiftCond_BuyRsp::default_instance_ = NULL;

GiftCond_BuyRsp* GiftCond_BuyRsp::New() const {
  return new GiftCond_BuyRsp;
}

void GiftCond_BuyRsp::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    ret_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GiftCond_BuyRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 ret = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ret_)));
          set_has_ret();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void GiftCond_BuyRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 ret = 1;
  if (has_ret()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->ret(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* GiftCond_BuyRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 ret = 1;
  if (has_ret()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->ret(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int GiftCond_BuyRsp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 ret = 1;
    if (has_ret()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->ret());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GiftCond_BuyRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GiftCond_BuyRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GiftCond_BuyRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GiftCond_BuyRsp::MergeFrom(const GiftCond_BuyRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_ret()) {
      set_ret(from.ret());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GiftCond_BuyRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GiftCond_BuyRsp::CopyFrom(const GiftCond_BuyRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GiftCond_BuyRsp::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void GiftCond_BuyRsp::Swap(GiftCond_BuyRsp* other) {
  if (other != this) {
    std::swap(ret_, other->ret_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GiftCond_BuyRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GiftCond_BuyRsp_descriptor_;
  metadata.reflection = GiftCond_BuyRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

GiftZero_InfoReq::GiftZero_InfoReq()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void GiftZero_InfoReq::InitAsDefaultInstance() {
}

GiftZero_InfoReq::GiftZero_InfoReq(const GiftZero_InfoReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void GiftZero_InfoReq::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GiftZero_InfoReq::~GiftZero_InfoReq() {
  SharedDtor();
}

void GiftZero_InfoReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GiftZero_InfoReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GiftZero_InfoReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GiftZero_InfoReq_descriptor_;
}

const GiftZero_InfoReq& GiftZero_InfoReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Gift_2eproto();
  return *default_instance_;
}

GiftZero_InfoReq* GiftZero_InfoReq::default_instance_ = NULL;

GiftZero_InfoReq* GiftZero_InfoReq::New() const {
  return new GiftZero_InfoReq;
}

void GiftZero_InfoReq::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GiftZero_InfoReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void GiftZero_InfoReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* GiftZero_InfoReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int GiftZero_InfoReq::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GiftZero_InfoReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GiftZero_InfoReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GiftZero_InfoReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GiftZero_InfoReq::MergeFrom(const GiftZero_InfoReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GiftZero_InfoReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GiftZero_InfoReq::CopyFrom(const GiftZero_InfoReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GiftZero_InfoReq::IsInitialized() const {

  return true;
}

void GiftZero_InfoReq::Swap(GiftZero_InfoReq* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GiftZero_InfoReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GiftZero_InfoReq_descriptor_;
  metadata.reflection = GiftZero_InfoReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GiftZero_InfoRsp::kZeroFieldNumber;
#endif  // !_MSC_VER

GiftZero_InfoRsp::GiftZero_InfoRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void GiftZero_InfoRsp::InitAsDefaultInstance() {
}

GiftZero_InfoRsp::GiftZero_InfoRsp(const GiftZero_InfoRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void GiftZero_InfoRsp::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GiftZero_InfoRsp::~GiftZero_InfoRsp() {
  SharedDtor();
}

void GiftZero_InfoRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GiftZero_InfoRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GiftZero_InfoRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GiftZero_InfoRsp_descriptor_;
}

const GiftZero_InfoRsp& GiftZero_InfoRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Gift_2eproto();
  return *default_instance_;
}

GiftZero_InfoRsp* GiftZero_InfoRsp::default_instance_ = NULL;

GiftZero_InfoRsp* GiftZero_InfoRsp::New() const {
  return new GiftZero_InfoRsp;
}

void GiftZero_InfoRsp::Clear() {
  zero_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GiftZero_InfoRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.GiftZeroProto zero = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_zero:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_zero()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_zero;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void GiftZero_InfoRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.GiftZeroProto zero = 1;
  for (int i = 0; i < this->zero_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->zero(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* GiftZero_InfoRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.GiftZeroProto zero = 1;
  for (int i = 0; i < this->zero_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->zero(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int GiftZero_InfoRsp::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.GiftZeroProto zero = 1;
  total_size += 1 * this->zero_size();
  for (int i = 0; i < this->zero_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->zero(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GiftZero_InfoRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GiftZero_InfoRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GiftZero_InfoRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GiftZero_InfoRsp::MergeFrom(const GiftZero_InfoRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  zero_.MergeFrom(from.zero_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GiftZero_InfoRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GiftZero_InfoRsp::CopyFrom(const GiftZero_InfoRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GiftZero_InfoRsp::IsInitialized() const {

  return true;
}

void GiftZero_InfoRsp::Swap(GiftZero_InfoRsp* other) {
  if (other != this) {
    zero_.Swap(&other->zero_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GiftZero_InfoRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GiftZero_InfoRsp_descriptor_;
  metadata.reflection = GiftZero_InfoRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GiftZero_UpdateRsp::kZeroFieldNumber;
#endif  // !_MSC_VER

GiftZero_UpdateRsp::GiftZero_UpdateRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void GiftZero_UpdateRsp::InitAsDefaultInstance() {
}

GiftZero_UpdateRsp::GiftZero_UpdateRsp(const GiftZero_UpdateRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void GiftZero_UpdateRsp::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GiftZero_UpdateRsp::~GiftZero_UpdateRsp() {
  SharedDtor();
}

void GiftZero_UpdateRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GiftZero_UpdateRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GiftZero_UpdateRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GiftZero_UpdateRsp_descriptor_;
}

const GiftZero_UpdateRsp& GiftZero_UpdateRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Gift_2eproto();
  return *default_instance_;
}

GiftZero_UpdateRsp* GiftZero_UpdateRsp::default_instance_ = NULL;

GiftZero_UpdateRsp* GiftZero_UpdateRsp::New() const {
  return new GiftZero_UpdateRsp;
}

void GiftZero_UpdateRsp::Clear() {
  zero_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GiftZero_UpdateRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.GiftZeroProto zero = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_zero:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_zero()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_zero;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void GiftZero_UpdateRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.GiftZeroProto zero = 1;
  for (int i = 0; i < this->zero_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->zero(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* GiftZero_UpdateRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.GiftZeroProto zero = 1;
  for (int i = 0; i < this->zero_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->zero(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int GiftZero_UpdateRsp::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.GiftZeroProto zero = 1;
  total_size += 1 * this->zero_size();
  for (int i = 0; i < this->zero_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->zero(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GiftZero_UpdateRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GiftZero_UpdateRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GiftZero_UpdateRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GiftZero_UpdateRsp::MergeFrom(const GiftZero_UpdateRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  zero_.MergeFrom(from.zero_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GiftZero_UpdateRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GiftZero_UpdateRsp::CopyFrom(const GiftZero_UpdateRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GiftZero_UpdateRsp::IsInitialized() const {

  return true;
}

void GiftZero_UpdateRsp::Swap(GiftZero_UpdateRsp* other) {
  if (other != this) {
    zero_.Swap(&other->zero_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GiftZero_UpdateRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GiftZero_UpdateRsp_descriptor_;
  metadata.reflection = GiftZero_UpdateRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GiftZero_BuyReq::kIdFieldNumber;
#endif  // !_MSC_VER

GiftZero_BuyReq::GiftZero_BuyReq()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void GiftZero_BuyReq::InitAsDefaultInstance() {
}

GiftZero_BuyReq::GiftZero_BuyReq(const GiftZero_BuyReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void GiftZero_BuyReq::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GiftZero_BuyReq::~GiftZero_BuyReq() {
  SharedDtor();
}

void GiftZero_BuyReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GiftZero_BuyReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GiftZero_BuyReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GiftZero_BuyReq_descriptor_;
}

const GiftZero_BuyReq& GiftZero_BuyReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Gift_2eproto();
  return *default_instance_;
}

GiftZero_BuyReq* GiftZero_BuyReq::default_instance_ = NULL;

GiftZero_BuyReq* GiftZero_BuyReq::New() const {
  return new GiftZero_BuyReq;
}

void GiftZero_BuyReq::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GiftZero_BuyReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void GiftZero_BuyReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* GiftZero_BuyReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int GiftZero_BuyReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->id());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GiftZero_BuyReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GiftZero_BuyReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GiftZero_BuyReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GiftZero_BuyReq::MergeFrom(const GiftZero_BuyReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GiftZero_BuyReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GiftZero_BuyReq::CopyFrom(const GiftZero_BuyReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GiftZero_BuyReq::IsInitialized() const {

  return true;
}

void GiftZero_BuyReq::Swap(GiftZero_BuyReq* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GiftZero_BuyReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GiftZero_BuyReq_descriptor_;
  metadata.reflection = GiftZero_BuyReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GiftZero_BuyRsp::kRetFieldNumber;
#endif  // !_MSC_VER

GiftZero_BuyRsp::GiftZero_BuyRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void GiftZero_BuyRsp::InitAsDefaultInstance() {
}

GiftZero_BuyRsp::GiftZero_BuyRsp(const GiftZero_BuyRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void GiftZero_BuyRsp::SharedCtor() {
  _cached_size_ = 0;
  ret_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GiftZero_BuyRsp::~GiftZero_BuyRsp() {
  SharedDtor();
}

void GiftZero_BuyRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GiftZero_BuyRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GiftZero_BuyRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GiftZero_BuyRsp_descriptor_;
}

const GiftZero_BuyRsp& GiftZero_BuyRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Gift_2eproto();
  return *default_instance_;
}

GiftZero_BuyRsp* GiftZero_BuyRsp::default_instance_ = NULL;

GiftZero_BuyRsp* GiftZero_BuyRsp::New() const {
  return new GiftZero_BuyRsp;
}

void GiftZero_BuyRsp::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    ret_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GiftZero_BuyRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 ret = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ret_)));
          set_has_ret();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void GiftZero_BuyRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 ret = 1;
  if (has_ret()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->ret(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* GiftZero_BuyRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 ret = 1;
  if (has_ret()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->ret(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int GiftZero_BuyRsp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 ret = 1;
    if (has_ret()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->ret());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GiftZero_BuyRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GiftZero_BuyRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GiftZero_BuyRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GiftZero_BuyRsp::MergeFrom(const GiftZero_BuyRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_ret()) {
      set_ret(from.ret());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GiftZero_BuyRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GiftZero_BuyRsp::CopyFrom(const GiftZero_BuyRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GiftZero_BuyRsp::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void GiftZero_BuyRsp::Swap(GiftZero_BuyRsp* other) {
  if (other != this) {
    std::swap(ret_, other->ret_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GiftZero_BuyRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GiftZero_BuyRsp_descriptor_;
  metadata.reflection = GiftZero_BuyRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GiftZero_FetchReq::kIdFieldNumber;
#endif  // !_MSC_VER

GiftZero_FetchReq::GiftZero_FetchReq()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void GiftZero_FetchReq::InitAsDefaultInstance() {
}

GiftZero_FetchReq::GiftZero_FetchReq(const GiftZero_FetchReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void GiftZero_FetchReq::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GiftZero_FetchReq::~GiftZero_FetchReq() {
  SharedDtor();
}

void GiftZero_FetchReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GiftZero_FetchReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GiftZero_FetchReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GiftZero_FetchReq_descriptor_;
}

const GiftZero_FetchReq& GiftZero_FetchReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Gift_2eproto();
  return *default_instance_;
}

GiftZero_FetchReq* GiftZero_FetchReq::default_instance_ = NULL;

GiftZero_FetchReq* GiftZero_FetchReq::New() const {
  return new GiftZero_FetchReq;
}

void GiftZero_FetchReq::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GiftZero_FetchReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void GiftZero_FetchReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* GiftZero_FetchReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int GiftZero_FetchReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->id());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GiftZero_FetchReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GiftZero_FetchReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GiftZero_FetchReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GiftZero_FetchReq::MergeFrom(const GiftZero_FetchReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GiftZero_FetchReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GiftZero_FetchReq::CopyFrom(const GiftZero_FetchReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GiftZero_FetchReq::IsInitialized() const {

  return true;
}

void GiftZero_FetchReq::Swap(GiftZero_FetchReq* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GiftZero_FetchReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GiftZero_FetchReq_descriptor_;
  metadata.reflection = GiftZero_FetchReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GiftZero_FetchRsp::kRetFieldNumber;
#endif  // !_MSC_VER

GiftZero_FetchRsp::GiftZero_FetchRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void GiftZero_FetchRsp::InitAsDefaultInstance() {
}

GiftZero_FetchRsp::GiftZero_FetchRsp(const GiftZero_FetchRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void GiftZero_FetchRsp::SharedCtor() {
  _cached_size_ = 0;
  ret_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GiftZero_FetchRsp::~GiftZero_FetchRsp() {
  SharedDtor();
}

void GiftZero_FetchRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GiftZero_FetchRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GiftZero_FetchRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GiftZero_FetchRsp_descriptor_;
}

const GiftZero_FetchRsp& GiftZero_FetchRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Gift_2eproto();
  return *default_instance_;
}

GiftZero_FetchRsp* GiftZero_FetchRsp::default_instance_ = NULL;

GiftZero_FetchRsp* GiftZero_FetchRsp::New() const {
  return new GiftZero_FetchRsp;
}

void GiftZero_FetchRsp::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    ret_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GiftZero_FetchRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 ret = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ret_)));
          set_has_ret();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void GiftZero_FetchRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 ret = 1;
  if (has_ret()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->ret(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* GiftZero_FetchRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 ret = 1;
  if (has_ret()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->ret(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int GiftZero_FetchRsp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 ret = 1;
    if (has_ret()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->ret());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GiftZero_FetchRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GiftZero_FetchRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GiftZero_FetchRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GiftZero_FetchRsp::MergeFrom(const GiftZero_FetchRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_ret()) {
      set_ret(from.ret());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GiftZero_FetchRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GiftZero_FetchRsp::CopyFrom(const GiftZero_FetchRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GiftZero_FetchRsp::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void GiftZero_FetchRsp::Swap(GiftZero_FetchRsp* other) {
  if (other != this) {
    std::swap(ret_, other->ret_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GiftZero_FetchRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GiftZero_FetchRsp_descriptor_;
  metadata.reflection = GiftZero_FetchRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

GiftZero_LogReq::GiftZero_LogReq()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void GiftZero_LogReq::InitAsDefaultInstance() {
}

GiftZero_LogReq::GiftZero_LogReq(const GiftZero_LogReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void GiftZero_LogReq::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GiftZero_LogReq::~GiftZero_LogReq() {
  SharedDtor();
}

void GiftZero_LogReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GiftZero_LogReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GiftZero_LogReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GiftZero_LogReq_descriptor_;
}

const GiftZero_LogReq& GiftZero_LogReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Gift_2eproto();
  return *default_instance_;
}

GiftZero_LogReq* GiftZero_LogReq::default_instance_ = NULL;

GiftZero_LogReq* GiftZero_LogReq::New() const {
  return new GiftZero_LogReq;
}

void GiftZero_LogReq::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GiftZero_LogReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void GiftZero_LogReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* GiftZero_LogReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int GiftZero_LogReq::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GiftZero_LogReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GiftZero_LogReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GiftZero_LogReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GiftZero_LogReq::MergeFrom(const GiftZero_LogReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GiftZero_LogReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GiftZero_LogReq::CopyFrom(const GiftZero_LogReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GiftZero_LogReq::IsInitialized() const {

  return true;
}

void GiftZero_LogReq::Swap(GiftZero_LogReq* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GiftZero_LogReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GiftZero_LogReq_descriptor_;
  metadata.reflection = GiftZero_LogReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GiftZero_LogRsp::kLogFieldNumber;
#endif  // !_MSC_VER

GiftZero_LogRsp::GiftZero_LogRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void GiftZero_LogRsp::InitAsDefaultInstance() {
}

GiftZero_LogRsp::GiftZero_LogRsp(const GiftZero_LogRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void GiftZero_LogRsp::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GiftZero_LogRsp::~GiftZero_LogRsp() {
  SharedDtor();
}

void GiftZero_LogRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GiftZero_LogRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GiftZero_LogRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GiftZero_LogRsp_descriptor_;
}

const GiftZero_LogRsp& GiftZero_LogRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Gift_2eproto();
  return *default_instance_;
}

GiftZero_LogRsp* GiftZero_LogRsp::default_instance_ = NULL;

GiftZero_LogRsp* GiftZero_LogRsp::New() const {
  return new GiftZero_LogRsp;
}

void GiftZero_LogRsp::Clear() {
  log_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GiftZero_LogRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.GiftZeroLogProto log = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_log:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_log()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_log;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void GiftZero_LogRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.GiftZeroLogProto log = 1;
  for (int i = 0; i < this->log_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->log(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* GiftZero_LogRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.GiftZeroLogProto log = 1;
  for (int i = 0; i < this->log_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->log(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int GiftZero_LogRsp::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.GiftZeroLogProto log = 1;
  total_size += 1 * this->log_size();
  for (int i = 0; i < this->log_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->log(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GiftZero_LogRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GiftZero_LogRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GiftZero_LogRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GiftZero_LogRsp::MergeFrom(const GiftZero_LogRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  log_.MergeFrom(from.log_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GiftZero_LogRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GiftZero_LogRsp::CopyFrom(const GiftZero_LogRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GiftZero_LogRsp::IsInitialized() const {

  return true;
}

void GiftZero_LogRsp::Swap(GiftZero_LogRsp* other) {
  if (other != this) {
    log_.Swap(&other->log_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GiftZero_LogRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GiftZero_LogRsp_descriptor_;
  metadata.reflection = GiftZero_LogRsp_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto_ff

// @@protoc_insertion_point(global_scope)
