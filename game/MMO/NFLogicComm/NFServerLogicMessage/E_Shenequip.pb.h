// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: E_Shenequip.proto

#ifndef PROTOBUF_E_5fShenequip_2eproto__INCLUDED
#define PROTOBUF_E_5fShenequip_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "yd_fieldoptions.pb.h"
// @@protoc_insertion_point(includes)

namespace proto_ff {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_E_5fShenequip_2eproto();
void protobuf_AssignDesc_E_5fShenequip_2eproto();
void protobuf_ShutdownFile_E_5fShenequip_2eproto();

class E_ShenequipEquip;
class Sheet_ShenequipEquip;
class E_ShenequipAttAttributeDesc;
class E_ShenequipAttStarDesc;
class E_ShenequipAtt;
class Sheet_ShenequipAtt;
class E_ShenequipLvupAttributeDesc;
class E_ShenequipLvup;
class Sheet_ShenequipLvup;
class E_ShenequipClear;
class Sheet_ShenequipClear;
class E_ShenequipAwakenAttributeDesc;
class E_ShenequipAwaken;
class Sheet_ShenequipAwaken;
class E_ShenequipStarupMaterialDesc;
class E_ShenequipStarup;
class Sheet_ShenequipStarup;
class E_ShenequipPreposeRewardDesc;
class E_ShenequipPrepose;
class Sheet_ShenequipPrepose;
class E_ShenequipDominance;
class Sheet_ShenequipDominance;
class E_ShenequipAdvancedAttributeDesc;
class E_ShenequipAdvanced;
class Sheet_ShenequipAdvanced;
class E_ShenequipTalentConditionDesc;
class E_ShenequipTalent;
class Sheet_ShenequipTalent;
class E_ShenequipTalenttype;
class Sheet_ShenequipTalenttype;
class E_ShenequipPreviewRewardDesc;
class E_ShenequipPreview;
class Sheet_ShenequipPreview;

// ===================================================================

class E_ShenequipEquip : public ::google::protobuf::Message {
 public:
  E_ShenequipEquip();
  virtual ~E_ShenequipEquip();

  E_ShenequipEquip(const E_ShenequipEquip& from);

  inline E_ShenequipEquip& operator=(const E_ShenequipEquip& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_ShenequipEquip& default_instance();

  void Swap(E_ShenequipEquip* other);

  // implements Message ----------------------------------------------

  E_ShenequipEquip* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_ShenequipEquip& from);
  void MergeFrom(const E_ShenequipEquip& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 m_id = 1;
  inline bool has_m_id() const;
  inline void clear_m_id();
  static const int kMIdFieldNumber = 1;
  inline ::google::protobuf::int32 m_id() const;
  inline void set_m_id(::google::protobuf::int32 value);

  // optional string m_name = 2;
  inline bool has_m_name() const;
  inline void clear_m_name();
  static const int kMNameFieldNumber = 2;
  inline const ::std::string& m_name() const;
  inline void set_m_name(const ::std::string& value);
  inline void set_m_name(const char* value);
  inline void set_m_name(const char* value, size_t size);
  inline ::std::string* mutable_m_name();
  inline ::std::string* release_m_name();
  inline void set_allocated_m_name(::std::string* m_name);

  // optional int32 m_type = 3;
  inline bool has_m_type() const;
  inline void clear_m_type();
  static const int kMTypeFieldNumber = 3;
  inline ::google::protobuf::int32 m_type() const;
  inline void set_m_type(::google::protobuf::int32 value);

  // optional int32 m_grade = 4;
  inline bool has_m_grade() const;
  inline void clear_m_grade();
  static const int kMGradeFieldNumber = 4;
  inline ::google::protobuf::int32 m_grade() const;
  inline void set_m_grade(::google::protobuf::int32 value);

  // optional int32 m_subType = 5;
  inline bool has_m_subtype() const;
  inline void clear_m_subtype();
  static const int kMSubTypeFieldNumber = 5;
  inline ::google::protobuf::int32 m_subtype() const;
  inline void set_m_subtype(::google::protobuf::int32 value);

  // optional int32 m_level = 6;
  inline bool has_m_level() const;
  inline void clear_m_level();
  static const int kMLevelFieldNumber = 6;
  inline ::google::protobuf::int32 m_level() const;
  inline void set_m_level(::google::protobuf::int32 value);

  // optional int32 m_quality = 7;
  inline bool has_m_quality() const;
  inline void clear_m_quality();
  static const int kMQualityFieldNumber = 7;
  inline ::google::protobuf::int32 m_quality() const;
  inline void set_m_quality(::google::protobuf::int32 value);

  // optional int32 m_star = 8;
  inline bool has_m_star() const;
  inline void clear_m_star();
  static const int kMStarFieldNumber = 8;
  inline ::google::protobuf::int32 m_star() const;
  inline void set_m_star(::google::protobuf::int32 value);

  // optional int32 m_attributeID = 9;
  inline bool has_m_attributeid() const;
  inline void clear_m_attributeid();
  static const int kMAttributeIDFieldNumber = 9;
  inline ::google::protobuf::int32 m_attributeid() const;
  inline void set_m_attributeid(::google::protobuf::int32 value);

  // optional string m_decompose = 10;
  inline bool has_m_decompose() const;
  inline void clear_m_decompose();
  static const int kMDecomposeFieldNumber = 10;
  inline const ::std::string& m_decompose() const;
  inline void set_m_decompose(const ::std::string& value);
  inline void set_m_decompose(const char* value);
  inline void set_m_decompose(const char* value, size_t size);
  inline ::std::string* mutable_m_decompose();
  inline ::std::string* release_m_decompose();
  inline void set_allocated_m_decompose(::std::string* m_decompose);

  // optional int32 m_isCanbind = 11;
  inline bool has_m_iscanbind() const;
  inline void clear_m_iscanbind();
  static const int kMIsCanbindFieldNumber = 11;
  inline ::google::protobuf::int32 m_iscanbind() const;
  inline void set_m_iscanbind(::google::protobuf::int32 value);

  // optional int32 m_isTradeBind = 12;
  inline bool has_m_istradebind() const;
  inline void clear_m_istradebind();
  static const int kMIsTradeBindFieldNumber = 12;
  inline ::google::protobuf::int32 m_istradebind() const;
  inline void set_m_istradebind(::google::protobuf::int32 value);

  // optional int32 m_time = 13;
  inline bool has_m_time() const;
  inline void clear_m_time();
  static const int kMTimeFieldNumber = 13;
  inline ::google::protobuf::int32 m_time() const;
  inline void set_m_time(::google::protobuf::int32 value);

  // optional int32 m_broadcast = 14;
  inline bool has_m_broadcast() const;
  inline void clear_m_broadcast();
  static const int kMBroadcastFieldNumber = 14;
  inline ::google::protobuf::int32 m_broadcast() const;
  inline void set_m_broadcast(::google::protobuf::int32 value);

  // optional int32 m_exclusiveID = 15;
  inline bool has_m_exclusiveid() const;
  inline void clear_m_exclusiveid();
  static const int kMExclusiveIDFieldNumber = 15;
  inline ::google::protobuf::int32 m_exclusiveid() const;
  inline void set_m_exclusiveid(::google::protobuf::int32 value);

  // optional string m_secretSkill = 16;
  inline bool has_m_secretskill() const;
  inline void clear_m_secretskill();
  static const int kMSecretSkillFieldNumber = 16;
  inline const ::std::string& m_secretskill() const;
  inline void set_m_secretskill(const ::std::string& value);
  inline void set_m_secretskill(const char* value);
  inline void set_m_secretskill(const char* value, size_t size);
  inline ::std::string* mutable_m_secretskill();
  inline ::std::string* release_m_secretskill();
  inline void set_allocated_m_secretskill(::std::string* m_secretskill);

  // optional string m_crypticSkill = 17;
  inline bool has_m_crypticskill() const;
  inline void clear_m_crypticskill();
  static const int kMCrypticSkillFieldNumber = 17;
  inline const ::std::string& m_crypticskill() const;
  inline void set_m_crypticskill(const ::std::string& value);
  inline void set_m_crypticskill(const char* value);
  inline void set_m_crypticskill(const char* value, size_t size);
  inline ::std::string* mutable_m_crypticskill();
  inline ::std::string* release_m_crypticskill();
  inline void set_allocated_m_crypticskill(::std::string* m_crypticskill);

  // optional string m_passiveSkill = 18;
  inline bool has_m_passiveskill() const;
  inline void clear_m_passiveskill();
  static const int kMPassiveSkillFieldNumber = 18;
  inline const ::std::string& m_passiveskill() const;
  inline void set_m_passiveskill(const ::std::string& value);
  inline void set_m_passiveskill(const char* value);
  inline void set_m_passiveskill(const char* value, size_t size);
  inline ::std::string* mutable_m_passiveskill();
  inline ::std::string* release_m_passiveskill();
  inline void set_allocated_m_passiveskill(::std::string* m_passiveskill);

  // @@protoc_insertion_point(class_scope:proto_ff.E_ShenequipEquip)
 private:
  inline void set_has_m_id();
  inline void clear_has_m_id();
  inline void set_has_m_name();
  inline void clear_has_m_name();
  inline void set_has_m_type();
  inline void clear_has_m_type();
  inline void set_has_m_grade();
  inline void clear_has_m_grade();
  inline void set_has_m_subtype();
  inline void clear_has_m_subtype();
  inline void set_has_m_level();
  inline void clear_has_m_level();
  inline void set_has_m_quality();
  inline void clear_has_m_quality();
  inline void set_has_m_star();
  inline void clear_has_m_star();
  inline void set_has_m_attributeid();
  inline void clear_has_m_attributeid();
  inline void set_has_m_decompose();
  inline void clear_has_m_decompose();
  inline void set_has_m_iscanbind();
  inline void clear_has_m_iscanbind();
  inline void set_has_m_istradebind();
  inline void clear_has_m_istradebind();
  inline void set_has_m_time();
  inline void clear_has_m_time();
  inline void set_has_m_broadcast();
  inline void clear_has_m_broadcast();
  inline void set_has_m_exclusiveid();
  inline void clear_has_m_exclusiveid();
  inline void set_has_m_secretskill();
  inline void clear_has_m_secretskill();
  inline void set_has_m_crypticskill();
  inline void clear_has_m_crypticskill();
  inline void set_has_m_passiveskill();
  inline void clear_has_m_passiveskill();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* m_name_;
  ::google::protobuf::int32 m_id_;
  ::google::protobuf::int32 m_type_;
  ::google::protobuf::int32 m_grade_;
  ::google::protobuf::int32 m_subtype_;
  ::google::protobuf::int32 m_level_;
  ::google::protobuf::int32 m_quality_;
  ::google::protobuf::int32 m_star_;
  ::google::protobuf::int32 m_attributeid_;
  ::std::string* m_decompose_;
  ::google::protobuf::int32 m_iscanbind_;
  ::google::protobuf::int32 m_istradebind_;
  ::google::protobuf::int32 m_time_;
  ::google::protobuf::int32 m_broadcast_;
  ::std::string* m_secretskill_;
  ::std::string* m_crypticskill_;
  ::std::string* m_passiveskill_;
  ::google::protobuf::int32 m_exclusiveid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(18 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fShenequip_2eproto();
  friend void protobuf_AssignDesc_E_5fShenequip_2eproto();
  friend void protobuf_ShutdownFile_E_5fShenequip_2eproto();

  void InitAsDefaultInstance();
  static E_ShenequipEquip* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_ShenequipEquip : public ::google::protobuf::Message {
 public:
  Sheet_ShenequipEquip();
  virtual ~Sheet_ShenequipEquip();

  Sheet_ShenequipEquip(const Sheet_ShenequipEquip& from);

  inline Sheet_ShenequipEquip& operator=(const Sheet_ShenequipEquip& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_ShenequipEquip& default_instance();

  void Swap(Sheet_ShenequipEquip* other);

  // implements Message ----------------------------------------------

  Sheet_ShenequipEquip* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_ShenequipEquip& from);
  void MergeFrom(const Sheet_ShenequipEquip& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.E_ShenequipEquip E_ShenequipEquip_List = 1;
  inline int e_shenequipequip_list_size() const;
  inline void clear_e_shenequipequip_list();
  static const int kEShenequipEquipListFieldNumber = 1;
  inline const ::proto_ff::E_ShenequipEquip& e_shenequipequip_list(int index) const;
  inline ::proto_ff::E_ShenequipEquip* mutable_e_shenequipequip_list(int index);
  inline ::proto_ff::E_ShenequipEquip* add_e_shenequipequip_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_ShenequipEquip >&
      e_shenequipequip_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_ShenequipEquip >*
      mutable_e_shenequipequip_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_ShenequipEquip)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_ShenequipEquip > e_shenequipequip_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fShenequip_2eproto();
  friend void protobuf_AssignDesc_E_5fShenequip_2eproto();
  friend void protobuf_ShutdownFile_E_5fShenequip_2eproto();

  void InitAsDefaultInstance();
  static Sheet_ShenequipEquip* default_instance_;
};
// -------------------------------------------------------------------

class E_ShenequipAttAttributeDesc : public ::google::protobuf::Message {
 public:
  E_ShenequipAttAttributeDesc();
  virtual ~E_ShenequipAttAttributeDesc();

  E_ShenequipAttAttributeDesc(const E_ShenequipAttAttributeDesc& from);

  inline E_ShenequipAttAttributeDesc& operator=(const E_ShenequipAttAttributeDesc& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_ShenequipAttAttributeDesc& default_instance();

  void Swap(E_ShenequipAttAttributeDesc* other);

  // implements Message ----------------------------------------------

  E_ShenequipAttAttributeDesc* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_ShenequipAttAttributeDesc& from);
  void MergeFrom(const E_ShenequipAttAttributeDesc& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 m_value = 1;
  inline bool has_m_value() const;
  inline void clear_m_value();
  static const int kMValueFieldNumber = 1;
  inline ::google::protobuf::int32 m_value() const;
  inline void set_m_value(::google::protobuf::int32 value);

  // optional int32 m_type = 2;
  inline bool has_m_type() const;
  inline void clear_m_type();
  static const int kMTypeFieldNumber = 2;
  inline ::google::protobuf::int32 m_type() const;
  inline void set_m_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.E_ShenequipAttAttributeDesc)
 private:
  inline void set_has_m_value();
  inline void clear_has_m_value();
  inline void set_has_m_type();
  inline void clear_has_m_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_value_;
  ::google::protobuf::int32 m_type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fShenequip_2eproto();
  friend void protobuf_AssignDesc_E_5fShenequip_2eproto();
  friend void protobuf_ShutdownFile_E_5fShenequip_2eproto();

  void InitAsDefaultInstance();
  static E_ShenequipAttAttributeDesc* default_instance_;
};
// -------------------------------------------------------------------

class E_ShenequipAttStarDesc : public ::google::protobuf::Message {
 public:
  E_ShenequipAttStarDesc();
  virtual ~E_ShenequipAttStarDesc();

  E_ShenequipAttStarDesc(const E_ShenequipAttStarDesc& from);

  inline E_ShenequipAttStarDesc& operator=(const E_ShenequipAttStarDesc& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_ShenequipAttStarDesc& default_instance();

  void Swap(E_ShenequipAttStarDesc* other);

  // implements Message ----------------------------------------------

  E_ShenequipAttStarDesc* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_ShenequipAttStarDesc& from);
  void MergeFrom(const E_ShenequipAttStarDesc& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 m_value = 1;
  inline bool has_m_value() const;
  inline void clear_m_value();
  static const int kMValueFieldNumber = 1;
  inline ::google::protobuf::int32 m_value() const;
  inline void set_m_value(::google::protobuf::int32 value);

  // optional int32 m_type = 2;
  inline bool has_m_type() const;
  inline void clear_m_type();
  static const int kMTypeFieldNumber = 2;
  inline ::google::protobuf::int32 m_type() const;
  inline void set_m_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.E_ShenequipAttStarDesc)
 private:
  inline void set_has_m_value();
  inline void clear_has_m_value();
  inline void set_has_m_type();
  inline void clear_has_m_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_value_;
  ::google::protobuf::int32 m_type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fShenequip_2eproto();
  friend void protobuf_AssignDesc_E_5fShenequip_2eproto();
  friend void protobuf_ShutdownFile_E_5fShenequip_2eproto();

  void InitAsDefaultInstance();
  static E_ShenequipAttStarDesc* default_instance_;
};
// -------------------------------------------------------------------

class E_ShenequipAtt : public ::google::protobuf::Message {
 public:
  E_ShenequipAtt();
  virtual ~E_ShenequipAtt();

  E_ShenequipAtt(const E_ShenequipAtt& from);

  inline E_ShenequipAtt& operator=(const E_ShenequipAtt& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_ShenequipAtt& default_instance();

  void Swap(E_ShenequipAtt* other);

  // implements Message ----------------------------------------------

  E_ShenequipAtt* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_ShenequipAtt& from);
  void MergeFrom(const E_ShenequipAtt& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 m_id = 1;
  inline bool has_m_id() const;
  inline void clear_m_id();
  static const int kMIdFieldNumber = 1;
  inline ::google::protobuf::int32 m_id() const;
  inline void set_m_id(::google::protobuf::int32 value);

  // repeated .proto_ff.E_ShenequipAttAttributeDesc m_attribute = 2;
  inline int m_attribute_size() const;
  inline void clear_m_attribute();
  static const int kMAttributeFieldNumber = 2;
  inline const ::proto_ff::E_ShenequipAttAttributeDesc& m_attribute(int index) const;
  inline ::proto_ff::E_ShenequipAttAttributeDesc* mutable_m_attribute(int index);
  inline ::proto_ff::E_ShenequipAttAttributeDesc* add_m_attribute();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_ShenequipAttAttributeDesc >&
      m_attribute() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_ShenequipAttAttributeDesc >*
      mutable_m_attribute();

  // repeated .proto_ff.E_ShenequipAttStarDesc m_star = 3;
  inline int m_star_size() const;
  inline void clear_m_star();
  static const int kMStarFieldNumber = 3;
  inline const ::proto_ff::E_ShenequipAttStarDesc& m_star(int index) const;
  inline ::proto_ff::E_ShenequipAttStarDesc* mutable_m_star(int index);
  inline ::proto_ff::E_ShenequipAttStarDesc* add_m_star();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_ShenequipAttStarDesc >&
      m_star() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_ShenequipAttStarDesc >*
      mutable_m_star();

  // @@protoc_insertion_point(class_scope:proto_ff.E_ShenequipAtt)
 private:
  inline void set_has_m_id();
  inline void clear_has_m_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_ShenequipAttAttributeDesc > m_attribute_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_ShenequipAttStarDesc > m_star_;
  ::google::protobuf::int32 m_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fShenequip_2eproto();
  friend void protobuf_AssignDesc_E_5fShenequip_2eproto();
  friend void protobuf_ShutdownFile_E_5fShenequip_2eproto();

  void InitAsDefaultInstance();
  static E_ShenequipAtt* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_ShenequipAtt : public ::google::protobuf::Message {
 public:
  Sheet_ShenequipAtt();
  virtual ~Sheet_ShenequipAtt();

  Sheet_ShenequipAtt(const Sheet_ShenequipAtt& from);

  inline Sheet_ShenequipAtt& operator=(const Sheet_ShenequipAtt& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_ShenequipAtt& default_instance();

  void Swap(Sheet_ShenequipAtt* other);

  // implements Message ----------------------------------------------

  Sheet_ShenequipAtt* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_ShenequipAtt& from);
  void MergeFrom(const Sheet_ShenequipAtt& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.E_ShenequipAtt E_ShenequipAtt_List = 1;
  inline int e_shenequipatt_list_size() const;
  inline void clear_e_shenequipatt_list();
  static const int kEShenequipAttListFieldNumber = 1;
  inline const ::proto_ff::E_ShenequipAtt& e_shenequipatt_list(int index) const;
  inline ::proto_ff::E_ShenequipAtt* mutable_e_shenequipatt_list(int index);
  inline ::proto_ff::E_ShenequipAtt* add_e_shenequipatt_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_ShenequipAtt >&
      e_shenequipatt_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_ShenequipAtt >*
      mutable_e_shenequipatt_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_ShenequipAtt)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_ShenequipAtt > e_shenequipatt_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fShenequip_2eproto();
  friend void protobuf_AssignDesc_E_5fShenequip_2eproto();
  friend void protobuf_ShutdownFile_E_5fShenequip_2eproto();

  void InitAsDefaultInstance();
  static Sheet_ShenequipAtt* default_instance_;
};
// -------------------------------------------------------------------

class E_ShenequipLvupAttributeDesc : public ::google::protobuf::Message {
 public:
  E_ShenequipLvupAttributeDesc();
  virtual ~E_ShenequipLvupAttributeDesc();

  E_ShenequipLvupAttributeDesc(const E_ShenequipLvupAttributeDesc& from);

  inline E_ShenequipLvupAttributeDesc& operator=(const E_ShenequipLvupAttributeDesc& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_ShenequipLvupAttributeDesc& default_instance();

  void Swap(E_ShenequipLvupAttributeDesc* other);

  // implements Message ----------------------------------------------

  E_ShenequipLvupAttributeDesc* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_ShenequipLvupAttributeDesc& from);
  void MergeFrom(const E_ShenequipLvupAttributeDesc& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 m_stepId = 1;
  inline bool has_m_stepid() const;
  inline void clear_m_stepid();
  static const int kMStepIdFieldNumber = 1;
  inline ::google::protobuf::int32 m_stepid() const;
  inline void set_m_stepid(::google::protobuf::int32 value);

  // optional int32 m_lvId = 2;
  inline bool has_m_lvid() const;
  inline void clear_m_lvid();
  static const int kMLvIdFieldNumber = 2;
  inline ::google::protobuf::int32 m_lvid() const;
  inline void set_m_lvid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.E_ShenequipLvupAttributeDesc)
 private:
  inline void set_has_m_stepid();
  inline void clear_has_m_stepid();
  inline void set_has_m_lvid();
  inline void clear_has_m_lvid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_stepid_;
  ::google::protobuf::int32 m_lvid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fShenequip_2eproto();
  friend void protobuf_AssignDesc_E_5fShenequip_2eproto();
  friend void protobuf_ShutdownFile_E_5fShenequip_2eproto();

  void InitAsDefaultInstance();
  static E_ShenequipLvupAttributeDesc* default_instance_;
};
// -------------------------------------------------------------------

class E_ShenequipLvup : public ::google::protobuf::Message {
 public:
  E_ShenequipLvup();
  virtual ~E_ShenequipLvup();

  E_ShenequipLvup(const E_ShenequipLvup& from);

  inline E_ShenequipLvup& operator=(const E_ShenequipLvup& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_ShenequipLvup& default_instance();

  void Swap(E_ShenequipLvup* other);

  // implements Message ----------------------------------------------

  E_ShenequipLvup* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_ShenequipLvup& from);
  void MergeFrom(const E_ShenequipLvup& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 m_id = 1;
  inline bool has_m_id() const;
  inline void clear_m_id();
  static const int kMIdFieldNumber = 1;
  inline ::google::protobuf::int32 m_id() const;
  inline void set_m_id(::google::protobuf::int32 value);

  // optional int32 m_lv = 2;
  inline bool has_m_lv() const;
  inline void clear_m_lv();
  static const int kMLvFieldNumber = 2;
  inline ::google::protobuf::int32 m_lv() const;
  inline void set_m_lv(::google::protobuf::int32 value);

  // optional int32 m_type = 3;
  inline bool has_m_type() const;
  inline void clear_m_type();
  static const int kMTypeFieldNumber = 3;
  inline ::google::protobuf::int32 m_type() const;
  inline void set_m_type(::google::protobuf::int32 value);

  // optional int32 m_itemID = 4;
  inline bool has_m_itemid() const;
  inline void clear_m_itemid();
  static const int kMItemIDFieldNumber = 4;
  inline ::google::protobuf::int32 m_itemid() const;
  inline void set_m_itemid(::google::protobuf::int32 value);

  // optional int32 m_num = 5;
  inline bool has_m_num() const;
  inline void clear_m_num();
  static const int kMNumFieldNumber = 5;
  inline ::google::protobuf::int32 m_num() const;
  inline void set_m_num(::google::protobuf::int32 value);

  // optional int32 m_advanceItem = 6;
  inline bool has_m_advanceitem() const;
  inline void clear_m_advanceitem();
  static const int kMAdvanceItemFieldNumber = 6;
  inline ::google::protobuf::int32 m_advanceitem() const;
  inline void set_m_advanceitem(::google::protobuf::int32 value);

  // optional int32 m_advanceNum = 7;
  inline bool has_m_advancenum() const;
  inline void clear_m_advancenum();
  static const int kMAdvanceNumFieldNumber = 7;
  inline ::google::protobuf::int32 m_advancenum() const;
  inline void set_m_advancenum(::google::protobuf::int32 value);

  // repeated .proto_ff.E_ShenequipLvupAttributeDesc m_attribute = 8;
  inline int m_attribute_size() const;
  inline void clear_m_attribute();
  static const int kMAttributeFieldNumber = 8;
  inline const ::proto_ff::E_ShenequipLvupAttributeDesc& m_attribute(int index) const;
  inline ::proto_ff::E_ShenequipLvupAttributeDesc* mutable_m_attribute(int index);
  inline ::proto_ff::E_ShenequipLvupAttributeDesc* add_m_attribute();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_ShenequipLvupAttributeDesc >&
      m_attribute() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_ShenequipLvupAttributeDesc >*
      mutable_m_attribute();

  // @@protoc_insertion_point(class_scope:proto_ff.E_ShenequipLvup)
 private:
  inline void set_has_m_id();
  inline void clear_has_m_id();
  inline void set_has_m_lv();
  inline void clear_has_m_lv();
  inline void set_has_m_type();
  inline void clear_has_m_type();
  inline void set_has_m_itemid();
  inline void clear_has_m_itemid();
  inline void set_has_m_num();
  inline void clear_has_m_num();
  inline void set_has_m_advanceitem();
  inline void clear_has_m_advanceitem();
  inline void set_has_m_advancenum();
  inline void clear_has_m_advancenum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_id_;
  ::google::protobuf::int32 m_lv_;
  ::google::protobuf::int32 m_type_;
  ::google::protobuf::int32 m_itemid_;
  ::google::protobuf::int32 m_num_;
  ::google::protobuf::int32 m_advanceitem_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_ShenequipLvupAttributeDesc > m_attribute_;
  ::google::protobuf::int32 m_advancenum_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fShenequip_2eproto();
  friend void protobuf_AssignDesc_E_5fShenequip_2eproto();
  friend void protobuf_ShutdownFile_E_5fShenequip_2eproto();

  void InitAsDefaultInstance();
  static E_ShenequipLvup* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_ShenequipLvup : public ::google::protobuf::Message {
 public:
  Sheet_ShenequipLvup();
  virtual ~Sheet_ShenequipLvup();

  Sheet_ShenequipLvup(const Sheet_ShenequipLvup& from);

  inline Sheet_ShenequipLvup& operator=(const Sheet_ShenequipLvup& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_ShenequipLvup& default_instance();

  void Swap(Sheet_ShenequipLvup* other);

  // implements Message ----------------------------------------------

  Sheet_ShenequipLvup* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_ShenequipLvup& from);
  void MergeFrom(const Sheet_ShenequipLvup& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.E_ShenequipLvup E_ShenequipLvup_List = 1;
  inline int e_shenequiplvup_list_size() const;
  inline void clear_e_shenequiplvup_list();
  static const int kEShenequipLvupListFieldNumber = 1;
  inline const ::proto_ff::E_ShenequipLvup& e_shenequiplvup_list(int index) const;
  inline ::proto_ff::E_ShenequipLvup* mutable_e_shenequiplvup_list(int index);
  inline ::proto_ff::E_ShenequipLvup* add_e_shenequiplvup_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_ShenequipLvup >&
      e_shenequiplvup_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_ShenequipLvup >*
      mutable_e_shenequiplvup_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_ShenequipLvup)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_ShenequipLvup > e_shenequiplvup_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fShenequip_2eproto();
  friend void protobuf_AssignDesc_E_5fShenequip_2eproto();
  friend void protobuf_ShutdownFile_E_5fShenequip_2eproto();

  void InitAsDefaultInstance();
  static Sheet_ShenequipLvup* default_instance_;
};
// -------------------------------------------------------------------

class E_ShenequipClear : public ::google::protobuf::Message {
 public:
  E_ShenequipClear();
  virtual ~E_ShenequipClear();

  E_ShenequipClear(const E_ShenequipClear& from);

  inline E_ShenequipClear& operator=(const E_ShenequipClear& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_ShenequipClear& default_instance();

  void Swap(E_ShenequipClear* other);

  // implements Message ----------------------------------------------

  E_ShenequipClear* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_ShenequipClear& from);
  void MergeFrom(const E_ShenequipClear& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 m_id = 1;
  inline bool has_m_id() const;
  inline void clear_m_id();
  static const int kMIdFieldNumber = 1;
  inline ::google::protobuf::int32 m_id() const;
  inline void set_m_id(::google::protobuf::int32 value);

  // optional int32 m_type = 2;
  inline bool has_m_type() const;
  inline void clear_m_type();
  static const int kMTypeFieldNumber = 2;
  inline ::google::protobuf::int32 m_type() const;
  inline void set_m_type(::google::protobuf::int32 value);

  // optional int32 m_lv = 3;
  inline bool has_m_lv() const;
  inline void clear_m_lv();
  static const int kMLvFieldNumber = 3;
  inline ::google::protobuf::int32 m_lv() const;
  inline void set_m_lv(::google::protobuf::int32 value);

  // optional int32 m_itemID = 4;
  inline bool has_m_itemid() const;
  inline void clear_m_itemid();
  static const int kMItemIDFieldNumber = 4;
  inline ::google::protobuf::int32 m_itemid() const;
  inline void set_m_itemid(::google::protobuf::int32 value);

  // optional int32 m_num = 5;
  inline bool has_m_num() const;
  inline void clear_m_num();
  static const int kMNumFieldNumber = 5;
  inline ::google::protobuf::int32 m_num() const;
  inline void set_m_num(::google::protobuf::int32 value);

  // optional int32 m_breakItem = 6;
  inline bool has_m_breakitem() const;
  inline void clear_m_breakitem();
  static const int kMBreakItemFieldNumber = 6;
  inline ::google::protobuf::int32 m_breakitem() const;
  inline void set_m_breakitem(::google::protobuf::int32 value);

  // optional int32 m_breakNum = 7;
  inline bool has_m_breaknum() const;
  inline void clear_m_breaknum();
  static const int kMBreakNumFieldNumber = 7;
  inline ::google::protobuf::int32 m_breaknum() const;
  inline void set_m_breaknum(::google::protobuf::int32 value);

  // optional int32 m_breakProgress = 8;
  inline bool has_m_breakprogress() const;
  inline void clear_m_breakprogress();
  static const int kMBreakProgressFieldNumber = 8;
  inline ::google::protobuf::int32 m_breakprogress() const;
  inline void set_m_breakprogress(::google::protobuf::int32 value);

  // optional int32 m_randomCounts = 9;
  inline bool has_m_randomcounts() const;
  inline void clear_m_randomcounts();
  static const int kMRandomCountsFieldNumber = 9;
  inline ::google::protobuf::int32 m_randomcounts() const;
  inline void set_m_randomcounts(::google::protobuf::int32 value);

  // optional int32 m_minus = 10;
  inline bool has_m_minus() const;
  inline void clear_m_minus();
  static const int kMMinusFieldNumber = 10;
  inline ::google::protobuf::int32 m_minus() const;
  inline void set_m_minus(::google::protobuf::int32 value);

  // optional int32 m_nextID = 11;
  inline bool has_m_nextid() const;
  inline void clear_m_nextid();
  static const int kMNextIDFieldNumber = 11;
  inline ::google::protobuf::int32 m_nextid() const;
  inline void set_m_nextid(::google::protobuf::int32 value);

  // repeated int32 m_percent = 12;
  inline int m_percent_size() const;
  inline void clear_m_percent();
  static const int kMPercentFieldNumber = 12;
  inline ::google::protobuf::int32 m_percent(int index) const;
  inline void set_m_percent(int index, ::google::protobuf::int32 value);
  inline void add_m_percent(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      m_percent() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_m_percent();

  // @@protoc_insertion_point(class_scope:proto_ff.E_ShenequipClear)
 private:
  inline void set_has_m_id();
  inline void clear_has_m_id();
  inline void set_has_m_type();
  inline void clear_has_m_type();
  inline void set_has_m_lv();
  inline void clear_has_m_lv();
  inline void set_has_m_itemid();
  inline void clear_has_m_itemid();
  inline void set_has_m_num();
  inline void clear_has_m_num();
  inline void set_has_m_breakitem();
  inline void clear_has_m_breakitem();
  inline void set_has_m_breaknum();
  inline void clear_has_m_breaknum();
  inline void set_has_m_breakprogress();
  inline void clear_has_m_breakprogress();
  inline void set_has_m_randomcounts();
  inline void clear_has_m_randomcounts();
  inline void set_has_m_minus();
  inline void clear_has_m_minus();
  inline void set_has_m_nextid();
  inline void clear_has_m_nextid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_id_;
  ::google::protobuf::int32 m_type_;
  ::google::protobuf::int32 m_lv_;
  ::google::protobuf::int32 m_itemid_;
  ::google::protobuf::int32 m_num_;
  ::google::protobuf::int32 m_breakitem_;
  ::google::protobuf::int32 m_breaknum_;
  ::google::protobuf::int32 m_breakprogress_;
  ::google::protobuf::int32 m_randomcounts_;
  ::google::protobuf::int32 m_minus_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > m_percent_;
  ::google::protobuf::int32 m_nextid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(12 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fShenequip_2eproto();
  friend void protobuf_AssignDesc_E_5fShenequip_2eproto();
  friend void protobuf_ShutdownFile_E_5fShenequip_2eproto();

  void InitAsDefaultInstance();
  static E_ShenequipClear* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_ShenequipClear : public ::google::protobuf::Message {
 public:
  Sheet_ShenequipClear();
  virtual ~Sheet_ShenequipClear();

  Sheet_ShenequipClear(const Sheet_ShenequipClear& from);

  inline Sheet_ShenequipClear& operator=(const Sheet_ShenequipClear& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_ShenequipClear& default_instance();

  void Swap(Sheet_ShenequipClear* other);

  // implements Message ----------------------------------------------

  Sheet_ShenequipClear* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_ShenequipClear& from);
  void MergeFrom(const Sheet_ShenequipClear& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.E_ShenequipClear E_ShenequipClear_List = 1;
  inline int e_shenequipclear_list_size() const;
  inline void clear_e_shenequipclear_list();
  static const int kEShenequipClearListFieldNumber = 1;
  inline const ::proto_ff::E_ShenequipClear& e_shenequipclear_list(int index) const;
  inline ::proto_ff::E_ShenequipClear* mutable_e_shenequipclear_list(int index);
  inline ::proto_ff::E_ShenequipClear* add_e_shenequipclear_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_ShenequipClear >&
      e_shenequipclear_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_ShenequipClear >*
      mutable_e_shenequipclear_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_ShenequipClear)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_ShenequipClear > e_shenequipclear_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fShenequip_2eproto();
  friend void protobuf_AssignDesc_E_5fShenequip_2eproto();
  friend void protobuf_ShutdownFile_E_5fShenequip_2eproto();

  void InitAsDefaultInstance();
  static Sheet_ShenequipClear* default_instance_;
};
// -------------------------------------------------------------------

class E_ShenequipAwakenAttributeDesc : public ::google::protobuf::Message {
 public:
  E_ShenequipAwakenAttributeDesc();
  virtual ~E_ShenequipAwakenAttributeDesc();

  E_ShenequipAwakenAttributeDesc(const E_ShenequipAwakenAttributeDesc& from);

  inline E_ShenequipAwakenAttributeDesc& operator=(const E_ShenequipAwakenAttributeDesc& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_ShenequipAwakenAttributeDesc& default_instance();

  void Swap(E_ShenequipAwakenAttributeDesc* other);

  // implements Message ----------------------------------------------

  E_ShenequipAwakenAttributeDesc* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_ShenequipAwakenAttributeDesc& from);
  void MergeFrom(const E_ShenequipAwakenAttributeDesc& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 m_value = 1;
  inline bool has_m_value() const;
  inline void clear_m_value();
  static const int kMValueFieldNumber = 1;
  inline ::google::protobuf::int32 m_value() const;
  inline void set_m_value(::google::protobuf::int32 value);

  // optional int32 m_type = 2;
  inline bool has_m_type() const;
  inline void clear_m_type();
  static const int kMTypeFieldNumber = 2;
  inline ::google::protobuf::int32 m_type() const;
  inline void set_m_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.E_ShenequipAwakenAttributeDesc)
 private:
  inline void set_has_m_value();
  inline void clear_has_m_value();
  inline void set_has_m_type();
  inline void clear_has_m_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_value_;
  ::google::protobuf::int32 m_type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fShenequip_2eproto();
  friend void protobuf_AssignDesc_E_5fShenequip_2eproto();
  friend void protobuf_ShutdownFile_E_5fShenequip_2eproto();

  void InitAsDefaultInstance();
  static E_ShenequipAwakenAttributeDesc* default_instance_;
};
// -------------------------------------------------------------------

class E_ShenequipAwaken : public ::google::protobuf::Message {
 public:
  E_ShenequipAwaken();
  virtual ~E_ShenequipAwaken();

  E_ShenequipAwaken(const E_ShenequipAwaken& from);

  inline E_ShenequipAwaken& operator=(const E_ShenequipAwaken& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_ShenequipAwaken& default_instance();

  void Swap(E_ShenequipAwaken* other);

  // implements Message ----------------------------------------------

  E_ShenequipAwaken* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_ShenequipAwaken& from);
  void MergeFrom(const E_ShenequipAwaken& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 m_id = 1;
  inline bool has_m_id() const;
  inline void clear_m_id();
  static const int kMIdFieldNumber = 1;
  inline ::google::protobuf::int32 m_id() const;
  inline void set_m_id(::google::protobuf::int32 value);

  // optional int32 m_type = 2;
  inline bool has_m_type() const;
  inline void clear_m_type();
  static const int kMTypeFieldNumber = 2;
  inline ::google::protobuf::int32 m_type() const;
  inline void set_m_type(::google::protobuf::int32 value);

  // optional int32 m_lv = 3;
  inline bool has_m_lv() const;
  inline void clear_m_lv();
  static const int kMLvFieldNumber = 3;
  inline ::google::protobuf::int32 m_lv() const;
  inline void set_m_lv(::google::protobuf::int32 value);

  // optional int32 m_itemID = 4;
  inline bool has_m_itemid() const;
  inline void clear_m_itemid();
  static const int kMItemIDFieldNumber = 4;
  inline ::google::protobuf::int32 m_itemid() const;
  inline void set_m_itemid(::google::protobuf::int32 value);

  // optional int32 m_num = 5;
  inline bool has_m_num() const;
  inline void clear_m_num();
  static const int kMNumFieldNumber = 5;
  inline ::google::protobuf::int32 m_num() const;
  inline void set_m_num(::google::protobuf::int32 value);

  // optional int32 m_awakeSkillID = 6;
  inline bool has_m_awakeskillid() const;
  inline void clear_m_awakeskillid();
  static const int kMAwakeSkillIDFieldNumber = 6;
  inline ::google::protobuf::int32 m_awakeskillid() const;
  inline void set_m_awakeskillid(::google::protobuf::int32 value);

  // repeated .proto_ff.E_ShenequipAwakenAttributeDesc m_attribute = 7;
  inline int m_attribute_size() const;
  inline void clear_m_attribute();
  static const int kMAttributeFieldNumber = 7;
  inline const ::proto_ff::E_ShenequipAwakenAttributeDesc& m_attribute(int index) const;
  inline ::proto_ff::E_ShenequipAwakenAttributeDesc* mutable_m_attribute(int index);
  inline ::proto_ff::E_ShenequipAwakenAttributeDesc* add_m_attribute();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_ShenequipAwakenAttributeDesc >&
      m_attribute() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_ShenequipAwakenAttributeDesc >*
      mutable_m_attribute();

  // @@protoc_insertion_point(class_scope:proto_ff.E_ShenequipAwaken)
 private:
  inline void set_has_m_id();
  inline void clear_has_m_id();
  inline void set_has_m_type();
  inline void clear_has_m_type();
  inline void set_has_m_lv();
  inline void clear_has_m_lv();
  inline void set_has_m_itemid();
  inline void clear_has_m_itemid();
  inline void set_has_m_num();
  inline void clear_has_m_num();
  inline void set_has_m_awakeskillid();
  inline void clear_has_m_awakeskillid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_id_;
  ::google::protobuf::int32 m_type_;
  ::google::protobuf::int32 m_lv_;
  ::google::protobuf::int32 m_itemid_;
  ::google::protobuf::int32 m_num_;
  ::google::protobuf::int32 m_awakeskillid_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_ShenequipAwakenAttributeDesc > m_attribute_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fShenequip_2eproto();
  friend void protobuf_AssignDesc_E_5fShenequip_2eproto();
  friend void protobuf_ShutdownFile_E_5fShenequip_2eproto();

  void InitAsDefaultInstance();
  static E_ShenequipAwaken* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_ShenequipAwaken : public ::google::protobuf::Message {
 public:
  Sheet_ShenequipAwaken();
  virtual ~Sheet_ShenequipAwaken();

  Sheet_ShenequipAwaken(const Sheet_ShenequipAwaken& from);

  inline Sheet_ShenequipAwaken& operator=(const Sheet_ShenequipAwaken& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_ShenequipAwaken& default_instance();

  void Swap(Sheet_ShenequipAwaken* other);

  // implements Message ----------------------------------------------

  Sheet_ShenequipAwaken* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_ShenequipAwaken& from);
  void MergeFrom(const Sheet_ShenequipAwaken& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.E_ShenequipAwaken E_ShenequipAwaken_List = 1;
  inline int e_shenequipawaken_list_size() const;
  inline void clear_e_shenequipawaken_list();
  static const int kEShenequipAwakenListFieldNumber = 1;
  inline const ::proto_ff::E_ShenequipAwaken& e_shenequipawaken_list(int index) const;
  inline ::proto_ff::E_ShenequipAwaken* mutable_e_shenequipawaken_list(int index);
  inline ::proto_ff::E_ShenequipAwaken* add_e_shenequipawaken_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_ShenequipAwaken >&
      e_shenequipawaken_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_ShenequipAwaken >*
      mutable_e_shenequipawaken_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_ShenequipAwaken)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_ShenequipAwaken > e_shenequipawaken_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fShenequip_2eproto();
  friend void protobuf_AssignDesc_E_5fShenequip_2eproto();
  friend void protobuf_ShutdownFile_E_5fShenequip_2eproto();

  void InitAsDefaultInstance();
  static Sheet_ShenequipAwaken* default_instance_;
};
// -------------------------------------------------------------------

class E_ShenequipStarupMaterialDesc : public ::google::protobuf::Message {
 public:
  E_ShenequipStarupMaterialDesc();
  virtual ~E_ShenequipStarupMaterialDesc();

  E_ShenequipStarupMaterialDesc(const E_ShenequipStarupMaterialDesc& from);

  inline E_ShenequipStarupMaterialDesc& operator=(const E_ShenequipStarupMaterialDesc& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_ShenequipStarupMaterialDesc& default_instance();

  void Swap(E_ShenequipStarupMaterialDesc* other);

  // implements Message ----------------------------------------------

  E_ShenequipStarupMaterialDesc* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_ShenequipStarupMaterialDesc& from);
  void MergeFrom(const E_ShenequipStarupMaterialDesc& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 m_star = 1;
  inline bool has_m_star() const;
  inline void clear_m_star();
  static const int kMStarFieldNumber = 1;
  inline ::google::protobuf::int32 m_star() const;
  inline void set_m_star(::google::protobuf::int32 value);

  // optional int32 m_quality = 2;
  inline bool has_m_quality() const;
  inline void clear_m_quality();
  static const int kMQualityFieldNumber = 2;
  inline ::google::protobuf::int32 m_quality() const;
  inline void set_m_quality(::google::protobuf::int32 value);

  // optional int32 m_num = 3;
  inline bool has_m_num() const;
  inline void clear_m_num();
  static const int kMNumFieldNumber = 3;
  inline ::google::protobuf::int32 m_num() const;
  inline void set_m_num(::google::protobuf::int32 value);

  // optional int32 m_grade = 4;
  inline bool has_m_grade() const;
  inline void clear_m_grade();
  static const int kMGradeFieldNumber = 4;
  inline ::google::protobuf::int32 m_grade() const;
  inline void set_m_grade(::google::protobuf::int32 value);

  // optional int32 m_type = 5;
  inline bool has_m_type() const;
  inline void clear_m_type();
  static const int kMTypeFieldNumber = 5;
  inline ::google::protobuf::int32 m_type() const;
  inline void set_m_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.E_ShenequipStarupMaterialDesc)
 private:
  inline void set_has_m_star();
  inline void clear_has_m_star();
  inline void set_has_m_quality();
  inline void clear_has_m_quality();
  inline void set_has_m_num();
  inline void clear_has_m_num();
  inline void set_has_m_grade();
  inline void clear_has_m_grade();
  inline void set_has_m_type();
  inline void clear_has_m_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_star_;
  ::google::protobuf::int32 m_quality_;
  ::google::protobuf::int32 m_num_;
  ::google::protobuf::int32 m_grade_;
  ::google::protobuf::int32 m_type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fShenequip_2eproto();
  friend void protobuf_AssignDesc_E_5fShenequip_2eproto();
  friend void protobuf_ShutdownFile_E_5fShenequip_2eproto();

  void InitAsDefaultInstance();
  static E_ShenequipStarupMaterialDesc* default_instance_;
};
// -------------------------------------------------------------------

class E_ShenequipStarup : public ::google::protobuf::Message {
 public:
  E_ShenequipStarup();
  virtual ~E_ShenequipStarup();

  E_ShenequipStarup(const E_ShenequipStarup& from);

  inline E_ShenequipStarup& operator=(const E_ShenequipStarup& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_ShenequipStarup& default_instance();

  void Swap(E_ShenequipStarup* other);

  // implements Message ----------------------------------------------

  E_ShenequipStarup* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_ShenequipStarup& from);
  void MergeFrom(const E_ShenequipStarup& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 m_id = 1;
  inline bool has_m_id() const;
  inline void clear_m_id();
  static const int kMIdFieldNumber = 1;
  inline ::google::protobuf::int32 m_id() const;
  inline void set_m_id(::google::protobuf::int32 value);

  // optional int32 m_grade = 2;
  inline bool has_m_grade() const;
  inline void clear_m_grade();
  static const int kMGradeFieldNumber = 2;
  inline ::google::protobuf::int32 m_grade() const;
  inline void set_m_grade(::google::protobuf::int32 value);

  // optional int32 m_quality = 3;
  inline bool has_m_quality() const;
  inline void clear_m_quality();
  static const int kMQualityFieldNumber = 3;
  inline ::google::protobuf::int32 m_quality() const;
  inline void set_m_quality(::google::protobuf::int32 value);

  // optional int32 m_stars = 4;
  inline bool has_m_stars() const;
  inline void clear_m_stars();
  static const int kMStarsFieldNumber = 4;
  inline ::google::protobuf::int32 m_stars() const;
  inline void set_m_stars(::google::protobuf::int32 value);

  // optional int32 m_nextID = 5;
  inline bool has_m_nextid() const;
  inline void clear_m_nextid();
  static const int kMNextIDFieldNumber = 5;
  inline ::google::protobuf::int32 m_nextid() const;
  inline void set_m_nextid(::google::protobuf::int32 value);

  // optional int32 m_lastID = 6;
  inline bool has_m_lastid() const;
  inline void clear_m_lastid();
  static const int kMLastIDFieldNumber = 6;
  inline ::google::protobuf::int32 m_lastid() const;
  inline void set_m_lastid(::google::protobuf::int32 value);

  // optional int32 m_percent = 7;
  inline bool has_m_percent() const;
  inline void clear_m_percent();
  static const int kMPercentFieldNumber = 7;
  inline ::google::protobuf::int32 m_percent() const;
  inline void set_m_percent(::google::protobuf::int32 value);

  // repeated .proto_ff.E_ShenequipStarupMaterialDesc m_material = 8;
  inline int m_material_size() const;
  inline void clear_m_material();
  static const int kMMaterialFieldNumber = 8;
  inline const ::proto_ff::E_ShenequipStarupMaterialDesc& m_material(int index) const;
  inline ::proto_ff::E_ShenequipStarupMaterialDesc* mutable_m_material(int index);
  inline ::proto_ff::E_ShenequipStarupMaterialDesc* add_m_material();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_ShenequipStarupMaterialDesc >&
      m_material() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_ShenequipStarupMaterialDesc >*
      mutable_m_material();

  // @@protoc_insertion_point(class_scope:proto_ff.E_ShenequipStarup)
 private:
  inline void set_has_m_id();
  inline void clear_has_m_id();
  inline void set_has_m_grade();
  inline void clear_has_m_grade();
  inline void set_has_m_quality();
  inline void clear_has_m_quality();
  inline void set_has_m_stars();
  inline void clear_has_m_stars();
  inline void set_has_m_nextid();
  inline void clear_has_m_nextid();
  inline void set_has_m_lastid();
  inline void clear_has_m_lastid();
  inline void set_has_m_percent();
  inline void clear_has_m_percent();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_id_;
  ::google::protobuf::int32 m_grade_;
  ::google::protobuf::int32 m_quality_;
  ::google::protobuf::int32 m_stars_;
  ::google::protobuf::int32 m_nextid_;
  ::google::protobuf::int32 m_lastid_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_ShenequipStarupMaterialDesc > m_material_;
  ::google::protobuf::int32 m_percent_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fShenequip_2eproto();
  friend void protobuf_AssignDesc_E_5fShenequip_2eproto();
  friend void protobuf_ShutdownFile_E_5fShenequip_2eproto();

  void InitAsDefaultInstance();
  static E_ShenequipStarup* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_ShenequipStarup : public ::google::protobuf::Message {
 public:
  Sheet_ShenequipStarup();
  virtual ~Sheet_ShenequipStarup();

  Sheet_ShenequipStarup(const Sheet_ShenequipStarup& from);

  inline Sheet_ShenequipStarup& operator=(const Sheet_ShenequipStarup& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_ShenequipStarup& default_instance();

  void Swap(Sheet_ShenequipStarup* other);

  // implements Message ----------------------------------------------

  Sheet_ShenequipStarup* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_ShenequipStarup& from);
  void MergeFrom(const Sheet_ShenequipStarup& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.E_ShenequipStarup E_ShenequipStarup_List = 1;
  inline int e_shenequipstarup_list_size() const;
  inline void clear_e_shenequipstarup_list();
  static const int kEShenequipStarupListFieldNumber = 1;
  inline const ::proto_ff::E_ShenequipStarup& e_shenequipstarup_list(int index) const;
  inline ::proto_ff::E_ShenequipStarup* mutable_e_shenequipstarup_list(int index);
  inline ::proto_ff::E_ShenequipStarup* add_e_shenequipstarup_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_ShenequipStarup >&
      e_shenequipstarup_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_ShenequipStarup >*
      mutable_e_shenequipstarup_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_ShenequipStarup)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_ShenequipStarup > e_shenequipstarup_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fShenequip_2eproto();
  friend void protobuf_AssignDesc_E_5fShenequip_2eproto();
  friend void protobuf_ShutdownFile_E_5fShenequip_2eproto();

  void InitAsDefaultInstance();
  static Sheet_ShenequipStarup* default_instance_;
};
// -------------------------------------------------------------------

class E_ShenequipPreposeRewardDesc : public ::google::protobuf::Message {
 public:
  E_ShenequipPreposeRewardDesc();
  virtual ~E_ShenequipPreposeRewardDesc();

  E_ShenequipPreposeRewardDesc(const E_ShenequipPreposeRewardDesc& from);

  inline E_ShenequipPreposeRewardDesc& operator=(const E_ShenequipPreposeRewardDesc& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_ShenequipPreposeRewardDesc& default_instance();

  void Swap(E_ShenequipPreposeRewardDesc* other);

  // implements Message ----------------------------------------------

  E_ShenequipPreposeRewardDesc* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_ShenequipPreposeRewardDesc& from);
  void MergeFrom(const E_ShenequipPreposeRewardDesc& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 m_num = 1;
  inline bool has_m_num() const;
  inline void clear_m_num();
  static const int kMNumFieldNumber = 1;
  inline ::google::protobuf::int32 m_num() const;
  inline void set_m_num(::google::protobuf::int32 value);

  // optional int32 m_item = 2;
  inline bool has_m_item() const;
  inline void clear_m_item();
  static const int kMItemFieldNumber = 2;
  inline ::google::protobuf::int32 m_item() const;
  inline void set_m_item(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.E_ShenequipPreposeRewardDesc)
 private:
  inline void set_has_m_num();
  inline void clear_has_m_num();
  inline void set_has_m_item();
  inline void clear_has_m_item();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_num_;
  ::google::protobuf::int32 m_item_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fShenequip_2eproto();
  friend void protobuf_AssignDesc_E_5fShenequip_2eproto();
  friend void protobuf_ShutdownFile_E_5fShenequip_2eproto();

  void InitAsDefaultInstance();
  static E_ShenequipPreposeRewardDesc* default_instance_;
};
// -------------------------------------------------------------------

class E_ShenequipPrepose : public ::google::protobuf::Message {
 public:
  E_ShenequipPrepose();
  virtual ~E_ShenequipPrepose();

  E_ShenequipPrepose(const E_ShenequipPrepose& from);

  inline E_ShenequipPrepose& operator=(const E_ShenequipPrepose& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_ShenequipPrepose& default_instance();

  void Swap(E_ShenequipPrepose* other);

  // implements Message ----------------------------------------------

  E_ShenequipPrepose* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_ShenequipPrepose& from);
  void MergeFrom(const E_ShenequipPrepose& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 m_id = 1;
  inline bool has_m_id() const;
  inline void clear_m_id();
  static const int kMIdFieldNumber = 1;
  inline ::google::protobuf::int32 m_id() const;
  inline void set_m_id(::google::protobuf::int32 value);

  // optional int32 m_condition = 2;
  inline bool has_m_condition() const;
  inline void clear_m_condition();
  static const int kMConditionFieldNumber = 2;
  inline ::google::protobuf::int32 m_condition() const;
  inline void set_m_condition(::google::protobuf::int32 value);

  // optional int32 m_value = 3;
  inline bool has_m_value() const;
  inline void clear_m_value();
  static const int kMValueFieldNumber = 3;
  inline ::google::protobuf::int32 m_value() const;
  inline void set_m_value(::google::protobuf::int32 value);

  // repeated .proto_ff.E_ShenequipPreposeRewardDesc m_reward = 4;
  inline int m_reward_size() const;
  inline void clear_m_reward();
  static const int kMRewardFieldNumber = 4;
  inline const ::proto_ff::E_ShenequipPreposeRewardDesc& m_reward(int index) const;
  inline ::proto_ff::E_ShenequipPreposeRewardDesc* mutable_m_reward(int index);
  inline ::proto_ff::E_ShenequipPreposeRewardDesc* add_m_reward();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_ShenequipPreposeRewardDesc >&
      m_reward() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_ShenequipPreposeRewardDesc >*
      mutable_m_reward();

  // @@protoc_insertion_point(class_scope:proto_ff.E_ShenequipPrepose)
 private:
  inline void set_has_m_id();
  inline void clear_has_m_id();
  inline void set_has_m_condition();
  inline void clear_has_m_condition();
  inline void set_has_m_value();
  inline void clear_has_m_value();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_id_;
  ::google::protobuf::int32 m_condition_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_ShenequipPreposeRewardDesc > m_reward_;
  ::google::protobuf::int32 m_value_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fShenequip_2eproto();
  friend void protobuf_AssignDesc_E_5fShenequip_2eproto();
  friend void protobuf_ShutdownFile_E_5fShenequip_2eproto();

  void InitAsDefaultInstance();
  static E_ShenequipPrepose* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_ShenequipPrepose : public ::google::protobuf::Message {
 public:
  Sheet_ShenequipPrepose();
  virtual ~Sheet_ShenequipPrepose();

  Sheet_ShenequipPrepose(const Sheet_ShenequipPrepose& from);

  inline Sheet_ShenequipPrepose& operator=(const Sheet_ShenequipPrepose& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_ShenequipPrepose& default_instance();

  void Swap(Sheet_ShenequipPrepose* other);

  // implements Message ----------------------------------------------

  Sheet_ShenequipPrepose* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_ShenequipPrepose& from);
  void MergeFrom(const Sheet_ShenequipPrepose& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.E_ShenequipPrepose E_ShenequipPrepose_List = 1;
  inline int e_shenequipprepose_list_size() const;
  inline void clear_e_shenequipprepose_list();
  static const int kEShenequipPreposeListFieldNumber = 1;
  inline const ::proto_ff::E_ShenequipPrepose& e_shenequipprepose_list(int index) const;
  inline ::proto_ff::E_ShenequipPrepose* mutable_e_shenequipprepose_list(int index);
  inline ::proto_ff::E_ShenequipPrepose* add_e_shenequipprepose_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_ShenequipPrepose >&
      e_shenequipprepose_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_ShenequipPrepose >*
      mutable_e_shenequipprepose_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_ShenequipPrepose)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_ShenequipPrepose > e_shenequipprepose_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fShenequip_2eproto();
  friend void protobuf_AssignDesc_E_5fShenequip_2eproto();
  friend void protobuf_ShutdownFile_E_5fShenequip_2eproto();

  void InitAsDefaultInstance();
  static Sheet_ShenequipPrepose* default_instance_;
};
// -------------------------------------------------------------------

class E_ShenequipDominance : public ::google::protobuf::Message {
 public:
  E_ShenequipDominance();
  virtual ~E_ShenequipDominance();

  E_ShenequipDominance(const E_ShenequipDominance& from);

  inline E_ShenequipDominance& operator=(const E_ShenequipDominance& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_ShenequipDominance& default_instance();

  void Swap(E_ShenequipDominance* other);

  // implements Message ----------------------------------------------

  E_ShenequipDominance* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_ShenequipDominance& from);
  void MergeFrom(const E_ShenequipDominance& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 m_id = 1;
  inline bool has_m_id() const;
  inline void clear_m_id();
  static const int kMIdFieldNumber = 1;
  inline ::google::protobuf::int32 m_id() const;
  inline void set_m_id(::google::protobuf::int32 value);

  // optional int32 m_slotId = 2;
  inline bool has_m_slotid() const;
  inline void clear_m_slotid();
  static const int kMSlotIdFieldNumber = 2;
  inline ::google::protobuf::int32 m_slotid() const;
  inline void set_m_slotid(::google::protobuf::int32 value);

  // optional int32 m_type = 3;
  inline bool has_m_type() const;
  inline void clear_m_type();
  static const int kMTypeFieldNumber = 3;
  inline ::google::protobuf::int32 m_type() const;
  inline void set_m_type(::google::protobuf::int32 value);

  // optional string m_sign = 4;
  inline bool has_m_sign() const;
  inline void clear_m_sign();
  static const int kMSignFieldNumber = 4;
  inline const ::std::string& m_sign() const;
  inline void set_m_sign(const ::std::string& value);
  inline void set_m_sign(const char* value);
  inline void set_m_sign(const char* value, size_t size);
  inline ::std::string* mutable_m_sign();
  inline ::std::string* release_m_sign();
  inline void set_allocated_m_sign(::std::string* m_sign);

  // optional int32 m_quality = 5;
  inline bool has_m_quality() const;
  inline void clear_m_quality();
  static const int kMQualityFieldNumber = 5;
  inline ::google::protobuf::int32 m_quality() const;
  inline void set_m_quality(::google::protobuf::int32 value);

  // optional int32 m_star = 6;
  inline bool has_m_star() const;
  inline void clear_m_star();
  static const int kMStarFieldNumber = 6;
  inline ::google::protobuf::int32 m_star() const;
  inline void set_m_star(::google::protobuf::int32 value);

  // optional int32 m_control = 7;
  inline bool has_m_control() const;
  inline void clear_m_control();
  static const int kMControlFieldNumber = 7;
  inline ::google::protobuf::int32 m_control() const;
  inline void set_m_control(::google::protobuf::int32 value);

  // optional int32 m_secret = 8;
  inline bool has_m_secret() const;
  inline void clear_m_secret();
  static const int kMSecretFieldNumber = 8;
  inline ::google::protobuf::int32 m_secret() const;
  inline void set_m_secret(::google::protobuf::int32 value);

  // optional int32 m_passive = 9;
  inline bool has_m_passive() const;
  inline void clear_m_passive();
  static const int kMPassiveFieldNumber = 9;
  inline ::google::protobuf::int32 m_passive() const;
  inline void set_m_passive(::google::protobuf::int32 value);

  // optional int32 m_dark = 10;
  inline bool has_m_dark() const;
  inline void clear_m_dark();
  static const int kMDarkFieldNumber = 10;
  inline ::google::protobuf::int32 m_dark() const;
  inline void set_m_dark(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.E_ShenequipDominance)
 private:
  inline void set_has_m_id();
  inline void clear_has_m_id();
  inline void set_has_m_slotid();
  inline void clear_has_m_slotid();
  inline void set_has_m_type();
  inline void clear_has_m_type();
  inline void set_has_m_sign();
  inline void clear_has_m_sign();
  inline void set_has_m_quality();
  inline void clear_has_m_quality();
  inline void set_has_m_star();
  inline void clear_has_m_star();
  inline void set_has_m_control();
  inline void clear_has_m_control();
  inline void set_has_m_secret();
  inline void clear_has_m_secret();
  inline void set_has_m_passive();
  inline void clear_has_m_passive();
  inline void set_has_m_dark();
  inline void clear_has_m_dark();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_id_;
  ::google::protobuf::int32 m_slotid_;
  ::std::string* m_sign_;
  ::google::protobuf::int32 m_type_;
  ::google::protobuf::int32 m_quality_;
  ::google::protobuf::int32 m_star_;
  ::google::protobuf::int32 m_control_;
  ::google::protobuf::int32 m_secret_;
  ::google::protobuf::int32 m_passive_;
  ::google::protobuf::int32 m_dark_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(10 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fShenequip_2eproto();
  friend void protobuf_AssignDesc_E_5fShenequip_2eproto();
  friend void protobuf_ShutdownFile_E_5fShenequip_2eproto();

  void InitAsDefaultInstance();
  static E_ShenequipDominance* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_ShenequipDominance : public ::google::protobuf::Message {
 public:
  Sheet_ShenequipDominance();
  virtual ~Sheet_ShenequipDominance();

  Sheet_ShenequipDominance(const Sheet_ShenequipDominance& from);

  inline Sheet_ShenequipDominance& operator=(const Sheet_ShenequipDominance& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_ShenequipDominance& default_instance();

  void Swap(Sheet_ShenequipDominance* other);

  // implements Message ----------------------------------------------

  Sheet_ShenequipDominance* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_ShenequipDominance& from);
  void MergeFrom(const Sheet_ShenequipDominance& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.E_ShenequipDominance E_ShenequipDominance_List = 1;
  inline int e_shenequipdominance_list_size() const;
  inline void clear_e_shenequipdominance_list();
  static const int kEShenequipDominanceListFieldNumber = 1;
  inline const ::proto_ff::E_ShenequipDominance& e_shenequipdominance_list(int index) const;
  inline ::proto_ff::E_ShenequipDominance* mutable_e_shenequipdominance_list(int index);
  inline ::proto_ff::E_ShenequipDominance* add_e_shenequipdominance_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_ShenequipDominance >&
      e_shenequipdominance_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_ShenequipDominance >*
      mutable_e_shenequipdominance_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_ShenequipDominance)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_ShenequipDominance > e_shenequipdominance_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fShenequip_2eproto();
  friend void protobuf_AssignDesc_E_5fShenequip_2eproto();
  friend void protobuf_ShutdownFile_E_5fShenequip_2eproto();

  void InitAsDefaultInstance();
  static Sheet_ShenequipDominance* default_instance_;
};
// -------------------------------------------------------------------

class E_ShenequipAdvancedAttributeDesc : public ::google::protobuf::Message {
 public:
  E_ShenequipAdvancedAttributeDesc();
  virtual ~E_ShenequipAdvancedAttributeDesc();

  E_ShenequipAdvancedAttributeDesc(const E_ShenequipAdvancedAttributeDesc& from);

  inline E_ShenequipAdvancedAttributeDesc& operator=(const E_ShenequipAdvancedAttributeDesc& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_ShenequipAdvancedAttributeDesc& default_instance();

  void Swap(E_ShenequipAdvancedAttributeDesc* other);

  // implements Message ----------------------------------------------

  E_ShenequipAdvancedAttributeDesc* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_ShenequipAdvancedAttributeDesc& from);
  void MergeFrom(const E_ShenequipAdvancedAttributeDesc& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 m_value = 1;
  inline bool has_m_value() const;
  inline void clear_m_value();
  static const int kMValueFieldNumber = 1;
  inline ::google::protobuf::int32 m_value() const;
  inline void set_m_value(::google::protobuf::int32 value);

  // optional int32 m_type = 2;
  inline bool has_m_type() const;
  inline void clear_m_type();
  static const int kMTypeFieldNumber = 2;
  inline ::google::protobuf::int32 m_type() const;
  inline void set_m_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.E_ShenequipAdvancedAttributeDesc)
 private:
  inline void set_has_m_value();
  inline void clear_has_m_value();
  inline void set_has_m_type();
  inline void clear_has_m_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_value_;
  ::google::protobuf::int32 m_type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fShenequip_2eproto();
  friend void protobuf_AssignDesc_E_5fShenequip_2eproto();
  friend void protobuf_ShutdownFile_E_5fShenequip_2eproto();

  void InitAsDefaultInstance();
  static E_ShenequipAdvancedAttributeDesc* default_instance_;
};
// -------------------------------------------------------------------

class E_ShenequipAdvanced : public ::google::protobuf::Message {
 public:
  E_ShenequipAdvanced();
  virtual ~E_ShenequipAdvanced();

  E_ShenequipAdvanced(const E_ShenequipAdvanced& from);

  inline E_ShenequipAdvanced& operator=(const E_ShenequipAdvanced& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_ShenequipAdvanced& default_instance();

  void Swap(E_ShenequipAdvanced* other);

  // implements Message ----------------------------------------------

  E_ShenequipAdvanced* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_ShenequipAdvanced& from);
  void MergeFrom(const E_ShenequipAdvanced& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 m_id = 1;
  inline bool has_m_id() const;
  inline void clear_m_id();
  static const int kMIdFieldNumber = 1;
  inline ::google::protobuf::int32 m_id() const;
  inline void set_m_id(::google::protobuf::int32 value);

  // optional int32 m_type = 2;
  inline bool has_m_type() const;
  inline void clear_m_type();
  static const int kMTypeFieldNumber = 2;
  inline ::google::protobuf::int32 m_type() const;
  inline void set_m_type(::google::protobuf::int32 value);

  // optional int32 m_lv = 3;
  inline bool has_m_lv() const;
  inline void clear_m_lv();
  static const int kMLvFieldNumber = 3;
  inline ::google::protobuf::int32 m_lv() const;
  inline void set_m_lv(::google::protobuf::int32 value);

  // optional int32 m_starLimit = 4;
  inline bool has_m_starlimit() const;
  inline void clear_m_starlimit();
  static const int kMStarLimitFieldNumber = 4;
  inline ::google::protobuf::int32 m_starlimit() const;
  inline void set_m_starlimit(::google::protobuf::int32 value);

  // optional int32 m_materials = 5;
  inline bool has_m_materials() const;
  inline void clear_m_materials();
  static const int kMMaterialsFieldNumber = 5;
  inline ::google::protobuf::int32 m_materials() const;
  inline void set_m_materials(::google::protobuf::int32 value);

  // optional int32 m_num = 6;
  inline bool has_m_num() const;
  inline void clear_m_num();
  static const int kMNumFieldNumber = 6;
  inline ::google::protobuf::int32 m_num() const;
  inline void set_m_num(::google::protobuf::int32 value);

  // optional int32 m_luckyMax = 7;
  inline bool has_m_luckymax() const;
  inline void clear_m_luckymax();
  static const int kMLuckyMaxFieldNumber = 7;
  inline ::google::protobuf::int32 m_luckymax() const;
  inline void set_m_luckymax(::google::protobuf::int32 value);

  // optional int32 m_luckyAdd = 8;
  inline bool has_m_luckyadd() const;
  inline void clear_m_luckyadd();
  static const int kMLuckyAddFieldNumber = 8;
  inline ::google::protobuf::int32 m_luckyadd() const;
  inline void set_m_luckyadd(::google::protobuf::int32 value);

  // repeated .proto_ff.E_ShenequipAdvancedAttributeDesc m_attribute = 9;
  inline int m_attribute_size() const;
  inline void clear_m_attribute();
  static const int kMAttributeFieldNumber = 9;
  inline const ::proto_ff::E_ShenequipAdvancedAttributeDesc& m_attribute(int index) const;
  inline ::proto_ff::E_ShenequipAdvancedAttributeDesc* mutable_m_attribute(int index);
  inline ::proto_ff::E_ShenequipAdvancedAttributeDesc* add_m_attribute();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_ShenequipAdvancedAttributeDesc >&
      m_attribute() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_ShenequipAdvancedAttributeDesc >*
      mutable_m_attribute();

  // @@protoc_insertion_point(class_scope:proto_ff.E_ShenequipAdvanced)
 private:
  inline void set_has_m_id();
  inline void clear_has_m_id();
  inline void set_has_m_type();
  inline void clear_has_m_type();
  inline void set_has_m_lv();
  inline void clear_has_m_lv();
  inline void set_has_m_starlimit();
  inline void clear_has_m_starlimit();
  inline void set_has_m_materials();
  inline void clear_has_m_materials();
  inline void set_has_m_num();
  inline void clear_has_m_num();
  inline void set_has_m_luckymax();
  inline void clear_has_m_luckymax();
  inline void set_has_m_luckyadd();
  inline void clear_has_m_luckyadd();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_id_;
  ::google::protobuf::int32 m_type_;
  ::google::protobuf::int32 m_lv_;
  ::google::protobuf::int32 m_starlimit_;
  ::google::protobuf::int32 m_materials_;
  ::google::protobuf::int32 m_num_;
  ::google::protobuf::int32 m_luckymax_;
  ::google::protobuf::int32 m_luckyadd_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_ShenequipAdvancedAttributeDesc > m_attribute_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(9 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fShenequip_2eproto();
  friend void protobuf_AssignDesc_E_5fShenequip_2eproto();
  friend void protobuf_ShutdownFile_E_5fShenequip_2eproto();

  void InitAsDefaultInstance();
  static E_ShenequipAdvanced* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_ShenequipAdvanced : public ::google::protobuf::Message {
 public:
  Sheet_ShenequipAdvanced();
  virtual ~Sheet_ShenequipAdvanced();

  Sheet_ShenequipAdvanced(const Sheet_ShenequipAdvanced& from);

  inline Sheet_ShenequipAdvanced& operator=(const Sheet_ShenequipAdvanced& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_ShenequipAdvanced& default_instance();

  void Swap(Sheet_ShenequipAdvanced* other);

  // implements Message ----------------------------------------------

  Sheet_ShenequipAdvanced* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_ShenequipAdvanced& from);
  void MergeFrom(const Sheet_ShenequipAdvanced& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.E_ShenequipAdvanced E_ShenequipAdvanced_List = 1;
  inline int e_shenequipadvanced_list_size() const;
  inline void clear_e_shenequipadvanced_list();
  static const int kEShenequipAdvancedListFieldNumber = 1;
  inline const ::proto_ff::E_ShenequipAdvanced& e_shenequipadvanced_list(int index) const;
  inline ::proto_ff::E_ShenequipAdvanced* mutable_e_shenequipadvanced_list(int index);
  inline ::proto_ff::E_ShenequipAdvanced* add_e_shenequipadvanced_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_ShenequipAdvanced >&
      e_shenequipadvanced_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_ShenequipAdvanced >*
      mutable_e_shenequipadvanced_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_ShenequipAdvanced)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_ShenequipAdvanced > e_shenequipadvanced_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fShenequip_2eproto();
  friend void protobuf_AssignDesc_E_5fShenequip_2eproto();
  friend void protobuf_ShutdownFile_E_5fShenequip_2eproto();

  void InitAsDefaultInstance();
  static Sheet_ShenequipAdvanced* default_instance_;
};
// -------------------------------------------------------------------

class E_ShenequipTalentConditionDesc : public ::google::protobuf::Message {
 public:
  E_ShenequipTalentConditionDesc();
  virtual ~E_ShenequipTalentConditionDesc();

  E_ShenequipTalentConditionDesc(const E_ShenequipTalentConditionDesc& from);

  inline E_ShenequipTalentConditionDesc& operator=(const E_ShenequipTalentConditionDesc& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_ShenequipTalentConditionDesc& default_instance();

  void Swap(E_ShenequipTalentConditionDesc* other);

  // implements Message ----------------------------------------------

  E_ShenequipTalentConditionDesc* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_ShenequipTalentConditionDesc& from);
  void MergeFrom(const E_ShenequipTalentConditionDesc& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 m_lv = 1;
  inline bool has_m_lv() const;
  inline void clear_m_lv();
  static const int kMLvFieldNumber = 1;
  inline ::google::protobuf::int32 m_lv() const;
  inline void set_m_lv(::google::protobuf::int32 value);

  // optional int32 m_id = 2;
  inline bool has_m_id() const;
  inline void clear_m_id();
  static const int kMIdFieldNumber = 2;
  inline ::google::protobuf::int32 m_id() const;
  inline void set_m_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.E_ShenequipTalentConditionDesc)
 private:
  inline void set_has_m_lv();
  inline void clear_has_m_lv();
  inline void set_has_m_id();
  inline void clear_has_m_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_lv_;
  ::google::protobuf::int32 m_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fShenequip_2eproto();
  friend void protobuf_AssignDesc_E_5fShenequip_2eproto();
  friend void protobuf_ShutdownFile_E_5fShenequip_2eproto();

  void InitAsDefaultInstance();
  static E_ShenequipTalentConditionDesc* default_instance_;
};
// -------------------------------------------------------------------

class E_ShenequipTalent : public ::google::protobuf::Message {
 public:
  E_ShenequipTalent();
  virtual ~E_ShenequipTalent();

  E_ShenequipTalent(const E_ShenequipTalent& from);

  inline E_ShenequipTalent& operator=(const E_ShenequipTalent& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_ShenequipTalent& default_instance();

  void Swap(E_ShenequipTalent* other);

  // implements Message ----------------------------------------------

  E_ShenequipTalent* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_ShenequipTalent& from);
  void MergeFrom(const E_ShenequipTalent& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 m_id = 1;
  inline bool has_m_id() const;
  inline void clear_m_id();
  static const int kMIdFieldNumber = 1;
  inline ::google::protobuf::int32 m_id() const;
  inline void set_m_id(::google::protobuf::int32 value);

  // optional int32 m_type = 2;
  inline bool has_m_type() const;
  inline void clear_m_type();
  static const int kMTypeFieldNumber = 2;
  inline ::google::protobuf::int32 m_type() const;
  inline void set_m_type(::google::protobuf::int32 value);

  // optional int32 m_talentType = 3;
  inline bool has_m_talenttype() const;
  inline void clear_m_talenttype();
  static const int kMTalentTypeFieldNumber = 3;
  inline ::google::protobuf::int32 m_talenttype() const;
  inline void set_m_talenttype(::google::protobuf::int32 value);

  // optional int32 m_location = 4;
  inline bool has_m_location() const;
  inline void clear_m_location();
  static const int kMLocationFieldNumber = 4;
  inline ::google::protobuf::int32 m_location() const;
  inline void set_m_location(::google::protobuf::int32 value);

  // optional int32 m_skillId = 5;
  inline bool has_m_skillid() const;
  inline void clear_m_skillid();
  static const int kMSkillIdFieldNumber = 5;
  inline ::google::protobuf::int32 m_skillid() const;
  inline void set_m_skillid(::google::protobuf::int32 value);

  // optional int32 m_lvLImit = 6;
  inline bool has_m_lvlimit() const;
  inline void clear_m_lvlimit();
  static const int kMLvLImitFieldNumber = 6;
  inline ::google::protobuf::int32 m_lvlimit() const;
  inline void set_m_lvlimit(::google::protobuf::int32 value);

  // optional int32 m_talenLvLimit = 7;
  inline bool has_m_talenlvlimit() const;
  inline void clear_m_talenlvlimit();
  static const int kMTalenLvLimitFieldNumber = 7;
  inline ::google::protobuf::int32 m_talenlvlimit() const;
  inline void set_m_talenlvlimit(::google::protobuf::int32 value);

  // optional int32 m_attribute_value = 8;
  inline bool has_m_attribute_value() const;
  inline void clear_m_attribute_value();
  static const int kMAttributeValueFieldNumber = 8;
  inline ::google::protobuf::int32 m_attribute_value() const;
  inline void set_m_attribute_value(::google::protobuf::int32 value);

  // optional int32 m_attribute_type = 9;
  inline bool has_m_attribute_type() const;
  inline void clear_m_attribute_type();
  static const int kMAttributeTypeFieldNumber = 9;
  inline ::google::protobuf::int32 m_attribute_type() const;
  inline void set_m_attribute_type(::google::protobuf::int32 value);

  // optional int32 m_posX = 10;
  inline bool has_m_posx() const;
  inline void clear_m_posx();
  static const int kMPosXFieldNumber = 10;
  inline ::google::protobuf::int32 m_posx() const;
  inline void set_m_posx(::google::protobuf::int32 value);

  // optional int32 m_posY = 11;
  inline bool has_m_posy() const;
  inline void clear_m_posy();
  static const int kMPosYFieldNumber = 11;
  inline ::google::protobuf::int32 m_posy() const;
  inline void set_m_posy(::google::protobuf::int32 value);

  // repeated .proto_ff.E_ShenequipTalentConditionDesc m_condition = 12;
  inline int m_condition_size() const;
  inline void clear_m_condition();
  static const int kMConditionFieldNumber = 12;
  inline const ::proto_ff::E_ShenequipTalentConditionDesc& m_condition(int index) const;
  inline ::proto_ff::E_ShenequipTalentConditionDesc* mutable_m_condition(int index);
  inline ::proto_ff::E_ShenequipTalentConditionDesc* add_m_condition();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_ShenequipTalentConditionDesc >&
      m_condition() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_ShenequipTalentConditionDesc >*
      mutable_m_condition();

  // @@protoc_insertion_point(class_scope:proto_ff.E_ShenequipTalent)
 private:
  inline void set_has_m_id();
  inline void clear_has_m_id();
  inline void set_has_m_type();
  inline void clear_has_m_type();
  inline void set_has_m_talenttype();
  inline void clear_has_m_talenttype();
  inline void set_has_m_location();
  inline void clear_has_m_location();
  inline void set_has_m_skillid();
  inline void clear_has_m_skillid();
  inline void set_has_m_lvlimit();
  inline void clear_has_m_lvlimit();
  inline void set_has_m_talenlvlimit();
  inline void clear_has_m_talenlvlimit();
  inline void set_has_m_attribute_value();
  inline void clear_has_m_attribute_value();
  inline void set_has_m_attribute_type();
  inline void clear_has_m_attribute_type();
  inline void set_has_m_posx();
  inline void clear_has_m_posx();
  inline void set_has_m_posy();
  inline void clear_has_m_posy();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_id_;
  ::google::protobuf::int32 m_type_;
  ::google::protobuf::int32 m_talenttype_;
  ::google::protobuf::int32 m_location_;
  ::google::protobuf::int32 m_skillid_;
  ::google::protobuf::int32 m_lvlimit_;
  ::google::protobuf::int32 m_talenlvlimit_;
  ::google::protobuf::int32 m_attribute_value_;
  ::google::protobuf::int32 m_attribute_type_;
  ::google::protobuf::int32 m_posx_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_ShenequipTalentConditionDesc > m_condition_;
  ::google::protobuf::int32 m_posy_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(12 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fShenequip_2eproto();
  friend void protobuf_AssignDesc_E_5fShenequip_2eproto();
  friend void protobuf_ShutdownFile_E_5fShenequip_2eproto();

  void InitAsDefaultInstance();
  static E_ShenequipTalent* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_ShenequipTalent : public ::google::protobuf::Message {
 public:
  Sheet_ShenequipTalent();
  virtual ~Sheet_ShenequipTalent();

  Sheet_ShenequipTalent(const Sheet_ShenequipTalent& from);

  inline Sheet_ShenequipTalent& operator=(const Sheet_ShenequipTalent& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_ShenequipTalent& default_instance();

  void Swap(Sheet_ShenequipTalent* other);

  // implements Message ----------------------------------------------

  Sheet_ShenequipTalent* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_ShenequipTalent& from);
  void MergeFrom(const Sheet_ShenequipTalent& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.E_ShenequipTalent E_ShenequipTalent_List = 1;
  inline int e_shenequiptalent_list_size() const;
  inline void clear_e_shenequiptalent_list();
  static const int kEShenequipTalentListFieldNumber = 1;
  inline const ::proto_ff::E_ShenequipTalent& e_shenequiptalent_list(int index) const;
  inline ::proto_ff::E_ShenequipTalent* mutable_e_shenequiptalent_list(int index);
  inline ::proto_ff::E_ShenequipTalent* add_e_shenequiptalent_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_ShenequipTalent >&
      e_shenequiptalent_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_ShenequipTalent >*
      mutable_e_shenequiptalent_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_ShenequipTalent)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_ShenequipTalent > e_shenequiptalent_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fShenequip_2eproto();
  friend void protobuf_AssignDesc_E_5fShenequip_2eproto();
  friend void protobuf_ShutdownFile_E_5fShenequip_2eproto();

  void InitAsDefaultInstance();
  static Sheet_ShenequipTalent* default_instance_;
};
// -------------------------------------------------------------------

class E_ShenequipTalenttype : public ::google::protobuf::Message {
 public:
  E_ShenequipTalenttype();
  virtual ~E_ShenequipTalenttype();

  E_ShenequipTalenttype(const E_ShenequipTalenttype& from);

  inline E_ShenequipTalenttype& operator=(const E_ShenequipTalenttype& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_ShenequipTalenttype& default_instance();

  void Swap(E_ShenequipTalenttype* other);

  // implements Message ----------------------------------------------

  E_ShenequipTalenttype* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_ShenequipTalenttype& from);
  void MergeFrom(const E_ShenequipTalenttype& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 m_id = 1;
  inline bool has_m_id() const;
  inline void clear_m_id();
  static const int kMIdFieldNumber = 1;
  inline ::google::protobuf::int32 m_id() const;
  inline void set_m_id(::google::protobuf::int32 value);

  // optional int32 m_type = 2;
  inline bool has_m_type() const;
  inline void clear_m_type();
  static const int kMTypeFieldNumber = 2;
  inline ::google::protobuf::int32 m_type() const;
  inline void set_m_type(::google::protobuf::int32 value);

  // optional int32 m_talentType = 3;
  inline bool has_m_talenttype() const;
  inline void clear_m_talenttype();
  static const int kMTalentTypeFieldNumber = 3;
  inline ::google::protobuf::int32 m_talenttype() const;
  inline void set_m_talenttype(::google::protobuf::int32 value);

  // optional int32 m_qualityLimit = 4;
  inline bool has_m_qualitylimit() const;
  inline void clear_m_qualitylimit();
  static const int kMQualityLimitFieldNumber = 4;
  inline ::google::protobuf::int32 m_qualitylimit() const;
  inline void set_m_qualitylimit(::google::protobuf::int32 value);

  // optional int32 m_starLimit = 5;
  inline bool has_m_starlimit() const;
  inline void clear_m_starlimit();
  static const int kMStarLimitFieldNumber = 5;
  inline ::google::protobuf::int32 m_starlimit() const;
  inline void set_m_starlimit(::google::protobuf::int32 value);

  // optional int32 m_talenLvLimit = 6;
  inline bool has_m_talenlvlimit() const;
  inline void clear_m_talenlvlimit();
  static const int kMTalenLvLimitFieldNumber = 6;
  inline ::google::protobuf::int32 m_talenlvlimit() const;
  inline void set_m_talenlvlimit(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.E_ShenequipTalenttype)
 private:
  inline void set_has_m_id();
  inline void clear_has_m_id();
  inline void set_has_m_type();
  inline void clear_has_m_type();
  inline void set_has_m_talenttype();
  inline void clear_has_m_talenttype();
  inline void set_has_m_qualitylimit();
  inline void clear_has_m_qualitylimit();
  inline void set_has_m_starlimit();
  inline void clear_has_m_starlimit();
  inline void set_has_m_talenlvlimit();
  inline void clear_has_m_talenlvlimit();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_id_;
  ::google::protobuf::int32 m_type_;
  ::google::protobuf::int32 m_talenttype_;
  ::google::protobuf::int32 m_qualitylimit_;
  ::google::protobuf::int32 m_starlimit_;
  ::google::protobuf::int32 m_talenlvlimit_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fShenequip_2eproto();
  friend void protobuf_AssignDesc_E_5fShenequip_2eproto();
  friend void protobuf_ShutdownFile_E_5fShenequip_2eproto();

  void InitAsDefaultInstance();
  static E_ShenequipTalenttype* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_ShenequipTalenttype : public ::google::protobuf::Message {
 public:
  Sheet_ShenequipTalenttype();
  virtual ~Sheet_ShenequipTalenttype();

  Sheet_ShenequipTalenttype(const Sheet_ShenequipTalenttype& from);

  inline Sheet_ShenequipTalenttype& operator=(const Sheet_ShenequipTalenttype& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_ShenequipTalenttype& default_instance();

  void Swap(Sheet_ShenequipTalenttype* other);

  // implements Message ----------------------------------------------

  Sheet_ShenequipTalenttype* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_ShenequipTalenttype& from);
  void MergeFrom(const Sheet_ShenequipTalenttype& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.E_ShenequipTalenttype E_ShenequipTalenttype_List = 1;
  inline int e_shenequiptalenttype_list_size() const;
  inline void clear_e_shenequiptalenttype_list();
  static const int kEShenequipTalenttypeListFieldNumber = 1;
  inline const ::proto_ff::E_ShenequipTalenttype& e_shenequiptalenttype_list(int index) const;
  inline ::proto_ff::E_ShenequipTalenttype* mutable_e_shenequiptalenttype_list(int index);
  inline ::proto_ff::E_ShenequipTalenttype* add_e_shenequiptalenttype_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_ShenequipTalenttype >&
      e_shenequiptalenttype_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_ShenequipTalenttype >*
      mutable_e_shenequiptalenttype_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_ShenequipTalenttype)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_ShenequipTalenttype > e_shenequiptalenttype_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fShenequip_2eproto();
  friend void protobuf_AssignDesc_E_5fShenequip_2eproto();
  friend void protobuf_ShutdownFile_E_5fShenequip_2eproto();

  void InitAsDefaultInstance();
  static Sheet_ShenequipTalenttype* default_instance_;
};
// -------------------------------------------------------------------

class E_ShenequipPreviewRewardDesc : public ::google::protobuf::Message {
 public:
  E_ShenequipPreviewRewardDesc();
  virtual ~E_ShenequipPreviewRewardDesc();

  E_ShenequipPreviewRewardDesc(const E_ShenequipPreviewRewardDesc& from);

  inline E_ShenequipPreviewRewardDesc& operator=(const E_ShenequipPreviewRewardDesc& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_ShenequipPreviewRewardDesc& default_instance();

  void Swap(E_ShenequipPreviewRewardDesc* other);

  // implements Message ----------------------------------------------

  E_ShenequipPreviewRewardDesc* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_ShenequipPreviewRewardDesc& from);
  void MergeFrom(const E_ShenequipPreviewRewardDesc& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 m_num = 1;
  inline bool has_m_num() const;
  inline void clear_m_num();
  static const int kMNumFieldNumber = 1;
  inline ::google::protobuf::int32 m_num() const;
  inline void set_m_num(::google::protobuf::int32 value);

  // optional int32 m_item = 2;
  inline bool has_m_item() const;
  inline void clear_m_item();
  static const int kMItemFieldNumber = 2;
  inline ::google::protobuf::int32 m_item() const;
  inline void set_m_item(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.E_ShenequipPreviewRewardDesc)
 private:
  inline void set_has_m_num();
  inline void clear_has_m_num();
  inline void set_has_m_item();
  inline void clear_has_m_item();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_num_;
  ::google::protobuf::int32 m_item_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fShenequip_2eproto();
  friend void protobuf_AssignDesc_E_5fShenequip_2eproto();
  friend void protobuf_ShutdownFile_E_5fShenequip_2eproto();

  void InitAsDefaultInstance();
  static E_ShenequipPreviewRewardDesc* default_instance_;
};
// -------------------------------------------------------------------

class E_ShenequipPreview : public ::google::protobuf::Message {
 public:
  E_ShenequipPreview();
  virtual ~E_ShenequipPreview();

  E_ShenequipPreview(const E_ShenequipPreview& from);

  inline E_ShenequipPreview& operator=(const E_ShenequipPreview& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_ShenequipPreview& default_instance();

  void Swap(E_ShenequipPreview* other);

  // implements Message ----------------------------------------------

  E_ShenequipPreview* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_ShenequipPreview& from);
  void MergeFrom(const E_ShenequipPreview& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 m_id = 1;
  inline bool has_m_id() const;
  inline void clear_m_id();
  static const int kMIdFieldNumber = 1;
  inline ::google::protobuf::int32 m_id() const;
  inline void set_m_id(::google::protobuf::int32 value);

  // optional int32 m_condition = 2;
  inline bool has_m_condition() const;
  inline void clear_m_condition();
  static const int kMConditionFieldNumber = 2;
  inline ::google::protobuf::int32 m_condition() const;
  inline void set_m_condition(::google::protobuf::int32 value);

  // optional int32 m_value = 3;
  inline bool has_m_value() const;
  inline void clear_m_value();
  static const int kMValueFieldNumber = 3;
  inline ::google::protobuf::int32 m_value() const;
  inline void set_m_value(::google::protobuf::int32 value);

  // repeated .proto_ff.E_ShenequipPreviewRewardDesc m_reward = 4;
  inline int m_reward_size() const;
  inline void clear_m_reward();
  static const int kMRewardFieldNumber = 4;
  inline const ::proto_ff::E_ShenequipPreviewRewardDesc& m_reward(int index) const;
  inline ::proto_ff::E_ShenequipPreviewRewardDesc* mutable_m_reward(int index);
  inline ::proto_ff::E_ShenequipPreviewRewardDesc* add_m_reward();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_ShenequipPreviewRewardDesc >&
      m_reward() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_ShenequipPreviewRewardDesc >*
      mutable_m_reward();

  // @@protoc_insertion_point(class_scope:proto_ff.E_ShenequipPreview)
 private:
  inline void set_has_m_id();
  inline void clear_has_m_id();
  inline void set_has_m_condition();
  inline void clear_has_m_condition();
  inline void set_has_m_value();
  inline void clear_has_m_value();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_id_;
  ::google::protobuf::int32 m_condition_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_ShenequipPreviewRewardDesc > m_reward_;
  ::google::protobuf::int32 m_value_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fShenequip_2eproto();
  friend void protobuf_AssignDesc_E_5fShenequip_2eproto();
  friend void protobuf_ShutdownFile_E_5fShenequip_2eproto();

  void InitAsDefaultInstance();
  static E_ShenequipPreview* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_ShenequipPreview : public ::google::protobuf::Message {
 public:
  Sheet_ShenequipPreview();
  virtual ~Sheet_ShenequipPreview();

  Sheet_ShenequipPreview(const Sheet_ShenequipPreview& from);

  inline Sheet_ShenequipPreview& operator=(const Sheet_ShenequipPreview& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_ShenequipPreview& default_instance();

  void Swap(Sheet_ShenequipPreview* other);

  // implements Message ----------------------------------------------

  Sheet_ShenequipPreview* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_ShenequipPreview& from);
  void MergeFrom(const Sheet_ShenequipPreview& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.E_ShenequipPreview E_ShenequipPreview_List = 1;
  inline int e_shenequippreview_list_size() const;
  inline void clear_e_shenequippreview_list();
  static const int kEShenequipPreviewListFieldNumber = 1;
  inline const ::proto_ff::E_ShenequipPreview& e_shenequippreview_list(int index) const;
  inline ::proto_ff::E_ShenequipPreview* mutable_e_shenequippreview_list(int index);
  inline ::proto_ff::E_ShenequipPreview* add_e_shenequippreview_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_ShenequipPreview >&
      e_shenequippreview_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_ShenequipPreview >*
      mutable_e_shenequippreview_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_ShenequipPreview)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_ShenequipPreview > e_shenequippreview_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fShenequip_2eproto();
  friend void protobuf_AssignDesc_E_5fShenequip_2eproto();
  friend void protobuf_ShutdownFile_E_5fShenequip_2eproto();

  void InitAsDefaultInstance();
  static Sheet_ShenequipPreview* default_instance_;
};
// ===================================================================


// ===================================================================

// E_ShenequipEquip

// optional int32 m_id = 1;
inline bool E_ShenequipEquip::has_m_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_ShenequipEquip::set_has_m_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_ShenequipEquip::clear_has_m_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_ShenequipEquip::clear_m_id() {
  m_id_ = 0;
  clear_has_m_id();
}
inline ::google::protobuf::int32 E_ShenequipEquip::m_id() const {
  return m_id_;
}
inline void E_ShenequipEquip::set_m_id(::google::protobuf::int32 value) {
  set_has_m_id();
  m_id_ = value;
}

// optional string m_name = 2;
inline bool E_ShenequipEquip::has_m_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_ShenequipEquip::set_has_m_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_ShenequipEquip::clear_has_m_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_ShenequipEquip::clear_m_name() {
  if (m_name_ != &::google::protobuf::internal::kEmptyString) {
    m_name_->clear();
  }
  clear_has_m_name();
}
inline const ::std::string& E_ShenequipEquip::m_name() const {
  return *m_name_;
}
inline void E_ShenequipEquip::set_m_name(const ::std::string& value) {
  set_has_m_name();
  if (m_name_ == &::google::protobuf::internal::kEmptyString) {
    m_name_ = new ::std::string;
  }
  m_name_->assign(value);
}
inline void E_ShenequipEquip::set_m_name(const char* value) {
  set_has_m_name();
  if (m_name_ == &::google::protobuf::internal::kEmptyString) {
    m_name_ = new ::std::string;
  }
  m_name_->assign(value);
}
inline void E_ShenequipEquip::set_m_name(const char* value, size_t size) {
  set_has_m_name();
  if (m_name_ == &::google::protobuf::internal::kEmptyString) {
    m_name_ = new ::std::string;
  }
  m_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* E_ShenequipEquip::mutable_m_name() {
  set_has_m_name();
  if (m_name_ == &::google::protobuf::internal::kEmptyString) {
    m_name_ = new ::std::string;
  }
  return m_name_;
}
inline ::std::string* E_ShenequipEquip::release_m_name() {
  clear_has_m_name();
  if (m_name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = m_name_;
    m_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void E_ShenequipEquip::set_allocated_m_name(::std::string* m_name) {
  if (m_name_ != &::google::protobuf::internal::kEmptyString) {
    delete m_name_;
  }
  if (m_name) {
    set_has_m_name();
    m_name_ = m_name;
  } else {
    clear_has_m_name();
    m_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 m_type = 3;
inline bool E_ShenequipEquip::has_m_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void E_ShenequipEquip::set_has_m_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void E_ShenequipEquip::clear_has_m_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void E_ShenequipEquip::clear_m_type() {
  m_type_ = 0;
  clear_has_m_type();
}
inline ::google::protobuf::int32 E_ShenequipEquip::m_type() const {
  return m_type_;
}
inline void E_ShenequipEquip::set_m_type(::google::protobuf::int32 value) {
  set_has_m_type();
  m_type_ = value;
}

// optional int32 m_grade = 4;
inline bool E_ShenequipEquip::has_m_grade() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void E_ShenequipEquip::set_has_m_grade() {
  _has_bits_[0] |= 0x00000008u;
}
inline void E_ShenequipEquip::clear_has_m_grade() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void E_ShenequipEquip::clear_m_grade() {
  m_grade_ = 0;
  clear_has_m_grade();
}
inline ::google::protobuf::int32 E_ShenequipEquip::m_grade() const {
  return m_grade_;
}
inline void E_ShenequipEquip::set_m_grade(::google::protobuf::int32 value) {
  set_has_m_grade();
  m_grade_ = value;
}

// optional int32 m_subType = 5;
inline bool E_ShenequipEquip::has_m_subtype() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void E_ShenequipEquip::set_has_m_subtype() {
  _has_bits_[0] |= 0x00000010u;
}
inline void E_ShenequipEquip::clear_has_m_subtype() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void E_ShenequipEquip::clear_m_subtype() {
  m_subtype_ = 0;
  clear_has_m_subtype();
}
inline ::google::protobuf::int32 E_ShenequipEquip::m_subtype() const {
  return m_subtype_;
}
inline void E_ShenequipEquip::set_m_subtype(::google::protobuf::int32 value) {
  set_has_m_subtype();
  m_subtype_ = value;
}

// optional int32 m_level = 6;
inline bool E_ShenequipEquip::has_m_level() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void E_ShenequipEquip::set_has_m_level() {
  _has_bits_[0] |= 0x00000020u;
}
inline void E_ShenequipEquip::clear_has_m_level() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void E_ShenequipEquip::clear_m_level() {
  m_level_ = 0;
  clear_has_m_level();
}
inline ::google::protobuf::int32 E_ShenequipEquip::m_level() const {
  return m_level_;
}
inline void E_ShenequipEquip::set_m_level(::google::protobuf::int32 value) {
  set_has_m_level();
  m_level_ = value;
}

// optional int32 m_quality = 7;
inline bool E_ShenequipEquip::has_m_quality() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void E_ShenequipEquip::set_has_m_quality() {
  _has_bits_[0] |= 0x00000040u;
}
inline void E_ShenequipEquip::clear_has_m_quality() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void E_ShenequipEquip::clear_m_quality() {
  m_quality_ = 0;
  clear_has_m_quality();
}
inline ::google::protobuf::int32 E_ShenequipEquip::m_quality() const {
  return m_quality_;
}
inline void E_ShenequipEquip::set_m_quality(::google::protobuf::int32 value) {
  set_has_m_quality();
  m_quality_ = value;
}

// optional int32 m_star = 8;
inline bool E_ShenequipEquip::has_m_star() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void E_ShenequipEquip::set_has_m_star() {
  _has_bits_[0] |= 0x00000080u;
}
inline void E_ShenequipEquip::clear_has_m_star() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void E_ShenequipEquip::clear_m_star() {
  m_star_ = 0;
  clear_has_m_star();
}
inline ::google::protobuf::int32 E_ShenequipEquip::m_star() const {
  return m_star_;
}
inline void E_ShenequipEquip::set_m_star(::google::protobuf::int32 value) {
  set_has_m_star();
  m_star_ = value;
}

// optional int32 m_attributeID = 9;
inline bool E_ShenequipEquip::has_m_attributeid() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void E_ShenequipEquip::set_has_m_attributeid() {
  _has_bits_[0] |= 0x00000100u;
}
inline void E_ShenequipEquip::clear_has_m_attributeid() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void E_ShenequipEquip::clear_m_attributeid() {
  m_attributeid_ = 0;
  clear_has_m_attributeid();
}
inline ::google::protobuf::int32 E_ShenequipEquip::m_attributeid() const {
  return m_attributeid_;
}
inline void E_ShenequipEquip::set_m_attributeid(::google::protobuf::int32 value) {
  set_has_m_attributeid();
  m_attributeid_ = value;
}

// optional string m_decompose = 10;
inline bool E_ShenequipEquip::has_m_decompose() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void E_ShenequipEquip::set_has_m_decompose() {
  _has_bits_[0] |= 0x00000200u;
}
inline void E_ShenequipEquip::clear_has_m_decompose() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void E_ShenequipEquip::clear_m_decompose() {
  if (m_decompose_ != &::google::protobuf::internal::kEmptyString) {
    m_decompose_->clear();
  }
  clear_has_m_decompose();
}
inline const ::std::string& E_ShenequipEquip::m_decompose() const {
  return *m_decompose_;
}
inline void E_ShenequipEquip::set_m_decompose(const ::std::string& value) {
  set_has_m_decompose();
  if (m_decompose_ == &::google::protobuf::internal::kEmptyString) {
    m_decompose_ = new ::std::string;
  }
  m_decompose_->assign(value);
}
inline void E_ShenequipEquip::set_m_decompose(const char* value) {
  set_has_m_decompose();
  if (m_decompose_ == &::google::protobuf::internal::kEmptyString) {
    m_decompose_ = new ::std::string;
  }
  m_decompose_->assign(value);
}
inline void E_ShenequipEquip::set_m_decompose(const char* value, size_t size) {
  set_has_m_decompose();
  if (m_decompose_ == &::google::protobuf::internal::kEmptyString) {
    m_decompose_ = new ::std::string;
  }
  m_decompose_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* E_ShenequipEquip::mutable_m_decompose() {
  set_has_m_decompose();
  if (m_decompose_ == &::google::protobuf::internal::kEmptyString) {
    m_decompose_ = new ::std::string;
  }
  return m_decompose_;
}
inline ::std::string* E_ShenequipEquip::release_m_decompose() {
  clear_has_m_decompose();
  if (m_decompose_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = m_decompose_;
    m_decompose_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void E_ShenequipEquip::set_allocated_m_decompose(::std::string* m_decompose) {
  if (m_decompose_ != &::google::protobuf::internal::kEmptyString) {
    delete m_decompose_;
  }
  if (m_decompose) {
    set_has_m_decompose();
    m_decompose_ = m_decompose;
  } else {
    clear_has_m_decompose();
    m_decompose_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 m_isCanbind = 11;
inline bool E_ShenequipEquip::has_m_iscanbind() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void E_ShenequipEquip::set_has_m_iscanbind() {
  _has_bits_[0] |= 0x00000400u;
}
inline void E_ShenequipEquip::clear_has_m_iscanbind() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void E_ShenequipEquip::clear_m_iscanbind() {
  m_iscanbind_ = 0;
  clear_has_m_iscanbind();
}
inline ::google::protobuf::int32 E_ShenequipEquip::m_iscanbind() const {
  return m_iscanbind_;
}
inline void E_ShenequipEquip::set_m_iscanbind(::google::protobuf::int32 value) {
  set_has_m_iscanbind();
  m_iscanbind_ = value;
}

// optional int32 m_isTradeBind = 12;
inline bool E_ShenequipEquip::has_m_istradebind() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void E_ShenequipEquip::set_has_m_istradebind() {
  _has_bits_[0] |= 0x00000800u;
}
inline void E_ShenequipEquip::clear_has_m_istradebind() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void E_ShenequipEquip::clear_m_istradebind() {
  m_istradebind_ = 0;
  clear_has_m_istradebind();
}
inline ::google::protobuf::int32 E_ShenequipEquip::m_istradebind() const {
  return m_istradebind_;
}
inline void E_ShenequipEquip::set_m_istradebind(::google::protobuf::int32 value) {
  set_has_m_istradebind();
  m_istradebind_ = value;
}

// optional int32 m_time = 13;
inline bool E_ShenequipEquip::has_m_time() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void E_ShenequipEquip::set_has_m_time() {
  _has_bits_[0] |= 0x00001000u;
}
inline void E_ShenequipEquip::clear_has_m_time() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void E_ShenequipEquip::clear_m_time() {
  m_time_ = 0;
  clear_has_m_time();
}
inline ::google::protobuf::int32 E_ShenequipEquip::m_time() const {
  return m_time_;
}
inline void E_ShenequipEquip::set_m_time(::google::protobuf::int32 value) {
  set_has_m_time();
  m_time_ = value;
}

// optional int32 m_broadcast = 14;
inline bool E_ShenequipEquip::has_m_broadcast() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void E_ShenequipEquip::set_has_m_broadcast() {
  _has_bits_[0] |= 0x00002000u;
}
inline void E_ShenequipEquip::clear_has_m_broadcast() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void E_ShenequipEquip::clear_m_broadcast() {
  m_broadcast_ = 0;
  clear_has_m_broadcast();
}
inline ::google::protobuf::int32 E_ShenequipEquip::m_broadcast() const {
  return m_broadcast_;
}
inline void E_ShenequipEquip::set_m_broadcast(::google::protobuf::int32 value) {
  set_has_m_broadcast();
  m_broadcast_ = value;
}

// optional int32 m_exclusiveID = 15;
inline bool E_ShenequipEquip::has_m_exclusiveid() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void E_ShenequipEquip::set_has_m_exclusiveid() {
  _has_bits_[0] |= 0x00004000u;
}
inline void E_ShenequipEquip::clear_has_m_exclusiveid() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void E_ShenequipEquip::clear_m_exclusiveid() {
  m_exclusiveid_ = 0;
  clear_has_m_exclusiveid();
}
inline ::google::protobuf::int32 E_ShenequipEquip::m_exclusiveid() const {
  return m_exclusiveid_;
}
inline void E_ShenequipEquip::set_m_exclusiveid(::google::protobuf::int32 value) {
  set_has_m_exclusiveid();
  m_exclusiveid_ = value;
}

// optional string m_secretSkill = 16;
inline bool E_ShenequipEquip::has_m_secretskill() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void E_ShenequipEquip::set_has_m_secretskill() {
  _has_bits_[0] |= 0x00008000u;
}
inline void E_ShenequipEquip::clear_has_m_secretskill() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void E_ShenequipEquip::clear_m_secretskill() {
  if (m_secretskill_ != &::google::protobuf::internal::kEmptyString) {
    m_secretskill_->clear();
  }
  clear_has_m_secretskill();
}
inline const ::std::string& E_ShenequipEquip::m_secretskill() const {
  return *m_secretskill_;
}
inline void E_ShenequipEquip::set_m_secretskill(const ::std::string& value) {
  set_has_m_secretskill();
  if (m_secretskill_ == &::google::protobuf::internal::kEmptyString) {
    m_secretskill_ = new ::std::string;
  }
  m_secretskill_->assign(value);
}
inline void E_ShenequipEquip::set_m_secretskill(const char* value) {
  set_has_m_secretskill();
  if (m_secretskill_ == &::google::protobuf::internal::kEmptyString) {
    m_secretskill_ = new ::std::string;
  }
  m_secretskill_->assign(value);
}
inline void E_ShenequipEquip::set_m_secretskill(const char* value, size_t size) {
  set_has_m_secretskill();
  if (m_secretskill_ == &::google::protobuf::internal::kEmptyString) {
    m_secretskill_ = new ::std::string;
  }
  m_secretskill_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* E_ShenequipEquip::mutable_m_secretskill() {
  set_has_m_secretskill();
  if (m_secretskill_ == &::google::protobuf::internal::kEmptyString) {
    m_secretskill_ = new ::std::string;
  }
  return m_secretskill_;
}
inline ::std::string* E_ShenequipEquip::release_m_secretskill() {
  clear_has_m_secretskill();
  if (m_secretskill_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = m_secretskill_;
    m_secretskill_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void E_ShenequipEquip::set_allocated_m_secretskill(::std::string* m_secretskill) {
  if (m_secretskill_ != &::google::protobuf::internal::kEmptyString) {
    delete m_secretskill_;
  }
  if (m_secretskill) {
    set_has_m_secretskill();
    m_secretskill_ = m_secretskill;
  } else {
    clear_has_m_secretskill();
    m_secretskill_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string m_crypticSkill = 17;
inline bool E_ShenequipEquip::has_m_crypticskill() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void E_ShenequipEquip::set_has_m_crypticskill() {
  _has_bits_[0] |= 0x00010000u;
}
inline void E_ShenequipEquip::clear_has_m_crypticskill() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void E_ShenequipEquip::clear_m_crypticskill() {
  if (m_crypticskill_ != &::google::protobuf::internal::kEmptyString) {
    m_crypticskill_->clear();
  }
  clear_has_m_crypticskill();
}
inline const ::std::string& E_ShenequipEquip::m_crypticskill() const {
  return *m_crypticskill_;
}
inline void E_ShenequipEquip::set_m_crypticskill(const ::std::string& value) {
  set_has_m_crypticskill();
  if (m_crypticskill_ == &::google::protobuf::internal::kEmptyString) {
    m_crypticskill_ = new ::std::string;
  }
  m_crypticskill_->assign(value);
}
inline void E_ShenequipEquip::set_m_crypticskill(const char* value) {
  set_has_m_crypticskill();
  if (m_crypticskill_ == &::google::protobuf::internal::kEmptyString) {
    m_crypticskill_ = new ::std::string;
  }
  m_crypticskill_->assign(value);
}
inline void E_ShenequipEquip::set_m_crypticskill(const char* value, size_t size) {
  set_has_m_crypticskill();
  if (m_crypticskill_ == &::google::protobuf::internal::kEmptyString) {
    m_crypticskill_ = new ::std::string;
  }
  m_crypticskill_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* E_ShenequipEquip::mutable_m_crypticskill() {
  set_has_m_crypticskill();
  if (m_crypticskill_ == &::google::protobuf::internal::kEmptyString) {
    m_crypticskill_ = new ::std::string;
  }
  return m_crypticskill_;
}
inline ::std::string* E_ShenequipEquip::release_m_crypticskill() {
  clear_has_m_crypticskill();
  if (m_crypticskill_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = m_crypticskill_;
    m_crypticskill_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void E_ShenequipEquip::set_allocated_m_crypticskill(::std::string* m_crypticskill) {
  if (m_crypticskill_ != &::google::protobuf::internal::kEmptyString) {
    delete m_crypticskill_;
  }
  if (m_crypticskill) {
    set_has_m_crypticskill();
    m_crypticskill_ = m_crypticskill;
  } else {
    clear_has_m_crypticskill();
    m_crypticskill_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string m_passiveSkill = 18;
inline bool E_ShenequipEquip::has_m_passiveskill() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void E_ShenequipEquip::set_has_m_passiveskill() {
  _has_bits_[0] |= 0x00020000u;
}
inline void E_ShenequipEquip::clear_has_m_passiveskill() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void E_ShenequipEquip::clear_m_passiveskill() {
  if (m_passiveskill_ != &::google::protobuf::internal::kEmptyString) {
    m_passiveskill_->clear();
  }
  clear_has_m_passiveskill();
}
inline const ::std::string& E_ShenequipEquip::m_passiveskill() const {
  return *m_passiveskill_;
}
inline void E_ShenequipEquip::set_m_passiveskill(const ::std::string& value) {
  set_has_m_passiveskill();
  if (m_passiveskill_ == &::google::protobuf::internal::kEmptyString) {
    m_passiveskill_ = new ::std::string;
  }
  m_passiveskill_->assign(value);
}
inline void E_ShenequipEquip::set_m_passiveskill(const char* value) {
  set_has_m_passiveskill();
  if (m_passiveskill_ == &::google::protobuf::internal::kEmptyString) {
    m_passiveskill_ = new ::std::string;
  }
  m_passiveskill_->assign(value);
}
inline void E_ShenequipEquip::set_m_passiveskill(const char* value, size_t size) {
  set_has_m_passiveskill();
  if (m_passiveskill_ == &::google::protobuf::internal::kEmptyString) {
    m_passiveskill_ = new ::std::string;
  }
  m_passiveskill_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* E_ShenequipEquip::mutable_m_passiveskill() {
  set_has_m_passiveskill();
  if (m_passiveskill_ == &::google::protobuf::internal::kEmptyString) {
    m_passiveskill_ = new ::std::string;
  }
  return m_passiveskill_;
}
inline ::std::string* E_ShenequipEquip::release_m_passiveskill() {
  clear_has_m_passiveskill();
  if (m_passiveskill_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = m_passiveskill_;
    m_passiveskill_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void E_ShenequipEquip::set_allocated_m_passiveskill(::std::string* m_passiveskill) {
  if (m_passiveskill_ != &::google::protobuf::internal::kEmptyString) {
    delete m_passiveskill_;
  }
  if (m_passiveskill) {
    set_has_m_passiveskill();
    m_passiveskill_ = m_passiveskill;
  } else {
    clear_has_m_passiveskill();
    m_passiveskill_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// Sheet_ShenequipEquip

// repeated .proto_ff.E_ShenequipEquip E_ShenequipEquip_List = 1;
inline int Sheet_ShenequipEquip::e_shenequipequip_list_size() const {
  return e_shenequipequip_list_.size();
}
inline void Sheet_ShenequipEquip::clear_e_shenequipequip_list() {
  e_shenequipequip_list_.Clear();
}
inline const ::proto_ff::E_ShenequipEquip& Sheet_ShenequipEquip::e_shenequipequip_list(int index) const {
  return e_shenequipequip_list_.Get(index);
}
inline ::proto_ff::E_ShenequipEquip* Sheet_ShenequipEquip::mutable_e_shenequipequip_list(int index) {
  return e_shenequipequip_list_.Mutable(index);
}
inline ::proto_ff::E_ShenequipEquip* Sheet_ShenequipEquip::add_e_shenequipequip_list() {
  return e_shenequipequip_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_ShenequipEquip >&
Sheet_ShenequipEquip::e_shenequipequip_list() const {
  return e_shenequipequip_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_ShenequipEquip >*
Sheet_ShenequipEquip::mutable_e_shenequipequip_list() {
  return &e_shenequipequip_list_;
}

// -------------------------------------------------------------------

// E_ShenequipAttAttributeDesc

// optional int32 m_value = 1;
inline bool E_ShenequipAttAttributeDesc::has_m_value() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_ShenequipAttAttributeDesc::set_has_m_value() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_ShenequipAttAttributeDesc::clear_has_m_value() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_ShenequipAttAttributeDesc::clear_m_value() {
  m_value_ = 0;
  clear_has_m_value();
}
inline ::google::protobuf::int32 E_ShenequipAttAttributeDesc::m_value() const {
  return m_value_;
}
inline void E_ShenequipAttAttributeDesc::set_m_value(::google::protobuf::int32 value) {
  set_has_m_value();
  m_value_ = value;
}

// optional int32 m_type = 2;
inline bool E_ShenequipAttAttributeDesc::has_m_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_ShenequipAttAttributeDesc::set_has_m_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_ShenequipAttAttributeDesc::clear_has_m_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_ShenequipAttAttributeDesc::clear_m_type() {
  m_type_ = 0;
  clear_has_m_type();
}
inline ::google::protobuf::int32 E_ShenequipAttAttributeDesc::m_type() const {
  return m_type_;
}
inline void E_ShenequipAttAttributeDesc::set_m_type(::google::protobuf::int32 value) {
  set_has_m_type();
  m_type_ = value;
}

// -------------------------------------------------------------------

// E_ShenequipAttStarDesc

// optional int32 m_value = 1;
inline bool E_ShenequipAttStarDesc::has_m_value() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_ShenequipAttStarDesc::set_has_m_value() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_ShenequipAttStarDesc::clear_has_m_value() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_ShenequipAttStarDesc::clear_m_value() {
  m_value_ = 0;
  clear_has_m_value();
}
inline ::google::protobuf::int32 E_ShenequipAttStarDesc::m_value() const {
  return m_value_;
}
inline void E_ShenequipAttStarDesc::set_m_value(::google::protobuf::int32 value) {
  set_has_m_value();
  m_value_ = value;
}

// optional int32 m_type = 2;
inline bool E_ShenequipAttStarDesc::has_m_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_ShenequipAttStarDesc::set_has_m_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_ShenequipAttStarDesc::clear_has_m_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_ShenequipAttStarDesc::clear_m_type() {
  m_type_ = 0;
  clear_has_m_type();
}
inline ::google::protobuf::int32 E_ShenequipAttStarDesc::m_type() const {
  return m_type_;
}
inline void E_ShenequipAttStarDesc::set_m_type(::google::protobuf::int32 value) {
  set_has_m_type();
  m_type_ = value;
}

// -------------------------------------------------------------------

// E_ShenequipAtt

// optional int32 m_id = 1;
inline bool E_ShenequipAtt::has_m_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_ShenequipAtt::set_has_m_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_ShenequipAtt::clear_has_m_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_ShenequipAtt::clear_m_id() {
  m_id_ = 0;
  clear_has_m_id();
}
inline ::google::protobuf::int32 E_ShenequipAtt::m_id() const {
  return m_id_;
}
inline void E_ShenequipAtt::set_m_id(::google::protobuf::int32 value) {
  set_has_m_id();
  m_id_ = value;
}

// repeated .proto_ff.E_ShenequipAttAttributeDesc m_attribute = 2;
inline int E_ShenequipAtt::m_attribute_size() const {
  return m_attribute_.size();
}
inline void E_ShenequipAtt::clear_m_attribute() {
  m_attribute_.Clear();
}
inline const ::proto_ff::E_ShenequipAttAttributeDesc& E_ShenequipAtt::m_attribute(int index) const {
  return m_attribute_.Get(index);
}
inline ::proto_ff::E_ShenequipAttAttributeDesc* E_ShenequipAtt::mutable_m_attribute(int index) {
  return m_attribute_.Mutable(index);
}
inline ::proto_ff::E_ShenequipAttAttributeDesc* E_ShenequipAtt::add_m_attribute() {
  return m_attribute_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_ShenequipAttAttributeDesc >&
E_ShenequipAtt::m_attribute() const {
  return m_attribute_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_ShenequipAttAttributeDesc >*
E_ShenequipAtt::mutable_m_attribute() {
  return &m_attribute_;
}

// repeated .proto_ff.E_ShenequipAttStarDesc m_star = 3;
inline int E_ShenequipAtt::m_star_size() const {
  return m_star_.size();
}
inline void E_ShenequipAtt::clear_m_star() {
  m_star_.Clear();
}
inline const ::proto_ff::E_ShenequipAttStarDesc& E_ShenequipAtt::m_star(int index) const {
  return m_star_.Get(index);
}
inline ::proto_ff::E_ShenequipAttStarDesc* E_ShenequipAtt::mutable_m_star(int index) {
  return m_star_.Mutable(index);
}
inline ::proto_ff::E_ShenequipAttStarDesc* E_ShenequipAtt::add_m_star() {
  return m_star_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_ShenequipAttStarDesc >&
E_ShenequipAtt::m_star() const {
  return m_star_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_ShenequipAttStarDesc >*
E_ShenequipAtt::mutable_m_star() {
  return &m_star_;
}

// -------------------------------------------------------------------

// Sheet_ShenequipAtt

// repeated .proto_ff.E_ShenequipAtt E_ShenequipAtt_List = 1;
inline int Sheet_ShenequipAtt::e_shenequipatt_list_size() const {
  return e_shenequipatt_list_.size();
}
inline void Sheet_ShenequipAtt::clear_e_shenequipatt_list() {
  e_shenequipatt_list_.Clear();
}
inline const ::proto_ff::E_ShenequipAtt& Sheet_ShenequipAtt::e_shenequipatt_list(int index) const {
  return e_shenequipatt_list_.Get(index);
}
inline ::proto_ff::E_ShenequipAtt* Sheet_ShenequipAtt::mutable_e_shenequipatt_list(int index) {
  return e_shenequipatt_list_.Mutable(index);
}
inline ::proto_ff::E_ShenequipAtt* Sheet_ShenequipAtt::add_e_shenequipatt_list() {
  return e_shenequipatt_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_ShenequipAtt >&
Sheet_ShenequipAtt::e_shenequipatt_list() const {
  return e_shenequipatt_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_ShenequipAtt >*
Sheet_ShenequipAtt::mutable_e_shenequipatt_list() {
  return &e_shenequipatt_list_;
}

// -------------------------------------------------------------------

// E_ShenequipLvupAttributeDesc

// optional int32 m_stepId = 1;
inline bool E_ShenequipLvupAttributeDesc::has_m_stepid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_ShenequipLvupAttributeDesc::set_has_m_stepid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_ShenequipLvupAttributeDesc::clear_has_m_stepid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_ShenequipLvupAttributeDesc::clear_m_stepid() {
  m_stepid_ = 0;
  clear_has_m_stepid();
}
inline ::google::protobuf::int32 E_ShenequipLvupAttributeDesc::m_stepid() const {
  return m_stepid_;
}
inline void E_ShenequipLvupAttributeDesc::set_m_stepid(::google::protobuf::int32 value) {
  set_has_m_stepid();
  m_stepid_ = value;
}

// optional int32 m_lvId = 2;
inline bool E_ShenequipLvupAttributeDesc::has_m_lvid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_ShenequipLvupAttributeDesc::set_has_m_lvid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_ShenequipLvupAttributeDesc::clear_has_m_lvid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_ShenequipLvupAttributeDesc::clear_m_lvid() {
  m_lvid_ = 0;
  clear_has_m_lvid();
}
inline ::google::protobuf::int32 E_ShenequipLvupAttributeDesc::m_lvid() const {
  return m_lvid_;
}
inline void E_ShenequipLvupAttributeDesc::set_m_lvid(::google::protobuf::int32 value) {
  set_has_m_lvid();
  m_lvid_ = value;
}

// -------------------------------------------------------------------

// E_ShenequipLvup

// optional int32 m_id = 1;
inline bool E_ShenequipLvup::has_m_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_ShenequipLvup::set_has_m_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_ShenequipLvup::clear_has_m_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_ShenequipLvup::clear_m_id() {
  m_id_ = 0;
  clear_has_m_id();
}
inline ::google::protobuf::int32 E_ShenequipLvup::m_id() const {
  return m_id_;
}
inline void E_ShenequipLvup::set_m_id(::google::protobuf::int32 value) {
  set_has_m_id();
  m_id_ = value;
}

// optional int32 m_lv = 2;
inline bool E_ShenequipLvup::has_m_lv() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_ShenequipLvup::set_has_m_lv() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_ShenequipLvup::clear_has_m_lv() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_ShenequipLvup::clear_m_lv() {
  m_lv_ = 0;
  clear_has_m_lv();
}
inline ::google::protobuf::int32 E_ShenequipLvup::m_lv() const {
  return m_lv_;
}
inline void E_ShenequipLvup::set_m_lv(::google::protobuf::int32 value) {
  set_has_m_lv();
  m_lv_ = value;
}

// optional int32 m_type = 3;
inline bool E_ShenequipLvup::has_m_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void E_ShenequipLvup::set_has_m_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void E_ShenequipLvup::clear_has_m_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void E_ShenequipLvup::clear_m_type() {
  m_type_ = 0;
  clear_has_m_type();
}
inline ::google::protobuf::int32 E_ShenequipLvup::m_type() const {
  return m_type_;
}
inline void E_ShenequipLvup::set_m_type(::google::protobuf::int32 value) {
  set_has_m_type();
  m_type_ = value;
}

// optional int32 m_itemID = 4;
inline bool E_ShenequipLvup::has_m_itemid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void E_ShenequipLvup::set_has_m_itemid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void E_ShenequipLvup::clear_has_m_itemid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void E_ShenequipLvup::clear_m_itemid() {
  m_itemid_ = 0;
  clear_has_m_itemid();
}
inline ::google::protobuf::int32 E_ShenequipLvup::m_itemid() const {
  return m_itemid_;
}
inline void E_ShenequipLvup::set_m_itemid(::google::protobuf::int32 value) {
  set_has_m_itemid();
  m_itemid_ = value;
}

// optional int32 m_num = 5;
inline bool E_ShenequipLvup::has_m_num() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void E_ShenequipLvup::set_has_m_num() {
  _has_bits_[0] |= 0x00000010u;
}
inline void E_ShenequipLvup::clear_has_m_num() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void E_ShenequipLvup::clear_m_num() {
  m_num_ = 0;
  clear_has_m_num();
}
inline ::google::protobuf::int32 E_ShenequipLvup::m_num() const {
  return m_num_;
}
inline void E_ShenequipLvup::set_m_num(::google::protobuf::int32 value) {
  set_has_m_num();
  m_num_ = value;
}

// optional int32 m_advanceItem = 6;
inline bool E_ShenequipLvup::has_m_advanceitem() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void E_ShenequipLvup::set_has_m_advanceitem() {
  _has_bits_[0] |= 0x00000020u;
}
inline void E_ShenequipLvup::clear_has_m_advanceitem() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void E_ShenequipLvup::clear_m_advanceitem() {
  m_advanceitem_ = 0;
  clear_has_m_advanceitem();
}
inline ::google::protobuf::int32 E_ShenequipLvup::m_advanceitem() const {
  return m_advanceitem_;
}
inline void E_ShenequipLvup::set_m_advanceitem(::google::protobuf::int32 value) {
  set_has_m_advanceitem();
  m_advanceitem_ = value;
}

// optional int32 m_advanceNum = 7;
inline bool E_ShenequipLvup::has_m_advancenum() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void E_ShenequipLvup::set_has_m_advancenum() {
  _has_bits_[0] |= 0x00000040u;
}
inline void E_ShenequipLvup::clear_has_m_advancenum() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void E_ShenequipLvup::clear_m_advancenum() {
  m_advancenum_ = 0;
  clear_has_m_advancenum();
}
inline ::google::protobuf::int32 E_ShenequipLvup::m_advancenum() const {
  return m_advancenum_;
}
inline void E_ShenequipLvup::set_m_advancenum(::google::protobuf::int32 value) {
  set_has_m_advancenum();
  m_advancenum_ = value;
}

// repeated .proto_ff.E_ShenequipLvupAttributeDesc m_attribute = 8;
inline int E_ShenequipLvup::m_attribute_size() const {
  return m_attribute_.size();
}
inline void E_ShenequipLvup::clear_m_attribute() {
  m_attribute_.Clear();
}
inline const ::proto_ff::E_ShenequipLvupAttributeDesc& E_ShenequipLvup::m_attribute(int index) const {
  return m_attribute_.Get(index);
}
inline ::proto_ff::E_ShenequipLvupAttributeDesc* E_ShenequipLvup::mutable_m_attribute(int index) {
  return m_attribute_.Mutable(index);
}
inline ::proto_ff::E_ShenequipLvupAttributeDesc* E_ShenequipLvup::add_m_attribute() {
  return m_attribute_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_ShenequipLvupAttributeDesc >&
E_ShenequipLvup::m_attribute() const {
  return m_attribute_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_ShenequipLvupAttributeDesc >*
E_ShenequipLvup::mutable_m_attribute() {
  return &m_attribute_;
}

// -------------------------------------------------------------------

// Sheet_ShenequipLvup

// repeated .proto_ff.E_ShenequipLvup E_ShenequipLvup_List = 1;
inline int Sheet_ShenequipLvup::e_shenequiplvup_list_size() const {
  return e_shenequiplvup_list_.size();
}
inline void Sheet_ShenequipLvup::clear_e_shenequiplvup_list() {
  e_shenequiplvup_list_.Clear();
}
inline const ::proto_ff::E_ShenequipLvup& Sheet_ShenequipLvup::e_shenequiplvup_list(int index) const {
  return e_shenequiplvup_list_.Get(index);
}
inline ::proto_ff::E_ShenequipLvup* Sheet_ShenequipLvup::mutable_e_shenequiplvup_list(int index) {
  return e_shenequiplvup_list_.Mutable(index);
}
inline ::proto_ff::E_ShenequipLvup* Sheet_ShenequipLvup::add_e_shenequiplvup_list() {
  return e_shenequiplvup_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_ShenequipLvup >&
Sheet_ShenequipLvup::e_shenequiplvup_list() const {
  return e_shenequiplvup_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_ShenequipLvup >*
Sheet_ShenequipLvup::mutable_e_shenequiplvup_list() {
  return &e_shenequiplvup_list_;
}

// -------------------------------------------------------------------

// E_ShenequipClear

// optional int32 m_id = 1;
inline bool E_ShenequipClear::has_m_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_ShenequipClear::set_has_m_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_ShenequipClear::clear_has_m_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_ShenequipClear::clear_m_id() {
  m_id_ = 0;
  clear_has_m_id();
}
inline ::google::protobuf::int32 E_ShenequipClear::m_id() const {
  return m_id_;
}
inline void E_ShenequipClear::set_m_id(::google::protobuf::int32 value) {
  set_has_m_id();
  m_id_ = value;
}

// optional int32 m_type = 2;
inline bool E_ShenequipClear::has_m_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_ShenequipClear::set_has_m_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_ShenequipClear::clear_has_m_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_ShenequipClear::clear_m_type() {
  m_type_ = 0;
  clear_has_m_type();
}
inline ::google::protobuf::int32 E_ShenequipClear::m_type() const {
  return m_type_;
}
inline void E_ShenequipClear::set_m_type(::google::protobuf::int32 value) {
  set_has_m_type();
  m_type_ = value;
}

// optional int32 m_lv = 3;
inline bool E_ShenequipClear::has_m_lv() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void E_ShenequipClear::set_has_m_lv() {
  _has_bits_[0] |= 0x00000004u;
}
inline void E_ShenequipClear::clear_has_m_lv() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void E_ShenequipClear::clear_m_lv() {
  m_lv_ = 0;
  clear_has_m_lv();
}
inline ::google::protobuf::int32 E_ShenequipClear::m_lv() const {
  return m_lv_;
}
inline void E_ShenequipClear::set_m_lv(::google::protobuf::int32 value) {
  set_has_m_lv();
  m_lv_ = value;
}

// optional int32 m_itemID = 4;
inline bool E_ShenequipClear::has_m_itemid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void E_ShenequipClear::set_has_m_itemid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void E_ShenequipClear::clear_has_m_itemid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void E_ShenequipClear::clear_m_itemid() {
  m_itemid_ = 0;
  clear_has_m_itemid();
}
inline ::google::protobuf::int32 E_ShenequipClear::m_itemid() const {
  return m_itemid_;
}
inline void E_ShenequipClear::set_m_itemid(::google::protobuf::int32 value) {
  set_has_m_itemid();
  m_itemid_ = value;
}

// optional int32 m_num = 5;
inline bool E_ShenequipClear::has_m_num() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void E_ShenequipClear::set_has_m_num() {
  _has_bits_[0] |= 0x00000010u;
}
inline void E_ShenequipClear::clear_has_m_num() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void E_ShenequipClear::clear_m_num() {
  m_num_ = 0;
  clear_has_m_num();
}
inline ::google::protobuf::int32 E_ShenequipClear::m_num() const {
  return m_num_;
}
inline void E_ShenequipClear::set_m_num(::google::protobuf::int32 value) {
  set_has_m_num();
  m_num_ = value;
}

// optional int32 m_breakItem = 6;
inline bool E_ShenequipClear::has_m_breakitem() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void E_ShenequipClear::set_has_m_breakitem() {
  _has_bits_[0] |= 0x00000020u;
}
inline void E_ShenequipClear::clear_has_m_breakitem() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void E_ShenequipClear::clear_m_breakitem() {
  m_breakitem_ = 0;
  clear_has_m_breakitem();
}
inline ::google::protobuf::int32 E_ShenequipClear::m_breakitem() const {
  return m_breakitem_;
}
inline void E_ShenequipClear::set_m_breakitem(::google::protobuf::int32 value) {
  set_has_m_breakitem();
  m_breakitem_ = value;
}

// optional int32 m_breakNum = 7;
inline bool E_ShenequipClear::has_m_breaknum() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void E_ShenequipClear::set_has_m_breaknum() {
  _has_bits_[0] |= 0x00000040u;
}
inline void E_ShenequipClear::clear_has_m_breaknum() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void E_ShenequipClear::clear_m_breaknum() {
  m_breaknum_ = 0;
  clear_has_m_breaknum();
}
inline ::google::protobuf::int32 E_ShenequipClear::m_breaknum() const {
  return m_breaknum_;
}
inline void E_ShenequipClear::set_m_breaknum(::google::protobuf::int32 value) {
  set_has_m_breaknum();
  m_breaknum_ = value;
}

// optional int32 m_breakProgress = 8;
inline bool E_ShenequipClear::has_m_breakprogress() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void E_ShenequipClear::set_has_m_breakprogress() {
  _has_bits_[0] |= 0x00000080u;
}
inline void E_ShenequipClear::clear_has_m_breakprogress() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void E_ShenequipClear::clear_m_breakprogress() {
  m_breakprogress_ = 0;
  clear_has_m_breakprogress();
}
inline ::google::protobuf::int32 E_ShenequipClear::m_breakprogress() const {
  return m_breakprogress_;
}
inline void E_ShenequipClear::set_m_breakprogress(::google::protobuf::int32 value) {
  set_has_m_breakprogress();
  m_breakprogress_ = value;
}

// optional int32 m_randomCounts = 9;
inline bool E_ShenequipClear::has_m_randomcounts() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void E_ShenequipClear::set_has_m_randomcounts() {
  _has_bits_[0] |= 0x00000100u;
}
inline void E_ShenequipClear::clear_has_m_randomcounts() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void E_ShenequipClear::clear_m_randomcounts() {
  m_randomcounts_ = 0;
  clear_has_m_randomcounts();
}
inline ::google::protobuf::int32 E_ShenequipClear::m_randomcounts() const {
  return m_randomcounts_;
}
inline void E_ShenequipClear::set_m_randomcounts(::google::protobuf::int32 value) {
  set_has_m_randomcounts();
  m_randomcounts_ = value;
}

// optional int32 m_minus = 10;
inline bool E_ShenequipClear::has_m_minus() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void E_ShenequipClear::set_has_m_minus() {
  _has_bits_[0] |= 0x00000200u;
}
inline void E_ShenequipClear::clear_has_m_minus() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void E_ShenequipClear::clear_m_minus() {
  m_minus_ = 0;
  clear_has_m_minus();
}
inline ::google::protobuf::int32 E_ShenequipClear::m_minus() const {
  return m_minus_;
}
inline void E_ShenequipClear::set_m_minus(::google::protobuf::int32 value) {
  set_has_m_minus();
  m_minus_ = value;
}

// optional int32 m_nextID = 11;
inline bool E_ShenequipClear::has_m_nextid() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void E_ShenequipClear::set_has_m_nextid() {
  _has_bits_[0] |= 0x00000400u;
}
inline void E_ShenequipClear::clear_has_m_nextid() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void E_ShenequipClear::clear_m_nextid() {
  m_nextid_ = 0;
  clear_has_m_nextid();
}
inline ::google::protobuf::int32 E_ShenequipClear::m_nextid() const {
  return m_nextid_;
}
inline void E_ShenequipClear::set_m_nextid(::google::protobuf::int32 value) {
  set_has_m_nextid();
  m_nextid_ = value;
}

// repeated int32 m_percent = 12;
inline int E_ShenequipClear::m_percent_size() const {
  return m_percent_.size();
}
inline void E_ShenequipClear::clear_m_percent() {
  m_percent_.Clear();
}
inline ::google::protobuf::int32 E_ShenequipClear::m_percent(int index) const {
  return m_percent_.Get(index);
}
inline void E_ShenequipClear::set_m_percent(int index, ::google::protobuf::int32 value) {
  m_percent_.Set(index, value);
}
inline void E_ShenequipClear::add_m_percent(::google::protobuf::int32 value) {
  m_percent_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
E_ShenequipClear::m_percent() const {
  return m_percent_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
E_ShenequipClear::mutable_m_percent() {
  return &m_percent_;
}

// -------------------------------------------------------------------

// Sheet_ShenequipClear

// repeated .proto_ff.E_ShenequipClear E_ShenequipClear_List = 1;
inline int Sheet_ShenequipClear::e_shenequipclear_list_size() const {
  return e_shenequipclear_list_.size();
}
inline void Sheet_ShenequipClear::clear_e_shenequipclear_list() {
  e_shenequipclear_list_.Clear();
}
inline const ::proto_ff::E_ShenequipClear& Sheet_ShenequipClear::e_shenequipclear_list(int index) const {
  return e_shenequipclear_list_.Get(index);
}
inline ::proto_ff::E_ShenequipClear* Sheet_ShenequipClear::mutable_e_shenequipclear_list(int index) {
  return e_shenequipclear_list_.Mutable(index);
}
inline ::proto_ff::E_ShenequipClear* Sheet_ShenequipClear::add_e_shenequipclear_list() {
  return e_shenequipclear_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_ShenequipClear >&
Sheet_ShenequipClear::e_shenequipclear_list() const {
  return e_shenequipclear_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_ShenequipClear >*
Sheet_ShenequipClear::mutable_e_shenequipclear_list() {
  return &e_shenequipclear_list_;
}

// -------------------------------------------------------------------

// E_ShenequipAwakenAttributeDesc

// optional int32 m_value = 1;
inline bool E_ShenequipAwakenAttributeDesc::has_m_value() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_ShenequipAwakenAttributeDesc::set_has_m_value() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_ShenequipAwakenAttributeDesc::clear_has_m_value() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_ShenequipAwakenAttributeDesc::clear_m_value() {
  m_value_ = 0;
  clear_has_m_value();
}
inline ::google::protobuf::int32 E_ShenequipAwakenAttributeDesc::m_value() const {
  return m_value_;
}
inline void E_ShenequipAwakenAttributeDesc::set_m_value(::google::protobuf::int32 value) {
  set_has_m_value();
  m_value_ = value;
}

// optional int32 m_type = 2;
inline bool E_ShenequipAwakenAttributeDesc::has_m_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_ShenequipAwakenAttributeDesc::set_has_m_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_ShenequipAwakenAttributeDesc::clear_has_m_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_ShenequipAwakenAttributeDesc::clear_m_type() {
  m_type_ = 0;
  clear_has_m_type();
}
inline ::google::protobuf::int32 E_ShenequipAwakenAttributeDesc::m_type() const {
  return m_type_;
}
inline void E_ShenequipAwakenAttributeDesc::set_m_type(::google::protobuf::int32 value) {
  set_has_m_type();
  m_type_ = value;
}

// -------------------------------------------------------------------

// E_ShenequipAwaken

// optional int32 m_id = 1;
inline bool E_ShenequipAwaken::has_m_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_ShenequipAwaken::set_has_m_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_ShenequipAwaken::clear_has_m_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_ShenequipAwaken::clear_m_id() {
  m_id_ = 0;
  clear_has_m_id();
}
inline ::google::protobuf::int32 E_ShenequipAwaken::m_id() const {
  return m_id_;
}
inline void E_ShenequipAwaken::set_m_id(::google::protobuf::int32 value) {
  set_has_m_id();
  m_id_ = value;
}

// optional int32 m_type = 2;
inline bool E_ShenequipAwaken::has_m_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_ShenequipAwaken::set_has_m_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_ShenequipAwaken::clear_has_m_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_ShenequipAwaken::clear_m_type() {
  m_type_ = 0;
  clear_has_m_type();
}
inline ::google::protobuf::int32 E_ShenequipAwaken::m_type() const {
  return m_type_;
}
inline void E_ShenequipAwaken::set_m_type(::google::protobuf::int32 value) {
  set_has_m_type();
  m_type_ = value;
}

// optional int32 m_lv = 3;
inline bool E_ShenequipAwaken::has_m_lv() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void E_ShenequipAwaken::set_has_m_lv() {
  _has_bits_[0] |= 0x00000004u;
}
inline void E_ShenequipAwaken::clear_has_m_lv() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void E_ShenequipAwaken::clear_m_lv() {
  m_lv_ = 0;
  clear_has_m_lv();
}
inline ::google::protobuf::int32 E_ShenequipAwaken::m_lv() const {
  return m_lv_;
}
inline void E_ShenequipAwaken::set_m_lv(::google::protobuf::int32 value) {
  set_has_m_lv();
  m_lv_ = value;
}

// optional int32 m_itemID = 4;
inline bool E_ShenequipAwaken::has_m_itemid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void E_ShenequipAwaken::set_has_m_itemid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void E_ShenequipAwaken::clear_has_m_itemid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void E_ShenequipAwaken::clear_m_itemid() {
  m_itemid_ = 0;
  clear_has_m_itemid();
}
inline ::google::protobuf::int32 E_ShenequipAwaken::m_itemid() const {
  return m_itemid_;
}
inline void E_ShenequipAwaken::set_m_itemid(::google::protobuf::int32 value) {
  set_has_m_itemid();
  m_itemid_ = value;
}

// optional int32 m_num = 5;
inline bool E_ShenequipAwaken::has_m_num() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void E_ShenequipAwaken::set_has_m_num() {
  _has_bits_[0] |= 0x00000010u;
}
inline void E_ShenequipAwaken::clear_has_m_num() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void E_ShenequipAwaken::clear_m_num() {
  m_num_ = 0;
  clear_has_m_num();
}
inline ::google::protobuf::int32 E_ShenequipAwaken::m_num() const {
  return m_num_;
}
inline void E_ShenequipAwaken::set_m_num(::google::protobuf::int32 value) {
  set_has_m_num();
  m_num_ = value;
}

// optional int32 m_awakeSkillID = 6;
inline bool E_ShenequipAwaken::has_m_awakeskillid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void E_ShenequipAwaken::set_has_m_awakeskillid() {
  _has_bits_[0] |= 0x00000020u;
}
inline void E_ShenequipAwaken::clear_has_m_awakeskillid() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void E_ShenequipAwaken::clear_m_awakeskillid() {
  m_awakeskillid_ = 0;
  clear_has_m_awakeskillid();
}
inline ::google::protobuf::int32 E_ShenequipAwaken::m_awakeskillid() const {
  return m_awakeskillid_;
}
inline void E_ShenequipAwaken::set_m_awakeskillid(::google::protobuf::int32 value) {
  set_has_m_awakeskillid();
  m_awakeskillid_ = value;
}

// repeated .proto_ff.E_ShenequipAwakenAttributeDesc m_attribute = 7;
inline int E_ShenequipAwaken::m_attribute_size() const {
  return m_attribute_.size();
}
inline void E_ShenequipAwaken::clear_m_attribute() {
  m_attribute_.Clear();
}
inline const ::proto_ff::E_ShenequipAwakenAttributeDesc& E_ShenequipAwaken::m_attribute(int index) const {
  return m_attribute_.Get(index);
}
inline ::proto_ff::E_ShenequipAwakenAttributeDesc* E_ShenequipAwaken::mutable_m_attribute(int index) {
  return m_attribute_.Mutable(index);
}
inline ::proto_ff::E_ShenequipAwakenAttributeDesc* E_ShenequipAwaken::add_m_attribute() {
  return m_attribute_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_ShenequipAwakenAttributeDesc >&
E_ShenequipAwaken::m_attribute() const {
  return m_attribute_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_ShenequipAwakenAttributeDesc >*
E_ShenequipAwaken::mutable_m_attribute() {
  return &m_attribute_;
}

// -------------------------------------------------------------------

// Sheet_ShenequipAwaken

// repeated .proto_ff.E_ShenequipAwaken E_ShenequipAwaken_List = 1;
inline int Sheet_ShenequipAwaken::e_shenequipawaken_list_size() const {
  return e_shenequipawaken_list_.size();
}
inline void Sheet_ShenequipAwaken::clear_e_shenequipawaken_list() {
  e_shenequipawaken_list_.Clear();
}
inline const ::proto_ff::E_ShenequipAwaken& Sheet_ShenequipAwaken::e_shenequipawaken_list(int index) const {
  return e_shenequipawaken_list_.Get(index);
}
inline ::proto_ff::E_ShenequipAwaken* Sheet_ShenequipAwaken::mutable_e_shenequipawaken_list(int index) {
  return e_shenequipawaken_list_.Mutable(index);
}
inline ::proto_ff::E_ShenequipAwaken* Sheet_ShenequipAwaken::add_e_shenequipawaken_list() {
  return e_shenequipawaken_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_ShenequipAwaken >&
Sheet_ShenequipAwaken::e_shenequipawaken_list() const {
  return e_shenequipawaken_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_ShenequipAwaken >*
Sheet_ShenequipAwaken::mutable_e_shenequipawaken_list() {
  return &e_shenequipawaken_list_;
}

// -------------------------------------------------------------------

// E_ShenequipStarupMaterialDesc

// optional int32 m_star = 1;
inline bool E_ShenequipStarupMaterialDesc::has_m_star() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_ShenequipStarupMaterialDesc::set_has_m_star() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_ShenequipStarupMaterialDesc::clear_has_m_star() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_ShenequipStarupMaterialDesc::clear_m_star() {
  m_star_ = 0;
  clear_has_m_star();
}
inline ::google::protobuf::int32 E_ShenequipStarupMaterialDesc::m_star() const {
  return m_star_;
}
inline void E_ShenequipStarupMaterialDesc::set_m_star(::google::protobuf::int32 value) {
  set_has_m_star();
  m_star_ = value;
}

// optional int32 m_quality = 2;
inline bool E_ShenequipStarupMaterialDesc::has_m_quality() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_ShenequipStarupMaterialDesc::set_has_m_quality() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_ShenequipStarupMaterialDesc::clear_has_m_quality() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_ShenequipStarupMaterialDesc::clear_m_quality() {
  m_quality_ = 0;
  clear_has_m_quality();
}
inline ::google::protobuf::int32 E_ShenequipStarupMaterialDesc::m_quality() const {
  return m_quality_;
}
inline void E_ShenequipStarupMaterialDesc::set_m_quality(::google::protobuf::int32 value) {
  set_has_m_quality();
  m_quality_ = value;
}

// optional int32 m_num = 3;
inline bool E_ShenequipStarupMaterialDesc::has_m_num() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void E_ShenequipStarupMaterialDesc::set_has_m_num() {
  _has_bits_[0] |= 0x00000004u;
}
inline void E_ShenequipStarupMaterialDesc::clear_has_m_num() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void E_ShenequipStarupMaterialDesc::clear_m_num() {
  m_num_ = 0;
  clear_has_m_num();
}
inline ::google::protobuf::int32 E_ShenequipStarupMaterialDesc::m_num() const {
  return m_num_;
}
inline void E_ShenequipStarupMaterialDesc::set_m_num(::google::protobuf::int32 value) {
  set_has_m_num();
  m_num_ = value;
}

// optional int32 m_grade = 4;
inline bool E_ShenequipStarupMaterialDesc::has_m_grade() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void E_ShenequipStarupMaterialDesc::set_has_m_grade() {
  _has_bits_[0] |= 0x00000008u;
}
inline void E_ShenequipStarupMaterialDesc::clear_has_m_grade() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void E_ShenequipStarupMaterialDesc::clear_m_grade() {
  m_grade_ = 0;
  clear_has_m_grade();
}
inline ::google::protobuf::int32 E_ShenequipStarupMaterialDesc::m_grade() const {
  return m_grade_;
}
inline void E_ShenequipStarupMaterialDesc::set_m_grade(::google::protobuf::int32 value) {
  set_has_m_grade();
  m_grade_ = value;
}

// optional int32 m_type = 5;
inline bool E_ShenequipStarupMaterialDesc::has_m_type() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void E_ShenequipStarupMaterialDesc::set_has_m_type() {
  _has_bits_[0] |= 0x00000010u;
}
inline void E_ShenequipStarupMaterialDesc::clear_has_m_type() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void E_ShenequipStarupMaterialDesc::clear_m_type() {
  m_type_ = 0;
  clear_has_m_type();
}
inline ::google::protobuf::int32 E_ShenequipStarupMaterialDesc::m_type() const {
  return m_type_;
}
inline void E_ShenequipStarupMaterialDesc::set_m_type(::google::protobuf::int32 value) {
  set_has_m_type();
  m_type_ = value;
}

// -------------------------------------------------------------------

// E_ShenequipStarup

// optional int32 m_id = 1;
inline bool E_ShenequipStarup::has_m_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_ShenequipStarup::set_has_m_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_ShenequipStarup::clear_has_m_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_ShenequipStarup::clear_m_id() {
  m_id_ = 0;
  clear_has_m_id();
}
inline ::google::protobuf::int32 E_ShenequipStarup::m_id() const {
  return m_id_;
}
inline void E_ShenequipStarup::set_m_id(::google::protobuf::int32 value) {
  set_has_m_id();
  m_id_ = value;
}

// optional int32 m_grade = 2;
inline bool E_ShenequipStarup::has_m_grade() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_ShenequipStarup::set_has_m_grade() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_ShenequipStarup::clear_has_m_grade() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_ShenequipStarup::clear_m_grade() {
  m_grade_ = 0;
  clear_has_m_grade();
}
inline ::google::protobuf::int32 E_ShenequipStarup::m_grade() const {
  return m_grade_;
}
inline void E_ShenequipStarup::set_m_grade(::google::protobuf::int32 value) {
  set_has_m_grade();
  m_grade_ = value;
}

// optional int32 m_quality = 3;
inline bool E_ShenequipStarup::has_m_quality() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void E_ShenequipStarup::set_has_m_quality() {
  _has_bits_[0] |= 0x00000004u;
}
inline void E_ShenequipStarup::clear_has_m_quality() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void E_ShenequipStarup::clear_m_quality() {
  m_quality_ = 0;
  clear_has_m_quality();
}
inline ::google::protobuf::int32 E_ShenequipStarup::m_quality() const {
  return m_quality_;
}
inline void E_ShenequipStarup::set_m_quality(::google::protobuf::int32 value) {
  set_has_m_quality();
  m_quality_ = value;
}

// optional int32 m_stars = 4;
inline bool E_ShenequipStarup::has_m_stars() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void E_ShenequipStarup::set_has_m_stars() {
  _has_bits_[0] |= 0x00000008u;
}
inline void E_ShenequipStarup::clear_has_m_stars() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void E_ShenequipStarup::clear_m_stars() {
  m_stars_ = 0;
  clear_has_m_stars();
}
inline ::google::protobuf::int32 E_ShenequipStarup::m_stars() const {
  return m_stars_;
}
inline void E_ShenequipStarup::set_m_stars(::google::protobuf::int32 value) {
  set_has_m_stars();
  m_stars_ = value;
}

// optional int32 m_nextID = 5;
inline bool E_ShenequipStarup::has_m_nextid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void E_ShenequipStarup::set_has_m_nextid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void E_ShenequipStarup::clear_has_m_nextid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void E_ShenequipStarup::clear_m_nextid() {
  m_nextid_ = 0;
  clear_has_m_nextid();
}
inline ::google::protobuf::int32 E_ShenequipStarup::m_nextid() const {
  return m_nextid_;
}
inline void E_ShenequipStarup::set_m_nextid(::google::protobuf::int32 value) {
  set_has_m_nextid();
  m_nextid_ = value;
}

// optional int32 m_lastID = 6;
inline bool E_ShenequipStarup::has_m_lastid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void E_ShenequipStarup::set_has_m_lastid() {
  _has_bits_[0] |= 0x00000020u;
}
inline void E_ShenequipStarup::clear_has_m_lastid() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void E_ShenequipStarup::clear_m_lastid() {
  m_lastid_ = 0;
  clear_has_m_lastid();
}
inline ::google::protobuf::int32 E_ShenequipStarup::m_lastid() const {
  return m_lastid_;
}
inline void E_ShenequipStarup::set_m_lastid(::google::protobuf::int32 value) {
  set_has_m_lastid();
  m_lastid_ = value;
}

// optional int32 m_percent = 7;
inline bool E_ShenequipStarup::has_m_percent() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void E_ShenequipStarup::set_has_m_percent() {
  _has_bits_[0] |= 0x00000040u;
}
inline void E_ShenequipStarup::clear_has_m_percent() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void E_ShenequipStarup::clear_m_percent() {
  m_percent_ = 0;
  clear_has_m_percent();
}
inline ::google::protobuf::int32 E_ShenequipStarup::m_percent() const {
  return m_percent_;
}
inline void E_ShenequipStarup::set_m_percent(::google::protobuf::int32 value) {
  set_has_m_percent();
  m_percent_ = value;
}

// repeated .proto_ff.E_ShenequipStarupMaterialDesc m_material = 8;
inline int E_ShenequipStarup::m_material_size() const {
  return m_material_.size();
}
inline void E_ShenequipStarup::clear_m_material() {
  m_material_.Clear();
}
inline const ::proto_ff::E_ShenequipStarupMaterialDesc& E_ShenequipStarup::m_material(int index) const {
  return m_material_.Get(index);
}
inline ::proto_ff::E_ShenequipStarupMaterialDesc* E_ShenequipStarup::mutable_m_material(int index) {
  return m_material_.Mutable(index);
}
inline ::proto_ff::E_ShenequipStarupMaterialDesc* E_ShenequipStarup::add_m_material() {
  return m_material_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_ShenequipStarupMaterialDesc >&
E_ShenequipStarup::m_material() const {
  return m_material_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_ShenequipStarupMaterialDesc >*
E_ShenequipStarup::mutable_m_material() {
  return &m_material_;
}

// -------------------------------------------------------------------

// Sheet_ShenequipStarup

// repeated .proto_ff.E_ShenequipStarup E_ShenequipStarup_List = 1;
inline int Sheet_ShenequipStarup::e_shenequipstarup_list_size() const {
  return e_shenequipstarup_list_.size();
}
inline void Sheet_ShenequipStarup::clear_e_shenequipstarup_list() {
  e_shenequipstarup_list_.Clear();
}
inline const ::proto_ff::E_ShenequipStarup& Sheet_ShenequipStarup::e_shenequipstarup_list(int index) const {
  return e_shenequipstarup_list_.Get(index);
}
inline ::proto_ff::E_ShenequipStarup* Sheet_ShenequipStarup::mutable_e_shenequipstarup_list(int index) {
  return e_shenequipstarup_list_.Mutable(index);
}
inline ::proto_ff::E_ShenequipStarup* Sheet_ShenequipStarup::add_e_shenequipstarup_list() {
  return e_shenequipstarup_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_ShenequipStarup >&
Sheet_ShenequipStarup::e_shenequipstarup_list() const {
  return e_shenequipstarup_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_ShenequipStarup >*
Sheet_ShenequipStarup::mutable_e_shenequipstarup_list() {
  return &e_shenequipstarup_list_;
}

// -------------------------------------------------------------------

// E_ShenequipPreposeRewardDesc

// optional int32 m_num = 1;
inline bool E_ShenequipPreposeRewardDesc::has_m_num() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_ShenequipPreposeRewardDesc::set_has_m_num() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_ShenequipPreposeRewardDesc::clear_has_m_num() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_ShenequipPreposeRewardDesc::clear_m_num() {
  m_num_ = 0;
  clear_has_m_num();
}
inline ::google::protobuf::int32 E_ShenequipPreposeRewardDesc::m_num() const {
  return m_num_;
}
inline void E_ShenequipPreposeRewardDesc::set_m_num(::google::protobuf::int32 value) {
  set_has_m_num();
  m_num_ = value;
}

// optional int32 m_item = 2;
inline bool E_ShenequipPreposeRewardDesc::has_m_item() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_ShenequipPreposeRewardDesc::set_has_m_item() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_ShenequipPreposeRewardDesc::clear_has_m_item() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_ShenequipPreposeRewardDesc::clear_m_item() {
  m_item_ = 0;
  clear_has_m_item();
}
inline ::google::protobuf::int32 E_ShenequipPreposeRewardDesc::m_item() const {
  return m_item_;
}
inline void E_ShenequipPreposeRewardDesc::set_m_item(::google::protobuf::int32 value) {
  set_has_m_item();
  m_item_ = value;
}

// -------------------------------------------------------------------

// E_ShenequipPrepose

// optional int32 m_id = 1;
inline bool E_ShenequipPrepose::has_m_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_ShenequipPrepose::set_has_m_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_ShenequipPrepose::clear_has_m_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_ShenequipPrepose::clear_m_id() {
  m_id_ = 0;
  clear_has_m_id();
}
inline ::google::protobuf::int32 E_ShenequipPrepose::m_id() const {
  return m_id_;
}
inline void E_ShenequipPrepose::set_m_id(::google::protobuf::int32 value) {
  set_has_m_id();
  m_id_ = value;
}

// optional int32 m_condition = 2;
inline bool E_ShenequipPrepose::has_m_condition() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_ShenequipPrepose::set_has_m_condition() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_ShenequipPrepose::clear_has_m_condition() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_ShenequipPrepose::clear_m_condition() {
  m_condition_ = 0;
  clear_has_m_condition();
}
inline ::google::protobuf::int32 E_ShenequipPrepose::m_condition() const {
  return m_condition_;
}
inline void E_ShenequipPrepose::set_m_condition(::google::protobuf::int32 value) {
  set_has_m_condition();
  m_condition_ = value;
}

// optional int32 m_value = 3;
inline bool E_ShenequipPrepose::has_m_value() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void E_ShenequipPrepose::set_has_m_value() {
  _has_bits_[0] |= 0x00000004u;
}
inline void E_ShenequipPrepose::clear_has_m_value() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void E_ShenequipPrepose::clear_m_value() {
  m_value_ = 0;
  clear_has_m_value();
}
inline ::google::protobuf::int32 E_ShenequipPrepose::m_value() const {
  return m_value_;
}
inline void E_ShenequipPrepose::set_m_value(::google::protobuf::int32 value) {
  set_has_m_value();
  m_value_ = value;
}

// repeated .proto_ff.E_ShenequipPreposeRewardDesc m_reward = 4;
inline int E_ShenequipPrepose::m_reward_size() const {
  return m_reward_.size();
}
inline void E_ShenequipPrepose::clear_m_reward() {
  m_reward_.Clear();
}
inline const ::proto_ff::E_ShenequipPreposeRewardDesc& E_ShenequipPrepose::m_reward(int index) const {
  return m_reward_.Get(index);
}
inline ::proto_ff::E_ShenequipPreposeRewardDesc* E_ShenequipPrepose::mutable_m_reward(int index) {
  return m_reward_.Mutable(index);
}
inline ::proto_ff::E_ShenequipPreposeRewardDesc* E_ShenequipPrepose::add_m_reward() {
  return m_reward_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_ShenequipPreposeRewardDesc >&
E_ShenequipPrepose::m_reward() const {
  return m_reward_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_ShenequipPreposeRewardDesc >*
E_ShenequipPrepose::mutable_m_reward() {
  return &m_reward_;
}

// -------------------------------------------------------------------

// Sheet_ShenequipPrepose

// repeated .proto_ff.E_ShenequipPrepose E_ShenequipPrepose_List = 1;
inline int Sheet_ShenequipPrepose::e_shenequipprepose_list_size() const {
  return e_shenequipprepose_list_.size();
}
inline void Sheet_ShenequipPrepose::clear_e_shenequipprepose_list() {
  e_shenequipprepose_list_.Clear();
}
inline const ::proto_ff::E_ShenequipPrepose& Sheet_ShenequipPrepose::e_shenequipprepose_list(int index) const {
  return e_shenequipprepose_list_.Get(index);
}
inline ::proto_ff::E_ShenequipPrepose* Sheet_ShenequipPrepose::mutable_e_shenequipprepose_list(int index) {
  return e_shenequipprepose_list_.Mutable(index);
}
inline ::proto_ff::E_ShenequipPrepose* Sheet_ShenequipPrepose::add_e_shenequipprepose_list() {
  return e_shenequipprepose_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_ShenequipPrepose >&
Sheet_ShenequipPrepose::e_shenequipprepose_list() const {
  return e_shenequipprepose_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_ShenequipPrepose >*
Sheet_ShenequipPrepose::mutable_e_shenequipprepose_list() {
  return &e_shenequipprepose_list_;
}

// -------------------------------------------------------------------

// E_ShenequipDominance

// optional int32 m_id = 1;
inline bool E_ShenequipDominance::has_m_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_ShenequipDominance::set_has_m_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_ShenequipDominance::clear_has_m_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_ShenequipDominance::clear_m_id() {
  m_id_ = 0;
  clear_has_m_id();
}
inline ::google::protobuf::int32 E_ShenequipDominance::m_id() const {
  return m_id_;
}
inline void E_ShenequipDominance::set_m_id(::google::protobuf::int32 value) {
  set_has_m_id();
  m_id_ = value;
}

// optional int32 m_slotId = 2;
inline bool E_ShenequipDominance::has_m_slotid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_ShenequipDominance::set_has_m_slotid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_ShenequipDominance::clear_has_m_slotid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_ShenequipDominance::clear_m_slotid() {
  m_slotid_ = 0;
  clear_has_m_slotid();
}
inline ::google::protobuf::int32 E_ShenequipDominance::m_slotid() const {
  return m_slotid_;
}
inline void E_ShenequipDominance::set_m_slotid(::google::protobuf::int32 value) {
  set_has_m_slotid();
  m_slotid_ = value;
}

// optional int32 m_type = 3;
inline bool E_ShenequipDominance::has_m_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void E_ShenequipDominance::set_has_m_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void E_ShenequipDominance::clear_has_m_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void E_ShenequipDominance::clear_m_type() {
  m_type_ = 0;
  clear_has_m_type();
}
inline ::google::protobuf::int32 E_ShenequipDominance::m_type() const {
  return m_type_;
}
inline void E_ShenequipDominance::set_m_type(::google::protobuf::int32 value) {
  set_has_m_type();
  m_type_ = value;
}

// optional string m_sign = 4;
inline bool E_ShenequipDominance::has_m_sign() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void E_ShenequipDominance::set_has_m_sign() {
  _has_bits_[0] |= 0x00000008u;
}
inline void E_ShenequipDominance::clear_has_m_sign() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void E_ShenequipDominance::clear_m_sign() {
  if (m_sign_ != &::google::protobuf::internal::kEmptyString) {
    m_sign_->clear();
  }
  clear_has_m_sign();
}
inline const ::std::string& E_ShenequipDominance::m_sign() const {
  return *m_sign_;
}
inline void E_ShenequipDominance::set_m_sign(const ::std::string& value) {
  set_has_m_sign();
  if (m_sign_ == &::google::protobuf::internal::kEmptyString) {
    m_sign_ = new ::std::string;
  }
  m_sign_->assign(value);
}
inline void E_ShenequipDominance::set_m_sign(const char* value) {
  set_has_m_sign();
  if (m_sign_ == &::google::protobuf::internal::kEmptyString) {
    m_sign_ = new ::std::string;
  }
  m_sign_->assign(value);
}
inline void E_ShenequipDominance::set_m_sign(const char* value, size_t size) {
  set_has_m_sign();
  if (m_sign_ == &::google::protobuf::internal::kEmptyString) {
    m_sign_ = new ::std::string;
  }
  m_sign_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* E_ShenequipDominance::mutable_m_sign() {
  set_has_m_sign();
  if (m_sign_ == &::google::protobuf::internal::kEmptyString) {
    m_sign_ = new ::std::string;
  }
  return m_sign_;
}
inline ::std::string* E_ShenequipDominance::release_m_sign() {
  clear_has_m_sign();
  if (m_sign_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = m_sign_;
    m_sign_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void E_ShenequipDominance::set_allocated_m_sign(::std::string* m_sign) {
  if (m_sign_ != &::google::protobuf::internal::kEmptyString) {
    delete m_sign_;
  }
  if (m_sign) {
    set_has_m_sign();
    m_sign_ = m_sign;
  } else {
    clear_has_m_sign();
    m_sign_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 m_quality = 5;
inline bool E_ShenequipDominance::has_m_quality() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void E_ShenequipDominance::set_has_m_quality() {
  _has_bits_[0] |= 0x00000010u;
}
inline void E_ShenequipDominance::clear_has_m_quality() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void E_ShenequipDominance::clear_m_quality() {
  m_quality_ = 0;
  clear_has_m_quality();
}
inline ::google::protobuf::int32 E_ShenequipDominance::m_quality() const {
  return m_quality_;
}
inline void E_ShenequipDominance::set_m_quality(::google::protobuf::int32 value) {
  set_has_m_quality();
  m_quality_ = value;
}

// optional int32 m_star = 6;
inline bool E_ShenequipDominance::has_m_star() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void E_ShenequipDominance::set_has_m_star() {
  _has_bits_[0] |= 0x00000020u;
}
inline void E_ShenequipDominance::clear_has_m_star() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void E_ShenequipDominance::clear_m_star() {
  m_star_ = 0;
  clear_has_m_star();
}
inline ::google::protobuf::int32 E_ShenequipDominance::m_star() const {
  return m_star_;
}
inline void E_ShenequipDominance::set_m_star(::google::protobuf::int32 value) {
  set_has_m_star();
  m_star_ = value;
}

// optional int32 m_control = 7;
inline bool E_ShenequipDominance::has_m_control() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void E_ShenequipDominance::set_has_m_control() {
  _has_bits_[0] |= 0x00000040u;
}
inline void E_ShenequipDominance::clear_has_m_control() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void E_ShenequipDominance::clear_m_control() {
  m_control_ = 0;
  clear_has_m_control();
}
inline ::google::protobuf::int32 E_ShenequipDominance::m_control() const {
  return m_control_;
}
inline void E_ShenequipDominance::set_m_control(::google::protobuf::int32 value) {
  set_has_m_control();
  m_control_ = value;
}

// optional int32 m_secret = 8;
inline bool E_ShenequipDominance::has_m_secret() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void E_ShenequipDominance::set_has_m_secret() {
  _has_bits_[0] |= 0x00000080u;
}
inline void E_ShenequipDominance::clear_has_m_secret() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void E_ShenequipDominance::clear_m_secret() {
  m_secret_ = 0;
  clear_has_m_secret();
}
inline ::google::protobuf::int32 E_ShenequipDominance::m_secret() const {
  return m_secret_;
}
inline void E_ShenequipDominance::set_m_secret(::google::protobuf::int32 value) {
  set_has_m_secret();
  m_secret_ = value;
}

// optional int32 m_passive = 9;
inline bool E_ShenequipDominance::has_m_passive() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void E_ShenequipDominance::set_has_m_passive() {
  _has_bits_[0] |= 0x00000100u;
}
inline void E_ShenequipDominance::clear_has_m_passive() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void E_ShenequipDominance::clear_m_passive() {
  m_passive_ = 0;
  clear_has_m_passive();
}
inline ::google::protobuf::int32 E_ShenequipDominance::m_passive() const {
  return m_passive_;
}
inline void E_ShenequipDominance::set_m_passive(::google::protobuf::int32 value) {
  set_has_m_passive();
  m_passive_ = value;
}

// optional int32 m_dark = 10;
inline bool E_ShenequipDominance::has_m_dark() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void E_ShenequipDominance::set_has_m_dark() {
  _has_bits_[0] |= 0x00000200u;
}
inline void E_ShenequipDominance::clear_has_m_dark() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void E_ShenequipDominance::clear_m_dark() {
  m_dark_ = 0;
  clear_has_m_dark();
}
inline ::google::protobuf::int32 E_ShenequipDominance::m_dark() const {
  return m_dark_;
}
inline void E_ShenequipDominance::set_m_dark(::google::protobuf::int32 value) {
  set_has_m_dark();
  m_dark_ = value;
}

// -------------------------------------------------------------------

// Sheet_ShenequipDominance

// repeated .proto_ff.E_ShenequipDominance E_ShenequipDominance_List = 1;
inline int Sheet_ShenequipDominance::e_shenequipdominance_list_size() const {
  return e_shenequipdominance_list_.size();
}
inline void Sheet_ShenequipDominance::clear_e_shenequipdominance_list() {
  e_shenequipdominance_list_.Clear();
}
inline const ::proto_ff::E_ShenequipDominance& Sheet_ShenequipDominance::e_shenequipdominance_list(int index) const {
  return e_shenequipdominance_list_.Get(index);
}
inline ::proto_ff::E_ShenequipDominance* Sheet_ShenequipDominance::mutable_e_shenequipdominance_list(int index) {
  return e_shenequipdominance_list_.Mutable(index);
}
inline ::proto_ff::E_ShenequipDominance* Sheet_ShenequipDominance::add_e_shenequipdominance_list() {
  return e_shenequipdominance_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_ShenequipDominance >&
Sheet_ShenequipDominance::e_shenequipdominance_list() const {
  return e_shenequipdominance_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_ShenequipDominance >*
Sheet_ShenequipDominance::mutable_e_shenequipdominance_list() {
  return &e_shenequipdominance_list_;
}

// -------------------------------------------------------------------

// E_ShenequipAdvancedAttributeDesc

// optional int32 m_value = 1;
inline bool E_ShenequipAdvancedAttributeDesc::has_m_value() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_ShenequipAdvancedAttributeDesc::set_has_m_value() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_ShenequipAdvancedAttributeDesc::clear_has_m_value() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_ShenequipAdvancedAttributeDesc::clear_m_value() {
  m_value_ = 0;
  clear_has_m_value();
}
inline ::google::protobuf::int32 E_ShenequipAdvancedAttributeDesc::m_value() const {
  return m_value_;
}
inline void E_ShenequipAdvancedAttributeDesc::set_m_value(::google::protobuf::int32 value) {
  set_has_m_value();
  m_value_ = value;
}

// optional int32 m_type = 2;
inline bool E_ShenequipAdvancedAttributeDesc::has_m_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_ShenequipAdvancedAttributeDesc::set_has_m_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_ShenequipAdvancedAttributeDesc::clear_has_m_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_ShenequipAdvancedAttributeDesc::clear_m_type() {
  m_type_ = 0;
  clear_has_m_type();
}
inline ::google::protobuf::int32 E_ShenequipAdvancedAttributeDesc::m_type() const {
  return m_type_;
}
inline void E_ShenequipAdvancedAttributeDesc::set_m_type(::google::protobuf::int32 value) {
  set_has_m_type();
  m_type_ = value;
}

// -------------------------------------------------------------------

// E_ShenequipAdvanced

// optional int32 m_id = 1;
inline bool E_ShenequipAdvanced::has_m_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_ShenequipAdvanced::set_has_m_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_ShenequipAdvanced::clear_has_m_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_ShenequipAdvanced::clear_m_id() {
  m_id_ = 0;
  clear_has_m_id();
}
inline ::google::protobuf::int32 E_ShenequipAdvanced::m_id() const {
  return m_id_;
}
inline void E_ShenequipAdvanced::set_m_id(::google::protobuf::int32 value) {
  set_has_m_id();
  m_id_ = value;
}

// optional int32 m_type = 2;
inline bool E_ShenequipAdvanced::has_m_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_ShenequipAdvanced::set_has_m_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_ShenequipAdvanced::clear_has_m_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_ShenequipAdvanced::clear_m_type() {
  m_type_ = 0;
  clear_has_m_type();
}
inline ::google::protobuf::int32 E_ShenequipAdvanced::m_type() const {
  return m_type_;
}
inline void E_ShenequipAdvanced::set_m_type(::google::protobuf::int32 value) {
  set_has_m_type();
  m_type_ = value;
}

// optional int32 m_lv = 3;
inline bool E_ShenequipAdvanced::has_m_lv() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void E_ShenequipAdvanced::set_has_m_lv() {
  _has_bits_[0] |= 0x00000004u;
}
inline void E_ShenequipAdvanced::clear_has_m_lv() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void E_ShenequipAdvanced::clear_m_lv() {
  m_lv_ = 0;
  clear_has_m_lv();
}
inline ::google::protobuf::int32 E_ShenequipAdvanced::m_lv() const {
  return m_lv_;
}
inline void E_ShenequipAdvanced::set_m_lv(::google::protobuf::int32 value) {
  set_has_m_lv();
  m_lv_ = value;
}

// optional int32 m_starLimit = 4;
inline bool E_ShenequipAdvanced::has_m_starlimit() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void E_ShenequipAdvanced::set_has_m_starlimit() {
  _has_bits_[0] |= 0x00000008u;
}
inline void E_ShenequipAdvanced::clear_has_m_starlimit() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void E_ShenequipAdvanced::clear_m_starlimit() {
  m_starlimit_ = 0;
  clear_has_m_starlimit();
}
inline ::google::protobuf::int32 E_ShenequipAdvanced::m_starlimit() const {
  return m_starlimit_;
}
inline void E_ShenequipAdvanced::set_m_starlimit(::google::protobuf::int32 value) {
  set_has_m_starlimit();
  m_starlimit_ = value;
}

// optional int32 m_materials = 5;
inline bool E_ShenequipAdvanced::has_m_materials() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void E_ShenequipAdvanced::set_has_m_materials() {
  _has_bits_[0] |= 0x00000010u;
}
inline void E_ShenequipAdvanced::clear_has_m_materials() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void E_ShenequipAdvanced::clear_m_materials() {
  m_materials_ = 0;
  clear_has_m_materials();
}
inline ::google::protobuf::int32 E_ShenequipAdvanced::m_materials() const {
  return m_materials_;
}
inline void E_ShenequipAdvanced::set_m_materials(::google::protobuf::int32 value) {
  set_has_m_materials();
  m_materials_ = value;
}

// optional int32 m_num = 6;
inline bool E_ShenequipAdvanced::has_m_num() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void E_ShenequipAdvanced::set_has_m_num() {
  _has_bits_[0] |= 0x00000020u;
}
inline void E_ShenequipAdvanced::clear_has_m_num() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void E_ShenequipAdvanced::clear_m_num() {
  m_num_ = 0;
  clear_has_m_num();
}
inline ::google::protobuf::int32 E_ShenequipAdvanced::m_num() const {
  return m_num_;
}
inline void E_ShenequipAdvanced::set_m_num(::google::protobuf::int32 value) {
  set_has_m_num();
  m_num_ = value;
}

// optional int32 m_luckyMax = 7;
inline bool E_ShenequipAdvanced::has_m_luckymax() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void E_ShenequipAdvanced::set_has_m_luckymax() {
  _has_bits_[0] |= 0x00000040u;
}
inline void E_ShenequipAdvanced::clear_has_m_luckymax() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void E_ShenequipAdvanced::clear_m_luckymax() {
  m_luckymax_ = 0;
  clear_has_m_luckymax();
}
inline ::google::protobuf::int32 E_ShenequipAdvanced::m_luckymax() const {
  return m_luckymax_;
}
inline void E_ShenequipAdvanced::set_m_luckymax(::google::protobuf::int32 value) {
  set_has_m_luckymax();
  m_luckymax_ = value;
}

// optional int32 m_luckyAdd = 8;
inline bool E_ShenequipAdvanced::has_m_luckyadd() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void E_ShenequipAdvanced::set_has_m_luckyadd() {
  _has_bits_[0] |= 0x00000080u;
}
inline void E_ShenequipAdvanced::clear_has_m_luckyadd() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void E_ShenequipAdvanced::clear_m_luckyadd() {
  m_luckyadd_ = 0;
  clear_has_m_luckyadd();
}
inline ::google::protobuf::int32 E_ShenequipAdvanced::m_luckyadd() const {
  return m_luckyadd_;
}
inline void E_ShenequipAdvanced::set_m_luckyadd(::google::protobuf::int32 value) {
  set_has_m_luckyadd();
  m_luckyadd_ = value;
}

// repeated .proto_ff.E_ShenequipAdvancedAttributeDesc m_attribute = 9;
inline int E_ShenequipAdvanced::m_attribute_size() const {
  return m_attribute_.size();
}
inline void E_ShenequipAdvanced::clear_m_attribute() {
  m_attribute_.Clear();
}
inline const ::proto_ff::E_ShenequipAdvancedAttributeDesc& E_ShenequipAdvanced::m_attribute(int index) const {
  return m_attribute_.Get(index);
}
inline ::proto_ff::E_ShenequipAdvancedAttributeDesc* E_ShenequipAdvanced::mutable_m_attribute(int index) {
  return m_attribute_.Mutable(index);
}
inline ::proto_ff::E_ShenequipAdvancedAttributeDesc* E_ShenequipAdvanced::add_m_attribute() {
  return m_attribute_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_ShenequipAdvancedAttributeDesc >&
E_ShenequipAdvanced::m_attribute() const {
  return m_attribute_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_ShenequipAdvancedAttributeDesc >*
E_ShenequipAdvanced::mutable_m_attribute() {
  return &m_attribute_;
}

// -------------------------------------------------------------------

// Sheet_ShenequipAdvanced

// repeated .proto_ff.E_ShenequipAdvanced E_ShenequipAdvanced_List = 1;
inline int Sheet_ShenequipAdvanced::e_shenequipadvanced_list_size() const {
  return e_shenequipadvanced_list_.size();
}
inline void Sheet_ShenequipAdvanced::clear_e_shenequipadvanced_list() {
  e_shenequipadvanced_list_.Clear();
}
inline const ::proto_ff::E_ShenequipAdvanced& Sheet_ShenequipAdvanced::e_shenequipadvanced_list(int index) const {
  return e_shenequipadvanced_list_.Get(index);
}
inline ::proto_ff::E_ShenequipAdvanced* Sheet_ShenequipAdvanced::mutable_e_shenequipadvanced_list(int index) {
  return e_shenequipadvanced_list_.Mutable(index);
}
inline ::proto_ff::E_ShenequipAdvanced* Sheet_ShenequipAdvanced::add_e_shenequipadvanced_list() {
  return e_shenequipadvanced_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_ShenequipAdvanced >&
Sheet_ShenequipAdvanced::e_shenequipadvanced_list() const {
  return e_shenequipadvanced_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_ShenequipAdvanced >*
Sheet_ShenequipAdvanced::mutable_e_shenequipadvanced_list() {
  return &e_shenequipadvanced_list_;
}

// -------------------------------------------------------------------

// E_ShenequipTalentConditionDesc

// optional int32 m_lv = 1;
inline bool E_ShenequipTalentConditionDesc::has_m_lv() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_ShenequipTalentConditionDesc::set_has_m_lv() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_ShenequipTalentConditionDesc::clear_has_m_lv() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_ShenequipTalentConditionDesc::clear_m_lv() {
  m_lv_ = 0;
  clear_has_m_lv();
}
inline ::google::protobuf::int32 E_ShenequipTalentConditionDesc::m_lv() const {
  return m_lv_;
}
inline void E_ShenequipTalentConditionDesc::set_m_lv(::google::protobuf::int32 value) {
  set_has_m_lv();
  m_lv_ = value;
}

// optional int32 m_id = 2;
inline bool E_ShenequipTalentConditionDesc::has_m_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_ShenequipTalentConditionDesc::set_has_m_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_ShenequipTalentConditionDesc::clear_has_m_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_ShenequipTalentConditionDesc::clear_m_id() {
  m_id_ = 0;
  clear_has_m_id();
}
inline ::google::protobuf::int32 E_ShenequipTalentConditionDesc::m_id() const {
  return m_id_;
}
inline void E_ShenequipTalentConditionDesc::set_m_id(::google::protobuf::int32 value) {
  set_has_m_id();
  m_id_ = value;
}

// -------------------------------------------------------------------

// E_ShenequipTalent

// optional int32 m_id = 1;
inline bool E_ShenequipTalent::has_m_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_ShenequipTalent::set_has_m_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_ShenequipTalent::clear_has_m_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_ShenequipTalent::clear_m_id() {
  m_id_ = 0;
  clear_has_m_id();
}
inline ::google::protobuf::int32 E_ShenequipTalent::m_id() const {
  return m_id_;
}
inline void E_ShenequipTalent::set_m_id(::google::protobuf::int32 value) {
  set_has_m_id();
  m_id_ = value;
}

// optional int32 m_type = 2;
inline bool E_ShenequipTalent::has_m_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_ShenequipTalent::set_has_m_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_ShenequipTalent::clear_has_m_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_ShenequipTalent::clear_m_type() {
  m_type_ = 0;
  clear_has_m_type();
}
inline ::google::protobuf::int32 E_ShenequipTalent::m_type() const {
  return m_type_;
}
inline void E_ShenequipTalent::set_m_type(::google::protobuf::int32 value) {
  set_has_m_type();
  m_type_ = value;
}

// optional int32 m_talentType = 3;
inline bool E_ShenequipTalent::has_m_talenttype() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void E_ShenequipTalent::set_has_m_talenttype() {
  _has_bits_[0] |= 0x00000004u;
}
inline void E_ShenequipTalent::clear_has_m_talenttype() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void E_ShenequipTalent::clear_m_talenttype() {
  m_talenttype_ = 0;
  clear_has_m_talenttype();
}
inline ::google::protobuf::int32 E_ShenequipTalent::m_talenttype() const {
  return m_talenttype_;
}
inline void E_ShenequipTalent::set_m_talenttype(::google::protobuf::int32 value) {
  set_has_m_talenttype();
  m_talenttype_ = value;
}

// optional int32 m_location = 4;
inline bool E_ShenequipTalent::has_m_location() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void E_ShenequipTalent::set_has_m_location() {
  _has_bits_[0] |= 0x00000008u;
}
inline void E_ShenequipTalent::clear_has_m_location() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void E_ShenequipTalent::clear_m_location() {
  m_location_ = 0;
  clear_has_m_location();
}
inline ::google::protobuf::int32 E_ShenequipTalent::m_location() const {
  return m_location_;
}
inline void E_ShenequipTalent::set_m_location(::google::protobuf::int32 value) {
  set_has_m_location();
  m_location_ = value;
}

// optional int32 m_skillId = 5;
inline bool E_ShenequipTalent::has_m_skillid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void E_ShenequipTalent::set_has_m_skillid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void E_ShenequipTalent::clear_has_m_skillid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void E_ShenequipTalent::clear_m_skillid() {
  m_skillid_ = 0;
  clear_has_m_skillid();
}
inline ::google::protobuf::int32 E_ShenequipTalent::m_skillid() const {
  return m_skillid_;
}
inline void E_ShenequipTalent::set_m_skillid(::google::protobuf::int32 value) {
  set_has_m_skillid();
  m_skillid_ = value;
}

// optional int32 m_lvLImit = 6;
inline bool E_ShenequipTalent::has_m_lvlimit() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void E_ShenequipTalent::set_has_m_lvlimit() {
  _has_bits_[0] |= 0x00000020u;
}
inline void E_ShenequipTalent::clear_has_m_lvlimit() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void E_ShenequipTalent::clear_m_lvlimit() {
  m_lvlimit_ = 0;
  clear_has_m_lvlimit();
}
inline ::google::protobuf::int32 E_ShenequipTalent::m_lvlimit() const {
  return m_lvlimit_;
}
inline void E_ShenequipTalent::set_m_lvlimit(::google::protobuf::int32 value) {
  set_has_m_lvlimit();
  m_lvlimit_ = value;
}

// optional int32 m_talenLvLimit = 7;
inline bool E_ShenequipTalent::has_m_talenlvlimit() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void E_ShenequipTalent::set_has_m_talenlvlimit() {
  _has_bits_[0] |= 0x00000040u;
}
inline void E_ShenequipTalent::clear_has_m_talenlvlimit() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void E_ShenequipTalent::clear_m_talenlvlimit() {
  m_talenlvlimit_ = 0;
  clear_has_m_talenlvlimit();
}
inline ::google::protobuf::int32 E_ShenequipTalent::m_talenlvlimit() const {
  return m_talenlvlimit_;
}
inline void E_ShenequipTalent::set_m_talenlvlimit(::google::protobuf::int32 value) {
  set_has_m_talenlvlimit();
  m_talenlvlimit_ = value;
}

// optional int32 m_attribute_value = 8;
inline bool E_ShenequipTalent::has_m_attribute_value() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void E_ShenequipTalent::set_has_m_attribute_value() {
  _has_bits_[0] |= 0x00000080u;
}
inline void E_ShenequipTalent::clear_has_m_attribute_value() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void E_ShenequipTalent::clear_m_attribute_value() {
  m_attribute_value_ = 0;
  clear_has_m_attribute_value();
}
inline ::google::protobuf::int32 E_ShenequipTalent::m_attribute_value() const {
  return m_attribute_value_;
}
inline void E_ShenequipTalent::set_m_attribute_value(::google::protobuf::int32 value) {
  set_has_m_attribute_value();
  m_attribute_value_ = value;
}

// optional int32 m_attribute_type = 9;
inline bool E_ShenequipTalent::has_m_attribute_type() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void E_ShenequipTalent::set_has_m_attribute_type() {
  _has_bits_[0] |= 0x00000100u;
}
inline void E_ShenequipTalent::clear_has_m_attribute_type() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void E_ShenequipTalent::clear_m_attribute_type() {
  m_attribute_type_ = 0;
  clear_has_m_attribute_type();
}
inline ::google::protobuf::int32 E_ShenequipTalent::m_attribute_type() const {
  return m_attribute_type_;
}
inline void E_ShenequipTalent::set_m_attribute_type(::google::protobuf::int32 value) {
  set_has_m_attribute_type();
  m_attribute_type_ = value;
}

// optional int32 m_posX = 10;
inline bool E_ShenequipTalent::has_m_posx() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void E_ShenequipTalent::set_has_m_posx() {
  _has_bits_[0] |= 0x00000200u;
}
inline void E_ShenequipTalent::clear_has_m_posx() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void E_ShenequipTalent::clear_m_posx() {
  m_posx_ = 0;
  clear_has_m_posx();
}
inline ::google::protobuf::int32 E_ShenequipTalent::m_posx() const {
  return m_posx_;
}
inline void E_ShenequipTalent::set_m_posx(::google::protobuf::int32 value) {
  set_has_m_posx();
  m_posx_ = value;
}

// optional int32 m_posY = 11;
inline bool E_ShenequipTalent::has_m_posy() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void E_ShenequipTalent::set_has_m_posy() {
  _has_bits_[0] |= 0x00000400u;
}
inline void E_ShenequipTalent::clear_has_m_posy() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void E_ShenequipTalent::clear_m_posy() {
  m_posy_ = 0;
  clear_has_m_posy();
}
inline ::google::protobuf::int32 E_ShenequipTalent::m_posy() const {
  return m_posy_;
}
inline void E_ShenequipTalent::set_m_posy(::google::protobuf::int32 value) {
  set_has_m_posy();
  m_posy_ = value;
}

// repeated .proto_ff.E_ShenequipTalentConditionDesc m_condition = 12;
inline int E_ShenequipTalent::m_condition_size() const {
  return m_condition_.size();
}
inline void E_ShenequipTalent::clear_m_condition() {
  m_condition_.Clear();
}
inline const ::proto_ff::E_ShenequipTalentConditionDesc& E_ShenequipTalent::m_condition(int index) const {
  return m_condition_.Get(index);
}
inline ::proto_ff::E_ShenequipTalentConditionDesc* E_ShenequipTalent::mutable_m_condition(int index) {
  return m_condition_.Mutable(index);
}
inline ::proto_ff::E_ShenequipTalentConditionDesc* E_ShenequipTalent::add_m_condition() {
  return m_condition_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_ShenequipTalentConditionDesc >&
E_ShenequipTalent::m_condition() const {
  return m_condition_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_ShenequipTalentConditionDesc >*
E_ShenequipTalent::mutable_m_condition() {
  return &m_condition_;
}

// -------------------------------------------------------------------

// Sheet_ShenequipTalent

// repeated .proto_ff.E_ShenequipTalent E_ShenequipTalent_List = 1;
inline int Sheet_ShenequipTalent::e_shenequiptalent_list_size() const {
  return e_shenequiptalent_list_.size();
}
inline void Sheet_ShenequipTalent::clear_e_shenequiptalent_list() {
  e_shenequiptalent_list_.Clear();
}
inline const ::proto_ff::E_ShenequipTalent& Sheet_ShenequipTalent::e_shenequiptalent_list(int index) const {
  return e_shenequiptalent_list_.Get(index);
}
inline ::proto_ff::E_ShenequipTalent* Sheet_ShenequipTalent::mutable_e_shenequiptalent_list(int index) {
  return e_shenequiptalent_list_.Mutable(index);
}
inline ::proto_ff::E_ShenequipTalent* Sheet_ShenequipTalent::add_e_shenequiptalent_list() {
  return e_shenequiptalent_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_ShenequipTalent >&
Sheet_ShenequipTalent::e_shenequiptalent_list() const {
  return e_shenequiptalent_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_ShenequipTalent >*
Sheet_ShenequipTalent::mutable_e_shenequiptalent_list() {
  return &e_shenequiptalent_list_;
}

// -------------------------------------------------------------------

// E_ShenequipTalenttype

// optional int32 m_id = 1;
inline bool E_ShenequipTalenttype::has_m_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_ShenequipTalenttype::set_has_m_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_ShenequipTalenttype::clear_has_m_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_ShenequipTalenttype::clear_m_id() {
  m_id_ = 0;
  clear_has_m_id();
}
inline ::google::protobuf::int32 E_ShenequipTalenttype::m_id() const {
  return m_id_;
}
inline void E_ShenequipTalenttype::set_m_id(::google::protobuf::int32 value) {
  set_has_m_id();
  m_id_ = value;
}

// optional int32 m_type = 2;
inline bool E_ShenequipTalenttype::has_m_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_ShenequipTalenttype::set_has_m_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_ShenequipTalenttype::clear_has_m_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_ShenequipTalenttype::clear_m_type() {
  m_type_ = 0;
  clear_has_m_type();
}
inline ::google::protobuf::int32 E_ShenequipTalenttype::m_type() const {
  return m_type_;
}
inline void E_ShenequipTalenttype::set_m_type(::google::protobuf::int32 value) {
  set_has_m_type();
  m_type_ = value;
}

// optional int32 m_talentType = 3;
inline bool E_ShenequipTalenttype::has_m_talenttype() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void E_ShenequipTalenttype::set_has_m_talenttype() {
  _has_bits_[0] |= 0x00000004u;
}
inline void E_ShenequipTalenttype::clear_has_m_talenttype() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void E_ShenequipTalenttype::clear_m_talenttype() {
  m_talenttype_ = 0;
  clear_has_m_talenttype();
}
inline ::google::protobuf::int32 E_ShenequipTalenttype::m_talenttype() const {
  return m_talenttype_;
}
inline void E_ShenequipTalenttype::set_m_talenttype(::google::protobuf::int32 value) {
  set_has_m_talenttype();
  m_talenttype_ = value;
}

// optional int32 m_qualityLimit = 4;
inline bool E_ShenequipTalenttype::has_m_qualitylimit() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void E_ShenequipTalenttype::set_has_m_qualitylimit() {
  _has_bits_[0] |= 0x00000008u;
}
inline void E_ShenequipTalenttype::clear_has_m_qualitylimit() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void E_ShenequipTalenttype::clear_m_qualitylimit() {
  m_qualitylimit_ = 0;
  clear_has_m_qualitylimit();
}
inline ::google::protobuf::int32 E_ShenequipTalenttype::m_qualitylimit() const {
  return m_qualitylimit_;
}
inline void E_ShenequipTalenttype::set_m_qualitylimit(::google::protobuf::int32 value) {
  set_has_m_qualitylimit();
  m_qualitylimit_ = value;
}

// optional int32 m_starLimit = 5;
inline bool E_ShenequipTalenttype::has_m_starlimit() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void E_ShenequipTalenttype::set_has_m_starlimit() {
  _has_bits_[0] |= 0x00000010u;
}
inline void E_ShenequipTalenttype::clear_has_m_starlimit() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void E_ShenequipTalenttype::clear_m_starlimit() {
  m_starlimit_ = 0;
  clear_has_m_starlimit();
}
inline ::google::protobuf::int32 E_ShenequipTalenttype::m_starlimit() const {
  return m_starlimit_;
}
inline void E_ShenequipTalenttype::set_m_starlimit(::google::protobuf::int32 value) {
  set_has_m_starlimit();
  m_starlimit_ = value;
}

// optional int32 m_talenLvLimit = 6;
inline bool E_ShenequipTalenttype::has_m_talenlvlimit() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void E_ShenequipTalenttype::set_has_m_talenlvlimit() {
  _has_bits_[0] |= 0x00000020u;
}
inline void E_ShenequipTalenttype::clear_has_m_talenlvlimit() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void E_ShenequipTalenttype::clear_m_talenlvlimit() {
  m_talenlvlimit_ = 0;
  clear_has_m_talenlvlimit();
}
inline ::google::protobuf::int32 E_ShenequipTalenttype::m_talenlvlimit() const {
  return m_talenlvlimit_;
}
inline void E_ShenequipTalenttype::set_m_talenlvlimit(::google::protobuf::int32 value) {
  set_has_m_talenlvlimit();
  m_talenlvlimit_ = value;
}

// -------------------------------------------------------------------

// Sheet_ShenequipTalenttype

// repeated .proto_ff.E_ShenequipTalenttype E_ShenequipTalenttype_List = 1;
inline int Sheet_ShenequipTalenttype::e_shenequiptalenttype_list_size() const {
  return e_shenequiptalenttype_list_.size();
}
inline void Sheet_ShenequipTalenttype::clear_e_shenequiptalenttype_list() {
  e_shenequiptalenttype_list_.Clear();
}
inline const ::proto_ff::E_ShenequipTalenttype& Sheet_ShenequipTalenttype::e_shenequiptalenttype_list(int index) const {
  return e_shenequiptalenttype_list_.Get(index);
}
inline ::proto_ff::E_ShenequipTalenttype* Sheet_ShenequipTalenttype::mutable_e_shenequiptalenttype_list(int index) {
  return e_shenequiptalenttype_list_.Mutable(index);
}
inline ::proto_ff::E_ShenequipTalenttype* Sheet_ShenequipTalenttype::add_e_shenequiptalenttype_list() {
  return e_shenequiptalenttype_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_ShenequipTalenttype >&
Sheet_ShenequipTalenttype::e_shenequiptalenttype_list() const {
  return e_shenequiptalenttype_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_ShenequipTalenttype >*
Sheet_ShenequipTalenttype::mutable_e_shenequiptalenttype_list() {
  return &e_shenequiptalenttype_list_;
}

// -------------------------------------------------------------------

// E_ShenequipPreviewRewardDesc

// optional int32 m_num = 1;
inline bool E_ShenequipPreviewRewardDesc::has_m_num() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_ShenequipPreviewRewardDesc::set_has_m_num() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_ShenequipPreviewRewardDesc::clear_has_m_num() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_ShenequipPreviewRewardDesc::clear_m_num() {
  m_num_ = 0;
  clear_has_m_num();
}
inline ::google::protobuf::int32 E_ShenequipPreviewRewardDesc::m_num() const {
  return m_num_;
}
inline void E_ShenequipPreviewRewardDesc::set_m_num(::google::protobuf::int32 value) {
  set_has_m_num();
  m_num_ = value;
}

// optional int32 m_item = 2;
inline bool E_ShenequipPreviewRewardDesc::has_m_item() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_ShenequipPreviewRewardDesc::set_has_m_item() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_ShenequipPreviewRewardDesc::clear_has_m_item() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_ShenequipPreviewRewardDesc::clear_m_item() {
  m_item_ = 0;
  clear_has_m_item();
}
inline ::google::protobuf::int32 E_ShenequipPreviewRewardDesc::m_item() const {
  return m_item_;
}
inline void E_ShenequipPreviewRewardDesc::set_m_item(::google::protobuf::int32 value) {
  set_has_m_item();
  m_item_ = value;
}

// -------------------------------------------------------------------

// E_ShenequipPreview

// optional int32 m_id = 1;
inline bool E_ShenequipPreview::has_m_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_ShenequipPreview::set_has_m_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_ShenequipPreview::clear_has_m_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_ShenequipPreview::clear_m_id() {
  m_id_ = 0;
  clear_has_m_id();
}
inline ::google::protobuf::int32 E_ShenequipPreview::m_id() const {
  return m_id_;
}
inline void E_ShenequipPreview::set_m_id(::google::protobuf::int32 value) {
  set_has_m_id();
  m_id_ = value;
}

// optional int32 m_condition = 2;
inline bool E_ShenequipPreview::has_m_condition() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_ShenequipPreview::set_has_m_condition() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_ShenequipPreview::clear_has_m_condition() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_ShenequipPreview::clear_m_condition() {
  m_condition_ = 0;
  clear_has_m_condition();
}
inline ::google::protobuf::int32 E_ShenequipPreview::m_condition() const {
  return m_condition_;
}
inline void E_ShenequipPreview::set_m_condition(::google::protobuf::int32 value) {
  set_has_m_condition();
  m_condition_ = value;
}

// optional int32 m_value = 3;
inline bool E_ShenequipPreview::has_m_value() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void E_ShenequipPreview::set_has_m_value() {
  _has_bits_[0] |= 0x00000004u;
}
inline void E_ShenequipPreview::clear_has_m_value() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void E_ShenequipPreview::clear_m_value() {
  m_value_ = 0;
  clear_has_m_value();
}
inline ::google::protobuf::int32 E_ShenequipPreview::m_value() const {
  return m_value_;
}
inline void E_ShenequipPreview::set_m_value(::google::protobuf::int32 value) {
  set_has_m_value();
  m_value_ = value;
}

// repeated .proto_ff.E_ShenequipPreviewRewardDesc m_reward = 4;
inline int E_ShenequipPreview::m_reward_size() const {
  return m_reward_.size();
}
inline void E_ShenequipPreview::clear_m_reward() {
  m_reward_.Clear();
}
inline const ::proto_ff::E_ShenequipPreviewRewardDesc& E_ShenequipPreview::m_reward(int index) const {
  return m_reward_.Get(index);
}
inline ::proto_ff::E_ShenequipPreviewRewardDesc* E_ShenequipPreview::mutable_m_reward(int index) {
  return m_reward_.Mutable(index);
}
inline ::proto_ff::E_ShenequipPreviewRewardDesc* E_ShenequipPreview::add_m_reward() {
  return m_reward_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_ShenequipPreviewRewardDesc >&
E_ShenequipPreview::m_reward() const {
  return m_reward_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_ShenequipPreviewRewardDesc >*
E_ShenequipPreview::mutable_m_reward() {
  return &m_reward_;
}

// -------------------------------------------------------------------

// Sheet_ShenequipPreview

// repeated .proto_ff.E_ShenequipPreview E_ShenequipPreview_List = 1;
inline int Sheet_ShenequipPreview::e_shenequippreview_list_size() const {
  return e_shenequippreview_list_.size();
}
inline void Sheet_ShenequipPreview::clear_e_shenequippreview_list() {
  e_shenequippreview_list_.Clear();
}
inline const ::proto_ff::E_ShenequipPreview& Sheet_ShenequipPreview::e_shenequippreview_list(int index) const {
  return e_shenequippreview_list_.Get(index);
}
inline ::proto_ff::E_ShenequipPreview* Sheet_ShenequipPreview::mutable_e_shenequippreview_list(int index) {
  return e_shenequippreview_list_.Mutable(index);
}
inline ::proto_ff::E_ShenequipPreview* Sheet_ShenequipPreview::add_e_shenequippreview_list() {
  return e_shenequippreview_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_ShenequipPreview >&
Sheet_ShenequipPreview::e_shenequippreview_list() const {
  return e_shenequippreview_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_ShenequipPreview >*
Sheet_ShenequipPreview::mutable_e_shenequippreview_list() {
  return &e_shenequippreview_list_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto_ff

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_E_5fShenequip_2eproto__INCLUDED
