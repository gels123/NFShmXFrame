// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: getTreasure.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "getTreasure.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace proto_ff {

namespace {

const ::google::protobuf::Descriptor* getTreasurerareItem_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  getTreasurerareItem_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_getTreasurerareItem_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_getTreasurerareItem_reflection_ = NULL;
const ::google::protobuf::Descriptor* getTreasuretimesControlgroupDesc_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  getTreasuretimesControlgroupDesc_reflection_ = NULL;
const ::google::protobuf::Descriptor* getTreasuretimesControl_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  getTreasuretimesControl_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_getTreasuretimesControl_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_getTreasuretimesControl_reflection_ = NULL;
const ::google::protobuf::Descriptor* getTreasureArrivalBossReward_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  getTreasureArrivalBossReward_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_getTreasureArrivalBossReward_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_getTreasureArrivalBossReward_reflection_ = NULL;
const ::google::protobuf::Descriptor* getTreasureArrivalBossControl_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  getTreasureArrivalBossControl_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_getTreasureArrivalBossControl_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_getTreasureArrivalBossControl_reflection_ = NULL;
const ::google::protobuf::Descriptor* getTreasurevipBossControl_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  getTreasurevipBossControl_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_getTreasurevipBossControl_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_getTreasurevipBossControl_reflection_ = NULL;
const ::google::protobuf::Descriptor* getTreasureboss_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  getTreasureboss_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_getTreasureboss_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_getTreasureboss_reflection_ = NULL;
const ::google::protobuf::Descriptor* getTreasurehelp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  getTreasurehelp_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_getTreasurehelp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_getTreasurehelp_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_getTreasure_2eproto() {
  protobuf_AddDesc_getTreasure_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "getTreasure.proto");
  GOOGLE_CHECK(file != NULL);
  getTreasurerareItem_descriptor_ = file->message_type(0);
  static const int getTreasurerareItem_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(getTreasurerareItem, itemid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(getTreasurerareItem, top_),
  };
  getTreasurerareItem_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      getTreasurerareItem_descriptor_,
      getTreasurerareItem::default_instance_,
      getTreasurerareItem_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(getTreasurerareItem, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(getTreasurerareItem, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(getTreasurerareItem));
  Sheet_getTreasurerareItem_descriptor_ = file->message_type(1);
  static const int Sheet_getTreasurerareItem_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_getTreasurerareItem, gettreasurerareitem_list_),
  };
  Sheet_getTreasurerareItem_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_getTreasurerareItem_descriptor_,
      Sheet_getTreasurerareItem::default_instance_,
      Sheet_getTreasurerareItem_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_getTreasurerareItem, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_getTreasurerareItem, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_getTreasurerareItem));
  getTreasuretimesControlgroupDesc_descriptor_ = file->message_type(2);
  static const int getTreasuretimesControlgroupDesc_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(getTreasuretimesControlgroupDesc, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(getTreasuretimesControlgroupDesc, times_),
  };
  getTreasuretimesControlgroupDesc_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      getTreasuretimesControlgroupDesc_descriptor_,
      getTreasuretimesControlgroupDesc::default_instance_,
      getTreasuretimesControlgroupDesc_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(getTreasuretimesControlgroupDesc, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(getTreasuretimesControlgroupDesc, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(getTreasuretimesControlgroupDesc));
  getTreasuretimesControl_descriptor_ = file->message_type(3);
  static const int getTreasuretimesControl_offsets_[16] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(getTreasuretimesControl, bosstype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(getTreasuretimesControl, maptype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(getTreasuretimesControl, functionid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(getTreasuretimesControl, duplicategroupid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(getTreasuretimesControl, viptype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(getTreasuretimesControl, bossflashitem_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(getTreasuretimesControl, bossflashitemnum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(getTreasuretimesControl, callingcardid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(getTreasuretimesControl, callingcardnum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(getTreasuretimesControl, times_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(getTreasuretimesControl, costitem1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(getTreasuretimesControl, costnum1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(getTreasuretimesControl, canbuyflag_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(getTreasuretimesControl, canhelp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(getTreasuretimesControl, skill_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(getTreasuretimesControl, group_),
  };
  getTreasuretimesControl_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      getTreasuretimesControl_descriptor_,
      getTreasuretimesControl::default_instance_,
      getTreasuretimesControl_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(getTreasuretimesControl, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(getTreasuretimesControl, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(getTreasuretimesControl));
  Sheet_getTreasuretimesControl_descriptor_ = file->message_type(4);
  static const int Sheet_getTreasuretimesControl_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_getTreasuretimesControl, gettreasuretimescontrol_list_),
  };
  Sheet_getTreasuretimesControl_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_getTreasuretimesControl_descriptor_,
      Sheet_getTreasuretimesControl::default_instance_,
      Sheet_getTreasuretimesControl_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_getTreasuretimesControl, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_getTreasuretimesControl, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_getTreasuretimesControl));
  getTreasureArrivalBossReward_descriptor_ = file->message_type(5);
  static const int getTreasureArrivalBossReward_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(getTreasureArrivalBossReward, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(getTreasureArrivalBossReward, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(getTreasureArrivalBossReward, typeparam_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(getTreasureArrivalBossReward, boxid_),
  };
  getTreasureArrivalBossReward_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      getTreasureArrivalBossReward_descriptor_,
      getTreasureArrivalBossReward::default_instance_,
      getTreasureArrivalBossReward_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(getTreasureArrivalBossReward, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(getTreasureArrivalBossReward, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(getTreasureArrivalBossReward));
  Sheet_getTreasureArrivalBossReward_descriptor_ = file->message_type(6);
  static const int Sheet_getTreasureArrivalBossReward_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_getTreasureArrivalBossReward, gettreasurearrivalbossreward_list_),
  };
  Sheet_getTreasureArrivalBossReward_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_getTreasureArrivalBossReward_descriptor_,
      Sheet_getTreasureArrivalBossReward::default_instance_,
      Sheet_getTreasureArrivalBossReward_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_getTreasureArrivalBossReward, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_getTreasureArrivalBossReward, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_getTreasureArrivalBossReward));
  getTreasureArrivalBossControl_descriptor_ = file->message_type(7);
  static const int getTreasureArrivalBossControl_offsets_[11] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(getTreasureArrivalBossControl, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(getTreasureArrivalBossControl, arrival_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(getTreasureArrivalBossControl, costid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(getTreasureArrivalBossControl, rewardid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(getTreasureArrivalBossControl, rewardnum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(getTreasureArrivalBossControl, timesmax_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(getTreasureArrivalBossControl, recovery_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(getTreasureArrivalBossControl, duplicategroup_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(getTreasureArrivalBossControl, bossid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(getTreasureArrivalBossControl, pathid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(getTreasureArrivalBossControl, radio_),
  };
  getTreasureArrivalBossControl_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      getTreasureArrivalBossControl_descriptor_,
      getTreasureArrivalBossControl::default_instance_,
      getTreasureArrivalBossControl_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(getTreasureArrivalBossControl, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(getTreasureArrivalBossControl, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(getTreasureArrivalBossControl));
  Sheet_getTreasureArrivalBossControl_descriptor_ = file->message_type(8);
  static const int Sheet_getTreasureArrivalBossControl_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_getTreasureArrivalBossControl, gettreasurearrivalbosscontrol_list_),
  };
  Sheet_getTreasureArrivalBossControl_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_getTreasureArrivalBossControl_descriptor_,
      Sheet_getTreasureArrivalBossControl::default_instance_,
      Sheet_getTreasureArrivalBossControl_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_getTreasureArrivalBossControl, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_getTreasureArrivalBossControl, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_getTreasureArrivalBossControl));
  getTreasurevipBossControl_descriptor_ = file->message_type(9);
  static const int getTreasurevipBossControl_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(getTreasurevipBossControl, floor_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(getTreasurevipBossControl, minviplvneed_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(getTreasurevipBossControl, viplvneed_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(getTreasurevipBossControl, costnum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(getTreasurevipBossControl, costid_),
  };
  getTreasurevipBossControl_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      getTreasurevipBossControl_descriptor_,
      getTreasurevipBossControl::default_instance_,
      getTreasurevipBossControl_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(getTreasurevipBossControl, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(getTreasurevipBossControl, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(getTreasurevipBossControl));
  Sheet_getTreasurevipBossControl_descriptor_ = file->message_type(10);
  static const int Sheet_getTreasurevipBossControl_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_getTreasurevipBossControl, gettreasurevipbosscontrol_list_),
  };
  Sheet_getTreasurevipBossControl_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_getTreasurevipBossControl_descriptor_,
      Sheet_getTreasurevipBossControl::default_instance_,
      Sheet_getTreasurevipBossControl_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_getTreasurevipBossControl, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_getTreasurevipBossControl, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_getTreasurevipBossControl));
  getTreasureboss_descriptor_ = file->message_type(11);
  static const int getTreasureboss_offsets_[9] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(getTreasureboss, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(getTreasureboss, bosstype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(getTreasureboss, monsterid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(getTreasureboss, classorder_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(getTreasureboss, sceneorder_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(getTreasureboss, duplicateid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(getTreasureboss, pathid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(getTreasureboss, group_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(getTreasureboss, flashtime_),
  };
  getTreasureboss_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      getTreasureboss_descriptor_,
      getTreasureboss::default_instance_,
      getTreasureboss_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(getTreasureboss, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(getTreasureboss, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(getTreasureboss));
  Sheet_getTreasureboss_descriptor_ = file->message_type(12);
  static const int Sheet_getTreasureboss_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_getTreasureboss, gettreasureboss_list_),
  };
  Sheet_getTreasureboss_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_getTreasureboss_descriptor_,
      Sheet_getTreasureboss::default_instance_,
      Sheet_getTreasureboss_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_getTreasureboss, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_getTreasureboss, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_getTreasureboss));
  getTreasurehelp_descriptor_ = file->message_type(13);
  static const int getTreasurehelp_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(getTreasurehelp, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(getTreasurehelp, down_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(getTreasurehelp, up_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(getTreasurehelp, num_),
  };
  getTreasurehelp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      getTreasurehelp_descriptor_,
      getTreasurehelp::default_instance_,
      getTreasurehelp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(getTreasurehelp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(getTreasurehelp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(getTreasurehelp));
  Sheet_getTreasurehelp_descriptor_ = file->message_type(14);
  static const int Sheet_getTreasurehelp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_getTreasurehelp, gettreasurehelp_list_),
  };
  Sheet_getTreasurehelp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_getTreasurehelp_descriptor_,
      Sheet_getTreasurehelp::default_instance_,
      Sheet_getTreasurehelp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_getTreasurehelp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_getTreasurehelp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_getTreasurehelp));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_getTreasure_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    getTreasurerareItem_descriptor_, &getTreasurerareItem::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_getTreasurerareItem_descriptor_, &Sheet_getTreasurerareItem::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    getTreasuretimesControlgroupDesc_descriptor_, &getTreasuretimesControlgroupDesc::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    getTreasuretimesControl_descriptor_, &getTreasuretimesControl::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_getTreasuretimesControl_descriptor_, &Sheet_getTreasuretimesControl::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    getTreasureArrivalBossReward_descriptor_, &getTreasureArrivalBossReward::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_getTreasureArrivalBossReward_descriptor_, &Sheet_getTreasureArrivalBossReward::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    getTreasureArrivalBossControl_descriptor_, &getTreasureArrivalBossControl::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_getTreasureArrivalBossControl_descriptor_, &Sheet_getTreasureArrivalBossControl::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    getTreasurevipBossControl_descriptor_, &getTreasurevipBossControl::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_getTreasurevipBossControl_descriptor_, &Sheet_getTreasurevipBossControl::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    getTreasureboss_descriptor_, &getTreasureboss::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_getTreasureboss_descriptor_, &Sheet_getTreasureboss::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    getTreasurehelp_descriptor_, &getTreasurehelp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_getTreasurehelp_descriptor_, &Sheet_getTreasurehelp::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_getTreasure_2eproto() {
  delete getTreasurerareItem::default_instance_;
  delete getTreasurerareItem_reflection_;
  delete Sheet_getTreasurerareItem::default_instance_;
  delete Sheet_getTreasurerareItem_reflection_;
  delete getTreasuretimesControlgroupDesc::default_instance_;
  delete getTreasuretimesControlgroupDesc_reflection_;
  delete getTreasuretimesControl::default_instance_;
  delete getTreasuretimesControl_reflection_;
  delete Sheet_getTreasuretimesControl::default_instance_;
  delete Sheet_getTreasuretimesControl_reflection_;
  delete getTreasureArrivalBossReward::default_instance_;
  delete getTreasureArrivalBossReward_reflection_;
  delete Sheet_getTreasureArrivalBossReward::default_instance_;
  delete Sheet_getTreasureArrivalBossReward_reflection_;
  delete getTreasureArrivalBossControl::default_instance_;
  delete getTreasureArrivalBossControl_reflection_;
  delete Sheet_getTreasureArrivalBossControl::default_instance_;
  delete Sheet_getTreasureArrivalBossControl_reflection_;
  delete getTreasurevipBossControl::default_instance_;
  delete getTreasurevipBossControl_reflection_;
  delete Sheet_getTreasurevipBossControl::default_instance_;
  delete Sheet_getTreasurevipBossControl_reflection_;
  delete getTreasureboss::default_instance_;
  delete getTreasureboss_reflection_;
  delete Sheet_getTreasureboss::default_instance_;
  delete Sheet_getTreasureboss_reflection_;
  delete getTreasurehelp::default_instance_;
  delete getTreasurehelp_reflection_;
  delete Sheet_getTreasurehelp::default_instance_;
  delete Sheet_getTreasurehelp_reflection_;
}

void protobuf_AddDesc_getTreasure_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::yd_fieldoptions::protobuf_AddDesc_yd_5ffieldoptions_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\021getTreasure.proto\022\010proto_ff\032\025yd_fieldo"
    "ptions.proto\"R\n\023getTreasurerareItem\022\034\n\006i"
    "temID\030\001 \001(\003B\014\302\377\024\010\347\211\251\345\223\201ID\022\035\n\003top\030\002 \001(\005B\020"
    "\302\377\024\014\346\230\257\345\220\246\347\275\256\351\241\266\"c\n\031Sheet_getTreasurerar"
    "eItem\022F\n\030getTreasurerareItem_List\030\001 \003(\0132"
    "\035.proto_ff.getTreasurerareItemB\005\210\301\024\220\003\"W\n"
    " getTreasuretimesControlgroupDesc\022\030\n\004typ"
    "e\030\001 \001(\005B\n\302\377\024\006\347\261\273\345\236\213\022\031\n\005times\030\002 \001(\005B\n\302\377\024\006"
    "\346\254\241\346\225\260\"\300\005\n\027getTreasuretimesControl\022\037\n\010bo"
    "ssType\030\001 \001(\005B\r\302\377\024\t\346\200\273\347\261\273\345\236\213\022!\n\007mapType\030\002"
    " \001(\005B\020\302\377\024\014\345\234\260\345\233\276\347\261\273\345\236\213\022&\n\nfunctionId\030\003 \001"
    "(\005B\022\302\377\024\016\345\212\237\350\203\275\350\247\243\351\224\201ID\022)\n\020duplicateGroup"
    "ID\030\004 \001(\005B\017\302\377\024\013\345\211\257\346\234\254\347\273\204ID\022\036\n\007viptype\030\005 \001"
    "(\005B\r\302\377\024\tVIP\347\261\273\345\236\213\022+\n\rbossFlashItem\030\006 \001(\003"
    "B\024\302\377\024\020BOSS\345\210\267\346\226\260\351\201\223\345\205\267\0227\n\020bossFlashItemN"
    "um\030\007 \001(\005B\035\302\377\024\031\345\210\267BOSS\351\201\223\345\205\267\346\266\210\350\200\227\346\225\260\351\207\217\022"
    "&\n\rcallingCardId\030\010 \001(\003B\017\302\377\024\013\345\217\254\345\224\244\345\215\241id\022"
    "+\n\016callingCardNum\030\t \001(\005B\023\302\377\024\017\345\217\254\345\224\244\345\215\241\346\225"
    "\260\351\207\217\022\035\n\005times\030\n \001(\005B\016\302\377\024\nboss\346\254\241\346\225\260\022\'\n\tc"
    "ostitem1\030\013 \001(\003B\024\302\377\024\020BOSS\346\266\210\350\200\227\347\211\251\345\223\201\022&\n\010"
    "costnum1\030\014 \001(\005B\024\302\377\024\020boss\346\266\210\350\200\227\346\225\260\351\207\217\022\'\n\n"
    "canBuyFlag\030\r \001(\005B\023\302\377\024\017\346\230\257\345\220\246\345\217\257\350\264\255\344\271\260\022\'\n"
    "\007canhelp\030\016 \001(\005B\026\302\377\024\022\346\230\257\345\220\246\345\217\257\344\273\245\346\217\264\345\212\251\022%"
    "\n\005skill\030\017 \001(\005B\026\302\377\024\022\347\272\263\345\205\245\345\205\250\346\234\215\351\246\226\346\235\200\022J\n"
    "\005group\030\020 \003(\0132*.proto_ff.getTreasuretimes"
    "ControlgroupDescB\017\302\377\024\007Boss\347\273\204\210\301\024\003\"n\n\035She"
    "et_getTreasuretimesControl\022M\n\034getTreasur"
    "etimesControl_List\030\001 \003(\0132!.proto_ff.getT"
    "reasuretimesControlB\004\210\301\024\024\"\222\001\n\034getTreasur"
    "eArrivalBossReward\022\022\n\002id\030\001 \001(\005B\006\302\377\024\002ID\022\036"
    "\n\004type\030\002 \001(\005B\020\302\377\024\014\345\245\226\345\212\261\347\261\273\345\236\213\022#\n\ttypePa"
    "ram\030\003 \001(\005B\020\302\377\024\014\345\245\226\345\212\261\345\217\202\346\225\260\022\031\n\005boxID\030\004 \001"
    "(\003B\n\302\377\024\006\345\245\226\345\212\261\"}\n\"Sheet_getTreasureArriv"
    "alBossReward\022W\n!getTreasureArrivalBossRe"
    "ward_List\030\001 \003(\0132&.proto_ff.getTreasureAr"
    "rivalBossRewardB\004\210\301\024\024\"\274\003\n\035getTreasureArr"
    "ivalBossControl\022\022\n\002id\030\001 \001(\005B\006\302\377\024\002id\022$\n\007A"
    "rrival\030\002 \001(\005B\023\302\377\024\017\351\231\215\344\270\264\345\200\274\344\270\212\351\231\220\022\"\n\006cos"
    "tid\030\003 \001(\003B\022\302\377\024\016\345\205\221\346\215\242\347\211\251\347\232\204id\022$\n\010rewardI"
    "D\030\004 \001(\003B\022\302\377\024\016\345\245\226\345\212\261\347\211\251\345\223\201ID\022)\n\trewardNum"
    "\030\005 \001(\005B\026\302\377\024\022\345\245\226\345\212\261\347\211\251\345\223\201\346\225\260\351\207\217\022.\n\010timesM"
    "ax\030\006 \001(\005B\034\302\377\024\030\346\234\200\351\253\230\347\264\257\350\256\241\351\231\215\344\270\264\346\254\241\346\225\260\022\'"
    "\n\010recovery\030\007 \001(\005B\025\302\377\024\021\346\201\242\345\244\215\346\227\266\351\227\264(\345\210\206)\022"
    "\'\n\016duplicateGroup\030\010 \001(\003B\017\302\377\024\013\345\211\257\346\234\254\347\273\204ID"
    "\022\032\n\006bossid\030\t \001(\003B\n\302\377\024\006bossid\022\035\n\006pathID\030\n"
    " \001(\003B\r\302\377\024\t\344\275\215\347\275\256\347\202\271\022/\n\005radio\030\013 \001(\tB \302\377\024\030"
    "\345\271\277\346\222\255\351\200\232\347\237\245\350\241\200\351\207\217\345\217\202\346\225\260\220\301\024<\"\200\001\n#Sheet_g"
    "etTreasureArrivalBossControl\022Y\n\"getTreas"
    "ureArrivalBossControl_List\030\001 \003(\0132\'.proto"
    "_ff.getTreasureArrivalBossControlB\004\210\301\024\024\""
    "\334\001\n\031getTreasurevipBossControl\022\031\n\005floor\030\001"
    " \001(\005B\n\302\377\024\006\345\261\202\346\225\260\022/\n\014minVipLvNeed\030\002 \001(\005B\031"
    "\302\377\024\025\346\234\200\344\275\216VIP\347\255\211\347\272\247\350\246\201\346\261\202\022&\n\tVipLvNeed\030\003"
    " \001(\005B\023\302\377\024\017VIP\347\255\211\347\272\247\350\246\201\346\261\202\022\'\n\007costnum\030\004 \001"
    "(\005B\026\302\377\024\022\344\273\243\346\233\277\345\205\245\345\234\272\346\266\210\350\264\271\022\"\n\006costid\030\005 \001"
    "(\003B\022\302\377\024\016\346\266\210\350\200\227\347\211\251\345\223\201ID\"t\n\037Sheet_getTreas"
    "urevipBossControl\022Q\n\036getTreasurevipBossC"
    "ontrol_List\030\001 \003(\0132#.proto_ff.getTreasure"
    "vipBossControlB\004\210\301\024\024\"\274\002\n\017getTreasureboss"
    "\022\026\n\002id\030\001 \001(\003B\n\302\377\024\006bossID\022 \n\010bossType\030\002 \001"
    "(\005B\016\302\377\024\nBOSS\347\261\273\345\236\213\022\037\n\tmonsterID\030\003 \001(\003B\014\302"
    "\377\024\010\346\200\252\347\211\251ID\022\036\n\nclassOrder\030\004 \001(\005B\n\302\377\024\006\351\230\266"
    "\346\254\241\022$\n\nsceneOrder\030\005 \001(\005B\020\302\377\024\014\346\211\200\345\261\236\345\261\202\347\272"
    "\247\022!\n\013duplicateID\030\006 \001(\003B\014\302\377\024\010\345\211\257\346\234\254ID\022\035\n\006"
    "pathID\030\007 \001(\003B\r\302\377\024\t\344\275\215\347\275\256\347\202\271\022!\n\ngroup_typ"
    "e\030\010 \001(\005B\r\302\377\024\t\347\273\204\347\261\273\345\236\213\022#\n\tflashTime\030\t \001("
    "\005B\020\302\377\024\014\345\210\267\346\226\260\351\227\264\351\232\224\"W\n\025Sheet_getTreasure"
    "boss\022>\n\024getTreasureboss_List\030\001 \003(\0132\031.pro"
    "to_ff.getTreasurebossB\005\210\301\024\240\006\"\250\001\n\017getTrea"
    "surehelp\022\034\n\002id\030\001 \001(\005B\020\302\377\024\014\350\216\267\345\245\226\347\255\211\347\272\247\022*"
    "\n\004down\030\002 \001(\005B\034\302\377\024\030\344\274\244\350\241\200\344\270\213\351\231\220\357\274\210\347\255\211\344\272\216\357"
    "\274\211\022(\n\002up\030\003 \001(\005B\034\302\377\024\030\344\274\244\350\241\200\344\270\212\351\231\220\357\274\210\347\255\211\344\272"
    "\216\357\274\211\022!\n\003num\030\004 \003(\003B\024\302\377\024\014\345\245\226\345\212\261\345\206\205\345\256\271\210\301\024\006\""
    "V\n\025Sheet_getTreasurehelp\022=\n\024getTreasureh"
    "elp_List\030\001 \003(\0132\031.proto_ff.getTreasurehel"
    "pB\004\210\301\024\024", 3007);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "getTreasure.proto", &protobuf_RegisterTypes);
  getTreasurerareItem::default_instance_ = new getTreasurerareItem();
  Sheet_getTreasurerareItem::default_instance_ = new Sheet_getTreasurerareItem();
  getTreasuretimesControlgroupDesc::default_instance_ = new getTreasuretimesControlgroupDesc();
  getTreasuretimesControl::default_instance_ = new getTreasuretimesControl();
  Sheet_getTreasuretimesControl::default_instance_ = new Sheet_getTreasuretimesControl();
  getTreasureArrivalBossReward::default_instance_ = new getTreasureArrivalBossReward();
  Sheet_getTreasureArrivalBossReward::default_instance_ = new Sheet_getTreasureArrivalBossReward();
  getTreasureArrivalBossControl::default_instance_ = new getTreasureArrivalBossControl();
  Sheet_getTreasureArrivalBossControl::default_instance_ = new Sheet_getTreasureArrivalBossControl();
  getTreasurevipBossControl::default_instance_ = new getTreasurevipBossControl();
  Sheet_getTreasurevipBossControl::default_instance_ = new Sheet_getTreasurevipBossControl();
  getTreasureboss::default_instance_ = new getTreasureboss();
  Sheet_getTreasureboss::default_instance_ = new Sheet_getTreasureboss();
  getTreasurehelp::default_instance_ = new getTreasurehelp();
  Sheet_getTreasurehelp::default_instance_ = new Sheet_getTreasurehelp();
  getTreasurerareItem::default_instance_->InitAsDefaultInstance();
  Sheet_getTreasurerareItem::default_instance_->InitAsDefaultInstance();
  getTreasuretimesControlgroupDesc::default_instance_->InitAsDefaultInstance();
  getTreasuretimesControl::default_instance_->InitAsDefaultInstance();
  Sheet_getTreasuretimesControl::default_instance_->InitAsDefaultInstance();
  getTreasureArrivalBossReward::default_instance_->InitAsDefaultInstance();
  Sheet_getTreasureArrivalBossReward::default_instance_->InitAsDefaultInstance();
  getTreasureArrivalBossControl::default_instance_->InitAsDefaultInstance();
  Sheet_getTreasureArrivalBossControl::default_instance_->InitAsDefaultInstance();
  getTreasurevipBossControl::default_instance_->InitAsDefaultInstance();
  Sheet_getTreasurevipBossControl::default_instance_->InitAsDefaultInstance();
  getTreasureboss::default_instance_->InitAsDefaultInstance();
  Sheet_getTreasureboss::default_instance_->InitAsDefaultInstance();
  getTreasurehelp::default_instance_->InitAsDefaultInstance();
  Sheet_getTreasurehelp::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_getTreasure_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_getTreasure_2eproto {
  StaticDescriptorInitializer_getTreasure_2eproto() {
    protobuf_AddDesc_getTreasure_2eproto();
  }
} static_descriptor_initializer_getTreasure_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int getTreasurerareItem::kItemIDFieldNumber;
const int getTreasurerareItem::kTopFieldNumber;
#endif  // !_MSC_VER

getTreasurerareItem::getTreasurerareItem()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void getTreasurerareItem::InitAsDefaultInstance() {
}

getTreasurerareItem::getTreasurerareItem(const getTreasurerareItem& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void getTreasurerareItem::SharedCtor() {
  _cached_size_ = 0;
  itemid_ = GOOGLE_LONGLONG(0);
  top_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

getTreasurerareItem::~getTreasurerareItem() {
  SharedDtor();
}

void getTreasurerareItem::SharedDtor() {
  if (this != default_instance_) {
  }
}

void getTreasurerareItem::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* getTreasurerareItem::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return getTreasurerareItem_descriptor_;
}

const getTreasurerareItem& getTreasurerareItem::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_getTreasure_2eproto();
  return *default_instance_;
}

getTreasurerareItem* getTreasurerareItem::default_instance_ = NULL;

getTreasurerareItem* getTreasurerareItem::New() const {
  return new getTreasurerareItem;
}

void getTreasurerareItem::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    itemid_ = GOOGLE_LONGLONG(0);
    top_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool getTreasurerareItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 itemID = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &itemid_)));
          set_has_itemid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_top;
        break;
      }

      // optional int32 top = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_top:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &top_)));
          set_has_top();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void getTreasurerareItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 itemID = 1;
  if (has_itemid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->itemid(), output);
  }

  // optional int32 top = 2;
  if (has_top()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->top(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* getTreasurerareItem::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 itemID = 1;
  if (has_itemid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->itemid(), target);
  }

  // optional int32 top = 2;
  if (has_top()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->top(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int getTreasurerareItem::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 itemID = 1;
    if (has_itemid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->itemid());
    }

    // optional int32 top = 2;
    if (has_top()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->top());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void getTreasurerareItem::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const getTreasurerareItem* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const getTreasurerareItem*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void getTreasurerareItem::MergeFrom(const getTreasurerareItem& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_itemid()) {
      set_itemid(from.itemid());
    }
    if (from.has_top()) {
      set_top(from.top());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void getTreasurerareItem::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void getTreasurerareItem::CopyFrom(const getTreasurerareItem& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool getTreasurerareItem::IsInitialized() const {

  return true;
}

void getTreasurerareItem::Swap(getTreasurerareItem* other) {
  if (other != this) {
    std::swap(itemid_, other->itemid_);
    std::swap(top_, other->top_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata getTreasurerareItem::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = getTreasurerareItem_descriptor_;
  metadata.reflection = getTreasurerareItem_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_getTreasurerareItem::kGetTreasurerareItemListFieldNumber;
#endif  // !_MSC_VER

Sheet_getTreasurerareItem::Sheet_getTreasurerareItem()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_getTreasurerareItem::InitAsDefaultInstance() {
}

Sheet_getTreasurerareItem::Sheet_getTreasurerareItem(const Sheet_getTreasurerareItem& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_getTreasurerareItem::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_getTreasurerareItem::~Sheet_getTreasurerareItem() {
  SharedDtor();
}

void Sheet_getTreasurerareItem::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_getTreasurerareItem::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_getTreasurerareItem::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_getTreasurerareItem_descriptor_;
}

const Sheet_getTreasurerareItem& Sheet_getTreasurerareItem::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_getTreasure_2eproto();
  return *default_instance_;
}

Sheet_getTreasurerareItem* Sheet_getTreasurerareItem::default_instance_ = NULL;

Sheet_getTreasurerareItem* Sheet_getTreasurerareItem::New() const {
  return new Sheet_getTreasurerareItem;
}

void Sheet_getTreasurerareItem::Clear() {
  gettreasurerareitem_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_getTreasurerareItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.getTreasurerareItem getTreasurerareItem_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_getTreasurerareItem_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_gettreasurerareitem_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_getTreasurerareItem_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_getTreasurerareItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.getTreasurerareItem getTreasurerareItem_List = 1;
  for (int i = 0; i < this->gettreasurerareitem_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->gettreasurerareitem_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_getTreasurerareItem::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.getTreasurerareItem getTreasurerareItem_List = 1;
  for (int i = 0; i < this->gettreasurerareitem_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->gettreasurerareitem_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_getTreasurerareItem::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.getTreasurerareItem getTreasurerareItem_List = 1;
  total_size += 1 * this->gettreasurerareitem_list_size();
  for (int i = 0; i < this->gettreasurerareitem_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->gettreasurerareitem_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_getTreasurerareItem::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_getTreasurerareItem* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_getTreasurerareItem*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_getTreasurerareItem::MergeFrom(const Sheet_getTreasurerareItem& from) {
  GOOGLE_CHECK_NE(&from, this);
  gettreasurerareitem_list_.MergeFrom(from.gettreasurerareitem_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_getTreasurerareItem::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_getTreasurerareItem::CopyFrom(const Sheet_getTreasurerareItem& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_getTreasurerareItem::IsInitialized() const {

  return true;
}

void Sheet_getTreasurerareItem::Swap(Sheet_getTreasurerareItem* other) {
  if (other != this) {
    gettreasurerareitem_list_.Swap(&other->gettreasurerareitem_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_getTreasurerareItem::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_getTreasurerareItem_descriptor_;
  metadata.reflection = Sheet_getTreasurerareItem_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int getTreasuretimesControlgroupDesc::kTypeFieldNumber;
const int getTreasuretimesControlgroupDesc::kTimesFieldNumber;
#endif  // !_MSC_VER

getTreasuretimesControlgroupDesc::getTreasuretimesControlgroupDesc()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void getTreasuretimesControlgroupDesc::InitAsDefaultInstance() {
}

getTreasuretimesControlgroupDesc::getTreasuretimesControlgroupDesc(const getTreasuretimesControlgroupDesc& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void getTreasuretimesControlgroupDesc::SharedCtor() {
  _cached_size_ = 0;
  type_ = 0;
  times_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

getTreasuretimesControlgroupDesc::~getTreasuretimesControlgroupDesc() {
  SharedDtor();
}

void getTreasuretimesControlgroupDesc::SharedDtor() {
  if (this != default_instance_) {
  }
}

void getTreasuretimesControlgroupDesc::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* getTreasuretimesControlgroupDesc::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return getTreasuretimesControlgroupDesc_descriptor_;
}

const getTreasuretimesControlgroupDesc& getTreasuretimesControlgroupDesc::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_getTreasure_2eproto();
  return *default_instance_;
}

getTreasuretimesControlgroupDesc* getTreasuretimesControlgroupDesc::default_instance_ = NULL;

getTreasuretimesControlgroupDesc* getTreasuretimesControlgroupDesc::New() const {
  return new getTreasuretimesControlgroupDesc;
}

void getTreasuretimesControlgroupDesc::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    type_ = 0;
    times_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool getTreasuretimesControlgroupDesc::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_times;
        break;
      }

      // optional int32 times = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_times:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &times_)));
          set_has_times();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void getTreasuretimesControlgroupDesc::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 type = 1;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->type(), output);
  }

  // optional int32 times = 2;
  if (has_times()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->times(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* getTreasuretimesControlgroupDesc::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 type = 1;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->type(), target);
  }

  // optional int32 times = 2;
  if (has_times()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->times(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int getTreasuretimesControlgroupDesc::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 type = 1;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type());
    }

    // optional int32 times = 2;
    if (has_times()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->times());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void getTreasuretimesControlgroupDesc::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const getTreasuretimesControlgroupDesc* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const getTreasuretimesControlgroupDesc*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void getTreasuretimesControlgroupDesc::MergeFrom(const getTreasuretimesControlgroupDesc& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_times()) {
      set_times(from.times());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void getTreasuretimesControlgroupDesc::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void getTreasuretimesControlgroupDesc::CopyFrom(const getTreasuretimesControlgroupDesc& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool getTreasuretimesControlgroupDesc::IsInitialized() const {

  return true;
}

void getTreasuretimesControlgroupDesc::Swap(getTreasuretimesControlgroupDesc* other) {
  if (other != this) {
    std::swap(type_, other->type_);
    std::swap(times_, other->times_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata getTreasuretimesControlgroupDesc::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = getTreasuretimesControlgroupDesc_descriptor_;
  metadata.reflection = getTreasuretimesControlgroupDesc_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int getTreasuretimesControl::kBossTypeFieldNumber;
const int getTreasuretimesControl::kMapTypeFieldNumber;
const int getTreasuretimesControl::kFunctionIdFieldNumber;
const int getTreasuretimesControl::kDuplicateGroupIDFieldNumber;
const int getTreasuretimesControl::kViptypeFieldNumber;
const int getTreasuretimesControl::kBossFlashItemFieldNumber;
const int getTreasuretimesControl::kBossFlashItemNumFieldNumber;
const int getTreasuretimesControl::kCallingCardIdFieldNumber;
const int getTreasuretimesControl::kCallingCardNumFieldNumber;
const int getTreasuretimesControl::kTimesFieldNumber;
const int getTreasuretimesControl::kCostitem1FieldNumber;
const int getTreasuretimesControl::kCostnum1FieldNumber;
const int getTreasuretimesControl::kCanBuyFlagFieldNumber;
const int getTreasuretimesControl::kCanhelpFieldNumber;
const int getTreasuretimesControl::kSkillFieldNumber;
const int getTreasuretimesControl::kGroupFieldNumber;
#endif  // !_MSC_VER

getTreasuretimesControl::getTreasuretimesControl()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void getTreasuretimesControl::InitAsDefaultInstance() {
}

getTreasuretimesControl::getTreasuretimesControl(const getTreasuretimesControl& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void getTreasuretimesControl::SharedCtor() {
  _cached_size_ = 0;
  bosstype_ = 0;
  maptype_ = 0;
  functionid_ = 0;
  duplicategroupid_ = 0;
  viptype_ = 0;
  bossflashitem_ = GOOGLE_LONGLONG(0);
  bossflashitemnum_ = 0;
  callingcardid_ = GOOGLE_LONGLONG(0);
  callingcardnum_ = 0;
  times_ = 0;
  costitem1_ = GOOGLE_LONGLONG(0);
  costnum1_ = 0;
  canbuyflag_ = 0;
  canhelp_ = 0;
  skill_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

getTreasuretimesControl::~getTreasuretimesControl() {
  SharedDtor();
}

void getTreasuretimesControl::SharedDtor() {
  if (this != default_instance_) {
  }
}

void getTreasuretimesControl::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* getTreasuretimesControl::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return getTreasuretimesControl_descriptor_;
}

const getTreasuretimesControl& getTreasuretimesControl::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_getTreasure_2eproto();
  return *default_instance_;
}

getTreasuretimesControl* getTreasuretimesControl::default_instance_ = NULL;

getTreasuretimesControl* getTreasuretimesControl::New() const {
  return new getTreasuretimesControl;
}

void getTreasuretimesControl::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    bosstype_ = 0;
    maptype_ = 0;
    functionid_ = 0;
    duplicategroupid_ = 0;
    viptype_ = 0;
    bossflashitem_ = GOOGLE_LONGLONG(0);
    bossflashitemnum_ = 0;
    callingcardid_ = GOOGLE_LONGLONG(0);
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    callingcardnum_ = 0;
    times_ = 0;
    costitem1_ = GOOGLE_LONGLONG(0);
    costnum1_ = 0;
    canbuyflag_ = 0;
    canhelp_ = 0;
    skill_ = 0;
  }
  group_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool getTreasuretimesControl::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 bossType = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &bosstype_)));
          set_has_bosstype();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_mapType;
        break;
      }

      // optional int32 mapType = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_mapType:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &maptype_)));
          set_has_maptype();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_functionId;
        break;
      }

      // optional int32 functionId = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_functionId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &functionid_)));
          set_has_functionid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_duplicateGroupID;
        break;
      }

      // optional int32 duplicateGroupID = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_duplicateGroupID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &duplicategroupid_)));
          set_has_duplicategroupid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_viptype;
        break;
      }

      // optional int32 viptype = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_viptype:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &viptype_)));
          set_has_viptype();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_bossFlashItem;
        break;
      }

      // optional int64 bossFlashItem = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_bossFlashItem:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &bossflashitem_)));
          set_has_bossflashitem();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_bossFlashItemNum;
        break;
      }

      // optional int32 bossFlashItemNum = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_bossFlashItemNum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &bossflashitemnum_)));
          set_has_bossflashitemnum();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(64)) goto parse_callingCardId;
        break;
      }

      // optional int64 callingCardId = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_callingCardId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &callingcardid_)));
          set_has_callingcardid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(72)) goto parse_callingCardNum;
        break;
      }

      // optional int32 callingCardNum = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_callingCardNum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &callingcardnum_)));
          set_has_callingcardnum();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(80)) goto parse_times;
        break;
      }

      // optional int32 times = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_times:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &times_)));
          set_has_times();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(88)) goto parse_costitem1;
        break;
      }

      // optional int64 costitem1 = 11;
      case 11: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_costitem1:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &costitem1_)));
          set_has_costitem1();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(96)) goto parse_costnum1;
        break;
      }

      // optional int32 costnum1 = 12;
      case 12: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_costnum1:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &costnum1_)));
          set_has_costnum1();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(104)) goto parse_canBuyFlag;
        break;
      }

      // optional int32 canBuyFlag = 13;
      case 13: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_canBuyFlag:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &canbuyflag_)));
          set_has_canbuyflag();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(112)) goto parse_canhelp;
        break;
      }

      // optional int32 canhelp = 14;
      case 14: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_canhelp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &canhelp_)));
          set_has_canhelp();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(120)) goto parse_skill;
        break;
      }

      // optional int32 skill = 15;
      case 15: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_skill:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &skill_)));
          set_has_skill();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(130)) goto parse_group;
        break;
      }

      // repeated .proto_ff.getTreasuretimesControlgroupDesc group = 16;
      case 16: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_group:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_group()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(130)) goto parse_group;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void getTreasuretimesControl::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 bossType = 1;
  if (has_bosstype()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->bosstype(), output);
  }

  // optional int32 mapType = 2;
  if (has_maptype()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->maptype(), output);
  }

  // optional int32 functionId = 3;
  if (has_functionid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->functionid(), output);
  }

  // optional int32 duplicateGroupID = 4;
  if (has_duplicategroupid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->duplicategroupid(), output);
  }

  // optional int32 viptype = 5;
  if (has_viptype()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->viptype(), output);
  }

  // optional int64 bossFlashItem = 6;
  if (has_bossflashitem()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(6, this->bossflashitem(), output);
  }

  // optional int32 bossFlashItemNum = 7;
  if (has_bossflashitemnum()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->bossflashitemnum(), output);
  }

  // optional int64 callingCardId = 8;
  if (has_callingcardid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(8, this->callingcardid(), output);
  }

  // optional int32 callingCardNum = 9;
  if (has_callingcardnum()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->callingcardnum(), output);
  }

  // optional int32 times = 10;
  if (has_times()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->times(), output);
  }

  // optional int64 costitem1 = 11;
  if (has_costitem1()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(11, this->costitem1(), output);
  }

  // optional int32 costnum1 = 12;
  if (has_costnum1()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(12, this->costnum1(), output);
  }

  // optional int32 canBuyFlag = 13;
  if (has_canbuyflag()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(13, this->canbuyflag(), output);
  }

  // optional int32 canhelp = 14;
  if (has_canhelp()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(14, this->canhelp(), output);
  }

  // optional int32 skill = 15;
  if (has_skill()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(15, this->skill(), output);
  }

  // repeated .proto_ff.getTreasuretimesControlgroupDesc group = 16;
  for (int i = 0; i < this->group_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      16, this->group(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* getTreasuretimesControl::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 bossType = 1;
  if (has_bosstype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->bosstype(), target);
  }

  // optional int32 mapType = 2;
  if (has_maptype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->maptype(), target);
  }

  // optional int32 functionId = 3;
  if (has_functionid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->functionid(), target);
  }

  // optional int32 duplicateGroupID = 4;
  if (has_duplicategroupid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->duplicategroupid(), target);
  }

  // optional int32 viptype = 5;
  if (has_viptype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->viptype(), target);
  }

  // optional int64 bossFlashItem = 6;
  if (has_bossflashitem()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(6, this->bossflashitem(), target);
  }

  // optional int32 bossFlashItemNum = 7;
  if (has_bossflashitemnum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->bossflashitemnum(), target);
  }

  // optional int64 callingCardId = 8;
  if (has_callingcardid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(8, this->callingcardid(), target);
  }

  // optional int32 callingCardNum = 9;
  if (has_callingcardnum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->callingcardnum(), target);
  }

  // optional int32 times = 10;
  if (has_times()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->times(), target);
  }

  // optional int64 costitem1 = 11;
  if (has_costitem1()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(11, this->costitem1(), target);
  }

  // optional int32 costnum1 = 12;
  if (has_costnum1()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(12, this->costnum1(), target);
  }

  // optional int32 canBuyFlag = 13;
  if (has_canbuyflag()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(13, this->canbuyflag(), target);
  }

  // optional int32 canhelp = 14;
  if (has_canhelp()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(14, this->canhelp(), target);
  }

  // optional int32 skill = 15;
  if (has_skill()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(15, this->skill(), target);
  }

  // repeated .proto_ff.getTreasuretimesControlgroupDesc group = 16;
  for (int i = 0; i < this->group_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        16, this->group(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int getTreasuretimesControl::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 bossType = 1;
    if (has_bosstype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->bosstype());
    }

    // optional int32 mapType = 2;
    if (has_maptype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->maptype());
    }

    // optional int32 functionId = 3;
    if (has_functionid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->functionid());
    }

    // optional int32 duplicateGroupID = 4;
    if (has_duplicategroupid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->duplicategroupid());
    }

    // optional int32 viptype = 5;
    if (has_viptype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->viptype());
    }

    // optional int64 bossFlashItem = 6;
    if (has_bossflashitem()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->bossflashitem());
    }

    // optional int32 bossFlashItemNum = 7;
    if (has_bossflashitemnum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->bossflashitemnum());
    }

    // optional int64 callingCardId = 8;
    if (has_callingcardid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->callingcardid());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional int32 callingCardNum = 9;
    if (has_callingcardnum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->callingcardnum());
    }

    // optional int32 times = 10;
    if (has_times()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->times());
    }

    // optional int64 costitem1 = 11;
    if (has_costitem1()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->costitem1());
    }

    // optional int32 costnum1 = 12;
    if (has_costnum1()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->costnum1());
    }

    // optional int32 canBuyFlag = 13;
    if (has_canbuyflag()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->canbuyflag());
    }

    // optional int32 canhelp = 14;
    if (has_canhelp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->canhelp());
    }

    // optional int32 skill = 15;
    if (has_skill()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->skill());
    }

  }
  // repeated .proto_ff.getTreasuretimesControlgroupDesc group = 16;
  total_size += 2 * this->group_size();
  for (int i = 0; i < this->group_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->group(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void getTreasuretimesControl::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const getTreasuretimesControl* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const getTreasuretimesControl*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void getTreasuretimesControl::MergeFrom(const getTreasuretimesControl& from) {
  GOOGLE_CHECK_NE(&from, this);
  group_.MergeFrom(from.group_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_bosstype()) {
      set_bosstype(from.bosstype());
    }
    if (from.has_maptype()) {
      set_maptype(from.maptype());
    }
    if (from.has_functionid()) {
      set_functionid(from.functionid());
    }
    if (from.has_duplicategroupid()) {
      set_duplicategroupid(from.duplicategroupid());
    }
    if (from.has_viptype()) {
      set_viptype(from.viptype());
    }
    if (from.has_bossflashitem()) {
      set_bossflashitem(from.bossflashitem());
    }
    if (from.has_bossflashitemnum()) {
      set_bossflashitemnum(from.bossflashitemnum());
    }
    if (from.has_callingcardid()) {
      set_callingcardid(from.callingcardid());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_callingcardnum()) {
      set_callingcardnum(from.callingcardnum());
    }
    if (from.has_times()) {
      set_times(from.times());
    }
    if (from.has_costitem1()) {
      set_costitem1(from.costitem1());
    }
    if (from.has_costnum1()) {
      set_costnum1(from.costnum1());
    }
    if (from.has_canbuyflag()) {
      set_canbuyflag(from.canbuyflag());
    }
    if (from.has_canhelp()) {
      set_canhelp(from.canhelp());
    }
    if (from.has_skill()) {
      set_skill(from.skill());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void getTreasuretimesControl::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void getTreasuretimesControl::CopyFrom(const getTreasuretimesControl& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool getTreasuretimesControl::IsInitialized() const {

  return true;
}

void getTreasuretimesControl::Swap(getTreasuretimesControl* other) {
  if (other != this) {
    std::swap(bosstype_, other->bosstype_);
    std::swap(maptype_, other->maptype_);
    std::swap(functionid_, other->functionid_);
    std::swap(duplicategroupid_, other->duplicategroupid_);
    std::swap(viptype_, other->viptype_);
    std::swap(bossflashitem_, other->bossflashitem_);
    std::swap(bossflashitemnum_, other->bossflashitemnum_);
    std::swap(callingcardid_, other->callingcardid_);
    std::swap(callingcardnum_, other->callingcardnum_);
    std::swap(times_, other->times_);
    std::swap(costitem1_, other->costitem1_);
    std::swap(costnum1_, other->costnum1_);
    std::swap(canbuyflag_, other->canbuyflag_);
    std::swap(canhelp_, other->canhelp_);
    std::swap(skill_, other->skill_);
    group_.Swap(&other->group_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata getTreasuretimesControl::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = getTreasuretimesControl_descriptor_;
  metadata.reflection = getTreasuretimesControl_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_getTreasuretimesControl::kGetTreasuretimesControlListFieldNumber;
#endif  // !_MSC_VER

Sheet_getTreasuretimesControl::Sheet_getTreasuretimesControl()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_getTreasuretimesControl::InitAsDefaultInstance() {
}

Sheet_getTreasuretimesControl::Sheet_getTreasuretimesControl(const Sheet_getTreasuretimesControl& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_getTreasuretimesControl::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_getTreasuretimesControl::~Sheet_getTreasuretimesControl() {
  SharedDtor();
}

void Sheet_getTreasuretimesControl::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_getTreasuretimesControl::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_getTreasuretimesControl::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_getTreasuretimesControl_descriptor_;
}

const Sheet_getTreasuretimesControl& Sheet_getTreasuretimesControl::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_getTreasure_2eproto();
  return *default_instance_;
}

Sheet_getTreasuretimesControl* Sheet_getTreasuretimesControl::default_instance_ = NULL;

Sheet_getTreasuretimesControl* Sheet_getTreasuretimesControl::New() const {
  return new Sheet_getTreasuretimesControl;
}

void Sheet_getTreasuretimesControl::Clear() {
  gettreasuretimescontrol_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_getTreasuretimesControl::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.getTreasuretimesControl getTreasuretimesControl_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_getTreasuretimesControl_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_gettreasuretimescontrol_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_getTreasuretimesControl_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_getTreasuretimesControl::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.getTreasuretimesControl getTreasuretimesControl_List = 1;
  for (int i = 0; i < this->gettreasuretimescontrol_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->gettreasuretimescontrol_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_getTreasuretimesControl::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.getTreasuretimesControl getTreasuretimesControl_List = 1;
  for (int i = 0; i < this->gettreasuretimescontrol_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->gettreasuretimescontrol_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_getTreasuretimesControl::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.getTreasuretimesControl getTreasuretimesControl_List = 1;
  total_size += 1 * this->gettreasuretimescontrol_list_size();
  for (int i = 0; i < this->gettreasuretimescontrol_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->gettreasuretimescontrol_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_getTreasuretimesControl::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_getTreasuretimesControl* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_getTreasuretimesControl*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_getTreasuretimesControl::MergeFrom(const Sheet_getTreasuretimesControl& from) {
  GOOGLE_CHECK_NE(&from, this);
  gettreasuretimescontrol_list_.MergeFrom(from.gettreasuretimescontrol_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_getTreasuretimesControl::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_getTreasuretimesControl::CopyFrom(const Sheet_getTreasuretimesControl& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_getTreasuretimesControl::IsInitialized() const {

  return true;
}

void Sheet_getTreasuretimesControl::Swap(Sheet_getTreasuretimesControl* other) {
  if (other != this) {
    gettreasuretimescontrol_list_.Swap(&other->gettreasuretimescontrol_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_getTreasuretimesControl::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_getTreasuretimesControl_descriptor_;
  metadata.reflection = Sheet_getTreasuretimesControl_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int getTreasureArrivalBossReward::kIdFieldNumber;
const int getTreasureArrivalBossReward::kTypeFieldNumber;
const int getTreasureArrivalBossReward::kTypeParamFieldNumber;
const int getTreasureArrivalBossReward::kBoxIDFieldNumber;
#endif  // !_MSC_VER

getTreasureArrivalBossReward::getTreasureArrivalBossReward()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void getTreasureArrivalBossReward::InitAsDefaultInstance() {
}

getTreasureArrivalBossReward::getTreasureArrivalBossReward(const getTreasureArrivalBossReward& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void getTreasureArrivalBossReward::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0;
  type_ = 0;
  typeparam_ = 0;
  boxid_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

getTreasureArrivalBossReward::~getTreasureArrivalBossReward() {
  SharedDtor();
}

void getTreasureArrivalBossReward::SharedDtor() {
  if (this != default_instance_) {
  }
}

void getTreasureArrivalBossReward::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* getTreasureArrivalBossReward::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return getTreasureArrivalBossReward_descriptor_;
}

const getTreasureArrivalBossReward& getTreasureArrivalBossReward::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_getTreasure_2eproto();
  return *default_instance_;
}

getTreasureArrivalBossReward* getTreasureArrivalBossReward::default_instance_ = NULL;

getTreasureArrivalBossReward* getTreasureArrivalBossReward::New() const {
  return new getTreasureArrivalBossReward;
}

void getTreasureArrivalBossReward::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    id_ = 0;
    type_ = 0;
    typeparam_ = 0;
    boxid_ = GOOGLE_LONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool getTreasureArrivalBossReward::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_type;
        break;
      }

      // optional int32 type = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_typeParam;
        break;
      }

      // optional int32 typeParam = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_typeParam:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &typeparam_)));
          set_has_typeparam();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_boxID;
        break;
      }

      // optional int64 boxID = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_boxID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &boxid_)));
          set_has_boxid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void getTreasureArrivalBossReward::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // optional int32 type = 2;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->type(), output);
  }

  // optional int32 typeParam = 3;
  if (has_typeparam()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->typeparam(), output);
  }

  // optional int64 boxID = 4;
  if (has_boxid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->boxid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* getTreasureArrivalBossReward::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // optional int32 type = 2;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->type(), target);
  }

  // optional int32 typeParam = 3;
  if (has_typeparam()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->typeparam(), target);
  }

  // optional int64 boxID = 4;
  if (has_boxid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->boxid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int getTreasureArrivalBossReward::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->id());
    }

    // optional int32 type = 2;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type());
    }

    // optional int32 typeParam = 3;
    if (has_typeparam()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->typeparam());
    }

    // optional int64 boxID = 4;
    if (has_boxid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->boxid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void getTreasureArrivalBossReward::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const getTreasureArrivalBossReward* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const getTreasureArrivalBossReward*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void getTreasureArrivalBossReward::MergeFrom(const getTreasureArrivalBossReward& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_typeparam()) {
      set_typeparam(from.typeparam());
    }
    if (from.has_boxid()) {
      set_boxid(from.boxid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void getTreasureArrivalBossReward::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void getTreasureArrivalBossReward::CopyFrom(const getTreasureArrivalBossReward& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool getTreasureArrivalBossReward::IsInitialized() const {

  return true;
}

void getTreasureArrivalBossReward::Swap(getTreasureArrivalBossReward* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(type_, other->type_);
    std::swap(typeparam_, other->typeparam_);
    std::swap(boxid_, other->boxid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata getTreasureArrivalBossReward::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = getTreasureArrivalBossReward_descriptor_;
  metadata.reflection = getTreasureArrivalBossReward_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_getTreasureArrivalBossReward::kGetTreasureArrivalBossRewardListFieldNumber;
#endif  // !_MSC_VER

Sheet_getTreasureArrivalBossReward::Sheet_getTreasureArrivalBossReward()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_getTreasureArrivalBossReward::InitAsDefaultInstance() {
}

Sheet_getTreasureArrivalBossReward::Sheet_getTreasureArrivalBossReward(const Sheet_getTreasureArrivalBossReward& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_getTreasureArrivalBossReward::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_getTreasureArrivalBossReward::~Sheet_getTreasureArrivalBossReward() {
  SharedDtor();
}

void Sheet_getTreasureArrivalBossReward::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_getTreasureArrivalBossReward::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_getTreasureArrivalBossReward::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_getTreasureArrivalBossReward_descriptor_;
}

const Sheet_getTreasureArrivalBossReward& Sheet_getTreasureArrivalBossReward::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_getTreasure_2eproto();
  return *default_instance_;
}

Sheet_getTreasureArrivalBossReward* Sheet_getTreasureArrivalBossReward::default_instance_ = NULL;

Sheet_getTreasureArrivalBossReward* Sheet_getTreasureArrivalBossReward::New() const {
  return new Sheet_getTreasureArrivalBossReward;
}

void Sheet_getTreasureArrivalBossReward::Clear() {
  gettreasurearrivalbossreward_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_getTreasureArrivalBossReward::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.getTreasureArrivalBossReward getTreasureArrivalBossReward_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_getTreasureArrivalBossReward_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_gettreasurearrivalbossreward_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_getTreasureArrivalBossReward_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_getTreasureArrivalBossReward::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.getTreasureArrivalBossReward getTreasureArrivalBossReward_List = 1;
  for (int i = 0; i < this->gettreasurearrivalbossreward_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->gettreasurearrivalbossreward_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_getTreasureArrivalBossReward::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.getTreasureArrivalBossReward getTreasureArrivalBossReward_List = 1;
  for (int i = 0; i < this->gettreasurearrivalbossreward_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->gettreasurearrivalbossreward_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_getTreasureArrivalBossReward::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.getTreasureArrivalBossReward getTreasureArrivalBossReward_List = 1;
  total_size += 1 * this->gettreasurearrivalbossreward_list_size();
  for (int i = 0; i < this->gettreasurearrivalbossreward_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->gettreasurearrivalbossreward_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_getTreasureArrivalBossReward::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_getTreasureArrivalBossReward* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_getTreasureArrivalBossReward*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_getTreasureArrivalBossReward::MergeFrom(const Sheet_getTreasureArrivalBossReward& from) {
  GOOGLE_CHECK_NE(&from, this);
  gettreasurearrivalbossreward_list_.MergeFrom(from.gettreasurearrivalbossreward_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_getTreasureArrivalBossReward::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_getTreasureArrivalBossReward::CopyFrom(const Sheet_getTreasureArrivalBossReward& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_getTreasureArrivalBossReward::IsInitialized() const {

  return true;
}

void Sheet_getTreasureArrivalBossReward::Swap(Sheet_getTreasureArrivalBossReward* other) {
  if (other != this) {
    gettreasurearrivalbossreward_list_.Swap(&other->gettreasurearrivalbossreward_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_getTreasureArrivalBossReward::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_getTreasureArrivalBossReward_descriptor_;
  metadata.reflection = Sheet_getTreasureArrivalBossReward_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int getTreasureArrivalBossControl::kIdFieldNumber;
const int getTreasureArrivalBossControl::kArrivalFieldNumber;
const int getTreasureArrivalBossControl::kCostidFieldNumber;
const int getTreasureArrivalBossControl::kRewardIDFieldNumber;
const int getTreasureArrivalBossControl::kRewardNumFieldNumber;
const int getTreasureArrivalBossControl::kTimesMaxFieldNumber;
const int getTreasureArrivalBossControl::kRecoveryFieldNumber;
const int getTreasureArrivalBossControl::kDuplicateGroupFieldNumber;
const int getTreasureArrivalBossControl::kBossidFieldNumber;
const int getTreasureArrivalBossControl::kPathIDFieldNumber;
const int getTreasureArrivalBossControl::kRadioFieldNumber;
#endif  // !_MSC_VER

getTreasureArrivalBossControl::getTreasureArrivalBossControl()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void getTreasureArrivalBossControl::InitAsDefaultInstance() {
}

getTreasureArrivalBossControl::getTreasureArrivalBossControl(const getTreasureArrivalBossControl& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void getTreasureArrivalBossControl::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0;
  arrival_ = 0;
  costid_ = GOOGLE_LONGLONG(0);
  rewardid_ = GOOGLE_LONGLONG(0);
  rewardnum_ = 0;
  timesmax_ = 0;
  recovery_ = 0;
  duplicategroup_ = GOOGLE_LONGLONG(0);
  bossid_ = GOOGLE_LONGLONG(0);
  pathid_ = GOOGLE_LONGLONG(0);
  radio_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

getTreasureArrivalBossControl::~getTreasureArrivalBossControl() {
  SharedDtor();
}

void getTreasureArrivalBossControl::SharedDtor() {
  if (radio_ != &::google::protobuf::internal::kEmptyString) {
    delete radio_;
  }
  if (this != default_instance_) {
  }
}

void getTreasureArrivalBossControl::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* getTreasureArrivalBossControl::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return getTreasureArrivalBossControl_descriptor_;
}

const getTreasureArrivalBossControl& getTreasureArrivalBossControl::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_getTreasure_2eproto();
  return *default_instance_;
}

getTreasureArrivalBossControl* getTreasureArrivalBossControl::default_instance_ = NULL;

getTreasureArrivalBossControl* getTreasureArrivalBossControl::New() const {
  return new getTreasureArrivalBossControl;
}

void getTreasureArrivalBossControl::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    id_ = 0;
    arrival_ = 0;
    costid_ = GOOGLE_LONGLONG(0);
    rewardid_ = GOOGLE_LONGLONG(0);
    rewardnum_ = 0;
    timesmax_ = 0;
    recovery_ = 0;
    duplicategroup_ = GOOGLE_LONGLONG(0);
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    bossid_ = GOOGLE_LONGLONG(0);
    pathid_ = GOOGLE_LONGLONG(0);
    if (has_radio()) {
      if (radio_ != &::google::protobuf::internal::kEmptyString) {
        radio_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool getTreasureArrivalBossControl::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_Arrival;
        break;
      }

      // optional int32 Arrival = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_Arrival:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &arrival_)));
          set_has_arrival();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_costid;
        break;
      }

      // optional int64 costid = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_costid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &costid_)));
          set_has_costid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_rewardID;
        break;
      }

      // optional int64 rewardID = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_rewardID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &rewardid_)));
          set_has_rewardid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_rewardNum;
        break;
      }

      // optional int32 rewardNum = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_rewardNum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &rewardnum_)));
          set_has_rewardnum();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_timesMax;
        break;
      }

      // optional int32 timesMax = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_timesMax:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &timesmax_)));
          set_has_timesmax();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_recovery;
        break;
      }

      // optional int32 recovery = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_recovery:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &recovery_)));
          set_has_recovery();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(64)) goto parse_duplicateGroup;
        break;
      }

      // optional int64 duplicateGroup = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_duplicateGroup:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &duplicategroup_)));
          set_has_duplicategroup();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(72)) goto parse_bossid;
        break;
      }

      // optional int64 bossid = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_bossid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &bossid_)));
          set_has_bossid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(80)) goto parse_pathID;
        break;
      }

      // optional int64 pathID = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_pathID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &pathid_)));
          set_has_pathid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(90)) goto parse_radio;
        break;
      }

      // optional string radio = 11;
      case 11: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_radio:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_radio()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->radio().data(), this->radio().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void getTreasureArrivalBossControl::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // optional int32 Arrival = 2;
  if (has_arrival()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->arrival(), output);
  }

  // optional int64 costid = 3;
  if (has_costid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->costid(), output);
  }

  // optional int64 rewardID = 4;
  if (has_rewardid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->rewardid(), output);
  }

  // optional int32 rewardNum = 5;
  if (has_rewardnum()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->rewardnum(), output);
  }

  // optional int32 timesMax = 6;
  if (has_timesmax()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->timesmax(), output);
  }

  // optional int32 recovery = 7;
  if (has_recovery()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->recovery(), output);
  }

  // optional int64 duplicateGroup = 8;
  if (has_duplicategroup()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(8, this->duplicategroup(), output);
  }

  // optional int64 bossid = 9;
  if (has_bossid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(9, this->bossid(), output);
  }

  // optional int64 pathID = 10;
  if (has_pathid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(10, this->pathid(), output);
  }

  // optional string radio = 11;
  if (has_radio()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->radio().data(), this->radio().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      11, this->radio(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* getTreasureArrivalBossControl::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // optional int32 Arrival = 2;
  if (has_arrival()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->arrival(), target);
  }

  // optional int64 costid = 3;
  if (has_costid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->costid(), target);
  }

  // optional int64 rewardID = 4;
  if (has_rewardid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->rewardid(), target);
  }

  // optional int32 rewardNum = 5;
  if (has_rewardnum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->rewardnum(), target);
  }

  // optional int32 timesMax = 6;
  if (has_timesmax()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->timesmax(), target);
  }

  // optional int32 recovery = 7;
  if (has_recovery()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->recovery(), target);
  }

  // optional int64 duplicateGroup = 8;
  if (has_duplicategroup()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(8, this->duplicategroup(), target);
  }

  // optional int64 bossid = 9;
  if (has_bossid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(9, this->bossid(), target);
  }

  // optional int64 pathID = 10;
  if (has_pathid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(10, this->pathid(), target);
  }

  // optional string radio = 11;
  if (has_radio()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->radio().data(), this->radio().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->radio(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int getTreasureArrivalBossControl::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->id());
    }

    // optional int32 Arrival = 2;
    if (has_arrival()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->arrival());
    }

    // optional int64 costid = 3;
    if (has_costid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->costid());
    }

    // optional int64 rewardID = 4;
    if (has_rewardid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->rewardid());
    }

    // optional int32 rewardNum = 5;
    if (has_rewardnum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->rewardnum());
    }

    // optional int32 timesMax = 6;
    if (has_timesmax()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->timesmax());
    }

    // optional int32 recovery = 7;
    if (has_recovery()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->recovery());
    }

    // optional int64 duplicateGroup = 8;
    if (has_duplicategroup()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->duplicategroup());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional int64 bossid = 9;
    if (has_bossid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->bossid());
    }

    // optional int64 pathID = 10;
    if (has_pathid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->pathid());
    }

    // optional string radio = 11;
    if (has_radio()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->radio());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void getTreasureArrivalBossControl::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const getTreasureArrivalBossControl* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const getTreasureArrivalBossControl*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void getTreasureArrivalBossControl::MergeFrom(const getTreasureArrivalBossControl& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_arrival()) {
      set_arrival(from.arrival());
    }
    if (from.has_costid()) {
      set_costid(from.costid());
    }
    if (from.has_rewardid()) {
      set_rewardid(from.rewardid());
    }
    if (from.has_rewardnum()) {
      set_rewardnum(from.rewardnum());
    }
    if (from.has_timesmax()) {
      set_timesmax(from.timesmax());
    }
    if (from.has_recovery()) {
      set_recovery(from.recovery());
    }
    if (from.has_duplicategroup()) {
      set_duplicategroup(from.duplicategroup());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_bossid()) {
      set_bossid(from.bossid());
    }
    if (from.has_pathid()) {
      set_pathid(from.pathid());
    }
    if (from.has_radio()) {
      set_radio(from.radio());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void getTreasureArrivalBossControl::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void getTreasureArrivalBossControl::CopyFrom(const getTreasureArrivalBossControl& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool getTreasureArrivalBossControl::IsInitialized() const {

  return true;
}

void getTreasureArrivalBossControl::Swap(getTreasureArrivalBossControl* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(arrival_, other->arrival_);
    std::swap(costid_, other->costid_);
    std::swap(rewardid_, other->rewardid_);
    std::swap(rewardnum_, other->rewardnum_);
    std::swap(timesmax_, other->timesmax_);
    std::swap(recovery_, other->recovery_);
    std::swap(duplicategroup_, other->duplicategroup_);
    std::swap(bossid_, other->bossid_);
    std::swap(pathid_, other->pathid_);
    std::swap(radio_, other->radio_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata getTreasureArrivalBossControl::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = getTreasureArrivalBossControl_descriptor_;
  metadata.reflection = getTreasureArrivalBossControl_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_getTreasureArrivalBossControl::kGetTreasureArrivalBossControlListFieldNumber;
#endif  // !_MSC_VER

Sheet_getTreasureArrivalBossControl::Sheet_getTreasureArrivalBossControl()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_getTreasureArrivalBossControl::InitAsDefaultInstance() {
}

Sheet_getTreasureArrivalBossControl::Sheet_getTreasureArrivalBossControl(const Sheet_getTreasureArrivalBossControl& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_getTreasureArrivalBossControl::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_getTreasureArrivalBossControl::~Sheet_getTreasureArrivalBossControl() {
  SharedDtor();
}

void Sheet_getTreasureArrivalBossControl::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_getTreasureArrivalBossControl::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_getTreasureArrivalBossControl::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_getTreasureArrivalBossControl_descriptor_;
}

const Sheet_getTreasureArrivalBossControl& Sheet_getTreasureArrivalBossControl::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_getTreasure_2eproto();
  return *default_instance_;
}

Sheet_getTreasureArrivalBossControl* Sheet_getTreasureArrivalBossControl::default_instance_ = NULL;

Sheet_getTreasureArrivalBossControl* Sheet_getTreasureArrivalBossControl::New() const {
  return new Sheet_getTreasureArrivalBossControl;
}

void Sheet_getTreasureArrivalBossControl::Clear() {
  gettreasurearrivalbosscontrol_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_getTreasureArrivalBossControl::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.getTreasureArrivalBossControl getTreasureArrivalBossControl_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_getTreasureArrivalBossControl_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_gettreasurearrivalbosscontrol_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_getTreasureArrivalBossControl_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_getTreasureArrivalBossControl::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.getTreasureArrivalBossControl getTreasureArrivalBossControl_List = 1;
  for (int i = 0; i < this->gettreasurearrivalbosscontrol_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->gettreasurearrivalbosscontrol_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_getTreasureArrivalBossControl::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.getTreasureArrivalBossControl getTreasureArrivalBossControl_List = 1;
  for (int i = 0; i < this->gettreasurearrivalbosscontrol_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->gettreasurearrivalbosscontrol_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_getTreasureArrivalBossControl::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.getTreasureArrivalBossControl getTreasureArrivalBossControl_List = 1;
  total_size += 1 * this->gettreasurearrivalbosscontrol_list_size();
  for (int i = 0; i < this->gettreasurearrivalbosscontrol_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->gettreasurearrivalbosscontrol_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_getTreasureArrivalBossControl::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_getTreasureArrivalBossControl* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_getTreasureArrivalBossControl*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_getTreasureArrivalBossControl::MergeFrom(const Sheet_getTreasureArrivalBossControl& from) {
  GOOGLE_CHECK_NE(&from, this);
  gettreasurearrivalbosscontrol_list_.MergeFrom(from.gettreasurearrivalbosscontrol_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_getTreasureArrivalBossControl::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_getTreasureArrivalBossControl::CopyFrom(const Sheet_getTreasureArrivalBossControl& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_getTreasureArrivalBossControl::IsInitialized() const {

  return true;
}

void Sheet_getTreasureArrivalBossControl::Swap(Sheet_getTreasureArrivalBossControl* other) {
  if (other != this) {
    gettreasurearrivalbosscontrol_list_.Swap(&other->gettreasurearrivalbosscontrol_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_getTreasureArrivalBossControl::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_getTreasureArrivalBossControl_descriptor_;
  metadata.reflection = Sheet_getTreasureArrivalBossControl_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int getTreasurevipBossControl::kFloorFieldNumber;
const int getTreasurevipBossControl::kMinVipLvNeedFieldNumber;
const int getTreasurevipBossControl::kVipLvNeedFieldNumber;
const int getTreasurevipBossControl::kCostnumFieldNumber;
const int getTreasurevipBossControl::kCostidFieldNumber;
#endif  // !_MSC_VER

getTreasurevipBossControl::getTreasurevipBossControl()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void getTreasurevipBossControl::InitAsDefaultInstance() {
}

getTreasurevipBossControl::getTreasurevipBossControl(const getTreasurevipBossControl& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void getTreasurevipBossControl::SharedCtor() {
  _cached_size_ = 0;
  floor_ = 0;
  minviplvneed_ = 0;
  viplvneed_ = 0;
  costnum_ = 0;
  costid_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

getTreasurevipBossControl::~getTreasurevipBossControl() {
  SharedDtor();
}

void getTreasurevipBossControl::SharedDtor() {
  if (this != default_instance_) {
  }
}

void getTreasurevipBossControl::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* getTreasurevipBossControl::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return getTreasurevipBossControl_descriptor_;
}

const getTreasurevipBossControl& getTreasurevipBossControl::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_getTreasure_2eproto();
  return *default_instance_;
}

getTreasurevipBossControl* getTreasurevipBossControl::default_instance_ = NULL;

getTreasurevipBossControl* getTreasurevipBossControl::New() const {
  return new getTreasurevipBossControl;
}

void getTreasurevipBossControl::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    floor_ = 0;
    minviplvneed_ = 0;
    viplvneed_ = 0;
    costnum_ = 0;
    costid_ = GOOGLE_LONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool getTreasurevipBossControl::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 floor = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &floor_)));
          set_has_floor();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_minVipLvNeed;
        break;
      }

      // optional int32 minVipLvNeed = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_minVipLvNeed:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &minviplvneed_)));
          set_has_minviplvneed();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_VipLvNeed;
        break;
      }

      // optional int32 VipLvNeed = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_VipLvNeed:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &viplvneed_)));
          set_has_viplvneed();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_costnum;
        break;
      }

      // optional int32 costnum = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_costnum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &costnum_)));
          set_has_costnum();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_costid;
        break;
      }

      // optional int64 costid = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_costid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &costid_)));
          set_has_costid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void getTreasurevipBossControl::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 floor = 1;
  if (has_floor()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->floor(), output);
  }

  // optional int32 minVipLvNeed = 2;
  if (has_minviplvneed()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->minviplvneed(), output);
  }

  // optional int32 VipLvNeed = 3;
  if (has_viplvneed()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->viplvneed(), output);
  }

  // optional int32 costnum = 4;
  if (has_costnum()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->costnum(), output);
  }

  // optional int64 costid = 5;
  if (has_costid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->costid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* getTreasurevipBossControl::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 floor = 1;
  if (has_floor()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->floor(), target);
  }

  // optional int32 minVipLvNeed = 2;
  if (has_minviplvneed()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->minviplvneed(), target);
  }

  // optional int32 VipLvNeed = 3;
  if (has_viplvneed()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->viplvneed(), target);
  }

  // optional int32 costnum = 4;
  if (has_costnum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->costnum(), target);
  }

  // optional int64 costid = 5;
  if (has_costid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(5, this->costid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int getTreasurevipBossControl::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 floor = 1;
    if (has_floor()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->floor());
    }

    // optional int32 minVipLvNeed = 2;
    if (has_minviplvneed()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->minviplvneed());
    }

    // optional int32 VipLvNeed = 3;
    if (has_viplvneed()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->viplvneed());
    }

    // optional int32 costnum = 4;
    if (has_costnum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->costnum());
    }

    // optional int64 costid = 5;
    if (has_costid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->costid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void getTreasurevipBossControl::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const getTreasurevipBossControl* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const getTreasurevipBossControl*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void getTreasurevipBossControl::MergeFrom(const getTreasurevipBossControl& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_floor()) {
      set_floor(from.floor());
    }
    if (from.has_minviplvneed()) {
      set_minviplvneed(from.minviplvneed());
    }
    if (from.has_viplvneed()) {
      set_viplvneed(from.viplvneed());
    }
    if (from.has_costnum()) {
      set_costnum(from.costnum());
    }
    if (from.has_costid()) {
      set_costid(from.costid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void getTreasurevipBossControl::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void getTreasurevipBossControl::CopyFrom(const getTreasurevipBossControl& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool getTreasurevipBossControl::IsInitialized() const {

  return true;
}

void getTreasurevipBossControl::Swap(getTreasurevipBossControl* other) {
  if (other != this) {
    std::swap(floor_, other->floor_);
    std::swap(minviplvneed_, other->minviplvneed_);
    std::swap(viplvneed_, other->viplvneed_);
    std::swap(costnum_, other->costnum_);
    std::swap(costid_, other->costid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata getTreasurevipBossControl::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = getTreasurevipBossControl_descriptor_;
  metadata.reflection = getTreasurevipBossControl_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_getTreasurevipBossControl::kGetTreasurevipBossControlListFieldNumber;
#endif  // !_MSC_VER

Sheet_getTreasurevipBossControl::Sheet_getTreasurevipBossControl()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_getTreasurevipBossControl::InitAsDefaultInstance() {
}

Sheet_getTreasurevipBossControl::Sheet_getTreasurevipBossControl(const Sheet_getTreasurevipBossControl& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_getTreasurevipBossControl::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_getTreasurevipBossControl::~Sheet_getTreasurevipBossControl() {
  SharedDtor();
}

void Sheet_getTreasurevipBossControl::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_getTreasurevipBossControl::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_getTreasurevipBossControl::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_getTreasurevipBossControl_descriptor_;
}

const Sheet_getTreasurevipBossControl& Sheet_getTreasurevipBossControl::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_getTreasure_2eproto();
  return *default_instance_;
}

Sheet_getTreasurevipBossControl* Sheet_getTreasurevipBossControl::default_instance_ = NULL;

Sheet_getTreasurevipBossControl* Sheet_getTreasurevipBossControl::New() const {
  return new Sheet_getTreasurevipBossControl;
}

void Sheet_getTreasurevipBossControl::Clear() {
  gettreasurevipbosscontrol_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_getTreasurevipBossControl::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.getTreasurevipBossControl getTreasurevipBossControl_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_getTreasurevipBossControl_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_gettreasurevipbosscontrol_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_getTreasurevipBossControl_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_getTreasurevipBossControl::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.getTreasurevipBossControl getTreasurevipBossControl_List = 1;
  for (int i = 0; i < this->gettreasurevipbosscontrol_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->gettreasurevipbosscontrol_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_getTreasurevipBossControl::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.getTreasurevipBossControl getTreasurevipBossControl_List = 1;
  for (int i = 0; i < this->gettreasurevipbosscontrol_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->gettreasurevipbosscontrol_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_getTreasurevipBossControl::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.getTreasurevipBossControl getTreasurevipBossControl_List = 1;
  total_size += 1 * this->gettreasurevipbosscontrol_list_size();
  for (int i = 0; i < this->gettreasurevipbosscontrol_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->gettreasurevipbosscontrol_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_getTreasurevipBossControl::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_getTreasurevipBossControl* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_getTreasurevipBossControl*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_getTreasurevipBossControl::MergeFrom(const Sheet_getTreasurevipBossControl& from) {
  GOOGLE_CHECK_NE(&from, this);
  gettreasurevipbosscontrol_list_.MergeFrom(from.gettreasurevipbosscontrol_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_getTreasurevipBossControl::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_getTreasurevipBossControl::CopyFrom(const Sheet_getTreasurevipBossControl& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_getTreasurevipBossControl::IsInitialized() const {

  return true;
}

void Sheet_getTreasurevipBossControl::Swap(Sheet_getTreasurevipBossControl* other) {
  if (other != this) {
    gettreasurevipbosscontrol_list_.Swap(&other->gettreasurevipbosscontrol_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_getTreasurevipBossControl::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_getTreasurevipBossControl_descriptor_;
  metadata.reflection = Sheet_getTreasurevipBossControl_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int getTreasureboss::kIdFieldNumber;
const int getTreasureboss::kBossTypeFieldNumber;
const int getTreasureboss::kMonsterIDFieldNumber;
const int getTreasureboss::kClassOrderFieldNumber;
const int getTreasureboss::kSceneOrderFieldNumber;
const int getTreasureboss::kDuplicateIDFieldNumber;
const int getTreasureboss::kPathIDFieldNumber;
const int getTreasureboss::kGroupTypeFieldNumber;
const int getTreasureboss::kFlashTimeFieldNumber;
#endif  // !_MSC_VER

getTreasureboss::getTreasureboss()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void getTreasureboss::InitAsDefaultInstance() {
}

getTreasureboss::getTreasureboss(const getTreasureboss& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void getTreasureboss::SharedCtor() {
  _cached_size_ = 0;
  id_ = GOOGLE_LONGLONG(0);
  bosstype_ = 0;
  monsterid_ = GOOGLE_LONGLONG(0);
  classorder_ = 0;
  sceneorder_ = 0;
  duplicateid_ = GOOGLE_LONGLONG(0);
  pathid_ = GOOGLE_LONGLONG(0);
  group_type_ = 0;
  flashtime_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

getTreasureboss::~getTreasureboss() {
  SharedDtor();
}

void getTreasureboss::SharedDtor() {
  if (this != default_instance_) {
  }
}

void getTreasureboss::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* getTreasureboss::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return getTreasureboss_descriptor_;
}

const getTreasureboss& getTreasureboss::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_getTreasure_2eproto();
  return *default_instance_;
}

getTreasureboss* getTreasureboss::default_instance_ = NULL;

getTreasureboss* getTreasureboss::New() const {
  return new getTreasureboss;
}

void getTreasureboss::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    id_ = GOOGLE_LONGLONG(0);
    bosstype_ = 0;
    monsterid_ = GOOGLE_LONGLONG(0);
    classorder_ = 0;
    sceneorder_ = 0;
    duplicateid_ = GOOGLE_LONGLONG(0);
    pathid_ = GOOGLE_LONGLONG(0);
    group_type_ = 0;
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    flashtime_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool getTreasureboss::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_bossType;
        break;
      }

      // optional int32 bossType = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_bossType:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &bosstype_)));
          set_has_bosstype();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_monsterID;
        break;
      }

      // optional int64 monsterID = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_monsterID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &monsterid_)));
          set_has_monsterid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_classOrder;
        break;
      }

      // optional int32 classOrder = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_classOrder:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &classorder_)));
          set_has_classorder();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_sceneOrder;
        break;
      }

      // optional int32 sceneOrder = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_sceneOrder:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &sceneorder_)));
          set_has_sceneorder();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_duplicateID;
        break;
      }

      // optional int64 duplicateID = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_duplicateID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &duplicateid_)));
          set_has_duplicateid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_pathID;
        break;
      }

      // optional int64 pathID = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_pathID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &pathid_)));
          set_has_pathid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(64)) goto parse_group_type;
        break;
      }

      // optional int32 group_type = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_group_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &group_type_)));
          set_has_group_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(72)) goto parse_flashTime;
        break;
      }

      // optional int32 flashTime = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_flashTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &flashtime_)));
          set_has_flashtime();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void getTreasureboss::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->id(), output);
  }

  // optional int32 bossType = 2;
  if (has_bosstype()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->bosstype(), output);
  }

  // optional int64 monsterID = 3;
  if (has_monsterid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->monsterid(), output);
  }

  // optional int32 classOrder = 4;
  if (has_classorder()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->classorder(), output);
  }

  // optional int32 sceneOrder = 5;
  if (has_sceneorder()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->sceneorder(), output);
  }

  // optional int64 duplicateID = 6;
  if (has_duplicateid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(6, this->duplicateid(), output);
  }

  // optional int64 pathID = 7;
  if (has_pathid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(7, this->pathid(), output);
  }

  // optional int32 group_type = 8;
  if (has_group_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->group_type(), output);
  }

  // optional int32 flashTime = 9;
  if (has_flashtime()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->flashtime(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* getTreasureboss::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->id(), target);
  }

  // optional int32 bossType = 2;
  if (has_bosstype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->bosstype(), target);
  }

  // optional int64 monsterID = 3;
  if (has_monsterid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->monsterid(), target);
  }

  // optional int32 classOrder = 4;
  if (has_classorder()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->classorder(), target);
  }

  // optional int32 sceneOrder = 5;
  if (has_sceneorder()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->sceneorder(), target);
  }

  // optional int64 duplicateID = 6;
  if (has_duplicateid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(6, this->duplicateid(), target);
  }

  // optional int64 pathID = 7;
  if (has_pathid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(7, this->pathid(), target);
  }

  // optional int32 group_type = 8;
  if (has_group_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->group_type(), target);
  }

  // optional int32 flashTime = 9;
  if (has_flashtime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->flashtime(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int getTreasureboss::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->id());
    }

    // optional int32 bossType = 2;
    if (has_bosstype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->bosstype());
    }

    // optional int64 monsterID = 3;
    if (has_monsterid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->monsterid());
    }

    // optional int32 classOrder = 4;
    if (has_classorder()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->classorder());
    }

    // optional int32 sceneOrder = 5;
    if (has_sceneorder()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->sceneorder());
    }

    // optional int64 duplicateID = 6;
    if (has_duplicateid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->duplicateid());
    }

    // optional int64 pathID = 7;
    if (has_pathid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->pathid());
    }

    // optional int32 group_type = 8;
    if (has_group_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->group_type());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional int32 flashTime = 9;
    if (has_flashtime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->flashtime());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void getTreasureboss::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const getTreasureboss* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const getTreasureboss*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void getTreasureboss::MergeFrom(const getTreasureboss& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_bosstype()) {
      set_bosstype(from.bosstype());
    }
    if (from.has_monsterid()) {
      set_monsterid(from.monsterid());
    }
    if (from.has_classorder()) {
      set_classorder(from.classorder());
    }
    if (from.has_sceneorder()) {
      set_sceneorder(from.sceneorder());
    }
    if (from.has_duplicateid()) {
      set_duplicateid(from.duplicateid());
    }
    if (from.has_pathid()) {
      set_pathid(from.pathid());
    }
    if (from.has_group_type()) {
      set_group_type(from.group_type());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_flashtime()) {
      set_flashtime(from.flashtime());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void getTreasureboss::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void getTreasureboss::CopyFrom(const getTreasureboss& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool getTreasureboss::IsInitialized() const {

  return true;
}

void getTreasureboss::Swap(getTreasureboss* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(bosstype_, other->bosstype_);
    std::swap(monsterid_, other->monsterid_);
    std::swap(classorder_, other->classorder_);
    std::swap(sceneorder_, other->sceneorder_);
    std::swap(duplicateid_, other->duplicateid_);
    std::swap(pathid_, other->pathid_);
    std::swap(group_type_, other->group_type_);
    std::swap(flashtime_, other->flashtime_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata getTreasureboss::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = getTreasureboss_descriptor_;
  metadata.reflection = getTreasureboss_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_getTreasureboss::kGetTreasurebossListFieldNumber;
#endif  // !_MSC_VER

Sheet_getTreasureboss::Sheet_getTreasureboss()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_getTreasureboss::InitAsDefaultInstance() {
}

Sheet_getTreasureboss::Sheet_getTreasureboss(const Sheet_getTreasureboss& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_getTreasureboss::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_getTreasureboss::~Sheet_getTreasureboss() {
  SharedDtor();
}

void Sheet_getTreasureboss::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_getTreasureboss::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_getTreasureboss::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_getTreasureboss_descriptor_;
}

const Sheet_getTreasureboss& Sheet_getTreasureboss::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_getTreasure_2eproto();
  return *default_instance_;
}

Sheet_getTreasureboss* Sheet_getTreasureboss::default_instance_ = NULL;

Sheet_getTreasureboss* Sheet_getTreasureboss::New() const {
  return new Sheet_getTreasureboss;
}

void Sheet_getTreasureboss::Clear() {
  gettreasureboss_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_getTreasureboss::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.getTreasureboss getTreasureboss_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_getTreasureboss_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_gettreasureboss_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_getTreasureboss_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_getTreasureboss::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.getTreasureboss getTreasureboss_List = 1;
  for (int i = 0; i < this->gettreasureboss_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->gettreasureboss_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_getTreasureboss::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.getTreasureboss getTreasureboss_List = 1;
  for (int i = 0; i < this->gettreasureboss_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->gettreasureboss_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_getTreasureboss::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.getTreasureboss getTreasureboss_List = 1;
  total_size += 1 * this->gettreasureboss_list_size();
  for (int i = 0; i < this->gettreasureboss_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->gettreasureboss_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_getTreasureboss::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_getTreasureboss* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_getTreasureboss*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_getTreasureboss::MergeFrom(const Sheet_getTreasureboss& from) {
  GOOGLE_CHECK_NE(&from, this);
  gettreasureboss_list_.MergeFrom(from.gettreasureboss_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_getTreasureboss::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_getTreasureboss::CopyFrom(const Sheet_getTreasureboss& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_getTreasureboss::IsInitialized() const {

  return true;
}

void Sheet_getTreasureboss::Swap(Sheet_getTreasureboss* other) {
  if (other != this) {
    gettreasureboss_list_.Swap(&other->gettreasureboss_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_getTreasureboss::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_getTreasureboss_descriptor_;
  metadata.reflection = Sheet_getTreasureboss_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int getTreasurehelp::kIdFieldNumber;
const int getTreasurehelp::kDownFieldNumber;
const int getTreasurehelp::kUpFieldNumber;
const int getTreasurehelp::kNumFieldNumber;
#endif  // !_MSC_VER

getTreasurehelp::getTreasurehelp()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void getTreasurehelp::InitAsDefaultInstance() {
}

getTreasurehelp::getTreasurehelp(const getTreasurehelp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void getTreasurehelp::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0;
  down_ = 0;
  up_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

getTreasurehelp::~getTreasurehelp() {
  SharedDtor();
}

void getTreasurehelp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void getTreasurehelp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* getTreasurehelp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return getTreasurehelp_descriptor_;
}

const getTreasurehelp& getTreasurehelp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_getTreasure_2eproto();
  return *default_instance_;
}

getTreasurehelp* getTreasurehelp::default_instance_ = NULL;

getTreasurehelp* getTreasurehelp::New() const {
  return new getTreasurehelp;
}

void getTreasurehelp::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    id_ = 0;
    down_ = 0;
    up_ = 0;
  }
  num_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool getTreasurehelp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_down;
        break;
      }

      // optional int32 down = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_down:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &down_)));
          set_has_down();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_up;
        break;
      }

      // optional int32 up = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_up:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &up_)));
          set_has_up();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_num;
        break;
      }

      // repeated int64 num = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_num:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 32, input, this->mutable_num())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_num())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_num;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void getTreasurehelp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // optional int32 down = 2;
  if (has_down()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->down(), output);
  }

  // optional int32 up = 3;
  if (has_up()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->up(), output);
  }

  // repeated int64 num = 4;
  for (int i = 0; i < this->num_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(
      4, this->num(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* getTreasurehelp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // optional int32 down = 2;
  if (has_down()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->down(), target);
  }

  // optional int32 up = 3;
  if (has_up()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->up(), target);
  }

  // repeated int64 num = 4;
  for (int i = 0; i < this->num_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64ToArray(4, this->num(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int getTreasurehelp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->id());
    }

    // optional int32 down = 2;
    if (has_down()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->down());
    }

    // optional int32 up = 3;
    if (has_up()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->up());
    }

  }
  // repeated int64 num = 4;
  {
    int data_size = 0;
    for (int i = 0; i < this->num_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int64Size(this->num(i));
    }
    total_size += 1 * this->num_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void getTreasurehelp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const getTreasurehelp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const getTreasurehelp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void getTreasurehelp::MergeFrom(const getTreasurehelp& from) {
  GOOGLE_CHECK_NE(&from, this);
  num_.MergeFrom(from.num_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_down()) {
      set_down(from.down());
    }
    if (from.has_up()) {
      set_up(from.up());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void getTreasurehelp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void getTreasurehelp::CopyFrom(const getTreasurehelp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool getTreasurehelp::IsInitialized() const {

  return true;
}

void getTreasurehelp::Swap(getTreasurehelp* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(down_, other->down_);
    std::swap(up_, other->up_);
    num_.Swap(&other->num_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata getTreasurehelp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = getTreasurehelp_descriptor_;
  metadata.reflection = getTreasurehelp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_getTreasurehelp::kGetTreasurehelpListFieldNumber;
#endif  // !_MSC_VER

Sheet_getTreasurehelp::Sheet_getTreasurehelp()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_getTreasurehelp::InitAsDefaultInstance() {
}

Sheet_getTreasurehelp::Sheet_getTreasurehelp(const Sheet_getTreasurehelp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_getTreasurehelp::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_getTreasurehelp::~Sheet_getTreasurehelp() {
  SharedDtor();
}

void Sheet_getTreasurehelp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_getTreasurehelp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_getTreasurehelp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_getTreasurehelp_descriptor_;
}

const Sheet_getTreasurehelp& Sheet_getTreasurehelp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_getTreasure_2eproto();
  return *default_instance_;
}

Sheet_getTreasurehelp* Sheet_getTreasurehelp::default_instance_ = NULL;

Sheet_getTreasurehelp* Sheet_getTreasurehelp::New() const {
  return new Sheet_getTreasurehelp;
}

void Sheet_getTreasurehelp::Clear() {
  gettreasurehelp_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_getTreasurehelp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.getTreasurehelp getTreasurehelp_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_getTreasurehelp_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_gettreasurehelp_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_getTreasurehelp_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_getTreasurehelp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.getTreasurehelp getTreasurehelp_List = 1;
  for (int i = 0; i < this->gettreasurehelp_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->gettreasurehelp_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_getTreasurehelp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.getTreasurehelp getTreasurehelp_List = 1;
  for (int i = 0; i < this->gettreasurehelp_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->gettreasurehelp_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_getTreasurehelp::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.getTreasurehelp getTreasurehelp_List = 1;
  total_size += 1 * this->gettreasurehelp_list_size();
  for (int i = 0; i < this->gettreasurehelp_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->gettreasurehelp_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_getTreasurehelp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_getTreasurehelp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_getTreasurehelp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_getTreasurehelp::MergeFrom(const Sheet_getTreasurehelp& from) {
  GOOGLE_CHECK_NE(&from, this);
  gettreasurehelp_list_.MergeFrom(from.gettreasurehelp_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_getTreasurehelp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_getTreasurehelp::CopyFrom(const Sheet_getTreasurehelp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_getTreasurehelp::IsInitialized() const {

  return true;
}

void Sheet_getTreasurehelp::Swap(Sheet_getTreasurehelp* other) {
  if (other != this) {
    gettreasurehelp_list_.Swap(&other->gettreasurehelp_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_getTreasurehelp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_getTreasurehelp_descriptor_;
  metadata.reflection = Sheet_getTreasurehelp_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto_ff

// @@protoc_insertion_point(global_scope)
