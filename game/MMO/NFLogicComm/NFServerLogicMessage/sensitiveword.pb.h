// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: sensitiveword.proto

#ifndef PROTOBUF_sensitiveword_2eproto__INCLUDED
#define PROTOBUF_sensitiveword_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "yd_fieldoptions.pb.h"
// @@protoc_insertion_point(includes)

namespace proto_ff {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_sensitiveword_2eproto();
void protobuf_AssignDesc_sensitiveword_2eproto();
void protobuf_ShutdownFile_sensitiveword_2eproto();

class sensitivewordsensitive_word;
class Sheet_sensitivewordsensitive_word;
class sensitivewordrolesensitive;
class Sheet_sensitivewordrolesensitive;

// ===================================================================

class sensitivewordsensitive_word : public ::google::protobuf::Message {
 public:
  sensitivewordsensitive_word();
  virtual ~sensitivewordsensitive_word();

  sensitivewordsensitive_word(const sensitivewordsensitive_word& from);

  inline sensitivewordsensitive_word& operator=(const sensitivewordsensitive_word& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const sensitivewordsensitive_word& default_instance();

  void Swap(sensitivewordsensitive_word* other);

  // implements Message ----------------------------------------------

  sensitivewordsensitive_word* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const sensitivewordsensitive_word& from);
  void MergeFrom(const sensitivewordsensitive_word& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // optional string sensitiveWord = 2;
  inline bool has_sensitiveword() const;
  inline void clear_sensitiveword();
  static const int kSensitiveWordFieldNumber = 2;
  inline const ::std::string& sensitiveword() const;
  inline void set_sensitiveword(const ::std::string& value);
  inline void set_sensitiveword(const char* value);
  inline void set_sensitiveword(const char* value, size_t size);
  inline ::std::string* mutable_sensitiveword();
  inline ::std::string* release_sensitiveword();
  inline void set_allocated_sensitiveword(::std::string* sensitiveword);

  // @@protoc_insertion_point(class_scope:proto_ff.sensitivewordsensitive_word)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_sensitiveword();
  inline void clear_has_sensitiveword();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* sensitiveword_;
  ::google::protobuf::int32 id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_sensitiveword_2eproto();
  friend void protobuf_AssignDesc_sensitiveword_2eproto();
  friend void protobuf_ShutdownFile_sensitiveword_2eproto();

  void InitAsDefaultInstance();
  static sensitivewordsensitive_word* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_sensitivewordsensitive_word : public ::google::protobuf::Message {
 public:
  Sheet_sensitivewordsensitive_word();
  virtual ~Sheet_sensitivewordsensitive_word();

  Sheet_sensitivewordsensitive_word(const Sheet_sensitivewordsensitive_word& from);

  inline Sheet_sensitivewordsensitive_word& operator=(const Sheet_sensitivewordsensitive_word& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_sensitivewordsensitive_word& default_instance();

  void Swap(Sheet_sensitivewordsensitive_word* other);

  // implements Message ----------------------------------------------

  Sheet_sensitivewordsensitive_word* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_sensitivewordsensitive_word& from);
  void MergeFrom(const Sheet_sensitivewordsensitive_word& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.sensitivewordsensitive_word sensitivewordsensitive_word_List = 1;
  inline int sensitivewordsensitive_word_list_size() const;
  inline void clear_sensitivewordsensitive_word_list();
  static const int kSensitivewordsensitiveWordListFieldNumber = 1;
  inline const ::proto_ff::sensitivewordsensitive_word& sensitivewordsensitive_word_list(int index) const;
  inline ::proto_ff::sensitivewordsensitive_word* mutable_sensitivewordsensitive_word_list(int index);
  inline ::proto_ff::sensitivewordsensitive_word* add_sensitivewordsensitive_word_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::sensitivewordsensitive_word >&
      sensitivewordsensitive_word_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::sensitivewordsensitive_word >*
      mutable_sensitivewordsensitive_word_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_sensitivewordsensitive_word)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::sensitivewordsensitive_word > sensitivewordsensitive_word_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_sensitiveword_2eproto();
  friend void protobuf_AssignDesc_sensitiveword_2eproto();
  friend void protobuf_ShutdownFile_sensitiveword_2eproto();

  void InitAsDefaultInstance();
  static Sheet_sensitivewordsensitive_word* default_instance_;
};
// -------------------------------------------------------------------

class sensitivewordrolesensitive : public ::google::protobuf::Message {
 public:
  sensitivewordrolesensitive();
  virtual ~sensitivewordrolesensitive();

  sensitivewordrolesensitive(const sensitivewordrolesensitive& from);

  inline sensitivewordrolesensitive& operator=(const sensitivewordrolesensitive& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const sensitivewordrolesensitive& default_instance();

  void Swap(sensitivewordrolesensitive* other);

  // implements Message ----------------------------------------------

  sensitivewordrolesensitive* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const sensitivewordrolesensitive& from);
  void MergeFrom(const sensitivewordrolesensitive& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // optional string sensitiveWord = 2;
  inline bool has_sensitiveword() const;
  inline void clear_sensitiveword();
  static const int kSensitiveWordFieldNumber = 2;
  inline const ::std::string& sensitiveword() const;
  inline void set_sensitiveword(const ::std::string& value);
  inline void set_sensitiveword(const char* value);
  inline void set_sensitiveword(const char* value, size_t size);
  inline ::std::string* mutable_sensitiveword();
  inline ::std::string* release_sensitiveword();
  inline void set_allocated_sensitiveword(::std::string* sensitiveword);

  // @@protoc_insertion_point(class_scope:proto_ff.sensitivewordrolesensitive)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_sensitiveword();
  inline void clear_has_sensitiveword();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* sensitiveword_;
  ::google::protobuf::int32 id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_sensitiveword_2eproto();
  friend void protobuf_AssignDesc_sensitiveword_2eproto();
  friend void protobuf_ShutdownFile_sensitiveword_2eproto();

  void InitAsDefaultInstance();
  static sensitivewordrolesensitive* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_sensitivewordrolesensitive : public ::google::protobuf::Message {
 public:
  Sheet_sensitivewordrolesensitive();
  virtual ~Sheet_sensitivewordrolesensitive();

  Sheet_sensitivewordrolesensitive(const Sheet_sensitivewordrolesensitive& from);

  inline Sheet_sensitivewordrolesensitive& operator=(const Sheet_sensitivewordrolesensitive& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_sensitivewordrolesensitive& default_instance();

  void Swap(Sheet_sensitivewordrolesensitive* other);

  // implements Message ----------------------------------------------

  Sheet_sensitivewordrolesensitive* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_sensitivewordrolesensitive& from);
  void MergeFrom(const Sheet_sensitivewordrolesensitive& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.sensitivewordrolesensitive sensitivewordrolesensitive_List = 1;
  inline int sensitivewordrolesensitive_list_size() const;
  inline void clear_sensitivewordrolesensitive_list();
  static const int kSensitivewordrolesensitiveListFieldNumber = 1;
  inline const ::proto_ff::sensitivewordrolesensitive& sensitivewordrolesensitive_list(int index) const;
  inline ::proto_ff::sensitivewordrolesensitive* mutable_sensitivewordrolesensitive_list(int index);
  inline ::proto_ff::sensitivewordrolesensitive* add_sensitivewordrolesensitive_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::sensitivewordrolesensitive >&
      sensitivewordrolesensitive_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::sensitivewordrolesensitive >*
      mutable_sensitivewordrolesensitive_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_sensitivewordrolesensitive)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::sensitivewordrolesensitive > sensitivewordrolesensitive_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_sensitiveword_2eproto();
  friend void protobuf_AssignDesc_sensitiveword_2eproto();
  friend void protobuf_ShutdownFile_sensitiveword_2eproto();

  void InitAsDefaultInstance();
  static Sheet_sensitivewordrolesensitive* default_instance_;
};
// ===================================================================


// ===================================================================

// sensitivewordsensitive_word

// optional int32 id = 1;
inline bool sensitivewordsensitive_word::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void sensitivewordsensitive_word::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void sensitivewordsensitive_word::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void sensitivewordsensitive_word::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 sensitivewordsensitive_word::id() const {
  return id_;
}
inline void sensitivewordsensitive_word::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// optional string sensitiveWord = 2;
inline bool sensitivewordsensitive_word::has_sensitiveword() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void sensitivewordsensitive_word::set_has_sensitiveword() {
  _has_bits_[0] |= 0x00000002u;
}
inline void sensitivewordsensitive_word::clear_has_sensitiveword() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void sensitivewordsensitive_word::clear_sensitiveword() {
  if (sensitiveword_ != &::google::protobuf::internal::kEmptyString) {
    sensitiveword_->clear();
  }
  clear_has_sensitiveword();
}
inline const ::std::string& sensitivewordsensitive_word::sensitiveword() const {
  return *sensitiveword_;
}
inline void sensitivewordsensitive_word::set_sensitiveword(const ::std::string& value) {
  set_has_sensitiveword();
  if (sensitiveword_ == &::google::protobuf::internal::kEmptyString) {
    sensitiveword_ = new ::std::string;
  }
  sensitiveword_->assign(value);
}
inline void sensitivewordsensitive_word::set_sensitiveword(const char* value) {
  set_has_sensitiveword();
  if (sensitiveword_ == &::google::protobuf::internal::kEmptyString) {
    sensitiveword_ = new ::std::string;
  }
  sensitiveword_->assign(value);
}
inline void sensitivewordsensitive_word::set_sensitiveword(const char* value, size_t size) {
  set_has_sensitiveword();
  if (sensitiveword_ == &::google::protobuf::internal::kEmptyString) {
    sensitiveword_ = new ::std::string;
  }
  sensitiveword_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* sensitivewordsensitive_word::mutable_sensitiveword() {
  set_has_sensitiveword();
  if (sensitiveword_ == &::google::protobuf::internal::kEmptyString) {
    sensitiveword_ = new ::std::string;
  }
  return sensitiveword_;
}
inline ::std::string* sensitivewordsensitive_word::release_sensitiveword() {
  clear_has_sensitiveword();
  if (sensitiveword_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = sensitiveword_;
    sensitiveword_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void sensitivewordsensitive_word::set_allocated_sensitiveword(::std::string* sensitiveword) {
  if (sensitiveword_ != &::google::protobuf::internal::kEmptyString) {
    delete sensitiveword_;
  }
  if (sensitiveword) {
    set_has_sensitiveword();
    sensitiveword_ = sensitiveword;
  } else {
    clear_has_sensitiveword();
    sensitiveword_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// Sheet_sensitivewordsensitive_word

// repeated .proto_ff.sensitivewordsensitive_word sensitivewordsensitive_word_List = 1;
inline int Sheet_sensitivewordsensitive_word::sensitivewordsensitive_word_list_size() const {
  return sensitivewordsensitive_word_list_.size();
}
inline void Sheet_sensitivewordsensitive_word::clear_sensitivewordsensitive_word_list() {
  sensitivewordsensitive_word_list_.Clear();
}
inline const ::proto_ff::sensitivewordsensitive_word& Sheet_sensitivewordsensitive_word::sensitivewordsensitive_word_list(int index) const {
  return sensitivewordsensitive_word_list_.Get(index);
}
inline ::proto_ff::sensitivewordsensitive_word* Sheet_sensitivewordsensitive_word::mutable_sensitivewordsensitive_word_list(int index) {
  return sensitivewordsensitive_word_list_.Mutable(index);
}
inline ::proto_ff::sensitivewordsensitive_word* Sheet_sensitivewordsensitive_word::add_sensitivewordsensitive_word_list() {
  return sensitivewordsensitive_word_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::sensitivewordsensitive_word >&
Sheet_sensitivewordsensitive_word::sensitivewordsensitive_word_list() const {
  return sensitivewordsensitive_word_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::sensitivewordsensitive_word >*
Sheet_sensitivewordsensitive_word::mutable_sensitivewordsensitive_word_list() {
  return &sensitivewordsensitive_word_list_;
}

// -------------------------------------------------------------------

// sensitivewordrolesensitive

// optional int32 id = 1;
inline bool sensitivewordrolesensitive::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void sensitivewordrolesensitive::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void sensitivewordrolesensitive::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void sensitivewordrolesensitive::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 sensitivewordrolesensitive::id() const {
  return id_;
}
inline void sensitivewordrolesensitive::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// optional string sensitiveWord = 2;
inline bool sensitivewordrolesensitive::has_sensitiveword() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void sensitivewordrolesensitive::set_has_sensitiveword() {
  _has_bits_[0] |= 0x00000002u;
}
inline void sensitivewordrolesensitive::clear_has_sensitiveword() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void sensitivewordrolesensitive::clear_sensitiveword() {
  if (sensitiveword_ != &::google::protobuf::internal::kEmptyString) {
    sensitiveword_->clear();
  }
  clear_has_sensitiveword();
}
inline const ::std::string& sensitivewordrolesensitive::sensitiveword() const {
  return *sensitiveword_;
}
inline void sensitivewordrolesensitive::set_sensitiveword(const ::std::string& value) {
  set_has_sensitiveword();
  if (sensitiveword_ == &::google::protobuf::internal::kEmptyString) {
    sensitiveword_ = new ::std::string;
  }
  sensitiveword_->assign(value);
}
inline void sensitivewordrolesensitive::set_sensitiveword(const char* value) {
  set_has_sensitiveword();
  if (sensitiveword_ == &::google::protobuf::internal::kEmptyString) {
    sensitiveword_ = new ::std::string;
  }
  sensitiveword_->assign(value);
}
inline void sensitivewordrolesensitive::set_sensitiveword(const char* value, size_t size) {
  set_has_sensitiveword();
  if (sensitiveword_ == &::google::protobuf::internal::kEmptyString) {
    sensitiveword_ = new ::std::string;
  }
  sensitiveword_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* sensitivewordrolesensitive::mutable_sensitiveword() {
  set_has_sensitiveword();
  if (sensitiveword_ == &::google::protobuf::internal::kEmptyString) {
    sensitiveword_ = new ::std::string;
  }
  return sensitiveword_;
}
inline ::std::string* sensitivewordrolesensitive::release_sensitiveword() {
  clear_has_sensitiveword();
  if (sensitiveword_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = sensitiveword_;
    sensitiveword_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void sensitivewordrolesensitive::set_allocated_sensitiveword(::std::string* sensitiveword) {
  if (sensitiveword_ != &::google::protobuf::internal::kEmptyString) {
    delete sensitiveword_;
  }
  if (sensitiveword) {
    set_has_sensitiveword();
    sensitiveword_ = sensitiveword;
  } else {
    clear_has_sensitiveword();
    sensitiveword_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// Sheet_sensitivewordrolesensitive

// repeated .proto_ff.sensitivewordrolesensitive sensitivewordrolesensitive_List = 1;
inline int Sheet_sensitivewordrolesensitive::sensitivewordrolesensitive_list_size() const {
  return sensitivewordrolesensitive_list_.size();
}
inline void Sheet_sensitivewordrolesensitive::clear_sensitivewordrolesensitive_list() {
  sensitivewordrolesensitive_list_.Clear();
}
inline const ::proto_ff::sensitivewordrolesensitive& Sheet_sensitivewordrolesensitive::sensitivewordrolesensitive_list(int index) const {
  return sensitivewordrolesensitive_list_.Get(index);
}
inline ::proto_ff::sensitivewordrolesensitive* Sheet_sensitivewordrolesensitive::mutable_sensitivewordrolesensitive_list(int index) {
  return sensitivewordrolesensitive_list_.Mutable(index);
}
inline ::proto_ff::sensitivewordrolesensitive* Sheet_sensitivewordrolesensitive::add_sensitivewordrolesensitive_list() {
  return sensitivewordrolesensitive_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::sensitivewordrolesensitive >&
Sheet_sensitivewordrolesensitive::sensitivewordrolesensitive_list() const {
  return sensitivewordrolesensitive_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::sensitivewordrolesensitive >*
Sheet_sensitivewordrolesensitive::mutable_sensitivewordrolesensitive_list() {
  return &sensitivewordrolesensitive_list_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto_ff

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_sensitiveword_2eproto__INCLUDED
