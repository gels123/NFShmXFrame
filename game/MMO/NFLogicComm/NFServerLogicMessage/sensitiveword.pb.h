// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: sensitiveword.proto

#ifndef PROTOBUF_sensitiveword_2eproto__INCLUDED
#define PROTOBUF_sensitiveword_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "yd_fieldoptions.pb.h"
// @@protoc_insertion_point(includes)

namespace proto_ff {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_sensitiveword_2eproto();
void protobuf_AssignDesc_sensitiveword_2eproto();
void protobuf_ShutdownFile_sensitiveword_2eproto();

class E_SensitivewordSensitive_word;
class Sheet_SensitivewordSensitive_word;
class E_SensitivewordRolesensitive;
class Sheet_SensitivewordRolesensitive;

// ===================================================================

class E_SensitivewordSensitive_word : public ::google::protobuf::Message {
 public:
  E_SensitivewordSensitive_word();
  virtual ~E_SensitivewordSensitive_word();

  E_SensitivewordSensitive_word(const E_SensitivewordSensitive_word& from);

  inline E_SensitivewordSensitive_word& operator=(const E_SensitivewordSensitive_word& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_SensitivewordSensitive_word& default_instance();

  void Swap(E_SensitivewordSensitive_word* other);

  // implements Message ----------------------------------------------

  E_SensitivewordSensitive_word* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_SensitivewordSensitive_word& from);
  void MergeFrom(const E_SensitivewordSensitive_word& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 m_id = 1;
  inline bool has_m_id() const;
  inline void clear_m_id();
  static const int kMIdFieldNumber = 1;
  inline ::google::protobuf::int32 m_id() const;
  inline void set_m_id(::google::protobuf::int32 value);

  // optional string m_sensitiveword = 2;
  inline bool has_m_sensitiveword() const;
  inline void clear_m_sensitiveword();
  static const int kMSensitivewordFieldNumber = 2;
  inline const ::std::string& m_sensitiveword() const;
  inline void set_m_sensitiveword(const ::std::string& value);
  inline void set_m_sensitiveword(const char* value);
  inline void set_m_sensitiveword(const char* value, size_t size);
  inline ::std::string* mutable_m_sensitiveword();
  inline ::std::string* release_m_sensitiveword();
  inline void set_allocated_m_sensitiveword(::std::string* m_sensitiveword);

  // @@protoc_insertion_point(class_scope:proto_ff.E_SensitivewordSensitive_word)
 private:
  inline void set_has_m_id();
  inline void clear_has_m_id();
  inline void set_has_m_sensitiveword();
  inline void clear_has_m_sensitiveword();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* m_sensitiveword_;
  ::google::protobuf::int32 m_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_sensitiveword_2eproto();
  friend void protobuf_AssignDesc_sensitiveword_2eproto();
  friend void protobuf_ShutdownFile_sensitiveword_2eproto();

  void InitAsDefaultInstance();
  static E_SensitivewordSensitive_word* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_SensitivewordSensitive_word : public ::google::protobuf::Message {
 public:
  Sheet_SensitivewordSensitive_word();
  virtual ~Sheet_SensitivewordSensitive_word();

  Sheet_SensitivewordSensitive_word(const Sheet_SensitivewordSensitive_word& from);

  inline Sheet_SensitivewordSensitive_word& operator=(const Sheet_SensitivewordSensitive_word& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_SensitivewordSensitive_word& default_instance();

  void Swap(Sheet_SensitivewordSensitive_word* other);

  // implements Message ----------------------------------------------

  Sheet_SensitivewordSensitive_word* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_SensitivewordSensitive_word& from);
  void MergeFrom(const Sheet_SensitivewordSensitive_word& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.E_SensitivewordSensitive_word E_SensitivewordSensitive_word_List = 1;
  inline int e_sensitivewordsensitive_word_list_size() const;
  inline void clear_e_sensitivewordsensitive_word_list();
  static const int kESensitivewordSensitiveWordListFieldNumber = 1;
  inline const ::proto_ff::E_SensitivewordSensitive_word& e_sensitivewordsensitive_word_list(int index) const;
  inline ::proto_ff::E_SensitivewordSensitive_word* mutable_e_sensitivewordsensitive_word_list(int index);
  inline ::proto_ff::E_SensitivewordSensitive_word* add_e_sensitivewordsensitive_word_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_SensitivewordSensitive_word >&
      e_sensitivewordsensitive_word_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_SensitivewordSensitive_word >*
      mutable_e_sensitivewordsensitive_word_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_SensitivewordSensitive_word)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_SensitivewordSensitive_word > e_sensitivewordsensitive_word_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_sensitiveword_2eproto();
  friend void protobuf_AssignDesc_sensitiveword_2eproto();
  friend void protobuf_ShutdownFile_sensitiveword_2eproto();

  void InitAsDefaultInstance();
  static Sheet_SensitivewordSensitive_word* default_instance_;
};
// -------------------------------------------------------------------

class E_SensitivewordRolesensitive : public ::google::protobuf::Message {
 public:
  E_SensitivewordRolesensitive();
  virtual ~E_SensitivewordRolesensitive();

  E_SensitivewordRolesensitive(const E_SensitivewordRolesensitive& from);

  inline E_SensitivewordRolesensitive& operator=(const E_SensitivewordRolesensitive& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_SensitivewordRolesensitive& default_instance();

  void Swap(E_SensitivewordRolesensitive* other);

  // implements Message ----------------------------------------------

  E_SensitivewordRolesensitive* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_SensitivewordRolesensitive& from);
  void MergeFrom(const E_SensitivewordRolesensitive& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 m_id = 1;
  inline bool has_m_id() const;
  inline void clear_m_id();
  static const int kMIdFieldNumber = 1;
  inline ::google::protobuf::int32 m_id() const;
  inline void set_m_id(::google::protobuf::int32 value);

  // optional string m_sensitiveword = 2;
  inline bool has_m_sensitiveword() const;
  inline void clear_m_sensitiveword();
  static const int kMSensitivewordFieldNumber = 2;
  inline const ::std::string& m_sensitiveword() const;
  inline void set_m_sensitiveword(const ::std::string& value);
  inline void set_m_sensitiveword(const char* value);
  inline void set_m_sensitiveword(const char* value, size_t size);
  inline ::std::string* mutable_m_sensitiveword();
  inline ::std::string* release_m_sensitiveword();
  inline void set_allocated_m_sensitiveword(::std::string* m_sensitiveword);

  // @@protoc_insertion_point(class_scope:proto_ff.E_SensitivewordRolesensitive)
 private:
  inline void set_has_m_id();
  inline void clear_has_m_id();
  inline void set_has_m_sensitiveword();
  inline void clear_has_m_sensitiveword();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* m_sensitiveword_;
  ::google::protobuf::int32 m_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_sensitiveword_2eproto();
  friend void protobuf_AssignDesc_sensitiveword_2eproto();
  friend void protobuf_ShutdownFile_sensitiveword_2eproto();

  void InitAsDefaultInstance();
  static E_SensitivewordRolesensitive* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_SensitivewordRolesensitive : public ::google::protobuf::Message {
 public:
  Sheet_SensitivewordRolesensitive();
  virtual ~Sheet_SensitivewordRolesensitive();

  Sheet_SensitivewordRolesensitive(const Sheet_SensitivewordRolesensitive& from);

  inline Sheet_SensitivewordRolesensitive& operator=(const Sheet_SensitivewordRolesensitive& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_SensitivewordRolesensitive& default_instance();

  void Swap(Sheet_SensitivewordRolesensitive* other);

  // implements Message ----------------------------------------------

  Sheet_SensitivewordRolesensitive* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_SensitivewordRolesensitive& from);
  void MergeFrom(const Sheet_SensitivewordRolesensitive& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.E_SensitivewordRolesensitive E_SensitivewordRolesensitive_List = 1;
  inline int e_sensitivewordrolesensitive_list_size() const;
  inline void clear_e_sensitivewordrolesensitive_list();
  static const int kESensitivewordRolesensitiveListFieldNumber = 1;
  inline const ::proto_ff::E_SensitivewordRolesensitive& e_sensitivewordrolesensitive_list(int index) const;
  inline ::proto_ff::E_SensitivewordRolesensitive* mutable_e_sensitivewordrolesensitive_list(int index);
  inline ::proto_ff::E_SensitivewordRolesensitive* add_e_sensitivewordrolesensitive_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_SensitivewordRolesensitive >&
      e_sensitivewordrolesensitive_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_SensitivewordRolesensitive >*
      mutable_e_sensitivewordrolesensitive_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_SensitivewordRolesensitive)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_SensitivewordRolesensitive > e_sensitivewordrolesensitive_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_sensitiveword_2eproto();
  friend void protobuf_AssignDesc_sensitiveword_2eproto();
  friend void protobuf_ShutdownFile_sensitiveword_2eproto();

  void InitAsDefaultInstance();
  static Sheet_SensitivewordRolesensitive* default_instance_;
};
// ===================================================================


// ===================================================================

// E_SensitivewordSensitive_word

// optional int32 m_id = 1;
inline bool E_SensitivewordSensitive_word::has_m_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_SensitivewordSensitive_word::set_has_m_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_SensitivewordSensitive_word::clear_has_m_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_SensitivewordSensitive_word::clear_m_id() {
  m_id_ = 0;
  clear_has_m_id();
}
inline ::google::protobuf::int32 E_SensitivewordSensitive_word::m_id() const {
  return m_id_;
}
inline void E_SensitivewordSensitive_word::set_m_id(::google::protobuf::int32 value) {
  set_has_m_id();
  m_id_ = value;
}

// optional string m_sensitiveword = 2;
inline bool E_SensitivewordSensitive_word::has_m_sensitiveword() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_SensitivewordSensitive_word::set_has_m_sensitiveword() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_SensitivewordSensitive_word::clear_has_m_sensitiveword() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_SensitivewordSensitive_word::clear_m_sensitiveword() {
  if (m_sensitiveword_ != &::google::protobuf::internal::kEmptyString) {
    m_sensitiveword_->clear();
  }
  clear_has_m_sensitiveword();
}
inline const ::std::string& E_SensitivewordSensitive_word::m_sensitiveword() const {
  return *m_sensitiveword_;
}
inline void E_SensitivewordSensitive_word::set_m_sensitiveword(const ::std::string& value) {
  set_has_m_sensitiveword();
  if (m_sensitiveword_ == &::google::protobuf::internal::kEmptyString) {
    m_sensitiveword_ = new ::std::string;
  }
  m_sensitiveword_->assign(value);
}
inline void E_SensitivewordSensitive_word::set_m_sensitiveword(const char* value) {
  set_has_m_sensitiveword();
  if (m_sensitiveword_ == &::google::protobuf::internal::kEmptyString) {
    m_sensitiveword_ = new ::std::string;
  }
  m_sensitiveword_->assign(value);
}
inline void E_SensitivewordSensitive_word::set_m_sensitiveword(const char* value, size_t size) {
  set_has_m_sensitiveword();
  if (m_sensitiveword_ == &::google::protobuf::internal::kEmptyString) {
    m_sensitiveword_ = new ::std::string;
  }
  m_sensitiveword_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* E_SensitivewordSensitive_word::mutable_m_sensitiveword() {
  set_has_m_sensitiveword();
  if (m_sensitiveword_ == &::google::protobuf::internal::kEmptyString) {
    m_sensitiveword_ = new ::std::string;
  }
  return m_sensitiveword_;
}
inline ::std::string* E_SensitivewordSensitive_word::release_m_sensitiveword() {
  clear_has_m_sensitiveword();
  if (m_sensitiveword_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = m_sensitiveword_;
    m_sensitiveword_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void E_SensitivewordSensitive_word::set_allocated_m_sensitiveword(::std::string* m_sensitiveword) {
  if (m_sensitiveword_ != &::google::protobuf::internal::kEmptyString) {
    delete m_sensitiveword_;
  }
  if (m_sensitiveword) {
    set_has_m_sensitiveword();
    m_sensitiveword_ = m_sensitiveword;
  } else {
    clear_has_m_sensitiveword();
    m_sensitiveword_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// Sheet_SensitivewordSensitive_word

// repeated .proto_ff.E_SensitivewordSensitive_word E_SensitivewordSensitive_word_List = 1;
inline int Sheet_SensitivewordSensitive_word::e_sensitivewordsensitive_word_list_size() const {
  return e_sensitivewordsensitive_word_list_.size();
}
inline void Sheet_SensitivewordSensitive_word::clear_e_sensitivewordsensitive_word_list() {
  e_sensitivewordsensitive_word_list_.Clear();
}
inline const ::proto_ff::E_SensitivewordSensitive_word& Sheet_SensitivewordSensitive_word::e_sensitivewordsensitive_word_list(int index) const {
  return e_sensitivewordsensitive_word_list_.Get(index);
}
inline ::proto_ff::E_SensitivewordSensitive_word* Sheet_SensitivewordSensitive_word::mutable_e_sensitivewordsensitive_word_list(int index) {
  return e_sensitivewordsensitive_word_list_.Mutable(index);
}
inline ::proto_ff::E_SensitivewordSensitive_word* Sheet_SensitivewordSensitive_word::add_e_sensitivewordsensitive_word_list() {
  return e_sensitivewordsensitive_word_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_SensitivewordSensitive_word >&
Sheet_SensitivewordSensitive_word::e_sensitivewordsensitive_word_list() const {
  return e_sensitivewordsensitive_word_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_SensitivewordSensitive_word >*
Sheet_SensitivewordSensitive_word::mutable_e_sensitivewordsensitive_word_list() {
  return &e_sensitivewordsensitive_word_list_;
}

// -------------------------------------------------------------------

// E_SensitivewordRolesensitive

// optional int32 m_id = 1;
inline bool E_SensitivewordRolesensitive::has_m_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_SensitivewordRolesensitive::set_has_m_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_SensitivewordRolesensitive::clear_has_m_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_SensitivewordRolesensitive::clear_m_id() {
  m_id_ = 0;
  clear_has_m_id();
}
inline ::google::protobuf::int32 E_SensitivewordRolesensitive::m_id() const {
  return m_id_;
}
inline void E_SensitivewordRolesensitive::set_m_id(::google::protobuf::int32 value) {
  set_has_m_id();
  m_id_ = value;
}

// optional string m_sensitiveword = 2;
inline bool E_SensitivewordRolesensitive::has_m_sensitiveword() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_SensitivewordRolesensitive::set_has_m_sensitiveword() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_SensitivewordRolesensitive::clear_has_m_sensitiveword() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_SensitivewordRolesensitive::clear_m_sensitiveword() {
  if (m_sensitiveword_ != &::google::protobuf::internal::kEmptyString) {
    m_sensitiveword_->clear();
  }
  clear_has_m_sensitiveword();
}
inline const ::std::string& E_SensitivewordRolesensitive::m_sensitiveword() const {
  return *m_sensitiveword_;
}
inline void E_SensitivewordRolesensitive::set_m_sensitiveword(const ::std::string& value) {
  set_has_m_sensitiveword();
  if (m_sensitiveword_ == &::google::protobuf::internal::kEmptyString) {
    m_sensitiveword_ = new ::std::string;
  }
  m_sensitiveword_->assign(value);
}
inline void E_SensitivewordRolesensitive::set_m_sensitiveword(const char* value) {
  set_has_m_sensitiveword();
  if (m_sensitiveword_ == &::google::protobuf::internal::kEmptyString) {
    m_sensitiveword_ = new ::std::string;
  }
  m_sensitiveword_->assign(value);
}
inline void E_SensitivewordRolesensitive::set_m_sensitiveword(const char* value, size_t size) {
  set_has_m_sensitiveword();
  if (m_sensitiveword_ == &::google::protobuf::internal::kEmptyString) {
    m_sensitiveword_ = new ::std::string;
  }
  m_sensitiveword_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* E_SensitivewordRolesensitive::mutable_m_sensitiveword() {
  set_has_m_sensitiveword();
  if (m_sensitiveword_ == &::google::protobuf::internal::kEmptyString) {
    m_sensitiveword_ = new ::std::string;
  }
  return m_sensitiveword_;
}
inline ::std::string* E_SensitivewordRolesensitive::release_m_sensitiveword() {
  clear_has_m_sensitiveword();
  if (m_sensitiveword_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = m_sensitiveword_;
    m_sensitiveword_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void E_SensitivewordRolesensitive::set_allocated_m_sensitiveword(::std::string* m_sensitiveword) {
  if (m_sensitiveword_ != &::google::protobuf::internal::kEmptyString) {
    delete m_sensitiveword_;
  }
  if (m_sensitiveword) {
    set_has_m_sensitiveword();
    m_sensitiveword_ = m_sensitiveword;
  } else {
    clear_has_m_sensitiveword();
    m_sensitiveword_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// Sheet_SensitivewordRolesensitive

// repeated .proto_ff.E_SensitivewordRolesensitive E_SensitivewordRolesensitive_List = 1;
inline int Sheet_SensitivewordRolesensitive::e_sensitivewordrolesensitive_list_size() const {
  return e_sensitivewordrolesensitive_list_.size();
}
inline void Sheet_SensitivewordRolesensitive::clear_e_sensitivewordrolesensitive_list() {
  e_sensitivewordrolesensitive_list_.Clear();
}
inline const ::proto_ff::E_SensitivewordRolesensitive& Sheet_SensitivewordRolesensitive::e_sensitivewordrolesensitive_list(int index) const {
  return e_sensitivewordrolesensitive_list_.Get(index);
}
inline ::proto_ff::E_SensitivewordRolesensitive* Sheet_SensitivewordRolesensitive::mutable_e_sensitivewordrolesensitive_list(int index) {
  return e_sensitivewordrolesensitive_list_.Mutable(index);
}
inline ::proto_ff::E_SensitivewordRolesensitive* Sheet_SensitivewordRolesensitive::add_e_sensitivewordrolesensitive_list() {
  return e_sensitivewordrolesensitive_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_SensitivewordRolesensitive >&
Sheet_SensitivewordRolesensitive::e_sensitivewordrolesensitive_list() const {
  return e_sensitivewordrolesensitive_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_SensitivewordRolesensitive >*
Sheet_SensitivewordRolesensitive::mutable_e_sensitivewordrolesensitive_list() {
  return &e_sensitivewordrolesensitive_list_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto_ff

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_sensitiveword_2eproto__INCLUDED
