// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: E_Ancientgod.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "E_Ancientgod.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace proto_ff {

namespace {

const ::google::protobuf::Descriptor* E_AncientgodAncientgodFraDesc_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_AncientgodAncientgodFraDesc_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_AncientgodAncientgod_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_AncientgodAncientgod_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_AncientgodAncientgod_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_AncientgodAncientgod_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_AncientgodLvupAttributeDesc_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_AncientgodLvupAttributeDesc_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_AncientgodLvup_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_AncientgodLvup_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_AncientgodLvup_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_AncientgodLvup_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_AncientgodEquipvalue_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_AncientgodEquipvalue_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_AncientgodEquipvalue_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_AncientgodEquipvalue_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_AncientgodBlessAttributeDesc_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_AncientgodBlessAttributeDesc_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_AncientgodBless_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_AncientgodBless_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_AncientgodBless_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_AncientgodBless_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_AncientgodAdvanceAttributeDesc_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_AncientgodAdvanceAttributeDesc_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_AncientgodAdvance_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_AncientgodAdvance_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_AncientgodAdvance_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_AncientgodAdvance_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_AncientgodAttAttributeDesc_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_AncientgodAttAttributeDesc_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_AncientgodAtt_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_AncientgodAtt_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_AncientgodAtt_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_AncientgodAtt_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_AncientgodStarcollectAttributeDesc_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_AncientgodStarcollectAttributeDesc_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_AncientgodStarcollect_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_AncientgodStarcollect_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_AncientgodStarcollect_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_AncientgodStarcollect_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_E_5fAncientgod_2eproto() {
  protobuf_AddDesc_E_5fAncientgod_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "E_Ancientgod.proto");
  GOOGLE_CHECK(file != NULL);
  E_AncientgodAncientgodFraDesc_descriptor_ = file->message_type(0);
  static const int E_AncientgodAncientgodFraDesc_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_AncientgodAncientgodFraDesc, m_attid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_AncientgodAncientgodFraDesc, m_num_),
  };
  E_AncientgodAncientgodFraDesc_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_AncientgodAncientgodFraDesc_descriptor_,
      E_AncientgodAncientgodFraDesc::default_instance_,
      E_AncientgodAncientgodFraDesc_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_AncientgodAncientgodFraDesc, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_AncientgodAncientgodFraDesc, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_AncientgodAncientgodFraDesc));
  E_AncientgodAncientgod_descriptor_ = file->message_type(1);
  static const int E_AncientgodAncientgod_offsets_[9] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_AncientgodAncientgod, m_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_AncientgodAncientgod, m_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_AncientgodAncientgod, m_parama_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_AncientgodAncientgod, m_showlv_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_AncientgodAncientgod, m_unlocklv_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_AncientgodAncientgod, m_condition_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_AncientgodAncientgod, m_lvlimit_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_AncientgodAncientgod, m_stars_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_AncientgodAncientgod, m_fra_),
  };
  E_AncientgodAncientgod_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_AncientgodAncientgod_descriptor_,
      E_AncientgodAncientgod::default_instance_,
      E_AncientgodAncientgod_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_AncientgodAncientgod, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_AncientgodAncientgod, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_AncientgodAncientgod));
  Sheet_AncientgodAncientgod_descriptor_ = file->message_type(2);
  static const int Sheet_AncientgodAncientgod_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_AncientgodAncientgod, e_ancientgodancientgod_list_),
  };
  Sheet_AncientgodAncientgod_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_AncientgodAncientgod_descriptor_,
      Sheet_AncientgodAncientgod::default_instance_,
      Sheet_AncientgodAncientgod_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_AncientgodAncientgod, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_AncientgodAncientgod, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_AncientgodAncientgod));
  E_AncientgodLvupAttributeDesc_descriptor_ = file->message_type(3);
  static const int E_AncientgodLvupAttributeDesc_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_AncientgodLvupAttributeDesc, m_value_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_AncientgodLvupAttributeDesc, m_type_),
  };
  E_AncientgodLvupAttributeDesc_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_AncientgodLvupAttributeDesc_descriptor_,
      E_AncientgodLvupAttributeDesc::default_instance_,
      E_AncientgodLvupAttributeDesc_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_AncientgodLvupAttributeDesc, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_AncientgodLvupAttributeDesc, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_AncientgodLvupAttributeDesc));
  E_AncientgodLvup_descriptor_ = file->message_type(4);
  static const int E_AncientgodLvup_offsets_[9] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_AncientgodLvup, m_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_AncientgodLvup, m_lv_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_AncientgodLvup, m_ancientid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_AncientgodLvup, m_itemid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_AncientgodLvup, m_mallid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_AncientgodLvup, m_num_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_AncientgodLvup, m_initialvalue_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_AncientgodLvup, m_position_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_AncientgodLvup, m_attribute_),
  };
  E_AncientgodLvup_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_AncientgodLvup_descriptor_,
      E_AncientgodLvup::default_instance_,
      E_AncientgodLvup_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_AncientgodLvup, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_AncientgodLvup, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_AncientgodLvup));
  Sheet_AncientgodLvup_descriptor_ = file->message_type(5);
  static const int Sheet_AncientgodLvup_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_AncientgodLvup, e_ancientgodlvup_list_),
  };
  Sheet_AncientgodLvup_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_AncientgodLvup_descriptor_,
      Sheet_AncientgodLvup::default_instance_,
      Sheet_AncientgodLvup_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_AncientgodLvup, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_AncientgodLvup, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_AncientgodLvup));
  E_AncientgodEquipvalue_descriptor_ = file->message_type(6);
  static const int E_AncientgodEquipvalue_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_AncientgodEquipvalue, m_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_AncientgodEquipvalue, m_quality_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_AncientgodEquipvalue, m_wearquality_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_AncientgodEquipvalue, m_star_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_AncientgodEquipvalue, m_value_),
  };
  E_AncientgodEquipvalue_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_AncientgodEquipvalue_descriptor_,
      E_AncientgodEquipvalue::default_instance_,
      E_AncientgodEquipvalue_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_AncientgodEquipvalue, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_AncientgodEquipvalue, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_AncientgodEquipvalue));
  Sheet_AncientgodEquipvalue_descriptor_ = file->message_type(7);
  static const int Sheet_AncientgodEquipvalue_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_AncientgodEquipvalue, e_ancientgodequipvalue_list_),
  };
  Sheet_AncientgodEquipvalue_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_AncientgodEquipvalue_descriptor_,
      Sheet_AncientgodEquipvalue::default_instance_,
      Sheet_AncientgodEquipvalue_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_AncientgodEquipvalue, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_AncientgodEquipvalue, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_AncientgodEquipvalue));
  E_AncientgodBlessAttributeDesc_descriptor_ = file->message_type(8);
  static const int E_AncientgodBlessAttributeDesc_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_AncientgodBlessAttributeDesc, m_value_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_AncientgodBlessAttributeDesc, m_type_),
  };
  E_AncientgodBlessAttributeDesc_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_AncientgodBlessAttributeDesc_descriptor_,
      E_AncientgodBlessAttributeDesc::default_instance_,
      E_AncientgodBlessAttributeDesc_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_AncientgodBlessAttributeDesc, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_AncientgodBlessAttributeDesc, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_AncientgodBlessAttributeDesc));
  E_AncientgodBless_descriptor_ = file->message_type(9);
  static const int E_AncientgodBless_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_AncientgodBless, m_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_AncientgodBless, m_ancientid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_AncientgodBless, m_position_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_AncientgodBless, m_itemid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_AncientgodBless, m_num_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_AncientgodBless, m_attribute_),
  };
  E_AncientgodBless_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_AncientgodBless_descriptor_,
      E_AncientgodBless::default_instance_,
      E_AncientgodBless_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_AncientgodBless, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_AncientgodBless, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_AncientgodBless));
  Sheet_AncientgodBless_descriptor_ = file->message_type(10);
  static const int Sheet_AncientgodBless_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_AncientgodBless, e_ancientgodbless_list_),
  };
  Sheet_AncientgodBless_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_AncientgodBless_descriptor_,
      Sheet_AncientgodBless::default_instance_,
      Sheet_AncientgodBless_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_AncientgodBless, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_AncientgodBless, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_AncientgodBless));
  E_AncientgodAdvanceAttributeDesc_descriptor_ = file->message_type(11);
  static const int E_AncientgodAdvanceAttributeDesc_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_AncientgodAdvanceAttributeDesc, m_star_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_AncientgodAdvanceAttributeDesc, m_value_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_AncientgodAdvanceAttributeDesc, m_type_),
  };
  E_AncientgodAdvanceAttributeDesc_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_AncientgodAdvanceAttributeDesc_descriptor_,
      E_AncientgodAdvanceAttributeDesc::default_instance_,
      E_AncientgodAdvanceAttributeDesc_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_AncientgodAdvanceAttributeDesc, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_AncientgodAdvanceAttributeDesc, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_AncientgodAdvanceAttributeDesc));
  E_AncientgodAdvance_descriptor_ = file->message_type(12);
  static const int E_AncientgodAdvance_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_AncientgodAdvance, m_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_AncientgodAdvance, m_ancientid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_AncientgodAdvance, m_position_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_AncientgodAdvance, m_attribute_),
  };
  E_AncientgodAdvance_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_AncientgodAdvance_descriptor_,
      E_AncientgodAdvance::default_instance_,
      E_AncientgodAdvance_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_AncientgodAdvance, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_AncientgodAdvance, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_AncientgodAdvance));
  Sheet_AncientgodAdvance_descriptor_ = file->message_type(13);
  static const int Sheet_AncientgodAdvance_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_AncientgodAdvance, e_ancientgodadvance_list_),
  };
  Sheet_AncientgodAdvance_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_AncientgodAdvance_descriptor_,
      Sheet_AncientgodAdvance::default_instance_,
      Sheet_AncientgodAdvance_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_AncientgodAdvance, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_AncientgodAdvance, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_AncientgodAdvance));
  E_AncientgodAttAttributeDesc_descriptor_ = file->message_type(14);
  static const int E_AncientgodAttAttributeDesc_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_AncientgodAttAttributeDesc, m_value_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_AncientgodAttAttributeDesc, m_type_),
  };
  E_AncientgodAttAttributeDesc_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_AncientgodAttAttributeDesc_descriptor_,
      E_AncientgodAttAttributeDesc::default_instance_,
      E_AncientgodAttAttributeDesc_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_AncientgodAttAttributeDesc, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_AncientgodAttAttributeDesc, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_AncientgodAttAttributeDesc));
  E_AncientgodAtt_descriptor_ = file->message_type(15);
  static const int E_AncientgodAtt_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_AncientgodAtt, m_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_AncientgodAtt, m_attribute_),
  };
  E_AncientgodAtt_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_AncientgodAtt_descriptor_,
      E_AncientgodAtt::default_instance_,
      E_AncientgodAtt_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_AncientgodAtt, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_AncientgodAtt, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_AncientgodAtt));
  Sheet_AncientgodAtt_descriptor_ = file->message_type(16);
  static const int Sheet_AncientgodAtt_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_AncientgodAtt, e_ancientgodatt_list_),
  };
  Sheet_AncientgodAtt_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_AncientgodAtt_descriptor_,
      Sheet_AncientgodAtt::default_instance_,
      Sheet_AncientgodAtt_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_AncientgodAtt, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_AncientgodAtt, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_AncientgodAtt));
  E_AncientgodStarcollectAttributeDesc_descriptor_ = file->message_type(17);
  static const int E_AncientgodStarcollectAttributeDesc_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_AncientgodStarcollectAttributeDesc, m_value_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_AncientgodStarcollectAttributeDesc, m_type_),
  };
  E_AncientgodStarcollectAttributeDesc_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_AncientgodStarcollectAttributeDesc_descriptor_,
      E_AncientgodStarcollectAttributeDesc::default_instance_,
      E_AncientgodStarcollectAttributeDesc_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_AncientgodStarcollectAttributeDesc, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_AncientgodStarcollectAttributeDesc, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_AncientgodStarcollectAttributeDesc));
  E_AncientgodStarcollect_descriptor_ = file->message_type(18);
  static const int E_AncientgodStarcollect_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_AncientgodStarcollect, m_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_AncientgodStarcollect, m_attribute_),
  };
  E_AncientgodStarcollect_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_AncientgodStarcollect_descriptor_,
      E_AncientgodStarcollect::default_instance_,
      E_AncientgodStarcollect_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_AncientgodStarcollect, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_AncientgodStarcollect, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_AncientgodStarcollect));
  Sheet_AncientgodStarcollect_descriptor_ = file->message_type(19);
  static const int Sheet_AncientgodStarcollect_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_AncientgodStarcollect, e_ancientgodstarcollect_list_),
  };
  Sheet_AncientgodStarcollect_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_AncientgodStarcollect_descriptor_,
      Sheet_AncientgodStarcollect::default_instance_,
      Sheet_AncientgodStarcollect_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_AncientgodStarcollect, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_AncientgodStarcollect, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_AncientgodStarcollect));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_E_5fAncientgod_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_AncientgodAncientgodFraDesc_descriptor_, &E_AncientgodAncientgodFraDesc::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_AncientgodAncientgod_descriptor_, &E_AncientgodAncientgod::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_AncientgodAncientgod_descriptor_, &Sheet_AncientgodAncientgod::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_AncientgodLvupAttributeDesc_descriptor_, &E_AncientgodLvupAttributeDesc::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_AncientgodLvup_descriptor_, &E_AncientgodLvup::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_AncientgodLvup_descriptor_, &Sheet_AncientgodLvup::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_AncientgodEquipvalue_descriptor_, &E_AncientgodEquipvalue::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_AncientgodEquipvalue_descriptor_, &Sheet_AncientgodEquipvalue::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_AncientgodBlessAttributeDesc_descriptor_, &E_AncientgodBlessAttributeDesc::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_AncientgodBless_descriptor_, &E_AncientgodBless::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_AncientgodBless_descriptor_, &Sheet_AncientgodBless::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_AncientgodAdvanceAttributeDesc_descriptor_, &E_AncientgodAdvanceAttributeDesc::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_AncientgodAdvance_descriptor_, &E_AncientgodAdvance::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_AncientgodAdvance_descriptor_, &Sheet_AncientgodAdvance::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_AncientgodAttAttributeDesc_descriptor_, &E_AncientgodAttAttributeDesc::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_AncientgodAtt_descriptor_, &E_AncientgodAtt::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_AncientgodAtt_descriptor_, &Sheet_AncientgodAtt::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_AncientgodStarcollectAttributeDesc_descriptor_, &E_AncientgodStarcollectAttributeDesc::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_AncientgodStarcollect_descriptor_, &E_AncientgodStarcollect::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_AncientgodStarcollect_descriptor_, &Sheet_AncientgodStarcollect::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_E_5fAncientgod_2eproto() {
  delete E_AncientgodAncientgodFraDesc::default_instance_;
  delete E_AncientgodAncientgodFraDesc_reflection_;
  delete E_AncientgodAncientgod::default_instance_;
  delete E_AncientgodAncientgod_reflection_;
  delete Sheet_AncientgodAncientgod::default_instance_;
  delete Sheet_AncientgodAncientgod_reflection_;
  delete E_AncientgodLvupAttributeDesc::default_instance_;
  delete E_AncientgodLvupAttributeDesc_reflection_;
  delete E_AncientgodLvup::default_instance_;
  delete E_AncientgodLvup_reflection_;
  delete Sheet_AncientgodLvup::default_instance_;
  delete Sheet_AncientgodLvup_reflection_;
  delete E_AncientgodEquipvalue::default_instance_;
  delete E_AncientgodEquipvalue_reflection_;
  delete Sheet_AncientgodEquipvalue::default_instance_;
  delete Sheet_AncientgodEquipvalue_reflection_;
  delete E_AncientgodBlessAttributeDesc::default_instance_;
  delete E_AncientgodBlessAttributeDesc_reflection_;
  delete E_AncientgodBless::default_instance_;
  delete E_AncientgodBless_reflection_;
  delete Sheet_AncientgodBless::default_instance_;
  delete Sheet_AncientgodBless_reflection_;
  delete E_AncientgodAdvanceAttributeDesc::default_instance_;
  delete E_AncientgodAdvanceAttributeDesc_reflection_;
  delete E_AncientgodAdvance::default_instance_;
  delete E_AncientgodAdvance_reflection_;
  delete Sheet_AncientgodAdvance::default_instance_;
  delete Sheet_AncientgodAdvance_reflection_;
  delete E_AncientgodAttAttributeDesc::default_instance_;
  delete E_AncientgodAttAttributeDesc_reflection_;
  delete E_AncientgodAtt::default_instance_;
  delete E_AncientgodAtt_reflection_;
  delete Sheet_AncientgodAtt::default_instance_;
  delete Sheet_AncientgodAtt_reflection_;
  delete E_AncientgodStarcollectAttributeDesc::default_instance_;
  delete E_AncientgodStarcollectAttributeDesc_reflection_;
  delete E_AncientgodStarcollect::default_instance_;
  delete E_AncientgodStarcollect_reflection_;
  delete Sheet_AncientgodStarcollect::default_instance_;
  delete Sheet_AncientgodStarcollect_reflection_;
}

void protobuf_AddDesc_E_5fAncientgod_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::yd_fieldoptions::protobuf_AddDesc_yd_5ffieldoptions_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\022E_Ancientgod.proto\022\010proto_ff\032\025yd_field"
    "options.proto\"k\n\035E_AncientgodAncientgodF"
    "raDesc\022)\n\007m_attID\030\001 \001(\005B\030\302\377\024\024\350\247\243\351\224\201\350\216\267\345\276"
    "\227\345\261\236\346\200\247ID\022\037\n\005m_num\030\002 \001(\005B\020\302\377\024\014\350\247\243\351\224\201\346\225\260\351"
    "\207\217\"\241\003\n\026E_AncientgodAncientgod\022\032\n\004m_id\030\001 "
    "\001(\005B\014\302\377\024\010\347\245\236\347\201\265ID\022$\n\006m_name\030\002 \001(\tB\024\302\377\024\014\347"
    "\245\236\347\201\265\345\220\215\347\247\260\220\301\024@\022(\n\010m_parama\030\003 \001(\002B\026\302\377\024\022\347"
    "\245\236\347\201\265\345\223\201\350\264\250\347\263\273\346\225\260\022(\n\010m_showLv\030\004 \001(\005B\026\302\377\024"
    "\022\347\245\236\347\201\265\346\230\276\347\244\272\347\255\211\347\272\247\022*\n\nm_unlockLv\030\005 \001(\005B"
    "\026\302\377\024\022\347\245\236\347\201\265\350\247\243\351\224\201\347\255\211\347\272\247\022)\n\013m_condition\030\006"
    " \001(\tB\024\302\377\024\014\350\247\243\351\224\201\346\235\241\344\273\266\220\301\024@\022)\n\tm_lvLimit\030"
    "\007 \001(\005B\026\302\377\024\022\350\277\233\351\230\266\347\255\211\347\272\247\344\270\212\351\231\220\022\'\n\007m_stars"
    "\030\010 \001(\005B\026\302\377\024\022\351\203\250\344\275\215\350\277\233\351\230\266\346\230\237\346\225\260\022F\n\005m_fra\030"
    "\t \003(\0132\'.proto_ff.E_AncientgodAncientgodF"
    "raDescB\016\302\377\024\006\347\242\216\347\211\207\210\301\024\003\"i\n\032Sheet_Ancientg"
    "odAncientgod\022K\n\033E_AncientgodAncientgod_L"
    "ist\030\001 \003(\0132 .proto_ff.E_AncientgodAncient"
    "godB\004\210\301\024\020\"R\n\035E_AncientgodLvupAttributeDe"
    "sc\022\033\n\007m_value\030\001 \001(\005B\n\302\377\024\006\346\225\260\345\200\274\022\024\n\006m_typ"
    "e\030\002 \001(\005B\004\302\377\024\000\"\367\002\n\020E_AncientgodLvup\022\024\n\004m_"
    "id\030\001 \001(\005B\006\302\377\024\002id\022\036\n\004m_lv\030\002 \001(\005B\020\302\377\024\014\351\203\250\344"
    "\275\215\347\255\211\347\272\247\022!\n\013m_ancientID\030\003 \001(\005B\014\302\377\024\010\347\245\236\347\201"
    "\265ID\022\"\n\010m_itemID\030\004 \001(\005B\020\302\377\024\014\345\215\207\347\272\247\351\201\223\345\205\267\022"
    "\036\n\010m_mallID\030\005 \001(\005B\014\302\377\024\010\345\225\206\345\223\201ID\022\037\n\005m_num"
    "\030\006 \001(\005B\020\302\377\024\014\345\215\207\347\272\247\346\225\260\351\207\217\022+\n\016m_initialVal"
    "ue\030\007 \001(\005B\023\302\377\024\017\350\277\233\351\230\266\345\210\235\345\247\213\345\200\274\022$\n\nm_posit"
    "ion\030\010 \001(\005B\020\302\377\024\014\351\203\250\344\275\215\347\261\273\345\236\213\022R\n\013m_attribu"
    "te\030\t \003(\0132\'.proto_ff.E_AncientgodLvupAttr"
    "ibuteDescB\024\302\377\024\014\345\237\272\347\241\200\345\261\236\346\200\247\210\301\024\002\"X\n\024Sheet"
    "_AncientgodLvup\022@\n\025E_AncientgodLvup_List"
    "\030\001 \003(\0132\032.proto_ff.E_AncientgodLvupB\005\210\301\024\200"
    "\020\"\276\001\n\026E_AncientgodEquipvalue\022\024\n\004m_id\030\001 \001"
    "(\005B\006\302\377\024\002id\022#\n\tm_quality\030\002 \001(\005B\020\302\377\024\014\350\243\205\345\244"
    "\207\345\223\201\350\264\250\022\'\n\rm_wearQuality\030\003 \001(\005B\020\302\377\024\014\350\243\205\345"
    "\244\207\345\223\201\351\230\266\022\032\n\006m_star\030\004 \001(\005B\n\302\377\024\006\346\230\237\347\272\247\022$\n\007"
    "m_value\030\005 \001(\005B\023\302\377\024\017\345\210\235\345\247\213\350\277\233\345\272\246\345\200\274\"i\n\032Sh"
    "eet_AncientgodEquipvalue\022K\n\033E_Ancientgod"
    "Equipvalue_List\030\001 \003(\0132 .proto_ff.E_Ancie"
    "ntgodEquipvalueB\004\210\301\024@\"S\n\036E_AncientgodBle"
    "ssAttributeDesc\022\033\n\007m_value\030\001 \001(\005B\n\302\377\024\006\346\225"
    "\260\345\200\274\022\024\n\006m_type\030\002 \001(\005B\004\302\377\024\000\"\216\002\n\021E_Ancient"
    "godBless\022\024\n\004m_id\030\001 \001(\005B\006\302\377\024\002id\022!\n\013m_anci"
    "entID\030\002 \001(\005B\014\302\377\024\010\347\245\236\347\201\265ID\022 \n\nm_position\030"
    "\003 \001(\005B\014\302\377\024\010\351\203\250\344\275\215ID\022(\n\010m_itemID\030\004 \001(\005B\026\302"
    "\377\024\022\347\245\235\347\246\217\346\266\210\350\200\227\351\201\223\345\205\267\022\037\n\005m_num\030\005 \001(\005B\020\302\377"
    "\024\014\346\266\210\350\200\227\346\225\260\351\207\217\022S\n\013m_attribute\030\006 \003(\0132(.pr"
    "oto_ff.E_AncientgodBlessAttributeDescB\024\302"
    "\377\024\014\345\237\272\347\241\200\345\261\236\346\200\247\210\301\024\005\"[\n\025Sheet_AncientgodB"
    "less\022B\n\026E_AncientgodBless_List\030\001 \003(\0132\033.p"
    "roto_ff.E_AncientgodBlessB\005\210\301\024\200\001\"w\n E_An"
    "cientgodAdvanceAttributeDesc\022\032\n\006m_star\030\001"
    " \001(\005B\n\302\377\024\006\346\230\237\347\272\247\022\033\n\007m_value\030\002 \001(\005B\n\302\377\024\006\346"
    "\225\260\345\200\274\022\032\n\006m_type\030\003 \001(\005B\n\302\377\024\006\347\261\273\345\236\213\"\303\001\n\023E_"
    "AncientgodAdvance\022\024\n\004m_id\030\001 \001(\005B\006\302\377\024\002id\022"
    "!\n\013m_ancientID\030\002 \001(\005B\014\302\377\024\010\347\245\236\347\201\265ID\022 \n\nm_"
    "position\030\003 \001(\005B\014\302\377\024\010\351\203\250\344\275\215ID\022Q\n\013m_attrib"
    "ute\030\004 \003(\0132*.proto_ff.E_AncientgodAdvance"
    "AttributeDescB\020\302\377\024\010\345\261\236\346\200\247ID\210\301\024\024\"a\n\027Sheet"
    "_AncientgodAdvance\022F\n\030E_AncientgodAdvanc"
    "e_List\030\001 \003(\0132\035.proto_ff.E_AncientgodAdva"
    "nceB\005\210\301\024\200\001\"Q\n\034E_AncientgodAttAttributeDe"
    "sc\022\033\n\007m_value\030\001 \001(\005B\n\302\377\024\006\346\225\260\345\200\274\022\024\n\006m_typ"
    "e\030\002 \001(\005B\004\302\377\024\000\"\200\001\n\017E_AncientgodAtt\022\032\n\004m_i"
    "d\030\001 \001(\005B\014\302\377\024\010\345\261\236\346\200\247ID\022Q\n\013m_attribute\030\002 \003"
    "(\0132&.proto_ff.E_AncientgodAttAttributeDe"
    "scB\024\302\377\024\014\345\237\272\347\241\200\345\261\236\346\200\247\210\301\024\005\"T\n\023Sheet_Ancien"
    "tgodAtt\022=\n\024E_AncientgodAtt_List\030\001 \003(\0132\031."
    "proto_ff.E_AncientgodAttB\004\210\301\024 \"Y\n$E_Anci"
    "entgodStarcollectAttributeDesc\022\033\n\007m_valu"
    "e\030\001 \001(\005B\n\302\377\024\006\346\225\260\345\200\274\022\024\n\006m_type\030\002 \001(\005B\004\302\377\024"
    "\000\"\216\001\n\027E_AncientgodStarcollect\022\030\n\004m_id\030\001 "
    "\001(\005B\n\302\377\024\006\346\230\237\346\225\260\022Y\n\013m_attribute\030\002 \003(\0132..p"
    "roto_ff.E_AncientgodStarcollectAttribute"
    "DescB\024\302\377\024\014\345\237\272\347\241\200\345\261\236\346\200\247\210\301\024\002\"m\n\033Sheet_Anci"
    "entgodStarcollect\022N\n\034E_AncientgodStarcol"
    "lect_List\030\001 \003(\0132!.proto_ff.E_AncientgodS"
    "tarcollectB\005\210\301\024\200\010", 3057);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "E_Ancientgod.proto", &protobuf_RegisterTypes);
  E_AncientgodAncientgodFraDesc::default_instance_ = new E_AncientgodAncientgodFraDesc();
  E_AncientgodAncientgod::default_instance_ = new E_AncientgodAncientgod();
  Sheet_AncientgodAncientgod::default_instance_ = new Sheet_AncientgodAncientgod();
  E_AncientgodLvupAttributeDesc::default_instance_ = new E_AncientgodLvupAttributeDesc();
  E_AncientgodLvup::default_instance_ = new E_AncientgodLvup();
  Sheet_AncientgodLvup::default_instance_ = new Sheet_AncientgodLvup();
  E_AncientgodEquipvalue::default_instance_ = new E_AncientgodEquipvalue();
  Sheet_AncientgodEquipvalue::default_instance_ = new Sheet_AncientgodEquipvalue();
  E_AncientgodBlessAttributeDesc::default_instance_ = new E_AncientgodBlessAttributeDesc();
  E_AncientgodBless::default_instance_ = new E_AncientgodBless();
  Sheet_AncientgodBless::default_instance_ = new Sheet_AncientgodBless();
  E_AncientgodAdvanceAttributeDesc::default_instance_ = new E_AncientgodAdvanceAttributeDesc();
  E_AncientgodAdvance::default_instance_ = new E_AncientgodAdvance();
  Sheet_AncientgodAdvance::default_instance_ = new Sheet_AncientgodAdvance();
  E_AncientgodAttAttributeDesc::default_instance_ = new E_AncientgodAttAttributeDesc();
  E_AncientgodAtt::default_instance_ = new E_AncientgodAtt();
  Sheet_AncientgodAtt::default_instance_ = new Sheet_AncientgodAtt();
  E_AncientgodStarcollectAttributeDesc::default_instance_ = new E_AncientgodStarcollectAttributeDesc();
  E_AncientgodStarcollect::default_instance_ = new E_AncientgodStarcollect();
  Sheet_AncientgodStarcollect::default_instance_ = new Sheet_AncientgodStarcollect();
  E_AncientgodAncientgodFraDesc::default_instance_->InitAsDefaultInstance();
  E_AncientgodAncientgod::default_instance_->InitAsDefaultInstance();
  Sheet_AncientgodAncientgod::default_instance_->InitAsDefaultInstance();
  E_AncientgodLvupAttributeDesc::default_instance_->InitAsDefaultInstance();
  E_AncientgodLvup::default_instance_->InitAsDefaultInstance();
  Sheet_AncientgodLvup::default_instance_->InitAsDefaultInstance();
  E_AncientgodEquipvalue::default_instance_->InitAsDefaultInstance();
  Sheet_AncientgodEquipvalue::default_instance_->InitAsDefaultInstance();
  E_AncientgodBlessAttributeDesc::default_instance_->InitAsDefaultInstance();
  E_AncientgodBless::default_instance_->InitAsDefaultInstance();
  Sheet_AncientgodBless::default_instance_->InitAsDefaultInstance();
  E_AncientgodAdvanceAttributeDesc::default_instance_->InitAsDefaultInstance();
  E_AncientgodAdvance::default_instance_->InitAsDefaultInstance();
  Sheet_AncientgodAdvance::default_instance_->InitAsDefaultInstance();
  E_AncientgodAttAttributeDesc::default_instance_->InitAsDefaultInstance();
  E_AncientgodAtt::default_instance_->InitAsDefaultInstance();
  Sheet_AncientgodAtt::default_instance_->InitAsDefaultInstance();
  E_AncientgodStarcollectAttributeDesc::default_instance_->InitAsDefaultInstance();
  E_AncientgodStarcollect::default_instance_->InitAsDefaultInstance();
  Sheet_AncientgodStarcollect::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_E_5fAncientgod_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_E_5fAncientgod_2eproto {
  StaticDescriptorInitializer_E_5fAncientgod_2eproto() {
    protobuf_AddDesc_E_5fAncientgod_2eproto();
  }
} static_descriptor_initializer_E_5fAncientgod_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int E_AncientgodAncientgodFraDesc::kMAttIDFieldNumber;
const int E_AncientgodAncientgodFraDesc::kMNumFieldNumber;
#endif  // !_MSC_VER

E_AncientgodAncientgodFraDesc::E_AncientgodAncientgodFraDesc()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_AncientgodAncientgodFraDesc::InitAsDefaultInstance() {
}

E_AncientgodAncientgodFraDesc::E_AncientgodAncientgodFraDesc(const E_AncientgodAncientgodFraDesc& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_AncientgodAncientgodFraDesc::SharedCtor() {
  _cached_size_ = 0;
  m_attid_ = 0;
  m_num_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_AncientgodAncientgodFraDesc::~E_AncientgodAncientgodFraDesc() {
  SharedDtor();
}

void E_AncientgodAncientgodFraDesc::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_AncientgodAncientgodFraDesc::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_AncientgodAncientgodFraDesc::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_AncientgodAncientgodFraDesc_descriptor_;
}

const E_AncientgodAncientgodFraDesc& E_AncientgodAncientgodFraDesc::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fAncientgod_2eproto();
  return *default_instance_;
}

E_AncientgodAncientgodFraDesc* E_AncientgodAncientgodFraDesc::default_instance_ = NULL;

E_AncientgodAncientgodFraDesc* E_AncientgodAncientgodFraDesc::New() const {
  return new E_AncientgodAncientgodFraDesc;
}

void E_AncientgodAncientgodFraDesc::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_attid_ = 0;
    m_num_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_AncientgodAncientgodFraDesc::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_attID = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_attid_)));
          set_has_m_attid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_num;
        break;
      }

      // optional int32 m_num = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_num:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_num_)));
          set_has_m_num();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_AncientgodAncientgodFraDesc::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_attID = 1;
  if (has_m_attid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_attid(), output);
  }

  // optional int32 m_num = 2;
  if (has_m_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_num(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_AncientgodAncientgodFraDesc::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_attID = 1;
  if (has_m_attid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_attid(), target);
  }

  // optional int32 m_num = 2;
  if (has_m_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_num(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_AncientgodAncientgodFraDesc::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_attID = 1;
    if (has_m_attid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_attid());
    }

    // optional int32 m_num = 2;
    if (has_m_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_num());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_AncientgodAncientgodFraDesc::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_AncientgodAncientgodFraDesc* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_AncientgodAncientgodFraDesc*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_AncientgodAncientgodFraDesc::MergeFrom(const E_AncientgodAncientgodFraDesc& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_attid()) {
      set_m_attid(from.m_attid());
    }
    if (from.has_m_num()) {
      set_m_num(from.m_num());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_AncientgodAncientgodFraDesc::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_AncientgodAncientgodFraDesc::CopyFrom(const E_AncientgodAncientgodFraDesc& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_AncientgodAncientgodFraDesc::IsInitialized() const {

  return true;
}

void E_AncientgodAncientgodFraDesc::Swap(E_AncientgodAncientgodFraDesc* other) {
  if (other != this) {
    std::swap(m_attid_, other->m_attid_);
    std::swap(m_num_, other->m_num_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_AncientgodAncientgodFraDesc::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_AncientgodAncientgodFraDesc_descriptor_;
  metadata.reflection = E_AncientgodAncientgodFraDesc_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_AncientgodAncientgod::kMIdFieldNumber;
const int E_AncientgodAncientgod::kMNameFieldNumber;
const int E_AncientgodAncientgod::kMParamaFieldNumber;
const int E_AncientgodAncientgod::kMShowLvFieldNumber;
const int E_AncientgodAncientgod::kMUnlockLvFieldNumber;
const int E_AncientgodAncientgod::kMConditionFieldNumber;
const int E_AncientgodAncientgod::kMLvLimitFieldNumber;
const int E_AncientgodAncientgod::kMStarsFieldNumber;
const int E_AncientgodAncientgod::kMFraFieldNumber;
#endif  // !_MSC_VER

E_AncientgodAncientgod::E_AncientgodAncientgod()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_AncientgodAncientgod::InitAsDefaultInstance() {
}

E_AncientgodAncientgod::E_AncientgodAncientgod(const E_AncientgodAncientgod& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_AncientgodAncientgod::SharedCtor() {
  _cached_size_ = 0;
  m_id_ = 0;
  m_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  m_parama_ = 0;
  m_showlv_ = 0;
  m_unlocklv_ = 0;
  m_condition_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  m_lvlimit_ = 0;
  m_stars_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_AncientgodAncientgod::~E_AncientgodAncientgod() {
  SharedDtor();
}

void E_AncientgodAncientgod::SharedDtor() {
  if (m_name_ != &::google::protobuf::internal::kEmptyString) {
    delete m_name_;
  }
  if (m_condition_ != &::google::protobuf::internal::kEmptyString) {
    delete m_condition_;
  }
  if (this != default_instance_) {
  }
}

void E_AncientgodAncientgod::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_AncientgodAncientgod::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_AncientgodAncientgod_descriptor_;
}

const E_AncientgodAncientgod& E_AncientgodAncientgod::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fAncientgod_2eproto();
  return *default_instance_;
}

E_AncientgodAncientgod* E_AncientgodAncientgod::default_instance_ = NULL;

E_AncientgodAncientgod* E_AncientgodAncientgod::New() const {
  return new E_AncientgodAncientgod;
}

void E_AncientgodAncientgod::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_id_ = 0;
    if (has_m_name()) {
      if (m_name_ != &::google::protobuf::internal::kEmptyString) {
        m_name_->clear();
      }
    }
    m_parama_ = 0;
    m_showlv_ = 0;
    m_unlocklv_ = 0;
    if (has_m_condition()) {
      if (m_condition_ != &::google::protobuf::internal::kEmptyString) {
        m_condition_->clear();
      }
    }
    m_lvlimit_ = 0;
    m_stars_ = 0;
  }
  m_fra_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_AncientgodAncientgod::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_id_)));
          set_has_m_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_m_name;
        break;
      }

      // optional string m_name = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_m_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->m_name().data(), this->m_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(29)) goto parse_m_parama;
        break;
      }

      // optional float m_parama = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED32) {
         parse_m_parama:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &m_parama_)));
          set_has_m_parama();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_m_showLv;
        break;
      }

      // optional int32 m_showLv = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_showLv:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_showlv_)));
          set_has_m_showlv();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_m_unlockLv;
        break;
      }

      // optional int32 m_unlockLv = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_unlockLv:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_unlocklv_)));
          set_has_m_unlocklv();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_m_condition;
        break;
      }

      // optional string m_condition = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_condition:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_m_condition()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->m_condition().data(), this->m_condition().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_m_lvLimit;
        break;
      }

      // optional int32 m_lvLimit = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_lvLimit:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_lvlimit_)));
          set_has_m_lvlimit();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(64)) goto parse_m_stars;
        break;
      }

      // optional int32 m_stars = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_stars:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_stars_)));
          set_has_m_stars();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(74)) goto parse_m_fra;
        break;
      }

      // repeated .proto_ff.E_AncientgodAncientgodFraDesc m_fra = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_fra:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_m_fra()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(74)) goto parse_m_fra;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_AncientgodAncientgod::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_id(), output);
  }

  // optional string m_name = 2;
  if (has_m_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_name().data(), this->m_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->m_name(), output);
  }

  // optional float m_parama = 3;
  if (has_m_parama()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->m_parama(), output);
  }

  // optional int32 m_showLv = 4;
  if (has_m_showlv()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->m_showlv(), output);
  }

  // optional int32 m_unlockLv = 5;
  if (has_m_unlocklv()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->m_unlocklv(), output);
  }

  // optional string m_condition = 6;
  if (has_m_condition()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_condition().data(), this->m_condition().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      6, this->m_condition(), output);
  }

  // optional int32 m_lvLimit = 7;
  if (has_m_lvlimit()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->m_lvlimit(), output);
  }

  // optional int32 m_stars = 8;
  if (has_m_stars()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->m_stars(), output);
  }

  // repeated .proto_ff.E_AncientgodAncientgodFraDesc m_fra = 9;
  for (int i = 0; i < this->m_fra_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->m_fra(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_AncientgodAncientgod::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_id(), target);
  }

  // optional string m_name = 2;
  if (has_m_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_name().data(), this->m_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->m_name(), target);
  }

  // optional float m_parama = 3;
  if (has_m_parama()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->m_parama(), target);
  }

  // optional int32 m_showLv = 4;
  if (has_m_showlv()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->m_showlv(), target);
  }

  // optional int32 m_unlockLv = 5;
  if (has_m_unlocklv()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->m_unlocklv(), target);
  }

  // optional string m_condition = 6;
  if (has_m_condition()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_condition().data(), this->m_condition().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->m_condition(), target);
  }

  // optional int32 m_lvLimit = 7;
  if (has_m_lvlimit()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->m_lvlimit(), target);
  }

  // optional int32 m_stars = 8;
  if (has_m_stars()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->m_stars(), target);
  }

  // repeated .proto_ff.E_AncientgodAncientgodFraDesc m_fra = 9;
  for (int i = 0; i < this->m_fra_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        9, this->m_fra(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_AncientgodAncientgod::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_id = 1;
    if (has_m_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_id());
    }

    // optional string m_name = 2;
    if (has_m_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->m_name());
    }

    // optional float m_parama = 3;
    if (has_m_parama()) {
      total_size += 1 + 4;
    }

    // optional int32 m_showLv = 4;
    if (has_m_showlv()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_showlv());
    }

    // optional int32 m_unlockLv = 5;
    if (has_m_unlocklv()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_unlocklv());
    }

    // optional string m_condition = 6;
    if (has_m_condition()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->m_condition());
    }

    // optional int32 m_lvLimit = 7;
    if (has_m_lvlimit()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_lvlimit());
    }

    // optional int32 m_stars = 8;
    if (has_m_stars()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_stars());
    }

  }
  // repeated .proto_ff.E_AncientgodAncientgodFraDesc m_fra = 9;
  total_size += 1 * this->m_fra_size();
  for (int i = 0; i < this->m_fra_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->m_fra(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_AncientgodAncientgod::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_AncientgodAncientgod* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_AncientgodAncientgod*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_AncientgodAncientgod::MergeFrom(const E_AncientgodAncientgod& from) {
  GOOGLE_CHECK_NE(&from, this);
  m_fra_.MergeFrom(from.m_fra_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_id()) {
      set_m_id(from.m_id());
    }
    if (from.has_m_name()) {
      set_m_name(from.m_name());
    }
    if (from.has_m_parama()) {
      set_m_parama(from.m_parama());
    }
    if (from.has_m_showlv()) {
      set_m_showlv(from.m_showlv());
    }
    if (from.has_m_unlocklv()) {
      set_m_unlocklv(from.m_unlocklv());
    }
    if (from.has_m_condition()) {
      set_m_condition(from.m_condition());
    }
    if (from.has_m_lvlimit()) {
      set_m_lvlimit(from.m_lvlimit());
    }
    if (from.has_m_stars()) {
      set_m_stars(from.m_stars());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_AncientgodAncientgod::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_AncientgodAncientgod::CopyFrom(const E_AncientgodAncientgod& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_AncientgodAncientgod::IsInitialized() const {

  return true;
}

void E_AncientgodAncientgod::Swap(E_AncientgodAncientgod* other) {
  if (other != this) {
    std::swap(m_id_, other->m_id_);
    std::swap(m_name_, other->m_name_);
    std::swap(m_parama_, other->m_parama_);
    std::swap(m_showlv_, other->m_showlv_);
    std::swap(m_unlocklv_, other->m_unlocklv_);
    std::swap(m_condition_, other->m_condition_);
    std::swap(m_lvlimit_, other->m_lvlimit_);
    std::swap(m_stars_, other->m_stars_);
    m_fra_.Swap(&other->m_fra_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_AncientgodAncientgod::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_AncientgodAncientgod_descriptor_;
  metadata.reflection = E_AncientgodAncientgod_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_AncientgodAncientgod::kEAncientgodAncientgodListFieldNumber;
#endif  // !_MSC_VER

Sheet_AncientgodAncientgod::Sheet_AncientgodAncientgod()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_AncientgodAncientgod::InitAsDefaultInstance() {
}

Sheet_AncientgodAncientgod::Sheet_AncientgodAncientgod(const Sheet_AncientgodAncientgod& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_AncientgodAncientgod::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_AncientgodAncientgod::~Sheet_AncientgodAncientgod() {
  SharedDtor();
}

void Sheet_AncientgodAncientgod::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_AncientgodAncientgod::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_AncientgodAncientgod::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_AncientgodAncientgod_descriptor_;
}

const Sheet_AncientgodAncientgod& Sheet_AncientgodAncientgod::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fAncientgod_2eproto();
  return *default_instance_;
}

Sheet_AncientgodAncientgod* Sheet_AncientgodAncientgod::default_instance_ = NULL;

Sheet_AncientgodAncientgod* Sheet_AncientgodAncientgod::New() const {
  return new Sheet_AncientgodAncientgod;
}

void Sheet_AncientgodAncientgod::Clear() {
  e_ancientgodancientgod_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_AncientgodAncientgod::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.E_AncientgodAncientgod E_AncientgodAncientgod_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_E_AncientgodAncientgod_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_e_ancientgodancientgod_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_E_AncientgodAncientgod_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_AncientgodAncientgod::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.E_AncientgodAncientgod E_AncientgodAncientgod_List = 1;
  for (int i = 0; i < this->e_ancientgodancientgod_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->e_ancientgodancientgod_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_AncientgodAncientgod::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.E_AncientgodAncientgod E_AncientgodAncientgod_List = 1;
  for (int i = 0; i < this->e_ancientgodancientgod_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->e_ancientgodancientgod_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_AncientgodAncientgod::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.E_AncientgodAncientgod E_AncientgodAncientgod_List = 1;
  total_size += 1 * this->e_ancientgodancientgod_list_size();
  for (int i = 0; i < this->e_ancientgodancientgod_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->e_ancientgodancientgod_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_AncientgodAncientgod::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_AncientgodAncientgod* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_AncientgodAncientgod*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_AncientgodAncientgod::MergeFrom(const Sheet_AncientgodAncientgod& from) {
  GOOGLE_CHECK_NE(&from, this);
  e_ancientgodancientgod_list_.MergeFrom(from.e_ancientgodancientgod_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_AncientgodAncientgod::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_AncientgodAncientgod::CopyFrom(const Sheet_AncientgodAncientgod& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_AncientgodAncientgod::IsInitialized() const {

  return true;
}

void Sheet_AncientgodAncientgod::Swap(Sheet_AncientgodAncientgod* other) {
  if (other != this) {
    e_ancientgodancientgod_list_.Swap(&other->e_ancientgodancientgod_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_AncientgodAncientgod::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_AncientgodAncientgod_descriptor_;
  metadata.reflection = Sheet_AncientgodAncientgod_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_AncientgodLvupAttributeDesc::kMValueFieldNumber;
const int E_AncientgodLvupAttributeDesc::kMTypeFieldNumber;
#endif  // !_MSC_VER

E_AncientgodLvupAttributeDesc::E_AncientgodLvupAttributeDesc()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_AncientgodLvupAttributeDesc::InitAsDefaultInstance() {
}

E_AncientgodLvupAttributeDesc::E_AncientgodLvupAttributeDesc(const E_AncientgodLvupAttributeDesc& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_AncientgodLvupAttributeDesc::SharedCtor() {
  _cached_size_ = 0;
  m_value_ = 0;
  m_type_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_AncientgodLvupAttributeDesc::~E_AncientgodLvupAttributeDesc() {
  SharedDtor();
}

void E_AncientgodLvupAttributeDesc::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_AncientgodLvupAttributeDesc::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_AncientgodLvupAttributeDesc::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_AncientgodLvupAttributeDesc_descriptor_;
}

const E_AncientgodLvupAttributeDesc& E_AncientgodLvupAttributeDesc::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fAncientgod_2eproto();
  return *default_instance_;
}

E_AncientgodLvupAttributeDesc* E_AncientgodLvupAttributeDesc::default_instance_ = NULL;

E_AncientgodLvupAttributeDesc* E_AncientgodLvupAttributeDesc::New() const {
  return new E_AncientgodLvupAttributeDesc;
}

void E_AncientgodLvupAttributeDesc::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_value_ = 0;
    m_type_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_AncientgodLvupAttributeDesc::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_value = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_value_)));
          set_has_m_value();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_type;
        break;
      }

      // optional int32 m_type = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_type_)));
          set_has_m_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_AncientgodLvupAttributeDesc::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_value = 1;
  if (has_m_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_value(), output);
  }

  // optional int32 m_type = 2;
  if (has_m_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_type(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_AncientgodLvupAttributeDesc::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_value = 1;
  if (has_m_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_value(), target);
  }

  // optional int32 m_type = 2;
  if (has_m_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_type(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_AncientgodLvupAttributeDesc::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_value = 1;
    if (has_m_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_value());
    }

    // optional int32 m_type = 2;
    if (has_m_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_type());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_AncientgodLvupAttributeDesc::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_AncientgodLvupAttributeDesc* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_AncientgodLvupAttributeDesc*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_AncientgodLvupAttributeDesc::MergeFrom(const E_AncientgodLvupAttributeDesc& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_value()) {
      set_m_value(from.m_value());
    }
    if (from.has_m_type()) {
      set_m_type(from.m_type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_AncientgodLvupAttributeDesc::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_AncientgodLvupAttributeDesc::CopyFrom(const E_AncientgodLvupAttributeDesc& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_AncientgodLvupAttributeDesc::IsInitialized() const {

  return true;
}

void E_AncientgodLvupAttributeDesc::Swap(E_AncientgodLvupAttributeDesc* other) {
  if (other != this) {
    std::swap(m_value_, other->m_value_);
    std::swap(m_type_, other->m_type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_AncientgodLvupAttributeDesc::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_AncientgodLvupAttributeDesc_descriptor_;
  metadata.reflection = E_AncientgodLvupAttributeDesc_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_AncientgodLvup::kMIdFieldNumber;
const int E_AncientgodLvup::kMLvFieldNumber;
const int E_AncientgodLvup::kMAncientIDFieldNumber;
const int E_AncientgodLvup::kMItemIDFieldNumber;
const int E_AncientgodLvup::kMMallIDFieldNumber;
const int E_AncientgodLvup::kMNumFieldNumber;
const int E_AncientgodLvup::kMInitialValueFieldNumber;
const int E_AncientgodLvup::kMPositionFieldNumber;
const int E_AncientgodLvup::kMAttributeFieldNumber;
#endif  // !_MSC_VER

E_AncientgodLvup::E_AncientgodLvup()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_AncientgodLvup::InitAsDefaultInstance() {
}

E_AncientgodLvup::E_AncientgodLvup(const E_AncientgodLvup& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_AncientgodLvup::SharedCtor() {
  _cached_size_ = 0;
  m_id_ = 0;
  m_lv_ = 0;
  m_ancientid_ = 0;
  m_itemid_ = 0;
  m_mallid_ = 0;
  m_num_ = 0;
  m_initialvalue_ = 0;
  m_position_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_AncientgodLvup::~E_AncientgodLvup() {
  SharedDtor();
}

void E_AncientgodLvup::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_AncientgodLvup::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_AncientgodLvup::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_AncientgodLvup_descriptor_;
}

const E_AncientgodLvup& E_AncientgodLvup::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fAncientgod_2eproto();
  return *default_instance_;
}

E_AncientgodLvup* E_AncientgodLvup::default_instance_ = NULL;

E_AncientgodLvup* E_AncientgodLvup::New() const {
  return new E_AncientgodLvup;
}

void E_AncientgodLvup::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_id_ = 0;
    m_lv_ = 0;
    m_ancientid_ = 0;
    m_itemid_ = 0;
    m_mallid_ = 0;
    m_num_ = 0;
    m_initialvalue_ = 0;
    m_position_ = 0;
  }
  m_attribute_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_AncientgodLvup::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_id_)));
          set_has_m_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_lv;
        break;
      }

      // optional int32 m_lv = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_lv:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_lv_)));
          set_has_m_lv();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_m_ancientID;
        break;
      }

      // optional int32 m_ancientID = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_ancientID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_ancientid_)));
          set_has_m_ancientid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_m_itemID;
        break;
      }

      // optional int32 m_itemID = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_itemID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_itemid_)));
          set_has_m_itemid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_m_mallID;
        break;
      }

      // optional int32 m_mallID = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_mallID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_mallid_)));
          set_has_m_mallid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_m_num;
        break;
      }

      // optional int32 m_num = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_num:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_num_)));
          set_has_m_num();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_m_initialValue;
        break;
      }

      // optional int32 m_initialValue = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_initialValue:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_initialvalue_)));
          set_has_m_initialvalue();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(64)) goto parse_m_position;
        break;
      }

      // optional int32 m_position = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_position:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_position_)));
          set_has_m_position();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(74)) goto parse_m_attribute;
        break;
      }

      // repeated .proto_ff.E_AncientgodLvupAttributeDesc m_attribute = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_attribute:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_m_attribute()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(74)) goto parse_m_attribute;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_AncientgodLvup::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_id(), output);
  }

  // optional int32 m_lv = 2;
  if (has_m_lv()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_lv(), output);
  }

  // optional int32 m_ancientID = 3;
  if (has_m_ancientid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->m_ancientid(), output);
  }

  // optional int32 m_itemID = 4;
  if (has_m_itemid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->m_itemid(), output);
  }

  // optional int32 m_mallID = 5;
  if (has_m_mallid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->m_mallid(), output);
  }

  // optional int32 m_num = 6;
  if (has_m_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->m_num(), output);
  }

  // optional int32 m_initialValue = 7;
  if (has_m_initialvalue()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->m_initialvalue(), output);
  }

  // optional int32 m_position = 8;
  if (has_m_position()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->m_position(), output);
  }

  // repeated .proto_ff.E_AncientgodLvupAttributeDesc m_attribute = 9;
  for (int i = 0; i < this->m_attribute_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->m_attribute(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_AncientgodLvup::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_id(), target);
  }

  // optional int32 m_lv = 2;
  if (has_m_lv()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_lv(), target);
  }

  // optional int32 m_ancientID = 3;
  if (has_m_ancientid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->m_ancientid(), target);
  }

  // optional int32 m_itemID = 4;
  if (has_m_itemid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->m_itemid(), target);
  }

  // optional int32 m_mallID = 5;
  if (has_m_mallid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->m_mallid(), target);
  }

  // optional int32 m_num = 6;
  if (has_m_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->m_num(), target);
  }

  // optional int32 m_initialValue = 7;
  if (has_m_initialvalue()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->m_initialvalue(), target);
  }

  // optional int32 m_position = 8;
  if (has_m_position()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->m_position(), target);
  }

  // repeated .proto_ff.E_AncientgodLvupAttributeDesc m_attribute = 9;
  for (int i = 0; i < this->m_attribute_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        9, this->m_attribute(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_AncientgodLvup::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_id = 1;
    if (has_m_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_id());
    }

    // optional int32 m_lv = 2;
    if (has_m_lv()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_lv());
    }

    // optional int32 m_ancientID = 3;
    if (has_m_ancientid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_ancientid());
    }

    // optional int32 m_itemID = 4;
    if (has_m_itemid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_itemid());
    }

    // optional int32 m_mallID = 5;
    if (has_m_mallid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_mallid());
    }

    // optional int32 m_num = 6;
    if (has_m_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_num());
    }

    // optional int32 m_initialValue = 7;
    if (has_m_initialvalue()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_initialvalue());
    }

    // optional int32 m_position = 8;
    if (has_m_position()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_position());
    }

  }
  // repeated .proto_ff.E_AncientgodLvupAttributeDesc m_attribute = 9;
  total_size += 1 * this->m_attribute_size();
  for (int i = 0; i < this->m_attribute_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->m_attribute(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_AncientgodLvup::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_AncientgodLvup* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_AncientgodLvup*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_AncientgodLvup::MergeFrom(const E_AncientgodLvup& from) {
  GOOGLE_CHECK_NE(&from, this);
  m_attribute_.MergeFrom(from.m_attribute_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_id()) {
      set_m_id(from.m_id());
    }
    if (from.has_m_lv()) {
      set_m_lv(from.m_lv());
    }
    if (from.has_m_ancientid()) {
      set_m_ancientid(from.m_ancientid());
    }
    if (from.has_m_itemid()) {
      set_m_itemid(from.m_itemid());
    }
    if (from.has_m_mallid()) {
      set_m_mallid(from.m_mallid());
    }
    if (from.has_m_num()) {
      set_m_num(from.m_num());
    }
    if (from.has_m_initialvalue()) {
      set_m_initialvalue(from.m_initialvalue());
    }
    if (from.has_m_position()) {
      set_m_position(from.m_position());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_AncientgodLvup::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_AncientgodLvup::CopyFrom(const E_AncientgodLvup& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_AncientgodLvup::IsInitialized() const {

  return true;
}

void E_AncientgodLvup::Swap(E_AncientgodLvup* other) {
  if (other != this) {
    std::swap(m_id_, other->m_id_);
    std::swap(m_lv_, other->m_lv_);
    std::swap(m_ancientid_, other->m_ancientid_);
    std::swap(m_itemid_, other->m_itemid_);
    std::swap(m_mallid_, other->m_mallid_);
    std::swap(m_num_, other->m_num_);
    std::swap(m_initialvalue_, other->m_initialvalue_);
    std::swap(m_position_, other->m_position_);
    m_attribute_.Swap(&other->m_attribute_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_AncientgodLvup::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_AncientgodLvup_descriptor_;
  metadata.reflection = E_AncientgodLvup_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_AncientgodLvup::kEAncientgodLvupListFieldNumber;
#endif  // !_MSC_VER

Sheet_AncientgodLvup::Sheet_AncientgodLvup()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_AncientgodLvup::InitAsDefaultInstance() {
}

Sheet_AncientgodLvup::Sheet_AncientgodLvup(const Sheet_AncientgodLvup& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_AncientgodLvup::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_AncientgodLvup::~Sheet_AncientgodLvup() {
  SharedDtor();
}

void Sheet_AncientgodLvup::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_AncientgodLvup::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_AncientgodLvup::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_AncientgodLvup_descriptor_;
}

const Sheet_AncientgodLvup& Sheet_AncientgodLvup::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fAncientgod_2eproto();
  return *default_instance_;
}

Sheet_AncientgodLvup* Sheet_AncientgodLvup::default_instance_ = NULL;

Sheet_AncientgodLvup* Sheet_AncientgodLvup::New() const {
  return new Sheet_AncientgodLvup;
}

void Sheet_AncientgodLvup::Clear() {
  e_ancientgodlvup_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_AncientgodLvup::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.E_AncientgodLvup E_AncientgodLvup_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_E_AncientgodLvup_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_e_ancientgodlvup_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_E_AncientgodLvup_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_AncientgodLvup::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.E_AncientgodLvup E_AncientgodLvup_List = 1;
  for (int i = 0; i < this->e_ancientgodlvup_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->e_ancientgodlvup_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_AncientgodLvup::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.E_AncientgodLvup E_AncientgodLvup_List = 1;
  for (int i = 0; i < this->e_ancientgodlvup_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->e_ancientgodlvup_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_AncientgodLvup::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.E_AncientgodLvup E_AncientgodLvup_List = 1;
  total_size += 1 * this->e_ancientgodlvup_list_size();
  for (int i = 0; i < this->e_ancientgodlvup_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->e_ancientgodlvup_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_AncientgodLvup::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_AncientgodLvup* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_AncientgodLvup*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_AncientgodLvup::MergeFrom(const Sheet_AncientgodLvup& from) {
  GOOGLE_CHECK_NE(&from, this);
  e_ancientgodlvup_list_.MergeFrom(from.e_ancientgodlvup_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_AncientgodLvup::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_AncientgodLvup::CopyFrom(const Sheet_AncientgodLvup& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_AncientgodLvup::IsInitialized() const {

  return true;
}

void Sheet_AncientgodLvup::Swap(Sheet_AncientgodLvup* other) {
  if (other != this) {
    e_ancientgodlvup_list_.Swap(&other->e_ancientgodlvup_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_AncientgodLvup::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_AncientgodLvup_descriptor_;
  metadata.reflection = Sheet_AncientgodLvup_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_AncientgodEquipvalue::kMIdFieldNumber;
const int E_AncientgodEquipvalue::kMQualityFieldNumber;
const int E_AncientgodEquipvalue::kMWearQualityFieldNumber;
const int E_AncientgodEquipvalue::kMStarFieldNumber;
const int E_AncientgodEquipvalue::kMValueFieldNumber;
#endif  // !_MSC_VER

E_AncientgodEquipvalue::E_AncientgodEquipvalue()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_AncientgodEquipvalue::InitAsDefaultInstance() {
}

E_AncientgodEquipvalue::E_AncientgodEquipvalue(const E_AncientgodEquipvalue& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_AncientgodEquipvalue::SharedCtor() {
  _cached_size_ = 0;
  m_id_ = 0;
  m_quality_ = 0;
  m_wearquality_ = 0;
  m_star_ = 0;
  m_value_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_AncientgodEquipvalue::~E_AncientgodEquipvalue() {
  SharedDtor();
}

void E_AncientgodEquipvalue::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_AncientgodEquipvalue::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_AncientgodEquipvalue::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_AncientgodEquipvalue_descriptor_;
}

const E_AncientgodEquipvalue& E_AncientgodEquipvalue::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fAncientgod_2eproto();
  return *default_instance_;
}

E_AncientgodEquipvalue* E_AncientgodEquipvalue::default_instance_ = NULL;

E_AncientgodEquipvalue* E_AncientgodEquipvalue::New() const {
  return new E_AncientgodEquipvalue;
}

void E_AncientgodEquipvalue::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_id_ = 0;
    m_quality_ = 0;
    m_wearquality_ = 0;
    m_star_ = 0;
    m_value_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_AncientgodEquipvalue::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_id_)));
          set_has_m_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_quality;
        break;
      }

      // optional int32 m_quality = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_quality:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_quality_)));
          set_has_m_quality();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_m_wearQuality;
        break;
      }

      // optional int32 m_wearQuality = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_wearQuality:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_wearquality_)));
          set_has_m_wearquality();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_m_star;
        break;
      }

      // optional int32 m_star = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_star:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_star_)));
          set_has_m_star();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_m_value;
        break;
      }

      // optional int32 m_value = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_value:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_value_)));
          set_has_m_value();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_AncientgodEquipvalue::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_id(), output);
  }

  // optional int32 m_quality = 2;
  if (has_m_quality()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_quality(), output);
  }

  // optional int32 m_wearQuality = 3;
  if (has_m_wearquality()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->m_wearquality(), output);
  }

  // optional int32 m_star = 4;
  if (has_m_star()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->m_star(), output);
  }

  // optional int32 m_value = 5;
  if (has_m_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->m_value(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_AncientgodEquipvalue::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_id(), target);
  }

  // optional int32 m_quality = 2;
  if (has_m_quality()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_quality(), target);
  }

  // optional int32 m_wearQuality = 3;
  if (has_m_wearquality()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->m_wearquality(), target);
  }

  // optional int32 m_star = 4;
  if (has_m_star()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->m_star(), target);
  }

  // optional int32 m_value = 5;
  if (has_m_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->m_value(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_AncientgodEquipvalue::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_id = 1;
    if (has_m_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_id());
    }

    // optional int32 m_quality = 2;
    if (has_m_quality()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_quality());
    }

    // optional int32 m_wearQuality = 3;
    if (has_m_wearquality()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_wearquality());
    }

    // optional int32 m_star = 4;
    if (has_m_star()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_star());
    }

    // optional int32 m_value = 5;
    if (has_m_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_value());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_AncientgodEquipvalue::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_AncientgodEquipvalue* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_AncientgodEquipvalue*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_AncientgodEquipvalue::MergeFrom(const E_AncientgodEquipvalue& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_id()) {
      set_m_id(from.m_id());
    }
    if (from.has_m_quality()) {
      set_m_quality(from.m_quality());
    }
    if (from.has_m_wearquality()) {
      set_m_wearquality(from.m_wearquality());
    }
    if (from.has_m_star()) {
      set_m_star(from.m_star());
    }
    if (from.has_m_value()) {
      set_m_value(from.m_value());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_AncientgodEquipvalue::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_AncientgodEquipvalue::CopyFrom(const E_AncientgodEquipvalue& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_AncientgodEquipvalue::IsInitialized() const {

  return true;
}

void E_AncientgodEquipvalue::Swap(E_AncientgodEquipvalue* other) {
  if (other != this) {
    std::swap(m_id_, other->m_id_);
    std::swap(m_quality_, other->m_quality_);
    std::swap(m_wearquality_, other->m_wearquality_);
    std::swap(m_star_, other->m_star_);
    std::swap(m_value_, other->m_value_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_AncientgodEquipvalue::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_AncientgodEquipvalue_descriptor_;
  metadata.reflection = E_AncientgodEquipvalue_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_AncientgodEquipvalue::kEAncientgodEquipvalueListFieldNumber;
#endif  // !_MSC_VER

Sheet_AncientgodEquipvalue::Sheet_AncientgodEquipvalue()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_AncientgodEquipvalue::InitAsDefaultInstance() {
}

Sheet_AncientgodEquipvalue::Sheet_AncientgodEquipvalue(const Sheet_AncientgodEquipvalue& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_AncientgodEquipvalue::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_AncientgodEquipvalue::~Sheet_AncientgodEquipvalue() {
  SharedDtor();
}

void Sheet_AncientgodEquipvalue::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_AncientgodEquipvalue::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_AncientgodEquipvalue::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_AncientgodEquipvalue_descriptor_;
}

const Sheet_AncientgodEquipvalue& Sheet_AncientgodEquipvalue::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fAncientgod_2eproto();
  return *default_instance_;
}

Sheet_AncientgodEquipvalue* Sheet_AncientgodEquipvalue::default_instance_ = NULL;

Sheet_AncientgodEquipvalue* Sheet_AncientgodEquipvalue::New() const {
  return new Sheet_AncientgodEquipvalue;
}

void Sheet_AncientgodEquipvalue::Clear() {
  e_ancientgodequipvalue_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_AncientgodEquipvalue::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.E_AncientgodEquipvalue E_AncientgodEquipvalue_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_E_AncientgodEquipvalue_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_e_ancientgodequipvalue_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_E_AncientgodEquipvalue_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_AncientgodEquipvalue::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.E_AncientgodEquipvalue E_AncientgodEquipvalue_List = 1;
  for (int i = 0; i < this->e_ancientgodequipvalue_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->e_ancientgodequipvalue_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_AncientgodEquipvalue::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.E_AncientgodEquipvalue E_AncientgodEquipvalue_List = 1;
  for (int i = 0; i < this->e_ancientgodequipvalue_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->e_ancientgodequipvalue_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_AncientgodEquipvalue::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.E_AncientgodEquipvalue E_AncientgodEquipvalue_List = 1;
  total_size += 1 * this->e_ancientgodequipvalue_list_size();
  for (int i = 0; i < this->e_ancientgodequipvalue_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->e_ancientgodequipvalue_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_AncientgodEquipvalue::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_AncientgodEquipvalue* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_AncientgodEquipvalue*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_AncientgodEquipvalue::MergeFrom(const Sheet_AncientgodEquipvalue& from) {
  GOOGLE_CHECK_NE(&from, this);
  e_ancientgodequipvalue_list_.MergeFrom(from.e_ancientgodequipvalue_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_AncientgodEquipvalue::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_AncientgodEquipvalue::CopyFrom(const Sheet_AncientgodEquipvalue& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_AncientgodEquipvalue::IsInitialized() const {

  return true;
}

void Sheet_AncientgodEquipvalue::Swap(Sheet_AncientgodEquipvalue* other) {
  if (other != this) {
    e_ancientgodequipvalue_list_.Swap(&other->e_ancientgodequipvalue_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_AncientgodEquipvalue::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_AncientgodEquipvalue_descriptor_;
  metadata.reflection = Sheet_AncientgodEquipvalue_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_AncientgodBlessAttributeDesc::kMValueFieldNumber;
const int E_AncientgodBlessAttributeDesc::kMTypeFieldNumber;
#endif  // !_MSC_VER

E_AncientgodBlessAttributeDesc::E_AncientgodBlessAttributeDesc()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_AncientgodBlessAttributeDesc::InitAsDefaultInstance() {
}

E_AncientgodBlessAttributeDesc::E_AncientgodBlessAttributeDesc(const E_AncientgodBlessAttributeDesc& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_AncientgodBlessAttributeDesc::SharedCtor() {
  _cached_size_ = 0;
  m_value_ = 0;
  m_type_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_AncientgodBlessAttributeDesc::~E_AncientgodBlessAttributeDesc() {
  SharedDtor();
}

void E_AncientgodBlessAttributeDesc::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_AncientgodBlessAttributeDesc::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_AncientgodBlessAttributeDesc::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_AncientgodBlessAttributeDesc_descriptor_;
}

const E_AncientgodBlessAttributeDesc& E_AncientgodBlessAttributeDesc::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fAncientgod_2eproto();
  return *default_instance_;
}

E_AncientgodBlessAttributeDesc* E_AncientgodBlessAttributeDesc::default_instance_ = NULL;

E_AncientgodBlessAttributeDesc* E_AncientgodBlessAttributeDesc::New() const {
  return new E_AncientgodBlessAttributeDesc;
}

void E_AncientgodBlessAttributeDesc::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_value_ = 0;
    m_type_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_AncientgodBlessAttributeDesc::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_value = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_value_)));
          set_has_m_value();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_type;
        break;
      }

      // optional int32 m_type = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_type_)));
          set_has_m_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_AncientgodBlessAttributeDesc::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_value = 1;
  if (has_m_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_value(), output);
  }

  // optional int32 m_type = 2;
  if (has_m_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_type(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_AncientgodBlessAttributeDesc::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_value = 1;
  if (has_m_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_value(), target);
  }

  // optional int32 m_type = 2;
  if (has_m_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_type(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_AncientgodBlessAttributeDesc::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_value = 1;
    if (has_m_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_value());
    }

    // optional int32 m_type = 2;
    if (has_m_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_type());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_AncientgodBlessAttributeDesc::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_AncientgodBlessAttributeDesc* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_AncientgodBlessAttributeDesc*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_AncientgodBlessAttributeDesc::MergeFrom(const E_AncientgodBlessAttributeDesc& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_value()) {
      set_m_value(from.m_value());
    }
    if (from.has_m_type()) {
      set_m_type(from.m_type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_AncientgodBlessAttributeDesc::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_AncientgodBlessAttributeDesc::CopyFrom(const E_AncientgodBlessAttributeDesc& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_AncientgodBlessAttributeDesc::IsInitialized() const {

  return true;
}

void E_AncientgodBlessAttributeDesc::Swap(E_AncientgodBlessAttributeDesc* other) {
  if (other != this) {
    std::swap(m_value_, other->m_value_);
    std::swap(m_type_, other->m_type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_AncientgodBlessAttributeDesc::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_AncientgodBlessAttributeDesc_descriptor_;
  metadata.reflection = E_AncientgodBlessAttributeDesc_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_AncientgodBless::kMIdFieldNumber;
const int E_AncientgodBless::kMAncientIDFieldNumber;
const int E_AncientgodBless::kMPositionFieldNumber;
const int E_AncientgodBless::kMItemIDFieldNumber;
const int E_AncientgodBless::kMNumFieldNumber;
const int E_AncientgodBless::kMAttributeFieldNumber;
#endif  // !_MSC_VER

E_AncientgodBless::E_AncientgodBless()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_AncientgodBless::InitAsDefaultInstance() {
}

E_AncientgodBless::E_AncientgodBless(const E_AncientgodBless& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_AncientgodBless::SharedCtor() {
  _cached_size_ = 0;
  m_id_ = 0;
  m_ancientid_ = 0;
  m_position_ = 0;
  m_itemid_ = 0;
  m_num_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_AncientgodBless::~E_AncientgodBless() {
  SharedDtor();
}

void E_AncientgodBless::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_AncientgodBless::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_AncientgodBless::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_AncientgodBless_descriptor_;
}

const E_AncientgodBless& E_AncientgodBless::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fAncientgod_2eproto();
  return *default_instance_;
}

E_AncientgodBless* E_AncientgodBless::default_instance_ = NULL;

E_AncientgodBless* E_AncientgodBless::New() const {
  return new E_AncientgodBless;
}

void E_AncientgodBless::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_id_ = 0;
    m_ancientid_ = 0;
    m_position_ = 0;
    m_itemid_ = 0;
    m_num_ = 0;
  }
  m_attribute_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_AncientgodBless::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_id_)));
          set_has_m_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_ancientID;
        break;
      }

      // optional int32 m_ancientID = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_ancientID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_ancientid_)));
          set_has_m_ancientid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_m_position;
        break;
      }

      // optional int32 m_position = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_position:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_position_)));
          set_has_m_position();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_m_itemID;
        break;
      }

      // optional int32 m_itemID = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_itemID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_itemid_)));
          set_has_m_itemid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_m_num;
        break;
      }

      // optional int32 m_num = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_num:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_num_)));
          set_has_m_num();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_m_attribute;
        break;
      }

      // repeated .proto_ff.E_AncientgodBlessAttributeDesc m_attribute = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_attribute:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_m_attribute()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_m_attribute;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_AncientgodBless::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_id(), output);
  }

  // optional int32 m_ancientID = 2;
  if (has_m_ancientid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_ancientid(), output);
  }

  // optional int32 m_position = 3;
  if (has_m_position()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->m_position(), output);
  }

  // optional int32 m_itemID = 4;
  if (has_m_itemid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->m_itemid(), output);
  }

  // optional int32 m_num = 5;
  if (has_m_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->m_num(), output);
  }

  // repeated .proto_ff.E_AncientgodBlessAttributeDesc m_attribute = 6;
  for (int i = 0; i < this->m_attribute_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->m_attribute(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_AncientgodBless::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_id(), target);
  }

  // optional int32 m_ancientID = 2;
  if (has_m_ancientid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_ancientid(), target);
  }

  // optional int32 m_position = 3;
  if (has_m_position()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->m_position(), target);
  }

  // optional int32 m_itemID = 4;
  if (has_m_itemid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->m_itemid(), target);
  }

  // optional int32 m_num = 5;
  if (has_m_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->m_num(), target);
  }

  // repeated .proto_ff.E_AncientgodBlessAttributeDesc m_attribute = 6;
  for (int i = 0; i < this->m_attribute_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        6, this->m_attribute(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_AncientgodBless::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_id = 1;
    if (has_m_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_id());
    }

    // optional int32 m_ancientID = 2;
    if (has_m_ancientid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_ancientid());
    }

    // optional int32 m_position = 3;
    if (has_m_position()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_position());
    }

    // optional int32 m_itemID = 4;
    if (has_m_itemid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_itemid());
    }

    // optional int32 m_num = 5;
    if (has_m_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_num());
    }

  }
  // repeated .proto_ff.E_AncientgodBlessAttributeDesc m_attribute = 6;
  total_size += 1 * this->m_attribute_size();
  for (int i = 0; i < this->m_attribute_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->m_attribute(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_AncientgodBless::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_AncientgodBless* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_AncientgodBless*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_AncientgodBless::MergeFrom(const E_AncientgodBless& from) {
  GOOGLE_CHECK_NE(&from, this);
  m_attribute_.MergeFrom(from.m_attribute_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_id()) {
      set_m_id(from.m_id());
    }
    if (from.has_m_ancientid()) {
      set_m_ancientid(from.m_ancientid());
    }
    if (from.has_m_position()) {
      set_m_position(from.m_position());
    }
    if (from.has_m_itemid()) {
      set_m_itemid(from.m_itemid());
    }
    if (from.has_m_num()) {
      set_m_num(from.m_num());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_AncientgodBless::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_AncientgodBless::CopyFrom(const E_AncientgodBless& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_AncientgodBless::IsInitialized() const {

  return true;
}

void E_AncientgodBless::Swap(E_AncientgodBless* other) {
  if (other != this) {
    std::swap(m_id_, other->m_id_);
    std::swap(m_ancientid_, other->m_ancientid_);
    std::swap(m_position_, other->m_position_);
    std::swap(m_itemid_, other->m_itemid_);
    std::swap(m_num_, other->m_num_);
    m_attribute_.Swap(&other->m_attribute_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_AncientgodBless::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_AncientgodBless_descriptor_;
  metadata.reflection = E_AncientgodBless_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_AncientgodBless::kEAncientgodBlessListFieldNumber;
#endif  // !_MSC_VER

Sheet_AncientgodBless::Sheet_AncientgodBless()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_AncientgodBless::InitAsDefaultInstance() {
}

Sheet_AncientgodBless::Sheet_AncientgodBless(const Sheet_AncientgodBless& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_AncientgodBless::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_AncientgodBless::~Sheet_AncientgodBless() {
  SharedDtor();
}

void Sheet_AncientgodBless::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_AncientgodBless::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_AncientgodBless::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_AncientgodBless_descriptor_;
}

const Sheet_AncientgodBless& Sheet_AncientgodBless::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fAncientgod_2eproto();
  return *default_instance_;
}

Sheet_AncientgodBless* Sheet_AncientgodBless::default_instance_ = NULL;

Sheet_AncientgodBless* Sheet_AncientgodBless::New() const {
  return new Sheet_AncientgodBless;
}

void Sheet_AncientgodBless::Clear() {
  e_ancientgodbless_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_AncientgodBless::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.E_AncientgodBless E_AncientgodBless_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_E_AncientgodBless_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_e_ancientgodbless_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_E_AncientgodBless_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_AncientgodBless::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.E_AncientgodBless E_AncientgodBless_List = 1;
  for (int i = 0; i < this->e_ancientgodbless_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->e_ancientgodbless_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_AncientgodBless::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.E_AncientgodBless E_AncientgodBless_List = 1;
  for (int i = 0; i < this->e_ancientgodbless_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->e_ancientgodbless_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_AncientgodBless::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.E_AncientgodBless E_AncientgodBless_List = 1;
  total_size += 1 * this->e_ancientgodbless_list_size();
  for (int i = 0; i < this->e_ancientgodbless_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->e_ancientgodbless_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_AncientgodBless::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_AncientgodBless* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_AncientgodBless*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_AncientgodBless::MergeFrom(const Sheet_AncientgodBless& from) {
  GOOGLE_CHECK_NE(&from, this);
  e_ancientgodbless_list_.MergeFrom(from.e_ancientgodbless_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_AncientgodBless::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_AncientgodBless::CopyFrom(const Sheet_AncientgodBless& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_AncientgodBless::IsInitialized() const {

  return true;
}

void Sheet_AncientgodBless::Swap(Sheet_AncientgodBless* other) {
  if (other != this) {
    e_ancientgodbless_list_.Swap(&other->e_ancientgodbless_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_AncientgodBless::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_AncientgodBless_descriptor_;
  metadata.reflection = Sheet_AncientgodBless_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_AncientgodAdvanceAttributeDesc::kMStarFieldNumber;
const int E_AncientgodAdvanceAttributeDesc::kMValueFieldNumber;
const int E_AncientgodAdvanceAttributeDesc::kMTypeFieldNumber;
#endif  // !_MSC_VER

E_AncientgodAdvanceAttributeDesc::E_AncientgodAdvanceAttributeDesc()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_AncientgodAdvanceAttributeDesc::InitAsDefaultInstance() {
}

E_AncientgodAdvanceAttributeDesc::E_AncientgodAdvanceAttributeDesc(const E_AncientgodAdvanceAttributeDesc& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_AncientgodAdvanceAttributeDesc::SharedCtor() {
  _cached_size_ = 0;
  m_star_ = 0;
  m_value_ = 0;
  m_type_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_AncientgodAdvanceAttributeDesc::~E_AncientgodAdvanceAttributeDesc() {
  SharedDtor();
}

void E_AncientgodAdvanceAttributeDesc::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_AncientgodAdvanceAttributeDesc::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_AncientgodAdvanceAttributeDesc::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_AncientgodAdvanceAttributeDesc_descriptor_;
}

const E_AncientgodAdvanceAttributeDesc& E_AncientgodAdvanceAttributeDesc::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fAncientgod_2eproto();
  return *default_instance_;
}

E_AncientgodAdvanceAttributeDesc* E_AncientgodAdvanceAttributeDesc::default_instance_ = NULL;

E_AncientgodAdvanceAttributeDesc* E_AncientgodAdvanceAttributeDesc::New() const {
  return new E_AncientgodAdvanceAttributeDesc;
}

void E_AncientgodAdvanceAttributeDesc::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_star_ = 0;
    m_value_ = 0;
    m_type_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_AncientgodAdvanceAttributeDesc::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_star = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_star_)));
          set_has_m_star();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_value;
        break;
      }

      // optional int32 m_value = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_value:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_value_)));
          set_has_m_value();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_m_type;
        break;
      }

      // optional int32 m_type = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_type_)));
          set_has_m_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_AncientgodAdvanceAttributeDesc::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_star = 1;
  if (has_m_star()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_star(), output);
  }

  // optional int32 m_value = 2;
  if (has_m_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_value(), output);
  }

  // optional int32 m_type = 3;
  if (has_m_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->m_type(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_AncientgodAdvanceAttributeDesc::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_star = 1;
  if (has_m_star()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_star(), target);
  }

  // optional int32 m_value = 2;
  if (has_m_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_value(), target);
  }

  // optional int32 m_type = 3;
  if (has_m_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->m_type(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_AncientgodAdvanceAttributeDesc::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_star = 1;
    if (has_m_star()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_star());
    }

    // optional int32 m_value = 2;
    if (has_m_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_value());
    }

    // optional int32 m_type = 3;
    if (has_m_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_type());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_AncientgodAdvanceAttributeDesc::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_AncientgodAdvanceAttributeDesc* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_AncientgodAdvanceAttributeDesc*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_AncientgodAdvanceAttributeDesc::MergeFrom(const E_AncientgodAdvanceAttributeDesc& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_star()) {
      set_m_star(from.m_star());
    }
    if (from.has_m_value()) {
      set_m_value(from.m_value());
    }
    if (from.has_m_type()) {
      set_m_type(from.m_type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_AncientgodAdvanceAttributeDesc::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_AncientgodAdvanceAttributeDesc::CopyFrom(const E_AncientgodAdvanceAttributeDesc& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_AncientgodAdvanceAttributeDesc::IsInitialized() const {

  return true;
}

void E_AncientgodAdvanceAttributeDesc::Swap(E_AncientgodAdvanceAttributeDesc* other) {
  if (other != this) {
    std::swap(m_star_, other->m_star_);
    std::swap(m_value_, other->m_value_);
    std::swap(m_type_, other->m_type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_AncientgodAdvanceAttributeDesc::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_AncientgodAdvanceAttributeDesc_descriptor_;
  metadata.reflection = E_AncientgodAdvanceAttributeDesc_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_AncientgodAdvance::kMIdFieldNumber;
const int E_AncientgodAdvance::kMAncientIDFieldNumber;
const int E_AncientgodAdvance::kMPositionFieldNumber;
const int E_AncientgodAdvance::kMAttributeFieldNumber;
#endif  // !_MSC_VER

E_AncientgodAdvance::E_AncientgodAdvance()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_AncientgodAdvance::InitAsDefaultInstance() {
}

E_AncientgodAdvance::E_AncientgodAdvance(const E_AncientgodAdvance& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_AncientgodAdvance::SharedCtor() {
  _cached_size_ = 0;
  m_id_ = 0;
  m_ancientid_ = 0;
  m_position_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_AncientgodAdvance::~E_AncientgodAdvance() {
  SharedDtor();
}

void E_AncientgodAdvance::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_AncientgodAdvance::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_AncientgodAdvance::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_AncientgodAdvance_descriptor_;
}

const E_AncientgodAdvance& E_AncientgodAdvance::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fAncientgod_2eproto();
  return *default_instance_;
}

E_AncientgodAdvance* E_AncientgodAdvance::default_instance_ = NULL;

E_AncientgodAdvance* E_AncientgodAdvance::New() const {
  return new E_AncientgodAdvance;
}

void E_AncientgodAdvance::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_id_ = 0;
    m_ancientid_ = 0;
    m_position_ = 0;
  }
  m_attribute_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_AncientgodAdvance::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_id_)));
          set_has_m_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_ancientID;
        break;
      }

      // optional int32 m_ancientID = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_ancientID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_ancientid_)));
          set_has_m_ancientid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_m_position;
        break;
      }

      // optional int32 m_position = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_position:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_position_)));
          set_has_m_position();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_m_attribute;
        break;
      }

      // repeated .proto_ff.E_AncientgodAdvanceAttributeDesc m_attribute = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_attribute:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_m_attribute()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_m_attribute;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_AncientgodAdvance::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_id(), output);
  }

  // optional int32 m_ancientID = 2;
  if (has_m_ancientid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_ancientid(), output);
  }

  // optional int32 m_position = 3;
  if (has_m_position()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->m_position(), output);
  }

  // repeated .proto_ff.E_AncientgodAdvanceAttributeDesc m_attribute = 4;
  for (int i = 0; i < this->m_attribute_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->m_attribute(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_AncientgodAdvance::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_id(), target);
  }

  // optional int32 m_ancientID = 2;
  if (has_m_ancientid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_ancientid(), target);
  }

  // optional int32 m_position = 3;
  if (has_m_position()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->m_position(), target);
  }

  // repeated .proto_ff.E_AncientgodAdvanceAttributeDesc m_attribute = 4;
  for (int i = 0; i < this->m_attribute_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->m_attribute(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_AncientgodAdvance::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_id = 1;
    if (has_m_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_id());
    }

    // optional int32 m_ancientID = 2;
    if (has_m_ancientid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_ancientid());
    }

    // optional int32 m_position = 3;
    if (has_m_position()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_position());
    }

  }
  // repeated .proto_ff.E_AncientgodAdvanceAttributeDesc m_attribute = 4;
  total_size += 1 * this->m_attribute_size();
  for (int i = 0; i < this->m_attribute_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->m_attribute(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_AncientgodAdvance::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_AncientgodAdvance* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_AncientgodAdvance*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_AncientgodAdvance::MergeFrom(const E_AncientgodAdvance& from) {
  GOOGLE_CHECK_NE(&from, this);
  m_attribute_.MergeFrom(from.m_attribute_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_id()) {
      set_m_id(from.m_id());
    }
    if (from.has_m_ancientid()) {
      set_m_ancientid(from.m_ancientid());
    }
    if (from.has_m_position()) {
      set_m_position(from.m_position());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_AncientgodAdvance::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_AncientgodAdvance::CopyFrom(const E_AncientgodAdvance& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_AncientgodAdvance::IsInitialized() const {

  return true;
}

void E_AncientgodAdvance::Swap(E_AncientgodAdvance* other) {
  if (other != this) {
    std::swap(m_id_, other->m_id_);
    std::swap(m_ancientid_, other->m_ancientid_);
    std::swap(m_position_, other->m_position_);
    m_attribute_.Swap(&other->m_attribute_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_AncientgodAdvance::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_AncientgodAdvance_descriptor_;
  metadata.reflection = E_AncientgodAdvance_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_AncientgodAdvance::kEAncientgodAdvanceListFieldNumber;
#endif  // !_MSC_VER

Sheet_AncientgodAdvance::Sheet_AncientgodAdvance()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_AncientgodAdvance::InitAsDefaultInstance() {
}

Sheet_AncientgodAdvance::Sheet_AncientgodAdvance(const Sheet_AncientgodAdvance& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_AncientgodAdvance::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_AncientgodAdvance::~Sheet_AncientgodAdvance() {
  SharedDtor();
}

void Sheet_AncientgodAdvance::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_AncientgodAdvance::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_AncientgodAdvance::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_AncientgodAdvance_descriptor_;
}

const Sheet_AncientgodAdvance& Sheet_AncientgodAdvance::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fAncientgod_2eproto();
  return *default_instance_;
}

Sheet_AncientgodAdvance* Sheet_AncientgodAdvance::default_instance_ = NULL;

Sheet_AncientgodAdvance* Sheet_AncientgodAdvance::New() const {
  return new Sheet_AncientgodAdvance;
}

void Sheet_AncientgodAdvance::Clear() {
  e_ancientgodadvance_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_AncientgodAdvance::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.E_AncientgodAdvance E_AncientgodAdvance_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_E_AncientgodAdvance_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_e_ancientgodadvance_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_E_AncientgodAdvance_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_AncientgodAdvance::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.E_AncientgodAdvance E_AncientgodAdvance_List = 1;
  for (int i = 0; i < this->e_ancientgodadvance_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->e_ancientgodadvance_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_AncientgodAdvance::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.E_AncientgodAdvance E_AncientgodAdvance_List = 1;
  for (int i = 0; i < this->e_ancientgodadvance_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->e_ancientgodadvance_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_AncientgodAdvance::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.E_AncientgodAdvance E_AncientgodAdvance_List = 1;
  total_size += 1 * this->e_ancientgodadvance_list_size();
  for (int i = 0; i < this->e_ancientgodadvance_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->e_ancientgodadvance_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_AncientgodAdvance::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_AncientgodAdvance* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_AncientgodAdvance*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_AncientgodAdvance::MergeFrom(const Sheet_AncientgodAdvance& from) {
  GOOGLE_CHECK_NE(&from, this);
  e_ancientgodadvance_list_.MergeFrom(from.e_ancientgodadvance_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_AncientgodAdvance::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_AncientgodAdvance::CopyFrom(const Sheet_AncientgodAdvance& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_AncientgodAdvance::IsInitialized() const {

  return true;
}

void Sheet_AncientgodAdvance::Swap(Sheet_AncientgodAdvance* other) {
  if (other != this) {
    e_ancientgodadvance_list_.Swap(&other->e_ancientgodadvance_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_AncientgodAdvance::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_AncientgodAdvance_descriptor_;
  metadata.reflection = Sheet_AncientgodAdvance_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_AncientgodAttAttributeDesc::kMValueFieldNumber;
const int E_AncientgodAttAttributeDesc::kMTypeFieldNumber;
#endif  // !_MSC_VER

E_AncientgodAttAttributeDesc::E_AncientgodAttAttributeDesc()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_AncientgodAttAttributeDesc::InitAsDefaultInstance() {
}

E_AncientgodAttAttributeDesc::E_AncientgodAttAttributeDesc(const E_AncientgodAttAttributeDesc& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_AncientgodAttAttributeDesc::SharedCtor() {
  _cached_size_ = 0;
  m_value_ = 0;
  m_type_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_AncientgodAttAttributeDesc::~E_AncientgodAttAttributeDesc() {
  SharedDtor();
}

void E_AncientgodAttAttributeDesc::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_AncientgodAttAttributeDesc::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_AncientgodAttAttributeDesc::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_AncientgodAttAttributeDesc_descriptor_;
}

const E_AncientgodAttAttributeDesc& E_AncientgodAttAttributeDesc::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fAncientgod_2eproto();
  return *default_instance_;
}

E_AncientgodAttAttributeDesc* E_AncientgodAttAttributeDesc::default_instance_ = NULL;

E_AncientgodAttAttributeDesc* E_AncientgodAttAttributeDesc::New() const {
  return new E_AncientgodAttAttributeDesc;
}

void E_AncientgodAttAttributeDesc::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_value_ = 0;
    m_type_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_AncientgodAttAttributeDesc::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_value = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_value_)));
          set_has_m_value();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_type;
        break;
      }

      // optional int32 m_type = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_type_)));
          set_has_m_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_AncientgodAttAttributeDesc::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_value = 1;
  if (has_m_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_value(), output);
  }

  // optional int32 m_type = 2;
  if (has_m_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_type(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_AncientgodAttAttributeDesc::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_value = 1;
  if (has_m_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_value(), target);
  }

  // optional int32 m_type = 2;
  if (has_m_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_type(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_AncientgodAttAttributeDesc::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_value = 1;
    if (has_m_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_value());
    }

    // optional int32 m_type = 2;
    if (has_m_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_type());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_AncientgodAttAttributeDesc::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_AncientgodAttAttributeDesc* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_AncientgodAttAttributeDesc*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_AncientgodAttAttributeDesc::MergeFrom(const E_AncientgodAttAttributeDesc& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_value()) {
      set_m_value(from.m_value());
    }
    if (from.has_m_type()) {
      set_m_type(from.m_type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_AncientgodAttAttributeDesc::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_AncientgodAttAttributeDesc::CopyFrom(const E_AncientgodAttAttributeDesc& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_AncientgodAttAttributeDesc::IsInitialized() const {

  return true;
}

void E_AncientgodAttAttributeDesc::Swap(E_AncientgodAttAttributeDesc* other) {
  if (other != this) {
    std::swap(m_value_, other->m_value_);
    std::swap(m_type_, other->m_type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_AncientgodAttAttributeDesc::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_AncientgodAttAttributeDesc_descriptor_;
  metadata.reflection = E_AncientgodAttAttributeDesc_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_AncientgodAtt::kMIdFieldNumber;
const int E_AncientgodAtt::kMAttributeFieldNumber;
#endif  // !_MSC_VER

E_AncientgodAtt::E_AncientgodAtt()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_AncientgodAtt::InitAsDefaultInstance() {
}

E_AncientgodAtt::E_AncientgodAtt(const E_AncientgodAtt& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_AncientgodAtt::SharedCtor() {
  _cached_size_ = 0;
  m_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_AncientgodAtt::~E_AncientgodAtt() {
  SharedDtor();
}

void E_AncientgodAtt::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_AncientgodAtt::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_AncientgodAtt::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_AncientgodAtt_descriptor_;
}

const E_AncientgodAtt& E_AncientgodAtt::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fAncientgod_2eproto();
  return *default_instance_;
}

E_AncientgodAtt* E_AncientgodAtt::default_instance_ = NULL;

E_AncientgodAtt* E_AncientgodAtt::New() const {
  return new E_AncientgodAtt;
}

void E_AncientgodAtt::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_id_ = 0;
  }
  m_attribute_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_AncientgodAtt::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_id_)));
          set_has_m_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_m_attribute;
        break;
      }

      // repeated .proto_ff.E_AncientgodAttAttributeDesc m_attribute = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_attribute:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_m_attribute()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_m_attribute;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_AncientgodAtt::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_id(), output);
  }

  // repeated .proto_ff.E_AncientgodAttAttributeDesc m_attribute = 2;
  for (int i = 0; i < this->m_attribute_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->m_attribute(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_AncientgodAtt::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_id(), target);
  }

  // repeated .proto_ff.E_AncientgodAttAttributeDesc m_attribute = 2;
  for (int i = 0; i < this->m_attribute_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->m_attribute(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_AncientgodAtt::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_id = 1;
    if (has_m_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_id());
    }

  }
  // repeated .proto_ff.E_AncientgodAttAttributeDesc m_attribute = 2;
  total_size += 1 * this->m_attribute_size();
  for (int i = 0; i < this->m_attribute_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->m_attribute(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_AncientgodAtt::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_AncientgodAtt* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_AncientgodAtt*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_AncientgodAtt::MergeFrom(const E_AncientgodAtt& from) {
  GOOGLE_CHECK_NE(&from, this);
  m_attribute_.MergeFrom(from.m_attribute_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_id()) {
      set_m_id(from.m_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_AncientgodAtt::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_AncientgodAtt::CopyFrom(const E_AncientgodAtt& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_AncientgodAtt::IsInitialized() const {

  return true;
}

void E_AncientgodAtt::Swap(E_AncientgodAtt* other) {
  if (other != this) {
    std::swap(m_id_, other->m_id_);
    m_attribute_.Swap(&other->m_attribute_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_AncientgodAtt::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_AncientgodAtt_descriptor_;
  metadata.reflection = E_AncientgodAtt_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_AncientgodAtt::kEAncientgodAttListFieldNumber;
#endif  // !_MSC_VER

Sheet_AncientgodAtt::Sheet_AncientgodAtt()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_AncientgodAtt::InitAsDefaultInstance() {
}

Sheet_AncientgodAtt::Sheet_AncientgodAtt(const Sheet_AncientgodAtt& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_AncientgodAtt::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_AncientgodAtt::~Sheet_AncientgodAtt() {
  SharedDtor();
}

void Sheet_AncientgodAtt::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_AncientgodAtt::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_AncientgodAtt::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_AncientgodAtt_descriptor_;
}

const Sheet_AncientgodAtt& Sheet_AncientgodAtt::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fAncientgod_2eproto();
  return *default_instance_;
}

Sheet_AncientgodAtt* Sheet_AncientgodAtt::default_instance_ = NULL;

Sheet_AncientgodAtt* Sheet_AncientgodAtt::New() const {
  return new Sheet_AncientgodAtt;
}

void Sheet_AncientgodAtt::Clear() {
  e_ancientgodatt_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_AncientgodAtt::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.E_AncientgodAtt E_AncientgodAtt_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_E_AncientgodAtt_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_e_ancientgodatt_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_E_AncientgodAtt_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_AncientgodAtt::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.E_AncientgodAtt E_AncientgodAtt_List = 1;
  for (int i = 0; i < this->e_ancientgodatt_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->e_ancientgodatt_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_AncientgodAtt::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.E_AncientgodAtt E_AncientgodAtt_List = 1;
  for (int i = 0; i < this->e_ancientgodatt_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->e_ancientgodatt_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_AncientgodAtt::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.E_AncientgodAtt E_AncientgodAtt_List = 1;
  total_size += 1 * this->e_ancientgodatt_list_size();
  for (int i = 0; i < this->e_ancientgodatt_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->e_ancientgodatt_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_AncientgodAtt::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_AncientgodAtt* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_AncientgodAtt*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_AncientgodAtt::MergeFrom(const Sheet_AncientgodAtt& from) {
  GOOGLE_CHECK_NE(&from, this);
  e_ancientgodatt_list_.MergeFrom(from.e_ancientgodatt_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_AncientgodAtt::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_AncientgodAtt::CopyFrom(const Sheet_AncientgodAtt& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_AncientgodAtt::IsInitialized() const {

  return true;
}

void Sheet_AncientgodAtt::Swap(Sheet_AncientgodAtt* other) {
  if (other != this) {
    e_ancientgodatt_list_.Swap(&other->e_ancientgodatt_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_AncientgodAtt::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_AncientgodAtt_descriptor_;
  metadata.reflection = Sheet_AncientgodAtt_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_AncientgodStarcollectAttributeDesc::kMValueFieldNumber;
const int E_AncientgodStarcollectAttributeDesc::kMTypeFieldNumber;
#endif  // !_MSC_VER

E_AncientgodStarcollectAttributeDesc::E_AncientgodStarcollectAttributeDesc()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_AncientgodStarcollectAttributeDesc::InitAsDefaultInstance() {
}

E_AncientgodStarcollectAttributeDesc::E_AncientgodStarcollectAttributeDesc(const E_AncientgodStarcollectAttributeDesc& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_AncientgodStarcollectAttributeDesc::SharedCtor() {
  _cached_size_ = 0;
  m_value_ = 0;
  m_type_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_AncientgodStarcollectAttributeDesc::~E_AncientgodStarcollectAttributeDesc() {
  SharedDtor();
}

void E_AncientgodStarcollectAttributeDesc::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_AncientgodStarcollectAttributeDesc::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_AncientgodStarcollectAttributeDesc::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_AncientgodStarcollectAttributeDesc_descriptor_;
}

const E_AncientgodStarcollectAttributeDesc& E_AncientgodStarcollectAttributeDesc::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fAncientgod_2eproto();
  return *default_instance_;
}

E_AncientgodStarcollectAttributeDesc* E_AncientgodStarcollectAttributeDesc::default_instance_ = NULL;

E_AncientgodStarcollectAttributeDesc* E_AncientgodStarcollectAttributeDesc::New() const {
  return new E_AncientgodStarcollectAttributeDesc;
}

void E_AncientgodStarcollectAttributeDesc::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_value_ = 0;
    m_type_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_AncientgodStarcollectAttributeDesc::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_value = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_value_)));
          set_has_m_value();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_type;
        break;
      }

      // optional int32 m_type = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_type_)));
          set_has_m_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_AncientgodStarcollectAttributeDesc::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_value = 1;
  if (has_m_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_value(), output);
  }

  // optional int32 m_type = 2;
  if (has_m_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_type(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_AncientgodStarcollectAttributeDesc::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_value = 1;
  if (has_m_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_value(), target);
  }

  // optional int32 m_type = 2;
  if (has_m_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_type(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_AncientgodStarcollectAttributeDesc::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_value = 1;
    if (has_m_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_value());
    }

    // optional int32 m_type = 2;
    if (has_m_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_type());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_AncientgodStarcollectAttributeDesc::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_AncientgodStarcollectAttributeDesc* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_AncientgodStarcollectAttributeDesc*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_AncientgodStarcollectAttributeDesc::MergeFrom(const E_AncientgodStarcollectAttributeDesc& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_value()) {
      set_m_value(from.m_value());
    }
    if (from.has_m_type()) {
      set_m_type(from.m_type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_AncientgodStarcollectAttributeDesc::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_AncientgodStarcollectAttributeDesc::CopyFrom(const E_AncientgodStarcollectAttributeDesc& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_AncientgodStarcollectAttributeDesc::IsInitialized() const {

  return true;
}

void E_AncientgodStarcollectAttributeDesc::Swap(E_AncientgodStarcollectAttributeDesc* other) {
  if (other != this) {
    std::swap(m_value_, other->m_value_);
    std::swap(m_type_, other->m_type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_AncientgodStarcollectAttributeDesc::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_AncientgodStarcollectAttributeDesc_descriptor_;
  metadata.reflection = E_AncientgodStarcollectAttributeDesc_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_AncientgodStarcollect::kMIdFieldNumber;
const int E_AncientgodStarcollect::kMAttributeFieldNumber;
#endif  // !_MSC_VER

E_AncientgodStarcollect::E_AncientgodStarcollect()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_AncientgodStarcollect::InitAsDefaultInstance() {
}

E_AncientgodStarcollect::E_AncientgodStarcollect(const E_AncientgodStarcollect& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_AncientgodStarcollect::SharedCtor() {
  _cached_size_ = 0;
  m_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_AncientgodStarcollect::~E_AncientgodStarcollect() {
  SharedDtor();
}

void E_AncientgodStarcollect::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_AncientgodStarcollect::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_AncientgodStarcollect::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_AncientgodStarcollect_descriptor_;
}

const E_AncientgodStarcollect& E_AncientgodStarcollect::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fAncientgod_2eproto();
  return *default_instance_;
}

E_AncientgodStarcollect* E_AncientgodStarcollect::default_instance_ = NULL;

E_AncientgodStarcollect* E_AncientgodStarcollect::New() const {
  return new E_AncientgodStarcollect;
}

void E_AncientgodStarcollect::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_id_ = 0;
  }
  m_attribute_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_AncientgodStarcollect::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_id_)));
          set_has_m_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_m_attribute;
        break;
      }

      // repeated .proto_ff.E_AncientgodStarcollectAttributeDesc m_attribute = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_attribute:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_m_attribute()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_m_attribute;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_AncientgodStarcollect::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_id(), output);
  }

  // repeated .proto_ff.E_AncientgodStarcollectAttributeDesc m_attribute = 2;
  for (int i = 0; i < this->m_attribute_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->m_attribute(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_AncientgodStarcollect::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_id(), target);
  }

  // repeated .proto_ff.E_AncientgodStarcollectAttributeDesc m_attribute = 2;
  for (int i = 0; i < this->m_attribute_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->m_attribute(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_AncientgodStarcollect::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_id = 1;
    if (has_m_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_id());
    }

  }
  // repeated .proto_ff.E_AncientgodStarcollectAttributeDesc m_attribute = 2;
  total_size += 1 * this->m_attribute_size();
  for (int i = 0; i < this->m_attribute_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->m_attribute(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_AncientgodStarcollect::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_AncientgodStarcollect* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_AncientgodStarcollect*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_AncientgodStarcollect::MergeFrom(const E_AncientgodStarcollect& from) {
  GOOGLE_CHECK_NE(&from, this);
  m_attribute_.MergeFrom(from.m_attribute_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_id()) {
      set_m_id(from.m_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_AncientgodStarcollect::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_AncientgodStarcollect::CopyFrom(const E_AncientgodStarcollect& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_AncientgodStarcollect::IsInitialized() const {

  return true;
}

void E_AncientgodStarcollect::Swap(E_AncientgodStarcollect* other) {
  if (other != this) {
    std::swap(m_id_, other->m_id_);
    m_attribute_.Swap(&other->m_attribute_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_AncientgodStarcollect::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_AncientgodStarcollect_descriptor_;
  metadata.reflection = E_AncientgodStarcollect_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_AncientgodStarcollect::kEAncientgodStarcollectListFieldNumber;
#endif  // !_MSC_VER

Sheet_AncientgodStarcollect::Sheet_AncientgodStarcollect()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_AncientgodStarcollect::InitAsDefaultInstance() {
}

Sheet_AncientgodStarcollect::Sheet_AncientgodStarcollect(const Sheet_AncientgodStarcollect& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_AncientgodStarcollect::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_AncientgodStarcollect::~Sheet_AncientgodStarcollect() {
  SharedDtor();
}

void Sheet_AncientgodStarcollect::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_AncientgodStarcollect::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_AncientgodStarcollect::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_AncientgodStarcollect_descriptor_;
}

const Sheet_AncientgodStarcollect& Sheet_AncientgodStarcollect::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fAncientgod_2eproto();
  return *default_instance_;
}

Sheet_AncientgodStarcollect* Sheet_AncientgodStarcollect::default_instance_ = NULL;

Sheet_AncientgodStarcollect* Sheet_AncientgodStarcollect::New() const {
  return new Sheet_AncientgodStarcollect;
}

void Sheet_AncientgodStarcollect::Clear() {
  e_ancientgodstarcollect_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_AncientgodStarcollect::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.E_AncientgodStarcollect E_AncientgodStarcollect_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_E_AncientgodStarcollect_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_e_ancientgodstarcollect_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_E_AncientgodStarcollect_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_AncientgodStarcollect::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.E_AncientgodStarcollect E_AncientgodStarcollect_List = 1;
  for (int i = 0; i < this->e_ancientgodstarcollect_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->e_ancientgodstarcollect_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_AncientgodStarcollect::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.E_AncientgodStarcollect E_AncientgodStarcollect_List = 1;
  for (int i = 0; i < this->e_ancientgodstarcollect_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->e_ancientgodstarcollect_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_AncientgodStarcollect::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.E_AncientgodStarcollect E_AncientgodStarcollect_List = 1;
  total_size += 1 * this->e_ancientgodstarcollect_list_size();
  for (int i = 0; i < this->e_ancientgodstarcollect_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->e_ancientgodstarcollect_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_AncientgodStarcollect::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_AncientgodStarcollect* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_AncientgodStarcollect*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_AncientgodStarcollect::MergeFrom(const Sheet_AncientgodStarcollect& from) {
  GOOGLE_CHECK_NE(&from, this);
  e_ancientgodstarcollect_list_.MergeFrom(from.e_ancientgodstarcollect_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_AncientgodStarcollect::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_AncientgodStarcollect::CopyFrom(const Sheet_AncientgodStarcollect& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_AncientgodStarcollect::IsInitialized() const {

  return true;
}

void Sheet_AncientgodStarcollect::Swap(Sheet_AncientgodStarcollect* other) {
  if (other != this) {
    e_ancientgodstarcollect_list_.Swap(&other->e_ancientgodstarcollect_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_AncientgodStarcollect::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_AncientgodStarcollect_descriptor_;
  metadata.reflection = Sheet_AncientgodStarcollect_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto_ff

// @@protoc_insertion_point(global_scope)
