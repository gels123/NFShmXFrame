// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: equip.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "equip.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace proto_ff {

namespace {

const ::google::protobuf::Descriptor* E_EquipEquip_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_EquipEquip_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_EquipEquip_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_EquipEquip_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_EquipAttributeAttributeDesc_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_EquipAttributeAttributeDesc_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_EquipAttribute_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_EquipAttribute_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_EquipAttribute_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_EquipAttribute_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_EquipStrongTypeDesc_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_EquipStrongTypeDesc_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_EquipStrong_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_EquipStrong_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_EquipStrong_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_EquipStrong_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_EquipStrongexpCostDesc_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_EquipStrongexpCostDesc_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_EquipStrongexp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_EquipStrongexp_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_EquipStrongexp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_EquipStrongexp_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_EquipStrongtotalAttributeDesc_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_EquipStrongtotalAttributeDesc_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_EquipStrongtotal_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_EquipStrongtotal_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_EquipStrongtotal_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_EquipStrongtotal_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_EquipGem_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_EquipGem_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_EquipGem_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_EquipGem_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_EquipGemlv_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_EquipGemlv_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_EquipGemlv_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_EquipGemlv_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_EquipStoveattAttributeDesc_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_EquipStoveattAttributeDesc_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_EquipStoveatt_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_EquipStoveatt_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_EquipStoveatt_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_EquipStoveatt_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_EquipStoveexp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_EquipStoveexp_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_EquipStoveexp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_EquipStoveexp_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_EquipGrade_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_EquipGrade_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_EquipGrade_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_EquipGrade_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_EquipClearAttributeDesc_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_EquipClearAttributeDesc_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_EquipClearSectionDesc_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_EquipClearSectionDesc_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_EquipClear_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_EquipClear_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_EquipClear_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_EquipClear_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_EquipSuitAttributeDesc_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_EquipSuitAttributeDesc_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_EquipSuit_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_EquipSuit_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_EquipSuit_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_EquipSuit_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_EquipBreakBreakDesc_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_EquipBreakBreakDesc_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_EquipBreak_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_EquipBreak_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_EquipBreak_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_EquipBreak_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_equip_2eproto() {
  protobuf_AddDesc_equip_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "equip.proto");
  GOOGLE_CHECK(file != NULL);
  E_EquipEquip_descriptor_ = file->message_type(0);
  static const int E_EquipEquip_offsets_[19] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipEquip, m_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipEquip, m_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipEquip, m_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipEquip, m_wearquality_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipEquip, m_position_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipEquip, m_profession_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipEquip, m_professionlv_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipEquip, m_level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipEquip, m_quality_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipEquip, m_attributeid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipEquip, m_star_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipEquip, m_iscanbind_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipEquip, m_istradebind_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipEquip, m_sellprice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipEquip, m_icon_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipEquip, m_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipEquip, m_broadcast_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipEquip, m_meltingresult_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipEquip, m_skillid_),
  };
  E_EquipEquip_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_EquipEquip_descriptor_,
      E_EquipEquip::default_instance_,
      E_EquipEquip_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipEquip, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipEquip, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_EquipEquip));
  Sheet_EquipEquip_descriptor_ = file->message_type(1);
  static const int Sheet_EquipEquip_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_EquipEquip, e_equipequip_list_),
  };
  Sheet_EquipEquip_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_EquipEquip_descriptor_,
      Sheet_EquipEquip::default_instance_,
      Sheet_EquipEquip_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_EquipEquip, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_EquipEquip, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_EquipEquip));
  E_EquipAttributeAttributeDesc_descriptor_ = file->message_type(2);
  static const int E_EquipAttributeAttributeDesc_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipAttributeAttributeDesc, m_valuemin_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipAttributeAttributeDesc, m_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipAttributeAttributeDesc, m_valuemax_),
  };
  E_EquipAttributeAttributeDesc_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_EquipAttributeAttributeDesc_descriptor_,
      E_EquipAttributeAttributeDesc::default_instance_,
      E_EquipAttributeAttributeDesc_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipAttributeAttributeDesc, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipAttributeAttributeDesc, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_EquipAttributeAttributeDesc));
  E_EquipAttribute_descriptor_ = file->message_type(3);
  static const int E_EquipAttribute_offsets_[15] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipAttribute, m_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipAttribute, m_bluestarnum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipAttribute, m_bluestar_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipAttribute, m_bluestar_lv_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipAttribute, m_bluestar_number_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipAttribute, m_specialattributedown_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipAttribute, m_specialattributeup_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipAttribute, m_specialattribute_typelibrary_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipAttribute, m_specialattribute_valuemin_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipAttribute, m_specialattribute_valuemax_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipAttribute, m_godattribute_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipAttribute, m_godattribute_valuemin_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipAttribute, m_godattribute_valuemax_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipAttribute, m_attribute_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipAttribute, m_star_library_),
  };
  E_EquipAttribute_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_EquipAttribute_descriptor_,
      E_EquipAttribute::default_instance_,
      E_EquipAttribute_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipAttribute, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipAttribute, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_EquipAttribute));
  Sheet_EquipAttribute_descriptor_ = file->message_type(4);
  static const int Sheet_EquipAttribute_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_EquipAttribute, e_equipattribute_list_),
  };
  Sheet_EquipAttribute_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_EquipAttribute_descriptor_,
      Sheet_EquipAttribute::default_instance_,
      Sheet_EquipAttribute_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_EquipAttribute, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_EquipAttribute, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_EquipAttribute));
  E_EquipStrongTypeDesc_descriptor_ = file->message_type(5);
  static const int E_EquipStrongTypeDesc_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipStrongTypeDesc, m_num_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipStrongTypeDesc, m_id_),
  };
  E_EquipStrongTypeDesc_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_EquipStrongTypeDesc_descriptor_,
      E_EquipStrongTypeDesc::default_instance_,
      E_EquipStrongTypeDesc_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipStrongTypeDesc, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipStrongTypeDesc, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_EquipStrongTypeDesc));
  E_EquipStrong_descriptor_ = file->message_type(6);
  static const int E_EquipStrong_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipStrong, m_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipStrong, m_position_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipStrong, m_wearquality_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipStrong, m_srtongup_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipStrong, m_type_),
  };
  E_EquipStrong_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_EquipStrong_descriptor_,
      E_EquipStrong::default_instance_,
      E_EquipStrong_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipStrong, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipStrong, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_EquipStrong));
  Sheet_EquipStrong_descriptor_ = file->message_type(7);
  static const int Sheet_EquipStrong_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_EquipStrong, e_equipstrong_list_),
  };
  Sheet_EquipStrong_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_EquipStrong_descriptor_,
      Sheet_EquipStrong::default_instance_,
      Sheet_EquipStrong_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_EquipStrong, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_EquipStrong, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_EquipStrong));
  E_EquipStrongexpCostDesc_descriptor_ = file->message_type(8);
  static const int E_EquipStrongexpCostDesc_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipStrongexpCostDesc, m_item_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipStrongexpCostDesc, m_num_),
  };
  E_EquipStrongexpCostDesc_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_EquipStrongexpCostDesc_descriptor_,
      E_EquipStrongexpCostDesc::default_instance_,
      E_EquipStrongexpCostDesc_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipStrongexpCostDesc, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipStrongexpCostDesc, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_EquipStrongexpCostDesc));
  E_EquipStrongexp_descriptor_ = file->message_type(9);
  static const int E_EquipStrongexp_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipStrongexp, m_lv_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipStrongexp, m_gold_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipStrongexp, m_cost_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipStrongexp, m_positiontype_),
  };
  E_EquipStrongexp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_EquipStrongexp_descriptor_,
      E_EquipStrongexp::default_instance_,
      E_EquipStrongexp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipStrongexp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipStrongexp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_EquipStrongexp));
  Sheet_EquipStrongexp_descriptor_ = file->message_type(10);
  static const int Sheet_EquipStrongexp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_EquipStrongexp, e_equipstrongexp_list_),
  };
  Sheet_EquipStrongexp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_EquipStrongexp_descriptor_,
      Sheet_EquipStrongexp::default_instance_,
      Sheet_EquipStrongexp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_EquipStrongexp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_EquipStrongexp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_EquipStrongexp));
  E_EquipStrongtotalAttributeDesc_descriptor_ = file->message_type(11);
  static const int E_EquipStrongtotalAttributeDesc_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipStrongtotalAttributeDesc, m_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipStrongtotalAttributeDesc, m_value_),
  };
  E_EquipStrongtotalAttributeDesc_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_EquipStrongtotalAttributeDesc_descriptor_,
      E_EquipStrongtotalAttributeDesc::default_instance_,
      E_EquipStrongtotalAttributeDesc_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipStrongtotalAttributeDesc, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipStrongtotalAttributeDesc, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_EquipStrongtotalAttributeDesc));
  E_EquipStrongtotal_descriptor_ = file->message_type(12);
  static const int E_EquipStrongtotal_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipStrongtotal, m_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipStrongtotal, m_idtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipStrongtotal, m_idnum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipStrongtotal, m_attribute_),
  };
  E_EquipStrongtotal_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_EquipStrongtotal_descriptor_,
      E_EquipStrongtotal::default_instance_,
      E_EquipStrongtotal_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipStrongtotal, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipStrongtotal, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_EquipStrongtotal));
  Sheet_EquipStrongtotal_descriptor_ = file->message_type(13);
  static const int Sheet_EquipStrongtotal_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_EquipStrongtotal, e_equipstrongtotal_list_),
  };
  Sheet_EquipStrongtotal_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_EquipStrongtotal_descriptor_,
      Sheet_EquipStrongtotal::default_instance_,
      Sheet_EquipStrongtotal_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_EquipStrongtotal, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_EquipStrongtotal, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_EquipStrongtotal));
  E_EquipGem_descriptor_ = file->message_type(14);
  static const int E_EquipGem_offsets_[8] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipGem, m_position_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipGem, m_gemtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipGem, m_speciallygemtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipGem, m_payunlockitem_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipGem, m_payunlocknnm_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipGem, m_commongembuy_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipGem, m_speciallygembuy_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipGem, m_gemunlock_),
  };
  E_EquipGem_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_EquipGem_descriptor_,
      E_EquipGem::default_instance_,
      E_EquipGem_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipGem, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipGem, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_EquipGem));
  Sheet_EquipGem_descriptor_ = file->message_type(15);
  static const int Sheet_EquipGem_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_EquipGem, e_equipgem_list_),
  };
  Sheet_EquipGem_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_EquipGem_descriptor_,
      Sheet_EquipGem::default_instance_,
      Sheet_EquipGem_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_EquipGem, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_EquipGem, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_EquipGem));
  E_EquipGemlv_descriptor_ = file->message_type(16);
  static const int E_EquipGemlv_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipGemlv, m_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipGemlv, m_nextid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipGemlv, m_numb_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipGemlv, m_nextvalue_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipGemlv, m_costgold_),
  };
  E_EquipGemlv_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_EquipGemlv_descriptor_,
      E_EquipGemlv::default_instance_,
      E_EquipGemlv_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipGemlv, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipGemlv, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_EquipGemlv));
  Sheet_EquipGemlv_descriptor_ = file->message_type(17);
  static const int Sheet_EquipGemlv_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_EquipGemlv, e_equipgemlv_list_),
  };
  Sheet_EquipGemlv_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_EquipGemlv_descriptor_,
      Sheet_EquipGemlv::default_instance_,
      Sheet_EquipGemlv_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_EquipGemlv, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_EquipGemlv, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_EquipGemlv));
  E_EquipStoveattAttributeDesc_descriptor_ = file->message_type(18);
  static const int E_EquipStoveattAttributeDesc_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipStoveattAttributeDesc, m_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipStoveattAttributeDesc, m_value_),
  };
  E_EquipStoveattAttributeDesc_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_EquipStoveattAttributeDesc_descriptor_,
      E_EquipStoveattAttributeDesc::default_instance_,
      E_EquipStoveattAttributeDesc_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipStoveattAttributeDesc, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipStoveattAttributeDesc, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_EquipStoveattAttributeDesc));
  E_EquipStoveatt_descriptor_ = file->message_type(19);
  static const int E_EquipStoveatt_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipStoveatt, m_lv_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipStoveatt, m_exp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipStoveatt, m_attribute_),
  };
  E_EquipStoveatt_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_EquipStoveatt_descriptor_,
      E_EquipStoveatt::default_instance_,
      E_EquipStoveatt_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipStoveatt, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipStoveatt, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_EquipStoveatt));
  Sheet_EquipStoveatt_descriptor_ = file->message_type(20);
  static const int Sheet_EquipStoveatt_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_EquipStoveatt, e_equipstoveatt_list_),
  };
  Sheet_EquipStoveatt_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_EquipStoveatt_descriptor_,
      Sheet_EquipStoveatt::default_instance_,
      Sheet_EquipStoveatt_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_EquipStoveatt, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_EquipStoveatt, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_EquipStoveatt));
  E_EquipStoveexp_descriptor_ = file->message_type(21);
  static const int E_EquipStoveexp_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipStoveexp, m_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipStoveexp, m_exp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipStoveexp, m_wearquality_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipStoveexp, m_quality_),
  };
  E_EquipStoveexp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_EquipStoveexp_descriptor_,
      E_EquipStoveexp::default_instance_,
      E_EquipStoveexp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipStoveexp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipStoveexp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_EquipStoveexp));
  Sheet_EquipStoveexp_descriptor_ = file->message_type(22);
  static const int Sheet_EquipStoveexp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_EquipStoveexp, e_equipstoveexp_list_),
  };
  Sheet_EquipStoveexp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_EquipStoveexp_descriptor_,
      Sheet_EquipStoveexp::default_instance_,
      Sheet_EquipStoveexp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_EquipStoveexp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_EquipStoveexp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_EquipStoveexp));
  E_EquipGrade_descriptor_ = file->message_type(23);
  static const int E_EquipGrade_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipGrade, m_id_),
  };
  E_EquipGrade_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_EquipGrade_descriptor_,
      E_EquipGrade::default_instance_,
      E_EquipGrade_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipGrade, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipGrade, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_EquipGrade));
  Sheet_EquipGrade_descriptor_ = file->message_type(24);
  static const int Sheet_EquipGrade_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_EquipGrade, e_equipgrade_list_),
  };
  Sheet_EquipGrade_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_EquipGrade_descriptor_,
      Sheet_EquipGrade::default_instance_,
      Sheet_EquipGrade_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_EquipGrade, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_EquipGrade, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_EquipGrade));
  E_EquipClearAttributeDesc_descriptor_ = file->message_type(25);
  static const int E_EquipClearAttributeDesc_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipClearAttributeDesc, m_value_),
  };
  E_EquipClearAttributeDesc_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_EquipClearAttributeDesc_descriptor_,
      E_EquipClearAttributeDesc::default_instance_,
      E_EquipClearAttributeDesc_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipClearAttributeDesc, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipClearAttributeDesc, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_EquipClearAttributeDesc));
  E_EquipClearSectionDesc_descriptor_ = file->message_type(26);
  static const int E_EquipClearSectionDesc_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipClearSectionDesc, m_down_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipClearSectionDesc, m_p_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipClearSectionDesc, m_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipClearSectionDesc, m_up_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipClearSectionDesc, m_g_),
  };
  E_EquipClearSectionDesc_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_EquipClearSectionDesc_descriptor_,
      E_EquipClearSectionDesc::default_instance_,
      E_EquipClearSectionDesc_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipClearSectionDesc, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipClearSectionDesc, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_EquipClearSectionDesc));
  E_EquipClear_descriptor_ = file->message_type(27);
  static const int E_EquipClear_offsets_[10] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipClear, m_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipClear, m_value_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipClear, m_unlockitem_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipClear, m_unlocknum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipClear, m_consumeid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipClear, m_consumenum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipClear, m_lockingid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipClear, m_lockingnum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipClear, m_attribute_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipClear, m_section_),
  };
  E_EquipClear_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_EquipClear_descriptor_,
      E_EquipClear::default_instance_,
      E_EquipClear_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipClear, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipClear, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_EquipClear));
  Sheet_EquipClear_descriptor_ = file->message_type(28);
  static const int Sheet_EquipClear_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_EquipClear, e_equipclear_list_),
  };
  Sheet_EquipClear_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_EquipClear_descriptor_,
      Sheet_EquipClear::default_instance_,
      Sheet_EquipClear_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_EquipClear, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_EquipClear, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_EquipClear));
  E_EquipSuitAttributeDesc_descriptor_ = file->message_type(29);
  static const int E_EquipSuitAttributeDesc_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipSuitAttributeDesc, m_sctivation_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipSuitAttributeDesc, m_value_),
  };
  E_EquipSuitAttributeDesc_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_EquipSuitAttributeDesc_descriptor_,
      E_EquipSuitAttributeDesc::default_instance_,
      E_EquipSuitAttributeDesc_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipSuitAttributeDesc, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipSuitAttributeDesc, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_EquipSuitAttributeDesc));
  E_EquipSuit_descriptor_ = file->message_type(30);
  static const int E_EquipSuit_offsets_[9] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipSuit, m_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipSuit, m_profession_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipSuit, m_suitlv_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipSuit, m_level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipSuit, m_colour_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipSuit, m_aftername_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipSuit, m_suitevalue_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipSuit, m_attribute_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipSuit, m_position_),
  };
  E_EquipSuit_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_EquipSuit_descriptor_,
      E_EquipSuit::default_instance_,
      E_EquipSuit_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipSuit, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipSuit, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_EquipSuit));
  Sheet_EquipSuit_descriptor_ = file->message_type(31);
  static const int Sheet_EquipSuit_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_EquipSuit, e_equipsuit_list_),
  };
  Sheet_EquipSuit_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_EquipSuit_descriptor_,
      Sheet_EquipSuit::default_instance_,
      Sheet_EquipSuit_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_EquipSuit, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_EquipSuit, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_EquipSuit));
  E_EquipBreakBreakDesc_descriptor_ = file->message_type(32);
  static const int E_EquipBreakBreakDesc_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipBreakBreakDesc, m_item_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipBreakBreakDesc, m_num_),
  };
  E_EquipBreakBreakDesc_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_EquipBreakBreakDesc_descriptor_,
      E_EquipBreakBreakDesc::default_instance_,
      E_EquipBreakBreakDesc_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipBreakBreakDesc, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipBreakBreakDesc, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_EquipBreakBreakDesc));
  E_EquipBreak_descriptor_ = file->message_type(33);
  static const int E_EquipBreak_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipBreak, m_lv_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipBreak, m_step_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipBreak, m_positiontype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipBreak, m_basic_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipBreak, m_star_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipBreak, m_break_),
  };
  E_EquipBreak_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_EquipBreak_descriptor_,
      E_EquipBreak::default_instance_,
      E_EquipBreak_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipBreak, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipBreak, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_EquipBreak));
  Sheet_EquipBreak_descriptor_ = file->message_type(34);
  static const int Sheet_EquipBreak_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_EquipBreak, e_equipbreak_list_),
  };
  Sheet_EquipBreak_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_EquipBreak_descriptor_,
      Sheet_EquipBreak::default_instance_,
      Sheet_EquipBreak_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_EquipBreak, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_EquipBreak, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_EquipBreak));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_equip_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_EquipEquip_descriptor_, &E_EquipEquip::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_EquipEquip_descriptor_, &Sheet_EquipEquip::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_EquipAttributeAttributeDesc_descriptor_, &E_EquipAttributeAttributeDesc::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_EquipAttribute_descriptor_, &E_EquipAttribute::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_EquipAttribute_descriptor_, &Sheet_EquipAttribute::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_EquipStrongTypeDesc_descriptor_, &E_EquipStrongTypeDesc::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_EquipStrong_descriptor_, &E_EquipStrong::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_EquipStrong_descriptor_, &Sheet_EquipStrong::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_EquipStrongexpCostDesc_descriptor_, &E_EquipStrongexpCostDesc::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_EquipStrongexp_descriptor_, &E_EquipStrongexp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_EquipStrongexp_descriptor_, &Sheet_EquipStrongexp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_EquipStrongtotalAttributeDesc_descriptor_, &E_EquipStrongtotalAttributeDesc::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_EquipStrongtotal_descriptor_, &E_EquipStrongtotal::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_EquipStrongtotal_descriptor_, &Sheet_EquipStrongtotal::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_EquipGem_descriptor_, &E_EquipGem::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_EquipGem_descriptor_, &Sheet_EquipGem::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_EquipGemlv_descriptor_, &E_EquipGemlv::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_EquipGemlv_descriptor_, &Sheet_EquipGemlv::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_EquipStoveattAttributeDesc_descriptor_, &E_EquipStoveattAttributeDesc::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_EquipStoveatt_descriptor_, &E_EquipStoveatt::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_EquipStoveatt_descriptor_, &Sheet_EquipStoveatt::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_EquipStoveexp_descriptor_, &E_EquipStoveexp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_EquipStoveexp_descriptor_, &Sheet_EquipStoveexp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_EquipGrade_descriptor_, &E_EquipGrade::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_EquipGrade_descriptor_, &Sheet_EquipGrade::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_EquipClearAttributeDesc_descriptor_, &E_EquipClearAttributeDesc::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_EquipClearSectionDesc_descriptor_, &E_EquipClearSectionDesc::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_EquipClear_descriptor_, &E_EquipClear::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_EquipClear_descriptor_, &Sheet_EquipClear::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_EquipSuitAttributeDesc_descriptor_, &E_EquipSuitAttributeDesc::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_EquipSuit_descriptor_, &E_EquipSuit::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_EquipSuit_descriptor_, &Sheet_EquipSuit::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_EquipBreakBreakDesc_descriptor_, &E_EquipBreakBreakDesc::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_EquipBreak_descriptor_, &E_EquipBreak::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_EquipBreak_descriptor_, &Sheet_EquipBreak::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_equip_2eproto() {
  delete E_EquipEquip::default_instance_;
  delete E_EquipEquip_reflection_;
  delete Sheet_EquipEquip::default_instance_;
  delete Sheet_EquipEquip_reflection_;
  delete E_EquipAttributeAttributeDesc::default_instance_;
  delete E_EquipAttributeAttributeDesc_reflection_;
  delete E_EquipAttribute::default_instance_;
  delete E_EquipAttribute_reflection_;
  delete Sheet_EquipAttribute::default_instance_;
  delete Sheet_EquipAttribute_reflection_;
  delete E_EquipStrongTypeDesc::default_instance_;
  delete E_EquipStrongTypeDesc_reflection_;
  delete E_EquipStrong::default_instance_;
  delete E_EquipStrong_reflection_;
  delete Sheet_EquipStrong::default_instance_;
  delete Sheet_EquipStrong_reflection_;
  delete E_EquipStrongexpCostDesc::default_instance_;
  delete E_EquipStrongexpCostDesc_reflection_;
  delete E_EquipStrongexp::default_instance_;
  delete E_EquipStrongexp_reflection_;
  delete Sheet_EquipStrongexp::default_instance_;
  delete Sheet_EquipStrongexp_reflection_;
  delete E_EquipStrongtotalAttributeDesc::default_instance_;
  delete E_EquipStrongtotalAttributeDesc_reflection_;
  delete E_EquipStrongtotal::default_instance_;
  delete E_EquipStrongtotal_reflection_;
  delete Sheet_EquipStrongtotal::default_instance_;
  delete Sheet_EquipStrongtotal_reflection_;
  delete E_EquipGem::default_instance_;
  delete E_EquipGem_reflection_;
  delete Sheet_EquipGem::default_instance_;
  delete Sheet_EquipGem_reflection_;
  delete E_EquipGemlv::default_instance_;
  delete E_EquipGemlv_reflection_;
  delete Sheet_EquipGemlv::default_instance_;
  delete Sheet_EquipGemlv_reflection_;
  delete E_EquipStoveattAttributeDesc::default_instance_;
  delete E_EquipStoveattAttributeDesc_reflection_;
  delete E_EquipStoveatt::default_instance_;
  delete E_EquipStoveatt_reflection_;
  delete Sheet_EquipStoveatt::default_instance_;
  delete Sheet_EquipStoveatt_reflection_;
  delete E_EquipStoveexp::default_instance_;
  delete E_EquipStoveexp_reflection_;
  delete Sheet_EquipStoveexp::default_instance_;
  delete Sheet_EquipStoveexp_reflection_;
  delete E_EquipGrade::default_instance_;
  delete E_EquipGrade_reflection_;
  delete Sheet_EquipGrade::default_instance_;
  delete Sheet_EquipGrade_reflection_;
  delete E_EquipClearAttributeDesc::default_instance_;
  delete E_EquipClearAttributeDesc_reflection_;
  delete E_EquipClearSectionDesc::default_instance_;
  delete E_EquipClearSectionDesc_reflection_;
  delete E_EquipClear::default_instance_;
  delete E_EquipClear_reflection_;
  delete Sheet_EquipClear::default_instance_;
  delete Sheet_EquipClear_reflection_;
  delete E_EquipSuitAttributeDesc::default_instance_;
  delete E_EquipSuitAttributeDesc_reflection_;
  delete E_EquipSuit::default_instance_;
  delete E_EquipSuit_reflection_;
  delete Sheet_EquipSuit::default_instance_;
  delete Sheet_EquipSuit_reflection_;
  delete E_EquipBreakBreakDesc::default_instance_;
  delete E_EquipBreakBreakDesc_reflection_;
  delete E_EquipBreak::default_instance_;
  delete E_EquipBreak_reflection_;
  delete Sheet_EquipBreak::default_instance_;
  delete Sheet_EquipBreak_reflection_;
}

void protobuf_AddDesc_equip_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::yd_fieldoptions::protobuf_AddDesc_yd_5ffieldoptions_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\013equip.proto\022\010proto_ff\032\025yd_fieldoptions"
    ".proto\"\374\005\n\014E_EquipEquip\022\032\n\004m_id\030\001 \001(\003B\014\302"
    "\377\024\010\350\243\205\345\244\207ID\022$\n\006m_name\030\002 \001(\tB\024\302\377\024\014\350\243\205\345\244\207\345"
    "\220\215\347\247\260\220\301\024<\022 \n\006m_type\030\003 \001(\005B\020\302\377\024\014\350\243\205\345\244\207\345\244\247"
    "\347\261\273\022\'\n\rm_wearquality\030\004 \001(\005B\020\302\377\024\014\350\243\205\345\244\207\345\223"
    "\201\351\230\266\022$\n\nm_position\030\005 \001(\005B\020\302\377\024\014\350\243\205\345\244\207\344\275\215\347"
    "\275\256\022*\n\014m_profession\030\006 \001(\tB\024\302\377\024\014\350\201\214\344\270\232\351\231\220\345"
    "\210\266\220\301\024<\022(\n\016m_professionlv\030\007 \001(\005B\020\302\377\024\014\350\275\254\350"
    "\201\214\347\255\211\347\272\247\022\'\n\007m_level\030\010 \001(\005B\026\302\377\024\022\347\251\277\346\210\264\347\255\211"
    "\347\272\247\351\231\220\345\210\266\022#\n\tm_quality\030\t \001(\005B\020\302\377\024\014\350\243\205\345\244\207"
    "\345\223\201\350\264\250\022#\n\rm_attributeid\030\n \001(\005B\014\302\377\024\010\345\261\236\346\200"
    "\247ID\022 \n\006m_star\030\013 \001(\005B\020\302\377\024\014\350\243\205\345\244\207\346\230\237\347\272\247\022%\n"
    "\013m_iscanbind\030\014 \001(\005B\020\302\377\024\014\346\230\257\345\220\246\347\273\221\345\256\232\022-\n\r"
    "m_istradebind\030\r \001(\005B\026\302\377\024\022\346\230\257\345\220\246\344\272\244\346\230\223\347\273\221"
    "\345\256\232\022%\n\013m_sellprice\030\016 \001(\005B\020\302\377\024\014\345\207\272\345\224\256\344\273\267\346"
    "\240\274\022\'\n\006m_icon\030\017 \001(\tB\027\302\377\024\017\350\243\205\345\244\207\345\233\276\346\240\207\345\220\215\220"
    "\301\024<\022 \n\006m_time\030\020 \001(\005B\020\302\377\024\014\351\231\220\346\227\266\350\243\205\345\244\207\022.\n"
    "\013m_broadcast\030\021 \001(\005B\031\302\377\024\025\346\230\257\345\220\246\346\222\255\346\224\276\350\267\221\351"
    "\251\254\347\201\257\022-\n\017m_meltingresult\030\022 \001(\tB\024\302\377\024\014\347\206\224\347"
    "\202\274\344\272\247\345\207\272\220\301\024<\022\'\n\tm_skillid\030\023 \001(\tB\024\302\377\024\014\351\231\204"
    "\345\270\246\346\212\200\350\203\275\220\301\024<\"L\n\020Sheet_EquipEquip\0228\n\021E_E"
    "quipEquip_List\030\001 \003(\0132\026.proto_ff.E_EquipE"
    "quipB\005\210\301\024\370U\"\201\001\n\035E_EquipAttributeAttribut"
    "eDesc\022$\n\nm_valuemin\030\001 \001(\005B\020\302\377\024\014\346\234\200\345\260\217\346\225\260"
    "\345\200\274\022\024\n\006m_type\030\002 \001(\005B\004\302\377\024\000\022$\n\nm_valuemax\030"
    "\003 \001(\005B\020\302\377\024\014\346\234\200\345\244\247\346\225\260\345\200\274\"\250\007\n\020E_EquipAttri"
    "bute\022\032\n\004m_id\030\001 \001(\005B\014\302\377\024\010\345\261\236\346\200\247ID\0223\n\rm_bl"
    "uestarnum\030\002 \001(\005B\034\302\377\024\030\350\223\235\350\211\262\346\230\237\347\272\247\345\261\236\346\200\247\346"
    "\235\241\346\225\260\022<\n\017m_bluestar_type\030\003 \001(\tB#\302\377\024\033\350\223\235\350"
    "\211\262\346\230\237\347\272\247\345\261\236\346\200\247\347\261\273\345\236\213\345\272\223\220\301\024<\022:\n\rm_bluesta"
    "r_lv\030\004 \001(\tB#\302\377\024\033\350\223\235\350\211\262\346\230\237\347\272\247\347\255\211\347\272\247\351\227\264\351\232\224"
    "\345\267\256\220\301\024<\022>\n\021m_bluestar_number\030\005 \001(\tB#\302\377\024\033"
    "\350\223\235\350\211\262\346\230\237\347\272\247\346\257\217\347\272\247\345\242\236\345\212\240\345\200\274\220\301\024<\022<\n\026m_spe"
    "cialattributedown\030\006 \001(\005B\034\302\377\024\030\347\211\271\346\256\212\345\261\236\346\200"
    "\247\346\225\260\351\207\217\344\270\213\351\231\220\022:\n\024m_specialattributeup\030\007 "
    "\001(\005B\034\302\377\024\030\347\211\271\346\256\212\345\261\236\346\200\247\346\225\260\351\207\217\344\270\212\351\231\220\022E\n\036m_s"
    "pecialattribute_typelibrary\030\010 \001(\tB\035\302\377\024\025\347"
    "\211\271\346\256\212\346\230\237\347\272\247\345\261\236\346\200\247\345\272\223\220\301\024<\022B\n\033m_specialatt"
    "ribute_valuemin\030\t \001(\tB\035\302\377\024\025\347\211\271\346\256\212\345\261\236\346\200\247\346"
    "\234\200\345\260\217\345\200\274\220\301\024<\022B\n\033m_specialattribute_value"
    "max\030\n \001(\tB\035\302\377\024\025\347\211\271\346\256\212\345\261\236\346\200\247\346\234\200\345\244\247\345\200\274\220\301\024<"
    "\0221\n\023m_godattribute_type\030\013 \001(\tB\024\302\377\024\014\344\273\231\345\260"
    "\212\345\261\236\346\200\247\220\301\024<\022A\n\027m_godattribute_valuemin\030\014"
    " \001(\tB \302\377\024\030\344\273\231\345\260\212\345\261\236\346\200\247\346\234\200\345\260\217\346\225\260\345\200\274\220\301\024<\022A"
    "\n\027m_godattribute_valuemax\030\r \001(\tB \302\377\024\030\344\273\231"
    "\345\260\212\345\261\236\346\200\247\346\234\200\345\244\247\346\225\260\345\200\274\220\301\024<\022R\n\013m_attribute"
    "\030\016 \003(\0132\'.proto_ff.E_EquipAttributeAttrib"
    "uteDescB\024\302\377\024\014\345\237\272\347\241\200\345\261\236\346\200\247\210\301\024\003\0223\n\016m_star_"
    "library\030\017 \003(\tB\033\302\377\024\017\346\230\237\347\272\247\345\261\236\346\200\247\345\272\223\210\301\024\007\220\301"
    "\024<\"X\n\024Sheet_EquipAttribute\022@\n\025E_EquipAtt"
    "ribute_List\030\001 \003(\0132\032.proto_ff.E_EquipAttr"
    "ibuteB\005\210\301\024\370U\"I\n\025E_EquipStrongTypeDesc\022\032\n"
    "\005m_num\030\001 \001(\tB\013\302\377\024\003\345\200\274\220\301\024<\022\024\n\004m_id\030\002 \001(\005B"
    "\006\302\377\024\002ID\"\341\001\n\rE_EquipStrong\022\032\n\004m_id\030\001 \001(\003B"
    "\014\302\377\024\010\351\203\250\344\275\215ID\022$\n\nm_position\030\002 \001(\005B\020\302\377\024\014\350"
    "\243\205\345\244\207\351\203\250\344\275\215\022\'\n\rm_wearquality\030\003 \001(\005B\020\302\377\024\014"
    "\350\243\205\345\244\207\345\223\201\351\230\266\022$\n\nm_srtongup\030\004 \001(\005B\020\302\377\024\014\345\274"
    "\272\345\214\226\344\270\212\351\231\220\022\?\n\006m_type\030\005 \003(\0132\037.proto_ff.E_"
    "EquipStrongTypeDescB\016\302\377\024\006\345\261\236\346\200\247\210\301\024\002\"O\n\021S"
    "heet_EquipStrong\022:\n\022E_EquipStrong_List\030\001"
    " \003(\0132\027.proto_ff.E_EquipStrongB\005\210\301\024\364\003\"]\n\030"
    "E_EquipStrongexpCostDesc\022 \n\006m_item\030\001 \001(\005"
    "B\020\302\377\024\014\346\266\210\350\200\227\351\201\223\345\205\267\022\037\n\005m_num\030\002 \001(\005B\020\302\377\024\014\351"
    "\201\223\345\205\267\346\225\260\351\207\217\"\320\001\n\020E_EquipStrongexp\022\030\n\004m_lv"
    "\030\001 \001(\005B\n\302\377\024\006\347\255\211\347\272\247\022&\n\006m_gold\030\002 \001(\005B\026\302\377\024\022"
    "\345\274\272\345\214\226\346\266\210\350\200\227\351\207\221\345\270\201\022H\n\006m_cost\030\003 \003(\0132\".pro"
    "to_ff.E_EquipStrongexpCostDescB\024\302\377\024\014\351\203\250\344"
    "\275\215\347\261\273\345\236\213\210\301\024\003\0220\n\016m_positiontype\030\004 \003(\tB\030\302\377"
    "\024\014\351\203\250\344\275\215\347\261\273\345\236\213\210\301\024\003\220\301\024<\"X\n\024Sheet_EquipStr"
    "ongexp\022@\n\025E_EquipStrongexp_List\030\001 \003(\0132\032."
    "proto_ff.E_EquipStrongexpB\005\210\301\024\240\006\"S\n\037E_Eq"
    "uipStrongtotalAttributeDesc\022\026\n\006m_type\030\001 "
    "\001(\005B\006\302\377\024\002ID\022\030\n\007m_value\030\002 \001(\005B\007\302\377\024\003\345\200\274\"\320\001"
    "\n\022E_EquipStrongtotal\022\035\n\004m_id\030\001 \001(\003B\017\302\377\024\013"
    "\346\200\273\347\255\211\347\272\247ID\022%\n\010m_idtype\030\002 \001(\005B\023\302\377\024\017\346\200\273\347\255"
    "\211\347\272\247\347\261\273\345\236\213\022\036\n\007m_idnum\030\003 \001(\005B\r\302\377\024\t\346\200\273\347\255\211\347"
    "\272\247\022T\n\013m_attribute\030\004 \003(\0132).proto_ff.E_Equ"
    "ipStrongtotalAttributeDescB\024\302\377\024\014\345\237\272\347\241\200\345\261"
    "\236\346\200\247\210\301\024\004\"^\n\026Sheet_EquipStrongtotal\022D\n\027E_"
    "EquipStrongtotal_List\030\001 \003(\0132\034.proto_ff.E"
    "_EquipStrongtotalB\005\210\301\024\310\001\"\260\003\n\nE_EquipGem\022"
    "$\n\nm_position\030\001 \001(\005B\020\302\377\024\014\350\243\205\345\244\207\351\203\250\344\275\215\0223\n"
    "\tm_gemtype\030\002 \001(\tB \302\377\024\030\346\231\256\351\200\232\346\247\275\344\275\215\345\256\235\347\237\263"
    "\347\261\273\345\236\213\220\301\024<\0228\n\022m_speciallygemtype\030\003 \001(\005B\034"
    "\302\377\024\030\347\211\271\346\256\212\346\247\275\344\275\215\345\256\235\347\237\263\347\261\273\345\236\213\0222\n\017m_payunl"
    "ockitem\030\004 \001(\005B\031\302\377\024\025\344\273\230\350\264\271\350\247\243\351\224\201\346\247\275\351\201\223\345\205\267"
    "\022.\n\016m_payunlocknnm\030\005 \001(\005B\026\302\377\024\022\350\247\243\351\224\201\351\201\223\345"
    "\205\267\346\225\260\351\207\217\0228\n\016m_commongembuy\030\006 \001(\tB \302\377\024\030\346\231"
    "\256\351\200\232\346\247\275\344\275\215\345\277\253\346\215\267\350\264\255\344\271\260\220\301\024<\022;\n\021m_speciall"
    "ygembuy\030\007 \001(\tB \302\377\024\030\347\211\271\346\256\212\346\247\275\344\275\215\345\277\253\346\215\267\350\264\255"
    "\344\271\260\220\301\024<\0222\n\013m_gemunlock\030\010 \003(\005B\035\302\377\024\025\350\243\205\345\244\207"
    "\346\247\275\350\247\243\351\224\201\345\223\201\351\230\266\210\301\024\004\"E\n\016Sheet_EquipGem\0223\n"
    "\017E_EquipGem_List\030\001 \003(\0132\024.proto_ff.E_Equi"
    "pGemB\004\210\301\024\024\"\317\001\n\014E_EquipGemlv\022\024\n\004m_id\030\001 \001("
    "\005B\006\302\377\024\002id\022$\n\010m_nextid\030\002 \001(\005B\022\302\377\024\016\344\270\213\347\272\247\345"
    "\256\235\347\237\263ID\0220\n\006m_numb\030\003 \001(\tB \302\377\024\030\345\257\271\345\272\224\344\270\200\347\272"
    "\247\345\256\235\347\237\263\346\225\260\351\207\217\220\301\024<\022%\n\013m_nextvalue\030\004 \001(\005B\020"
    "\302\377\024\014\344\270\213\347\272\247\345\267\256\345\200\274\022*\n\nm_costgold\030\005 \001(\005B\026\302\377"
    "\024\022\344\270\213\347\272\247\346\266\210\350\200\227\351\207\221\345\270\201\"L\n\020Sheet_EquipGemlv"
    "\0228\n\021E_EquipGemlv_List\030\001 \003(\0132\026.proto_ff.E"
    "_EquipGemlvB\005\210\301\024\254\002\"P\n\034E_EquipStoveattAtt"
    "ributeDesc\022\026\n\006m_type\030\001 \001(\005B\006\302\377\024\002ID\022\030\n\007m_"
    "value\030\002 \001(\005B\007\302\377\024\003\345\200\274\"\237\001\n\017E_EquipStoveatt"
    "\022\030\n\004m_lv\030\001 \001(\005B\n\302\377\024\006\347\255\211\347\272\247\022\037\n\005m_exp\030\002 \001("
    "\003B\020\302\377\024\014\346\200\273\347\273\217\351\252\214\345\200\274\022Q\n\013m_attribute\030\003 \003(\013"
    "2&.proto_ff.E_EquipStoveattAttributeDesc"
    "B\024\302\377\024\014\345\237\272\347\241\200\345\261\236\346\200\247\210\301\024\004\"U\n\023Sheet_EquipSto"
    "veatt\022>\n\024E_EquipStoveatt_List\030\001 \003(\0132\031.pr"
    "oto_ff.E_EquipStoveattB\005\210\301\024\320\017\"\227\001\n\017E_Equi"
    "pStoveexp\022\030\n\004m_id\030\001 \001(\005B\n\302\377\024\006\345\272\217\345\217\267\022\034\n\005m"
    "_exp\030\002 \001(\005B\r\302\377\024\t\347\273\217\351\252\214\345\200\274\022\'\n\rm_wearquali"
    "ty\030\003 \001(\005B\020\302\377\024\014\350\243\205\345\244\207\345\223\201\351\230\266\022#\n\tm_quality\030"
    "\004 \001(\005B\020\302\377\024\014\350\243\205\345\244\207\345\223\201\350\264\250\"U\n\023Sheet_EquipSt"
    "oveexp\022>\n\024E_EquipStoveexp_List\030\001 \003(\0132\031.p"
    "roto_ff.E_EquipStoveexpB\005\210\301\024\310\001\"(\n\014E_Equi"
    "pGrade\022\030\n\004m_id\030\001 \001(\005B\n\302\377\024\006\345\272\217\345\217\267\"K\n\020Shee"
    "t_EquipGrade\0227\n\021E_EquipGrade_List\030\001 \003(\0132"
    "\026.proto_ff.E_EquipGradeB\004\210\301\024(\"<\n\031E_Equip"
    "ClearAttributeDesc\022\037\n\007m_value\030\001 \001(\tB\016\302\377\024"
    "\006\345\261\236\346\200\247\220\301\024<\"\274\001\n\027E_EquipClearSectionDesc\022"
    "!\n\006m_down\030\001 \001(\tB\021\302\377\024\t\346\234\200\345\260\217\345\200\274\220\301\024<\022\035\n\003m_"
    "p\030\002 \001(\005B\020\302\377\024\014\346\231\256\351\200\232\346\264\227\347\273\203\022\033\n\006m_type\030\003 \001("
    "\tB\013\302\377\024\003\345\272\223\220\301\024<\022\037\n\004m_up\030\004 \001(\tB\021\302\377\024\t\346\234\200\345\244\247"
    "\345\200\274\220\301\024<\022!\n\003m_g\030\005 \001(\tB\024\302\377\024\014\351\253\230\347\272\247\346\264\227\347\273\203\220\301"
    "\024<\"\214\004\n\014E_EquipClear\022\032\n\004m_id\030\001 \001(\005B\014\302\377\024\010\351"
    "\203\250\344\275\215id\022+\n\007m_value\030\002 \001(\tB\032\302\377\024\022\345\274\200\345\255\224\347\273\221\351"
    "\222\273\350\212\261\350\264\271\220\301\024<\022&\n\014m_unlockitem\030\003 \001(\005B\020\302\377\024\014"
    "\345\274\200\345\255\224\351\201\223\345\205\267\022/\n\013m_unlocknum\030\004 \001(\tB\032\302\377\024\022\345"
    "\274\200\345\255\224\351\201\223\345\205\267\346\225\260\351\207\217\220\301\024<\022\'\n\013m_consumeid\030\005 \001"
    "(\003B\022\302\377\024\016\346\266\210\350\200\227\351\201\223\345\205\267ID\0220\n\014m_consumenum\030\006"
    " \001(\tB\032\302\377\024\022\346\266\210\350\200\227\351\201\223\345\205\267\346\225\260\351\207\217\220\301\024<\022+\n\013m_lo"
    "ckingid\030\007 \001(\tB\026\302\377\024\016\351\253\230\347\272\247\351\201\223\345\205\267ID\220\301\024<\0220\n"
    "\014m_lockingnum\030\010 \001(\tB\032\302\377\024\022\351\253\230\347\272\247\351\201\223\345\205\267\346\225\260"
    "\351\207\217\220\301\024<\022T\n\013m_attribute\030\t \003(\0132#.proto_ff."
    "E_EquipClearAttributeDescB\032\302\377\024\022\345\261\236\346\200\247\350\276\276"
    "\346\240\207\346\277\200\346\264\273\210\301\024\003\022J\n\tm_section\030\n \003(\0132!.proto"
    "_ff.E_EquipClearSectionDescB\024\302\377\024\014\345\261\236\346\200\247\347"
    "\261\273\345\236\213\210\301\024\006\"K\n\020Sheet_EquipClear\0227\n\021E_Equip"
    "Clear_List\030\001 \003(\0132\026.proto_ff.E_EquipClear"
    "B\004\210\301\024\024\"W\n\030E_EquipSuitAttributeDesc\022\032\n\014m_"
    "sctivation\030\001 \001(\005B\004\302\377\024\000\022\037\n\007m_value\030\002 \001(\tB"
    "\016\302\377\024\006\346\225\260\345\200\274\220\301\024<\"\237\003\n\013E_EquipSuit\022\032\n\004m_id\030"
    "\001 \001(\003B\014\302\377\024\010\345\245\227\350\243\205ID\022$\n\014m_profession\030\002 \001("
    "\tB\016\302\377\024\006\350\201\214\344\270\232\220\301\024<\022\"\n\010m_suitlv\030\003 \001(\005B\020\302\377\024"
    "\014\345\245\227\350\243\205\347\255\211\347\272\247\022\'\n\007m_level\030\004 \001(\005B\026\302\377\024\022\345\245\227\350"
    "\243\205\346\211\223\351\200\240\347\255\211\347\272\247\022(\n\010m_colour\030\005 \001(\005B\026\302\377\024\022\345\245"
    "\227\350\243\205\346\211\223\351\200\240\345\223\201\350\264\250\022,\n\013m_aftername\030\006 \001(\tB\027\302"
    "\377\024\017\345\245\227\350\243\205\345\221\275\345\211\215\347\274\200\220\301\024<\022,\n\014m_suitevalue\030\007"
    " \001(\005B\026\302\377\024\022\345\245\227\350\243\205\345\245\227\344\273\266\346\225\260\351\207\217\022S\n\013m_attrib"
    "ute\030\010 \003(\0132\".proto_ff.E_EquipSuitAttribut"
    "eDescB\032\302\377\024\022\345\245\227\344\273\266\346\277\200\346\264\273\345\261\236\346\200\247\210\301\024\003\022&\n\nm_p"
    "osition\030\t \003(\tB\022\302\377\024\006\351\203\250\344\275\215\210\301\024\n\220\301\024<\"H\n\017She"
    "et_EquipSuit\0225\n\020E_EquipSuit_List\030\001 \003(\0132\025"
    ".proto_ff.E_EquipSuitB\004\210\301\024x\"Z\n\025E_EquipBr"
    "eakBreakDesc\022 \n\006m_item\030\001 \001(\005B\020\302\377\024\014\346\266\210\350\200\227"
    "\351\201\223\345\205\267\022\037\n\005m_num\030\002 \001(\005B\020\302\377\024\014\351\201\223\345\205\267\346\225\260\351\207\217\""
    "\231\002\n\014E_EquipBreak\022\024\n\004m_lv\030\001 \001(\005B\006\302\377\024\002id\022\032"
    "\n\006m_step\030\002 \001(\005B\n\302\377\024\006\351\230\266\346\225\260\022,\n\016m_position"
    "type\030\003 \001(\tB\024\302\377\024\014\351\203\250\344\275\215\347\261\273\345\236\213\220\301\024<\0220\n\007m_ba"
    "sic\030\004 \001(\005B\037\302\377\024\033\346\217\220\345\215\207\345\237\272\347\241\200\345\261\236\346\200\247\344\270\207\345\210\206\346"
    "\257\224\022/\n\006m_star\030\005 \001(\005B\037\302\377\024\033\346\217\220\345\215\207\346\230\237\347\272\247\345\261\236\346"
    "\200\247\344\270\207\345\210\206\346\257\224\022F\n\007m_break\030\006 \003(\0132\037.proto_ff."
    "E_EquipBreakBreakDescB\024\302\377\024\014\347\252\201\347\240\264\346\266\210\350\200\227\210"
    "\301\024\002\"K\n\020Sheet_EquipBreak\0227\n\021E_EquipBreak_"
    "List\030\001 \003(\0132\026.proto_ff.E_EquipBreakB\004\210\301\024<", 6600);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "equip.proto", &protobuf_RegisterTypes);
  E_EquipEquip::default_instance_ = new E_EquipEquip();
  Sheet_EquipEquip::default_instance_ = new Sheet_EquipEquip();
  E_EquipAttributeAttributeDesc::default_instance_ = new E_EquipAttributeAttributeDesc();
  E_EquipAttribute::default_instance_ = new E_EquipAttribute();
  Sheet_EquipAttribute::default_instance_ = new Sheet_EquipAttribute();
  E_EquipStrongTypeDesc::default_instance_ = new E_EquipStrongTypeDesc();
  E_EquipStrong::default_instance_ = new E_EquipStrong();
  Sheet_EquipStrong::default_instance_ = new Sheet_EquipStrong();
  E_EquipStrongexpCostDesc::default_instance_ = new E_EquipStrongexpCostDesc();
  E_EquipStrongexp::default_instance_ = new E_EquipStrongexp();
  Sheet_EquipStrongexp::default_instance_ = new Sheet_EquipStrongexp();
  E_EquipStrongtotalAttributeDesc::default_instance_ = new E_EquipStrongtotalAttributeDesc();
  E_EquipStrongtotal::default_instance_ = new E_EquipStrongtotal();
  Sheet_EquipStrongtotal::default_instance_ = new Sheet_EquipStrongtotal();
  E_EquipGem::default_instance_ = new E_EquipGem();
  Sheet_EquipGem::default_instance_ = new Sheet_EquipGem();
  E_EquipGemlv::default_instance_ = new E_EquipGemlv();
  Sheet_EquipGemlv::default_instance_ = new Sheet_EquipGemlv();
  E_EquipStoveattAttributeDesc::default_instance_ = new E_EquipStoveattAttributeDesc();
  E_EquipStoveatt::default_instance_ = new E_EquipStoveatt();
  Sheet_EquipStoveatt::default_instance_ = new Sheet_EquipStoveatt();
  E_EquipStoveexp::default_instance_ = new E_EquipStoveexp();
  Sheet_EquipStoveexp::default_instance_ = new Sheet_EquipStoveexp();
  E_EquipGrade::default_instance_ = new E_EquipGrade();
  Sheet_EquipGrade::default_instance_ = new Sheet_EquipGrade();
  E_EquipClearAttributeDesc::default_instance_ = new E_EquipClearAttributeDesc();
  E_EquipClearSectionDesc::default_instance_ = new E_EquipClearSectionDesc();
  E_EquipClear::default_instance_ = new E_EquipClear();
  Sheet_EquipClear::default_instance_ = new Sheet_EquipClear();
  E_EquipSuitAttributeDesc::default_instance_ = new E_EquipSuitAttributeDesc();
  E_EquipSuit::default_instance_ = new E_EquipSuit();
  Sheet_EquipSuit::default_instance_ = new Sheet_EquipSuit();
  E_EquipBreakBreakDesc::default_instance_ = new E_EquipBreakBreakDesc();
  E_EquipBreak::default_instance_ = new E_EquipBreak();
  Sheet_EquipBreak::default_instance_ = new Sheet_EquipBreak();
  E_EquipEquip::default_instance_->InitAsDefaultInstance();
  Sheet_EquipEquip::default_instance_->InitAsDefaultInstance();
  E_EquipAttributeAttributeDesc::default_instance_->InitAsDefaultInstance();
  E_EquipAttribute::default_instance_->InitAsDefaultInstance();
  Sheet_EquipAttribute::default_instance_->InitAsDefaultInstance();
  E_EquipStrongTypeDesc::default_instance_->InitAsDefaultInstance();
  E_EquipStrong::default_instance_->InitAsDefaultInstance();
  Sheet_EquipStrong::default_instance_->InitAsDefaultInstance();
  E_EquipStrongexpCostDesc::default_instance_->InitAsDefaultInstance();
  E_EquipStrongexp::default_instance_->InitAsDefaultInstance();
  Sheet_EquipStrongexp::default_instance_->InitAsDefaultInstance();
  E_EquipStrongtotalAttributeDesc::default_instance_->InitAsDefaultInstance();
  E_EquipStrongtotal::default_instance_->InitAsDefaultInstance();
  Sheet_EquipStrongtotal::default_instance_->InitAsDefaultInstance();
  E_EquipGem::default_instance_->InitAsDefaultInstance();
  Sheet_EquipGem::default_instance_->InitAsDefaultInstance();
  E_EquipGemlv::default_instance_->InitAsDefaultInstance();
  Sheet_EquipGemlv::default_instance_->InitAsDefaultInstance();
  E_EquipStoveattAttributeDesc::default_instance_->InitAsDefaultInstance();
  E_EquipStoveatt::default_instance_->InitAsDefaultInstance();
  Sheet_EquipStoveatt::default_instance_->InitAsDefaultInstance();
  E_EquipStoveexp::default_instance_->InitAsDefaultInstance();
  Sheet_EquipStoveexp::default_instance_->InitAsDefaultInstance();
  E_EquipGrade::default_instance_->InitAsDefaultInstance();
  Sheet_EquipGrade::default_instance_->InitAsDefaultInstance();
  E_EquipClearAttributeDesc::default_instance_->InitAsDefaultInstance();
  E_EquipClearSectionDesc::default_instance_->InitAsDefaultInstance();
  E_EquipClear::default_instance_->InitAsDefaultInstance();
  Sheet_EquipClear::default_instance_->InitAsDefaultInstance();
  E_EquipSuitAttributeDesc::default_instance_->InitAsDefaultInstance();
  E_EquipSuit::default_instance_->InitAsDefaultInstance();
  Sheet_EquipSuit::default_instance_->InitAsDefaultInstance();
  E_EquipBreakBreakDesc::default_instance_->InitAsDefaultInstance();
  E_EquipBreak::default_instance_->InitAsDefaultInstance();
  Sheet_EquipBreak::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_equip_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_equip_2eproto {
  StaticDescriptorInitializer_equip_2eproto() {
    protobuf_AddDesc_equip_2eproto();
  }
} static_descriptor_initializer_equip_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int E_EquipEquip::kMIdFieldNumber;
const int E_EquipEquip::kMNameFieldNumber;
const int E_EquipEquip::kMTypeFieldNumber;
const int E_EquipEquip::kMWearqualityFieldNumber;
const int E_EquipEquip::kMPositionFieldNumber;
const int E_EquipEquip::kMProfessionFieldNumber;
const int E_EquipEquip::kMProfessionlvFieldNumber;
const int E_EquipEquip::kMLevelFieldNumber;
const int E_EquipEquip::kMQualityFieldNumber;
const int E_EquipEquip::kMAttributeidFieldNumber;
const int E_EquipEquip::kMStarFieldNumber;
const int E_EquipEquip::kMIscanbindFieldNumber;
const int E_EquipEquip::kMIstradebindFieldNumber;
const int E_EquipEquip::kMSellpriceFieldNumber;
const int E_EquipEquip::kMIconFieldNumber;
const int E_EquipEquip::kMTimeFieldNumber;
const int E_EquipEquip::kMBroadcastFieldNumber;
const int E_EquipEquip::kMMeltingresultFieldNumber;
const int E_EquipEquip::kMSkillidFieldNumber;
#endif  // !_MSC_VER

E_EquipEquip::E_EquipEquip()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_EquipEquip::InitAsDefaultInstance() {
}

E_EquipEquip::E_EquipEquip(const E_EquipEquip& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_EquipEquip::SharedCtor() {
  _cached_size_ = 0;
  m_id_ = GOOGLE_LONGLONG(0);
  m_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  m_type_ = 0;
  m_wearquality_ = 0;
  m_position_ = 0;
  m_profession_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  m_professionlv_ = 0;
  m_level_ = 0;
  m_quality_ = 0;
  m_attributeid_ = 0;
  m_star_ = 0;
  m_iscanbind_ = 0;
  m_istradebind_ = 0;
  m_sellprice_ = 0;
  m_icon_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  m_time_ = 0;
  m_broadcast_ = 0;
  m_meltingresult_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  m_skillid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_EquipEquip::~E_EquipEquip() {
  SharedDtor();
}

void E_EquipEquip::SharedDtor() {
  if (m_name_ != &::google::protobuf::internal::kEmptyString) {
    delete m_name_;
  }
  if (m_profession_ != &::google::protobuf::internal::kEmptyString) {
    delete m_profession_;
  }
  if (m_icon_ != &::google::protobuf::internal::kEmptyString) {
    delete m_icon_;
  }
  if (m_meltingresult_ != &::google::protobuf::internal::kEmptyString) {
    delete m_meltingresult_;
  }
  if (m_skillid_ != &::google::protobuf::internal::kEmptyString) {
    delete m_skillid_;
  }
  if (this != default_instance_) {
  }
}

void E_EquipEquip::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_EquipEquip::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_EquipEquip_descriptor_;
}

const E_EquipEquip& E_EquipEquip::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_equip_2eproto();
  return *default_instance_;
}

E_EquipEquip* E_EquipEquip::default_instance_ = NULL;

E_EquipEquip* E_EquipEquip::New() const {
  return new E_EquipEquip;
}

void E_EquipEquip::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_id_ = GOOGLE_LONGLONG(0);
    if (has_m_name()) {
      if (m_name_ != &::google::protobuf::internal::kEmptyString) {
        m_name_->clear();
      }
    }
    m_type_ = 0;
    m_wearquality_ = 0;
    m_position_ = 0;
    if (has_m_profession()) {
      if (m_profession_ != &::google::protobuf::internal::kEmptyString) {
        m_profession_->clear();
      }
    }
    m_professionlv_ = 0;
    m_level_ = 0;
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    m_quality_ = 0;
    m_attributeid_ = 0;
    m_star_ = 0;
    m_iscanbind_ = 0;
    m_istradebind_ = 0;
    m_sellprice_ = 0;
    if (has_m_icon()) {
      if (m_icon_ != &::google::protobuf::internal::kEmptyString) {
        m_icon_->clear();
      }
    }
    m_time_ = 0;
  }
  if (_has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    m_broadcast_ = 0;
    if (has_m_meltingresult()) {
      if (m_meltingresult_ != &::google::protobuf::internal::kEmptyString) {
        m_meltingresult_->clear();
      }
    }
    if (has_m_skillid()) {
      if (m_skillid_ != &::google::protobuf::internal::kEmptyString) {
        m_skillid_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_EquipEquip::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 m_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &m_id_)));
          set_has_m_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_m_name;
        break;
      }

      // optional string m_name = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_m_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->m_name().data(), this->m_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_m_type;
        break;
      }

      // optional int32 m_type = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_type_)));
          set_has_m_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_m_wearquality;
        break;
      }

      // optional int32 m_wearquality = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_wearquality:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_wearquality_)));
          set_has_m_wearquality();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_m_position;
        break;
      }

      // optional int32 m_position = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_position:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_position_)));
          set_has_m_position();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_m_profession;
        break;
      }

      // optional string m_profession = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_profession:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_m_profession()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->m_profession().data(), this->m_profession().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_m_professionlv;
        break;
      }

      // optional int32 m_professionlv = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_professionlv:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_professionlv_)));
          set_has_m_professionlv();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(64)) goto parse_m_level;
        break;
      }

      // optional int32 m_level = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_level:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_level_)));
          set_has_m_level();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(72)) goto parse_m_quality;
        break;
      }

      // optional int32 m_quality = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_quality:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_quality_)));
          set_has_m_quality();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(80)) goto parse_m_attributeid;
        break;
      }

      // optional int32 m_attributeid = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_attributeid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_attributeid_)));
          set_has_m_attributeid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(88)) goto parse_m_star;
        break;
      }

      // optional int32 m_star = 11;
      case 11: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_star:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_star_)));
          set_has_m_star();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(96)) goto parse_m_iscanbind;
        break;
      }

      // optional int32 m_iscanbind = 12;
      case 12: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_iscanbind:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_iscanbind_)));
          set_has_m_iscanbind();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(104)) goto parse_m_istradebind;
        break;
      }

      // optional int32 m_istradebind = 13;
      case 13: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_istradebind:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_istradebind_)));
          set_has_m_istradebind();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(112)) goto parse_m_sellprice;
        break;
      }

      // optional int32 m_sellprice = 14;
      case 14: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_sellprice:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_sellprice_)));
          set_has_m_sellprice();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(122)) goto parse_m_icon;
        break;
      }

      // optional string m_icon = 15;
      case 15: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_icon:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_m_icon()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->m_icon().data(), this->m_icon().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(128)) goto parse_m_time;
        break;
      }

      // optional int32 m_time = 16;
      case 16: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_time_)));
          set_has_m_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(136)) goto parse_m_broadcast;
        break;
      }

      // optional int32 m_broadcast = 17;
      case 17: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_broadcast:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_broadcast_)));
          set_has_m_broadcast();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(146)) goto parse_m_meltingresult;
        break;
      }

      // optional string m_meltingresult = 18;
      case 18: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_meltingresult:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_m_meltingresult()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->m_meltingresult().data(), this->m_meltingresult().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(154)) goto parse_m_skillid;
        break;
      }

      // optional string m_skillid = 19;
      case 19: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_skillid:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_m_skillid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->m_skillid().data(), this->m_skillid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_EquipEquip::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 m_id = 1;
  if (has_m_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->m_id(), output);
  }

  // optional string m_name = 2;
  if (has_m_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_name().data(), this->m_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->m_name(), output);
  }

  // optional int32 m_type = 3;
  if (has_m_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->m_type(), output);
  }

  // optional int32 m_wearquality = 4;
  if (has_m_wearquality()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->m_wearquality(), output);
  }

  // optional int32 m_position = 5;
  if (has_m_position()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->m_position(), output);
  }

  // optional string m_profession = 6;
  if (has_m_profession()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_profession().data(), this->m_profession().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      6, this->m_profession(), output);
  }

  // optional int32 m_professionlv = 7;
  if (has_m_professionlv()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->m_professionlv(), output);
  }

  // optional int32 m_level = 8;
  if (has_m_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->m_level(), output);
  }

  // optional int32 m_quality = 9;
  if (has_m_quality()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->m_quality(), output);
  }

  // optional int32 m_attributeid = 10;
  if (has_m_attributeid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->m_attributeid(), output);
  }

  // optional int32 m_star = 11;
  if (has_m_star()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->m_star(), output);
  }

  // optional int32 m_iscanbind = 12;
  if (has_m_iscanbind()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(12, this->m_iscanbind(), output);
  }

  // optional int32 m_istradebind = 13;
  if (has_m_istradebind()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(13, this->m_istradebind(), output);
  }

  // optional int32 m_sellprice = 14;
  if (has_m_sellprice()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(14, this->m_sellprice(), output);
  }

  // optional string m_icon = 15;
  if (has_m_icon()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_icon().data(), this->m_icon().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      15, this->m_icon(), output);
  }

  // optional int32 m_time = 16;
  if (has_m_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(16, this->m_time(), output);
  }

  // optional int32 m_broadcast = 17;
  if (has_m_broadcast()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(17, this->m_broadcast(), output);
  }

  // optional string m_meltingresult = 18;
  if (has_m_meltingresult()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_meltingresult().data(), this->m_meltingresult().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      18, this->m_meltingresult(), output);
  }

  // optional string m_skillid = 19;
  if (has_m_skillid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_skillid().data(), this->m_skillid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      19, this->m_skillid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_EquipEquip::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 m_id = 1;
  if (has_m_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->m_id(), target);
  }

  // optional string m_name = 2;
  if (has_m_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_name().data(), this->m_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->m_name(), target);
  }

  // optional int32 m_type = 3;
  if (has_m_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->m_type(), target);
  }

  // optional int32 m_wearquality = 4;
  if (has_m_wearquality()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->m_wearquality(), target);
  }

  // optional int32 m_position = 5;
  if (has_m_position()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->m_position(), target);
  }

  // optional string m_profession = 6;
  if (has_m_profession()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_profession().data(), this->m_profession().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->m_profession(), target);
  }

  // optional int32 m_professionlv = 7;
  if (has_m_professionlv()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->m_professionlv(), target);
  }

  // optional int32 m_level = 8;
  if (has_m_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->m_level(), target);
  }

  // optional int32 m_quality = 9;
  if (has_m_quality()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->m_quality(), target);
  }

  // optional int32 m_attributeid = 10;
  if (has_m_attributeid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->m_attributeid(), target);
  }

  // optional int32 m_star = 11;
  if (has_m_star()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->m_star(), target);
  }

  // optional int32 m_iscanbind = 12;
  if (has_m_iscanbind()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(12, this->m_iscanbind(), target);
  }

  // optional int32 m_istradebind = 13;
  if (has_m_istradebind()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(13, this->m_istradebind(), target);
  }

  // optional int32 m_sellprice = 14;
  if (has_m_sellprice()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(14, this->m_sellprice(), target);
  }

  // optional string m_icon = 15;
  if (has_m_icon()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_icon().data(), this->m_icon().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        15, this->m_icon(), target);
  }

  // optional int32 m_time = 16;
  if (has_m_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(16, this->m_time(), target);
  }

  // optional int32 m_broadcast = 17;
  if (has_m_broadcast()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(17, this->m_broadcast(), target);
  }

  // optional string m_meltingresult = 18;
  if (has_m_meltingresult()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_meltingresult().data(), this->m_meltingresult().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        18, this->m_meltingresult(), target);
  }

  // optional string m_skillid = 19;
  if (has_m_skillid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_skillid().data(), this->m_skillid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        19, this->m_skillid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_EquipEquip::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 m_id = 1;
    if (has_m_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->m_id());
    }

    // optional string m_name = 2;
    if (has_m_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->m_name());
    }

    // optional int32 m_type = 3;
    if (has_m_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_type());
    }

    // optional int32 m_wearquality = 4;
    if (has_m_wearquality()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_wearquality());
    }

    // optional int32 m_position = 5;
    if (has_m_position()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_position());
    }

    // optional string m_profession = 6;
    if (has_m_profession()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->m_profession());
    }

    // optional int32 m_professionlv = 7;
    if (has_m_professionlv()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_professionlv());
    }

    // optional int32 m_level = 8;
    if (has_m_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_level());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional int32 m_quality = 9;
    if (has_m_quality()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_quality());
    }

    // optional int32 m_attributeid = 10;
    if (has_m_attributeid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_attributeid());
    }

    // optional int32 m_star = 11;
    if (has_m_star()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_star());
    }

    // optional int32 m_iscanbind = 12;
    if (has_m_iscanbind()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_iscanbind());
    }

    // optional int32 m_istradebind = 13;
    if (has_m_istradebind()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_istradebind());
    }

    // optional int32 m_sellprice = 14;
    if (has_m_sellprice()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_sellprice());
    }

    // optional string m_icon = 15;
    if (has_m_icon()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->m_icon());
    }

    // optional int32 m_time = 16;
    if (has_m_time()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_time());
    }

  }
  if (_has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    // optional int32 m_broadcast = 17;
    if (has_m_broadcast()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_broadcast());
    }

    // optional string m_meltingresult = 18;
    if (has_m_meltingresult()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->m_meltingresult());
    }

    // optional string m_skillid = 19;
    if (has_m_skillid()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->m_skillid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_EquipEquip::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_EquipEquip* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_EquipEquip*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_EquipEquip::MergeFrom(const E_EquipEquip& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_id()) {
      set_m_id(from.m_id());
    }
    if (from.has_m_name()) {
      set_m_name(from.m_name());
    }
    if (from.has_m_type()) {
      set_m_type(from.m_type());
    }
    if (from.has_m_wearquality()) {
      set_m_wearquality(from.m_wearquality());
    }
    if (from.has_m_position()) {
      set_m_position(from.m_position());
    }
    if (from.has_m_profession()) {
      set_m_profession(from.m_profession());
    }
    if (from.has_m_professionlv()) {
      set_m_professionlv(from.m_professionlv());
    }
    if (from.has_m_level()) {
      set_m_level(from.m_level());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_m_quality()) {
      set_m_quality(from.m_quality());
    }
    if (from.has_m_attributeid()) {
      set_m_attributeid(from.m_attributeid());
    }
    if (from.has_m_star()) {
      set_m_star(from.m_star());
    }
    if (from.has_m_iscanbind()) {
      set_m_iscanbind(from.m_iscanbind());
    }
    if (from.has_m_istradebind()) {
      set_m_istradebind(from.m_istradebind());
    }
    if (from.has_m_sellprice()) {
      set_m_sellprice(from.m_sellprice());
    }
    if (from.has_m_icon()) {
      set_m_icon(from.m_icon());
    }
    if (from.has_m_time()) {
      set_m_time(from.m_time());
    }
  }
  if (from._has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    if (from.has_m_broadcast()) {
      set_m_broadcast(from.m_broadcast());
    }
    if (from.has_m_meltingresult()) {
      set_m_meltingresult(from.m_meltingresult());
    }
    if (from.has_m_skillid()) {
      set_m_skillid(from.m_skillid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_EquipEquip::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_EquipEquip::CopyFrom(const E_EquipEquip& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_EquipEquip::IsInitialized() const {

  return true;
}

void E_EquipEquip::Swap(E_EquipEquip* other) {
  if (other != this) {
    std::swap(m_id_, other->m_id_);
    std::swap(m_name_, other->m_name_);
    std::swap(m_type_, other->m_type_);
    std::swap(m_wearquality_, other->m_wearquality_);
    std::swap(m_position_, other->m_position_);
    std::swap(m_profession_, other->m_profession_);
    std::swap(m_professionlv_, other->m_professionlv_);
    std::swap(m_level_, other->m_level_);
    std::swap(m_quality_, other->m_quality_);
    std::swap(m_attributeid_, other->m_attributeid_);
    std::swap(m_star_, other->m_star_);
    std::swap(m_iscanbind_, other->m_iscanbind_);
    std::swap(m_istradebind_, other->m_istradebind_);
    std::swap(m_sellprice_, other->m_sellprice_);
    std::swap(m_icon_, other->m_icon_);
    std::swap(m_time_, other->m_time_);
    std::swap(m_broadcast_, other->m_broadcast_);
    std::swap(m_meltingresult_, other->m_meltingresult_);
    std::swap(m_skillid_, other->m_skillid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_EquipEquip::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_EquipEquip_descriptor_;
  metadata.reflection = E_EquipEquip_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_EquipEquip::kEEquipEquipListFieldNumber;
#endif  // !_MSC_VER

Sheet_EquipEquip::Sheet_EquipEquip()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_EquipEquip::InitAsDefaultInstance() {
}

Sheet_EquipEquip::Sheet_EquipEquip(const Sheet_EquipEquip& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_EquipEquip::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_EquipEquip::~Sheet_EquipEquip() {
  SharedDtor();
}

void Sheet_EquipEquip::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_EquipEquip::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_EquipEquip::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_EquipEquip_descriptor_;
}

const Sheet_EquipEquip& Sheet_EquipEquip::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_equip_2eproto();
  return *default_instance_;
}

Sheet_EquipEquip* Sheet_EquipEquip::default_instance_ = NULL;

Sheet_EquipEquip* Sheet_EquipEquip::New() const {
  return new Sheet_EquipEquip;
}

void Sheet_EquipEquip::Clear() {
  e_equipequip_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_EquipEquip::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.E_EquipEquip E_EquipEquip_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_E_EquipEquip_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_e_equipequip_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_E_EquipEquip_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_EquipEquip::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.E_EquipEquip E_EquipEquip_List = 1;
  for (int i = 0; i < this->e_equipequip_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->e_equipequip_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_EquipEquip::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.E_EquipEquip E_EquipEquip_List = 1;
  for (int i = 0; i < this->e_equipequip_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->e_equipequip_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_EquipEquip::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.E_EquipEquip E_EquipEquip_List = 1;
  total_size += 1 * this->e_equipequip_list_size();
  for (int i = 0; i < this->e_equipequip_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->e_equipequip_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_EquipEquip::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_EquipEquip* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_EquipEquip*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_EquipEquip::MergeFrom(const Sheet_EquipEquip& from) {
  GOOGLE_CHECK_NE(&from, this);
  e_equipequip_list_.MergeFrom(from.e_equipequip_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_EquipEquip::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_EquipEquip::CopyFrom(const Sheet_EquipEquip& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_EquipEquip::IsInitialized() const {

  return true;
}

void Sheet_EquipEquip::Swap(Sheet_EquipEquip* other) {
  if (other != this) {
    e_equipequip_list_.Swap(&other->e_equipequip_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_EquipEquip::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_EquipEquip_descriptor_;
  metadata.reflection = Sheet_EquipEquip_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_EquipAttributeAttributeDesc::kMValueminFieldNumber;
const int E_EquipAttributeAttributeDesc::kMTypeFieldNumber;
const int E_EquipAttributeAttributeDesc::kMValuemaxFieldNumber;
#endif  // !_MSC_VER

E_EquipAttributeAttributeDesc::E_EquipAttributeAttributeDesc()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_EquipAttributeAttributeDesc::InitAsDefaultInstance() {
}

E_EquipAttributeAttributeDesc::E_EquipAttributeAttributeDesc(const E_EquipAttributeAttributeDesc& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_EquipAttributeAttributeDesc::SharedCtor() {
  _cached_size_ = 0;
  m_valuemin_ = 0;
  m_type_ = 0;
  m_valuemax_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_EquipAttributeAttributeDesc::~E_EquipAttributeAttributeDesc() {
  SharedDtor();
}

void E_EquipAttributeAttributeDesc::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_EquipAttributeAttributeDesc::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_EquipAttributeAttributeDesc::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_EquipAttributeAttributeDesc_descriptor_;
}

const E_EquipAttributeAttributeDesc& E_EquipAttributeAttributeDesc::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_equip_2eproto();
  return *default_instance_;
}

E_EquipAttributeAttributeDesc* E_EquipAttributeAttributeDesc::default_instance_ = NULL;

E_EquipAttributeAttributeDesc* E_EquipAttributeAttributeDesc::New() const {
  return new E_EquipAttributeAttributeDesc;
}

void E_EquipAttributeAttributeDesc::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_valuemin_ = 0;
    m_type_ = 0;
    m_valuemax_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_EquipAttributeAttributeDesc::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_valuemin = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_valuemin_)));
          set_has_m_valuemin();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_type;
        break;
      }

      // optional int32 m_type = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_type_)));
          set_has_m_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_m_valuemax;
        break;
      }

      // optional int32 m_valuemax = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_valuemax:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_valuemax_)));
          set_has_m_valuemax();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_EquipAttributeAttributeDesc::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_valuemin = 1;
  if (has_m_valuemin()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_valuemin(), output);
  }

  // optional int32 m_type = 2;
  if (has_m_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_type(), output);
  }

  // optional int32 m_valuemax = 3;
  if (has_m_valuemax()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->m_valuemax(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_EquipAttributeAttributeDesc::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_valuemin = 1;
  if (has_m_valuemin()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_valuemin(), target);
  }

  // optional int32 m_type = 2;
  if (has_m_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_type(), target);
  }

  // optional int32 m_valuemax = 3;
  if (has_m_valuemax()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->m_valuemax(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_EquipAttributeAttributeDesc::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_valuemin = 1;
    if (has_m_valuemin()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_valuemin());
    }

    // optional int32 m_type = 2;
    if (has_m_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_type());
    }

    // optional int32 m_valuemax = 3;
    if (has_m_valuemax()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_valuemax());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_EquipAttributeAttributeDesc::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_EquipAttributeAttributeDesc* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_EquipAttributeAttributeDesc*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_EquipAttributeAttributeDesc::MergeFrom(const E_EquipAttributeAttributeDesc& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_valuemin()) {
      set_m_valuemin(from.m_valuemin());
    }
    if (from.has_m_type()) {
      set_m_type(from.m_type());
    }
    if (from.has_m_valuemax()) {
      set_m_valuemax(from.m_valuemax());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_EquipAttributeAttributeDesc::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_EquipAttributeAttributeDesc::CopyFrom(const E_EquipAttributeAttributeDesc& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_EquipAttributeAttributeDesc::IsInitialized() const {

  return true;
}

void E_EquipAttributeAttributeDesc::Swap(E_EquipAttributeAttributeDesc* other) {
  if (other != this) {
    std::swap(m_valuemin_, other->m_valuemin_);
    std::swap(m_type_, other->m_type_);
    std::swap(m_valuemax_, other->m_valuemax_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_EquipAttributeAttributeDesc::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_EquipAttributeAttributeDesc_descriptor_;
  metadata.reflection = E_EquipAttributeAttributeDesc_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_EquipAttribute::kMIdFieldNumber;
const int E_EquipAttribute::kMBluestarnumFieldNumber;
const int E_EquipAttribute::kMBluestarTypeFieldNumber;
const int E_EquipAttribute::kMBluestarLvFieldNumber;
const int E_EquipAttribute::kMBluestarNumberFieldNumber;
const int E_EquipAttribute::kMSpecialattributedownFieldNumber;
const int E_EquipAttribute::kMSpecialattributeupFieldNumber;
const int E_EquipAttribute::kMSpecialattributeTypelibraryFieldNumber;
const int E_EquipAttribute::kMSpecialattributeValueminFieldNumber;
const int E_EquipAttribute::kMSpecialattributeValuemaxFieldNumber;
const int E_EquipAttribute::kMGodattributeTypeFieldNumber;
const int E_EquipAttribute::kMGodattributeValueminFieldNumber;
const int E_EquipAttribute::kMGodattributeValuemaxFieldNumber;
const int E_EquipAttribute::kMAttributeFieldNumber;
const int E_EquipAttribute::kMStarLibraryFieldNumber;
#endif  // !_MSC_VER

E_EquipAttribute::E_EquipAttribute()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_EquipAttribute::InitAsDefaultInstance() {
}

E_EquipAttribute::E_EquipAttribute(const E_EquipAttribute& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_EquipAttribute::SharedCtor() {
  _cached_size_ = 0;
  m_id_ = 0;
  m_bluestarnum_ = 0;
  m_bluestar_type_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  m_bluestar_lv_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  m_bluestar_number_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  m_specialattributedown_ = 0;
  m_specialattributeup_ = 0;
  m_specialattribute_typelibrary_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  m_specialattribute_valuemin_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  m_specialattribute_valuemax_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  m_godattribute_type_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  m_godattribute_valuemin_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  m_godattribute_valuemax_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_EquipAttribute::~E_EquipAttribute() {
  SharedDtor();
}

void E_EquipAttribute::SharedDtor() {
  if (m_bluestar_type_ != &::google::protobuf::internal::kEmptyString) {
    delete m_bluestar_type_;
  }
  if (m_bluestar_lv_ != &::google::protobuf::internal::kEmptyString) {
    delete m_bluestar_lv_;
  }
  if (m_bluestar_number_ != &::google::protobuf::internal::kEmptyString) {
    delete m_bluestar_number_;
  }
  if (m_specialattribute_typelibrary_ != &::google::protobuf::internal::kEmptyString) {
    delete m_specialattribute_typelibrary_;
  }
  if (m_specialattribute_valuemin_ != &::google::protobuf::internal::kEmptyString) {
    delete m_specialattribute_valuemin_;
  }
  if (m_specialattribute_valuemax_ != &::google::protobuf::internal::kEmptyString) {
    delete m_specialattribute_valuemax_;
  }
  if (m_godattribute_type_ != &::google::protobuf::internal::kEmptyString) {
    delete m_godattribute_type_;
  }
  if (m_godattribute_valuemin_ != &::google::protobuf::internal::kEmptyString) {
    delete m_godattribute_valuemin_;
  }
  if (m_godattribute_valuemax_ != &::google::protobuf::internal::kEmptyString) {
    delete m_godattribute_valuemax_;
  }
  if (this != default_instance_) {
  }
}

void E_EquipAttribute::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_EquipAttribute::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_EquipAttribute_descriptor_;
}

const E_EquipAttribute& E_EquipAttribute::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_equip_2eproto();
  return *default_instance_;
}

E_EquipAttribute* E_EquipAttribute::default_instance_ = NULL;

E_EquipAttribute* E_EquipAttribute::New() const {
  return new E_EquipAttribute;
}

void E_EquipAttribute::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_id_ = 0;
    m_bluestarnum_ = 0;
    if (has_m_bluestar_type()) {
      if (m_bluestar_type_ != &::google::protobuf::internal::kEmptyString) {
        m_bluestar_type_->clear();
      }
    }
    if (has_m_bluestar_lv()) {
      if (m_bluestar_lv_ != &::google::protobuf::internal::kEmptyString) {
        m_bluestar_lv_->clear();
      }
    }
    if (has_m_bluestar_number()) {
      if (m_bluestar_number_ != &::google::protobuf::internal::kEmptyString) {
        m_bluestar_number_->clear();
      }
    }
    m_specialattributedown_ = 0;
    m_specialattributeup_ = 0;
    if (has_m_specialattribute_typelibrary()) {
      if (m_specialattribute_typelibrary_ != &::google::protobuf::internal::kEmptyString) {
        m_specialattribute_typelibrary_->clear();
      }
    }
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (has_m_specialattribute_valuemin()) {
      if (m_specialattribute_valuemin_ != &::google::protobuf::internal::kEmptyString) {
        m_specialattribute_valuemin_->clear();
      }
    }
    if (has_m_specialattribute_valuemax()) {
      if (m_specialattribute_valuemax_ != &::google::protobuf::internal::kEmptyString) {
        m_specialattribute_valuemax_->clear();
      }
    }
    if (has_m_godattribute_type()) {
      if (m_godattribute_type_ != &::google::protobuf::internal::kEmptyString) {
        m_godattribute_type_->clear();
      }
    }
    if (has_m_godattribute_valuemin()) {
      if (m_godattribute_valuemin_ != &::google::protobuf::internal::kEmptyString) {
        m_godattribute_valuemin_->clear();
      }
    }
    if (has_m_godattribute_valuemax()) {
      if (m_godattribute_valuemax_ != &::google::protobuf::internal::kEmptyString) {
        m_godattribute_valuemax_->clear();
      }
    }
  }
  m_attribute_.Clear();
  m_star_library_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_EquipAttribute::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_id_)));
          set_has_m_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_bluestarnum;
        break;
      }

      // optional int32 m_bluestarnum = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_bluestarnum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_bluestarnum_)));
          set_has_m_bluestarnum();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_m_bluestar_type;
        break;
      }

      // optional string m_bluestar_type = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_bluestar_type:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_m_bluestar_type()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->m_bluestar_type().data(), this->m_bluestar_type().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_m_bluestar_lv;
        break;
      }

      // optional string m_bluestar_lv = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_bluestar_lv:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_m_bluestar_lv()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->m_bluestar_lv().data(), this->m_bluestar_lv().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_m_bluestar_number;
        break;
      }

      // optional string m_bluestar_number = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_bluestar_number:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_m_bluestar_number()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->m_bluestar_number().data(), this->m_bluestar_number().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_m_specialattributedown;
        break;
      }

      // optional int32 m_specialattributedown = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_specialattributedown:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_specialattributedown_)));
          set_has_m_specialattributedown();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_m_specialattributeup;
        break;
      }

      // optional int32 m_specialattributeup = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_specialattributeup:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_specialattributeup_)));
          set_has_m_specialattributeup();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(66)) goto parse_m_specialattribute_typelibrary;
        break;
      }

      // optional string m_specialattribute_typelibrary = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_specialattribute_typelibrary:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_m_specialattribute_typelibrary()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->m_specialattribute_typelibrary().data(), this->m_specialattribute_typelibrary().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(74)) goto parse_m_specialattribute_valuemin;
        break;
      }

      // optional string m_specialattribute_valuemin = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_specialattribute_valuemin:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_m_specialattribute_valuemin()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->m_specialattribute_valuemin().data(), this->m_specialattribute_valuemin().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(82)) goto parse_m_specialattribute_valuemax;
        break;
      }

      // optional string m_specialattribute_valuemax = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_specialattribute_valuemax:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_m_specialattribute_valuemax()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->m_specialattribute_valuemax().data(), this->m_specialattribute_valuemax().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(90)) goto parse_m_godattribute_type;
        break;
      }

      // optional string m_godattribute_type = 11;
      case 11: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_godattribute_type:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_m_godattribute_type()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->m_godattribute_type().data(), this->m_godattribute_type().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(98)) goto parse_m_godattribute_valuemin;
        break;
      }

      // optional string m_godattribute_valuemin = 12;
      case 12: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_godattribute_valuemin:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_m_godattribute_valuemin()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->m_godattribute_valuemin().data(), this->m_godattribute_valuemin().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(106)) goto parse_m_godattribute_valuemax;
        break;
      }

      // optional string m_godattribute_valuemax = 13;
      case 13: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_godattribute_valuemax:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_m_godattribute_valuemax()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->m_godattribute_valuemax().data(), this->m_godattribute_valuemax().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(114)) goto parse_m_attribute;
        break;
      }

      // repeated .proto_ff.E_EquipAttributeAttributeDesc m_attribute = 14;
      case 14: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_attribute:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_m_attribute()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(114)) goto parse_m_attribute;
        if (input->ExpectTag(122)) goto parse_m_star_library;
        break;
      }

      // repeated string m_star_library = 15;
      case 15: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_star_library:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_m_star_library()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->m_star_library(this->m_star_library_size() - 1).data(),
            this->m_star_library(this->m_star_library_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(122)) goto parse_m_star_library;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_EquipAttribute::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_id(), output);
  }

  // optional int32 m_bluestarnum = 2;
  if (has_m_bluestarnum()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_bluestarnum(), output);
  }

  // optional string m_bluestar_type = 3;
  if (has_m_bluestar_type()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_bluestar_type().data(), this->m_bluestar_type().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->m_bluestar_type(), output);
  }

  // optional string m_bluestar_lv = 4;
  if (has_m_bluestar_lv()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_bluestar_lv().data(), this->m_bluestar_lv().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->m_bluestar_lv(), output);
  }

  // optional string m_bluestar_number = 5;
  if (has_m_bluestar_number()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_bluestar_number().data(), this->m_bluestar_number().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->m_bluestar_number(), output);
  }

  // optional int32 m_specialattributedown = 6;
  if (has_m_specialattributedown()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->m_specialattributedown(), output);
  }

  // optional int32 m_specialattributeup = 7;
  if (has_m_specialattributeup()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->m_specialattributeup(), output);
  }

  // optional string m_specialattribute_typelibrary = 8;
  if (has_m_specialattribute_typelibrary()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_specialattribute_typelibrary().data(), this->m_specialattribute_typelibrary().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      8, this->m_specialattribute_typelibrary(), output);
  }

  // optional string m_specialattribute_valuemin = 9;
  if (has_m_specialattribute_valuemin()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_specialattribute_valuemin().data(), this->m_specialattribute_valuemin().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      9, this->m_specialattribute_valuemin(), output);
  }

  // optional string m_specialattribute_valuemax = 10;
  if (has_m_specialattribute_valuemax()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_specialattribute_valuemax().data(), this->m_specialattribute_valuemax().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      10, this->m_specialattribute_valuemax(), output);
  }

  // optional string m_godattribute_type = 11;
  if (has_m_godattribute_type()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_godattribute_type().data(), this->m_godattribute_type().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      11, this->m_godattribute_type(), output);
  }

  // optional string m_godattribute_valuemin = 12;
  if (has_m_godattribute_valuemin()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_godattribute_valuemin().data(), this->m_godattribute_valuemin().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      12, this->m_godattribute_valuemin(), output);
  }

  // optional string m_godattribute_valuemax = 13;
  if (has_m_godattribute_valuemax()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_godattribute_valuemax().data(), this->m_godattribute_valuemax().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      13, this->m_godattribute_valuemax(), output);
  }

  // repeated .proto_ff.E_EquipAttributeAttributeDesc m_attribute = 14;
  for (int i = 0; i < this->m_attribute_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      14, this->m_attribute(i), output);
  }

  // repeated string m_star_library = 15;
  for (int i = 0; i < this->m_star_library_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8String(
    this->m_star_library(i).data(), this->m_star_library(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      15, this->m_star_library(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_EquipAttribute::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_id(), target);
  }

  // optional int32 m_bluestarnum = 2;
  if (has_m_bluestarnum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_bluestarnum(), target);
  }

  // optional string m_bluestar_type = 3;
  if (has_m_bluestar_type()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_bluestar_type().data(), this->m_bluestar_type().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->m_bluestar_type(), target);
  }

  // optional string m_bluestar_lv = 4;
  if (has_m_bluestar_lv()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_bluestar_lv().data(), this->m_bluestar_lv().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->m_bluestar_lv(), target);
  }

  // optional string m_bluestar_number = 5;
  if (has_m_bluestar_number()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_bluestar_number().data(), this->m_bluestar_number().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->m_bluestar_number(), target);
  }

  // optional int32 m_specialattributedown = 6;
  if (has_m_specialattributedown()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->m_specialattributedown(), target);
  }

  // optional int32 m_specialattributeup = 7;
  if (has_m_specialattributeup()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->m_specialattributeup(), target);
  }

  // optional string m_specialattribute_typelibrary = 8;
  if (has_m_specialattribute_typelibrary()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_specialattribute_typelibrary().data(), this->m_specialattribute_typelibrary().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->m_specialattribute_typelibrary(), target);
  }

  // optional string m_specialattribute_valuemin = 9;
  if (has_m_specialattribute_valuemin()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_specialattribute_valuemin().data(), this->m_specialattribute_valuemin().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->m_specialattribute_valuemin(), target);
  }

  // optional string m_specialattribute_valuemax = 10;
  if (has_m_specialattribute_valuemax()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_specialattribute_valuemax().data(), this->m_specialattribute_valuemax().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->m_specialattribute_valuemax(), target);
  }

  // optional string m_godattribute_type = 11;
  if (has_m_godattribute_type()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_godattribute_type().data(), this->m_godattribute_type().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->m_godattribute_type(), target);
  }

  // optional string m_godattribute_valuemin = 12;
  if (has_m_godattribute_valuemin()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_godattribute_valuemin().data(), this->m_godattribute_valuemin().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->m_godattribute_valuemin(), target);
  }

  // optional string m_godattribute_valuemax = 13;
  if (has_m_godattribute_valuemax()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_godattribute_valuemax().data(), this->m_godattribute_valuemax().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        13, this->m_godattribute_valuemax(), target);
  }

  // repeated .proto_ff.E_EquipAttributeAttributeDesc m_attribute = 14;
  for (int i = 0; i < this->m_attribute_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        14, this->m_attribute(i), target);
  }

  // repeated string m_star_library = 15;
  for (int i = 0; i < this->m_star_library_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_star_library(i).data(), this->m_star_library(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(15, this->m_star_library(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_EquipAttribute::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_id = 1;
    if (has_m_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_id());
    }

    // optional int32 m_bluestarnum = 2;
    if (has_m_bluestarnum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_bluestarnum());
    }

    // optional string m_bluestar_type = 3;
    if (has_m_bluestar_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->m_bluestar_type());
    }

    // optional string m_bluestar_lv = 4;
    if (has_m_bluestar_lv()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->m_bluestar_lv());
    }

    // optional string m_bluestar_number = 5;
    if (has_m_bluestar_number()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->m_bluestar_number());
    }

    // optional int32 m_specialattributedown = 6;
    if (has_m_specialattributedown()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_specialattributedown());
    }

    // optional int32 m_specialattributeup = 7;
    if (has_m_specialattributeup()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_specialattributeup());
    }

    // optional string m_specialattribute_typelibrary = 8;
    if (has_m_specialattribute_typelibrary()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->m_specialattribute_typelibrary());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional string m_specialattribute_valuemin = 9;
    if (has_m_specialattribute_valuemin()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->m_specialattribute_valuemin());
    }

    // optional string m_specialattribute_valuemax = 10;
    if (has_m_specialattribute_valuemax()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->m_specialattribute_valuemax());
    }

    // optional string m_godattribute_type = 11;
    if (has_m_godattribute_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->m_godattribute_type());
    }

    // optional string m_godattribute_valuemin = 12;
    if (has_m_godattribute_valuemin()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->m_godattribute_valuemin());
    }

    // optional string m_godattribute_valuemax = 13;
    if (has_m_godattribute_valuemax()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->m_godattribute_valuemax());
    }

  }
  // repeated .proto_ff.E_EquipAttributeAttributeDesc m_attribute = 14;
  total_size += 1 * this->m_attribute_size();
  for (int i = 0; i < this->m_attribute_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->m_attribute(i));
  }

  // repeated string m_star_library = 15;
  total_size += 1 * this->m_star_library_size();
  for (int i = 0; i < this->m_star_library_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->m_star_library(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_EquipAttribute::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_EquipAttribute* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_EquipAttribute*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_EquipAttribute::MergeFrom(const E_EquipAttribute& from) {
  GOOGLE_CHECK_NE(&from, this);
  m_attribute_.MergeFrom(from.m_attribute_);
  m_star_library_.MergeFrom(from.m_star_library_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_id()) {
      set_m_id(from.m_id());
    }
    if (from.has_m_bluestarnum()) {
      set_m_bluestarnum(from.m_bluestarnum());
    }
    if (from.has_m_bluestar_type()) {
      set_m_bluestar_type(from.m_bluestar_type());
    }
    if (from.has_m_bluestar_lv()) {
      set_m_bluestar_lv(from.m_bluestar_lv());
    }
    if (from.has_m_bluestar_number()) {
      set_m_bluestar_number(from.m_bluestar_number());
    }
    if (from.has_m_specialattributedown()) {
      set_m_specialattributedown(from.m_specialattributedown());
    }
    if (from.has_m_specialattributeup()) {
      set_m_specialattributeup(from.m_specialattributeup());
    }
    if (from.has_m_specialattribute_typelibrary()) {
      set_m_specialattribute_typelibrary(from.m_specialattribute_typelibrary());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_m_specialattribute_valuemin()) {
      set_m_specialattribute_valuemin(from.m_specialattribute_valuemin());
    }
    if (from.has_m_specialattribute_valuemax()) {
      set_m_specialattribute_valuemax(from.m_specialattribute_valuemax());
    }
    if (from.has_m_godattribute_type()) {
      set_m_godattribute_type(from.m_godattribute_type());
    }
    if (from.has_m_godattribute_valuemin()) {
      set_m_godattribute_valuemin(from.m_godattribute_valuemin());
    }
    if (from.has_m_godattribute_valuemax()) {
      set_m_godattribute_valuemax(from.m_godattribute_valuemax());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_EquipAttribute::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_EquipAttribute::CopyFrom(const E_EquipAttribute& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_EquipAttribute::IsInitialized() const {

  return true;
}

void E_EquipAttribute::Swap(E_EquipAttribute* other) {
  if (other != this) {
    std::swap(m_id_, other->m_id_);
    std::swap(m_bluestarnum_, other->m_bluestarnum_);
    std::swap(m_bluestar_type_, other->m_bluestar_type_);
    std::swap(m_bluestar_lv_, other->m_bluestar_lv_);
    std::swap(m_bluestar_number_, other->m_bluestar_number_);
    std::swap(m_specialattributedown_, other->m_specialattributedown_);
    std::swap(m_specialattributeup_, other->m_specialattributeup_);
    std::swap(m_specialattribute_typelibrary_, other->m_specialattribute_typelibrary_);
    std::swap(m_specialattribute_valuemin_, other->m_specialattribute_valuemin_);
    std::swap(m_specialattribute_valuemax_, other->m_specialattribute_valuemax_);
    std::swap(m_godattribute_type_, other->m_godattribute_type_);
    std::swap(m_godattribute_valuemin_, other->m_godattribute_valuemin_);
    std::swap(m_godattribute_valuemax_, other->m_godattribute_valuemax_);
    m_attribute_.Swap(&other->m_attribute_);
    m_star_library_.Swap(&other->m_star_library_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_EquipAttribute::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_EquipAttribute_descriptor_;
  metadata.reflection = E_EquipAttribute_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_EquipAttribute::kEEquipAttributeListFieldNumber;
#endif  // !_MSC_VER

Sheet_EquipAttribute::Sheet_EquipAttribute()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_EquipAttribute::InitAsDefaultInstance() {
}

Sheet_EquipAttribute::Sheet_EquipAttribute(const Sheet_EquipAttribute& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_EquipAttribute::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_EquipAttribute::~Sheet_EquipAttribute() {
  SharedDtor();
}

void Sheet_EquipAttribute::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_EquipAttribute::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_EquipAttribute::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_EquipAttribute_descriptor_;
}

const Sheet_EquipAttribute& Sheet_EquipAttribute::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_equip_2eproto();
  return *default_instance_;
}

Sheet_EquipAttribute* Sheet_EquipAttribute::default_instance_ = NULL;

Sheet_EquipAttribute* Sheet_EquipAttribute::New() const {
  return new Sheet_EquipAttribute;
}

void Sheet_EquipAttribute::Clear() {
  e_equipattribute_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_EquipAttribute::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.E_EquipAttribute E_EquipAttribute_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_E_EquipAttribute_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_e_equipattribute_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_E_EquipAttribute_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_EquipAttribute::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.E_EquipAttribute E_EquipAttribute_List = 1;
  for (int i = 0; i < this->e_equipattribute_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->e_equipattribute_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_EquipAttribute::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.E_EquipAttribute E_EquipAttribute_List = 1;
  for (int i = 0; i < this->e_equipattribute_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->e_equipattribute_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_EquipAttribute::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.E_EquipAttribute E_EquipAttribute_List = 1;
  total_size += 1 * this->e_equipattribute_list_size();
  for (int i = 0; i < this->e_equipattribute_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->e_equipattribute_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_EquipAttribute::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_EquipAttribute* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_EquipAttribute*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_EquipAttribute::MergeFrom(const Sheet_EquipAttribute& from) {
  GOOGLE_CHECK_NE(&from, this);
  e_equipattribute_list_.MergeFrom(from.e_equipattribute_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_EquipAttribute::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_EquipAttribute::CopyFrom(const Sheet_EquipAttribute& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_EquipAttribute::IsInitialized() const {

  return true;
}

void Sheet_EquipAttribute::Swap(Sheet_EquipAttribute* other) {
  if (other != this) {
    e_equipattribute_list_.Swap(&other->e_equipattribute_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_EquipAttribute::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_EquipAttribute_descriptor_;
  metadata.reflection = Sheet_EquipAttribute_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_EquipStrongTypeDesc::kMNumFieldNumber;
const int E_EquipStrongTypeDesc::kMIdFieldNumber;
#endif  // !_MSC_VER

E_EquipStrongTypeDesc::E_EquipStrongTypeDesc()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_EquipStrongTypeDesc::InitAsDefaultInstance() {
}

E_EquipStrongTypeDesc::E_EquipStrongTypeDesc(const E_EquipStrongTypeDesc& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_EquipStrongTypeDesc::SharedCtor() {
  _cached_size_ = 0;
  m_num_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  m_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_EquipStrongTypeDesc::~E_EquipStrongTypeDesc() {
  SharedDtor();
}

void E_EquipStrongTypeDesc::SharedDtor() {
  if (m_num_ != &::google::protobuf::internal::kEmptyString) {
    delete m_num_;
  }
  if (this != default_instance_) {
  }
}

void E_EquipStrongTypeDesc::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_EquipStrongTypeDesc::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_EquipStrongTypeDesc_descriptor_;
}

const E_EquipStrongTypeDesc& E_EquipStrongTypeDesc::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_equip_2eproto();
  return *default_instance_;
}

E_EquipStrongTypeDesc* E_EquipStrongTypeDesc::default_instance_ = NULL;

E_EquipStrongTypeDesc* E_EquipStrongTypeDesc::New() const {
  return new E_EquipStrongTypeDesc;
}

void E_EquipStrongTypeDesc::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_m_num()) {
      if (m_num_ != &::google::protobuf::internal::kEmptyString) {
        m_num_->clear();
      }
    }
    m_id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_EquipStrongTypeDesc::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string m_num = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_m_num()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->m_num().data(), this->m_num().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_id;
        break;
      }

      // optional int32 m_id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_id_)));
          set_has_m_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_EquipStrongTypeDesc::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional string m_num = 1;
  if (has_m_num()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_num().data(), this->m_num().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->m_num(), output);
  }

  // optional int32 m_id = 2;
  if (has_m_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_EquipStrongTypeDesc::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional string m_num = 1;
  if (has_m_num()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_num().data(), this->m_num().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->m_num(), target);
  }

  // optional int32 m_id = 2;
  if (has_m_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_EquipStrongTypeDesc::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string m_num = 1;
    if (has_m_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->m_num());
    }

    // optional int32 m_id = 2;
    if (has_m_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_id());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_EquipStrongTypeDesc::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_EquipStrongTypeDesc* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_EquipStrongTypeDesc*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_EquipStrongTypeDesc::MergeFrom(const E_EquipStrongTypeDesc& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_num()) {
      set_m_num(from.m_num());
    }
    if (from.has_m_id()) {
      set_m_id(from.m_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_EquipStrongTypeDesc::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_EquipStrongTypeDesc::CopyFrom(const E_EquipStrongTypeDesc& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_EquipStrongTypeDesc::IsInitialized() const {

  return true;
}

void E_EquipStrongTypeDesc::Swap(E_EquipStrongTypeDesc* other) {
  if (other != this) {
    std::swap(m_num_, other->m_num_);
    std::swap(m_id_, other->m_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_EquipStrongTypeDesc::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_EquipStrongTypeDesc_descriptor_;
  metadata.reflection = E_EquipStrongTypeDesc_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_EquipStrong::kMIdFieldNumber;
const int E_EquipStrong::kMPositionFieldNumber;
const int E_EquipStrong::kMWearqualityFieldNumber;
const int E_EquipStrong::kMSrtongupFieldNumber;
const int E_EquipStrong::kMTypeFieldNumber;
#endif  // !_MSC_VER

E_EquipStrong::E_EquipStrong()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_EquipStrong::InitAsDefaultInstance() {
}

E_EquipStrong::E_EquipStrong(const E_EquipStrong& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_EquipStrong::SharedCtor() {
  _cached_size_ = 0;
  m_id_ = GOOGLE_LONGLONG(0);
  m_position_ = 0;
  m_wearquality_ = 0;
  m_srtongup_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_EquipStrong::~E_EquipStrong() {
  SharedDtor();
}

void E_EquipStrong::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_EquipStrong::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_EquipStrong::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_EquipStrong_descriptor_;
}

const E_EquipStrong& E_EquipStrong::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_equip_2eproto();
  return *default_instance_;
}

E_EquipStrong* E_EquipStrong::default_instance_ = NULL;

E_EquipStrong* E_EquipStrong::New() const {
  return new E_EquipStrong;
}

void E_EquipStrong::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_id_ = GOOGLE_LONGLONG(0);
    m_position_ = 0;
    m_wearquality_ = 0;
    m_srtongup_ = 0;
  }
  m_type_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_EquipStrong::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 m_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &m_id_)));
          set_has_m_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_position;
        break;
      }

      // optional int32 m_position = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_position:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_position_)));
          set_has_m_position();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_m_wearquality;
        break;
      }

      // optional int32 m_wearquality = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_wearquality:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_wearquality_)));
          set_has_m_wearquality();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_m_srtongup;
        break;
      }

      // optional int32 m_srtongup = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_srtongup:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_srtongup_)));
          set_has_m_srtongup();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_m_type;
        break;
      }

      // repeated .proto_ff.E_EquipStrongTypeDesc m_type = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_type:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_m_type()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_m_type;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_EquipStrong::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 m_id = 1;
  if (has_m_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->m_id(), output);
  }

  // optional int32 m_position = 2;
  if (has_m_position()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_position(), output);
  }

  // optional int32 m_wearquality = 3;
  if (has_m_wearquality()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->m_wearquality(), output);
  }

  // optional int32 m_srtongup = 4;
  if (has_m_srtongup()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->m_srtongup(), output);
  }

  // repeated .proto_ff.E_EquipStrongTypeDesc m_type = 5;
  for (int i = 0; i < this->m_type_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->m_type(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_EquipStrong::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 m_id = 1;
  if (has_m_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->m_id(), target);
  }

  // optional int32 m_position = 2;
  if (has_m_position()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_position(), target);
  }

  // optional int32 m_wearquality = 3;
  if (has_m_wearquality()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->m_wearquality(), target);
  }

  // optional int32 m_srtongup = 4;
  if (has_m_srtongup()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->m_srtongup(), target);
  }

  // repeated .proto_ff.E_EquipStrongTypeDesc m_type = 5;
  for (int i = 0; i < this->m_type_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->m_type(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_EquipStrong::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 m_id = 1;
    if (has_m_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->m_id());
    }

    // optional int32 m_position = 2;
    if (has_m_position()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_position());
    }

    // optional int32 m_wearquality = 3;
    if (has_m_wearquality()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_wearquality());
    }

    // optional int32 m_srtongup = 4;
    if (has_m_srtongup()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_srtongup());
    }

  }
  // repeated .proto_ff.E_EquipStrongTypeDesc m_type = 5;
  total_size += 1 * this->m_type_size();
  for (int i = 0; i < this->m_type_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->m_type(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_EquipStrong::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_EquipStrong* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_EquipStrong*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_EquipStrong::MergeFrom(const E_EquipStrong& from) {
  GOOGLE_CHECK_NE(&from, this);
  m_type_.MergeFrom(from.m_type_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_id()) {
      set_m_id(from.m_id());
    }
    if (from.has_m_position()) {
      set_m_position(from.m_position());
    }
    if (from.has_m_wearquality()) {
      set_m_wearquality(from.m_wearquality());
    }
    if (from.has_m_srtongup()) {
      set_m_srtongup(from.m_srtongup());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_EquipStrong::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_EquipStrong::CopyFrom(const E_EquipStrong& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_EquipStrong::IsInitialized() const {

  return true;
}

void E_EquipStrong::Swap(E_EquipStrong* other) {
  if (other != this) {
    std::swap(m_id_, other->m_id_);
    std::swap(m_position_, other->m_position_);
    std::swap(m_wearquality_, other->m_wearquality_);
    std::swap(m_srtongup_, other->m_srtongup_);
    m_type_.Swap(&other->m_type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_EquipStrong::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_EquipStrong_descriptor_;
  metadata.reflection = E_EquipStrong_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_EquipStrong::kEEquipStrongListFieldNumber;
#endif  // !_MSC_VER

Sheet_EquipStrong::Sheet_EquipStrong()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_EquipStrong::InitAsDefaultInstance() {
}

Sheet_EquipStrong::Sheet_EquipStrong(const Sheet_EquipStrong& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_EquipStrong::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_EquipStrong::~Sheet_EquipStrong() {
  SharedDtor();
}

void Sheet_EquipStrong::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_EquipStrong::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_EquipStrong::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_EquipStrong_descriptor_;
}

const Sheet_EquipStrong& Sheet_EquipStrong::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_equip_2eproto();
  return *default_instance_;
}

Sheet_EquipStrong* Sheet_EquipStrong::default_instance_ = NULL;

Sheet_EquipStrong* Sheet_EquipStrong::New() const {
  return new Sheet_EquipStrong;
}

void Sheet_EquipStrong::Clear() {
  e_equipstrong_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_EquipStrong::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.E_EquipStrong E_EquipStrong_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_E_EquipStrong_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_e_equipstrong_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_E_EquipStrong_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_EquipStrong::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.E_EquipStrong E_EquipStrong_List = 1;
  for (int i = 0; i < this->e_equipstrong_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->e_equipstrong_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_EquipStrong::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.E_EquipStrong E_EquipStrong_List = 1;
  for (int i = 0; i < this->e_equipstrong_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->e_equipstrong_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_EquipStrong::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.E_EquipStrong E_EquipStrong_List = 1;
  total_size += 1 * this->e_equipstrong_list_size();
  for (int i = 0; i < this->e_equipstrong_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->e_equipstrong_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_EquipStrong::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_EquipStrong* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_EquipStrong*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_EquipStrong::MergeFrom(const Sheet_EquipStrong& from) {
  GOOGLE_CHECK_NE(&from, this);
  e_equipstrong_list_.MergeFrom(from.e_equipstrong_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_EquipStrong::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_EquipStrong::CopyFrom(const Sheet_EquipStrong& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_EquipStrong::IsInitialized() const {

  return true;
}

void Sheet_EquipStrong::Swap(Sheet_EquipStrong* other) {
  if (other != this) {
    e_equipstrong_list_.Swap(&other->e_equipstrong_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_EquipStrong::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_EquipStrong_descriptor_;
  metadata.reflection = Sheet_EquipStrong_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_EquipStrongexpCostDesc::kMItemFieldNumber;
const int E_EquipStrongexpCostDesc::kMNumFieldNumber;
#endif  // !_MSC_VER

E_EquipStrongexpCostDesc::E_EquipStrongexpCostDesc()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_EquipStrongexpCostDesc::InitAsDefaultInstance() {
}

E_EquipStrongexpCostDesc::E_EquipStrongexpCostDesc(const E_EquipStrongexpCostDesc& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_EquipStrongexpCostDesc::SharedCtor() {
  _cached_size_ = 0;
  m_item_ = 0;
  m_num_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_EquipStrongexpCostDesc::~E_EquipStrongexpCostDesc() {
  SharedDtor();
}

void E_EquipStrongexpCostDesc::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_EquipStrongexpCostDesc::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_EquipStrongexpCostDesc::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_EquipStrongexpCostDesc_descriptor_;
}

const E_EquipStrongexpCostDesc& E_EquipStrongexpCostDesc::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_equip_2eproto();
  return *default_instance_;
}

E_EquipStrongexpCostDesc* E_EquipStrongexpCostDesc::default_instance_ = NULL;

E_EquipStrongexpCostDesc* E_EquipStrongexpCostDesc::New() const {
  return new E_EquipStrongexpCostDesc;
}

void E_EquipStrongexpCostDesc::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_item_ = 0;
    m_num_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_EquipStrongexpCostDesc::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_item = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_item_)));
          set_has_m_item();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_num;
        break;
      }

      // optional int32 m_num = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_num:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_num_)));
          set_has_m_num();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_EquipStrongexpCostDesc::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_item = 1;
  if (has_m_item()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_item(), output);
  }

  // optional int32 m_num = 2;
  if (has_m_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_num(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_EquipStrongexpCostDesc::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_item = 1;
  if (has_m_item()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_item(), target);
  }

  // optional int32 m_num = 2;
  if (has_m_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_num(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_EquipStrongexpCostDesc::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_item = 1;
    if (has_m_item()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_item());
    }

    // optional int32 m_num = 2;
    if (has_m_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_num());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_EquipStrongexpCostDesc::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_EquipStrongexpCostDesc* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_EquipStrongexpCostDesc*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_EquipStrongexpCostDesc::MergeFrom(const E_EquipStrongexpCostDesc& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_item()) {
      set_m_item(from.m_item());
    }
    if (from.has_m_num()) {
      set_m_num(from.m_num());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_EquipStrongexpCostDesc::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_EquipStrongexpCostDesc::CopyFrom(const E_EquipStrongexpCostDesc& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_EquipStrongexpCostDesc::IsInitialized() const {

  return true;
}

void E_EquipStrongexpCostDesc::Swap(E_EquipStrongexpCostDesc* other) {
  if (other != this) {
    std::swap(m_item_, other->m_item_);
    std::swap(m_num_, other->m_num_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_EquipStrongexpCostDesc::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_EquipStrongexpCostDesc_descriptor_;
  metadata.reflection = E_EquipStrongexpCostDesc_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_EquipStrongexp::kMLvFieldNumber;
const int E_EquipStrongexp::kMGoldFieldNumber;
const int E_EquipStrongexp::kMCostFieldNumber;
const int E_EquipStrongexp::kMPositiontypeFieldNumber;
#endif  // !_MSC_VER

E_EquipStrongexp::E_EquipStrongexp()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_EquipStrongexp::InitAsDefaultInstance() {
}

E_EquipStrongexp::E_EquipStrongexp(const E_EquipStrongexp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_EquipStrongexp::SharedCtor() {
  _cached_size_ = 0;
  m_lv_ = 0;
  m_gold_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_EquipStrongexp::~E_EquipStrongexp() {
  SharedDtor();
}

void E_EquipStrongexp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_EquipStrongexp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_EquipStrongexp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_EquipStrongexp_descriptor_;
}

const E_EquipStrongexp& E_EquipStrongexp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_equip_2eproto();
  return *default_instance_;
}

E_EquipStrongexp* E_EquipStrongexp::default_instance_ = NULL;

E_EquipStrongexp* E_EquipStrongexp::New() const {
  return new E_EquipStrongexp;
}

void E_EquipStrongexp::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_lv_ = 0;
    m_gold_ = 0;
  }
  m_cost_.Clear();
  m_positiontype_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_EquipStrongexp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_lv = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_lv_)));
          set_has_m_lv();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_gold;
        break;
      }

      // optional int32 m_gold = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_gold:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_gold_)));
          set_has_m_gold();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_m_cost;
        break;
      }

      // repeated .proto_ff.E_EquipStrongexpCostDesc m_cost = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_cost:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_m_cost()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_m_cost;
        if (input->ExpectTag(34)) goto parse_m_positiontype;
        break;
      }

      // repeated string m_positiontype = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_positiontype:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_m_positiontype()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->m_positiontype(this->m_positiontype_size() - 1).data(),
            this->m_positiontype(this->m_positiontype_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_m_positiontype;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_EquipStrongexp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_lv = 1;
  if (has_m_lv()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_lv(), output);
  }

  // optional int32 m_gold = 2;
  if (has_m_gold()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_gold(), output);
  }

  // repeated .proto_ff.E_EquipStrongexpCostDesc m_cost = 3;
  for (int i = 0; i < this->m_cost_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->m_cost(i), output);
  }

  // repeated string m_positiontype = 4;
  for (int i = 0; i < this->m_positiontype_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8String(
    this->m_positiontype(i).data(), this->m_positiontype(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->m_positiontype(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_EquipStrongexp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_lv = 1;
  if (has_m_lv()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_lv(), target);
  }

  // optional int32 m_gold = 2;
  if (has_m_gold()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_gold(), target);
  }

  // repeated .proto_ff.E_EquipStrongexpCostDesc m_cost = 3;
  for (int i = 0; i < this->m_cost_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->m_cost(i), target);
  }

  // repeated string m_positiontype = 4;
  for (int i = 0; i < this->m_positiontype_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_positiontype(i).data(), this->m_positiontype(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(4, this->m_positiontype(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_EquipStrongexp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_lv = 1;
    if (has_m_lv()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_lv());
    }

    // optional int32 m_gold = 2;
    if (has_m_gold()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_gold());
    }

  }
  // repeated .proto_ff.E_EquipStrongexpCostDesc m_cost = 3;
  total_size += 1 * this->m_cost_size();
  for (int i = 0; i < this->m_cost_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->m_cost(i));
  }

  // repeated string m_positiontype = 4;
  total_size += 1 * this->m_positiontype_size();
  for (int i = 0; i < this->m_positiontype_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->m_positiontype(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_EquipStrongexp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_EquipStrongexp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_EquipStrongexp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_EquipStrongexp::MergeFrom(const E_EquipStrongexp& from) {
  GOOGLE_CHECK_NE(&from, this);
  m_cost_.MergeFrom(from.m_cost_);
  m_positiontype_.MergeFrom(from.m_positiontype_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_lv()) {
      set_m_lv(from.m_lv());
    }
    if (from.has_m_gold()) {
      set_m_gold(from.m_gold());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_EquipStrongexp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_EquipStrongexp::CopyFrom(const E_EquipStrongexp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_EquipStrongexp::IsInitialized() const {

  return true;
}

void E_EquipStrongexp::Swap(E_EquipStrongexp* other) {
  if (other != this) {
    std::swap(m_lv_, other->m_lv_);
    std::swap(m_gold_, other->m_gold_);
    m_cost_.Swap(&other->m_cost_);
    m_positiontype_.Swap(&other->m_positiontype_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_EquipStrongexp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_EquipStrongexp_descriptor_;
  metadata.reflection = E_EquipStrongexp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_EquipStrongexp::kEEquipStrongexpListFieldNumber;
#endif  // !_MSC_VER

Sheet_EquipStrongexp::Sheet_EquipStrongexp()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_EquipStrongexp::InitAsDefaultInstance() {
}

Sheet_EquipStrongexp::Sheet_EquipStrongexp(const Sheet_EquipStrongexp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_EquipStrongexp::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_EquipStrongexp::~Sheet_EquipStrongexp() {
  SharedDtor();
}

void Sheet_EquipStrongexp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_EquipStrongexp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_EquipStrongexp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_EquipStrongexp_descriptor_;
}

const Sheet_EquipStrongexp& Sheet_EquipStrongexp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_equip_2eproto();
  return *default_instance_;
}

Sheet_EquipStrongexp* Sheet_EquipStrongexp::default_instance_ = NULL;

Sheet_EquipStrongexp* Sheet_EquipStrongexp::New() const {
  return new Sheet_EquipStrongexp;
}

void Sheet_EquipStrongexp::Clear() {
  e_equipstrongexp_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_EquipStrongexp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.E_EquipStrongexp E_EquipStrongexp_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_E_EquipStrongexp_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_e_equipstrongexp_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_E_EquipStrongexp_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_EquipStrongexp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.E_EquipStrongexp E_EquipStrongexp_List = 1;
  for (int i = 0; i < this->e_equipstrongexp_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->e_equipstrongexp_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_EquipStrongexp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.E_EquipStrongexp E_EquipStrongexp_List = 1;
  for (int i = 0; i < this->e_equipstrongexp_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->e_equipstrongexp_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_EquipStrongexp::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.E_EquipStrongexp E_EquipStrongexp_List = 1;
  total_size += 1 * this->e_equipstrongexp_list_size();
  for (int i = 0; i < this->e_equipstrongexp_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->e_equipstrongexp_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_EquipStrongexp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_EquipStrongexp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_EquipStrongexp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_EquipStrongexp::MergeFrom(const Sheet_EquipStrongexp& from) {
  GOOGLE_CHECK_NE(&from, this);
  e_equipstrongexp_list_.MergeFrom(from.e_equipstrongexp_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_EquipStrongexp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_EquipStrongexp::CopyFrom(const Sheet_EquipStrongexp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_EquipStrongexp::IsInitialized() const {

  return true;
}

void Sheet_EquipStrongexp::Swap(Sheet_EquipStrongexp* other) {
  if (other != this) {
    e_equipstrongexp_list_.Swap(&other->e_equipstrongexp_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_EquipStrongexp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_EquipStrongexp_descriptor_;
  metadata.reflection = Sheet_EquipStrongexp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_EquipStrongtotalAttributeDesc::kMTypeFieldNumber;
const int E_EquipStrongtotalAttributeDesc::kMValueFieldNumber;
#endif  // !_MSC_VER

E_EquipStrongtotalAttributeDesc::E_EquipStrongtotalAttributeDesc()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_EquipStrongtotalAttributeDesc::InitAsDefaultInstance() {
}

E_EquipStrongtotalAttributeDesc::E_EquipStrongtotalAttributeDesc(const E_EquipStrongtotalAttributeDesc& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_EquipStrongtotalAttributeDesc::SharedCtor() {
  _cached_size_ = 0;
  m_type_ = 0;
  m_value_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_EquipStrongtotalAttributeDesc::~E_EquipStrongtotalAttributeDesc() {
  SharedDtor();
}

void E_EquipStrongtotalAttributeDesc::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_EquipStrongtotalAttributeDesc::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_EquipStrongtotalAttributeDesc::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_EquipStrongtotalAttributeDesc_descriptor_;
}

const E_EquipStrongtotalAttributeDesc& E_EquipStrongtotalAttributeDesc::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_equip_2eproto();
  return *default_instance_;
}

E_EquipStrongtotalAttributeDesc* E_EquipStrongtotalAttributeDesc::default_instance_ = NULL;

E_EquipStrongtotalAttributeDesc* E_EquipStrongtotalAttributeDesc::New() const {
  return new E_EquipStrongtotalAttributeDesc;
}

void E_EquipStrongtotalAttributeDesc::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_type_ = 0;
    m_value_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_EquipStrongtotalAttributeDesc::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_type_)));
          set_has_m_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_value;
        break;
      }

      // optional int32 m_value = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_value:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_value_)));
          set_has_m_value();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_EquipStrongtotalAttributeDesc::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_type = 1;
  if (has_m_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_type(), output);
  }

  // optional int32 m_value = 2;
  if (has_m_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_value(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_EquipStrongtotalAttributeDesc::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_type = 1;
  if (has_m_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_type(), target);
  }

  // optional int32 m_value = 2;
  if (has_m_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_value(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_EquipStrongtotalAttributeDesc::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_type = 1;
    if (has_m_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_type());
    }

    // optional int32 m_value = 2;
    if (has_m_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_value());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_EquipStrongtotalAttributeDesc::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_EquipStrongtotalAttributeDesc* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_EquipStrongtotalAttributeDesc*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_EquipStrongtotalAttributeDesc::MergeFrom(const E_EquipStrongtotalAttributeDesc& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_type()) {
      set_m_type(from.m_type());
    }
    if (from.has_m_value()) {
      set_m_value(from.m_value());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_EquipStrongtotalAttributeDesc::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_EquipStrongtotalAttributeDesc::CopyFrom(const E_EquipStrongtotalAttributeDesc& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_EquipStrongtotalAttributeDesc::IsInitialized() const {

  return true;
}

void E_EquipStrongtotalAttributeDesc::Swap(E_EquipStrongtotalAttributeDesc* other) {
  if (other != this) {
    std::swap(m_type_, other->m_type_);
    std::swap(m_value_, other->m_value_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_EquipStrongtotalAttributeDesc::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_EquipStrongtotalAttributeDesc_descriptor_;
  metadata.reflection = E_EquipStrongtotalAttributeDesc_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_EquipStrongtotal::kMIdFieldNumber;
const int E_EquipStrongtotal::kMIdtypeFieldNumber;
const int E_EquipStrongtotal::kMIdnumFieldNumber;
const int E_EquipStrongtotal::kMAttributeFieldNumber;
#endif  // !_MSC_VER

E_EquipStrongtotal::E_EquipStrongtotal()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_EquipStrongtotal::InitAsDefaultInstance() {
}

E_EquipStrongtotal::E_EquipStrongtotal(const E_EquipStrongtotal& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_EquipStrongtotal::SharedCtor() {
  _cached_size_ = 0;
  m_id_ = GOOGLE_LONGLONG(0);
  m_idtype_ = 0;
  m_idnum_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_EquipStrongtotal::~E_EquipStrongtotal() {
  SharedDtor();
}

void E_EquipStrongtotal::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_EquipStrongtotal::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_EquipStrongtotal::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_EquipStrongtotal_descriptor_;
}

const E_EquipStrongtotal& E_EquipStrongtotal::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_equip_2eproto();
  return *default_instance_;
}

E_EquipStrongtotal* E_EquipStrongtotal::default_instance_ = NULL;

E_EquipStrongtotal* E_EquipStrongtotal::New() const {
  return new E_EquipStrongtotal;
}

void E_EquipStrongtotal::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_id_ = GOOGLE_LONGLONG(0);
    m_idtype_ = 0;
    m_idnum_ = 0;
  }
  m_attribute_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_EquipStrongtotal::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 m_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &m_id_)));
          set_has_m_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_idtype;
        break;
      }

      // optional int32 m_idtype = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_idtype:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_idtype_)));
          set_has_m_idtype();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_m_idnum;
        break;
      }

      // optional int32 m_idnum = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_idnum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_idnum_)));
          set_has_m_idnum();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_m_attribute;
        break;
      }

      // repeated .proto_ff.E_EquipStrongtotalAttributeDesc m_attribute = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_attribute:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_m_attribute()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_m_attribute;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_EquipStrongtotal::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 m_id = 1;
  if (has_m_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->m_id(), output);
  }

  // optional int32 m_idtype = 2;
  if (has_m_idtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_idtype(), output);
  }

  // optional int32 m_idnum = 3;
  if (has_m_idnum()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->m_idnum(), output);
  }

  // repeated .proto_ff.E_EquipStrongtotalAttributeDesc m_attribute = 4;
  for (int i = 0; i < this->m_attribute_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->m_attribute(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_EquipStrongtotal::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 m_id = 1;
  if (has_m_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->m_id(), target);
  }

  // optional int32 m_idtype = 2;
  if (has_m_idtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_idtype(), target);
  }

  // optional int32 m_idnum = 3;
  if (has_m_idnum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->m_idnum(), target);
  }

  // repeated .proto_ff.E_EquipStrongtotalAttributeDesc m_attribute = 4;
  for (int i = 0; i < this->m_attribute_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->m_attribute(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_EquipStrongtotal::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 m_id = 1;
    if (has_m_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->m_id());
    }

    // optional int32 m_idtype = 2;
    if (has_m_idtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_idtype());
    }

    // optional int32 m_idnum = 3;
    if (has_m_idnum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_idnum());
    }

  }
  // repeated .proto_ff.E_EquipStrongtotalAttributeDesc m_attribute = 4;
  total_size += 1 * this->m_attribute_size();
  for (int i = 0; i < this->m_attribute_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->m_attribute(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_EquipStrongtotal::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_EquipStrongtotal* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_EquipStrongtotal*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_EquipStrongtotal::MergeFrom(const E_EquipStrongtotal& from) {
  GOOGLE_CHECK_NE(&from, this);
  m_attribute_.MergeFrom(from.m_attribute_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_id()) {
      set_m_id(from.m_id());
    }
    if (from.has_m_idtype()) {
      set_m_idtype(from.m_idtype());
    }
    if (from.has_m_idnum()) {
      set_m_idnum(from.m_idnum());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_EquipStrongtotal::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_EquipStrongtotal::CopyFrom(const E_EquipStrongtotal& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_EquipStrongtotal::IsInitialized() const {

  return true;
}

void E_EquipStrongtotal::Swap(E_EquipStrongtotal* other) {
  if (other != this) {
    std::swap(m_id_, other->m_id_);
    std::swap(m_idtype_, other->m_idtype_);
    std::swap(m_idnum_, other->m_idnum_);
    m_attribute_.Swap(&other->m_attribute_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_EquipStrongtotal::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_EquipStrongtotal_descriptor_;
  metadata.reflection = E_EquipStrongtotal_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_EquipStrongtotal::kEEquipStrongtotalListFieldNumber;
#endif  // !_MSC_VER

Sheet_EquipStrongtotal::Sheet_EquipStrongtotal()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_EquipStrongtotal::InitAsDefaultInstance() {
}

Sheet_EquipStrongtotal::Sheet_EquipStrongtotal(const Sheet_EquipStrongtotal& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_EquipStrongtotal::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_EquipStrongtotal::~Sheet_EquipStrongtotal() {
  SharedDtor();
}

void Sheet_EquipStrongtotal::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_EquipStrongtotal::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_EquipStrongtotal::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_EquipStrongtotal_descriptor_;
}

const Sheet_EquipStrongtotal& Sheet_EquipStrongtotal::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_equip_2eproto();
  return *default_instance_;
}

Sheet_EquipStrongtotal* Sheet_EquipStrongtotal::default_instance_ = NULL;

Sheet_EquipStrongtotal* Sheet_EquipStrongtotal::New() const {
  return new Sheet_EquipStrongtotal;
}

void Sheet_EquipStrongtotal::Clear() {
  e_equipstrongtotal_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_EquipStrongtotal::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.E_EquipStrongtotal E_EquipStrongtotal_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_E_EquipStrongtotal_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_e_equipstrongtotal_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_E_EquipStrongtotal_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_EquipStrongtotal::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.E_EquipStrongtotal E_EquipStrongtotal_List = 1;
  for (int i = 0; i < this->e_equipstrongtotal_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->e_equipstrongtotal_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_EquipStrongtotal::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.E_EquipStrongtotal E_EquipStrongtotal_List = 1;
  for (int i = 0; i < this->e_equipstrongtotal_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->e_equipstrongtotal_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_EquipStrongtotal::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.E_EquipStrongtotal E_EquipStrongtotal_List = 1;
  total_size += 1 * this->e_equipstrongtotal_list_size();
  for (int i = 0; i < this->e_equipstrongtotal_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->e_equipstrongtotal_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_EquipStrongtotal::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_EquipStrongtotal* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_EquipStrongtotal*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_EquipStrongtotal::MergeFrom(const Sheet_EquipStrongtotal& from) {
  GOOGLE_CHECK_NE(&from, this);
  e_equipstrongtotal_list_.MergeFrom(from.e_equipstrongtotal_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_EquipStrongtotal::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_EquipStrongtotal::CopyFrom(const Sheet_EquipStrongtotal& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_EquipStrongtotal::IsInitialized() const {

  return true;
}

void Sheet_EquipStrongtotal::Swap(Sheet_EquipStrongtotal* other) {
  if (other != this) {
    e_equipstrongtotal_list_.Swap(&other->e_equipstrongtotal_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_EquipStrongtotal::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_EquipStrongtotal_descriptor_;
  metadata.reflection = Sheet_EquipStrongtotal_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_EquipGem::kMPositionFieldNumber;
const int E_EquipGem::kMGemtypeFieldNumber;
const int E_EquipGem::kMSpeciallygemtypeFieldNumber;
const int E_EquipGem::kMPayunlockitemFieldNumber;
const int E_EquipGem::kMPayunlocknnmFieldNumber;
const int E_EquipGem::kMCommongembuyFieldNumber;
const int E_EquipGem::kMSpeciallygembuyFieldNumber;
const int E_EquipGem::kMGemunlockFieldNumber;
#endif  // !_MSC_VER

E_EquipGem::E_EquipGem()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_EquipGem::InitAsDefaultInstance() {
}

E_EquipGem::E_EquipGem(const E_EquipGem& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_EquipGem::SharedCtor() {
  _cached_size_ = 0;
  m_position_ = 0;
  m_gemtype_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  m_speciallygemtype_ = 0;
  m_payunlockitem_ = 0;
  m_payunlocknnm_ = 0;
  m_commongembuy_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  m_speciallygembuy_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_EquipGem::~E_EquipGem() {
  SharedDtor();
}

void E_EquipGem::SharedDtor() {
  if (m_gemtype_ != &::google::protobuf::internal::kEmptyString) {
    delete m_gemtype_;
  }
  if (m_commongembuy_ != &::google::protobuf::internal::kEmptyString) {
    delete m_commongembuy_;
  }
  if (m_speciallygembuy_ != &::google::protobuf::internal::kEmptyString) {
    delete m_speciallygembuy_;
  }
  if (this != default_instance_) {
  }
}

void E_EquipGem::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_EquipGem::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_EquipGem_descriptor_;
}

const E_EquipGem& E_EquipGem::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_equip_2eproto();
  return *default_instance_;
}

E_EquipGem* E_EquipGem::default_instance_ = NULL;

E_EquipGem* E_EquipGem::New() const {
  return new E_EquipGem;
}

void E_EquipGem::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_position_ = 0;
    if (has_m_gemtype()) {
      if (m_gemtype_ != &::google::protobuf::internal::kEmptyString) {
        m_gemtype_->clear();
      }
    }
    m_speciallygemtype_ = 0;
    m_payunlockitem_ = 0;
    m_payunlocknnm_ = 0;
    if (has_m_commongembuy()) {
      if (m_commongembuy_ != &::google::protobuf::internal::kEmptyString) {
        m_commongembuy_->clear();
      }
    }
    if (has_m_speciallygembuy()) {
      if (m_speciallygembuy_ != &::google::protobuf::internal::kEmptyString) {
        m_speciallygembuy_->clear();
      }
    }
  }
  m_gemunlock_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_EquipGem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_position = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_position_)));
          set_has_m_position();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_m_gemtype;
        break;
      }

      // optional string m_gemtype = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_gemtype:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_m_gemtype()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->m_gemtype().data(), this->m_gemtype().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_m_speciallygemtype;
        break;
      }

      // optional int32 m_speciallygemtype = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_speciallygemtype:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_speciallygemtype_)));
          set_has_m_speciallygemtype();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_m_payunlockitem;
        break;
      }

      // optional int32 m_payunlockitem = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_payunlockitem:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_payunlockitem_)));
          set_has_m_payunlockitem();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_m_payunlocknnm;
        break;
      }

      // optional int32 m_payunlocknnm = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_payunlocknnm:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_payunlocknnm_)));
          set_has_m_payunlocknnm();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_m_commongembuy;
        break;
      }

      // optional string m_commongembuy = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_commongembuy:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_m_commongembuy()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->m_commongembuy().data(), this->m_commongembuy().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(58)) goto parse_m_speciallygembuy;
        break;
      }

      // optional string m_speciallygembuy = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_speciallygembuy:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_m_speciallygembuy()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->m_speciallygembuy().data(), this->m_speciallygembuy().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(64)) goto parse_m_gemunlock;
        break;
      }

      // repeated int32 m_gemunlock = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_gemunlock:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 64, input, this->mutable_m_gemunlock())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_m_gemunlock())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(64)) goto parse_m_gemunlock;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_EquipGem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_position = 1;
  if (has_m_position()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_position(), output);
  }

  // optional string m_gemtype = 2;
  if (has_m_gemtype()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_gemtype().data(), this->m_gemtype().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->m_gemtype(), output);
  }

  // optional int32 m_speciallygemtype = 3;
  if (has_m_speciallygemtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->m_speciallygemtype(), output);
  }

  // optional int32 m_payunlockitem = 4;
  if (has_m_payunlockitem()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->m_payunlockitem(), output);
  }

  // optional int32 m_payunlocknnm = 5;
  if (has_m_payunlocknnm()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->m_payunlocknnm(), output);
  }

  // optional string m_commongembuy = 6;
  if (has_m_commongembuy()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_commongembuy().data(), this->m_commongembuy().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      6, this->m_commongembuy(), output);
  }

  // optional string m_speciallygembuy = 7;
  if (has_m_speciallygembuy()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_speciallygembuy().data(), this->m_speciallygembuy().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      7, this->m_speciallygembuy(), output);
  }

  // repeated int32 m_gemunlock = 8;
  for (int i = 0; i < this->m_gemunlock_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      8, this->m_gemunlock(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_EquipGem::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_position = 1;
  if (has_m_position()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_position(), target);
  }

  // optional string m_gemtype = 2;
  if (has_m_gemtype()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_gemtype().data(), this->m_gemtype().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->m_gemtype(), target);
  }

  // optional int32 m_speciallygemtype = 3;
  if (has_m_speciallygemtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->m_speciallygemtype(), target);
  }

  // optional int32 m_payunlockitem = 4;
  if (has_m_payunlockitem()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->m_payunlockitem(), target);
  }

  // optional int32 m_payunlocknnm = 5;
  if (has_m_payunlocknnm()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->m_payunlocknnm(), target);
  }

  // optional string m_commongembuy = 6;
  if (has_m_commongembuy()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_commongembuy().data(), this->m_commongembuy().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->m_commongembuy(), target);
  }

  // optional string m_speciallygembuy = 7;
  if (has_m_speciallygembuy()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_speciallygembuy().data(), this->m_speciallygembuy().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->m_speciallygembuy(), target);
  }

  // repeated int32 m_gemunlock = 8;
  for (int i = 0; i < this->m_gemunlock_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(8, this->m_gemunlock(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_EquipGem::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_position = 1;
    if (has_m_position()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_position());
    }

    // optional string m_gemtype = 2;
    if (has_m_gemtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->m_gemtype());
    }

    // optional int32 m_speciallygemtype = 3;
    if (has_m_speciallygemtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_speciallygemtype());
    }

    // optional int32 m_payunlockitem = 4;
    if (has_m_payunlockitem()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_payunlockitem());
    }

    // optional int32 m_payunlocknnm = 5;
    if (has_m_payunlocknnm()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_payunlocknnm());
    }

    // optional string m_commongembuy = 6;
    if (has_m_commongembuy()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->m_commongembuy());
    }

    // optional string m_speciallygembuy = 7;
    if (has_m_speciallygembuy()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->m_speciallygembuy());
    }

  }
  // repeated int32 m_gemunlock = 8;
  {
    int data_size = 0;
    for (int i = 0; i < this->m_gemunlock_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->m_gemunlock(i));
    }
    total_size += 1 * this->m_gemunlock_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_EquipGem::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_EquipGem* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_EquipGem*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_EquipGem::MergeFrom(const E_EquipGem& from) {
  GOOGLE_CHECK_NE(&from, this);
  m_gemunlock_.MergeFrom(from.m_gemunlock_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_position()) {
      set_m_position(from.m_position());
    }
    if (from.has_m_gemtype()) {
      set_m_gemtype(from.m_gemtype());
    }
    if (from.has_m_speciallygemtype()) {
      set_m_speciallygemtype(from.m_speciallygemtype());
    }
    if (from.has_m_payunlockitem()) {
      set_m_payunlockitem(from.m_payunlockitem());
    }
    if (from.has_m_payunlocknnm()) {
      set_m_payunlocknnm(from.m_payunlocknnm());
    }
    if (from.has_m_commongembuy()) {
      set_m_commongembuy(from.m_commongembuy());
    }
    if (from.has_m_speciallygembuy()) {
      set_m_speciallygembuy(from.m_speciallygembuy());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_EquipGem::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_EquipGem::CopyFrom(const E_EquipGem& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_EquipGem::IsInitialized() const {

  return true;
}

void E_EquipGem::Swap(E_EquipGem* other) {
  if (other != this) {
    std::swap(m_position_, other->m_position_);
    std::swap(m_gemtype_, other->m_gemtype_);
    std::swap(m_speciallygemtype_, other->m_speciallygemtype_);
    std::swap(m_payunlockitem_, other->m_payunlockitem_);
    std::swap(m_payunlocknnm_, other->m_payunlocknnm_);
    std::swap(m_commongembuy_, other->m_commongembuy_);
    std::swap(m_speciallygembuy_, other->m_speciallygembuy_);
    m_gemunlock_.Swap(&other->m_gemunlock_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_EquipGem::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_EquipGem_descriptor_;
  metadata.reflection = E_EquipGem_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_EquipGem::kEEquipGemListFieldNumber;
#endif  // !_MSC_VER

Sheet_EquipGem::Sheet_EquipGem()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_EquipGem::InitAsDefaultInstance() {
}

Sheet_EquipGem::Sheet_EquipGem(const Sheet_EquipGem& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_EquipGem::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_EquipGem::~Sheet_EquipGem() {
  SharedDtor();
}

void Sheet_EquipGem::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_EquipGem::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_EquipGem::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_EquipGem_descriptor_;
}

const Sheet_EquipGem& Sheet_EquipGem::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_equip_2eproto();
  return *default_instance_;
}

Sheet_EquipGem* Sheet_EquipGem::default_instance_ = NULL;

Sheet_EquipGem* Sheet_EquipGem::New() const {
  return new Sheet_EquipGem;
}

void Sheet_EquipGem::Clear() {
  e_equipgem_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_EquipGem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.E_EquipGem E_EquipGem_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_E_EquipGem_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_e_equipgem_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_E_EquipGem_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_EquipGem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.E_EquipGem E_EquipGem_List = 1;
  for (int i = 0; i < this->e_equipgem_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->e_equipgem_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_EquipGem::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.E_EquipGem E_EquipGem_List = 1;
  for (int i = 0; i < this->e_equipgem_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->e_equipgem_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_EquipGem::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.E_EquipGem E_EquipGem_List = 1;
  total_size += 1 * this->e_equipgem_list_size();
  for (int i = 0; i < this->e_equipgem_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->e_equipgem_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_EquipGem::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_EquipGem* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_EquipGem*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_EquipGem::MergeFrom(const Sheet_EquipGem& from) {
  GOOGLE_CHECK_NE(&from, this);
  e_equipgem_list_.MergeFrom(from.e_equipgem_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_EquipGem::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_EquipGem::CopyFrom(const Sheet_EquipGem& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_EquipGem::IsInitialized() const {

  return true;
}

void Sheet_EquipGem::Swap(Sheet_EquipGem* other) {
  if (other != this) {
    e_equipgem_list_.Swap(&other->e_equipgem_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_EquipGem::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_EquipGem_descriptor_;
  metadata.reflection = Sheet_EquipGem_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_EquipGemlv::kMIdFieldNumber;
const int E_EquipGemlv::kMNextidFieldNumber;
const int E_EquipGemlv::kMNumbFieldNumber;
const int E_EquipGemlv::kMNextvalueFieldNumber;
const int E_EquipGemlv::kMCostgoldFieldNumber;
#endif  // !_MSC_VER

E_EquipGemlv::E_EquipGemlv()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_EquipGemlv::InitAsDefaultInstance() {
}

E_EquipGemlv::E_EquipGemlv(const E_EquipGemlv& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_EquipGemlv::SharedCtor() {
  _cached_size_ = 0;
  m_id_ = 0;
  m_nextid_ = 0;
  m_numb_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  m_nextvalue_ = 0;
  m_costgold_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_EquipGemlv::~E_EquipGemlv() {
  SharedDtor();
}

void E_EquipGemlv::SharedDtor() {
  if (m_numb_ != &::google::protobuf::internal::kEmptyString) {
    delete m_numb_;
  }
  if (this != default_instance_) {
  }
}

void E_EquipGemlv::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_EquipGemlv::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_EquipGemlv_descriptor_;
}

const E_EquipGemlv& E_EquipGemlv::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_equip_2eproto();
  return *default_instance_;
}

E_EquipGemlv* E_EquipGemlv::default_instance_ = NULL;

E_EquipGemlv* E_EquipGemlv::New() const {
  return new E_EquipGemlv;
}

void E_EquipGemlv::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_id_ = 0;
    m_nextid_ = 0;
    if (has_m_numb()) {
      if (m_numb_ != &::google::protobuf::internal::kEmptyString) {
        m_numb_->clear();
      }
    }
    m_nextvalue_ = 0;
    m_costgold_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_EquipGemlv::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_id_)));
          set_has_m_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_nextid;
        break;
      }

      // optional int32 m_nextid = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_nextid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_nextid_)));
          set_has_m_nextid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_m_numb;
        break;
      }

      // optional string m_numb = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_numb:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_m_numb()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->m_numb().data(), this->m_numb().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_m_nextvalue;
        break;
      }

      // optional int32 m_nextvalue = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_nextvalue:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_nextvalue_)));
          set_has_m_nextvalue();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_m_costgold;
        break;
      }

      // optional int32 m_costgold = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_costgold:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_costgold_)));
          set_has_m_costgold();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_EquipGemlv::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_id(), output);
  }

  // optional int32 m_nextid = 2;
  if (has_m_nextid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_nextid(), output);
  }

  // optional string m_numb = 3;
  if (has_m_numb()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_numb().data(), this->m_numb().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->m_numb(), output);
  }

  // optional int32 m_nextvalue = 4;
  if (has_m_nextvalue()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->m_nextvalue(), output);
  }

  // optional int32 m_costgold = 5;
  if (has_m_costgold()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->m_costgold(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_EquipGemlv::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_id(), target);
  }

  // optional int32 m_nextid = 2;
  if (has_m_nextid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_nextid(), target);
  }

  // optional string m_numb = 3;
  if (has_m_numb()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_numb().data(), this->m_numb().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->m_numb(), target);
  }

  // optional int32 m_nextvalue = 4;
  if (has_m_nextvalue()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->m_nextvalue(), target);
  }

  // optional int32 m_costgold = 5;
  if (has_m_costgold()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->m_costgold(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_EquipGemlv::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_id = 1;
    if (has_m_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_id());
    }

    // optional int32 m_nextid = 2;
    if (has_m_nextid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_nextid());
    }

    // optional string m_numb = 3;
    if (has_m_numb()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->m_numb());
    }

    // optional int32 m_nextvalue = 4;
    if (has_m_nextvalue()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_nextvalue());
    }

    // optional int32 m_costgold = 5;
    if (has_m_costgold()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_costgold());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_EquipGemlv::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_EquipGemlv* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_EquipGemlv*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_EquipGemlv::MergeFrom(const E_EquipGemlv& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_id()) {
      set_m_id(from.m_id());
    }
    if (from.has_m_nextid()) {
      set_m_nextid(from.m_nextid());
    }
    if (from.has_m_numb()) {
      set_m_numb(from.m_numb());
    }
    if (from.has_m_nextvalue()) {
      set_m_nextvalue(from.m_nextvalue());
    }
    if (from.has_m_costgold()) {
      set_m_costgold(from.m_costgold());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_EquipGemlv::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_EquipGemlv::CopyFrom(const E_EquipGemlv& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_EquipGemlv::IsInitialized() const {

  return true;
}

void E_EquipGemlv::Swap(E_EquipGemlv* other) {
  if (other != this) {
    std::swap(m_id_, other->m_id_);
    std::swap(m_nextid_, other->m_nextid_);
    std::swap(m_numb_, other->m_numb_);
    std::swap(m_nextvalue_, other->m_nextvalue_);
    std::swap(m_costgold_, other->m_costgold_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_EquipGemlv::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_EquipGemlv_descriptor_;
  metadata.reflection = E_EquipGemlv_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_EquipGemlv::kEEquipGemlvListFieldNumber;
#endif  // !_MSC_VER

Sheet_EquipGemlv::Sheet_EquipGemlv()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_EquipGemlv::InitAsDefaultInstance() {
}

Sheet_EquipGemlv::Sheet_EquipGemlv(const Sheet_EquipGemlv& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_EquipGemlv::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_EquipGemlv::~Sheet_EquipGemlv() {
  SharedDtor();
}

void Sheet_EquipGemlv::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_EquipGemlv::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_EquipGemlv::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_EquipGemlv_descriptor_;
}

const Sheet_EquipGemlv& Sheet_EquipGemlv::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_equip_2eproto();
  return *default_instance_;
}

Sheet_EquipGemlv* Sheet_EquipGemlv::default_instance_ = NULL;

Sheet_EquipGemlv* Sheet_EquipGemlv::New() const {
  return new Sheet_EquipGemlv;
}

void Sheet_EquipGemlv::Clear() {
  e_equipgemlv_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_EquipGemlv::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.E_EquipGemlv E_EquipGemlv_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_E_EquipGemlv_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_e_equipgemlv_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_E_EquipGemlv_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_EquipGemlv::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.E_EquipGemlv E_EquipGemlv_List = 1;
  for (int i = 0; i < this->e_equipgemlv_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->e_equipgemlv_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_EquipGemlv::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.E_EquipGemlv E_EquipGemlv_List = 1;
  for (int i = 0; i < this->e_equipgemlv_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->e_equipgemlv_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_EquipGemlv::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.E_EquipGemlv E_EquipGemlv_List = 1;
  total_size += 1 * this->e_equipgemlv_list_size();
  for (int i = 0; i < this->e_equipgemlv_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->e_equipgemlv_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_EquipGemlv::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_EquipGemlv* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_EquipGemlv*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_EquipGemlv::MergeFrom(const Sheet_EquipGemlv& from) {
  GOOGLE_CHECK_NE(&from, this);
  e_equipgemlv_list_.MergeFrom(from.e_equipgemlv_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_EquipGemlv::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_EquipGemlv::CopyFrom(const Sheet_EquipGemlv& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_EquipGemlv::IsInitialized() const {

  return true;
}

void Sheet_EquipGemlv::Swap(Sheet_EquipGemlv* other) {
  if (other != this) {
    e_equipgemlv_list_.Swap(&other->e_equipgemlv_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_EquipGemlv::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_EquipGemlv_descriptor_;
  metadata.reflection = Sheet_EquipGemlv_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_EquipStoveattAttributeDesc::kMTypeFieldNumber;
const int E_EquipStoveattAttributeDesc::kMValueFieldNumber;
#endif  // !_MSC_VER

E_EquipStoveattAttributeDesc::E_EquipStoveattAttributeDesc()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_EquipStoveattAttributeDesc::InitAsDefaultInstance() {
}

E_EquipStoveattAttributeDesc::E_EquipStoveattAttributeDesc(const E_EquipStoveattAttributeDesc& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_EquipStoveattAttributeDesc::SharedCtor() {
  _cached_size_ = 0;
  m_type_ = 0;
  m_value_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_EquipStoveattAttributeDesc::~E_EquipStoveattAttributeDesc() {
  SharedDtor();
}

void E_EquipStoveattAttributeDesc::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_EquipStoveattAttributeDesc::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_EquipStoveattAttributeDesc::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_EquipStoveattAttributeDesc_descriptor_;
}

const E_EquipStoveattAttributeDesc& E_EquipStoveattAttributeDesc::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_equip_2eproto();
  return *default_instance_;
}

E_EquipStoveattAttributeDesc* E_EquipStoveattAttributeDesc::default_instance_ = NULL;

E_EquipStoveattAttributeDesc* E_EquipStoveattAttributeDesc::New() const {
  return new E_EquipStoveattAttributeDesc;
}

void E_EquipStoveattAttributeDesc::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_type_ = 0;
    m_value_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_EquipStoveattAttributeDesc::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_type_)));
          set_has_m_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_value;
        break;
      }

      // optional int32 m_value = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_value:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_value_)));
          set_has_m_value();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_EquipStoveattAttributeDesc::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_type = 1;
  if (has_m_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_type(), output);
  }

  // optional int32 m_value = 2;
  if (has_m_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_value(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_EquipStoveattAttributeDesc::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_type = 1;
  if (has_m_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_type(), target);
  }

  // optional int32 m_value = 2;
  if (has_m_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_value(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_EquipStoveattAttributeDesc::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_type = 1;
    if (has_m_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_type());
    }

    // optional int32 m_value = 2;
    if (has_m_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_value());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_EquipStoveattAttributeDesc::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_EquipStoveattAttributeDesc* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_EquipStoveattAttributeDesc*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_EquipStoveattAttributeDesc::MergeFrom(const E_EquipStoveattAttributeDesc& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_type()) {
      set_m_type(from.m_type());
    }
    if (from.has_m_value()) {
      set_m_value(from.m_value());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_EquipStoveattAttributeDesc::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_EquipStoveattAttributeDesc::CopyFrom(const E_EquipStoveattAttributeDesc& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_EquipStoveattAttributeDesc::IsInitialized() const {

  return true;
}

void E_EquipStoveattAttributeDesc::Swap(E_EquipStoveattAttributeDesc* other) {
  if (other != this) {
    std::swap(m_type_, other->m_type_);
    std::swap(m_value_, other->m_value_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_EquipStoveattAttributeDesc::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_EquipStoveattAttributeDesc_descriptor_;
  metadata.reflection = E_EquipStoveattAttributeDesc_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_EquipStoveatt::kMLvFieldNumber;
const int E_EquipStoveatt::kMExpFieldNumber;
const int E_EquipStoveatt::kMAttributeFieldNumber;
#endif  // !_MSC_VER

E_EquipStoveatt::E_EquipStoveatt()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_EquipStoveatt::InitAsDefaultInstance() {
}

E_EquipStoveatt::E_EquipStoveatt(const E_EquipStoveatt& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_EquipStoveatt::SharedCtor() {
  _cached_size_ = 0;
  m_lv_ = 0;
  m_exp_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_EquipStoveatt::~E_EquipStoveatt() {
  SharedDtor();
}

void E_EquipStoveatt::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_EquipStoveatt::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_EquipStoveatt::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_EquipStoveatt_descriptor_;
}

const E_EquipStoveatt& E_EquipStoveatt::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_equip_2eproto();
  return *default_instance_;
}

E_EquipStoveatt* E_EquipStoveatt::default_instance_ = NULL;

E_EquipStoveatt* E_EquipStoveatt::New() const {
  return new E_EquipStoveatt;
}

void E_EquipStoveatt::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_lv_ = 0;
    m_exp_ = GOOGLE_LONGLONG(0);
  }
  m_attribute_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_EquipStoveatt::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_lv = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_lv_)));
          set_has_m_lv();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_exp;
        break;
      }

      // optional int64 m_exp = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_exp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &m_exp_)));
          set_has_m_exp();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_m_attribute;
        break;
      }

      // repeated .proto_ff.E_EquipStoveattAttributeDesc m_attribute = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_attribute:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_m_attribute()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_m_attribute;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_EquipStoveatt::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_lv = 1;
  if (has_m_lv()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_lv(), output);
  }

  // optional int64 m_exp = 2;
  if (has_m_exp()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->m_exp(), output);
  }

  // repeated .proto_ff.E_EquipStoveattAttributeDesc m_attribute = 3;
  for (int i = 0; i < this->m_attribute_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->m_attribute(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_EquipStoveatt::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_lv = 1;
  if (has_m_lv()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_lv(), target);
  }

  // optional int64 m_exp = 2;
  if (has_m_exp()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->m_exp(), target);
  }

  // repeated .proto_ff.E_EquipStoveattAttributeDesc m_attribute = 3;
  for (int i = 0; i < this->m_attribute_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->m_attribute(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_EquipStoveatt::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_lv = 1;
    if (has_m_lv()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_lv());
    }

    // optional int64 m_exp = 2;
    if (has_m_exp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->m_exp());
    }

  }
  // repeated .proto_ff.E_EquipStoveattAttributeDesc m_attribute = 3;
  total_size += 1 * this->m_attribute_size();
  for (int i = 0; i < this->m_attribute_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->m_attribute(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_EquipStoveatt::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_EquipStoveatt* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_EquipStoveatt*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_EquipStoveatt::MergeFrom(const E_EquipStoveatt& from) {
  GOOGLE_CHECK_NE(&from, this);
  m_attribute_.MergeFrom(from.m_attribute_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_lv()) {
      set_m_lv(from.m_lv());
    }
    if (from.has_m_exp()) {
      set_m_exp(from.m_exp());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_EquipStoveatt::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_EquipStoveatt::CopyFrom(const E_EquipStoveatt& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_EquipStoveatt::IsInitialized() const {

  return true;
}

void E_EquipStoveatt::Swap(E_EquipStoveatt* other) {
  if (other != this) {
    std::swap(m_lv_, other->m_lv_);
    std::swap(m_exp_, other->m_exp_);
    m_attribute_.Swap(&other->m_attribute_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_EquipStoveatt::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_EquipStoveatt_descriptor_;
  metadata.reflection = E_EquipStoveatt_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_EquipStoveatt::kEEquipStoveattListFieldNumber;
#endif  // !_MSC_VER

Sheet_EquipStoveatt::Sheet_EquipStoveatt()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_EquipStoveatt::InitAsDefaultInstance() {
}

Sheet_EquipStoveatt::Sheet_EquipStoveatt(const Sheet_EquipStoveatt& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_EquipStoveatt::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_EquipStoveatt::~Sheet_EquipStoveatt() {
  SharedDtor();
}

void Sheet_EquipStoveatt::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_EquipStoveatt::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_EquipStoveatt::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_EquipStoveatt_descriptor_;
}

const Sheet_EquipStoveatt& Sheet_EquipStoveatt::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_equip_2eproto();
  return *default_instance_;
}

Sheet_EquipStoveatt* Sheet_EquipStoveatt::default_instance_ = NULL;

Sheet_EquipStoveatt* Sheet_EquipStoveatt::New() const {
  return new Sheet_EquipStoveatt;
}

void Sheet_EquipStoveatt::Clear() {
  e_equipstoveatt_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_EquipStoveatt::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.E_EquipStoveatt E_EquipStoveatt_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_E_EquipStoveatt_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_e_equipstoveatt_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_E_EquipStoveatt_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_EquipStoveatt::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.E_EquipStoveatt E_EquipStoveatt_List = 1;
  for (int i = 0; i < this->e_equipstoveatt_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->e_equipstoveatt_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_EquipStoveatt::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.E_EquipStoveatt E_EquipStoveatt_List = 1;
  for (int i = 0; i < this->e_equipstoveatt_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->e_equipstoveatt_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_EquipStoveatt::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.E_EquipStoveatt E_EquipStoveatt_List = 1;
  total_size += 1 * this->e_equipstoveatt_list_size();
  for (int i = 0; i < this->e_equipstoveatt_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->e_equipstoveatt_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_EquipStoveatt::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_EquipStoveatt* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_EquipStoveatt*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_EquipStoveatt::MergeFrom(const Sheet_EquipStoveatt& from) {
  GOOGLE_CHECK_NE(&from, this);
  e_equipstoveatt_list_.MergeFrom(from.e_equipstoveatt_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_EquipStoveatt::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_EquipStoveatt::CopyFrom(const Sheet_EquipStoveatt& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_EquipStoveatt::IsInitialized() const {

  return true;
}

void Sheet_EquipStoveatt::Swap(Sheet_EquipStoveatt* other) {
  if (other != this) {
    e_equipstoveatt_list_.Swap(&other->e_equipstoveatt_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_EquipStoveatt::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_EquipStoveatt_descriptor_;
  metadata.reflection = Sheet_EquipStoveatt_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_EquipStoveexp::kMIdFieldNumber;
const int E_EquipStoveexp::kMExpFieldNumber;
const int E_EquipStoveexp::kMWearqualityFieldNumber;
const int E_EquipStoveexp::kMQualityFieldNumber;
#endif  // !_MSC_VER

E_EquipStoveexp::E_EquipStoveexp()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_EquipStoveexp::InitAsDefaultInstance() {
}

E_EquipStoveexp::E_EquipStoveexp(const E_EquipStoveexp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_EquipStoveexp::SharedCtor() {
  _cached_size_ = 0;
  m_id_ = 0;
  m_exp_ = 0;
  m_wearquality_ = 0;
  m_quality_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_EquipStoveexp::~E_EquipStoveexp() {
  SharedDtor();
}

void E_EquipStoveexp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_EquipStoveexp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_EquipStoveexp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_EquipStoveexp_descriptor_;
}

const E_EquipStoveexp& E_EquipStoveexp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_equip_2eproto();
  return *default_instance_;
}

E_EquipStoveexp* E_EquipStoveexp::default_instance_ = NULL;

E_EquipStoveexp* E_EquipStoveexp::New() const {
  return new E_EquipStoveexp;
}

void E_EquipStoveexp::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_id_ = 0;
    m_exp_ = 0;
    m_wearquality_ = 0;
    m_quality_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_EquipStoveexp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_id_)));
          set_has_m_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_exp;
        break;
      }

      // optional int32 m_exp = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_exp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_exp_)));
          set_has_m_exp();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_m_wearquality;
        break;
      }

      // optional int32 m_wearquality = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_wearquality:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_wearquality_)));
          set_has_m_wearquality();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_m_quality;
        break;
      }

      // optional int32 m_quality = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_quality:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_quality_)));
          set_has_m_quality();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_EquipStoveexp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_id(), output);
  }

  // optional int32 m_exp = 2;
  if (has_m_exp()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_exp(), output);
  }

  // optional int32 m_wearquality = 3;
  if (has_m_wearquality()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->m_wearquality(), output);
  }

  // optional int32 m_quality = 4;
  if (has_m_quality()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->m_quality(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_EquipStoveexp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_id(), target);
  }

  // optional int32 m_exp = 2;
  if (has_m_exp()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_exp(), target);
  }

  // optional int32 m_wearquality = 3;
  if (has_m_wearquality()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->m_wearquality(), target);
  }

  // optional int32 m_quality = 4;
  if (has_m_quality()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->m_quality(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_EquipStoveexp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_id = 1;
    if (has_m_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_id());
    }

    // optional int32 m_exp = 2;
    if (has_m_exp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_exp());
    }

    // optional int32 m_wearquality = 3;
    if (has_m_wearquality()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_wearquality());
    }

    // optional int32 m_quality = 4;
    if (has_m_quality()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_quality());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_EquipStoveexp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_EquipStoveexp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_EquipStoveexp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_EquipStoveexp::MergeFrom(const E_EquipStoveexp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_id()) {
      set_m_id(from.m_id());
    }
    if (from.has_m_exp()) {
      set_m_exp(from.m_exp());
    }
    if (from.has_m_wearquality()) {
      set_m_wearquality(from.m_wearquality());
    }
    if (from.has_m_quality()) {
      set_m_quality(from.m_quality());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_EquipStoveexp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_EquipStoveexp::CopyFrom(const E_EquipStoveexp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_EquipStoveexp::IsInitialized() const {

  return true;
}

void E_EquipStoveexp::Swap(E_EquipStoveexp* other) {
  if (other != this) {
    std::swap(m_id_, other->m_id_);
    std::swap(m_exp_, other->m_exp_);
    std::swap(m_wearquality_, other->m_wearquality_);
    std::swap(m_quality_, other->m_quality_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_EquipStoveexp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_EquipStoveexp_descriptor_;
  metadata.reflection = E_EquipStoveexp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_EquipStoveexp::kEEquipStoveexpListFieldNumber;
#endif  // !_MSC_VER

Sheet_EquipStoveexp::Sheet_EquipStoveexp()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_EquipStoveexp::InitAsDefaultInstance() {
}

Sheet_EquipStoveexp::Sheet_EquipStoveexp(const Sheet_EquipStoveexp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_EquipStoveexp::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_EquipStoveexp::~Sheet_EquipStoveexp() {
  SharedDtor();
}

void Sheet_EquipStoveexp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_EquipStoveexp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_EquipStoveexp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_EquipStoveexp_descriptor_;
}

const Sheet_EquipStoveexp& Sheet_EquipStoveexp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_equip_2eproto();
  return *default_instance_;
}

Sheet_EquipStoveexp* Sheet_EquipStoveexp::default_instance_ = NULL;

Sheet_EquipStoveexp* Sheet_EquipStoveexp::New() const {
  return new Sheet_EquipStoveexp;
}

void Sheet_EquipStoveexp::Clear() {
  e_equipstoveexp_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_EquipStoveexp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.E_EquipStoveexp E_EquipStoveexp_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_E_EquipStoveexp_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_e_equipstoveexp_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_E_EquipStoveexp_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_EquipStoveexp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.E_EquipStoveexp E_EquipStoveexp_List = 1;
  for (int i = 0; i < this->e_equipstoveexp_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->e_equipstoveexp_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_EquipStoveexp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.E_EquipStoveexp E_EquipStoveexp_List = 1;
  for (int i = 0; i < this->e_equipstoveexp_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->e_equipstoveexp_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_EquipStoveexp::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.E_EquipStoveexp E_EquipStoveexp_List = 1;
  total_size += 1 * this->e_equipstoveexp_list_size();
  for (int i = 0; i < this->e_equipstoveexp_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->e_equipstoveexp_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_EquipStoveexp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_EquipStoveexp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_EquipStoveexp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_EquipStoveexp::MergeFrom(const Sheet_EquipStoveexp& from) {
  GOOGLE_CHECK_NE(&from, this);
  e_equipstoveexp_list_.MergeFrom(from.e_equipstoveexp_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_EquipStoveexp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_EquipStoveexp::CopyFrom(const Sheet_EquipStoveexp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_EquipStoveexp::IsInitialized() const {

  return true;
}

void Sheet_EquipStoveexp::Swap(Sheet_EquipStoveexp* other) {
  if (other != this) {
    e_equipstoveexp_list_.Swap(&other->e_equipstoveexp_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_EquipStoveexp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_EquipStoveexp_descriptor_;
  metadata.reflection = Sheet_EquipStoveexp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_EquipGrade::kMIdFieldNumber;
#endif  // !_MSC_VER

E_EquipGrade::E_EquipGrade()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_EquipGrade::InitAsDefaultInstance() {
}

E_EquipGrade::E_EquipGrade(const E_EquipGrade& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_EquipGrade::SharedCtor() {
  _cached_size_ = 0;
  m_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_EquipGrade::~E_EquipGrade() {
  SharedDtor();
}

void E_EquipGrade::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_EquipGrade::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_EquipGrade::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_EquipGrade_descriptor_;
}

const E_EquipGrade& E_EquipGrade::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_equip_2eproto();
  return *default_instance_;
}

E_EquipGrade* E_EquipGrade::default_instance_ = NULL;

E_EquipGrade* E_EquipGrade::New() const {
  return new E_EquipGrade;
}

void E_EquipGrade::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_EquipGrade::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_id_)));
          set_has_m_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_EquipGrade::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_EquipGrade::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_EquipGrade::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_id = 1;
    if (has_m_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_id());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_EquipGrade::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_EquipGrade* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_EquipGrade*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_EquipGrade::MergeFrom(const E_EquipGrade& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_id()) {
      set_m_id(from.m_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_EquipGrade::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_EquipGrade::CopyFrom(const E_EquipGrade& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_EquipGrade::IsInitialized() const {

  return true;
}

void E_EquipGrade::Swap(E_EquipGrade* other) {
  if (other != this) {
    std::swap(m_id_, other->m_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_EquipGrade::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_EquipGrade_descriptor_;
  metadata.reflection = E_EquipGrade_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_EquipGrade::kEEquipGradeListFieldNumber;
#endif  // !_MSC_VER

Sheet_EquipGrade::Sheet_EquipGrade()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_EquipGrade::InitAsDefaultInstance() {
}

Sheet_EquipGrade::Sheet_EquipGrade(const Sheet_EquipGrade& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_EquipGrade::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_EquipGrade::~Sheet_EquipGrade() {
  SharedDtor();
}

void Sheet_EquipGrade::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_EquipGrade::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_EquipGrade::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_EquipGrade_descriptor_;
}

const Sheet_EquipGrade& Sheet_EquipGrade::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_equip_2eproto();
  return *default_instance_;
}

Sheet_EquipGrade* Sheet_EquipGrade::default_instance_ = NULL;

Sheet_EquipGrade* Sheet_EquipGrade::New() const {
  return new Sheet_EquipGrade;
}

void Sheet_EquipGrade::Clear() {
  e_equipgrade_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_EquipGrade::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.E_EquipGrade E_EquipGrade_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_E_EquipGrade_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_e_equipgrade_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_E_EquipGrade_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_EquipGrade::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.E_EquipGrade E_EquipGrade_List = 1;
  for (int i = 0; i < this->e_equipgrade_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->e_equipgrade_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_EquipGrade::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.E_EquipGrade E_EquipGrade_List = 1;
  for (int i = 0; i < this->e_equipgrade_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->e_equipgrade_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_EquipGrade::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.E_EquipGrade E_EquipGrade_List = 1;
  total_size += 1 * this->e_equipgrade_list_size();
  for (int i = 0; i < this->e_equipgrade_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->e_equipgrade_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_EquipGrade::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_EquipGrade* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_EquipGrade*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_EquipGrade::MergeFrom(const Sheet_EquipGrade& from) {
  GOOGLE_CHECK_NE(&from, this);
  e_equipgrade_list_.MergeFrom(from.e_equipgrade_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_EquipGrade::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_EquipGrade::CopyFrom(const Sheet_EquipGrade& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_EquipGrade::IsInitialized() const {

  return true;
}

void Sheet_EquipGrade::Swap(Sheet_EquipGrade* other) {
  if (other != this) {
    e_equipgrade_list_.Swap(&other->e_equipgrade_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_EquipGrade::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_EquipGrade_descriptor_;
  metadata.reflection = Sheet_EquipGrade_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_EquipClearAttributeDesc::kMValueFieldNumber;
#endif  // !_MSC_VER

E_EquipClearAttributeDesc::E_EquipClearAttributeDesc()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_EquipClearAttributeDesc::InitAsDefaultInstance() {
}

E_EquipClearAttributeDesc::E_EquipClearAttributeDesc(const E_EquipClearAttributeDesc& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_EquipClearAttributeDesc::SharedCtor() {
  _cached_size_ = 0;
  m_value_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_EquipClearAttributeDesc::~E_EquipClearAttributeDesc() {
  SharedDtor();
}

void E_EquipClearAttributeDesc::SharedDtor() {
  if (m_value_ != &::google::protobuf::internal::kEmptyString) {
    delete m_value_;
  }
  if (this != default_instance_) {
  }
}

void E_EquipClearAttributeDesc::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_EquipClearAttributeDesc::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_EquipClearAttributeDesc_descriptor_;
}

const E_EquipClearAttributeDesc& E_EquipClearAttributeDesc::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_equip_2eproto();
  return *default_instance_;
}

E_EquipClearAttributeDesc* E_EquipClearAttributeDesc::default_instance_ = NULL;

E_EquipClearAttributeDesc* E_EquipClearAttributeDesc::New() const {
  return new E_EquipClearAttributeDesc;
}

void E_EquipClearAttributeDesc::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_m_value()) {
      if (m_value_ != &::google::protobuf::internal::kEmptyString) {
        m_value_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_EquipClearAttributeDesc::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string m_value = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_m_value()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->m_value().data(), this->m_value().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_EquipClearAttributeDesc::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional string m_value = 1;
  if (has_m_value()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_value().data(), this->m_value().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->m_value(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_EquipClearAttributeDesc::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional string m_value = 1;
  if (has_m_value()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_value().data(), this->m_value().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->m_value(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_EquipClearAttributeDesc::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string m_value = 1;
    if (has_m_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->m_value());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_EquipClearAttributeDesc::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_EquipClearAttributeDesc* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_EquipClearAttributeDesc*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_EquipClearAttributeDesc::MergeFrom(const E_EquipClearAttributeDesc& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_value()) {
      set_m_value(from.m_value());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_EquipClearAttributeDesc::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_EquipClearAttributeDesc::CopyFrom(const E_EquipClearAttributeDesc& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_EquipClearAttributeDesc::IsInitialized() const {

  return true;
}

void E_EquipClearAttributeDesc::Swap(E_EquipClearAttributeDesc* other) {
  if (other != this) {
    std::swap(m_value_, other->m_value_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_EquipClearAttributeDesc::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_EquipClearAttributeDesc_descriptor_;
  metadata.reflection = E_EquipClearAttributeDesc_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_EquipClearSectionDesc::kMDownFieldNumber;
const int E_EquipClearSectionDesc::kMPFieldNumber;
const int E_EquipClearSectionDesc::kMTypeFieldNumber;
const int E_EquipClearSectionDesc::kMUpFieldNumber;
const int E_EquipClearSectionDesc::kMGFieldNumber;
#endif  // !_MSC_VER

E_EquipClearSectionDesc::E_EquipClearSectionDesc()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_EquipClearSectionDesc::InitAsDefaultInstance() {
}

E_EquipClearSectionDesc::E_EquipClearSectionDesc(const E_EquipClearSectionDesc& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_EquipClearSectionDesc::SharedCtor() {
  _cached_size_ = 0;
  m_down_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  m_p_ = 0;
  m_type_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  m_up_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  m_g_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_EquipClearSectionDesc::~E_EquipClearSectionDesc() {
  SharedDtor();
}

void E_EquipClearSectionDesc::SharedDtor() {
  if (m_down_ != &::google::protobuf::internal::kEmptyString) {
    delete m_down_;
  }
  if (m_type_ != &::google::protobuf::internal::kEmptyString) {
    delete m_type_;
  }
  if (m_up_ != &::google::protobuf::internal::kEmptyString) {
    delete m_up_;
  }
  if (m_g_ != &::google::protobuf::internal::kEmptyString) {
    delete m_g_;
  }
  if (this != default_instance_) {
  }
}

void E_EquipClearSectionDesc::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_EquipClearSectionDesc::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_EquipClearSectionDesc_descriptor_;
}

const E_EquipClearSectionDesc& E_EquipClearSectionDesc::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_equip_2eproto();
  return *default_instance_;
}

E_EquipClearSectionDesc* E_EquipClearSectionDesc::default_instance_ = NULL;

E_EquipClearSectionDesc* E_EquipClearSectionDesc::New() const {
  return new E_EquipClearSectionDesc;
}

void E_EquipClearSectionDesc::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_m_down()) {
      if (m_down_ != &::google::protobuf::internal::kEmptyString) {
        m_down_->clear();
      }
    }
    m_p_ = 0;
    if (has_m_type()) {
      if (m_type_ != &::google::protobuf::internal::kEmptyString) {
        m_type_->clear();
      }
    }
    if (has_m_up()) {
      if (m_up_ != &::google::protobuf::internal::kEmptyString) {
        m_up_->clear();
      }
    }
    if (has_m_g()) {
      if (m_g_ != &::google::protobuf::internal::kEmptyString) {
        m_g_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_EquipClearSectionDesc::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string m_down = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_m_down()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->m_down().data(), this->m_down().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_p;
        break;
      }

      // optional int32 m_p = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_p:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_p_)));
          set_has_m_p();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_m_type;
        break;
      }

      // optional string m_type = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_type:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_m_type()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->m_type().data(), this->m_type().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_m_up;
        break;
      }

      // optional string m_up = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_up:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_m_up()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->m_up().data(), this->m_up().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_m_g;
        break;
      }

      // optional string m_g = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_g:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_m_g()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->m_g().data(), this->m_g().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_EquipClearSectionDesc::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional string m_down = 1;
  if (has_m_down()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_down().data(), this->m_down().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->m_down(), output);
  }

  // optional int32 m_p = 2;
  if (has_m_p()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_p(), output);
  }

  // optional string m_type = 3;
  if (has_m_type()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_type().data(), this->m_type().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->m_type(), output);
  }

  // optional string m_up = 4;
  if (has_m_up()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_up().data(), this->m_up().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->m_up(), output);
  }

  // optional string m_g = 5;
  if (has_m_g()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_g().data(), this->m_g().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->m_g(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_EquipClearSectionDesc::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional string m_down = 1;
  if (has_m_down()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_down().data(), this->m_down().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->m_down(), target);
  }

  // optional int32 m_p = 2;
  if (has_m_p()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_p(), target);
  }

  // optional string m_type = 3;
  if (has_m_type()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_type().data(), this->m_type().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->m_type(), target);
  }

  // optional string m_up = 4;
  if (has_m_up()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_up().data(), this->m_up().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->m_up(), target);
  }

  // optional string m_g = 5;
  if (has_m_g()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_g().data(), this->m_g().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->m_g(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_EquipClearSectionDesc::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string m_down = 1;
    if (has_m_down()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->m_down());
    }

    // optional int32 m_p = 2;
    if (has_m_p()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_p());
    }

    // optional string m_type = 3;
    if (has_m_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->m_type());
    }

    // optional string m_up = 4;
    if (has_m_up()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->m_up());
    }

    // optional string m_g = 5;
    if (has_m_g()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->m_g());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_EquipClearSectionDesc::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_EquipClearSectionDesc* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_EquipClearSectionDesc*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_EquipClearSectionDesc::MergeFrom(const E_EquipClearSectionDesc& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_down()) {
      set_m_down(from.m_down());
    }
    if (from.has_m_p()) {
      set_m_p(from.m_p());
    }
    if (from.has_m_type()) {
      set_m_type(from.m_type());
    }
    if (from.has_m_up()) {
      set_m_up(from.m_up());
    }
    if (from.has_m_g()) {
      set_m_g(from.m_g());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_EquipClearSectionDesc::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_EquipClearSectionDesc::CopyFrom(const E_EquipClearSectionDesc& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_EquipClearSectionDesc::IsInitialized() const {

  return true;
}

void E_EquipClearSectionDesc::Swap(E_EquipClearSectionDesc* other) {
  if (other != this) {
    std::swap(m_down_, other->m_down_);
    std::swap(m_p_, other->m_p_);
    std::swap(m_type_, other->m_type_);
    std::swap(m_up_, other->m_up_);
    std::swap(m_g_, other->m_g_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_EquipClearSectionDesc::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_EquipClearSectionDesc_descriptor_;
  metadata.reflection = E_EquipClearSectionDesc_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_EquipClear::kMIdFieldNumber;
const int E_EquipClear::kMValueFieldNumber;
const int E_EquipClear::kMUnlockitemFieldNumber;
const int E_EquipClear::kMUnlocknumFieldNumber;
const int E_EquipClear::kMConsumeidFieldNumber;
const int E_EquipClear::kMConsumenumFieldNumber;
const int E_EquipClear::kMLockingidFieldNumber;
const int E_EquipClear::kMLockingnumFieldNumber;
const int E_EquipClear::kMAttributeFieldNumber;
const int E_EquipClear::kMSectionFieldNumber;
#endif  // !_MSC_VER

E_EquipClear::E_EquipClear()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_EquipClear::InitAsDefaultInstance() {
}

E_EquipClear::E_EquipClear(const E_EquipClear& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_EquipClear::SharedCtor() {
  _cached_size_ = 0;
  m_id_ = 0;
  m_value_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  m_unlockitem_ = 0;
  m_unlocknum_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  m_consumeid_ = GOOGLE_LONGLONG(0);
  m_consumenum_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  m_lockingid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  m_lockingnum_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_EquipClear::~E_EquipClear() {
  SharedDtor();
}

void E_EquipClear::SharedDtor() {
  if (m_value_ != &::google::protobuf::internal::kEmptyString) {
    delete m_value_;
  }
  if (m_unlocknum_ != &::google::protobuf::internal::kEmptyString) {
    delete m_unlocknum_;
  }
  if (m_consumenum_ != &::google::protobuf::internal::kEmptyString) {
    delete m_consumenum_;
  }
  if (m_lockingid_ != &::google::protobuf::internal::kEmptyString) {
    delete m_lockingid_;
  }
  if (m_lockingnum_ != &::google::protobuf::internal::kEmptyString) {
    delete m_lockingnum_;
  }
  if (this != default_instance_) {
  }
}

void E_EquipClear::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_EquipClear::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_EquipClear_descriptor_;
}

const E_EquipClear& E_EquipClear::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_equip_2eproto();
  return *default_instance_;
}

E_EquipClear* E_EquipClear::default_instance_ = NULL;

E_EquipClear* E_EquipClear::New() const {
  return new E_EquipClear;
}

void E_EquipClear::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_id_ = 0;
    if (has_m_value()) {
      if (m_value_ != &::google::protobuf::internal::kEmptyString) {
        m_value_->clear();
      }
    }
    m_unlockitem_ = 0;
    if (has_m_unlocknum()) {
      if (m_unlocknum_ != &::google::protobuf::internal::kEmptyString) {
        m_unlocknum_->clear();
      }
    }
    m_consumeid_ = GOOGLE_LONGLONG(0);
    if (has_m_consumenum()) {
      if (m_consumenum_ != &::google::protobuf::internal::kEmptyString) {
        m_consumenum_->clear();
      }
    }
    if (has_m_lockingid()) {
      if (m_lockingid_ != &::google::protobuf::internal::kEmptyString) {
        m_lockingid_->clear();
      }
    }
    if (has_m_lockingnum()) {
      if (m_lockingnum_ != &::google::protobuf::internal::kEmptyString) {
        m_lockingnum_->clear();
      }
    }
  }
  m_attribute_.Clear();
  m_section_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_EquipClear::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_id_)));
          set_has_m_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_m_value;
        break;
      }

      // optional string m_value = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_value:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_m_value()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->m_value().data(), this->m_value().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_m_unlockitem;
        break;
      }

      // optional int32 m_unlockitem = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_unlockitem:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_unlockitem_)));
          set_has_m_unlockitem();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_m_unlocknum;
        break;
      }

      // optional string m_unlocknum = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_unlocknum:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_m_unlocknum()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->m_unlocknum().data(), this->m_unlocknum().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_m_consumeid;
        break;
      }

      // optional int64 m_consumeid = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_consumeid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &m_consumeid_)));
          set_has_m_consumeid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_m_consumenum;
        break;
      }

      // optional string m_consumenum = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_consumenum:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_m_consumenum()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->m_consumenum().data(), this->m_consumenum().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(58)) goto parse_m_lockingid;
        break;
      }

      // optional string m_lockingid = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_lockingid:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_m_lockingid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->m_lockingid().data(), this->m_lockingid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(66)) goto parse_m_lockingnum;
        break;
      }

      // optional string m_lockingnum = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_lockingnum:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_m_lockingnum()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->m_lockingnum().data(), this->m_lockingnum().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(74)) goto parse_m_attribute;
        break;
      }

      // repeated .proto_ff.E_EquipClearAttributeDesc m_attribute = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_attribute:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_m_attribute()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(74)) goto parse_m_attribute;
        if (input->ExpectTag(82)) goto parse_m_section;
        break;
      }

      // repeated .proto_ff.E_EquipClearSectionDesc m_section = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_section:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_m_section()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(82)) goto parse_m_section;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_EquipClear::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_id(), output);
  }

  // optional string m_value = 2;
  if (has_m_value()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_value().data(), this->m_value().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->m_value(), output);
  }

  // optional int32 m_unlockitem = 3;
  if (has_m_unlockitem()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->m_unlockitem(), output);
  }

  // optional string m_unlocknum = 4;
  if (has_m_unlocknum()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_unlocknum().data(), this->m_unlocknum().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->m_unlocknum(), output);
  }

  // optional int64 m_consumeid = 5;
  if (has_m_consumeid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->m_consumeid(), output);
  }

  // optional string m_consumenum = 6;
  if (has_m_consumenum()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_consumenum().data(), this->m_consumenum().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      6, this->m_consumenum(), output);
  }

  // optional string m_lockingid = 7;
  if (has_m_lockingid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_lockingid().data(), this->m_lockingid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      7, this->m_lockingid(), output);
  }

  // optional string m_lockingnum = 8;
  if (has_m_lockingnum()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_lockingnum().data(), this->m_lockingnum().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      8, this->m_lockingnum(), output);
  }

  // repeated .proto_ff.E_EquipClearAttributeDesc m_attribute = 9;
  for (int i = 0; i < this->m_attribute_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->m_attribute(i), output);
  }

  // repeated .proto_ff.E_EquipClearSectionDesc m_section = 10;
  for (int i = 0; i < this->m_section_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->m_section(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_EquipClear::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_id(), target);
  }

  // optional string m_value = 2;
  if (has_m_value()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_value().data(), this->m_value().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->m_value(), target);
  }

  // optional int32 m_unlockitem = 3;
  if (has_m_unlockitem()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->m_unlockitem(), target);
  }

  // optional string m_unlocknum = 4;
  if (has_m_unlocknum()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_unlocknum().data(), this->m_unlocknum().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->m_unlocknum(), target);
  }

  // optional int64 m_consumeid = 5;
  if (has_m_consumeid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(5, this->m_consumeid(), target);
  }

  // optional string m_consumenum = 6;
  if (has_m_consumenum()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_consumenum().data(), this->m_consumenum().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->m_consumenum(), target);
  }

  // optional string m_lockingid = 7;
  if (has_m_lockingid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_lockingid().data(), this->m_lockingid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->m_lockingid(), target);
  }

  // optional string m_lockingnum = 8;
  if (has_m_lockingnum()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_lockingnum().data(), this->m_lockingnum().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->m_lockingnum(), target);
  }

  // repeated .proto_ff.E_EquipClearAttributeDesc m_attribute = 9;
  for (int i = 0; i < this->m_attribute_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        9, this->m_attribute(i), target);
  }

  // repeated .proto_ff.E_EquipClearSectionDesc m_section = 10;
  for (int i = 0; i < this->m_section_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        10, this->m_section(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_EquipClear::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_id = 1;
    if (has_m_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_id());
    }

    // optional string m_value = 2;
    if (has_m_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->m_value());
    }

    // optional int32 m_unlockitem = 3;
    if (has_m_unlockitem()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_unlockitem());
    }

    // optional string m_unlocknum = 4;
    if (has_m_unlocknum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->m_unlocknum());
    }

    // optional int64 m_consumeid = 5;
    if (has_m_consumeid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->m_consumeid());
    }

    // optional string m_consumenum = 6;
    if (has_m_consumenum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->m_consumenum());
    }

    // optional string m_lockingid = 7;
    if (has_m_lockingid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->m_lockingid());
    }

    // optional string m_lockingnum = 8;
    if (has_m_lockingnum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->m_lockingnum());
    }

  }
  // repeated .proto_ff.E_EquipClearAttributeDesc m_attribute = 9;
  total_size += 1 * this->m_attribute_size();
  for (int i = 0; i < this->m_attribute_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->m_attribute(i));
  }

  // repeated .proto_ff.E_EquipClearSectionDesc m_section = 10;
  total_size += 1 * this->m_section_size();
  for (int i = 0; i < this->m_section_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->m_section(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_EquipClear::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_EquipClear* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_EquipClear*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_EquipClear::MergeFrom(const E_EquipClear& from) {
  GOOGLE_CHECK_NE(&from, this);
  m_attribute_.MergeFrom(from.m_attribute_);
  m_section_.MergeFrom(from.m_section_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_id()) {
      set_m_id(from.m_id());
    }
    if (from.has_m_value()) {
      set_m_value(from.m_value());
    }
    if (from.has_m_unlockitem()) {
      set_m_unlockitem(from.m_unlockitem());
    }
    if (from.has_m_unlocknum()) {
      set_m_unlocknum(from.m_unlocknum());
    }
    if (from.has_m_consumeid()) {
      set_m_consumeid(from.m_consumeid());
    }
    if (from.has_m_consumenum()) {
      set_m_consumenum(from.m_consumenum());
    }
    if (from.has_m_lockingid()) {
      set_m_lockingid(from.m_lockingid());
    }
    if (from.has_m_lockingnum()) {
      set_m_lockingnum(from.m_lockingnum());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_EquipClear::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_EquipClear::CopyFrom(const E_EquipClear& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_EquipClear::IsInitialized() const {

  return true;
}

void E_EquipClear::Swap(E_EquipClear* other) {
  if (other != this) {
    std::swap(m_id_, other->m_id_);
    std::swap(m_value_, other->m_value_);
    std::swap(m_unlockitem_, other->m_unlockitem_);
    std::swap(m_unlocknum_, other->m_unlocknum_);
    std::swap(m_consumeid_, other->m_consumeid_);
    std::swap(m_consumenum_, other->m_consumenum_);
    std::swap(m_lockingid_, other->m_lockingid_);
    std::swap(m_lockingnum_, other->m_lockingnum_);
    m_attribute_.Swap(&other->m_attribute_);
    m_section_.Swap(&other->m_section_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_EquipClear::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_EquipClear_descriptor_;
  metadata.reflection = E_EquipClear_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_EquipClear::kEEquipClearListFieldNumber;
#endif  // !_MSC_VER

Sheet_EquipClear::Sheet_EquipClear()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_EquipClear::InitAsDefaultInstance() {
}

Sheet_EquipClear::Sheet_EquipClear(const Sheet_EquipClear& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_EquipClear::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_EquipClear::~Sheet_EquipClear() {
  SharedDtor();
}

void Sheet_EquipClear::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_EquipClear::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_EquipClear::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_EquipClear_descriptor_;
}

const Sheet_EquipClear& Sheet_EquipClear::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_equip_2eproto();
  return *default_instance_;
}

Sheet_EquipClear* Sheet_EquipClear::default_instance_ = NULL;

Sheet_EquipClear* Sheet_EquipClear::New() const {
  return new Sheet_EquipClear;
}

void Sheet_EquipClear::Clear() {
  e_equipclear_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_EquipClear::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.E_EquipClear E_EquipClear_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_E_EquipClear_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_e_equipclear_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_E_EquipClear_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_EquipClear::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.E_EquipClear E_EquipClear_List = 1;
  for (int i = 0; i < this->e_equipclear_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->e_equipclear_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_EquipClear::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.E_EquipClear E_EquipClear_List = 1;
  for (int i = 0; i < this->e_equipclear_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->e_equipclear_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_EquipClear::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.E_EquipClear E_EquipClear_List = 1;
  total_size += 1 * this->e_equipclear_list_size();
  for (int i = 0; i < this->e_equipclear_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->e_equipclear_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_EquipClear::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_EquipClear* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_EquipClear*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_EquipClear::MergeFrom(const Sheet_EquipClear& from) {
  GOOGLE_CHECK_NE(&from, this);
  e_equipclear_list_.MergeFrom(from.e_equipclear_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_EquipClear::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_EquipClear::CopyFrom(const Sheet_EquipClear& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_EquipClear::IsInitialized() const {

  return true;
}

void Sheet_EquipClear::Swap(Sheet_EquipClear* other) {
  if (other != this) {
    e_equipclear_list_.Swap(&other->e_equipclear_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_EquipClear::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_EquipClear_descriptor_;
  metadata.reflection = Sheet_EquipClear_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_EquipSuitAttributeDesc::kMSctivationFieldNumber;
const int E_EquipSuitAttributeDesc::kMValueFieldNumber;
#endif  // !_MSC_VER

E_EquipSuitAttributeDesc::E_EquipSuitAttributeDesc()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_EquipSuitAttributeDesc::InitAsDefaultInstance() {
}

E_EquipSuitAttributeDesc::E_EquipSuitAttributeDesc(const E_EquipSuitAttributeDesc& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_EquipSuitAttributeDesc::SharedCtor() {
  _cached_size_ = 0;
  m_sctivation_ = 0;
  m_value_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_EquipSuitAttributeDesc::~E_EquipSuitAttributeDesc() {
  SharedDtor();
}

void E_EquipSuitAttributeDesc::SharedDtor() {
  if (m_value_ != &::google::protobuf::internal::kEmptyString) {
    delete m_value_;
  }
  if (this != default_instance_) {
  }
}

void E_EquipSuitAttributeDesc::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_EquipSuitAttributeDesc::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_EquipSuitAttributeDesc_descriptor_;
}

const E_EquipSuitAttributeDesc& E_EquipSuitAttributeDesc::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_equip_2eproto();
  return *default_instance_;
}

E_EquipSuitAttributeDesc* E_EquipSuitAttributeDesc::default_instance_ = NULL;

E_EquipSuitAttributeDesc* E_EquipSuitAttributeDesc::New() const {
  return new E_EquipSuitAttributeDesc;
}

void E_EquipSuitAttributeDesc::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_sctivation_ = 0;
    if (has_m_value()) {
      if (m_value_ != &::google::protobuf::internal::kEmptyString) {
        m_value_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_EquipSuitAttributeDesc::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_sctivation = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_sctivation_)));
          set_has_m_sctivation();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_m_value;
        break;
      }

      // optional string m_value = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_value:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_m_value()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->m_value().data(), this->m_value().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_EquipSuitAttributeDesc::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_sctivation = 1;
  if (has_m_sctivation()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_sctivation(), output);
  }

  // optional string m_value = 2;
  if (has_m_value()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_value().data(), this->m_value().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->m_value(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_EquipSuitAttributeDesc::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_sctivation = 1;
  if (has_m_sctivation()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_sctivation(), target);
  }

  // optional string m_value = 2;
  if (has_m_value()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_value().data(), this->m_value().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->m_value(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_EquipSuitAttributeDesc::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_sctivation = 1;
    if (has_m_sctivation()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_sctivation());
    }

    // optional string m_value = 2;
    if (has_m_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->m_value());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_EquipSuitAttributeDesc::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_EquipSuitAttributeDesc* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_EquipSuitAttributeDesc*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_EquipSuitAttributeDesc::MergeFrom(const E_EquipSuitAttributeDesc& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_sctivation()) {
      set_m_sctivation(from.m_sctivation());
    }
    if (from.has_m_value()) {
      set_m_value(from.m_value());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_EquipSuitAttributeDesc::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_EquipSuitAttributeDesc::CopyFrom(const E_EquipSuitAttributeDesc& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_EquipSuitAttributeDesc::IsInitialized() const {

  return true;
}

void E_EquipSuitAttributeDesc::Swap(E_EquipSuitAttributeDesc* other) {
  if (other != this) {
    std::swap(m_sctivation_, other->m_sctivation_);
    std::swap(m_value_, other->m_value_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_EquipSuitAttributeDesc::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_EquipSuitAttributeDesc_descriptor_;
  metadata.reflection = E_EquipSuitAttributeDesc_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_EquipSuit::kMIdFieldNumber;
const int E_EquipSuit::kMProfessionFieldNumber;
const int E_EquipSuit::kMSuitlvFieldNumber;
const int E_EquipSuit::kMLevelFieldNumber;
const int E_EquipSuit::kMColourFieldNumber;
const int E_EquipSuit::kMAfternameFieldNumber;
const int E_EquipSuit::kMSuitevalueFieldNumber;
const int E_EquipSuit::kMAttributeFieldNumber;
const int E_EquipSuit::kMPositionFieldNumber;
#endif  // !_MSC_VER

E_EquipSuit::E_EquipSuit()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_EquipSuit::InitAsDefaultInstance() {
}

E_EquipSuit::E_EquipSuit(const E_EquipSuit& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_EquipSuit::SharedCtor() {
  _cached_size_ = 0;
  m_id_ = GOOGLE_LONGLONG(0);
  m_profession_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  m_suitlv_ = 0;
  m_level_ = 0;
  m_colour_ = 0;
  m_aftername_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  m_suitevalue_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_EquipSuit::~E_EquipSuit() {
  SharedDtor();
}

void E_EquipSuit::SharedDtor() {
  if (m_profession_ != &::google::protobuf::internal::kEmptyString) {
    delete m_profession_;
  }
  if (m_aftername_ != &::google::protobuf::internal::kEmptyString) {
    delete m_aftername_;
  }
  if (this != default_instance_) {
  }
}

void E_EquipSuit::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_EquipSuit::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_EquipSuit_descriptor_;
}

const E_EquipSuit& E_EquipSuit::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_equip_2eproto();
  return *default_instance_;
}

E_EquipSuit* E_EquipSuit::default_instance_ = NULL;

E_EquipSuit* E_EquipSuit::New() const {
  return new E_EquipSuit;
}

void E_EquipSuit::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_id_ = GOOGLE_LONGLONG(0);
    if (has_m_profession()) {
      if (m_profession_ != &::google::protobuf::internal::kEmptyString) {
        m_profession_->clear();
      }
    }
    m_suitlv_ = 0;
    m_level_ = 0;
    m_colour_ = 0;
    if (has_m_aftername()) {
      if (m_aftername_ != &::google::protobuf::internal::kEmptyString) {
        m_aftername_->clear();
      }
    }
    m_suitevalue_ = 0;
  }
  m_attribute_.Clear();
  m_position_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_EquipSuit::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 m_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &m_id_)));
          set_has_m_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_m_profession;
        break;
      }

      // optional string m_profession = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_profession:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_m_profession()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->m_profession().data(), this->m_profession().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_m_suitlv;
        break;
      }

      // optional int32 m_suitlv = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_suitlv:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_suitlv_)));
          set_has_m_suitlv();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_m_level;
        break;
      }

      // optional int32 m_level = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_level:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_level_)));
          set_has_m_level();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_m_colour;
        break;
      }

      // optional int32 m_colour = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_colour:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_colour_)));
          set_has_m_colour();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_m_aftername;
        break;
      }

      // optional string m_aftername = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_aftername:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_m_aftername()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->m_aftername().data(), this->m_aftername().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_m_suitevalue;
        break;
      }

      // optional int32 m_suitevalue = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_suitevalue:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_suitevalue_)));
          set_has_m_suitevalue();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(66)) goto parse_m_attribute;
        break;
      }

      // repeated .proto_ff.E_EquipSuitAttributeDesc m_attribute = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_attribute:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_m_attribute()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(66)) goto parse_m_attribute;
        if (input->ExpectTag(74)) goto parse_m_position;
        break;
      }

      // repeated string m_position = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_position:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_m_position()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->m_position(this->m_position_size() - 1).data(),
            this->m_position(this->m_position_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(74)) goto parse_m_position;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_EquipSuit::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 m_id = 1;
  if (has_m_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->m_id(), output);
  }

  // optional string m_profession = 2;
  if (has_m_profession()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_profession().data(), this->m_profession().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->m_profession(), output);
  }

  // optional int32 m_suitlv = 3;
  if (has_m_suitlv()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->m_suitlv(), output);
  }

  // optional int32 m_level = 4;
  if (has_m_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->m_level(), output);
  }

  // optional int32 m_colour = 5;
  if (has_m_colour()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->m_colour(), output);
  }

  // optional string m_aftername = 6;
  if (has_m_aftername()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_aftername().data(), this->m_aftername().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      6, this->m_aftername(), output);
  }

  // optional int32 m_suitevalue = 7;
  if (has_m_suitevalue()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->m_suitevalue(), output);
  }

  // repeated .proto_ff.E_EquipSuitAttributeDesc m_attribute = 8;
  for (int i = 0; i < this->m_attribute_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->m_attribute(i), output);
  }

  // repeated string m_position = 9;
  for (int i = 0; i < this->m_position_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8String(
    this->m_position(i).data(), this->m_position(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      9, this->m_position(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_EquipSuit::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 m_id = 1;
  if (has_m_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->m_id(), target);
  }

  // optional string m_profession = 2;
  if (has_m_profession()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_profession().data(), this->m_profession().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->m_profession(), target);
  }

  // optional int32 m_suitlv = 3;
  if (has_m_suitlv()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->m_suitlv(), target);
  }

  // optional int32 m_level = 4;
  if (has_m_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->m_level(), target);
  }

  // optional int32 m_colour = 5;
  if (has_m_colour()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->m_colour(), target);
  }

  // optional string m_aftername = 6;
  if (has_m_aftername()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_aftername().data(), this->m_aftername().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->m_aftername(), target);
  }

  // optional int32 m_suitevalue = 7;
  if (has_m_suitevalue()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->m_suitevalue(), target);
  }

  // repeated .proto_ff.E_EquipSuitAttributeDesc m_attribute = 8;
  for (int i = 0; i < this->m_attribute_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        8, this->m_attribute(i), target);
  }

  // repeated string m_position = 9;
  for (int i = 0; i < this->m_position_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_position(i).data(), this->m_position(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(9, this->m_position(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_EquipSuit::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 m_id = 1;
    if (has_m_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->m_id());
    }

    // optional string m_profession = 2;
    if (has_m_profession()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->m_profession());
    }

    // optional int32 m_suitlv = 3;
    if (has_m_suitlv()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_suitlv());
    }

    // optional int32 m_level = 4;
    if (has_m_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_level());
    }

    // optional int32 m_colour = 5;
    if (has_m_colour()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_colour());
    }

    // optional string m_aftername = 6;
    if (has_m_aftername()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->m_aftername());
    }

    // optional int32 m_suitevalue = 7;
    if (has_m_suitevalue()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_suitevalue());
    }

  }
  // repeated .proto_ff.E_EquipSuitAttributeDesc m_attribute = 8;
  total_size += 1 * this->m_attribute_size();
  for (int i = 0; i < this->m_attribute_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->m_attribute(i));
  }

  // repeated string m_position = 9;
  total_size += 1 * this->m_position_size();
  for (int i = 0; i < this->m_position_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->m_position(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_EquipSuit::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_EquipSuit* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_EquipSuit*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_EquipSuit::MergeFrom(const E_EquipSuit& from) {
  GOOGLE_CHECK_NE(&from, this);
  m_attribute_.MergeFrom(from.m_attribute_);
  m_position_.MergeFrom(from.m_position_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_id()) {
      set_m_id(from.m_id());
    }
    if (from.has_m_profession()) {
      set_m_profession(from.m_profession());
    }
    if (from.has_m_suitlv()) {
      set_m_suitlv(from.m_suitlv());
    }
    if (from.has_m_level()) {
      set_m_level(from.m_level());
    }
    if (from.has_m_colour()) {
      set_m_colour(from.m_colour());
    }
    if (from.has_m_aftername()) {
      set_m_aftername(from.m_aftername());
    }
    if (from.has_m_suitevalue()) {
      set_m_suitevalue(from.m_suitevalue());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_EquipSuit::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_EquipSuit::CopyFrom(const E_EquipSuit& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_EquipSuit::IsInitialized() const {

  return true;
}

void E_EquipSuit::Swap(E_EquipSuit* other) {
  if (other != this) {
    std::swap(m_id_, other->m_id_);
    std::swap(m_profession_, other->m_profession_);
    std::swap(m_suitlv_, other->m_suitlv_);
    std::swap(m_level_, other->m_level_);
    std::swap(m_colour_, other->m_colour_);
    std::swap(m_aftername_, other->m_aftername_);
    std::swap(m_suitevalue_, other->m_suitevalue_);
    m_attribute_.Swap(&other->m_attribute_);
    m_position_.Swap(&other->m_position_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_EquipSuit::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_EquipSuit_descriptor_;
  metadata.reflection = E_EquipSuit_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_EquipSuit::kEEquipSuitListFieldNumber;
#endif  // !_MSC_VER

Sheet_EquipSuit::Sheet_EquipSuit()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_EquipSuit::InitAsDefaultInstance() {
}

Sheet_EquipSuit::Sheet_EquipSuit(const Sheet_EquipSuit& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_EquipSuit::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_EquipSuit::~Sheet_EquipSuit() {
  SharedDtor();
}

void Sheet_EquipSuit::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_EquipSuit::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_EquipSuit::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_EquipSuit_descriptor_;
}

const Sheet_EquipSuit& Sheet_EquipSuit::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_equip_2eproto();
  return *default_instance_;
}

Sheet_EquipSuit* Sheet_EquipSuit::default_instance_ = NULL;

Sheet_EquipSuit* Sheet_EquipSuit::New() const {
  return new Sheet_EquipSuit;
}

void Sheet_EquipSuit::Clear() {
  e_equipsuit_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_EquipSuit::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.E_EquipSuit E_EquipSuit_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_E_EquipSuit_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_e_equipsuit_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_E_EquipSuit_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_EquipSuit::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.E_EquipSuit E_EquipSuit_List = 1;
  for (int i = 0; i < this->e_equipsuit_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->e_equipsuit_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_EquipSuit::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.E_EquipSuit E_EquipSuit_List = 1;
  for (int i = 0; i < this->e_equipsuit_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->e_equipsuit_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_EquipSuit::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.E_EquipSuit E_EquipSuit_List = 1;
  total_size += 1 * this->e_equipsuit_list_size();
  for (int i = 0; i < this->e_equipsuit_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->e_equipsuit_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_EquipSuit::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_EquipSuit* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_EquipSuit*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_EquipSuit::MergeFrom(const Sheet_EquipSuit& from) {
  GOOGLE_CHECK_NE(&from, this);
  e_equipsuit_list_.MergeFrom(from.e_equipsuit_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_EquipSuit::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_EquipSuit::CopyFrom(const Sheet_EquipSuit& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_EquipSuit::IsInitialized() const {

  return true;
}

void Sheet_EquipSuit::Swap(Sheet_EquipSuit* other) {
  if (other != this) {
    e_equipsuit_list_.Swap(&other->e_equipsuit_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_EquipSuit::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_EquipSuit_descriptor_;
  metadata.reflection = Sheet_EquipSuit_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_EquipBreakBreakDesc::kMItemFieldNumber;
const int E_EquipBreakBreakDesc::kMNumFieldNumber;
#endif  // !_MSC_VER

E_EquipBreakBreakDesc::E_EquipBreakBreakDesc()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_EquipBreakBreakDesc::InitAsDefaultInstance() {
}

E_EquipBreakBreakDesc::E_EquipBreakBreakDesc(const E_EquipBreakBreakDesc& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_EquipBreakBreakDesc::SharedCtor() {
  _cached_size_ = 0;
  m_item_ = 0;
  m_num_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_EquipBreakBreakDesc::~E_EquipBreakBreakDesc() {
  SharedDtor();
}

void E_EquipBreakBreakDesc::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_EquipBreakBreakDesc::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_EquipBreakBreakDesc::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_EquipBreakBreakDesc_descriptor_;
}

const E_EquipBreakBreakDesc& E_EquipBreakBreakDesc::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_equip_2eproto();
  return *default_instance_;
}

E_EquipBreakBreakDesc* E_EquipBreakBreakDesc::default_instance_ = NULL;

E_EquipBreakBreakDesc* E_EquipBreakBreakDesc::New() const {
  return new E_EquipBreakBreakDesc;
}

void E_EquipBreakBreakDesc::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_item_ = 0;
    m_num_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_EquipBreakBreakDesc::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_item = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_item_)));
          set_has_m_item();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_num;
        break;
      }

      // optional int32 m_num = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_num:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_num_)));
          set_has_m_num();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_EquipBreakBreakDesc::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_item = 1;
  if (has_m_item()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_item(), output);
  }

  // optional int32 m_num = 2;
  if (has_m_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_num(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_EquipBreakBreakDesc::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_item = 1;
  if (has_m_item()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_item(), target);
  }

  // optional int32 m_num = 2;
  if (has_m_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_num(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_EquipBreakBreakDesc::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_item = 1;
    if (has_m_item()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_item());
    }

    // optional int32 m_num = 2;
    if (has_m_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_num());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_EquipBreakBreakDesc::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_EquipBreakBreakDesc* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_EquipBreakBreakDesc*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_EquipBreakBreakDesc::MergeFrom(const E_EquipBreakBreakDesc& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_item()) {
      set_m_item(from.m_item());
    }
    if (from.has_m_num()) {
      set_m_num(from.m_num());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_EquipBreakBreakDesc::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_EquipBreakBreakDesc::CopyFrom(const E_EquipBreakBreakDesc& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_EquipBreakBreakDesc::IsInitialized() const {

  return true;
}

void E_EquipBreakBreakDesc::Swap(E_EquipBreakBreakDesc* other) {
  if (other != this) {
    std::swap(m_item_, other->m_item_);
    std::swap(m_num_, other->m_num_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_EquipBreakBreakDesc::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_EquipBreakBreakDesc_descriptor_;
  metadata.reflection = E_EquipBreakBreakDesc_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_EquipBreak::kMLvFieldNumber;
const int E_EquipBreak::kMStepFieldNumber;
const int E_EquipBreak::kMPositiontypeFieldNumber;
const int E_EquipBreak::kMBasicFieldNumber;
const int E_EquipBreak::kMStarFieldNumber;
const int E_EquipBreak::kMBreakFieldNumber;
#endif  // !_MSC_VER

E_EquipBreak::E_EquipBreak()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_EquipBreak::InitAsDefaultInstance() {
}

E_EquipBreak::E_EquipBreak(const E_EquipBreak& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_EquipBreak::SharedCtor() {
  _cached_size_ = 0;
  m_lv_ = 0;
  m_step_ = 0;
  m_positiontype_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  m_basic_ = 0;
  m_star_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_EquipBreak::~E_EquipBreak() {
  SharedDtor();
}

void E_EquipBreak::SharedDtor() {
  if (m_positiontype_ != &::google::protobuf::internal::kEmptyString) {
    delete m_positiontype_;
  }
  if (this != default_instance_) {
  }
}

void E_EquipBreak::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_EquipBreak::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_EquipBreak_descriptor_;
}

const E_EquipBreak& E_EquipBreak::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_equip_2eproto();
  return *default_instance_;
}

E_EquipBreak* E_EquipBreak::default_instance_ = NULL;

E_EquipBreak* E_EquipBreak::New() const {
  return new E_EquipBreak;
}

void E_EquipBreak::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_lv_ = 0;
    m_step_ = 0;
    if (has_m_positiontype()) {
      if (m_positiontype_ != &::google::protobuf::internal::kEmptyString) {
        m_positiontype_->clear();
      }
    }
    m_basic_ = 0;
    m_star_ = 0;
  }
  m_break_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_EquipBreak::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_lv = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_lv_)));
          set_has_m_lv();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_step;
        break;
      }

      // optional int32 m_step = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_step:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_step_)));
          set_has_m_step();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_m_positiontype;
        break;
      }

      // optional string m_positiontype = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_positiontype:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_m_positiontype()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->m_positiontype().data(), this->m_positiontype().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_m_basic;
        break;
      }

      // optional int32 m_basic = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_basic:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_basic_)));
          set_has_m_basic();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_m_star;
        break;
      }

      // optional int32 m_star = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_star:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_star_)));
          set_has_m_star();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_m_break;
        break;
      }

      // repeated .proto_ff.E_EquipBreakBreakDesc m_break = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_break:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_m_break()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_m_break;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_EquipBreak::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_lv = 1;
  if (has_m_lv()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_lv(), output);
  }

  // optional int32 m_step = 2;
  if (has_m_step()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_step(), output);
  }

  // optional string m_positiontype = 3;
  if (has_m_positiontype()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_positiontype().data(), this->m_positiontype().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->m_positiontype(), output);
  }

  // optional int32 m_basic = 4;
  if (has_m_basic()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->m_basic(), output);
  }

  // optional int32 m_star = 5;
  if (has_m_star()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->m_star(), output);
  }

  // repeated .proto_ff.E_EquipBreakBreakDesc m_break = 6;
  for (int i = 0; i < this->m_break_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->m_break(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_EquipBreak::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_lv = 1;
  if (has_m_lv()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_lv(), target);
  }

  // optional int32 m_step = 2;
  if (has_m_step()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_step(), target);
  }

  // optional string m_positiontype = 3;
  if (has_m_positiontype()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_positiontype().data(), this->m_positiontype().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->m_positiontype(), target);
  }

  // optional int32 m_basic = 4;
  if (has_m_basic()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->m_basic(), target);
  }

  // optional int32 m_star = 5;
  if (has_m_star()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->m_star(), target);
  }

  // repeated .proto_ff.E_EquipBreakBreakDesc m_break = 6;
  for (int i = 0; i < this->m_break_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        6, this->m_break(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_EquipBreak::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_lv = 1;
    if (has_m_lv()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_lv());
    }

    // optional int32 m_step = 2;
    if (has_m_step()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_step());
    }

    // optional string m_positiontype = 3;
    if (has_m_positiontype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->m_positiontype());
    }

    // optional int32 m_basic = 4;
    if (has_m_basic()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_basic());
    }

    // optional int32 m_star = 5;
    if (has_m_star()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_star());
    }

  }
  // repeated .proto_ff.E_EquipBreakBreakDesc m_break = 6;
  total_size += 1 * this->m_break_size();
  for (int i = 0; i < this->m_break_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->m_break(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_EquipBreak::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_EquipBreak* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_EquipBreak*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_EquipBreak::MergeFrom(const E_EquipBreak& from) {
  GOOGLE_CHECK_NE(&from, this);
  m_break_.MergeFrom(from.m_break_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_lv()) {
      set_m_lv(from.m_lv());
    }
    if (from.has_m_step()) {
      set_m_step(from.m_step());
    }
    if (from.has_m_positiontype()) {
      set_m_positiontype(from.m_positiontype());
    }
    if (from.has_m_basic()) {
      set_m_basic(from.m_basic());
    }
    if (from.has_m_star()) {
      set_m_star(from.m_star());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_EquipBreak::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_EquipBreak::CopyFrom(const E_EquipBreak& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_EquipBreak::IsInitialized() const {

  return true;
}

void E_EquipBreak::Swap(E_EquipBreak* other) {
  if (other != this) {
    std::swap(m_lv_, other->m_lv_);
    std::swap(m_step_, other->m_step_);
    std::swap(m_positiontype_, other->m_positiontype_);
    std::swap(m_basic_, other->m_basic_);
    std::swap(m_star_, other->m_star_);
    m_break_.Swap(&other->m_break_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_EquipBreak::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_EquipBreak_descriptor_;
  metadata.reflection = E_EquipBreak_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_EquipBreak::kEEquipBreakListFieldNumber;
#endif  // !_MSC_VER

Sheet_EquipBreak::Sheet_EquipBreak()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_EquipBreak::InitAsDefaultInstance() {
}

Sheet_EquipBreak::Sheet_EquipBreak(const Sheet_EquipBreak& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_EquipBreak::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_EquipBreak::~Sheet_EquipBreak() {
  SharedDtor();
}

void Sheet_EquipBreak::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_EquipBreak::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_EquipBreak::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_EquipBreak_descriptor_;
}

const Sheet_EquipBreak& Sheet_EquipBreak::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_equip_2eproto();
  return *default_instance_;
}

Sheet_EquipBreak* Sheet_EquipBreak::default_instance_ = NULL;

Sheet_EquipBreak* Sheet_EquipBreak::New() const {
  return new Sheet_EquipBreak;
}

void Sheet_EquipBreak::Clear() {
  e_equipbreak_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_EquipBreak::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.E_EquipBreak E_EquipBreak_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_E_EquipBreak_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_e_equipbreak_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_E_EquipBreak_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_EquipBreak::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.E_EquipBreak E_EquipBreak_List = 1;
  for (int i = 0; i < this->e_equipbreak_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->e_equipbreak_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_EquipBreak::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.E_EquipBreak E_EquipBreak_List = 1;
  for (int i = 0; i < this->e_equipbreak_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->e_equipbreak_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_EquipBreak::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.E_EquipBreak E_EquipBreak_List = 1;
  total_size += 1 * this->e_equipbreak_list_size();
  for (int i = 0; i < this->e_equipbreak_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->e_equipbreak_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_EquipBreak::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_EquipBreak* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_EquipBreak*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_EquipBreak::MergeFrom(const Sheet_EquipBreak& from) {
  GOOGLE_CHECK_NE(&from, this);
  e_equipbreak_list_.MergeFrom(from.e_equipbreak_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_EquipBreak::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_EquipBreak::CopyFrom(const Sheet_EquipBreak& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_EquipBreak::IsInitialized() const {

  return true;
}

void Sheet_EquipBreak::Swap(Sheet_EquipBreak* other) {
  if (other != this) {
    e_equipbreak_list_.Swap(&other->e_equipbreak_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_EquipBreak::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_EquipBreak_descriptor_;
  metadata.reflection = Sheet_EquipBreak_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto_ff

// @@protoc_insertion_point(global_scope)
