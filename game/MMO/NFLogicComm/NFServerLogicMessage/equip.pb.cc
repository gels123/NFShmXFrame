// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: equip.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "equip.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace proto_ff {

namespace {

const ::google::protobuf::Descriptor* E_EquipEquipAttributeDesc_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_EquipEquipAttributeDesc_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_EquipEquipGodattributeDesc_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_EquipEquipGodattributeDesc_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_EquipEquip_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_EquipEquip_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_EquipEquip_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_EquipEquip_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_EquipStrongTypeDesc_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_EquipStrongTypeDesc_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_EquipStrong_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_EquipStrong_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_EquipStrong_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_EquipStrong_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_EquipStrongexp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_EquipStrongexp_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_EquipStrongexp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_EquipStrongexp_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_EquipStrongtotalAttributeDesc_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_EquipStrongtotalAttributeDesc_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_EquipStrongtotal_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_EquipStrongtotal_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_EquipStrongtotal_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_EquipStrongtotal_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_EquipGem_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_EquipGem_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_EquipGem_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_EquipGem_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_EquipStoveattAttributeDesc_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_EquipStoveattAttributeDesc_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_EquipStoveatt_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_EquipStoveatt_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_EquipStoveatt_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_EquipStoveatt_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_EquipStoveexp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_EquipStoveexp_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_EquipStoveexp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_EquipStoveexp_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_EquipGrade_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_EquipGrade_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_EquipGrade_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_EquipGrade_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_equip_2eproto() {
  protobuf_AddDesc_equip_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "equip.proto");
  GOOGLE_CHECK(file != NULL);
  E_EquipEquipAttributeDesc_descriptor_ = file->message_type(0);
  static const int E_EquipEquipAttributeDesc_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipEquipAttributeDesc, m_valuemin_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipEquipAttributeDesc, m_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipEquipAttributeDesc, m_valuemax_),
  };
  E_EquipEquipAttributeDesc_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_EquipEquipAttributeDesc_descriptor_,
      E_EquipEquipAttributeDesc::default_instance_,
      E_EquipEquipAttributeDesc_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipEquipAttributeDesc, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipEquipAttributeDesc, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_EquipEquipAttributeDesc));
  E_EquipEquipGodattributeDesc_descriptor_ = file->message_type(1);
  static const int E_EquipEquipGodattributeDesc_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipEquipGodattributeDesc, m_valuemin_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipEquipGodattributeDesc, m_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipEquipGodattributeDesc, m_valuemax_),
  };
  E_EquipEquipGodattributeDesc_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_EquipEquipGodattributeDesc_descriptor_,
      E_EquipEquipGodattributeDesc::default_instance_,
      E_EquipEquipGodattributeDesc_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipEquipGodattributeDesc, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipEquipGodattributeDesc, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_EquipEquipGodattributeDesc));
  E_EquipEquip_descriptor_ = file->message_type(2);
  static const int E_EquipEquip_offsets_[33] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipEquip, m_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipEquip, m_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipEquip, m_wearquality_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipEquip, m_position_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipEquip, m_profession_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipEquip, m_professionlv_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipEquip, m_level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipEquip, m_quality_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipEquip, m_star_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipEquip, m_refineattributedown_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipEquip, m_refineattributeup_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipEquip, m_refineattribute_typelibrary_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipEquip, m_refineattribute_valuemin_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipEquip, m_refineattribute_valuemax_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipEquip, m_bluestarnum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipEquip, m_bluestar_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipEquip, m_bluestar_lv_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipEquip, m_bluestar_number_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipEquip, m_iscanbind_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipEquip, m_istradebind_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipEquip, m_sellprice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipEquip, m_icon_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipEquip, m_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipEquip, m_broadcast_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipEquip, m_meltingresult_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipEquip, m_specialattributedown_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipEquip, m_specialattributeup_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipEquip, m_specialattribute_typelibrary_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipEquip, m_specialattribute_valuemin_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipEquip, m_specialattribute_valuemax_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipEquip, m_skillid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipEquip, m_attribute_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipEquip, m_godattribute_),
  };
  E_EquipEquip_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_EquipEquip_descriptor_,
      E_EquipEquip::default_instance_,
      E_EquipEquip_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipEquip, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipEquip, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_EquipEquip));
  Sheet_EquipEquip_descriptor_ = file->message_type(3);
  static const int Sheet_EquipEquip_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_EquipEquip, e_equipequip_list_),
  };
  Sheet_EquipEquip_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_EquipEquip_descriptor_,
      Sheet_EquipEquip::default_instance_,
      Sheet_EquipEquip_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_EquipEquip, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_EquipEquip, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_EquipEquip));
  E_EquipStrongTypeDesc_descriptor_ = file->message_type(4);
  static const int E_EquipStrongTypeDesc_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipStrongTypeDesc, m_num_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipStrongTypeDesc, m_id_),
  };
  E_EquipStrongTypeDesc_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_EquipStrongTypeDesc_descriptor_,
      E_EquipStrongTypeDesc::default_instance_,
      E_EquipStrongTypeDesc_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipStrongTypeDesc, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipStrongTypeDesc, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_EquipStrongTypeDesc));
  E_EquipStrong_descriptor_ = file->message_type(5);
  static const int E_EquipStrong_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipStrong, m_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipStrong, m_position_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipStrong, m_wearquality_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipStrong, m_srtongup_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipStrong, m_type_),
  };
  E_EquipStrong_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_EquipStrong_descriptor_,
      E_EquipStrong::default_instance_,
      E_EquipStrong_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipStrong, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipStrong, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_EquipStrong));
  Sheet_EquipStrong_descriptor_ = file->message_type(6);
  static const int Sheet_EquipStrong_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_EquipStrong, e_equipstrong_list_),
  };
  Sheet_EquipStrong_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_EquipStrong_descriptor_,
      Sheet_EquipStrong::default_instance_,
      Sheet_EquipStrong_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_EquipStrong, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_EquipStrong, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_EquipStrong));
  E_EquipStrongexp_descriptor_ = file->message_type(7);
  static const int E_EquipStrongexp_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipStrongexp, m_lv_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipStrongexp, m_gold_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipStrongexp, m_costitem_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipStrongexp, m_positiontype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipStrongexp, m_costnum_),
  };
  E_EquipStrongexp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_EquipStrongexp_descriptor_,
      E_EquipStrongexp::default_instance_,
      E_EquipStrongexp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipStrongexp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipStrongexp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_EquipStrongexp));
  Sheet_EquipStrongexp_descriptor_ = file->message_type(8);
  static const int Sheet_EquipStrongexp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_EquipStrongexp, e_equipstrongexp_list_),
  };
  Sheet_EquipStrongexp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_EquipStrongexp_descriptor_,
      Sheet_EquipStrongexp::default_instance_,
      Sheet_EquipStrongexp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_EquipStrongexp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_EquipStrongexp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_EquipStrongexp));
  E_EquipStrongtotalAttributeDesc_descriptor_ = file->message_type(9);
  static const int E_EquipStrongtotalAttributeDesc_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipStrongtotalAttributeDesc, m_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipStrongtotalAttributeDesc, m_value_),
  };
  E_EquipStrongtotalAttributeDesc_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_EquipStrongtotalAttributeDesc_descriptor_,
      E_EquipStrongtotalAttributeDesc::default_instance_,
      E_EquipStrongtotalAttributeDesc_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipStrongtotalAttributeDesc, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipStrongtotalAttributeDesc, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_EquipStrongtotalAttributeDesc));
  E_EquipStrongtotal_descriptor_ = file->message_type(10);
  static const int E_EquipStrongtotal_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipStrongtotal, m_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipStrongtotal, m_idtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipStrongtotal, m_idnum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipStrongtotal, m_attribute_),
  };
  E_EquipStrongtotal_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_EquipStrongtotal_descriptor_,
      E_EquipStrongtotal::default_instance_,
      E_EquipStrongtotal_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipStrongtotal, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipStrongtotal, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_EquipStrongtotal));
  Sheet_EquipStrongtotal_descriptor_ = file->message_type(11);
  static const int Sheet_EquipStrongtotal_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_EquipStrongtotal, e_equipstrongtotal_list_),
  };
  Sheet_EquipStrongtotal_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_EquipStrongtotal_descriptor_,
      Sheet_EquipStrongtotal::default_instance_,
      Sheet_EquipStrongtotal_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_EquipStrongtotal, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_EquipStrongtotal, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_EquipStrongtotal));
  E_EquipGem_descriptor_ = file->message_type(12);
  static const int E_EquipGem_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipGem, m_position_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipGem, m_gemtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipGem, m_speciallygemtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipGem, m_payunlockitem_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipGem, m_payunlocknnm_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipGem, m_gemunlock_),
  };
  E_EquipGem_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_EquipGem_descriptor_,
      E_EquipGem::default_instance_,
      E_EquipGem_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipGem, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipGem, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_EquipGem));
  Sheet_EquipGem_descriptor_ = file->message_type(13);
  static const int Sheet_EquipGem_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_EquipGem, e_equipgem_list_),
  };
  Sheet_EquipGem_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_EquipGem_descriptor_,
      Sheet_EquipGem::default_instance_,
      Sheet_EquipGem_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_EquipGem, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_EquipGem, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_EquipGem));
  E_EquipStoveattAttributeDesc_descriptor_ = file->message_type(14);
  static const int E_EquipStoveattAttributeDesc_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipStoveattAttributeDesc, m_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipStoveattAttributeDesc, m_value_),
  };
  E_EquipStoveattAttributeDesc_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_EquipStoveattAttributeDesc_descriptor_,
      E_EquipStoveattAttributeDesc::default_instance_,
      E_EquipStoveattAttributeDesc_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipStoveattAttributeDesc, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipStoveattAttributeDesc, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_EquipStoveattAttributeDesc));
  E_EquipStoveatt_descriptor_ = file->message_type(15);
  static const int E_EquipStoveatt_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipStoveatt, m_lv_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipStoveatt, m_exp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipStoveatt, m_attribute_),
  };
  E_EquipStoveatt_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_EquipStoveatt_descriptor_,
      E_EquipStoveatt::default_instance_,
      E_EquipStoveatt_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipStoveatt, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipStoveatt, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_EquipStoveatt));
  Sheet_EquipStoveatt_descriptor_ = file->message_type(16);
  static const int Sheet_EquipStoveatt_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_EquipStoveatt, e_equipstoveatt_list_),
  };
  Sheet_EquipStoveatt_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_EquipStoveatt_descriptor_,
      Sheet_EquipStoveatt::default_instance_,
      Sheet_EquipStoveatt_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_EquipStoveatt, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_EquipStoveatt, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_EquipStoveatt));
  E_EquipStoveexp_descriptor_ = file->message_type(17);
  static const int E_EquipStoveexp_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipStoveexp, m_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipStoveexp, m_exp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipStoveexp, m_wearquality_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipStoveexp, m_quality_),
  };
  E_EquipStoveexp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_EquipStoveexp_descriptor_,
      E_EquipStoveexp::default_instance_,
      E_EquipStoveexp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipStoveexp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipStoveexp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_EquipStoveexp));
  Sheet_EquipStoveexp_descriptor_ = file->message_type(18);
  static const int Sheet_EquipStoveexp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_EquipStoveexp, e_equipstoveexp_list_),
  };
  Sheet_EquipStoveexp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_EquipStoveexp_descriptor_,
      Sheet_EquipStoveexp::default_instance_,
      Sheet_EquipStoveexp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_EquipStoveexp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_EquipStoveexp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_EquipStoveexp));
  E_EquipGrade_descriptor_ = file->message_type(19);
  static const int E_EquipGrade_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipGrade, m_id_),
  };
  E_EquipGrade_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_EquipGrade_descriptor_,
      E_EquipGrade::default_instance_,
      E_EquipGrade_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipGrade, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EquipGrade, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_EquipGrade));
  Sheet_EquipGrade_descriptor_ = file->message_type(20);
  static const int Sheet_EquipGrade_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_EquipGrade, e_equipgrade_list_),
  };
  Sheet_EquipGrade_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_EquipGrade_descriptor_,
      Sheet_EquipGrade::default_instance_,
      Sheet_EquipGrade_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_EquipGrade, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_EquipGrade, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_EquipGrade));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_equip_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_EquipEquipAttributeDesc_descriptor_, &E_EquipEquipAttributeDesc::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_EquipEquipGodattributeDesc_descriptor_, &E_EquipEquipGodattributeDesc::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_EquipEquip_descriptor_, &E_EquipEquip::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_EquipEquip_descriptor_, &Sheet_EquipEquip::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_EquipStrongTypeDesc_descriptor_, &E_EquipStrongTypeDesc::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_EquipStrong_descriptor_, &E_EquipStrong::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_EquipStrong_descriptor_, &Sheet_EquipStrong::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_EquipStrongexp_descriptor_, &E_EquipStrongexp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_EquipStrongexp_descriptor_, &Sheet_EquipStrongexp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_EquipStrongtotalAttributeDesc_descriptor_, &E_EquipStrongtotalAttributeDesc::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_EquipStrongtotal_descriptor_, &E_EquipStrongtotal::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_EquipStrongtotal_descriptor_, &Sheet_EquipStrongtotal::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_EquipGem_descriptor_, &E_EquipGem::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_EquipGem_descriptor_, &Sheet_EquipGem::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_EquipStoveattAttributeDesc_descriptor_, &E_EquipStoveattAttributeDesc::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_EquipStoveatt_descriptor_, &E_EquipStoveatt::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_EquipStoveatt_descriptor_, &Sheet_EquipStoveatt::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_EquipStoveexp_descriptor_, &E_EquipStoveexp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_EquipStoveexp_descriptor_, &Sheet_EquipStoveexp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_EquipGrade_descriptor_, &E_EquipGrade::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_EquipGrade_descriptor_, &Sheet_EquipGrade::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_equip_2eproto() {
  delete E_EquipEquipAttributeDesc::default_instance_;
  delete E_EquipEquipAttributeDesc_reflection_;
  delete E_EquipEquipGodattributeDesc::default_instance_;
  delete E_EquipEquipGodattributeDesc_reflection_;
  delete E_EquipEquip::default_instance_;
  delete E_EquipEquip_reflection_;
  delete Sheet_EquipEquip::default_instance_;
  delete Sheet_EquipEquip_reflection_;
  delete E_EquipStrongTypeDesc::default_instance_;
  delete E_EquipStrongTypeDesc_reflection_;
  delete E_EquipStrong::default_instance_;
  delete E_EquipStrong_reflection_;
  delete Sheet_EquipStrong::default_instance_;
  delete Sheet_EquipStrong_reflection_;
  delete E_EquipStrongexp::default_instance_;
  delete E_EquipStrongexp_reflection_;
  delete Sheet_EquipStrongexp::default_instance_;
  delete Sheet_EquipStrongexp_reflection_;
  delete E_EquipStrongtotalAttributeDesc::default_instance_;
  delete E_EquipStrongtotalAttributeDesc_reflection_;
  delete E_EquipStrongtotal::default_instance_;
  delete E_EquipStrongtotal_reflection_;
  delete Sheet_EquipStrongtotal::default_instance_;
  delete Sheet_EquipStrongtotal_reflection_;
  delete E_EquipGem::default_instance_;
  delete E_EquipGem_reflection_;
  delete Sheet_EquipGem::default_instance_;
  delete Sheet_EquipGem_reflection_;
  delete E_EquipStoveattAttributeDesc::default_instance_;
  delete E_EquipStoveattAttributeDesc_reflection_;
  delete E_EquipStoveatt::default_instance_;
  delete E_EquipStoveatt_reflection_;
  delete Sheet_EquipStoveatt::default_instance_;
  delete Sheet_EquipStoveatt_reflection_;
  delete E_EquipStoveexp::default_instance_;
  delete E_EquipStoveexp_reflection_;
  delete Sheet_EquipStoveexp::default_instance_;
  delete Sheet_EquipStoveexp_reflection_;
  delete E_EquipGrade::default_instance_;
  delete E_EquipGrade_reflection_;
  delete Sheet_EquipGrade::default_instance_;
  delete Sheet_EquipGrade_reflection_;
}

void protobuf_AddDesc_equip_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::yd_fieldoptions::protobuf_AddDesc_yd_5ffieldoptions_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\013equip.proto\022\010proto_ff\032\025yd_fieldoptions"
    ".proto\"}\n\031E_EquipEquipAttributeDesc\022$\n\nm"
    "_valuemin\030\001 \001(\005B\020\302\377\024\014\346\234\200\345\260\217\346\225\260\345\200\274\022\024\n\006m_t"
    "ype\030\002 \001(\005B\004\302\377\024\000\022$\n\nm_valuemax\030\003 \001(\005B\020\302\377\024"
    "\014\346\234\200\345\244\247\346\225\260\345\200\274\"\200\001\n\034E_EquipEquipGodattribu"
    "teDesc\022$\n\nm_valuemin\030\001 \001(\005B\020\302\377\024\014\346\234\200\345\260\217\346\225"
    "\260\345\200\274\022\024\n\006m_type\030\002 \001(\005B\004\302\377\024\000\022$\n\nm_valuemax"
    "\030\003 \001(\005B\020\302\377\024\014\346\234\200\345\244\247\346\225\260\345\200\274\"\327\r\n\014E_EquipEqui"
    "p\022\032\n\004m_id\030\001 \001(\003B\014\302\377\024\010\350\243\205\345\244\207ID\022$\n\006m_name\030"
    "\002 \001(\tB\024\302\377\024\014\350\243\205\345\244\207\345\220\215\347\247\260\220\301\024<\022\'\n\rm_wearqua"
    "lity\030\003 \001(\005B\020\302\377\024\014\350\243\205\345\244\207\345\223\201\351\230\266\022$\n\nm_positi"
    "on\030\004 \001(\005B\020\302\377\024\014\350\243\205\345\244\207\344\275\215\347\275\256\022*\n\014m_professi"
    "on\030\005 \001(\tB\024\302\377\024\014\350\201\214\344\270\232\351\231\220\345\210\266\220\301\024<\022(\n\016m_prof"
    "essionlv\030\006 \001(\005B\020\302\377\024\014\350\275\254\350\201\214\347\255\211\347\272\247\022\'\n\007m_le"
    "vel\030\007 \001(\005B\026\302\377\024\022\347\251\277\346\210\264\347\255\211\347\272\247\351\231\220\345\210\266\022#\n\tm_q"
    "uality\030\010 \001(\005B\020\302\377\024\014\350\243\205\345\244\207\345\223\201\350\264\250\022 \n\006m_star"
    "\030\t \001(\005B\020\302\377\024\014\350\243\205\345\244\207\346\230\237\347\272\247\022;\n\025m_refineattr"
    "ibutedown\030\n \001(\005B\034\302\377\024\030\346\230\237\347\272\247\345\261\236\346\200\247\346\225\260\351\207\217\344"
    "\270\213\351\231\220\0229\n\023m_refineattributeup\030\013 \001(\005B\034\302\377\024\030"
    "\346\230\237\347\272\247\345\261\236\346\200\247\346\225\260\351\207\217\344\270\212\351\231\220\022D\n\035m_refineattr"
    "ibute_typelibrary\030\014 \001(\tB\035\302\377\024\025\351\232\217\346\234\272\346\230\237\347\272"
    "\247\345\261\236\346\200\247\345\272\223\220\301\024<\022A\n\032m_refineattribute_valu"
    "emin\030\r \001(\tB\035\302\377\024\025\346\230\237\347\272\247\345\261\236\346\200\247\346\234\200\345\260\217\345\200\274\220\301\024"
    "<\022A\n\032m_refineattribute_valuemax\030\016 \001(\tB\035\302"
    "\377\024\025\346\230\237\347\272\247\345\261\236\346\200\247\346\234\200\345\244\247\345\200\274\220\301\024<\0223\n\rm_bluest"
    "arnum\030\017 \001(\005B\034\302\377\024\030\350\223\235\350\211\262\346\230\237\347\272\247\345\261\236\346\200\247\346\235\241\346\225"
    "\260\022<\n\017m_bluestar_type\030\020 \001(\tB#\302\377\024\033\350\223\235\350\211\262\346\230"
    "\237\347\272\247\345\261\236\346\200\247\347\261\273\345\236\213\345\272\223\220\301\024<\022:\n\rm_bluestar_lv"
    "\030\021 \001(\tB#\302\377\024\033\350\223\235\350\211\262\346\230\237\347\272\247\347\255\211\347\272\247\351\227\264\351\232\224\345\267\256\220"
    "\301\024<\022>\n\021m_bluestar_number\030\022 \001(\tB#\302\377\024\033\350\223\235\350"
    "\211\262\346\230\237\347\272\247\346\257\217\347\272\247\345\242\236\345\212\240\345\200\274\220\301\024<\022%\n\013m_iscanbi"
    "nd\030\023 \001(\005B\020\302\377\024\014\346\230\257\345\220\246\347\273\221\345\256\232\022-\n\rm_istradeb"
    "ind\030\024 \001(\005B\026\302\377\024\022\346\230\257\345\220\246\344\272\244\346\230\223\347\273\221\345\256\232\022%\n\013m_s"
    "ellprice\030\025 \001(\005B\020\302\377\024\014\345\207\272\345\224\256\344\273\267\346\240\274\022\'\n\006m_ic"
    "on\030\026 \001(\tB\027\302\377\024\017\350\243\205\345\244\207\345\233\276\346\240\207\345\220\215\220\301\024<\022 \n\006m_t"
    "ime\030\027 \001(\005B\020\302\377\024\014\351\231\220\346\227\266\350\243\205\345\244\207\022.\n\013m_broadca"
    "st\030\030 \001(\005B\031\302\377\024\025\346\230\257\345\220\246\346\222\255\346\224\276\350\267\221\351\251\254\347\201\257\022-\n\017m"
    "_meltingresult\030\031 \001(\tB\024\302\377\024\014\347\206\224\347\202\274\344\272\247\345\207\272\220\301"
    "\024<\022<\n\026m_specialattributedown\030\032 \001(\005B\034\302\377\024\030"
    "\347\211\271\346\256\212\345\261\236\346\200\247\346\225\260\351\207\217\344\270\213\351\231\220\022:\n\024m_specialatt"
    "ributeup\030\033 \001(\005B\034\302\377\024\030\347\211\271\346\256\212\345\261\236\346\200\247\346\225\260\351\207\217\344\270"
    "\212\351\231\220\022E\n\036m_specialattribute_typelibrary\030\034"
    " \001(\tB\035\302\377\024\025\347\211\271\346\256\212\346\230\237\347\272\247\345\261\236\346\200\247\345\272\223\220\301\024<\022B\n\033m"
    "_specialattribute_valuemin\030\035 \001(\tB\035\302\377\024\025\347\211"
    "\271\346\256\212\345\261\236\346\200\247\346\234\200\345\260\217\345\200\274\220\301\024<\022B\n\033m_specialattr"
    "ibute_valuemax\030\036 \001(\tB\035\302\377\024\025\347\211\271\346\256\212\345\261\236\346\200\247\346\234"
    "\200\345\244\247\345\200\274\220\301\024<\022\'\n\tm_skillid\030\037 \001(\tB\024\302\377\024\014\351\231\204\345"
    "\270\246\346\212\200\350\203\275\220\301\024<\022N\n\013m_attribute\030  \003(\0132#.prot"
    "o_ff.E_EquipEquipAttributeDescB\024\302\377\024\014\345\237\272\347"
    "\241\200\345\261\236\346\200\247\210\301\024\003\022T\n\016m_godattribute\030! \003(\0132&.p"
    "roto_ff.E_EquipEquipGodattributeDescB\024\302\377"
    "\024\014\344\273\231\345\260\212\345\261\236\346\200\247\210\301\024\002\"K\n\020Sheet_EquipEquip\0227"
    "\n\021E_EquipEquip_List\030\001 \003(\0132\026.proto_ff.E_E"
    "quipEquipB\004\210\301\024\024\"I\n\025E_EquipStrongTypeDesc"
    "\022\032\n\005m_num\030\001 \001(\tB\013\302\377\024\003\345\200\274\220\301\024<\022\024\n\004m_id\030\002 \001"
    "(\005B\006\302\377\024\002ID\"\341\001\n\rE_EquipStrong\022\032\n\004m_id\030\001 \001"
    "(\003B\014\302\377\024\010\351\203\250\344\275\215ID\022$\n\nm_position\030\002 \001(\005B\020\302\377"
    "\024\014\350\243\205\345\244\207\351\203\250\344\275\215\022\'\n\rm_wearquality\030\003 \001(\005B\020\302"
    "\377\024\014\350\243\205\345\244\207\345\223\201\351\230\266\022$\n\nm_srtongup\030\004 \001(\005B\020\302\377\024"
    "\014\345\274\272\345\214\226\344\270\212\351\231\220\022\?\n\006m_type\030\005 \003(\0132\037.proto_ff"
    ".E_EquipStrongTypeDescB\016\302\377\024\006\345\261\236\346\200\247\210\301\024\002\"O"
    "\n\021Sheet_EquipStrong\022:\n\022E_EquipStrong_Lis"
    "t\030\001 \003(\0132\027.proto_ff.E_EquipStrongB\005\210\301\024\220\003\""
    "\371\001\n\020E_EquipStrongexp\022\030\n\004m_lv\030\001 \001(\005B\n\302\377\024\006"
    "\347\255\211\347\272\247\022&\n\006m_gold\030\002 \001(\005B\026\302\377\024\022\345\274\272\345\214\226\346\266\210\350\200\227"
    "\351\207\221\345\270\201\0228\n\nm_costitem\030\003 \003(\005B$\302\377\024\034\351\203\250\344\275\215\347\261"
    "\273\345\236\2139999\346\266\210\350\200\227\351\201\223\345\205\267\210\301\024\002\0220\n\016m_positionty"
    "pe\030\004 \003(\tB\030\302\377\024\014\351\203\250\344\275\215\347\261\273\345\236\213\210\301\024\002\220\301\024<\0227\n\tm_"
    "costnum\030\005 \003(\005B$\302\377\024\034\351\203\250\344\275\215\347\261\273\345\236\2139999\351\201\223\345\205"
    "\267\346\225\260\351\207\217\210\301\024\002\"X\n\024Sheet_EquipStrongexp\022@\n\025E"
    "_EquipStrongexp_List\030\001 \003(\0132\032.proto_ff.E_"
    "EquipStrongexpB\005\210\301\024\240\006\"S\n\037E_EquipStrongto"
    "talAttributeDesc\022\026\n\006m_type\030\001 \001(\005B\006\302\377\024\002ID"
    "\022\030\n\007m_value\030\002 \001(\005B\007\302\377\024\003\345\200\274\"\320\001\n\022E_EquipSt"
    "rongtotal\022\035\n\004m_id\030\001 \001(\003B\017\302\377\024\013\346\200\273\347\255\211\347\272\247ID"
    "\022%\n\010m_idtype\030\002 \001(\005B\023\302\377\024\017\346\200\273\347\255\211\347\272\247\347\261\273\345\236\213\022"
    "\036\n\007m_idnum\030\003 \001(\005B\r\302\377\024\t\346\200\273\347\255\211\347\272\247\022T\n\013m_att"
    "ribute\030\004 \003(\0132).proto_ff.E_EquipStrongtot"
    "alAttributeDescB\024\302\377\024\014\345\237\272\347\241\200\345\261\236\346\200\247\210\301\024\004\"^\n"
    "\026Sheet_EquipStrongtotal\022D\n\027E_EquipStrong"
    "total_List\030\001 \003(\0132\034.proto_ff.E_EquipStron"
    "gtotalB\005\210\301\024\254\002\"\271\002\n\nE_EquipGem\022$\n\nm_positi"
    "on\030\001 \001(\005B\020\302\377\024\014\350\243\205\345\244\207\351\203\250\344\275\215\0223\n\tm_gemtype\030"
    "\002 \001(\tB \302\377\024\030\346\231\256\351\200\232\346\247\275\344\275\215\345\256\235\347\237\263\347\261\273\345\236\213\220\301\024<\022"
    "8\n\022m_speciallygemtype\030\003 \001(\005B\034\302\377\024\030\347\211\271\346\256\212\346"
    "\247\275\344\275\215\345\256\235\347\237\263\347\261\273\345\236\213\0222\n\017m_payunlockitem\030\004 \001"
    "(\005B\031\302\377\024\025\344\273\230\350\264\271\350\247\243\351\224\201\346\247\275\351\201\223\345\205\267\022.\n\016m_payun"
    "locknnm\030\005 \001(\005B\026\302\377\024\022\350\247\243\351\224\201\351\201\223\345\205\267\346\225\260\351\207\217\0222\n"
    "\013m_gemunlock\030\006 \003(\005B\035\302\377\024\025\350\243\205\345\244\207\346\247\275\350\247\243\351\224\201\345"
    "\223\201\351\230\266\210\301\024\005\"E\n\016Sheet_EquipGem\0223\n\017E_EquipGe"
    "m_List\030\001 \003(\0132\024.proto_ff.E_EquipGemB\004\210\301\024\024"
    "\"P\n\034E_EquipStoveattAttributeDesc\022\026\n\006m_ty"
    "pe\030\001 \001(\005B\006\302\377\024\002ID\022\030\n\007m_value\030\002 \001(\005B\007\302\377\024\003\345"
    "\200\274\"\237\001\n\017E_EquipStoveatt\022\030\n\004m_lv\030\001 \001(\005B\n\302\377"
    "\024\006\347\255\211\347\272\247\022\037\n\005m_exp\030\002 \001(\003B\020\302\377\024\014\346\200\273\347\273\217\351\252\214\345\200"
    "\274\022Q\n\013m_attribute\030\003 \003(\0132&.proto_ff.E_Equi"
    "pStoveattAttributeDescB\024\302\377\024\014\345\237\272\347\241\200\345\261\236\346\200\247"
    "\210\301\024\004\"U\n\023Sheet_EquipStoveatt\022>\n\024E_EquipSt"
    "oveatt_List\030\001 \003(\0132\031.proto_ff.E_EquipStov"
    "eattB\005\210\301\024\320\017\"\227\001\n\017E_EquipStoveexp\022\030\n\004m_id\030"
    "\001 \001(\005B\n\302\377\024\006\345\272\217\345\217\267\022\034\n\005m_exp\030\002 \001(\005B\r\302\377\024\t\347\273"
    "\217\351\252\214\345\200\274\022\'\n\rm_wearquality\030\003 \001(\005B\020\302\377\024\014\350\243\205\345"
    "\244\207\345\223\201\351\230\266\022#\n\tm_quality\030\004 \001(\005B\020\302\377\024\014\350\243\205\345\244\207\345"
    "\223\201\350\264\250\"U\n\023Sheet_EquipStoveexp\022>\n\024E_EquipS"
    "toveexp_List\030\001 \003(\0132\031.proto_ff.E_EquipSto"
    "veexpB\005\210\301\024\310\001\"(\n\014E_EquipGrade\022\030\n\004m_id\030\001 \001"
    "(\005B\n\302\377\024\006\345\272\217\345\217\267\"K\n\020Sheet_EquipGrade\0227\n\021E_"
    "EquipGrade_List\030\001 \003(\0132\026.proto_ff.E_Equip"
    "GradeB\004\210\301\024(", 4331);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "equip.proto", &protobuf_RegisterTypes);
  E_EquipEquipAttributeDesc::default_instance_ = new E_EquipEquipAttributeDesc();
  E_EquipEquipGodattributeDesc::default_instance_ = new E_EquipEquipGodattributeDesc();
  E_EquipEquip::default_instance_ = new E_EquipEquip();
  Sheet_EquipEquip::default_instance_ = new Sheet_EquipEquip();
  E_EquipStrongTypeDesc::default_instance_ = new E_EquipStrongTypeDesc();
  E_EquipStrong::default_instance_ = new E_EquipStrong();
  Sheet_EquipStrong::default_instance_ = new Sheet_EquipStrong();
  E_EquipStrongexp::default_instance_ = new E_EquipStrongexp();
  Sheet_EquipStrongexp::default_instance_ = new Sheet_EquipStrongexp();
  E_EquipStrongtotalAttributeDesc::default_instance_ = new E_EquipStrongtotalAttributeDesc();
  E_EquipStrongtotal::default_instance_ = new E_EquipStrongtotal();
  Sheet_EquipStrongtotal::default_instance_ = new Sheet_EquipStrongtotal();
  E_EquipGem::default_instance_ = new E_EquipGem();
  Sheet_EquipGem::default_instance_ = new Sheet_EquipGem();
  E_EquipStoveattAttributeDesc::default_instance_ = new E_EquipStoveattAttributeDesc();
  E_EquipStoveatt::default_instance_ = new E_EquipStoveatt();
  Sheet_EquipStoveatt::default_instance_ = new Sheet_EquipStoveatt();
  E_EquipStoveexp::default_instance_ = new E_EquipStoveexp();
  Sheet_EquipStoveexp::default_instance_ = new Sheet_EquipStoveexp();
  E_EquipGrade::default_instance_ = new E_EquipGrade();
  Sheet_EquipGrade::default_instance_ = new Sheet_EquipGrade();
  E_EquipEquipAttributeDesc::default_instance_->InitAsDefaultInstance();
  E_EquipEquipGodattributeDesc::default_instance_->InitAsDefaultInstance();
  E_EquipEquip::default_instance_->InitAsDefaultInstance();
  Sheet_EquipEquip::default_instance_->InitAsDefaultInstance();
  E_EquipStrongTypeDesc::default_instance_->InitAsDefaultInstance();
  E_EquipStrong::default_instance_->InitAsDefaultInstance();
  Sheet_EquipStrong::default_instance_->InitAsDefaultInstance();
  E_EquipStrongexp::default_instance_->InitAsDefaultInstance();
  Sheet_EquipStrongexp::default_instance_->InitAsDefaultInstance();
  E_EquipStrongtotalAttributeDesc::default_instance_->InitAsDefaultInstance();
  E_EquipStrongtotal::default_instance_->InitAsDefaultInstance();
  Sheet_EquipStrongtotal::default_instance_->InitAsDefaultInstance();
  E_EquipGem::default_instance_->InitAsDefaultInstance();
  Sheet_EquipGem::default_instance_->InitAsDefaultInstance();
  E_EquipStoveattAttributeDesc::default_instance_->InitAsDefaultInstance();
  E_EquipStoveatt::default_instance_->InitAsDefaultInstance();
  Sheet_EquipStoveatt::default_instance_->InitAsDefaultInstance();
  E_EquipStoveexp::default_instance_->InitAsDefaultInstance();
  Sheet_EquipStoveexp::default_instance_->InitAsDefaultInstance();
  E_EquipGrade::default_instance_->InitAsDefaultInstance();
  Sheet_EquipGrade::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_equip_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_equip_2eproto {
  StaticDescriptorInitializer_equip_2eproto() {
    protobuf_AddDesc_equip_2eproto();
  }
} static_descriptor_initializer_equip_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int E_EquipEquipAttributeDesc::kMValueminFieldNumber;
const int E_EquipEquipAttributeDesc::kMTypeFieldNumber;
const int E_EquipEquipAttributeDesc::kMValuemaxFieldNumber;
#endif  // !_MSC_VER

E_EquipEquipAttributeDesc::E_EquipEquipAttributeDesc()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_EquipEquipAttributeDesc::InitAsDefaultInstance() {
}

E_EquipEquipAttributeDesc::E_EquipEquipAttributeDesc(const E_EquipEquipAttributeDesc& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_EquipEquipAttributeDesc::SharedCtor() {
  _cached_size_ = 0;
  m_valuemin_ = 0;
  m_type_ = 0;
  m_valuemax_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_EquipEquipAttributeDesc::~E_EquipEquipAttributeDesc() {
  SharedDtor();
}

void E_EquipEquipAttributeDesc::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_EquipEquipAttributeDesc::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_EquipEquipAttributeDesc::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_EquipEquipAttributeDesc_descriptor_;
}

const E_EquipEquipAttributeDesc& E_EquipEquipAttributeDesc::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_equip_2eproto();
  return *default_instance_;
}

E_EquipEquipAttributeDesc* E_EquipEquipAttributeDesc::default_instance_ = NULL;

E_EquipEquipAttributeDesc* E_EquipEquipAttributeDesc::New() const {
  return new E_EquipEquipAttributeDesc;
}

void E_EquipEquipAttributeDesc::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_valuemin_ = 0;
    m_type_ = 0;
    m_valuemax_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_EquipEquipAttributeDesc::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_valuemin = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_valuemin_)));
          set_has_m_valuemin();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_type;
        break;
      }

      // optional int32 m_type = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_type_)));
          set_has_m_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_m_valuemax;
        break;
      }

      // optional int32 m_valuemax = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_valuemax:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_valuemax_)));
          set_has_m_valuemax();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_EquipEquipAttributeDesc::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_valuemin = 1;
  if (has_m_valuemin()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_valuemin(), output);
  }

  // optional int32 m_type = 2;
  if (has_m_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_type(), output);
  }

  // optional int32 m_valuemax = 3;
  if (has_m_valuemax()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->m_valuemax(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_EquipEquipAttributeDesc::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_valuemin = 1;
  if (has_m_valuemin()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_valuemin(), target);
  }

  // optional int32 m_type = 2;
  if (has_m_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_type(), target);
  }

  // optional int32 m_valuemax = 3;
  if (has_m_valuemax()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->m_valuemax(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_EquipEquipAttributeDesc::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_valuemin = 1;
    if (has_m_valuemin()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_valuemin());
    }

    // optional int32 m_type = 2;
    if (has_m_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_type());
    }

    // optional int32 m_valuemax = 3;
    if (has_m_valuemax()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_valuemax());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_EquipEquipAttributeDesc::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_EquipEquipAttributeDesc* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_EquipEquipAttributeDesc*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_EquipEquipAttributeDesc::MergeFrom(const E_EquipEquipAttributeDesc& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_valuemin()) {
      set_m_valuemin(from.m_valuemin());
    }
    if (from.has_m_type()) {
      set_m_type(from.m_type());
    }
    if (from.has_m_valuemax()) {
      set_m_valuemax(from.m_valuemax());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_EquipEquipAttributeDesc::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_EquipEquipAttributeDesc::CopyFrom(const E_EquipEquipAttributeDesc& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_EquipEquipAttributeDesc::IsInitialized() const {

  return true;
}

void E_EquipEquipAttributeDesc::Swap(E_EquipEquipAttributeDesc* other) {
  if (other != this) {
    std::swap(m_valuemin_, other->m_valuemin_);
    std::swap(m_type_, other->m_type_);
    std::swap(m_valuemax_, other->m_valuemax_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_EquipEquipAttributeDesc::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_EquipEquipAttributeDesc_descriptor_;
  metadata.reflection = E_EquipEquipAttributeDesc_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_EquipEquipGodattributeDesc::kMValueminFieldNumber;
const int E_EquipEquipGodattributeDesc::kMTypeFieldNumber;
const int E_EquipEquipGodattributeDesc::kMValuemaxFieldNumber;
#endif  // !_MSC_VER

E_EquipEquipGodattributeDesc::E_EquipEquipGodattributeDesc()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_EquipEquipGodattributeDesc::InitAsDefaultInstance() {
}

E_EquipEquipGodattributeDesc::E_EquipEquipGodattributeDesc(const E_EquipEquipGodattributeDesc& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_EquipEquipGodattributeDesc::SharedCtor() {
  _cached_size_ = 0;
  m_valuemin_ = 0;
  m_type_ = 0;
  m_valuemax_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_EquipEquipGodattributeDesc::~E_EquipEquipGodattributeDesc() {
  SharedDtor();
}

void E_EquipEquipGodattributeDesc::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_EquipEquipGodattributeDesc::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_EquipEquipGodattributeDesc::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_EquipEquipGodattributeDesc_descriptor_;
}

const E_EquipEquipGodattributeDesc& E_EquipEquipGodattributeDesc::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_equip_2eproto();
  return *default_instance_;
}

E_EquipEquipGodattributeDesc* E_EquipEquipGodattributeDesc::default_instance_ = NULL;

E_EquipEquipGodattributeDesc* E_EquipEquipGodattributeDesc::New() const {
  return new E_EquipEquipGodattributeDesc;
}

void E_EquipEquipGodattributeDesc::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_valuemin_ = 0;
    m_type_ = 0;
    m_valuemax_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_EquipEquipGodattributeDesc::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_valuemin = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_valuemin_)));
          set_has_m_valuemin();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_type;
        break;
      }

      // optional int32 m_type = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_type_)));
          set_has_m_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_m_valuemax;
        break;
      }

      // optional int32 m_valuemax = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_valuemax:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_valuemax_)));
          set_has_m_valuemax();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_EquipEquipGodattributeDesc::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_valuemin = 1;
  if (has_m_valuemin()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_valuemin(), output);
  }

  // optional int32 m_type = 2;
  if (has_m_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_type(), output);
  }

  // optional int32 m_valuemax = 3;
  if (has_m_valuemax()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->m_valuemax(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_EquipEquipGodattributeDesc::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_valuemin = 1;
  if (has_m_valuemin()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_valuemin(), target);
  }

  // optional int32 m_type = 2;
  if (has_m_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_type(), target);
  }

  // optional int32 m_valuemax = 3;
  if (has_m_valuemax()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->m_valuemax(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_EquipEquipGodattributeDesc::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_valuemin = 1;
    if (has_m_valuemin()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_valuemin());
    }

    // optional int32 m_type = 2;
    if (has_m_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_type());
    }

    // optional int32 m_valuemax = 3;
    if (has_m_valuemax()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_valuemax());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_EquipEquipGodattributeDesc::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_EquipEquipGodattributeDesc* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_EquipEquipGodattributeDesc*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_EquipEquipGodattributeDesc::MergeFrom(const E_EquipEquipGodattributeDesc& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_valuemin()) {
      set_m_valuemin(from.m_valuemin());
    }
    if (from.has_m_type()) {
      set_m_type(from.m_type());
    }
    if (from.has_m_valuemax()) {
      set_m_valuemax(from.m_valuemax());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_EquipEquipGodattributeDesc::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_EquipEquipGodattributeDesc::CopyFrom(const E_EquipEquipGodattributeDesc& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_EquipEquipGodattributeDesc::IsInitialized() const {

  return true;
}

void E_EquipEquipGodattributeDesc::Swap(E_EquipEquipGodattributeDesc* other) {
  if (other != this) {
    std::swap(m_valuemin_, other->m_valuemin_);
    std::swap(m_type_, other->m_type_);
    std::swap(m_valuemax_, other->m_valuemax_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_EquipEquipGodattributeDesc::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_EquipEquipGodattributeDesc_descriptor_;
  metadata.reflection = E_EquipEquipGodattributeDesc_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_EquipEquip::kMIdFieldNumber;
const int E_EquipEquip::kMNameFieldNumber;
const int E_EquipEquip::kMWearqualityFieldNumber;
const int E_EquipEquip::kMPositionFieldNumber;
const int E_EquipEquip::kMProfessionFieldNumber;
const int E_EquipEquip::kMProfessionlvFieldNumber;
const int E_EquipEquip::kMLevelFieldNumber;
const int E_EquipEquip::kMQualityFieldNumber;
const int E_EquipEquip::kMStarFieldNumber;
const int E_EquipEquip::kMRefineattributedownFieldNumber;
const int E_EquipEquip::kMRefineattributeupFieldNumber;
const int E_EquipEquip::kMRefineattributeTypelibraryFieldNumber;
const int E_EquipEquip::kMRefineattributeValueminFieldNumber;
const int E_EquipEquip::kMRefineattributeValuemaxFieldNumber;
const int E_EquipEquip::kMBluestarnumFieldNumber;
const int E_EquipEquip::kMBluestarTypeFieldNumber;
const int E_EquipEquip::kMBluestarLvFieldNumber;
const int E_EquipEquip::kMBluestarNumberFieldNumber;
const int E_EquipEquip::kMIscanbindFieldNumber;
const int E_EquipEquip::kMIstradebindFieldNumber;
const int E_EquipEquip::kMSellpriceFieldNumber;
const int E_EquipEquip::kMIconFieldNumber;
const int E_EquipEquip::kMTimeFieldNumber;
const int E_EquipEquip::kMBroadcastFieldNumber;
const int E_EquipEquip::kMMeltingresultFieldNumber;
const int E_EquipEquip::kMSpecialattributedownFieldNumber;
const int E_EquipEquip::kMSpecialattributeupFieldNumber;
const int E_EquipEquip::kMSpecialattributeTypelibraryFieldNumber;
const int E_EquipEquip::kMSpecialattributeValueminFieldNumber;
const int E_EquipEquip::kMSpecialattributeValuemaxFieldNumber;
const int E_EquipEquip::kMSkillidFieldNumber;
const int E_EquipEquip::kMAttributeFieldNumber;
const int E_EquipEquip::kMGodattributeFieldNumber;
#endif  // !_MSC_VER

E_EquipEquip::E_EquipEquip()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_EquipEquip::InitAsDefaultInstance() {
}

E_EquipEquip::E_EquipEquip(const E_EquipEquip& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_EquipEquip::SharedCtor() {
  _cached_size_ = 0;
  m_id_ = GOOGLE_LONGLONG(0);
  m_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  m_wearquality_ = 0;
  m_position_ = 0;
  m_profession_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  m_professionlv_ = 0;
  m_level_ = 0;
  m_quality_ = 0;
  m_star_ = 0;
  m_refineattributedown_ = 0;
  m_refineattributeup_ = 0;
  m_refineattribute_typelibrary_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  m_refineattribute_valuemin_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  m_refineattribute_valuemax_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  m_bluestarnum_ = 0;
  m_bluestar_type_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  m_bluestar_lv_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  m_bluestar_number_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  m_iscanbind_ = 0;
  m_istradebind_ = 0;
  m_sellprice_ = 0;
  m_icon_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  m_time_ = 0;
  m_broadcast_ = 0;
  m_meltingresult_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  m_specialattributedown_ = 0;
  m_specialattributeup_ = 0;
  m_specialattribute_typelibrary_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  m_specialattribute_valuemin_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  m_specialattribute_valuemax_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  m_skillid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_EquipEquip::~E_EquipEquip() {
  SharedDtor();
}

void E_EquipEquip::SharedDtor() {
  if (m_name_ != &::google::protobuf::internal::kEmptyString) {
    delete m_name_;
  }
  if (m_profession_ != &::google::protobuf::internal::kEmptyString) {
    delete m_profession_;
  }
  if (m_refineattribute_typelibrary_ != &::google::protobuf::internal::kEmptyString) {
    delete m_refineattribute_typelibrary_;
  }
  if (m_refineattribute_valuemin_ != &::google::protobuf::internal::kEmptyString) {
    delete m_refineattribute_valuemin_;
  }
  if (m_refineattribute_valuemax_ != &::google::protobuf::internal::kEmptyString) {
    delete m_refineattribute_valuemax_;
  }
  if (m_bluestar_type_ != &::google::protobuf::internal::kEmptyString) {
    delete m_bluestar_type_;
  }
  if (m_bluestar_lv_ != &::google::protobuf::internal::kEmptyString) {
    delete m_bluestar_lv_;
  }
  if (m_bluestar_number_ != &::google::protobuf::internal::kEmptyString) {
    delete m_bluestar_number_;
  }
  if (m_icon_ != &::google::protobuf::internal::kEmptyString) {
    delete m_icon_;
  }
  if (m_meltingresult_ != &::google::protobuf::internal::kEmptyString) {
    delete m_meltingresult_;
  }
  if (m_specialattribute_typelibrary_ != &::google::protobuf::internal::kEmptyString) {
    delete m_specialattribute_typelibrary_;
  }
  if (m_specialattribute_valuemin_ != &::google::protobuf::internal::kEmptyString) {
    delete m_specialattribute_valuemin_;
  }
  if (m_specialattribute_valuemax_ != &::google::protobuf::internal::kEmptyString) {
    delete m_specialattribute_valuemax_;
  }
  if (m_skillid_ != &::google::protobuf::internal::kEmptyString) {
    delete m_skillid_;
  }
  if (this != default_instance_) {
  }
}

void E_EquipEquip::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_EquipEquip::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_EquipEquip_descriptor_;
}

const E_EquipEquip& E_EquipEquip::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_equip_2eproto();
  return *default_instance_;
}

E_EquipEquip* E_EquipEquip::default_instance_ = NULL;

E_EquipEquip* E_EquipEquip::New() const {
  return new E_EquipEquip;
}

void E_EquipEquip::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_id_ = GOOGLE_LONGLONG(0);
    if (has_m_name()) {
      if (m_name_ != &::google::protobuf::internal::kEmptyString) {
        m_name_->clear();
      }
    }
    m_wearquality_ = 0;
    m_position_ = 0;
    if (has_m_profession()) {
      if (m_profession_ != &::google::protobuf::internal::kEmptyString) {
        m_profession_->clear();
      }
    }
    m_professionlv_ = 0;
    m_level_ = 0;
    m_quality_ = 0;
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    m_star_ = 0;
    m_refineattributedown_ = 0;
    m_refineattributeup_ = 0;
    if (has_m_refineattribute_typelibrary()) {
      if (m_refineattribute_typelibrary_ != &::google::protobuf::internal::kEmptyString) {
        m_refineattribute_typelibrary_->clear();
      }
    }
    if (has_m_refineattribute_valuemin()) {
      if (m_refineattribute_valuemin_ != &::google::protobuf::internal::kEmptyString) {
        m_refineattribute_valuemin_->clear();
      }
    }
    if (has_m_refineattribute_valuemax()) {
      if (m_refineattribute_valuemax_ != &::google::protobuf::internal::kEmptyString) {
        m_refineattribute_valuemax_->clear();
      }
    }
    m_bluestarnum_ = 0;
    if (has_m_bluestar_type()) {
      if (m_bluestar_type_ != &::google::protobuf::internal::kEmptyString) {
        m_bluestar_type_->clear();
      }
    }
  }
  if (_has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    if (has_m_bluestar_lv()) {
      if (m_bluestar_lv_ != &::google::protobuf::internal::kEmptyString) {
        m_bluestar_lv_->clear();
      }
    }
    if (has_m_bluestar_number()) {
      if (m_bluestar_number_ != &::google::protobuf::internal::kEmptyString) {
        m_bluestar_number_->clear();
      }
    }
    m_iscanbind_ = 0;
    m_istradebind_ = 0;
    m_sellprice_ = 0;
    if (has_m_icon()) {
      if (m_icon_ != &::google::protobuf::internal::kEmptyString) {
        m_icon_->clear();
      }
    }
    m_time_ = 0;
    m_broadcast_ = 0;
  }
  if (_has_bits_[24 / 32] & (0xffu << (24 % 32))) {
    if (has_m_meltingresult()) {
      if (m_meltingresult_ != &::google::protobuf::internal::kEmptyString) {
        m_meltingresult_->clear();
      }
    }
    m_specialattributedown_ = 0;
    m_specialattributeup_ = 0;
    if (has_m_specialattribute_typelibrary()) {
      if (m_specialattribute_typelibrary_ != &::google::protobuf::internal::kEmptyString) {
        m_specialattribute_typelibrary_->clear();
      }
    }
    if (has_m_specialattribute_valuemin()) {
      if (m_specialattribute_valuemin_ != &::google::protobuf::internal::kEmptyString) {
        m_specialattribute_valuemin_->clear();
      }
    }
    if (has_m_specialattribute_valuemax()) {
      if (m_specialattribute_valuemax_ != &::google::protobuf::internal::kEmptyString) {
        m_specialattribute_valuemax_->clear();
      }
    }
    if (has_m_skillid()) {
      if (m_skillid_ != &::google::protobuf::internal::kEmptyString) {
        m_skillid_->clear();
      }
    }
  }
  m_attribute_.Clear();
  m_godattribute_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_EquipEquip::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 m_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &m_id_)));
          set_has_m_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_m_name;
        break;
      }

      // optional string m_name = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_m_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->m_name().data(), this->m_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_m_wearquality;
        break;
      }

      // optional int32 m_wearquality = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_wearquality:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_wearquality_)));
          set_has_m_wearquality();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_m_position;
        break;
      }

      // optional int32 m_position = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_position:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_position_)));
          set_has_m_position();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_m_profession;
        break;
      }

      // optional string m_profession = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_profession:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_m_profession()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->m_profession().data(), this->m_profession().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_m_professionlv;
        break;
      }

      // optional int32 m_professionlv = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_professionlv:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_professionlv_)));
          set_has_m_professionlv();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_m_level;
        break;
      }

      // optional int32 m_level = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_level:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_level_)));
          set_has_m_level();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(64)) goto parse_m_quality;
        break;
      }

      // optional int32 m_quality = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_quality:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_quality_)));
          set_has_m_quality();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(72)) goto parse_m_star;
        break;
      }

      // optional int32 m_star = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_star:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_star_)));
          set_has_m_star();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(80)) goto parse_m_refineattributedown;
        break;
      }

      // optional int32 m_refineattributedown = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_refineattributedown:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_refineattributedown_)));
          set_has_m_refineattributedown();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(88)) goto parse_m_refineattributeup;
        break;
      }

      // optional int32 m_refineattributeup = 11;
      case 11: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_refineattributeup:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_refineattributeup_)));
          set_has_m_refineattributeup();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(98)) goto parse_m_refineattribute_typelibrary;
        break;
      }

      // optional string m_refineattribute_typelibrary = 12;
      case 12: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_refineattribute_typelibrary:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_m_refineattribute_typelibrary()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->m_refineattribute_typelibrary().data(), this->m_refineattribute_typelibrary().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(106)) goto parse_m_refineattribute_valuemin;
        break;
      }

      // optional string m_refineattribute_valuemin = 13;
      case 13: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_refineattribute_valuemin:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_m_refineattribute_valuemin()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->m_refineattribute_valuemin().data(), this->m_refineattribute_valuemin().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(114)) goto parse_m_refineattribute_valuemax;
        break;
      }

      // optional string m_refineattribute_valuemax = 14;
      case 14: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_refineattribute_valuemax:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_m_refineattribute_valuemax()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->m_refineattribute_valuemax().data(), this->m_refineattribute_valuemax().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(120)) goto parse_m_bluestarnum;
        break;
      }

      // optional int32 m_bluestarnum = 15;
      case 15: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_bluestarnum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_bluestarnum_)));
          set_has_m_bluestarnum();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(130)) goto parse_m_bluestar_type;
        break;
      }

      // optional string m_bluestar_type = 16;
      case 16: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_bluestar_type:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_m_bluestar_type()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->m_bluestar_type().data(), this->m_bluestar_type().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(138)) goto parse_m_bluestar_lv;
        break;
      }

      // optional string m_bluestar_lv = 17;
      case 17: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_bluestar_lv:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_m_bluestar_lv()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->m_bluestar_lv().data(), this->m_bluestar_lv().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(146)) goto parse_m_bluestar_number;
        break;
      }

      // optional string m_bluestar_number = 18;
      case 18: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_bluestar_number:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_m_bluestar_number()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->m_bluestar_number().data(), this->m_bluestar_number().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(152)) goto parse_m_iscanbind;
        break;
      }

      // optional int32 m_iscanbind = 19;
      case 19: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_iscanbind:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_iscanbind_)));
          set_has_m_iscanbind();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(160)) goto parse_m_istradebind;
        break;
      }

      // optional int32 m_istradebind = 20;
      case 20: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_istradebind:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_istradebind_)));
          set_has_m_istradebind();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(168)) goto parse_m_sellprice;
        break;
      }

      // optional int32 m_sellprice = 21;
      case 21: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_sellprice:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_sellprice_)));
          set_has_m_sellprice();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(178)) goto parse_m_icon;
        break;
      }

      // optional string m_icon = 22;
      case 22: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_icon:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_m_icon()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->m_icon().data(), this->m_icon().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(184)) goto parse_m_time;
        break;
      }

      // optional int32 m_time = 23;
      case 23: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_time_)));
          set_has_m_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(192)) goto parse_m_broadcast;
        break;
      }

      // optional int32 m_broadcast = 24;
      case 24: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_broadcast:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_broadcast_)));
          set_has_m_broadcast();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(202)) goto parse_m_meltingresult;
        break;
      }

      // optional string m_meltingresult = 25;
      case 25: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_meltingresult:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_m_meltingresult()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->m_meltingresult().data(), this->m_meltingresult().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(208)) goto parse_m_specialattributedown;
        break;
      }

      // optional int32 m_specialattributedown = 26;
      case 26: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_specialattributedown:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_specialattributedown_)));
          set_has_m_specialattributedown();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(216)) goto parse_m_specialattributeup;
        break;
      }

      // optional int32 m_specialattributeup = 27;
      case 27: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_specialattributeup:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_specialattributeup_)));
          set_has_m_specialattributeup();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(226)) goto parse_m_specialattribute_typelibrary;
        break;
      }

      // optional string m_specialattribute_typelibrary = 28;
      case 28: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_specialattribute_typelibrary:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_m_specialattribute_typelibrary()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->m_specialattribute_typelibrary().data(), this->m_specialattribute_typelibrary().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(234)) goto parse_m_specialattribute_valuemin;
        break;
      }

      // optional string m_specialattribute_valuemin = 29;
      case 29: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_specialattribute_valuemin:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_m_specialattribute_valuemin()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->m_specialattribute_valuemin().data(), this->m_specialattribute_valuemin().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(242)) goto parse_m_specialattribute_valuemax;
        break;
      }

      // optional string m_specialattribute_valuemax = 30;
      case 30: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_specialattribute_valuemax:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_m_specialattribute_valuemax()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->m_specialattribute_valuemax().data(), this->m_specialattribute_valuemax().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(250)) goto parse_m_skillid;
        break;
      }

      // optional string m_skillid = 31;
      case 31: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_skillid:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_m_skillid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->m_skillid().data(), this->m_skillid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(258)) goto parse_m_attribute;
        break;
      }

      // repeated .proto_ff.E_EquipEquipAttributeDesc m_attribute = 32;
      case 32: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_attribute:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_m_attribute()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(258)) goto parse_m_attribute;
        if (input->ExpectTag(266)) goto parse_m_godattribute;
        break;
      }

      // repeated .proto_ff.E_EquipEquipGodattributeDesc m_godattribute = 33;
      case 33: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_godattribute:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_m_godattribute()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(266)) goto parse_m_godattribute;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_EquipEquip::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 m_id = 1;
  if (has_m_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->m_id(), output);
  }

  // optional string m_name = 2;
  if (has_m_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_name().data(), this->m_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->m_name(), output);
  }

  // optional int32 m_wearquality = 3;
  if (has_m_wearquality()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->m_wearquality(), output);
  }

  // optional int32 m_position = 4;
  if (has_m_position()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->m_position(), output);
  }

  // optional string m_profession = 5;
  if (has_m_profession()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_profession().data(), this->m_profession().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->m_profession(), output);
  }

  // optional int32 m_professionlv = 6;
  if (has_m_professionlv()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->m_professionlv(), output);
  }

  // optional int32 m_level = 7;
  if (has_m_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->m_level(), output);
  }

  // optional int32 m_quality = 8;
  if (has_m_quality()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->m_quality(), output);
  }

  // optional int32 m_star = 9;
  if (has_m_star()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->m_star(), output);
  }

  // optional int32 m_refineattributedown = 10;
  if (has_m_refineattributedown()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->m_refineattributedown(), output);
  }

  // optional int32 m_refineattributeup = 11;
  if (has_m_refineattributeup()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->m_refineattributeup(), output);
  }

  // optional string m_refineattribute_typelibrary = 12;
  if (has_m_refineattribute_typelibrary()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_refineattribute_typelibrary().data(), this->m_refineattribute_typelibrary().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      12, this->m_refineattribute_typelibrary(), output);
  }

  // optional string m_refineattribute_valuemin = 13;
  if (has_m_refineattribute_valuemin()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_refineattribute_valuemin().data(), this->m_refineattribute_valuemin().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      13, this->m_refineattribute_valuemin(), output);
  }

  // optional string m_refineattribute_valuemax = 14;
  if (has_m_refineattribute_valuemax()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_refineattribute_valuemax().data(), this->m_refineattribute_valuemax().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      14, this->m_refineattribute_valuemax(), output);
  }

  // optional int32 m_bluestarnum = 15;
  if (has_m_bluestarnum()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(15, this->m_bluestarnum(), output);
  }

  // optional string m_bluestar_type = 16;
  if (has_m_bluestar_type()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_bluestar_type().data(), this->m_bluestar_type().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      16, this->m_bluestar_type(), output);
  }

  // optional string m_bluestar_lv = 17;
  if (has_m_bluestar_lv()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_bluestar_lv().data(), this->m_bluestar_lv().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      17, this->m_bluestar_lv(), output);
  }

  // optional string m_bluestar_number = 18;
  if (has_m_bluestar_number()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_bluestar_number().data(), this->m_bluestar_number().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      18, this->m_bluestar_number(), output);
  }

  // optional int32 m_iscanbind = 19;
  if (has_m_iscanbind()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(19, this->m_iscanbind(), output);
  }

  // optional int32 m_istradebind = 20;
  if (has_m_istradebind()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(20, this->m_istradebind(), output);
  }

  // optional int32 m_sellprice = 21;
  if (has_m_sellprice()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(21, this->m_sellprice(), output);
  }

  // optional string m_icon = 22;
  if (has_m_icon()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_icon().data(), this->m_icon().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      22, this->m_icon(), output);
  }

  // optional int32 m_time = 23;
  if (has_m_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(23, this->m_time(), output);
  }

  // optional int32 m_broadcast = 24;
  if (has_m_broadcast()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(24, this->m_broadcast(), output);
  }

  // optional string m_meltingresult = 25;
  if (has_m_meltingresult()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_meltingresult().data(), this->m_meltingresult().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      25, this->m_meltingresult(), output);
  }

  // optional int32 m_specialattributedown = 26;
  if (has_m_specialattributedown()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(26, this->m_specialattributedown(), output);
  }

  // optional int32 m_specialattributeup = 27;
  if (has_m_specialattributeup()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(27, this->m_specialattributeup(), output);
  }

  // optional string m_specialattribute_typelibrary = 28;
  if (has_m_specialattribute_typelibrary()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_specialattribute_typelibrary().data(), this->m_specialattribute_typelibrary().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      28, this->m_specialattribute_typelibrary(), output);
  }

  // optional string m_specialattribute_valuemin = 29;
  if (has_m_specialattribute_valuemin()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_specialattribute_valuemin().data(), this->m_specialattribute_valuemin().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      29, this->m_specialattribute_valuemin(), output);
  }

  // optional string m_specialattribute_valuemax = 30;
  if (has_m_specialattribute_valuemax()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_specialattribute_valuemax().data(), this->m_specialattribute_valuemax().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      30, this->m_specialattribute_valuemax(), output);
  }

  // optional string m_skillid = 31;
  if (has_m_skillid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_skillid().data(), this->m_skillid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      31, this->m_skillid(), output);
  }

  // repeated .proto_ff.E_EquipEquipAttributeDesc m_attribute = 32;
  for (int i = 0; i < this->m_attribute_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      32, this->m_attribute(i), output);
  }

  // repeated .proto_ff.E_EquipEquipGodattributeDesc m_godattribute = 33;
  for (int i = 0; i < this->m_godattribute_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      33, this->m_godattribute(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_EquipEquip::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 m_id = 1;
  if (has_m_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->m_id(), target);
  }

  // optional string m_name = 2;
  if (has_m_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_name().data(), this->m_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->m_name(), target);
  }

  // optional int32 m_wearquality = 3;
  if (has_m_wearquality()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->m_wearquality(), target);
  }

  // optional int32 m_position = 4;
  if (has_m_position()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->m_position(), target);
  }

  // optional string m_profession = 5;
  if (has_m_profession()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_profession().data(), this->m_profession().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->m_profession(), target);
  }

  // optional int32 m_professionlv = 6;
  if (has_m_professionlv()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->m_professionlv(), target);
  }

  // optional int32 m_level = 7;
  if (has_m_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->m_level(), target);
  }

  // optional int32 m_quality = 8;
  if (has_m_quality()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->m_quality(), target);
  }

  // optional int32 m_star = 9;
  if (has_m_star()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->m_star(), target);
  }

  // optional int32 m_refineattributedown = 10;
  if (has_m_refineattributedown()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->m_refineattributedown(), target);
  }

  // optional int32 m_refineattributeup = 11;
  if (has_m_refineattributeup()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->m_refineattributeup(), target);
  }

  // optional string m_refineattribute_typelibrary = 12;
  if (has_m_refineattribute_typelibrary()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_refineattribute_typelibrary().data(), this->m_refineattribute_typelibrary().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->m_refineattribute_typelibrary(), target);
  }

  // optional string m_refineattribute_valuemin = 13;
  if (has_m_refineattribute_valuemin()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_refineattribute_valuemin().data(), this->m_refineattribute_valuemin().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        13, this->m_refineattribute_valuemin(), target);
  }

  // optional string m_refineattribute_valuemax = 14;
  if (has_m_refineattribute_valuemax()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_refineattribute_valuemax().data(), this->m_refineattribute_valuemax().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        14, this->m_refineattribute_valuemax(), target);
  }

  // optional int32 m_bluestarnum = 15;
  if (has_m_bluestarnum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(15, this->m_bluestarnum(), target);
  }

  // optional string m_bluestar_type = 16;
  if (has_m_bluestar_type()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_bluestar_type().data(), this->m_bluestar_type().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        16, this->m_bluestar_type(), target);
  }

  // optional string m_bluestar_lv = 17;
  if (has_m_bluestar_lv()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_bluestar_lv().data(), this->m_bluestar_lv().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        17, this->m_bluestar_lv(), target);
  }

  // optional string m_bluestar_number = 18;
  if (has_m_bluestar_number()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_bluestar_number().data(), this->m_bluestar_number().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        18, this->m_bluestar_number(), target);
  }

  // optional int32 m_iscanbind = 19;
  if (has_m_iscanbind()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(19, this->m_iscanbind(), target);
  }

  // optional int32 m_istradebind = 20;
  if (has_m_istradebind()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(20, this->m_istradebind(), target);
  }

  // optional int32 m_sellprice = 21;
  if (has_m_sellprice()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(21, this->m_sellprice(), target);
  }

  // optional string m_icon = 22;
  if (has_m_icon()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_icon().data(), this->m_icon().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        22, this->m_icon(), target);
  }

  // optional int32 m_time = 23;
  if (has_m_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(23, this->m_time(), target);
  }

  // optional int32 m_broadcast = 24;
  if (has_m_broadcast()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(24, this->m_broadcast(), target);
  }

  // optional string m_meltingresult = 25;
  if (has_m_meltingresult()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_meltingresult().data(), this->m_meltingresult().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        25, this->m_meltingresult(), target);
  }

  // optional int32 m_specialattributedown = 26;
  if (has_m_specialattributedown()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(26, this->m_specialattributedown(), target);
  }

  // optional int32 m_specialattributeup = 27;
  if (has_m_specialattributeup()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(27, this->m_specialattributeup(), target);
  }

  // optional string m_specialattribute_typelibrary = 28;
  if (has_m_specialattribute_typelibrary()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_specialattribute_typelibrary().data(), this->m_specialattribute_typelibrary().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        28, this->m_specialattribute_typelibrary(), target);
  }

  // optional string m_specialattribute_valuemin = 29;
  if (has_m_specialattribute_valuemin()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_specialattribute_valuemin().data(), this->m_specialattribute_valuemin().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        29, this->m_specialattribute_valuemin(), target);
  }

  // optional string m_specialattribute_valuemax = 30;
  if (has_m_specialattribute_valuemax()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_specialattribute_valuemax().data(), this->m_specialattribute_valuemax().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        30, this->m_specialattribute_valuemax(), target);
  }

  // optional string m_skillid = 31;
  if (has_m_skillid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_skillid().data(), this->m_skillid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        31, this->m_skillid(), target);
  }

  // repeated .proto_ff.E_EquipEquipAttributeDesc m_attribute = 32;
  for (int i = 0; i < this->m_attribute_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        32, this->m_attribute(i), target);
  }

  // repeated .proto_ff.E_EquipEquipGodattributeDesc m_godattribute = 33;
  for (int i = 0; i < this->m_godattribute_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        33, this->m_godattribute(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_EquipEquip::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 m_id = 1;
    if (has_m_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->m_id());
    }

    // optional string m_name = 2;
    if (has_m_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->m_name());
    }

    // optional int32 m_wearquality = 3;
    if (has_m_wearquality()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_wearquality());
    }

    // optional int32 m_position = 4;
    if (has_m_position()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_position());
    }

    // optional string m_profession = 5;
    if (has_m_profession()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->m_profession());
    }

    // optional int32 m_professionlv = 6;
    if (has_m_professionlv()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_professionlv());
    }

    // optional int32 m_level = 7;
    if (has_m_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_level());
    }

    // optional int32 m_quality = 8;
    if (has_m_quality()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_quality());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional int32 m_star = 9;
    if (has_m_star()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_star());
    }

    // optional int32 m_refineattributedown = 10;
    if (has_m_refineattributedown()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_refineattributedown());
    }

    // optional int32 m_refineattributeup = 11;
    if (has_m_refineattributeup()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_refineattributeup());
    }

    // optional string m_refineattribute_typelibrary = 12;
    if (has_m_refineattribute_typelibrary()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->m_refineattribute_typelibrary());
    }

    // optional string m_refineattribute_valuemin = 13;
    if (has_m_refineattribute_valuemin()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->m_refineattribute_valuemin());
    }

    // optional string m_refineattribute_valuemax = 14;
    if (has_m_refineattribute_valuemax()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->m_refineattribute_valuemax());
    }

    // optional int32 m_bluestarnum = 15;
    if (has_m_bluestarnum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_bluestarnum());
    }

    // optional string m_bluestar_type = 16;
    if (has_m_bluestar_type()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->m_bluestar_type());
    }

  }
  if (_has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    // optional string m_bluestar_lv = 17;
    if (has_m_bluestar_lv()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->m_bluestar_lv());
    }

    // optional string m_bluestar_number = 18;
    if (has_m_bluestar_number()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->m_bluestar_number());
    }

    // optional int32 m_iscanbind = 19;
    if (has_m_iscanbind()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_iscanbind());
    }

    // optional int32 m_istradebind = 20;
    if (has_m_istradebind()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_istradebind());
    }

    // optional int32 m_sellprice = 21;
    if (has_m_sellprice()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_sellprice());
    }

    // optional string m_icon = 22;
    if (has_m_icon()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->m_icon());
    }

    // optional int32 m_time = 23;
    if (has_m_time()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_time());
    }

    // optional int32 m_broadcast = 24;
    if (has_m_broadcast()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_broadcast());
    }

  }
  if (_has_bits_[24 / 32] & (0xffu << (24 % 32))) {
    // optional string m_meltingresult = 25;
    if (has_m_meltingresult()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->m_meltingresult());
    }

    // optional int32 m_specialattributedown = 26;
    if (has_m_specialattributedown()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_specialattributedown());
    }

    // optional int32 m_specialattributeup = 27;
    if (has_m_specialattributeup()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_specialattributeup());
    }

    // optional string m_specialattribute_typelibrary = 28;
    if (has_m_specialattribute_typelibrary()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->m_specialattribute_typelibrary());
    }

    // optional string m_specialattribute_valuemin = 29;
    if (has_m_specialattribute_valuemin()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->m_specialattribute_valuemin());
    }

    // optional string m_specialattribute_valuemax = 30;
    if (has_m_specialattribute_valuemax()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->m_specialattribute_valuemax());
    }

    // optional string m_skillid = 31;
    if (has_m_skillid()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->m_skillid());
    }

  }
  // repeated .proto_ff.E_EquipEquipAttributeDesc m_attribute = 32;
  total_size += 2 * this->m_attribute_size();
  for (int i = 0; i < this->m_attribute_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->m_attribute(i));
  }

  // repeated .proto_ff.E_EquipEquipGodattributeDesc m_godattribute = 33;
  total_size += 2 * this->m_godattribute_size();
  for (int i = 0; i < this->m_godattribute_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->m_godattribute(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_EquipEquip::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_EquipEquip* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_EquipEquip*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_EquipEquip::MergeFrom(const E_EquipEquip& from) {
  GOOGLE_CHECK_NE(&from, this);
  m_attribute_.MergeFrom(from.m_attribute_);
  m_godattribute_.MergeFrom(from.m_godattribute_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_id()) {
      set_m_id(from.m_id());
    }
    if (from.has_m_name()) {
      set_m_name(from.m_name());
    }
    if (from.has_m_wearquality()) {
      set_m_wearquality(from.m_wearquality());
    }
    if (from.has_m_position()) {
      set_m_position(from.m_position());
    }
    if (from.has_m_profession()) {
      set_m_profession(from.m_profession());
    }
    if (from.has_m_professionlv()) {
      set_m_professionlv(from.m_professionlv());
    }
    if (from.has_m_level()) {
      set_m_level(from.m_level());
    }
    if (from.has_m_quality()) {
      set_m_quality(from.m_quality());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_m_star()) {
      set_m_star(from.m_star());
    }
    if (from.has_m_refineattributedown()) {
      set_m_refineattributedown(from.m_refineattributedown());
    }
    if (from.has_m_refineattributeup()) {
      set_m_refineattributeup(from.m_refineattributeup());
    }
    if (from.has_m_refineattribute_typelibrary()) {
      set_m_refineattribute_typelibrary(from.m_refineattribute_typelibrary());
    }
    if (from.has_m_refineattribute_valuemin()) {
      set_m_refineattribute_valuemin(from.m_refineattribute_valuemin());
    }
    if (from.has_m_refineattribute_valuemax()) {
      set_m_refineattribute_valuemax(from.m_refineattribute_valuemax());
    }
    if (from.has_m_bluestarnum()) {
      set_m_bluestarnum(from.m_bluestarnum());
    }
    if (from.has_m_bluestar_type()) {
      set_m_bluestar_type(from.m_bluestar_type());
    }
  }
  if (from._has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    if (from.has_m_bluestar_lv()) {
      set_m_bluestar_lv(from.m_bluestar_lv());
    }
    if (from.has_m_bluestar_number()) {
      set_m_bluestar_number(from.m_bluestar_number());
    }
    if (from.has_m_iscanbind()) {
      set_m_iscanbind(from.m_iscanbind());
    }
    if (from.has_m_istradebind()) {
      set_m_istradebind(from.m_istradebind());
    }
    if (from.has_m_sellprice()) {
      set_m_sellprice(from.m_sellprice());
    }
    if (from.has_m_icon()) {
      set_m_icon(from.m_icon());
    }
    if (from.has_m_time()) {
      set_m_time(from.m_time());
    }
    if (from.has_m_broadcast()) {
      set_m_broadcast(from.m_broadcast());
    }
  }
  if (from._has_bits_[24 / 32] & (0xffu << (24 % 32))) {
    if (from.has_m_meltingresult()) {
      set_m_meltingresult(from.m_meltingresult());
    }
    if (from.has_m_specialattributedown()) {
      set_m_specialattributedown(from.m_specialattributedown());
    }
    if (from.has_m_specialattributeup()) {
      set_m_specialattributeup(from.m_specialattributeup());
    }
    if (from.has_m_specialattribute_typelibrary()) {
      set_m_specialattribute_typelibrary(from.m_specialattribute_typelibrary());
    }
    if (from.has_m_specialattribute_valuemin()) {
      set_m_specialattribute_valuemin(from.m_specialattribute_valuemin());
    }
    if (from.has_m_specialattribute_valuemax()) {
      set_m_specialattribute_valuemax(from.m_specialattribute_valuemax());
    }
    if (from.has_m_skillid()) {
      set_m_skillid(from.m_skillid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_EquipEquip::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_EquipEquip::CopyFrom(const E_EquipEquip& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_EquipEquip::IsInitialized() const {

  return true;
}

void E_EquipEquip::Swap(E_EquipEquip* other) {
  if (other != this) {
    std::swap(m_id_, other->m_id_);
    std::swap(m_name_, other->m_name_);
    std::swap(m_wearquality_, other->m_wearquality_);
    std::swap(m_position_, other->m_position_);
    std::swap(m_profession_, other->m_profession_);
    std::swap(m_professionlv_, other->m_professionlv_);
    std::swap(m_level_, other->m_level_);
    std::swap(m_quality_, other->m_quality_);
    std::swap(m_star_, other->m_star_);
    std::swap(m_refineattributedown_, other->m_refineattributedown_);
    std::swap(m_refineattributeup_, other->m_refineattributeup_);
    std::swap(m_refineattribute_typelibrary_, other->m_refineattribute_typelibrary_);
    std::swap(m_refineattribute_valuemin_, other->m_refineattribute_valuemin_);
    std::swap(m_refineattribute_valuemax_, other->m_refineattribute_valuemax_);
    std::swap(m_bluestarnum_, other->m_bluestarnum_);
    std::swap(m_bluestar_type_, other->m_bluestar_type_);
    std::swap(m_bluestar_lv_, other->m_bluestar_lv_);
    std::swap(m_bluestar_number_, other->m_bluestar_number_);
    std::swap(m_iscanbind_, other->m_iscanbind_);
    std::swap(m_istradebind_, other->m_istradebind_);
    std::swap(m_sellprice_, other->m_sellprice_);
    std::swap(m_icon_, other->m_icon_);
    std::swap(m_time_, other->m_time_);
    std::swap(m_broadcast_, other->m_broadcast_);
    std::swap(m_meltingresult_, other->m_meltingresult_);
    std::swap(m_specialattributedown_, other->m_specialattributedown_);
    std::swap(m_specialattributeup_, other->m_specialattributeup_);
    std::swap(m_specialattribute_typelibrary_, other->m_specialattribute_typelibrary_);
    std::swap(m_specialattribute_valuemin_, other->m_specialattribute_valuemin_);
    std::swap(m_specialattribute_valuemax_, other->m_specialattribute_valuemax_);
    std::swap(m_skillid_, other->m_skillid_);
    m_attribute_.Swap(&other->m_attribute_);
    m_godattribute_.Swap(&other->m_godattribute_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    std::swap(_has_bits_[1], other->_has_bits_[1]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_EquipEquip::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_EquipEquip_descriptor_;
  metadata.reflection = E_EquipEquip_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_EquipEquip::kEEquipEquipListFieldNumber;
#endif  // !_MSC_VER

Sheet_EquipEquip::Sheet_EquipEquip()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_EquipEquip::InitAsDefaultInstance() {
}

Sheet_EquipEquip::Sheet_EquipEquip(const Sheet_EquipEquip& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_EquipEquip::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_EquipEquip::~Sheet_EquipEquip() {
  SharedDtor();
}

void Sheet_EquipEquip::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_EquipEquip::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_EquipEquip::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_EquipEquip_descriptor_;
}

const Sheet_EquipEquip& Sheet_EquipEquip::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_equip_2eproto();
  return *default_instance_;
}

Sheet_EquipEquip* Sheet_EquipEquip::default_instance_ = NULL;

Sheet_EquipEquip* Sheet_EquipEquip::New() const {
  return new Sheet_EquipEquip;
}

void Sheet_EquipEquip::Clear() {
  e_equipequip_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_EquipEquip::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.E_EquipEquip E_EquipEquip_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_E_EquipEquip_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_e_equipequip_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_E_EquipEquip_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_EquipEquip::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.E_EquipEquip E_EquipEquip_List = 1;
  for (int i = 0; i < this->e_equipequip_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->e_equipequip_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_EquipEquip::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.E_EquipEquip E_EquipEquip_List = 1;
  for (int i = 0; i < this->e_equipequip_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->e_equipequip_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_EquipEquip::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.E_EquipEquip E_EquipEquip_List = 1;
  total_size += 1 * this->e_equipequip_list_size();
  for (int i = 0; i < this->e_equipequip_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->e_equipequip_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_EquipEquip::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_EquipEquip* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_EquipEquip*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_EquipEquip::MergeFrom(const Sheet_EquipEquip& from) {
  GOOGLE_CHECK_NE(&from, this);
  e_equipequip_list_.MergeFrom(from.e_equipequip_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_EquipEquip::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_EquipEquip::CopyFrom(const Sheet_EquipEquip& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_EquipEquip::IsInitialized() const {

  return true;
}

void Sheet_EquipEquip::Swap(Sheet_EquipEquip* other) {
  if (other != this) {
    e_equipequip_list_.Swap(&other->e_equipequip_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_EquipEquip::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_EquipEquip_descriptor_;
  metadata.reflection = Sheet_EquipEquip_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_EquipStrongTypeDesc::kMNumFieldNumber;
const int E_EquipStrongTypeDesc::kMIdFieldNumber;
#endif  // !_MSC_VER

E_EquipStrongTypeDesc::E_EquipStrongTypeDesc()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_EquipStrongTypeDesc::InitAsDefaultInstance() {
}

E_EquipStrongTypeDesc::E_EquipStrongTypeDesc(const E_EquipStrongTypeDesc& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_EquipStrongTypeDesc::SharedCtor() {
  _cached_size_ = 0;
  m_num_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  m_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_EquipStrongTypeDesc::~E_EquipStrongTypeDesc() {
  SharedDtor();
}

void E_EquipStrongTypeDesc::SharedDtor() {
  if (m_num_ != &::google::protobuf::internal::kEmptyString) {
    delete m_num_;
  }
  if (this != default_instance_) {
  }
}

void E_EquipStrongTypeDesc::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_EquipStrongTypeDesc::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_EquipStrongTypeDesc_descriptor_;
}

const E_EquipStrongTypeDesc& E_EquipStrongTypeDesc::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_equip_2eproto();
  return *default_instance_;
}

E_EquipStrongTypeDesc* E_EquipStrongTypeDesc::default_instance_ = NULL;

E_EquipStrongTypeDesc* E_EquipStrongTypeDesc::New() const {
  return new E_EquipStrongTypeDesc;
}

void E_EquipStrongTypeDesc::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_m_num()) {
      if (m_num_ != &::google::protobuf::internal::kEmptyString) {
        m_num_->clear();
      }
    }
    m_id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_EquipStrongTypeDesc::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string m_num = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_m_num()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->m_num().data(), this->m_num().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_id;
        break;
      }

      // optional int32 m_id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_id_)));
          set_has_m_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_EquipStrongTypeDesc::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional string m_num = 1;
  if (has_m_num()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_num().data(), this->m_num().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->m_num(), output);
  }

  // optional int32 m_id = 2;
  if (has_m_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_EquipStrongTypeDesc::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional string m_num = 1;
  if (has_m_num()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_num().data(), this->m_num().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->m_num(), target);
  }

  // optional int32 m_id = 2;
  if (has_m_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_EquipStrongTypeDesc::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string m_num = 1;
    if (has_m_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->m_num());
    }

    // optional int32 m_id = 2;
    if (has_m_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_id());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_EquipStrongTypeDesc::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_EquipStrongTypeDesc* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_EquipStrongTypeDesc*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_EquipStrongTypeDesc::MergeFrom(const E_EquipStrongTypeDesc& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_num()) {
      set_m_num(from.m_num());
    }
    if (from.has_m_id()) {
      set_m_id(from.m_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_EquipStrongTypeDesc::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_EquipStrongTypeDesc::CopyFrom(const E_EquipStrongTypeDesc& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_EquipStrongTypeDesc::IsInitialized() const {

  return true;
}

void E_EquipStrongTypeDesc::Swap(E_EquipStrongTypeDesc* other) {
  if (other != this) {
    std::swap(m_num_, other->m_num_);
    std::swap(m_id_, other->m_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_EquipStrongTypeDesc::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_EquipStrongTypeDesc_descriptor_;
  metadata.reflection = E_EquipStrongTypeDesc_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_EquipStrong::kMIdFieldNumber;
const int E_EquipStrong::kMPositionFieldNumber;
const int E_EquipStrong::kMWearqualityFieldNumber;
const int E_EquipStrong::kMSrtongupFieldNumber;
const int E_EquipStrong::kMTypeFieldNumber;
#endif  // !_MSC_VER

E_EquipStrong::E_EquipStrong()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_EquipStrong::InitAsDefaultInstance() {
}

E_EquipStrong::E_EquipStrong(const E_EquipStrong& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_EquipStrong::SharedCtor() {
  _cached_size_ = 0;
  m_id_ = GOOGLE_LONGLONG(0);
  m_position_ = 0;
  m_wearquality_ = 0;
  m_srtongup_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_EquipStrong::~E_EquipStrong() {
  SharedDtor();
}

void E_EquipStrong::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_EquipStrong::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_EquipStrong::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_EquipStrong_descriptor_;
}

const E_EquipStrong& E_EquipStrong::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_equip_2eproto();
  return *default_instance_;
}

E_EquipStrong* E_EquipStrong::default_instance_ = NULL;

E_EquipStrong* E_EquipStrong::New() const {
  return new E_EquipStrong;
}

void E_EquipStrong::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_id_ = GOOGLE_LONGLONG(0);
    m_position_ = 0;
    m_wearquality_ = 0;
    m_srtongup_ = 0;
  }
  m_type_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_EquipStrong::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 m_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &m_id_)));
          set_has_m_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_position;
        break;
      }

      // optional int32 m_position = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_position:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_position_)));
          set_has_m_position();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_m_wearquality;
        break;
      }

      // optional int32 m_wearquality = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_wearquality:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_wearquality_)));
          set_has_m_wearquality();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_m_srtongup;
        break;
      }

      // optional int32 m_srtongup = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_srtongup:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_srtongup_)));
          set_has_m_srtongup();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_m_type;
        break;
      }

      // repeated .proto_ff.E_EquipStrongTypeDesc m_type = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_type:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_m_type()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_m_type;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_EquipStrong::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 m_id = 1;
  if (has_m_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->m_id(), output);
  }

  // optional int32 m_position = 2;
  if (has_m_position()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_position(), output);
  }

  // optional int32 m_wearquality = 3;
  if (has_m_wearquality()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->m_wearquality(), output);
  }

  // optional int32 m_srtongup = 4;
  if (has_m_srtongup()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->m_srtongup(), output);
  }

  // repeated .proto_ff.E_EquipStrongTypeDesc m_type = 5;
  for (int i = 0; i < this->m_type_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->m_type(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_EquipStrong::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 m_id = 1;
  if (has_m_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->m_id(), target);
  }

  // optional int32 m_position = 2;
  if (has_m_position()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_position(), target);
  }

  // optional int32 m_wearquality = 3;
  if (has_m_wearquality()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->m_wearquality(), target);
  }

  // optional int32 m_srtongup = 4;
  if (has_m_srtongup()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->m_srtongup(), target);
  }

  // repeated .proto_ff.E_EquipStrongTypeDesc m_type = 5;
  for (int i = 0; i < this->m_type_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->m_type(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_EquipStrong::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 m_id = 1;
    if (has_m_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->m_id());
    }

    // optional int32 m_position = 2;
    if (has_m_position()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_position());
    }

    // optional int32 m_wearquality = 3;
    if (has_m_wearquality()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_wearquality());
    }

    // optional int32 m_srtongup = 4;
    if (has_m_srtongup()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_srtongup());
    }

  }
  // repeated .proto_ff.E_EquipStrongTypeDesc m_type = 5;
  total_size += 1 * this->m_type_size();
  for (int i = 0; i < this->m_type_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->m_type(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_EquipStrong::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_EquipStrong* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_EquipStrong*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_EquipStrong::MergeFrom(const E_EquipStrong& from) {
  GOOGLE_CHECK_NE(&from, this);
  m_type_.MergeFrom(from.m_type_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_id()) {
      set_m_id(from.m_id());
    }
    if (from.has_m_position()) {
      set_m_position(from.m_position());
    }
    if (from.has_m_wearquality()) {
      set_m_wearquality(from.m_wearquality());
    }
    if (from.has_m_srtongup()) {
      set_m_srtongup(from.m_srtongup());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_EquipStrong::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_EquipStrong::CopyFrom(const E_EquipStrong& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_EquipStrong::IsInitialized() const {

  return true;
}

void E_EquipStrong::Swap(E_EquipStrong* other) {
  if (other != this) {
    std::swap(m_id_, other->m_id_);
    std::swap(m_position_, other->m_position_);
    std::swap(m_wearquality_, other->m_wearquality_);
    std::swap(m_srtongup_, other->m_srtongup_);
    m_type_.Swap(&other->m_type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_EquipStrong::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_EquipStrong_descriptor_;
  metadata.reflection = E_EquipStrong_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_EquipStrong::kEEquipStrongListFieldNumber;
#endif  // !_MSC_VER

Sheet_EquipStrong::Sheet_EquipStrong()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_EquipStrong::InitAsDefaultInstance() {
}

Sheet_EquipStrong::Sheet_EquipStrong(const Sheet_EquipStrong& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_EquipStrong::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_EquipStrong::~Sheet_EquipStrong() {
  SharedDtor();
}

void Sheet_EquipStrong::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_EquipStrong::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_EquipStrong::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_EquipStrong_descriptor_;
}

const Sheet_EquipStrong& Sheet_EquipStrong::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_equip_2eproto();
  return *default_instance_;
}

Sheet_EquipStrong* Sheet_EquipStrong::default_instance_ = NULL;

Sheet_EquipStrong* Sheet_EquipStrong::New() const {
  return new Sheet_EquipStrong;
}

void Sheet_EquipStrong::Clear() {
  e_equipstrong_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_EquipStrong::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.E_EquipStrong E_EquipStrong_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_E_EquipStrong_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_e_equipstrong_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_E_EquipStrong_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_EquipStrong::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.E_EquipStrong E_EquipStrong_List = 1;
  for (int i = 0; i < this->e_equipstrong_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->e_equipstrong_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_EquipStrong::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.E_EquipStrong E_EquipStrong_List = 1;
  for (int i = 0; i < this->e_equipstrong_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->e_equipstrong_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_EquipStrong::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.E_EquipStrong E_EquipStrong_List = 1;
  total_size += 1 * this->e_equipstrong_list_size();
  for (int i = 0; i < this->e_equipstrong_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->e_equipstrong_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_EquipStrong::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_EquipStrong* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_EquipStrong*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_EquipStrong::MergeFrom(const Sheet_EquipStrong& from) {
  GOOGLE_CHECK_NE(&from, this);
  e_equipstrong_list_.MergeFrom(from.e_equipstrong_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_EquipStrong::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_EquipStrong::CopyFrom(const Sheet_EquipStrong& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_EquipStrong::IsInitialized() const {

  return true;
}

void Sheet_EquipStrong::Swap(Sheet_EquipStrong* other) {
  if (other != this) {
    e_equipstrong_list_.Swap(&other->e_equipstrong_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_EquipStrong::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_EquipStrong_descriptor_;
  metadata.reflection = Sheet_EquipStrong_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_EquipStrongexp::kMLvFieldNumber;
const int E_EquipStrongexp::kMGoldFieldNumber;
const int E_EquipStrongexp::kMCostitemFieldNumber;
const int E_EquipStrongexp::kMPositiontypeFieldNumber;
const int E_EquipStrongexp::kMCostnumFieldNumber;
#endif  // !_MSC_VER

E_EquipStrongexp::E_EquipStrongexp()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_EquipStrongexp::InitAsDefaultInstance() {
}

E_EquipStrongexp::E_EquipStrongexp(const E_EquipStrongexp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_EquipStrongexp::SharedCtor() {
  _cached_size_ = 0;
  m_lv_ = 0;
  m_gold_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_EquipStrongexp::~E_EquipStrongexp() {
  SharedDtor();
}

void E_EquipStrongexp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_EquipStrongexp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_EquipStrongexp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_EquipStrongexp_descriptor_;
}

const E_EquipStrongexp& E_EquipStrongexp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_equip_2eproto();
  return *default_instance_;
}

E_EquipStrongexp* E_EquipStrongexp::default_instance_ = NULL;

E_EquipStrongexp* E_EquipStrongexp::New() const {
  return new E_EquipStrongexp;
}

void E_EquipStrongexp::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_lv_ = 0;
    m_gold_ = 0;
  }
  m_costitem_.Clear();
  m_positiontype_.Clear();
  m_costnum_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_EquipStrongexp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_lv = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_lv_)));
          set_has_m_lv();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_gold;
        break;
      }

      // optional int32 m_gold = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_gold:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_gold_)));
          set_has_m_gold();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_m_costitem;
        break;
      }

      // repeated int32 m_costitem = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_costitem:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 24, input, this->mutable_m_costitem())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_m_costitem())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_m_costitem;
        if (input->ExpectTag(34)) goto parse_m_positiontype;
        break;
      }

      // repeated string m_positiontype = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_positiontype:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_m_positiontype()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->m_positiontype(this->m_positiontype_size() - 1).data(),
            this->m_positiontype(this->m_positiontype_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_m_positiontype;
        if (input->ExpectTag(40)) goto parse_m_costnum;
        break;
      }

      // repeated int32 m_costnum = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_costnum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 40, input, this->mutable_m_costnum())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_m_costnum())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_m_costnum;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_EquipStrongexp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_lv = 1;
  if (has_m_lv()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_lv(), output);
  }

  // optional int32 m_gold = 2;
  if (has_m_gold()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_gold(), output);
  }

  // repeated int32 m_costitem = 3;
  for (int i = 0; i < this->m_costitem_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      3, this->m_costitem(i), output);
  }

  // repeated string m_positiontype = 4;
  for (int i = 0; i < this->m_positiontype_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8String(
    this->m_positiontype(i).data(), this->m_positiontype(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->m_positiontype(i), output);
  }

  // repeated int32 m_costnum = 5;
  for (int i = 0; i < this->m_costnum_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      5, this->m_costnum(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_EquipStrongexp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_lv = 1;
  if (has_m_lv()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_lv(), target);
  }

  // optional int32 m_gold = 2;
  if (has_m_gold()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_gold(), target);
  }

  // repeated int32 m_costitem = 3;
  for (int i = 0; i < this->m_costitem_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(3, this->m_costitem(i), target);
  }

  // repeated string m_positiontype = 4;
  for (int i = 0; i < this->m_positiontype_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_positiontype(i).data(), this->m_positiontype(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(4, this->m_positiontype(i), target);
  }

  // repeated int32 m_costnum = 5;
  for (int i = 0; i < this->m_costnum_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(5, this->m_costnum(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_EquipStrongexp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_lv = 1;
    if (has_m_lv()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_lv());
    }

    // optional int32 m_gold = 2;
    if (has_m_gold()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_gold());
    }

  }
  // repeated int32 m_costitem = 3;
  {
    int data_size = 0;
    for (int i = 0; i < this->m_costitem_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->m_costitem(i));
    }
    total_size += 1 * this->m_costitem_size() + data_size;
  }

  // repeated string m_positiontype = 4;
  total_size += 1 * this->m_positiontype_size();
  for (int i = 0; i < this->m_positiontype_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->m_positiontype(i));
  }

  // repeated int32 m_costnum = 5;
  {
    int data_size = 0;
    for (int i = 0; i < this->m_costnum_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->m_costnum(i));
    }
    total_size += 1 * this->m_costnum_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_EquipStrongexp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_EquipStrongexp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_EquipStrongexp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_EquipStrongexp::MergeFrom(const E_EquipStrongexp& from) {
  GOOGLE_CHECK_NE(&from, this);
  m_costitem_.MergeFrom(from.m_costitem_);
  m_positiontype_.MergeFrom(from.m_positiontype_);
  m_costnum_.MergeFrom(from.m_costnum_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_lv()) {
      set_m_lv(from.m_lv());
    }
    if (from.has_m_gold()) {
      set_m_gold(from.m_gold());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_EquipStrongexp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_EquipStrongexp::CopyFrom(const E_EquipStrongexp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_EquipStrongexp::IsInitialized() const {

  return true;
}

void E_EquipStrongexp::Swap(E_EquipStrongexp* other) {
  if (other != this) {
    std::swap(m_lv_, other->m_lv_);
    std::swap(m_gold_, other->m_gold_);
    m_costitem_.Swap(&other->m_costitem_);
    m_positiontype_.Swap(&other->m_positiontype_);
    m_costnum_.Swap(&other->m_costnum_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_EquipStrongexp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_EquipStrongexp_descriptor_;
  metadata.reflection = E_EquipStrongexp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_EquipStrongexp::kEEquipStrongexpListFieldNumber;
#endif  // !_MSC_VER

Sheet_EquipStrongexp::Sheet_EquipStrongexp()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_EquipStrongexp::InitAsDefaultInstance() {
}

Sheet_EquipStrongexp::Sheet_EquipStrongexp(const Sheet_EquipStrongexp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_EquipStrongexp::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_EquipStrongexp::~Sheet_EquipStrongexp() {
  SharedDtor();
}

void Sheet_EquipStrongexp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_EquipStrongexp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_EquipStrongexp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_EquipStrongexp_descriptor_;
}

const Sheet_EquipStrongexp& Sheet_EquipStrongexp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_equip_2eproto();
  return *default_instance_;
}

Sheet_EquipStrongexp* Sheet_EquipStrongexp::default_instance_ = NULL;

Sheet_EquipStrongexp* Sheet_EquipStrongexp::New() const {
  return new Sheet_EquipStrongexp;
}

void Sheet_EquipStrongexp::Clear() {
  e_equipstrongexp_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_EquipStrongexp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.E_EquipStrongexp E_EquipStrongexp_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_E_EquipStrongexp_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_e_equipstrongexp_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_E_EquipStrongexp_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_EquipStrongexp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.E_EquipStrongexp E_EquipStrongexp_List = 1;
  for (int i = 0; i < this->e_equipstrongexp_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->e_equipstrongexp_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_EquipStrongexp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.E_EquipStrongexp E_EquipStrongexp_List = 1;
  for (int i = 0; i < this->e_equipstrongexp_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->e_equipstrongexp_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_EquipStrongexp::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.E_EquipStrongexp E_EquipStrongexp_List = 1;
  total_size += 1 * this->e_equipstrongexp_list_size();
  for (int i = 0; i < this->e_equipstrongexp_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->e_equipstrongexp_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_EquipStrongexp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_EquipStrongexp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_EquipStrongexp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_EquipStrongexp::MergeFrom(const Sheet_EquipStrongexp& from) {
  GOOGLE_CHECK_NE(&from, this);
  e_equipstrongexp_list_.MergeFrom(from.e_equipstrongexp_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_EquipStrongexp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_EquipStrongexp::CopyFrom(const Sheet_EquipStrongexp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_EquipStrongexp::IsInitialized() const {

  return true;
}

void Sheet_EquipStrongexp::Swap(Sheet_EquipStrongexp* other) {
  if (other != this) {
    e_equipstrongexp_list_.Swap(&other->e_equipstrongexp_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_EquipStrongexp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_EquipStrongexp_descriptor_;
  metadata.reflection = Sheet_EquipStrongexp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_EquipStrongtotalAttributeDesc::kMTypeFieldNumber;
const int E_EquipStrongtotalAttributeDesc::kMValueFieldNumber;
#endif  // !_MSC_VER

E_EquipStrongtotalAttributeDesc::E_EquipStrongtotalAttributeDesc()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_EquipStrongtotalAttributeDesc::InitAsDefaultInstance() {
}

E_EquipStrongtotalAttributeDesc::E_EquipStrongtotalAttributeDesc(const E_EquipStrongtotalAttributeDesc& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_EquipStrongtotalAttributeDesc::SharedCtor() {
  _cached_size_ = 0;
  m_type_ = 0;
  m_value_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_EquipStrongtotalAttributeDesc::~E_EquipStrongtotalAttributeDesc() {
  SharedDtor();
}

void E_EquipStrongtotalAttributeDesc::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_EquipStrongtotalAttributeDesc::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_EquipStrongtotalAttributeDesc::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_EquipStrongtotalAttributeDesc_descriptor_;
}

const E_EquipStrongtotalAttributeDesc& E_EquipStrongtotalAttributeDesc::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_equip_2eproto();
  return *default_instance_;
}

E_EquipStrongtotalAttributeDesc* E_EquipStrongtotalAttributeDesc::default_instance_ = NULL;

E_EquipStrongtotalAttributeDesc* E_EquipStrongtotalAttributeDesc::New() const {
  return new E_EquipStrongtotalAttributeDesc;
}

void E_EquipStrongtotalAttributeDesc::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_type_ = 0;
    m_value_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_EquipStrongtotalAttributeDesc::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_type_)));
          set_has_m_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_value;
        break;
      }

      // optional int32 m_value = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_value:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_value_)));
          set_has_m_value();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_EquipStrongtotalAttributeDesc::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_type = 1;
  if (has_m_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_type(), output);
  }

  // optional int32 m_value = 2;
  if (has_m_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_value(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_EquipStrongtotalAttributeDesc::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_type = 1;
  if (has_m_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_type(), target);
  }

  // optional int32 m_value = 2;
  if (has_m_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_value(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_EquipStrongtotalAttributeDesc::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_type = 1;
    if (has_m_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_type());
    }

    // optional int32 m_value = 2;
    if (has_m_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_value());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_EquipStrongtotalAttributeDesc::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_EquipStrongtotalAttributeDesc* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_EquipStrongtotalAttributeDesc*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_EquipStrongtotalAttributeDesc::MergeFrom(const E_EquipStrongtotalAttributeDesc& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_type()) {
      set_m_type(from.m_type());
    }
    if (from.has_m_value()) {
      set_m_value(from.m_value());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_EquipStrongtotalAttributeDesc::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_EquipStrongtotalAttributeDesc::CopyFrom(const E_EquipStrongtotalAttributeDesc& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_EquipStrongtotalAttributeDesc::IsInitialized() const {

  return true;
}

void E_EquipStrongtotalAttributeDesc::Swap(E_EquipStrongtotalAttributeDesc* other) {
  if (other != this) {
    std::swap(m_type_, other->m_type_);
    std::swap(m_value_, other->m_value_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_EquipStrongtotalAttributeDesc::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_EquipStrongtotalAttributeDesc_descriptor_;
  metadata.reflection = E_EquipStrongtotalAttributeDesc_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_EquipStrongtotal::kMIdFieldNumber;
const int E_EquipStrongtotal::kMIdtypeFieldNumber;
const int E_EquipStrongtotal::kMIdnumFieldNumber;
const int E_EquipStrongtotal::kMAttributeFieldNumber;
#endif  // !_MSC_VER

E_EquipStrongtotal::E_EquipStrongtotal()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_EquipStrongtotal::InitAsDefaultInstance() {
}

E_EquipStrongtotal::E_EquipStrongtotal(const E_EquipStrongtotal& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_EquipStrongtotal::SharedCtor() {
  _cached_size_ = 0;
  m_id_ = GOOGLE_LONGLONG(0);
  m_idtype_ = 0;
  m_idnum_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_EquipStrongtotal::~E_EquipStrongtotal() {
  SharedDtor();
}

void E_EquipStrongtotal::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_EquipStrongtotal::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_EquipStrongtotal::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_EquipStrongtotal_descriptor_;
}

const E_EquipStrongtotal& E_EquipStrongtotal::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_equip_2eproto();
  return *default_instance_;
}

E_EquipStrongtotal* E_EquipStrongtotal::default_instance_ = NULL;

E_EquipStrongtotal* E_EquipStrongtotal::New() const {
  return new E_EquipStrongtotal;
}

void E_EquipStrongtotal::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_id_ = GOOGLE_LONGLONG(0);
    m_idtype_ = 0;
    m_idnum_ = 0;
  }
  m_attribute_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_EquipStrongtotal::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 m_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &m_id_)));
          set_has_m_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_idtype;
        break;
      }

      // optional int32 m_idtype = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_idtype:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_idtype_)));
          set_has_m_idtype();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_m_idnum;
        break;
      }

      // optional int32 m_idnum = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_idnum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_idnum_)));
          set_has_m_idnum();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_m_attribute;
        break;
      }

      // repeated .proto_ff.E_EquipStrongtotalAttributeDesc m_attribute = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_attribute:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_m_attribute()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_m_attribute;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_EquipStrongtotal::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 m_id = 1;
  if (has_m_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->m_id(), output);
  }

  // optional int32 m_idtype = 2;
  if (has_m_idtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_idtype(), output);
  }

  // optional int32 m_idnum = 3;
  if (has_m_idnum()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->m_idnum(), output);
  }

  // repeated .proto_ff.E_EquipStrongtotalAttributeDesc m_attribute = 4;
  for (int i = 0; i < this->m_attribute_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->m_attribute(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_EquipStrongtotal::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 m_id = 1;
  if (has_m_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->m_id(), target);
  }

  // optional int32 m_idtype = 2;
  if (has_m_idtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_idtype(), target);
  }

  // optional int32 m_idnum = 3;
  if (has_m_idnum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->m_idnum(), target);
  }

  // repeated .proto_ff.E_EquipStrongtotalAttributeDesc m_attribute = 4;
  for (int i = 0; i < this->m_attribute_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->m_attribute(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_EquipStrongtotal::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 m_id = 1;
    if (has_m_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->m_id());
    }

    // optional int32 m_idtype = 2;
    if (has_m_idtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_idtype());
    }

    // optional int32 m_idnum = 3;
    if (has_m_idnum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_idnum());
    }

  }
  // repeated .proto_ff.E_EquipStrongtotalAttributeDesc m_attribute = 4;
  total_size += 1 * this->m_attribute_size();
  for (int i = 0; i < this->m_attribute_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->m_attribute(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_EquipStrongtotal::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_EquipStrongtotal* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_EquipStrongtotal*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_EquipStrongtotal::MergeFrom(const E_EquipStrongtotal& from) {
  GOOGLE_CHECK_NE(&from, this);
  m_attribute_.MergeFrom(from.m_attribute_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_id()) {
      set_m_id(from.m_id());
    }
    if (from.has_m_idtype()) {
      set_m_idtype(from.m_idtype());
    }
    if (from.has_m_idnum()) {
      set_m_idnum(from.m_idnum());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_EquipStrongtotal::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_EquipStrongtotal::CopyFrom(const E_EquipStrongtotal& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_EquipStrongtotal::IsInitialized() const {

  return true;
}

void E_EquipStrongtotal::Swap(E_EquipStrongtotal* other) {
  if (other != this) {
    std::swap(m_id_, other->m_id_);
    std::swap(m_idtype_, other->m_idtype_);
    std::swap(m_idnum_, other->m_idnum_);
    m_attribute_.Swap(&other->m_attribute_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_EquipStrongtotal::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_EquipStrongtotal_descriptor_;
  metadata.reflection = E_EquipStrongtotal_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_EquipStrongtotal::kEEquipStrongtotalListFieldNumber;
#endif  // !_MSC_VER

Sheet_EquipStrongtotal::Sheet_EquipStrongtotal()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_EquipStrongtotal::InitAsDefaultInstance() {
}

Sheet_EquipStrongtotal::Sheet_EquipStrongtotal(const Sheet_EquipStrongtotal& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_EquipStrongtotal::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_EquipStrongtotal::~Sheet_EquipStrongtotal() {
  SharedDtor();
}

void Sheet_EquipStrongtotal::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_EquipStrongtotal::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_EquipStrongtotal::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_EquipStrongtotal_descriptor_;
}

const Sheet_EquipStrongtotal& Sheet_EquipStrongtotal::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_equip_2eproto();
  return *default_instance_;
}

Sheet_EquipStrongtotal* Sheet_EquipStrongtotal::default_instance_ = NULL;

Sheet_EquipStrongtotal* Sheet_EquipStrongtotal::New() const {
  return new Sheet_EquipStrongtotal;
}

void Sheet_EquipStrongtotal::Clear() {
  e_equipstrongtotal_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_EquipStrongtotal::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.E_EquipStrongtotal E_EquipStrongtotal_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_E_EquipStrongtotal_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_e_equipstrongtotal_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_E_EquipStrongtotal_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_EquipStrongtotal::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.E_EquipStrongtotal E_EquipStrongtotal_List = 1;
  for (int i = 0; i < this->e_equipstrongtotal_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->e_equipstrongtotal_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_EquipStrongtotal::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.E_EquipStrongtotal E_EquipStrongtotal_List = 1;
  for (int i = 0; i < this->e_equipstrongtotal_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->e_equipstrongtotal_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_EquipStrongtotal::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.E_EquipStrongtotal E_EquipStrongtotal_List = 1;
  total_size += 1 * this->e_equipstrongtotal_list_size();
  for (int i = 0; i < this->e_equipstrongtotal_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->e_equipstrongtotal_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_EquipStrongtotal::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_EquipStrongtotal* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_EquipStrongtotal*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_EquipStrongtotal::MergeFrom(const Sheet_EquipStrongtotal& from) {
  GOOGLE_CHECK_NE(&from, this);
  e_equipstrongtotal_list_.MergeFrom(from.e_equipstrongtotal_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_EquipStrongtotal::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_EquipStrongtotal::CopyFrom(const Sheet_EquipStrongtotal& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_EquipStrongtotal::IsInitialized() const {

  return true;
}

void Sheet_EquipStrongtotal::Swap(Sheet_EquipStrongtotal* other) {
  if (other != this) {
    e_equipstrongtotal_list_.Swap(&other->e_equipstrongtotal_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_EquipStrongtotal::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_EquipStrongtotal_descriptor_;
  metadata.reflection = Sheet_EquipStrongtotal_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_EquipGem::kMPositionFieldNumber;
const int E_EquipGem::kMGemtypeFieldNumber;
const int E_EquipGem::kMSpeciallygemtypeFieldNumber;
const int E_EquipGem::kMPayunlockitemFieldNumber;
const int E_EquipGem::kMPayunlocknnmFieldNumber;
const int E_EquipGem::kMGemunlockFieldNumber;
#endif  // !_MSC_VER

E_EquipGem::E_EquipGem()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_EquipGem::InitAsDefaultInstance() {
}

E_EquipGem::E_EquipGem(const E_EquipGem& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_EquipGem::SharedCtor() {
  _cached_size_ = 0;
  m_position_ = 0;
  m_gemtype_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  m_speciallygemtype_ = 0;
  m_payunlockitem_ = 0;
  m_payunlocknnm_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_EquipGem::~E_EquipGem() {
  SharedDtor();
}

void E_EquipGem::SharedDtor() {
  if (m_gemtype_ != &::google::protobuf::internal::kEmptyString) {
    delete m_gemtype_;
  }
  if (this != default_instance_) {
  }
}

void E_EquipGem::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_EquipGem::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_EquipGem_descriptor_;
}

const E_EquipGem& E_EquipGem::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_equip_2eproto();
  return *default_instance_;
}

E_EquipGem* E_EquipGem::default_instance_ = NULL;

E_EquipGem* E_EquipGem::New() const {
  return new E_EquipGem;
}

void E_EquipGem::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_position_ = 0;
    if (has_m_gemtype()) {
      if (m_gemtype_ != &::google::protobuf::internal::kEmptyString) {
        m_gemtype_->clear();
      }
    }
    m_speciallygemtype_ = 0;
    m_payunlockitem_ = 0;
    m_payunlocknnm_ = 0;
  }
  m_gemunlock_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_EquipGem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_position = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_position_)));
          set_has_m_position();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_m_gemtype;
        break;
      }

      // optional string m_gemtype = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_gemtype:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_m_gemtype()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->m_gemtype().data(), this->m_gemtype().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_m_speciallygemtype;
        break;
      }

      // optional int32 m_speciallygemtype = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_speciallygemtype:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_speciallygemtype_)));
          set_has_m_speciallygemtype();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_m_payunlockitem;
        break;
      }

      // optional int32 m_payunlockitem = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_payunlockitem:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_payunlockitem_)));
          set_has_m_payunlockitem();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_m_payunlocknnm;
        break;
      }

      // optional int32 m_payunlocknnm = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_payunlocknnm:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_payunlocknnm_)));
          set_has_m_payunlocknnm();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_m_gemunlock;
        break;
      }

      // repeated int32 m_gemunlock = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_gemunlock:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 48, input, this->mutable_m_gemunlock())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_m_gemunlock())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_m_gemunlock;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_EquipGem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_position = 1;
  if (has_m_position()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_position(), output);
  }

  // optional string m_gemtype = 2;
  if (has_m_gemtype()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_gemtype().data(), this->m_gemtype().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->m_gemtype(), output);
  }

  // optional int32 m_speciallygemtype = 3;
  if (has_m_speciallygemtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->m_speciallygemtype(), output);
  }

  // optional int32 m_payunlockitem = 4;
  if (has_m_payunlockitem()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->m_payunlockitem(), output);
  }

  // optional int32 m_payunlocknnm = 5;
  if (has_m_payunlocknnm()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->m_payunlocknnm(), output);
  }

  // repeated int32 m_gemunlock = 6;
  for (int i = 0; i < this->m_gemunlock_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      6, this->m_gemunlock(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_EquipGem::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_position = 1;
  if (has_m_position()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_position(), target);
  }

  // optional string m_gemtype = 2;
  if (has_m_gemtype()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_gemtype().data(), this->m_gemtype().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->m_gemtype(), target);
  }

  // optional int32 m_speciallygemtype = 3;
  if (has_m_speciallygemtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->m_speciallygemtype(), target);
  }

  // optional int32 m_payunlockitem = 4;
  if (has_m_payunlockitem()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->m_payunlockitem(), target);
  }

  // optional int32 m_payunlocknnm = 5;
  if (has_m_payunlocknnm()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->m_payunlocknnm(), target);
  }

  // repeated int32 m_gemunlock = 6;
  for (int i = 0; i < this->m_gemunlock_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(6, this->m_gemunlock(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_EquipGem::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_position = 1;
    if (has_m_position()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_position());
    }

    // optional string m_gemtype = 2;
    if (has_m_gemtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->m_gemtype());
    }

    // optional int32 m_speciallygemtype = 3;
    if (has_m_speciallygemtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_speciallygemtype());
    }

    // optional int32 m_payunlockitem = 4;
    if (has_m_payunlockitem()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_payunlockitem());
    }

    // optional int32 m_payunlocknnm = 5;
    if (has_m_payunlocknnm()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_payunlocknnm());
    }

  }
  // repeated int32 m_gemunlock = 6;
  {
    int data_size = 0;
    for (int i = 0; i < this->m_gemunlock_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->m_gemunlock(i));
    }
    total_size += 1 * this->m_gemunlock_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_EquipGem::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_EquipGem* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_EquipGem*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_EquipGem::MergeFrom(const E_EquipGem& from) {
  GOOGLE_CHECK_NE(&from, this);
  m_gemunlock_.MergeFrom(from.m_gemunlock_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_position()) {
      set_m_position(from.m_position());
    }
    if (from.has_m_gemtype()) {
      set_m_gemtype(from.m_gemtype());
    }
    if (from.has_m_speciallygemtype()) {
      set_m_speciallygemtype(from.m_speciallygemtype());
    }
    if (from.has_m_payunlockitem()) {
      set_m_payunlockitem(from.m_payunlockitem());
    }
    if (from.has_m_payunlocknnm()) {
      set_m_payunlocknnm(from.m_payunlocknnm());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_EquipGem::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_EquipGem::CopyFrom(const E_EquipGem& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_EquipGem::IsInitialized() const {

  return true;
}

void E_EquipGem::Swap(E_EquipGem* other) {
  if (other != this) {
    std::swap(m_position_, other->m_position_);
    std::swap(m_gemtype_, other->m_gemtype_);
    std::swap(m_speciallygemtype_, other->m_speciallygemtype_);
    std::swap(m_payunlockitem_, other->m_payunlockitem_);
    std::swap(m_payunlocknnm_, other->m_payunlocknnm_);
    m_gemunlock_.Swap(&other->m_gemunlock_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_EquipGem::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_EquipGem_descriptor_;
  metadata.reflection = E_EquipGem_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_EquipGem::kEEquipGemListFieldNumber;
#endif  // !_MSC_VER

Sheet_EquipGem::Sheet_EquipGem()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_EquipGem::InitAsDefaultInstance() {
}

Sheet_EquipGem::Sheet_EquipGem(const Sheet_EquipGem& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_EquipGem::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_EquipGem::~Sheet_EquipGem() {
  SharedDtor();
}

void Sheet_EquipGem::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_EquipGem::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_EquipGem::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_EquipGem_descriptor_;
}

const Sheet_EquipGem& Sheet_EquipGem::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_equip_2eproto();
  return *default_instance_;
}

Sheet_EquipGem* Sheet_EquipGem::default_instance_ = NULL;

Sheet_EquipGem* Sheet_EquipGem::New() const {
  return new Sheet_EquipGem;
}

void Sheet_EquipGem::Clear() {
  e_equipgem_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_EquipGem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.E_EquipGem E_EquipGem_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_E_EquipGem_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_e_equipgem_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_E_EquipGem_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_EquipGem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.E_EquipGem E_EquipGem_List = 1;
  for (int i = 0; i < this->e_equipgem_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->e_equipgem_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_EquipGem::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.E_EquipGem E_EquipGem_List = 1;
  for (int i = 0; i < this->e_equipgem_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->e_equipgem_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_EquipGem::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.E_EquipGem E_EquipGem_List = 1;
  total_size += 1 * this->e_equipgem_list_size();
  for (int i = 0; i < this->e_equipgem_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->e_equipgem_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_EquipGem::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_EquipGem* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_EquipGem*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_EquipGem::MergeFrom(const Sheet_EquipGem& from) {
  GOOGLE_CHECK_NE(&from, this);
  e_equipgem_list_.MergeFrom(from.e_equipgem_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_EquipGem::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_EquipGem::CopyFrom(const Sheet_EquipGem& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_EquipGem::IsInitialized() const {

  return true;
}

void Sheet_EquipGem::Swap(Sheet_EquipGem* other) {
  if (other != this) {
    e_equipgem_list_.Swap(&other->e_equipgem_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_EquipGem::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_EquipGem_descriptor_;
  metadata.reflection = Sheet_EquipGem_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_EquipStoveattAttributeDesc::kMTypeFieldNumber;
const int E_EquipStoveattAttributeDesc::kMValueFieldNumber;
#endif  // !_MSC_VER

E_EquipStoveattAttributeDesc::E_EquipStoveattAttributeDesc()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_EquipStoveattAttributeDesc::InitAsDefaultInstance() {
}

E_EquipStoveattAttributeDesc::E_EquipStoveattAttributeDesc(const E_EquipStoveattAttributeDesc& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_EquipStoveattAttributeDesc::SharedCtor() {
  _cached_size_ = 0;
  m_type_ = 0;
  m_value_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_EquipStoveattAttributeDesc::~E_EquipStoveattAttributeDesc() {
  SharedDtor();
}

void E_EquipStoveattAttributeDesc::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_EquipStoveattAttributeDesc::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_EquipStoveattAttributeDesc::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_EquipStoveattAttributeDesc_descriptor_;
}

const E_EquipStoveattAttributeDesc& E_EquipStoveattAttributeDesc::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_equip_2eproto();
  return *default_instance_;
}

E_EquipStoveattAttributeDesc* E_EquipStoveattAttributeDesc::default_instance_ = NULL;

E_EquipStoveattAttributeDesc* E_EquipStoveattAttributeDesc::New() const {
  return new E_EquipStoveattAttributeDesc;
}

void E_EquipStoveattAttributeDesc::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_type_ = 0;
    m_value_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_EquipStoveattAttributeDesc::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_type_)));
          set_has_m_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_value;
        break;
      }

      // optional int32 m_value = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_value:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_value_)));
          set_has_m_value();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_EquipStoveattAttributeDesc::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_type = 1;
  if (has_m_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_type(), output);
  }

  // optional int32 m_value = 2;
  if (has_m_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_value(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_EquipStoveattAttributeDesc::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_type = 1;
  if (has_m_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_type(), target);
  }

  // optional int32 m_value = 2;
  if (has_m_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_value(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_EquipStoveattAttributeDesc::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_type = 1;
    if (has_m_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_type());
    }

    // optional int32 m_value = 2;
    if (has_m_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_value());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_EquipStoveattAttributeDesc::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_EquipStoveattAttributeDesc* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_EquipStoveattAttributeDesc*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_EquipStoveattAttributeDesc::MergeFrom(const E_EquipStoveattAttributeDesc& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_type()) {
      set_m_type(from.m_type());
    }
    if (from.has_m_value()) {
      set_m_value(from.m_value());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_EquipStoveattAttributeDesc::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_EquipStoveattAttributeDesc::CopyFrom(const E_EquipStoveattAttributeDesc& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_EquipStoveattAttributeDesc::IsInitialized() const {

  return true;
}

void E_EquipStoveattAttributeDesc::Swap(E_EquipStoveattAttributeDesc* other) {
  if (other != this) {
    std::swap(m_type_, other->m_type_);
    std::swap(m_value_, other->m_value_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_EquipStoveattAttributeDesc::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_EquipStoveattAttributeDesc_descriptor_;
  metadata.reflection = E_EquipStoveattAttributeDesc_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_EquipStoveatt::kMLvFieldNumber;
const int E_EquipStoveatt::kMExpFieldNumber;
const int E_EquipStoveatt::kMAttributeFieldNumber;
#endif  // !_MSC_VER

E_EquipStoveatt::E_EquipStoveatt()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_EquipStoveatt::InitAsDefaultInstance() {
}

E_EquipStoveatt::E_EquipStoveatt(const E_EquipStoveatt& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_EquipStoveatt::SharedCtor() {
  _cached_size_ = 0;
  m_lv_ = 0;
  m_exp_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_EquipStoveatt::~E_EquipStoveatt() {
  SharedDtor();
}

void E_EquipStoveatt::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_EquipStoveatt::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_EquipStoveatt::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_EquipStoveatt_descriptor_;
}

const E_EquipStoveatt& E_EquipStoveatt::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_equip_2eproto();
  return *default_instance_;
}

E_EquipStoveatt* E_EquipStoveatt::default_instance_ = NULL;

E_EquipStoveatt* E_EquipStoveatt::New() const {
  return new E_EquipStoveatt;
}

void E_EquipStoveatt::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_lv_ = 0;
    m_exp_ = GOOGLE_LONGLONG(0);
  }
  m_attribute_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_EquipStoveatt::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_lv = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_lv_)));
          set_has_m_lv();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_exp;
        break;
      }

      // optional int64 m_exp = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_exp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &m_exp_)));
          set_has_m_exp();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_m_attribute;
        break;
      }

      // repeated .proto_ff.E_EquipStoveattAttributeDesc m_attribute = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_attribute:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_m_attribute()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_m_attribute;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_EquipStoveatt::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_lv = 1;
  if (has_m_lv()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_lv(), output);
  }

  // optional int64 m_exp = 2;
  if (has_m_exp()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->m_exp(), output);
  }

  // repeated .proto_ff.E_EquipStoveattAttributeDesc m_attribute = 3;
  for (int i = 0; i < this->m_attribute_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->m_attribute(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_EquipStoveatt::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_lv = 1;
  if (has_m_lv()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_lv(), target);
  }

  // optional int64 m_exp = 2;
  if (has_m_exp()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->m_exp(), target);
  }

  // repeated .proto_ff.E_EquipStoveattAttributeDesc m_attribute = 3;
  for (int i = 0; i < this->m_attribute_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->m_attribute(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_EquipStoveatt::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_lv = 1;
    if (has_m_lv()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_lv());
    }

    // optional int64 m_exp = 2;
    if (has_m_exp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->m_exp());
    }

  }
  // repeated .proto_ff.E_EquipStoveattAttributeDesc m_attribute = 3;
  total_size += 1 * this->m_attribute_size();
  for (int i = 0; i < this->m_attribute_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->m_attribute(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_EquipStoveatt::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_EquipStoveatt* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_EquipStoveatt*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_EquipStoveatt::MergeFrom(const E_EquipStoveatt& from) {
  GOOGLE_CHECK_NE(&from, this);
  m_attribute_.MergeFrom(from.m_attribute_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_lv()) {
      set_m_lv(from.m_lv());
    }
    if (from.has_m_exp()) {
      set_m_exp(from.m_exp());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_EquipStoveatt::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_EquipStoveatt::CopyFrom(const E_EquipStoveatt& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_EquipStoveatt::IsInitialized() const {

  return true;
}

void E_EquipStoveatt::Swap(E_EquipStoveatt* other) {
  if (other != this) {
    std::swap(m_lv_, other->m_lv_);
    std::swap(m_exp_, other->m_exp_);
    m_attribute_.Swap(&other->m_attribute_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_EquipStoveatt::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_EquipStoveatt_descriptor_;
  metadata.reflection = E_EquipStoveatt_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_EquipStoveatt::kEEquipStoveattListFieldNumber;
#endif  // !_MSC_VER

Sheet_EquipStoveatt::Sheet_EquipStoveatt()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_EquipStoveatt::InitAsDefaultInstance() {
}

Sheet_EquipStoveatt::Sheet_EquipStoveatt(const Sheet_EquipStoveatt& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_EquipStoveatt::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_EquipStoveatt::~Sheet_EquipStoveatt() {
  SharedDtor();
}

void Sheet_EquipStoveatt::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_EquipStoveatt::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_EquipStoveatt::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_EquipStoveatt_descriptor_;
}

const Sheet_EquipStoveatt& Sheet_EquipStoveatt::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_equip_2eproto();
  return *default_instance_;
}

Sheet_EquipStoveatt* Sheet_EquipStoveatt::default_instance_ = NULL;

Sheet_EquipStoveatt* Sheet_EquipStoveatt::New() const {
  return new Sheet_EquipStoveatt;
}

void Sheet_EquipStoveatt::Clear() {
  e_equipstoveatt_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_EquipStoveatt::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.E_EquipStoveatt E_EquipStoveatt_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_E_EquipStoveatt_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_e_equipstoveatt_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_E_EquipStoveatt_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_EquipStoveatt::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.E_EquipStoveatt E_EquipStoveatt_List = 1;
  for (int i = 0; i < this->e_equipstoveatt_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->e_equipstoveatt_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_EquipStoveatt::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.E_EquipStoveatt E_EquipStoveatt_List = 1;
  for (int i = 0; i < this->e_equipstoveatt_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->e_equipstoveatt_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_EquipStoveatt::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.E_EquipStoveatt E_EquipStoveatt_List = 1;
  total_size += 1 * this->e_equipstoveatt_list_size();
  for (int i = 0; i < this->e_equipstoveatt_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->e_equipstoveatt_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_EquipStoveatt::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_EquipStoveatt* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_EquipStoveatt*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_EquipStoveatt::MergeFrom(const Sheet_EquipStoveatt& from) {
  GOOGLE_CHECK_NE(&from, this);
  e_equipstoveatt_list_.MergeFrom(from.e_equipstoveatt_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_EquipStoveatt::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_EquipStoveatt::CopyFrom(const Sheet_EquipStoveatt& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_EquipStoveatt::IsInitialized() const {

  return true;
}

void Sheet_EquipStoveatt::Swap(Sheet_EquipStoveatt* other) {
  if (other != this) {
    e_equipstoveatt_list_.Swap(&other->e_equipstoveatt_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_EquipStoveatt::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_EquipStoveatt_descriptor_;
  metadata.reflection = Sheet_EquipStoveatt_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_EquipStoveexp::kMIdFieldNumber;
const int E_EquipStoveexp::kMExpFieldNumber;
const int E_EquipStoveexp::kMWearqualityFieldNumber;
const int E_EquipStoveexp::kMQualityFieldNumber;
#endif  // !_MSC_VER

E_EquipStoveexp::E_EquipStoveexp()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_EquipStoveexp::InitAsDefaultInstance() {
}

E_EquipStoveexp::E_EquipStoveexp(const E_EquipStoveexp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_EquipStoveexp::SharedCtor() {
  _cached_size_ = 0;
  m_id_ = 0;
  m_exp_ = 0;
  m_wearquality_ = 0;
  m_quality_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_EquipStoveexp::~E_EquipStoveexp() {
  SharedDtor();
}

void E_EquipStoveexp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_EquipStoveexp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_EquipStoveexp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_EquipStoveexp_descriptor_;
}

const E_EquipStoveexp& E_EquipStoveexp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_equip_2eproto();
  return *default_instance_;
}

E_EquipStoveexp* E_EquipStoveexp::default_instance_ = NULL;

E_EquipStoveexp* E_EquipStoveexp::New() const {
  return new E_EquipStoveexp;
}

void E_EquipStoveexp::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_id_ = 0;
    m_exp_ = 0;
    m_wearquality_ = 0;
    m_quality_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_EquipStoveexp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_id_)));
          set_has_m_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_exp;
        break;
      }

      // optional int32 m_exp = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_exp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_exp_)));
          set_has_m_exp();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_m_wearquality;
        break;
      }

      // optional int32 m_wearquality = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_wearquality:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_wearquality_)));
          set_has_m_wearquality();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_m_quality;
        break;
      }

      // optional int32 m_quality = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_quality:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_quality_)));
          set_has_m_quality();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_EquipStoveexp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_id(), output);
  }

  // optional int32 m_exp = 2;
  if (has_m_exp()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_exp(), output);
  }

  // optional int32 m_wearquality = 3;
  if (has_m_wearquality()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->m_wearquality(), output);
  }

  // optional int32 m_quality = 4;
  if (has_m_quality()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->m_quality(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_EquipStoveexp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_id(), target);
  }

  // optional int32 m_exp = 2;
  if (has_m_exp()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_exp(), target);
  }

  // optional int32 m_wearquality = 3;
  if (has_m_wearquality()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->m_wearquality(), target);
  }

  // optional int32 m_quality = 4;
  if (has_m_quality()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->m_quality(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_EquipStoveexp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_id = 1;
    if (has_m_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_id());
    }

    // optional int32 m_exp = 2;
    if (has_m_exp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_exp());
    }

    // optional int32 m_wearquality = 3;
    if (has_m_wearquality()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_wearquality());
    }

    // optional int32 m_quality = 4;
    if (has_m_quality()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_quality());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_EquipStoveexp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_EquipStoveexp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_EquipStoveexp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_EquipStoveexp::MergeFrom(const E_EquipStoveexp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_id()) {
      set_m_id(from.m_id());
    }
    if (from.has_m_exp()) {
      set_m_exp(from.m_exp());
    }
    if (from.has_m_wearquality()) {
      set_m_wearquality(from.m_wearquality());
    }
    if (from.has_m_quality()) {
      set_m_quality(from.m_quality());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_EquipStoveexp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_EquipStoveexp::CopyFrom(const E_EquipStoveexp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_EquipStoveexp::IsInitialized() const {

  return true;
}

void E_EquipStoveexp::Swap(E_EquipStoveexp* other) {
  if (other != this) {
    std::swap(m_id_, other->m_id_);
    std::swap(m_exp_, other->m_exp_);
    std::swap(m_wearquality_, other->m_wearquality_);
    std::swap(m_quality_, other->m_quality_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_EquipStoveexp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_EquipStoveexp_descriptor_;
  metadata.reflection = E_EquipStoveexp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_EquipStoveexp::kEEquipStoveexpListFieldNumber;
#endif  // !_MSC_VER

Sheet_EquipStoveexp::Sheet_EquipStoveexp()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_EquipStoveexp::InitAsDefaultInstance() {
}

Sheet_EquipStoveexp::Sheet_EquipStoveexp(const Sheet_EquipStoveexp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_EquipStoveexp::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_EquipStoveexp::~Sheet_EquipStoveexp() {
  SharedDtor();
}

void Sheet_EquipStoveexp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_EquipStoveexp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_EquipStoveexp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_EquipStoveexp_descriptor_;
}

const Sheet_EquipStoveexp& Sheet_EquipStoveexp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_equip_2eproto();
  return *default_instance_;
}

Sheet_EquipStoveexp* Sheet_EquipStoveexp::default_instance_ = NULL;

Sheet_EquipStoveexp* Sheet_EquipStoveexp::New() const {
  return new Sheet_EquipStoveexp;
}

void Sheet_EquipStoveexp::Clear() {
  e_equipstoveexp_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_EquipStoveexp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.E_EquipStoveexp E_EquipStoveexp_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_E_EquipStoveexp_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_e_equipstoveexp_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_E_EquipStoveexp_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_EquipStoveexp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.E_EquipStoveexp E_EquipStoveexp_List = 1;
  for (int i = 0; i < this->e_equipstoveexp_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->e_equipstoveexp_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_EquipStoveexp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.E_EquipStoveexp E_EquipStoveexp_List = 1;
  for (int i = 0; i < this->e_equipstoveexp_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->e_equipstoveexp_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_EquipStoveexp::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.E_EquipStoveexp E_EquipStoveexp_List = 1;
  total_size += 1 * this->e_equipstoveexp_list_size();
  for (int i = 0; i < this->e_equipstoveexp_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->e_equipstoveexp_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_EquipStoveexp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_EquipStoveexp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_EquipStoveexp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_EquipStoveexp::MergeFrom(const Sheet_EquipStoveexp& from) {
  GOOGLE_CHECK_NE(&from, this);
  e_equipstoveexp_list_.MergeFrom(from.e_equipstoveexp_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_EquipStoveexp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_EquipStoveexp::CopyFrom(const Sheet_EquipStoveexp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_EquipStoveexp::IsInitialized() const {

  return true;
}

void Sheet_EquipStoveexp::Swap(Sheet_EquipStoveexp* other) {
  if (other != this) {
    e_equipstoveexp_list_.Swap(&other->e_equipstoveexp_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_EquipStoveexp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_EquipStoveexp_descriptor_;
  metadata.reflection = Sheet_EquipStoveexp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_EquipGrade::kMIdFieldNumber;
#endif  // !_MSC_VER

E_EquipGrade::E_EquipGrade()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_EquipGrade::InitAsDefaultInstance() {
}

E_EquipGrade::E_EquipGrade(const E_EquipGrade& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_EquipGrade::SharedCtor() {
  _cached_size_ = 0;
  m_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_EquipGrade::~E_EquipGrade() {
  SharedDtor();
}

void E_EquipGrade::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_EquipGrade::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_EquipGrade::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_EquipGrade_descriptor_;
}

const E_EquipGrade& E_EquipGrade::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_equip_2eproto();
  return *default_instance_;
}

E_EquipGrade* E_EquipGrade::default_instance_ = NULL;

E_EquipGrade* E_EquipGrade::New() const {
  return new E_EquipGrade;
}

void E_EquipGrade::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_EquipGrade::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_id_)));
          set_has_m_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_EquipGrade::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_EquipGrade::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_EquipGrade::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_id = 1;
    if (has_m_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_id());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_EquipGrade::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_EquipGrade* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_EquipGrade*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_EquipGrade::MergeFrom(const E_EquipGrade& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_id()) {
      set_m_id(from.m_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_EquipGrade::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_EquipGrade::CopyFrom(const E_EquipGrade& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_EquipGrade::IsInitialized() const {

  return true;
}

void E_EquipGrade::Swap(E_EquipGrade* other) {
  if (other != this) {
    std::swap(m_id_, other->m_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_EquipGrade::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_EquipGrade_descriptor_;
  metadata.reflection = E_EquipGrade_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_EquipGrade::kEEquipGradeListFieldNumber;
#endif  // !_MSC_VER

Sheet_EquipGrade::Sheet_EquipGrade()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_EquipGrade::InitAsDefaultInstance() {
}

Sheet_EquipGrade::Sheet_EquipGrade(const Sheet_EquipGrade& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_EquipGrade::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_EquipGrade::~Sheet_EquipGrade() {
  SharedDtor();
}

void Sheet_EquipGrade::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_EquipGrade::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_EquipGrade::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_EquipGrade_descriptor_;
}

const Sheet_EquipGrade& Sheet_EquipGrade::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_equip_2eproto();
  return *default_instance_;
}

Sheet_EquipGrade* Sheet_EquipGrade::default_instance_ = NULL;

Sheet_EquipGrade* Sheet_EquipGrade::New() const {
  return new Sheet_EquipGrade;
}

void Sheet_EquipGrade::Clear() {
  e_equipgrade_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_EquipGrade::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.E_EquipGrade E_EquipGrade_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_E_EquipGrade_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_e_equipgrade_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_E_EquipGrade_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_EquipGrade::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.E_EquipGrade E_EquipGrade_List = 1;
  for (int i = 0; i < this->e_equipgrade_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->e_equipgrade_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_EquipGrade::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.E_EquipGrade E_EquipGrade_List = 1;
  for (int i = 0; i < this->e_equipgrade_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->e_equipgrade_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_EquipGrade::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.E_EquipGrade E_EquipGrade_List = 1;
  total_size += 1 * this->e_equipgrade_list_size();
  for (int i = 0; i < this->e_equipgrade_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->e_equipgrade_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_EquipGrade::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_EquipGrade* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_EquipGrade*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_EquipGrade::MergeFrom(const Sheet_EquipGrade& from) {
  GOOGLE_CHECK_NE(&from, this);
  e_equipgrade_list_.MergeFrom(from.e_equipgrade_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_EquipGrade::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_EquipGrade::CopyFrom(const Sheet_EquipGrade& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_EquipGrade::IsInitialized() const {

  return true;
}

void Sheet_EquipGrade::Swap(Sheet_EquipGrade* other) {
  if (other != this) {
    e_equipgrade_list_.Swap(&other->e_equipgrade_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_EquipGrade::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_EquipGrade_descriptor_;
  metadata.reflection = Sheet_EquipGrade_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto_ff

// @@protoc_insertion_point(global_scope)
