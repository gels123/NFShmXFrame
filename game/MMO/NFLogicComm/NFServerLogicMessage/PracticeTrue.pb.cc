// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: PracticeTrue.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "PracticeTrue.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace proto_ff {

namespace {

const ::google::protobuf::Descriptor* PTErrorRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PTErrorRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* PTDataReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PTDataReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* PTDataRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PTDataRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* PTGBXLStateChanged_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PTGBXLStateChanged_reflection_ = NULL;
const ::google::protobuf::Descriptor* PTStageUpReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PTStageUpReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* PTStageUpRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PTStageUpRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* PTGBEventItemsRecvReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PTGBEventItemsRecvReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* PTGBEventItemsRecvRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PTGBEventItemsRecvRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* PTGBEnterAreaReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PTGBEnterAreaReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* PTGBEnterAreaRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PTGBEnterAreaRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* PTGBXLStartReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PTGBXLStartReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* PTGBXLStartRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PTGBXLStartRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* PTGBEngryAddNT_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PTGBEngryAddNT_reflection_ = NULL;
const ::google::protobuf::Descriptor* PTgbLvlUpReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PTgbLvlUpReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* PTgbLvlUpRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PTgbLvlUpRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* PTebLvlUpReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PTebLvlUpReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* PTebLvlUpRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PTebLvlUpRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* PTgfActiveReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PTgfActiveReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* PTgfActiveRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PTgfActiveRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* PTgfLvlUpReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PTgfLvlUpReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* PTgfLvlUpRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PTgfLvlUpRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* PTgfStageUpReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PTgfStageUpReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* PTgfStageUpRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PTgfStageUpRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* PTjmLvlUpReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PTjmLvlUpReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* PTjmLvlUpRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PTjmLvlUpRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* PTjmStageUpReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PTjmStageUpReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* PTjmStageUpRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PTjmStageUpRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* PTjmMergeUpReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PTjmMergeUpReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* PTjmMergeUpRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PTjmMergeUpRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* PTlgLvlUpReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PTlgLvlUpReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* PTlgLvlUpRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PTlgLvlUpRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* PTlgPotionUseReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PTlgPotionUseReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* PTlgPotionUseRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PTlgPotionUseRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* PTPurchasedResult_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PTPurchasedResult_reflection_ = NULL;
const ::google::protobuf::Descriptor* PTPurchaseGfBookResult_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PTPurchaseGfBookResult_reflection_ = NULL;
const ::google::protobuf::Descriptor* PSDatasReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PSDatasReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* PSDatasRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PSDatasRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* PSPurchaseReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PSPurchaseReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* PSPurchaseRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PSPurchaseRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* PSRefreshReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PSRefreshReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* PSRefreshRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PSRefreshRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* PSShopsRmvNt_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PSShopsRmvNt_reflection_ = NULL;
const ::google::protobuf::Descriptor* PSShopAddNt_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PSShopAddNt_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_PracticeTrue_2eproto() {
  protobuf_AddDesc_PracticeTrue_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "PracticeTrue.proto");
  GOOGLE_CHECK(file != NULL);
  PTErrorRsp_descriptor_ = file->message_type(0);
  static const int PTErrorRsp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PTErrorRsp, errcode_),
  };
  PTErrorRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PTErrorRsp_descriptor_,
      PTErrorRsp::default_instance_,
      PTErrorRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PTErrorRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PTErrorRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PTErrorRsp));
  PTDataReq_descriptor_ = file->message_type(1);
  static const int PTDataReq_offsets_[1] = {
  };
  PTDataReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PTDataReq_descriptor_,
      PTDataReq::default_instance_,
      PTDataReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PTDataReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PTDataReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PTDataReq));
  PTDataRsp_descriptor_ = file->message_type(2);
  static const int PTDataRsp_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PTDataRsp, datas_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PTDataRsp, gbxlstate_),
  };
  PTDataRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PTDataRsp_descriptor_,
      PTDataRsp::default_instance_,
      PTDataRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PTDataRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PTDataRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PTDataRsp));
  PTGBXLStateChanged_descriptor_ = file->message_type(3);
  static const int PTGBXLStateChanged_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PTGBXLStateChanged, gbxlstate_),
  };
  PTGBXLStateChanged_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PTGBXLStateChanged_descriptor_,
      PTGBXLStateChanged::default_instance_,
      PTGBXLStateChanged_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PTGBXLStateChanged, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PTGBXLStateChanged, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PTGBXLStateChanged));
  PTStageUpReq_descriptor_ = file->message_type(4);
  static const int PTStageUpReq_offsets_[1] = {
  };
  PTStageUpReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PTStageUpReq_descriptor_,
      PTStageUpReq::default_instance_,
      PTStageUpReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PTStageUpReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PTStageUpReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PTStageUpReq));
  PTStageUpRsp_descriptor_ = file->message_type(5);
  static const int PTStageUpRsp_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PTStageUpRsp, djsuccess_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PTStageUpRsp, djfailinvigoration_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PTStageUpRsp, level_),
  };
  PTStageUpRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PTStageUpRsp_descriptor_,
      PTStageUpRsp::default_instance_,
      PTStageUpRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PTStageUpRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PTStageUpRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PTStageUpRsp));
  PTGBEventItemsRecvReq_descriptor_ = file->message_type(6);
  static const int PTGBEventItemsRecvReq_offsets_[1] = {
  };
  PTGBEventItemsRecvReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PTGBEventItemsRecvReq_descriptor_,
      PTGBEventItemsRecvReq::default_instance_,
      PTGBEventItemsRecvReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PTGBEventItemsRecvReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PTGBEventItemsRecvReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PTGBEventItemsRecvReq));
  PTGBEventItemsRecvRsp_descriptor_ = file->message_type(7);
  static const int PTGBEventItemsRecvRsp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PTGBEventItemsRecvRsp, gbeventitems_),
  };
  PTGBEventItemsRecvRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PTGBEventItemsRecvRsp_descriptor_,
      PTGBEventItemsRecvRsp::default_instance_,
      PTGBEventItemsRecvRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PTGBEventItemsRecvRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PTGBEventItemsRecvRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PTGBEventItemsRecvRsp));
  PTGBEnterAreaReq_descriptor_ = file->message_type(8);
  static const int PTGBEnterAreaReq_offsets_[1] = {
  };
  PTGBEnterAreaReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PTGBEnterAreaReq_descriptor_,
      PTGBEnterAreaReq::default_instance_,
      PTGBEnterAreaReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PTGBEnterAreaReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PTGBEnterAreaReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PTGBEnterAreaReq));
  PTGBEnterAreaRsp_descriptor_ = file->message_type(9);
  static const int PTGBEnterAreaRsp_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PTGBEnterAreaRsp, enterarearesult_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PTGBEnterAreaRsp, gbarea_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PTGBEnterAreaRsp, gbxlremaintime_),
  };
  PTGBEnterAreaRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PTGBEnterAreaRsp_descriptor_,
      PTGBEnterAreaRsp::default_instance_,
      PTGBEnterAreaRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PTGBEnterAreaRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PTGBEnterAreaRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PTGBEnterAreaRsp));
  PTGBXLStartReq_descriptor_ = file->message_type(10);
  static const int PTGBXLStartReq_offsets_[1] = {
  };
  PTGBXLStartReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PTGBXLStartReq_descriptor_,
      PTGBXLStartReq::default_instance_,
      PTGBXLStartReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PTGBXLStartReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PTGBXLStartReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PTGBXLStartReq));
  PTGBXLStartRsp_descriptor_ = file->message_type(11);
  static const int PTGBXLStartRsp_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PTGBXLStartRsp, gbxlstartresultrsp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PTGBXLStartRsp, gbxlremaintime_),
  };
  PTGBXLStartRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PTGBXLStartRsp_descriptor_,
      PTGBXLStartRsp::default_instance_,
      PTGBXLStartRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PTGBXLStartRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PTGBXLStartRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PTGBXLStartRsp));
  PTGBEngryAddNT_descriptor_ = file->message_type(12);
  static const int PTGBEngryAddNT_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PTGBEngryAddNT, gbenergyadd_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PTGBEngryAddNT, gbcritadd_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PTGBEngryAddNT, gbenergy_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PTGBEngryAddNT, gbeventslog_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PTGBEngryAddNT, gbeventitems_),
  };
  PTGBEngryAddNT_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PTGBEngryAddNT_descriptor_,
      PTGBEngryAddNT::default_instance_,
      PTGBEngryAddNT_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PTGBEngryAddNT, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PTGBEngryAddNT, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PTGBEngryAddNT));
  PTgbLvlUpReq_descriptor_ = file->message_type(13);
  static const int PTgbLvlUpReq_offsets_[1] = {
  };
  PTgbLvlUpReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PTgbLvlUpReq_descriptor_,
      PTgbLvlUpReq::default_instance_,
      PTgbLvlUpReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PTgbLvlUpReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PTgbLvlUpReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PTgbLvlUpReq));
  PTgbLvlUpRsp_descriptor_ = file->message_type(14);
  static const int PTgbLvlUpRsp_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PTgbLvlUpRsp, gblvlupcostxw_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PTgbLvlUpRsp, gblevel_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PTgbLvlUpRsp, gbenergy_),
  };
  PTgbLvlUpRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PTgbLvlUpRsp_descriptor_,
      PTgbLvlUpRsp::default_instance_,
      PTgbLvlUpRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PTgbLvlUpRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PTgbLvlUpRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PTgbLvlUpRsp));
  PTebLvlUpReq_descriptor_ = file->message_type(15);
  static const int PTebLvlUpReq_offsets_[1] = {
  };
  PTebLvlUpReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PTebLvlUpReq_descriptor_,
      PTebLvlUpReq::default_instance_,
      PTebLvlUpReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PTebLvlUpReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PTebLvlUpReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PTebLvlUpReq));
  PTebLvlUpRsp_descriptor_ = file->message_type(16);
  static const int PTebLvlUpRsp_offsets_[8] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PTebLvlUpRsp, eblvlupresult_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PTebLvlUpRsp, gblvlupcostxw_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PTebLvlUpRsp, gbenergy_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PTebLvlUpRsp, eblevel_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PTebLvlUpRsp, ebflyfailinvigoration_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PTebLvlUpRsp, lgtypes_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PTebLvlUpRsp, lgpoints_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PTebLvlUpRsp, lgpointsadd_),
  };
  PTebLvlUpRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PTebLvlUpRsp_descriptor_,
      PTebLvlUpRsp::default_instance_,
      PTebLvlUpRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PTebLvlUpRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PTebLvlUpRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PTebLvlUpRsp));
  PTgfActiveReq_descriptor_ = file->message_type(17);
  static const int PTgfActiveReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PTgfActiveReq, gftype_),
  };
  PTgfActiveReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PTgfActiveReq_descriptor_,
      PTgfActiveReq::default_instance_,
      PTgfActiveReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PTgfActiveReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PTgfActiveReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PTgfActiveReq));
  PTgfActiveRsp_descriptor_ = file->message_type(18);
  static const int PTgfActiveRsp_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PTgfActiveRsp, gfactiveresult_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PTgfActiveRsp, gftype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PTgfActiveRsp, gflvl_),
  };
  PTgfActiveRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PTgfActiveRsp_descriptor_,
      PTgfActiveRsp::default_instance_,
      PTgfActiveRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PTgfActiveRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PTgfActiveRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PTgfActiveRsp));
  PTgfLvlUpReq_descriptor_ = file->message_type(19);
  static const int PTgfLvlUpReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PTgfLvlUpReq, gftype_),
  };
  PTgfLvlUpReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PTgfLvlUpReq_descriptor_,
      PTgfLvlUpReq::default_instance_,
      PTgfLvlUpReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PTgfLvlUpReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PTgfLvlUpReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PTgfLvlUpReq));
  PTgfLvlUpRsp_descriptor_ = file->message_type(20);
  static const int PTgfLvlUpRsp_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PTgfLvlUpRsp, gflvlupresult_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PTgfLvlUpRsp, gftype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PTgfLvlUpRsp, gflvl_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PTgfLvlUpRsp, gbenergy_),
  };
  PTgfLvlUpRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PTgfLvlUpRsp_descriptor_,
      PTgfLvlUpRsp::default_instance_,
      PTgfLvlUpRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PTgfLvlUpRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PTgfLvlUpRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PTgfLvlUpRsp));
  PTgfStageUpReq_descriptor_ = file->message_type(21);
  static const int PTgfStageUpReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PTgfStageUpReq, gftype_),
  };
  PTgfStageUpReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PTgfStageUpReq_descriptor_,
      PTgfStageUpReq::default_instance_,
      PTgfStageUpReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PTgfStageUpReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PTgfStageUpReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PTgfStageUpReq));
  PTgfStageUpRsp_descriptor_ = file->message_type(22);
  static const int PTgfStageUpRsp_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PTgfStageUpRsp, gfstageupresult_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PTgfStageUpRsp, gftype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PTgfStageUpRsp, gfstage_),
  };
  PTgfStageUpRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PTgfStageUpRsp_descriptor_,
      PTgfStageUpRsp::default_instance_,
      PTgfStageUpRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PTgfStageUpRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PTgfStageUpRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PTgfStageUpRsp));
  PTjmLvlUpReq_descriptor_ = file->message_type(23);
  static const int PTjmLvlUpReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PTjmLvlUpReq, jmtype_),
  };
  PTjmLvlUpReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PTjmLvlUpReq_descriptor_,
      PTjmLvlUpReq::default_instance_,
      PTjmLvlUpReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PTjmLvlUpReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PTjmLvlUpReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PTjmLvlUpReq));
  PTjmLvlUpRsp_descriptor_ = file->message_type(24);
  static const int PTjmLvlUpRsp_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PTjmLvlUpRsp, success_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PTjmLvlUpRsp, jmtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PTjmLvlUpRsp, lvl_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PTjmLvlUpRsp, gbenergy_),
  };
  PTjmLvlUpRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PTjmLvlUpRsp_descriptor_,
      PTjmLvlUpRsp::default_instance_,
      PTjmLvlUpRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PTjmLvlUpRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PTjmLvlUpRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PTjmLvlUpRsp));
  PTjmStageUpReq_descriptor_ = file->message_type(25);
  static const int PTjmStageUpReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PTjmStageUpReq, jmtype_),
  };
  PTjmStageUpReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PTjmStageUpReq_descriptor_,
      PTjmStageUpReq::default_instance_,
      PTjmStageUpReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PTjmStageUpReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PTjmStageUpReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PTjmStageUpReq));
  PTjmStageUpRsp_descriptor_ = file->message_type(26);
  static const int PTjmStageUpRsp_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PTjmStageUpRsp, error_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PTjmStageUpRsp, jmtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PTjmStageUpRsp, stage_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PTjmStageUpRsp, gftype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PTjmStageUpRsp, jmstageupfailinvigoration_),
  };
  PTjmStageUpRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PTjmStageUpRsp_descriptor_,
      PTjmStageUpRsp::default_instance_,
      PTjmStageUpRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PTjmStageUpRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PTjmStageUpRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PTjmStageUpRsp));
  PTjmMergeUpReq_descriptor_ = file->message_type(27);
  static const int PTjmMergeUpReq_offsets_[1] = {
  };
  PTjmMergeUpReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PTjmMergeUpReq_descriptor_,
      PTjmMergeUpReq::default_instance_,
      PTjmMergeUpReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PTjmMergeUpReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PTjmMergeUpReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PTjmMergeUpReq));
  PTjmMergeUpRsp_descriptor_ = file->message_type(28);
  static const int PTjmMergeUpRsp_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PTjmMergeUpRsp, error_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PTjmMergeUpRsp, jmmergelvl_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PTjmMergeUpRsp, jmtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PTjmMergeUpRsp, jmneedstagelvl_),
  };
  PTjmMergeUpRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PTjmMergeUpRsp_descriptor_,
      PTjmMergeUpRsp::default_instance_,
      PTjmMergeUpRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PTjmMergeUpRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PTjmMergeUpRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PTjmMergeUpRsp));
  PTlgLvlUpReq_descriptor_ = file->message_type(29);
  static const int PTlgLvlUpReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PTlgLvlUpReq, lgtype_),
  };
  PTlgLvlUpReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PTlgLvlUpReq_descriptor_,
      PTlgLvlUpReq::default_instance_,
      PTlgLvlUpReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PTlgLvlUpReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PTlgLvlUpReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PTlgLvlUpReq));
  PTlgLvlUpRsp_descriptor_ = file->message_type(30);
  static const int PTlgLvlUpRsp_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PTlgLvlUpRsp, error_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PTlgLvlUpRsp, lgtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PTlgLvlUpRsp, lglvl_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PTlgLvlUpRsp, lgpoints_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PTlgLvlUpRsp, gbenergy_),
  };
  PTlgLvlUpRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PTlgLvlUpRsp_descriptor_,
      PTlgLvlUpRsp::default_instance_,
      PTlgLvlUpRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PTlgLvlUpRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PTlgLvlUpRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PTlgLvlUpRsp));
  PTlgPotionUseReq_descriptor_ = file->message_type(31);
  static const int PTlgPotionUseReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PTlgPotionUseReq, itemid_),
  };
  PTlgPotionUseReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PTlgPotionUseReq_descriptor_,
      PTlgPotionUseReq::default_instance_,
      PTlgPotionUseReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PTlgPotionUseReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PTlgPotionUseReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PTlgPotionUseReq));
  PTlgPotionUseRsp_descriptor_ = file->message_type(32);
  static const int PTlgPotionUseRsp_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PTlgPotionUseRsp, lgtypes_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PTlgPotionUseRsp, lgpoints_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PTlgPotionUseRsp, lgpointsadd_),
  };
  PTlgPotionUseRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PTlgPotionUseRsp_descriptor_,
      PTlgPotionUseRsp::default_instance_,
      PTlgPotionUseRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PTlgPotionUseRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PTlgPotionUseRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PTlgPotionUseRsp));
  PTPurchasedResult_descriptor_ = file->message_type(33);
  static const int PTPurchasedResult_offsets_[11] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PTPurchasedResult, purchasedrecord_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PTPurchasedResult, gbxlforever_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PTPurchasedResult, gbxwpadd_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PTPurchasedResult, gbenergycritrate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PTPurchasedResult, gbxleventxwpadd_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PTPurchasedResult, gbxleventgetitemrate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PTPurchasedResult, eblvluprate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PTPurchasedResult, ebflyrateadd_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PTPurchasedResult, ebflyfailinvigorationadd_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PTPurchasedResult, jmlvluprateadd_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PTPurchasedResult, jmstageuprateadd_),
  };
  PTPurchasedResult_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PTPurchasedResult_descriptor_,
      PTPurchasedResult::default_instance_,
      PTPurchasedResult_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PTPurchasedResult, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PTPurchasedResult, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PTPurchasedResult));
  PTPurchaseGfBookResult_descriptor_ = file->message_type(34);
  static const int PTPurchaseGfBookResult_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PTPurchaseGfBookResult, success_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PTPurchaseGfBookResult, gftype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PTPurchaseGfBookResult, purchasedtime_),
  };
  PTPurchaseGfBookResult_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PTPurchaseGfBookResult_descriptor_,
      PTPurchaseGfBookResult::default_instance_,
      PTPurchaseGfBookResult_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PTPurchaseGfBookResult, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PTPurchaseGfBookResult, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PTPurchaseGfBookResult));
  PSDatasReq_descriptor_ = file->message_type(35);
  static const int PSDatasReq_offsets_[1] = {
  };
  PSDatasReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PSDatasReq_descriptor_,
      PSDatasReq::default_instance_,
      PSDatasReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PSDatasReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PSDatasReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PSDatasReq));
  PSDatasRsp_descriptor_ = file->message_type(36);
  static const int PSDatasRsp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PSDatasRsp, datas_),
  };
  PSDatasRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PSDatasRsp_descriptor_,
      PSDatasRsp::default_instance_,
      PSDatasRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PSDatasRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PSDatasRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PSDatasRsp));
  PSPurchaseReq_descriptor_ = file->message_type(37);
  static const int PSPurchaseReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PSPurchaseReq, shopid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PSPurchaseReq, goodsid_),
  };
  PSPurchaseReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PSPurchaseReq_descriptor_,
      PSPurchaseReq::default_instance_,
      PSPurchaseReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PSPurchaseReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PSPurchaseReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PSPurchaseReq));
  PSPurchaseRsp_descriptor_ = file->message_type(38);
  static const int PSPurchaseRsp_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PSPurchaseRsp, errcode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PSPurchaseRsp, shopid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PSPurchaseRsp, goodsid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PSPurchaseRsp, amount_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PSPurchaseRsp, shoptime_),
  };
  PSPurchaseRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PSPurchaseRsp_descriptor_,
      PSPurchaseRsp::default_instance_,
      PSPurchaseRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PSPurchaseRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PSPurchaseRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PSPurchaseRsp));
  PSRefreshReq_descriptor_ = file->message_type(39);
  static const int PSRefreshReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PSRefreshReq, shopid_),
  };
  PSRefreshReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PSRefreshReq_descriptor_,
      PSRefreshReq::default_instance_,
      PSRefreshReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PSRefreshReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PSRefreshReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PSRefreshReq));
  PSRefreshRsp_descriptor_ = file->message_type(40);
  static const int PSRefreshRsp_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PSRefreshRsp, errcode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PSRefreshRsp, shopid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PSRefreshRsp, salelist_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PSRefreshRsp, freerefreshcount_),
  };
  PSRefreshRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PSRefreshRsp_descriptor_,
      PSRefreshRsp::default_instance_,
      PSRefreshRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PSRefreshRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PSRefreshRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PSRefreshRsp));
  PSShopsRmvNt_descriptor_ = file->message_type(41);
  static const int PSShopsRmvNt_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PSShopsRmvNt, shopids_),
  };
  PSShopsRmvNt_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PSShopsRmvNt_descriptor_,
      PSShopsRmvNt::default_instance_,
      PSShopsRmvNt_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PSShopsRmvNt, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PSShopsRmvNt, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PSShopsRmvNt));
  PSShopAddNt_descriptor_ = file->message_type(42);
  static const int PSShopAddNt_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PSShopAddNt, shop_),
  };
  PSShopAddNt_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PSShopAddNt_descriptor_,
      PSShopAddNt::default_instance_,
      PSShopAddNt_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PSShopAddNt, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PSShopAddNt, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PSShopAddNt));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_PracticeTrue_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PTErrorRsp_descriptor_, &PTErrorRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PTDataReq_descriptor_, &PTDataReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PTDataRsp_descriptor_, &PTDataRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PTGBXLStateChanged_descriptor_, &PTGBXLStateChanged::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PTStageUpReq_descriptor_, &PTStageUpReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PTStageUpRsp_descriptor_, &PTStageUpRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PTGBEventItemsRecvReq_descriptor_, &PTGBEventItemsRecvReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PTGBEventItemsRecvRsp_descriptor_, &PTGBEventItemsRecvRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PTGBEnterAreaReq_descriptor_, &PTGBEnterAreaReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PTGBEnterAreaRsp_descriptor_, &PTGBEnterAreaRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PTGBXLStartReq_descriptor_, &PTGBXLStartReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PTGBXLStartRsp_descriptor_, &PTGBXLStartRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PTGBEngryAddNT_descriptor_, &PTGBEngryAddNT::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PTgbLvlUpReq_descriptor_, &PTgbLvlUpReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PTgbLvlUpRsp_descriptor_, &PTgbLvlUpRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PTebLvlUpReq_descriptor_, &PTebLvlUpReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PTebLvlUpRsp_descriptor_, &PTebLvlUpRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PTgfActiveReq_descriptor_, &PTgfActiveReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PTgfActiveRsp_descriptor_, &PTgfActiveRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PTgfLvlUpReq_descriptor_, &PTgfLvlUpReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PTgfLvlUpRsp_descriptor_, &PTgfLvlUpRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PTgfStageUpReq_descriptor_, &PTgfStageUpReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PTgfStageUpRsp_descriptor_, &PTgfStageUpRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PTjmLvlUpReq_descriptor_, &PTjmLvlUpReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PTjmLvlUpRsp_descriptor_, &PTjmLvlUpRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PTjmStageUpReq_descriptor_, &PTjmStageUpReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PTjmStageUpRsp_descriptor_, &PTjmStageUpRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PTjmMergeUpReq_descriptor_, &PTjmMergeUpReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PTjmMergeUpRsp_descriptor_, &PTjmMergeUpRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PTlgLvlUpReq_descriptor_, &PTlgLvlUpReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PTlgLvlUpRsp_descriptor_, &PTlgLvlUpRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PTlgPotionUseReq_descriptor_, &PTlgPotionUseReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PTlgPotionUseRsp_descriptor_, &PTlgPotionUseRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PTPurchasedResult_descriptor_, &PTPurchasedResult::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PTPurchaseGfBookResult_descriptor_, &PTPurchaseGfBookResult::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PSDatasReq_descriptor_, &PSDatasReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PSDatasRsp_descriptor_, &PSDatasRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PSPurchaseReq_descriptor_, &PSPurchaseReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PSPurchaseRsp_descriptor_, &PSPurchaseRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PSRefreshReq_descriptor_, &PSRefreshReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PSRefreshRsp_descriptor_, &PSRefreshRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PSShopsRmvNt_descriptor_, &PSShopsRmvNt::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PSShopAddNt_descriptor_, &PSShopAddNt::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_PracticeTrue_2eproto() {
  delete PTErrorRsp::default_instance_;
  delete PTErrorRsp_reflection_;
  delete PTDataReq::default_instance_;
  delete PTDataReq_reflection_;
  delete PTDataRsp::default_instance_;
  delete PTDataRsp_reflection_;
  delete PTGBXLStateChanged::default_instance_;
  delete PTGBXLStateChanged_reflection_;
  delete PTStageUpReq::default_instance_;
  delete PTStageUpReq_reflection_;
  delete PTStageUpRsp::default_instance_;
  delete PTStageUpRsp_reflection_;
  delete PTGBEventItemsRecvReq::default_instance_;
  delete PTGBEventItemsRecvReq_reflection_;
  delete PTGBEventItemsRecvRsp::default_instance_;
  delete PTGBEventItemsRecvRsp_reflection_;
  delete PTGBEnterAreaReq::default_instance_;
  delete PTGBEnterAreaReq_reflection_;
  delete PTGBEnterAreaRsp::default_instance_;
  delete PTGBEnterAreaRsp_reflection_;
  delete PTGBXLStartReq::default_instance_;
  delete PTGBXLStartReq_reflection_;
  delete PTGBXLStartRsp::default_instance_;
  delete PTGBXLStartRsp_reflection_;
  delete PTGBEngryAddNT::default_instance_;
  delete PTGBEngryAddNT_reflection_;
  delete PTgbLvlUpReq::default_instance_;
  delete PTgbLvlUpReq_reflection_;
  delete PTgbLvlUpRsp::default_instance_;
  delete PTgbLvlUpRsp_reflection_;
  delete PTebLvlUpReq::default_instance_;
  delete PTebLvlUpReq_reflection_;
  delete PTebLvlUpRsp::default_instance_;
  delete PTebLvlUpRsp_reflection_;
  delete PTgfActiveReq::default_instance_;
  delete PTgfActiveReq_reflection_;
  delete PTgfActiveRsp::default_instance_;
  delete PTgfActiveRsp_reflection_;
  delete PTgfLvlUpReq::default_instance_;
  delete PTgfLvlUpReq_reflection_;
  delete PTgfLvlUpRsp::default_instance_;
  delete PTgfLvlUpRsp_reflection_;
  delete PTgfStageUpReq::default_instance_;
  delete PTgfStageUpReq_reflection_;
  delete PTgfStageUpRsp::default_instance_;
  delete PTgfStageUpRsp_reflection_;
  delete PTjmLvlUpReq::default_instance_;
  delete PTjmLvlUpReq_reflection_;
  delete PTjmLvlUpRsp::default_instance_;
  delete PTjmLvlUpRsp_reflection_;
  delete PTjmStageUpReq::default_instance_;
  delete PTjmStageUpReq_reflection_;
  delete PTjmStageUpRsp::default_instance_;
  delete PTjmStageUpRsp_reflection_;
  delete PTjmMergeUpReq::default_instance_;
  delete PTjmMergeUpReq_reflection_;
  delete PTjmMergeUpRsp::default_instance_;
  delete PTjmMergeUpRsp_reflection_;
  delete PTlgLvlUpReq::default_instance_;
  delete PTlgLvlUpReq_reflection_;
  delete PTlgLvlUpRsp::default_instance_;
  delete PTlgLvlUpRsp_reflection_;
  delete PTlgPotionUseReq::default_instance_;
  delete PTlgPotionUseReq_reflection_;
  delete PTlgPotionUseRsp::default_instance_;
  delete PTlgPotionUseRsp_reflection_;
  delete PTPurchasedResult::default_instance_;
  delete PTPurchasedResult_reflection_;
  delete PTPurchaseGfBookResult::default_instance_;
  delete PTPurchaseGfBookResult_reflection_;
  delete PSDatasReq::default_instance_;
  delete PSDatasReq_reflection_;
  delete PSDatasRsp::default_instance_;
  delete PSDatasRsp_reflection_;
  delete PSPurchaseReq::default_instance_;
  delete PSPurchaseReq_reflection_;
  delete PSPurchaseRsp::default_instance_;
  delete PSPurchaseRsp_reflection_;
  delete PSRefreshReq::default_instance_;
  delete PSRefreshReq_reflection_;
  delete PSRefreshRsp::default_instance_;
  delete PSRefreshRsp_reflection_;
  delete PSShopsRmvNt::default_instance_;
  delete PSShopsRmvNt_reflection_;
  delete PSShopAddNt::default_instance_;
  delete PSShopAddNt_reflection_;
}

void protobuf_AddDesc_PracticeTrue_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::proto_ff::protobuf_AddDesc_Com_2eproto();
  ::proto_ff::protobuf_AddDesc_ComDefine_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\022PracticeTrue.proto\022\010proto_ff\032\tCom.prot"
    "o\032\017ComDefine.proto\"\035\n\nPTErrorRsp\022\017\n\007errc"
    "ode\030\001 \002(\r\"\013\n\tPTDataReq\"K\n\tPTDataRsp\022+\n\005d"
    "atas\030\001 \002(\0132\034.proto_ff.PracticeTrueDBData"
    "\022\021\n\tgbxlstate\030\002 \002(\r\"\'\n\022PTGBXLStateChange"
    "d\022\021\n\tgbxlstate\030\001 \002(\r\"\016\n\014PTStageUpReq\"L\n\014"
    "PTStageUpRsp\022\021\n\tdjSuccess\030\001 \002(\r\022\032\n\022djFai"
    "lInvigoration\030\002 \002(\r\022\r\n\005level\030\003 \001(\r\"\027\n\025PT"
    "GBEventItemsRecvReq\"F\n\025PTGBEventItemsRec"
    "vRsp\022-\n\014gbEventItems\030\001 \003(\0132\027.proto_ff.PT"
    "GBEventItem\"\022\n\020PTGBEnterAreaReq\"S\n\020PTGBE"
    "nterAreaRsp\022\027\n\017enterAreaResult\030\001 \002(\r\022\016\n\006"
    "gbArea\030\002 \001(\r\022\026\n\016gbXLRemainTime\030\003 \001(\004\"\020\n\016"
    "PTGBXLStartReq\"D\n\016PTGBXLStartRsp\022\032\n\022gbXL"
    "StartResultRsp\030\001 \002(\r\022\026\n\016gbXLRemainTime\030\002"
    " \002(\r\"\246\001\n\016PTGBEngryAddNT\022\023\n\013gbEnergyAdd\030\001"
    " \002(\004\022\021\n\tgbCritAdd\030\002 \002(\004\022\020\n\010gbEnergy\030\003 \002("
    "\004\022+\n\013gbEventsLog\030\004 \003(\0132\026.proto_ff.PTGBEv"
    "entLog\022-\n\014gbEventItems\030\005 \003(\0132\027.proto_ff."
    "PTGBEventItem\"\016\n\014PTgbLvlUpReq\"H\n\014PTgbLvl"
    "UpRsp\022\025\n\rgbLvlUpCostXW\030\001 \002(\r\022\017\n\007gbLevel\030"
    "\002 \002(\r\022\020\n\010gbEnergy\030\003 \002(\r\"\016\n\014PTebLvlUpReq\""
    "\266\001\n\014PTebLvlUpRsp\022\025\n\rebLvlUpResult\030\001 \002(\r\022"
    "\025\n\rgbLvlUpCostXW\030\002 \002(\r\022\020\n\010gbEnergy\030\003 \002(\r"
    "\022\017\n\007ebLevel\030\004 \001(\r\022\035\n\025ebFlyFailInvigorati"
    "on\030\005 \001(\r\022\017\n\007lgTypes\030\006 \003(\r\022\020\n\010lgPoints\030\007 "
    "\003(\r\022\023\n\013lgPointsAdd\030\010 \003(\r\"\037\n\rPTgfActiveRe"
    "q\022\016\n\006gfType\030\001 \002(\r\"F\n\rPTgfActiveRsp\022\026\n\016gf"
    "ActiveResult\030\001 \002(\r\022\016\n\006gfType\030\002 \002(\r\022\r\n\005gf"
    "Lvl\030\003 \002(\r\"\036\n\014PTgfLvlUpReq\022\016\n\006gfType\030\001 \002("
    "\r\"V\n\014PTgfLvlUpRsp\022\025\n\rgfLvlUpResult\030\001 \002(\r"
    "\022\016\n\006gfType\030\002 \002(\r\022\r\n\005gfLvl\030\003 \002(\r\022\020\n\010gbEne"
    "rgy\030\004 \002(\r\" \n\016PTgfStageUpReq\022\016\n\006gfType\030\001 "
    "\002(\r\"J\n\016PTgfStageUpRsp\022\027\n\017gfStageUpResult"
    "\030\001 \002(\r\022\016\n\006gfType\030\002 \002(\r\022\017\n\007gfStage\030\003 \002(\r\""
    "\036\n\014PTjmLvlUpReq\022\016\n\006jmType\030\001 \002(\r\"N\n\014PTjmL"
    "vlUpRsp\022\017\n\007success\030\001 \002(\010\022\016\n\006jmType\030\002 \001(\r"
    "\022\013\n\003lvl\030\003 \001(\r\022\020\n\010gbEnergy\030\004 \001(\004\" \n\016PTjmS"
    "tageUpReq\022\016\n\006jmType\030\001 \002(\r\"q\n\016PTjmStageUp"
    "Rsp\022\r\n\005error\030\001 \002(\r\022\016\n\006jmType\030\002 \001(\r\022\r\n\005st"
    "age\030\003 \001(\r\022\016\n\006gfType\030\004 \001(\r\022!\n\031jmStageUpFa"
    "ilInvigoration\030\005 \001(\r\"\020\n\016PTjmMergeUpReq\"["
    "\n\016PTjmMergeUpRsp\022\r\n\005error\030\001 \002(\r\022\022\n\njmMer"
    "geLvl\030\002 \001(\r\022\016\n\006jmType\030\003 \001(\r\022\026\n\016jmNeedSta"
    "geLvl\030\004 \001(\r\"\036\n\014PTlgLvlUpReq\022\016\n\006lgType\030\001 "
    "\002(\r\"`\n\014PTlgLvlUpRsp\022\r\n\005error\030\001 \002(\r\022\016\n\006lg"
    "Type\030\002 \001(\r\022\r\n\005lgLvl\030\003 \001(\r\022\020\n\010lgPoints\030\004 "
    "\001(\r\022\020\n\010gbEnergy\030\005 \001(\004\"\"\n\020PTlgPotionUseRe"
    "q\022\016\n\006itemId\030\001 \002(\004\"J\n\020PTlgPotionUseRsp\022\017\n"
    "\007lgTypes\030\001 \003(\r\022\020\n\010lgPoints\030\002 \003(\r\022\023\n\013lgPo"
    "intsAdd\030\003 \003(\r\"\277\002\n\021PTPurchasedResult\0223\n\017p"
    "urchasedRecord\030\001 \002(\0132\032.proto_ff.PTPurcha"
    "seRecord\022\023\n\013gbXLForever\030\002 \001(\r\022\020\n\010gbXWPAd"
    "d\030\003 \001(\r\022\030\n\020gbEnergyCritRate\030\004 \001(\r\022\027\n\017gbX"
    "LEventXWPAdd\030\005 \001(\r\022\034\n\024gbXLEventGetItemRa"
    "te\030\006 \001(\r\022\023\n\013ebLvlUpRate\030\007 \001(\r\022\024\n\014ebFlyRa"
    "teAdd\030\010 \001(\r\022 \n\030ebFlyFailInvigorationAdd\030"
    "\t \001(\r\022\026\n\016jmLvlUpRateAdd\030\n \001(\r\022\030\n\020jmStage"
    "UpRateAdd\030\013 \001(\r\"P\n\026PTPurchaseGfBookResul"
    "t\022\017\n\007success\030\001 \002(\r\022\016\n\006gfType\030\002 \002(\r\022\025\n\rpu"
    "rchasedTime\030\003 \002(\004\"\014\n\nPSDatasReq\".\n\nPSDat"
    "asRsp\022 \n\005datas\030\001 \002(\0132\021.proto_ff.PSDatas\""
    "0\n\rPSPurchaseReq\022\016\n\006shopId\030\001 \002(\r\022\017\n\007good"
    "sId\030\002 \002(\r\"c\n\rPSPurchaseRsp\022\017\n\007errcode\030\001 "
    "\002(\r\022\016\n\006shopId\030\002 \001(\r\022\017\n\007goodsId\030\003 \001(\r\022\016\n\006"
    "amount\030\004 \001(\r\022\020\n\010shopTime\030\005 \001(\004\"\036\n\014PSRefr"
    "eshReq\022\016\n\006shopId\030\001 \002(\r\"o\n\014PSRefreshRsp\022\017"
    "\n\007errcode\030\001 \002(\r\022\016\n\006shopId\030\002 \001(\r\022$\n\010saleL"
    "ist\030\003 \003(\0132\022.proto_ff.PSDGoods\022\030\n\020freeRef"
    "reshCount\030\004 \001(\r\"\037\n\014PSShopsRmvNt\022\017\n\007shopI"
    "ds\030\001 \003(\r\".\n\013PSShopAddNt\022\037\n\004shop\030\001 \002(\0132\021."
    "proto_ff.PSDShop", 2856);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "PracticeTrue.proto", &protobuf_RegisterTypes);
  PTErrorRsp::default_instance_ = new PTErrorRsp();
  PTDataReq::default_instance_ = new PTDataReq();
  PTDataRsp::default_instance_ = new PTDataRsp();
  PTGBXLStateChanged::default_instance_ = new PTGBXLStateChanged();
  PTStageUpReq::default_instance_ = new PTStageUpReq();
  PTStageUpRsp::default_instance_ = new PTStageUpRsp();
  PTGBEventItemsRecvReq::default_instance_ = new PTGBEventItemsRecvReq();
  PTGBEventItemsRecvRsp::default_instance_ = new PTGBEventItemsRecvRsp();
  PTGBEnterAreaReq::default_instance_ = new PTGBEnterAreaReq();
  PTGBEnterAreaRsp::default_instance_ = new PTGBEnterAreaRsp();
  PTGBXLStartReq::default_instance_ = new PTGBXLStartReq();
  PTGBXLStartRsp::default_instance_ = new PTGBXLStartRsp();
  PTGBEngryAddNT::default_instance_ = new PTGBEngryAddNT();
  PTgbLvlUpReq::default_instance_ = new PTgbLvlUpReq();
  PTgbLvlUpRsp::default_instance_ = new PTgbLvlUpRsp();
  PTebLvlUpReq::default_instance_ = new PTebLvlUpReq();
  PTebLvlUpRsp::default_instance_ = new PTebLvlUpRsp();
  PTgfActiveReq::default_instance_ = new PTgfActiveReq();
  PTgfActiveRsp::default_instance_ = new PTgfActiveRsp();
  PTgfLvlUpReq::default_instance_ = new PTgfLvlUpReq();
  PTgfLvlUpRsp::default_instance_ = new PTgfLvlUpRsp();
  PTgfStageUpReq::default_instance_ = new PTgfStageUpReq();
  PTgfStageUpRsp::default_instance_ = new PTgfStageUpRsp();
  PTjmLvlUpReq::default_instance_ = new PTjmLvlUpReq();
  PTjmLvlUpRsp::default_instance_ = new PTjmLvlUpRsp();
  PTjmStageUpReq::default_instance_ = new PTjmStageUpReq();
  PTjmStageUpRsp::default_instance_ = new PTjmStageUpRsp();
  PTjmMergeUpReq::default_instance_ = new PTjmMergeUpReq();
  PTjmMergeUpRsp::default_instance_ = new PTjmMergeUpRsp();
  PTlgLvlUpReq::default_instance_ = new PTlgLvlUpReq();
  PTlgLvlUpRsp::default_instance_ = new PTlgLvlUpRsp();
  PTlgPotionUseReq::default_instance_ = new PTlgPotionUseReq();
  PTlgPotionUseRsp::default_instance_ = new PTlgPotionUseRsp();
  PTPurchasedResult::default_instance_ = new PTPurchasedResult();
  PTPurchaseGfBookResult::default_instance_ = new PTPurchaseGfBookResult();
  PSDatasReq::default_instance_ = new PSDatasReq();
  PSDatasRsp::default_instance_ = new PSDatasRsp();
  PSPurchaseReq::default_instance_ = new PSPurchaseReq();
  PSPurchaseRsp::default_instance_ = new PSPurchaseRsp();
  PSRefreshReq::default_instance_ = new PSRefreshReq();
  PSRefreshRsp::default_instance_ = new PSRefreshRsp();
  PSShopsRmvNt::default_instance_ = new PSShopsRmvNt();
  PSShopAddNt::default_instance_ = new PSShopAddNt();
  PTErrorRsp::default_instance_->InitAsDefaultInstance();
  PTDataReq::default_instance_->InitAsDefaultInstance();
  PTDataRsp::default_instance_->InitAsDefaultInstance();
  PTGBXLStateChanged::default_instance_->InitAsDefaultInstance();
  PTStageUpReq::default_instance_->InitAsDefaultInstance();
  PTStageUpRsp::default_instance_->InitAsDefaultInstance();
  PTGBEventItemsRecvReq::default_instance_->InitAsDefaultInstance();
  PTGBEventItemsRecvRsp::default_instance_->InitAsDefaultInstance();
  PTGBEnterAreaReq::default_instance_->InitAsDefaultInstance();
  PTGBEnterAreaRsp::default_instance_->InitAsDefaultInstance();
  PTGBXLStartReq::default_instance_->InitAsDefaultInstance();
  PTGBXLStartRsp::default_instance_->InitAsDefaultInstance();
  PTGBEngryAddNT::default_instance_->InitAsDefaultInstance();
  PTgbLvlUpReq::default_instance_->InitAsDefaultInstance();
  PTgbLvlUpRsp::default_instance_->InitAsDefaultInstance();
  PTebLvlUpReq::default_instance_->InitAsDefaultInstance();
  PTebLvlUpRsp::default_instance_->InitAsDefaultInstance();
  PTgfActiveReq::default_instance_->InitAsDefaultInstance();
  PTgfActiveRsp::default_instance_->InitAsDefaultInstance();
  PTgfLvlUpReq::default_instance_->InitAsDefaultInstance();
  PTgfLvlUpRsp::default_instance_->InitAsDefaultInstance();
  PTgfStageUpReq::default_instance_->InitAsDefaultInstance();
  PTgfStageUpRsp::default_instance_->InitAsDefaultInstance();
  PTjmLvlUpReq::default_instance_->InitAsDefaultInstance();
  PTjmLvlUpRsp::default_instance_->InitAsDefaultInstance();
  PTjmStageUpReq::default_instance_->InitAsDefaultInstance();
  PTjmStageUpRsp::default_instance_->InitAsDefaultInstance();
  PTjmMergeUpReq::default_instance_->InitAsDefaultInstance();
  PTjmMergeUpRsp::default_instance_->InitAsDefaultInstance();
  PTlgLvlUpReq::default_instance_->InitAsDefaultInstance();
  PTlgLvlUpRsp::default_instance_->InitAsDefaultInstance();
  PTlgPotionUseReq::default_instance_->InitAsDefaultInstance();
  PTlgPotionUseRsp::default_instance_->InitAsDefaultInstance();
  PTPurchasedResult::default_instance_->InitAsDefaultInstance();
  PTPurchaseGfBookResult::default_instance_->InitAsDefaultInstance();
  PSDatasReq::default_instance_->InitAsDefaultInstance();
  PSDatasRsp::default_instance_->InitAsDefaultInstance();
  PSPurchaseReq::default_instance_->InitAsDefaultInstance();
  PSPurchaseRsp::default_instance_->InitAsDefaultInstance();
  PSRefreshReq::default_instance_->InitAsDefaultInstance();
  PSRefreshRsp::default_instance_->InitAsDefaultInstance();
  PSShopsRmvNt::default_instance_->InitAsDefaultInstance();
  PSShopAddNt::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_PracticeTrue_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_PracticeTrue_2eproto {
  StaticDescriptorInitializer_PracticeTrue_2eproto() {
    protobuf_AddDesc_PracticeTrue_2eproto();
  }
} static_descriptor_initializer_PracticeTrue_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int PTErrorRsp::kErrcodeFieldNumber;
#endif  // !_MSC_VER

PTErrorRsp::PTErrorRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void PTErrorRsp::InitAsDefaultInstance() {
}

PTErrorRsp::PTErrorRsp(const PTErrorRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void PTErrorRsp::SharedCtor() {
  _cached_size_ = 0;
  errcode_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PTErrorRsp::~PTErrorRsp() {
  SharedDtor();
}

void PTErrorRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PTErrorRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PTErrorRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PTErrorRsp_descriptor_;
}

const PTErrorRsp& PTErrorRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_PracticeTrue_2eproto();
  return *default_instance_;
}

PTErrorRsp* PTErrorRsp::default_instance_ = NULL;

PTErrorRsp* PTErrorRsp::New() const {
  return new PTErrorRsp;
}

void PTErrorRsp::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    errcode_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PTErrorRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 errcode = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &errcode_)));
          set_has_errcode();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PTErrorRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint32 errcode = 1;
  if (has_errcode()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->errcode(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PTErrorRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint32 errcode = 1;
  if (has_errcode()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->errcode(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PTErrorRsp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 errcode = 1;
    if (has_errcode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->errcode());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PTErrorRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PTErrorRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PTErrorRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PTErrorRsp::MergeFrom(const PTErrorRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_errcode()) {
      set_errcode(from.errcode());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PTErrorRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PTErrorRsp::CopyFrom(const PTErrorRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PTErrorRsp::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void PTErrorRsp::Swap(PTErrorRsp* other) {
  if (other != this) {
    std::swap(errcode_, other->errcode_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PTErrorRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PTErrorRsp_descriptor_;
  metadata.reflection = PTErrorRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

PTDataReq::PTDataReq()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void PTDataReq::InitAsDefaultInstance() {
}

PTDataReq::PTDataReq(const PTDataReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void PTDataReq::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PTDataReq::~PTDataReq() {
  SharedDtor();
}

void PTDataReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PTDataReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PTDataReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PTDataReq_descriptor_;
}

const PTDataReq& PTDataReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_PracticeTrue_2eproto();
  return *default_instance_;
}

PTDataReq* PTDataReq::default_instance_ = NULL;

PTDataReq* PTDataReq::New() const {
  return new PTDataReq;
}

void PTDataReq::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PTDataReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void PTDataReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PTDataReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PTDataReq::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PTDataReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PTDataReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PTDataReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PTDataReq::MergeFrom(const PTDataReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PTDataReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PTDataReq::CopyFrom(const PTDataReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PTDataReq::IsInitialized() const {

  return true;
}

void PTDataReq::Swap(PTDataReq* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PTDataReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PTDataReq_descriptor_;
  metadata.reflection = PTDataReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PTDataRsp::kDatasFieldNumber;
const int PTDataRsp::kGbxlstateFieldNumber;
#endif  // !_MSC_VER

PTDataRsp::PTDataRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void PTDataRsp::InitAsDefaultInstance() {
  datas_ = const_cast< ::proto_ff::PracticeTrueDBData*>(&::proto_ff::PracticeTrueDBData::default_instance());
}

PTDataRsp::PTDataRsp(const PTDataRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void PTDataRsp::SharedCtor() {
  _cached_size_ = 0;
  datas_ = NULL;
  gbxlstate_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PTDataRsp::~PTDataRsp() {
  SharedDtor();
}

void PTDataRsp::SharedDtor() {
  if (this != default_instance_) {
    delete datas_;
  }
}

void PTDataRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PTDataRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PTDataRsp_descriptor_;
}

const PTDataRsp& PTDataRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_PracticeTrue_2eproto();
  return *default_instance_;
}

PTDataRsp* PTDataRsp::default_instance_ = NULL;

PTDataRsp* PTDataRsp::New() const {
  return new PTDataRsp;
}

void PTDataRsp::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_datas()) {
      if (datas_ != NULL) datas_->::proto_ff::PracticeTrueDBData::Clear();
    }
    gbxlstate_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PTDataRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .proto_ff.PracticeTrueDBData datas = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_datas()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_gbxlstate;
        break;
      }

      // required uint32 gbxlstate = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_gbxlstate:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &gbxlstate_)));
          set_has_gbxlstate();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PTDataRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .proto_ff.PracticeTrueDBData datas = 1;
  if (has_datas()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->datas(), output);
  }

  // required uint32 gbxlstate = 2;
  if (has_gbxlstate()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->gbxlstate(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PTDataRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .proto_ff.PracticeTrueDBData datas = 1;
  if (has_datas()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->datas(), target);
  }

  // required uint32 gbxlstate = 2;
  if (has_gbxlstate()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->gbxlstate(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PTDataRsp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .proto_ff.PracticeTrueDBData datas = 1;
    if (has_datas()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->datas());
    }

    // required uint32 gbxlstate = 2;
    if (has_gbxlstate()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->gbxlstate());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PTDataRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PTDataRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PTDataRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PTDataRsp::MergeFrom(const PTDataRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_datas()) {
      mutable_datas()->::proto_ff::PracticeTrueDBData::MergeFrom(from.datas());
    }
    if (from.has_gbxlstate()) {
      set_gbxlstate(from.gbxlstate());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PTDataRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PTDataRsp::CopyFrom(const PTDataRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PTDataRsp::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  if (has_datas()) {
    if (!this->datas().IsInitialized()) return false;
  }
  return true;
}

void PTDataRsp::Swap(PTDataRsp* other) {
  if (other != this) {
    std::swap(datas_, other->datas_);
    std::swap(gbxlstate_, other->gbxlstate_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PTDataRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PTDataRsp_descriptor_;
  metadata.reflection = PTDataRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PTGBXLStateChanged::kGbxlstateFieldNumber;
#endif  // !_MSC_VER

PTGBXLStateChanged::PTGBXLStateChanged()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void PTGBXLStateChanged::InitAsDefaultInstance() {
}

PTGBXLStateChanged::PTGBXLStateChanged(const PTGBXLStateChanged& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void PTGBXLStateChanged::SharedCtor() {
  _cached_size_ = 0;
  gbxlstate_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PTGBXLStateChanged::~PTGBXLStateChanged() {
  SharedDtor();
}

void PTGBXLStateChanged::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PTGBXLStateChanged::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PTGBXLStateChanged::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PTGBXLStateChanged_descriptor_;
}

const PTGBXLStateChanged& PTGBXLStateChanged::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_PracticeTrue_2eproto();
  return *default_instance_;
}

PTGBXLStateChanged* PTGBXLStateChanged::default_instance_ = NULL;

PTGBXLStateChanged* PTGBXLStateChanged::New() const {
  return new PTGBXLStateChanged;
}

void PTGBXLStateChanged::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    gbxlstate_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PTGBXLStateChanged::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 gbxlstate = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &gbxlstate_)));
          set_has_gbxlstate();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PTGBXLStateChanged::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint32 gbxlstate = 1;
  if (has_gbxlstate()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->gbxlstate(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PTGBXLStateChanged::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint32 gbxlstate = 1;
  if (has_gbxlstate()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->gbxlstate(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PTGBXLStateChanged::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 gbxlstate = 1;
    if (has_gbxlstate()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->gbxlstate());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PTGBXLStateChanged::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PTGBXLStateChanged* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PTGBXLStateChanged*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PTGBXLStateChanged::MergeFrom(const PTGBXLStateChanged& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_gbxlstate()) {
      set_gbxlstate(from.gbxlstate());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PTGBXLStateChanged::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PTGBXLStateChanged::CopyFrom(const PTGBXLStateChanged& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PTGBXLStateChanged::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void PTGBXLStateChanged::Swap(PTGBXLStateChanged* other) {
  if (other != this) {
    std::swap(gbxlstate_, other->gbxlstate_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PTGBXLStateChanged::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PTGBXLStateChanged_descriptor_;
  metadata.reflection = PTGBXLStateChanged_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

PTStageUpReq::PTStageUpReq()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void PTStageUpReq::InitAsDefaultInstance() {
}

PTStageUpReq::PTStageUpReq(const PTStageUpReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void PTStageUpReq::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PTStageUpReq::~PTStageUpReq() {
  SharedDtor();
}

void PTStageUpReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PTStageUpReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PTStageUpReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PTStageUpReq_descriptor_;
}

const PTStageUpReq& PTStageUpReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_PracticeTrue_2eproto();
  return *default_instance_;
}

PTStageUpReq* PTStageUpReq::default_instance_ = NULL;

PTStageUpReq* PTStageUpReq::New() const {
  return new PTStageUpReq;
}

void PTStageUpReq::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PTStageUpReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void PTStageUpReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PTStageUpReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PTStageUpReq::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PTStageUpReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PTStageUpReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PTStageUpReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PTStageUpReq::MergeFrom(const PTStageUpReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PTStageUpReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PTStageUpReq::CopyFrom(const PTStageUpReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PTStageUpReq::IsInitialized() const {

  return true;
}

void PTStageUpReq::Swap(PTStageUpReq* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PTStageUpReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PTStageUpReq_descriptor_;
  metadata.reflection = PTStageUpReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PTStageUpRsp::kDjSuccessFieldNumber;
const int PTStageUpRsp::kDjFailInvigorationFieldNumber;
const int PTStageUpRsp::kLevelFieldNumber;
#endif  // !_MSC_VER

PTStageUpRsp::PTStageUpRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void PTStageUpRsp::InitAsDefaultInstance() {
}

PTStageUpRsp::PTStageUpRsp(const PTStageUpRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void PTStageUpRsp::SharedCtor() {
  _cached_size_ = 0;
  djsuccess_ = 0u;
  djfailinvigoration_ = 0u;
  level_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PTStageUpRsp::~PTStageUpRsp() {
  SharedDtor();
}

void PTStageUpRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PTStageUpRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PTStageUpRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PTStageUpRsp_descriptor_;
}

const PTStageUpRsp& PTStageUpRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_PracticeTrue_2eproto();
  return *default_instance_;
}

PTStageUpRsp* PTStageUpRsp::default_instance_ = NULL;

PTStageUpRsp* PTStageUpRsp::New() const {
  return new PTStageUpRsp;
}

void PTStageUpRsp::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    djsuccess_ = 0u;
    djfailinvigoration_ = 0u;
    level_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PTStageUpRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 djSuccess = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &djsuccess_)));
          set_has_djsuccess();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_djFailInvigoration;
        break;
      }

      // required uint32 djFailInvigoration = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_djFailInvigoration:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &djfailinvigoration_)));
          set_has_djfailinvigoration();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_level;
        break;
      }

      // optional uint32 level = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_level:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &level_)));
          set_has_level();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PTStageUpRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint32 djSuccess = 1;
  if (has_djsuccess()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->djsuccess(), output);
  }

  // required uint32 djFailInvigoration = 2;
  if (has_djfailinvigoration()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->djfailinvigoration(), output);
  }

  // optional uint32 level = 3;
  if (has_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->level(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PTStageUpRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint32 djSuccess = 1;
  if (has_djsuccess()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->djsuccess(), target);
  }

  // required uint32 djFailInvigoration = 2;
  if (has_djfailinvigoration()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->djfailinvigoration(), target);
  }

  // optional uint32 level = 3;
  if (has_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->level(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PTStageUpRsp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 djSuccess = 1;
    if (has_djsuccess()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->djsuccess());
    }

    // required uint32 djFailInvigoration = 2;
    if (has_djfailinvigoration()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->djfailinvigoration());
    }

    // optional uint32 level = 3;
    if (has_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->level());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PTStageUpRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PTStageUpRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PTStageUpRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PTStageUpRsp::MergeFrom(const PTStageUpRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_djsuccess()) {
      set_djsuccess(from.djsuccess());
    }
    if (from.has_djfailinvigoration()) {
      set_djfailinvigoration(from.djfailinvigoration());
    }
    if (from.has_level()) {
      set_level(from.level());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PTStageUpRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PTStageUpRsp::CopyFrom(const PTStageUpRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PTStageUpRsp::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void PTStageUpRsp::Swap(PTStageUpRsp* other) {
  if (other != this) {
    std::swap(djsuccess_, other->djsuccess_);
    std::swap(djfailinvigoration_, other->djfailinvigoration_);
    std::swap(level_, other->level_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PTStageUpRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PTStageUpRsp_descriptor_;
  metadata.reflection = PTStageUpRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

PTGBEventItemsRecvReq::PTGBEventItemsRecvReq()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void PTGBEventItemsRecvReq::InitAsDefaultInstance() {
}

PTGBEventItemsRecvReq::PTGBEventItemsRecvReq(const PTGBEventItemsRecvReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void PTGBEventItemsRecvReq::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PTGBEventItemsRecvReq::~PTGBEventItemsRecvReq() {
  SharedDtor();
}

void PTGBEventItemsRecvReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PTGBEventItemsRecvReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PTGBEventItemsRecvReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PTGBEventItemsRecvReq_descriptor_;
}

const PTGBEventItemsRecvReq& PTGBEventItemsRecvReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_PracticeTrue_2eproto();
  return *default_instance_;
}

PTGBEventItemsRecvReq* PTGBEventItemsRecvReq::default_instance_ = NULL;

PTGBEventItemsRecvReq* PTGBEventItemsRecvReq::New() const {
  return new PTGBEventItemsRecvReq;
}

void PTGBEventItemsRecvReq::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PTGBEventItemsRecvReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void PTGBEventItemsRecvReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PTGBEventItemsRecvReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PTGBEventItemsRecvReq::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PTGBEventItemsRecvReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PTGBEventItemsRecvReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PTGBEventItemsRecvReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PTGBEventItemsRecvReq::MergeFrom(const PTGBEventItemsRecvReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PTGBEventItemsRecvReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PTGBEventItemsRecvReq::CopyFrom(const PTGBEventItemsRecvReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PTGBEventItemsRecvReq::IsInitialized() const {

  return true;
}

void PTGBEventItemsRecvReq::Swap(PTGBEventItemsRecvReq* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PTGBEventItemsRecvReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PTGBEventItemsRecvReq_descriptor_;
  metadata.reflection = PTGBEventItemsRecvReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PTGBEventItemsRecvRsp::kGbEventItemsFieldNumber;
#endif  // !_MSC_VER

PTGBEventItemsRecvRsp::PTGBEventItemsRecvRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void PTGBEventItemsRecvRsp::InitAsDefaultInstance() {
}

PTGBEventItemsRecvRsp::PTGBEventItemsRecvRsp(const PTGBEventItemsRecvRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void PTGBEventItemsRecvRsp::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PTGBEventItemsRecvRsp::~PTGBEventItemsRecvRsp() {
  SharedDtor();
}

void PTGBEventItemsRecvRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PTGBEventItemsRecvRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PTGBEventItemsRecvRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PTGBEventItemsRecvRsp_descriptor_;
}

const PTGBEventItemsRecvRsp& PTGBEventItemsRecvRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_PracticeTrue_2eproto();
  return *default_instance_;
}

PTGBEventItemsRecvRsp* PTGBEventItemsRecvRsp::default_instance_ = NULL;

PTGBEventItemsRecvRsp* PTGBEventItemsRecvRsp::New() const {
  return new PTGBEventItemsRecvRsp;
}

void PTGBEventItemsRecvRsp::Clear() {
  gbeventitems_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PTGBEventItemsRecvRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.PTGBEventItem gbEventItems = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_gbEventItems:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_gbeventitems()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_gbEventItems;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PTGBEventItemsRecvRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.PTGBEventItem gbEventItems = 1;
  for (int i = 0; i < this->gbeventitems_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->gbeventitems(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PTGBEventItemsRecvRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.PTGBEventItem gbEventItems = 1;
  for (int i = 0; i < this->gbeventitems_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->gbeventitems(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PTGBEventItemsRecvRsp::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.PTGBEventItem gbEventItems = 1;
  total_size += 1 * this->gbeventitems_size();
  for (int i = 0; i < this->gbeventitems_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->gbeventitems(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PTGBEventItemsRecvRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PTGBEventItemsRecvRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PTGBEventItemsRecvRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PTGBEventItemsRecvRsp::MergeFrom(const PTGBEventItemsRecvRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  gbeventitems_.MergeFrom(from.gbeventitems_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PTGBEventItemsRecvRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PTGBEventItemsRecvRsp::CopyFrom(const PTGBEventItemsRecvRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PTGBEventItemsRecvRsp::IsInitialized() const {

  for (int i = 0; i < gbeventitems_size(); i++) {
    if (!this->gbeventitems(i).IsInitialized()) return false;
  }
  return true;
}

void PTGBEventItemsRecvRsp::Swap(PTGBEventItemsRecvRsp* other) {
  if (other != this) {
    gbeventitems_.Swap(&other->gbeventitems_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PTGBEventItemsRecvRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PTGBEventItemsRecvRsp_descriptor_;
  metadata.reflection = PTGBEventItemsRecvRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

PTGBEnterAreaReq::PTGBEnterAreaReq()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void PTGBEnterAreaReq::InitAsDefaultInstance() {
}

PTGBEnterAreaReq::PTGBEnterAreaReq(const PTGBEnterAreaReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void PTGBEnterAreaReq::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PTGBEnterAreaReq::~PTGBEnterAreaReq() {
  SharedDtor();
}

void PTGBEnterAreaReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PTGBEnterAreaReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PTGBEnterAreaReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PTGBEnterAreaReq_descriptor_;
}

const PTGBEnterAreaReq& PTGBEnterAreaReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_PracticeTrue_2eproto();
  return *default_instance_;
}

PTGBEnterAreaReq* PTGBEnterAreaReq::default_instance_ = NULL;

PTGBEnterAreaReq* PTGBEnterAreaReq::New() const {
  return new PTGBEnterAreaReq;
}

void PTGBEnterAreaReq::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PTGBEnterAreaReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void PTGBEnterAreaReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PTGBEnterAreaReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PTGBEnterAreaReq::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PTGBEnterAreaReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PTGBEnterAreaReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PTGBEnterAreaReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PTGBEnterAreaReq::MergeFrom(const PTGBEnterAreaReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PTGBEnterAreaReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PTGBEnterAreaReq::CopyFrom(const PTGBEnterAreaReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PTGBEnterAreaReq::IsInitialized() const {

  return true;
}

void PTGBEnterAreaReq::Swap(PTGBEnterAreaReq* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PTGBEnterAreaReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PTGBEnterAreaReq_descriptor_;
  metadata.reflection = PTGBEnterAreaReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PTGBEnterAreaRsp::kEnterAreaResultFieldNumber;
const int PTGBEnterAreaRsp::kGbAreaFieldNumber;
const int PTGBEnterAreaRsp::kGbXLRemainTimeFieldNumber;
#endif  // !_MSC_VER

PTGBEnterAreaRsp::PTGBEnterAreaRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void PTGBEnterAreaRsp::InitAsDefaultInstance() {
}

PTGBEnterAreaRsp::PTGBEnterAreaRsp(const PTGBEnterAreaRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void PTGBEnterAreaRsp::SharedCtor() {
  _cached_size_ = 0;
  enterarearesult_ = 0u;
  gbarea_ = 0u;
  gbxlremaintime_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PTGBEnterAreaRsp::~PTGBEnterAreaRsp() {
  SharedDtor();
}

void PTGBEnterAreaRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PTGBEnterAreaRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PTGBEnterAreaRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PTGBEnterAreaRsp_descriptor_;
}

const PTGBEnterAreaRsp& PTGBEnterAreaRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_PracticeTrue_2eproto();
  return *default_instance_;
}

PTGBEnterAreaRsp* PTGBEnterAreaRsp::default_instance_ = NULL;

PTGBEnterAreaRsp* PTGBEnterAreaRsp::New() const {
  return new PTGBEnterAreaRsp;
}

void PTGBEnterAreaRsp::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    enterarearesult_ = 0u;
    gbarea_ = 0u;
    gbxlremaintime_ = GOOGLE_ULONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PTGBEnterAreaRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 enterAreaResult = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &enterarearesult_)));
          set_has_enterarearesult();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_gbArea;
        break;
      }

      // optional uint32 gbArea = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_gbArea:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &gbarea_)));
          set_has_gbarea();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_gbXLRemainTime;
        break;
      }

      // optional uint64 gbXLRemainTime = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_gbXLRemainTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &gbxlremaintime_)));
          set_has_gbxlremaintime();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PTGBEnterAreaRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint32 enterAreaResult = 1;
  if (has_enterarearesult()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->enterarearesult(), output);
  }

  // optional uint32 gbArea = 2;
  if (has_gbarea()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->gbarea(), output);
  }

  // optional uint64 gbXLRemainTime = 3;
  if (has_gbxlremaintime()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->gbxlremaintime(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PTGBEnterAreaRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint32 enterAreaResult = 1;
  if (has_enterarearesult()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->enterarearesult(), target);
  }

  // optional uint32 gbArea = 2;
  if (has_gbarea()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->gbarea(), target);
  }

  // optional uint64 gbXLRemainTime = 3;
  if (has_gbxlremaintime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->gbxlremaintime(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PTGBEnterAreaRsp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 enterAreaResult = 1;
    if (has_enterarearesult()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->enterarearesult());
    }

    // optional uint32 gbArea = 2;
    if (has_gbarea()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->gbarea());
    }

    // optional uint64 gbXLRemainTime = 3;
    if (has_gbxlremaintime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->gbxlremaintime());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PTGBEnterAreaRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PTGBEnterAreaRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PTGBEnterAreaRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PTGBEnterAreaRsp::MergeFrom(const PTGBEnterAreaRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_enterarearesult()) {
      set_enterarearesult(from.enterarearesult());
    }
    if (from.has_gbarea()) {
      set_gbarea(from.gbarea());
    }
    if (from.has_gbxlremaintime()) {
      set_gbxlremaintime(from.gbxlremaintime());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PTGBEnterAreaRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PTGBEnterAreaRsp::CopyFrom(const PTGBEnterAreaRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PTGBEnterAreaRsp::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void PTGBEnterAreaRsp::Swap(PTGBEnterAreaRsp* other) {
  if (other != this) {
    std::swap(enterarearesult_, other->enterarearesult_);
    std::swap(gbarea_, other->gbarea_);
    std::swap(gbxlremaintime_, other->gbxlremaintime_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PTGBEnterAreaRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PTGBEnterAreaRsp_descriptor_;
  metadata.reflection = PTGBEnterAreaRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

PTGBXLStartReq::PTGBXLStartReq()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void PTGBXLStartReq::InitAsDefaultInstance() {
}

PTGBXLStartReq::PTGBXLStartReq(const PTGBXLStartReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void PTGBXLStartReq::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PTGBXLStartReq::~PTGBXLStartReq() {
  SharedDtor();
}

void PTGBXLStartReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PTGBXLStartReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PTGBXLStartReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PTGBXLStartReq_descriptor_;
}

const PTGBXLStartReq& PTGBXLStartReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_PracticeTrue_2eproto();
  return *default_instance_;
}

PTGBXLStartReq* PTGBXLStartReq::default_instance_ = NULL;

PTGBXLStartReq* PTGBXLStartReq::New() const {
  return new PTGBXLStartReq;
}

void PTGBXLStartReq::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PTGBXLStartReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void PTGBXLStartReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PTGBXLStartReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PTGBXLStartReq::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PTGBXLStartReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PTGBXLStartReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PTGBXLStartReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PTGBXLStartReq::MergeFrom(const PTGBXLStartReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PTGBXLStartReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PTGBXLStartReq::CopyFrom(const PTGBXLStartReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PTGBXLStartReq::IsInitialized() const {

  return true;
}

void PTGBXLStartReq::Swap(PTGBXLStartReq* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PTGBXLStartReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PTGBXLStartReq_descriptor_;
  metadata.reflection = PTGBXLStartReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PTGBXLStartRsp::kGbXLStartResultRspFieldNumber;
const int PTGBXLStartRsp::kGbXLRemainTimeFieldNumber;
#endif  // !_MSC_VER

PTGBXLStartRsp::PTGBXLStartRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void PTGBXLStartRsp::InitAsDefaultInstance() {
}

PTGBXLStartRsp::PTGBXLStartRsp(const PTGBXLStartRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void PTGBXLStartRsp::SharedCtor() {
  _cached_size_ = 0;
  gbxlstartresultrsp_ = 0u;
  gbxlremaintime_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PTGBXLStartRsp::~PTGBXLStartRsp() {
  SharedDtor();
}

void PTGBXLStartRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PTGBXLStartRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PTGBXLStartRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PTGBXLStartRsp_descriptor_;
}

const PTGBXLStartRsp& PTGBXLStartRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_PracticeTrue_2eproto();
  return *default_instance_;
}

PTGBXLStartRsp* PTGBXLStartRsp::default_instance_ = NULL;

PTGBXLStartRsp* PTGBXLStartRsp::New() const {
  return new PTGBXLStartRsp;
}

void PTGBXLStartRsp::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    gbxlstartresultrsp_ = 0u;
    gbxlremaintime_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PTGBXLStartRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 gbXLStartResultRsp = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &gbxlstartresultrsp_)));
          set_has_gbxlstartresultrsp();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_gbXLRemainTime;
        break;
      }

      // required uint32 gbXLRemainTime = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_gbXLRemainTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &gbxlremaintime_)));
          set_has_gbxlremaintime();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PTGBXLStartRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint32 gbXLStartResultRsp = 1;
  if (has_gbxlstartresultrsp()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->gbxlstartresultrsp(), output);
  }

  // required uint32 gbXLRemainTime = 2;
  if (has_gbxlremaintime()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->gbxlremaintime(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PTGBXLStartRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint32 gbXLStartResultRsp = 1;
  if (has_gbxlstartresultrsp()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->gbxlstartresultrsp(), target);
  }

  // required uint32 gbXLRemainTime = 2;
  if (has_gbxlremaintime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->gbxlremaintime(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PTGBXLStartRsp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 gbXLStartResultRsp = 1;
    if (has_gbxlstartresultrsp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->gbxlstartresultrsp());
    }

    // required uint32 gbXLRemainTime = 2;
    if (has_gbxlremaintime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->gbxlremaintime());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PTGBXLStartRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PTGBXLStartRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PTGBXLStartRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PTGBXLStartRsp::MergeFrom(const PTGBXLStartRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_gbxlstartresultrsp()) {
      set_gbxlstartresultrsp(from.gbxlstartresultrsp());
    }
    if (from.has_gbxlremaintime()) {
      set_gbxlremaintime(from.gbxlremaintime());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PTGBXLStartRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PTGBXLStartRsp::CopyFrom(const PTGBXLStartRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PTGBXLStartRsp::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void PTGBXLStartRsp::Swap(PTGBXLStartRsp* other) {
  if (other != this) {
    std::swap(gbxlstartresultrsp_, other->gbxlstartresultrsp_);
    std::swap(gbxlremaintime_, other->gbxlremaintime_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PTGBXLStartRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PTGBXLStartRsp_descriptor_;
  metadata.reflection = PTGBXLStartRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PTGBEngryAddNT::kGbEnergyAddFieldNumber;
const int PTGBEngryAddNT::kGbCritAddFieldNumber;
const int PTGBEngryAddNT::kGbEnergyFieldNumber;
const int PTGBEngryAddNT::kGbEventsLogFieldNumber;
const int PTGBEngryAddNT::kGbEventItemsFieldNumber;
#endif  // !_MSC_VER

PTGBEngryAddNT::PTGBEngryAddNT()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void PTGBEngryAddNT::InitAsDefaultInstance() {
}

PTGBEngryAddNT::PTGBEngryAddNT(const PTGBEngryAddNT& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void PTGBEngryAddNT::SharedCtor() {
  _cached_size_ = 0;
  gbenergyadd_ = GOOGLE_ULONGLONG(0);
  gbcritadd_ = GOOGLE_ULONGLONG(0);
  gbenergy_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PTGBEngryAddNT::~PTGBEngryAddNT() {
  SharedDtor();
}

void PTGBEngryAddNT::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PTGBEngryAddNT::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PTGBEngryAddNT::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PTGBEngryAddNT_descriptor_;
}

const PTGBEngryAddNT& PTGBEngryAddNT::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_PracticeTrue_2eproto();
  return *default_instance_;
}

PTGBEngryAddNT* PTGBEngryAddNT::default_instance_ = NULL;

PTGBEngryAddNT* PTGBEngryAddNT::New() const {
  return new PTGBEngryAddNT;
}

void PTGBEngryAddNT::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    gbenergyadd_ = GOOGLE_ULONGLONG(0);
    gbcritadd_ = GOOGLE_ULONGLONG(0);
    gbenergy_ = GOOGLE_ULONGLONG(0);
  }
  gbeventslog_.Clear();
  gbeventitems_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PTGBEngryAddNT::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint64 gbEnergyAdd = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &gbenergyadd_)));
          set_has_gbenergyadd();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_gbCritAdd;
        break;
      }

      // required uint64 gbCritAdd = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_gbCritAdd:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &gbcritadd_)));
          set_has_gbcritadd();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_gbEnergy;
        break;
      }

      // required uint64 gbEnergy = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_gbEnergy:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &gbenergy_)));
          set_has_gbenergy();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_gbEventsLog;
        break;
      }

      // repeated .proto_ff.PTGBEventLog gbEventsLog = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_gbEventsLog:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_gbeventslog()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_gbEventsLog;
        if (input->ExpectTag(42)) goto parse_gbEventItems;
        break;
      }

      // repeated .proto_ff.PTGBEventItem gbEventItems = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_gbEventItems:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_gbeventitems()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_gbEventItems;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PTGBEngryAddNT::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint64 gbEnergyAdd = 1;
  if (has_gbenergyadd()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->gbenergyadd(), output);
  }

  // required uint64 gbCritAdd = 2;
  if (has_gbcritadd()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->gbcritadd(), output);
  }

  // required uint64 gbEnergy = 3;
  if (has_gbenergy()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->gbenergy(), output);
  }

  // repeated .proto_ff.PTGBEventLog gbEventsLog = 4;
  for (int i = 0; i < this->gbeventslog_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->gbeventslog(i), output);
  }

  // repeated .proto_ff.PTGBEventItem gbEventItems = 5;
  for (int i = 0; i < this->gbeventitems_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->gbeventitems(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PTGBEngryAddNT::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint64 gbEnergyAdd = 1;
  if (has_gbenergyadd()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->gbenergyadd(), target);
  }

  // required uint64 gbCritAdd = 2;
  if (has_gbcritadd()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->gbcritadd(), target);
  }

  // required uint64 gbEnergy = 3;
  if (has_gbenergy()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->gbenergy(), target);
  }

  // repeated .proto_ff.PTGBEventLog gbEventsLog = 4;
  for (int i = 0; i < this->gbeventslog_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->gbeventslog(i), target);
  }

  // repeated .proto_ff.PTGBEventItem gbEventItems = 5;
  for (int i = 0; i < this->gbeventitems_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->gbeventitems(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PTGBEngryAddNT::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint64 gbEnergyAdd = 1;
    if (has_gbenergyadd()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->gbenergyadd());
    }

    // required uint64 gbCritAdd = 2;
    if (has_gbcritadd()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->gbcritadd());
    }

    // required uint64 gbEnergy = 3;
    if (has_gbenergy()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->gbenergy());
    }

  }
  // repeated .proto_ff.PTGBEventLog gbEventsLog = 4;
  total_size += 1 * this->gbeventslog_size();
  for (int i = 0; i < this->gbeventslog_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->gbeventslog(i));
  }

  // repeated .proto_ff.PTGBEventItem gbEventItems = 5;
  total_size += 1 * this->gbeventitems_size();
  for (int i = 0; i < this->gbeventitems_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->gbeventitems(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PTGBEngryAddNT::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PTGBEngryAddNT* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PTGBEngryAddNT*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PTGBEngryAddNT::MergeFrom(const PTGBEngryAddNT& from) {
  GOOGLE_CHECK_NE(&from, this);
  gbeventslog_.MergeFrom(from.gbeventslog_);
  gbeventitems_.MergeFrom(from.gbeventitems_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_gbenergyadd()) {
      set_gbenergyadd(from.gbenergyadd());
    }
    if (from.has_gbcritadd()) {
      set_gbcritadd(from.gbcritadd());
    }
    if (from.has_gbenergy()) {
      set_gbenergy(from.gbenergy());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PTGBEngryAddNT::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PTGBEngryAddNT::CopyFrom(const PTGBEngryAddNT& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PTGBEngryAddNT::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  for (int i = 0; i < gbeventslog_size(); i++) {
    if (!this->gbeventslog(i).IsInitialized()) return false;
  }
  for (int i = 0; i < gbeventitems_size(); i++) {
    if (!this->gbeventitems(i).IsInitialized()) return false;
  }
  return true;
}

void PTGBEngryAddNT::Swap(PTGBEngryAddNT* other) {
  if (other != this) {
    std::swap(gbenergyadd_, other->gbenergyadd_);
    std::swap(gbcritadd_, other->gbcritadd_);
    std::swap(gbenergy_, other->gbenergy_);
    gbeventslog_.Swap(&other->gbeventslog_);
    gbeventitems_.Swap(&other->gbeventitems_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PTGBEngryAddNT::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PTGBEngryAddNT_descriptor_;
  metadata.reflection = PTGBEngryAddNT_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

PTgbLvlUpReq::PTgbLvlUpReq()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void PTgbLvlUpReq::InitAsDefaultInstance() {
}

PTgbLvlUpReq::PTgbLvlUpReq(const PTgbLvlUpReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void PTgbLvlUpReq::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PTgbLvlUpReq::~PTgbLvlUpReq() {
  SharedDtor();
}

void PTgbLvlUpReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PTgbLvlUpReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PTgbLvlUpReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PTgbLvlUpReq_descriptor_;
}

const PTgbLvlUpReq& PTgbLvlUpReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_PracticeTrue_2eproto();
  return *default_instance_;
}

PTgbLvlUpReq* PTgbLvlUpReq::default_instance_ = NULL;

PTgbLvlUpReq* PTgbLvlUpReq::New() const {
  return new PTgbLvlUpReq;
}

void PTgbLvlUpReq::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PTgbLvlUpReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void PTgbLvlUpReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PTgbLvlUpReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PTgbLvlUpReq::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PTgbLvlUpReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PTgbLvlUpReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PTgbLvlUpReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PTgbLvlUpReq::MergeFrom(const PTgbLvlUpReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PTgbLvlUpReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PTgbLvlUpReq::CopyFrom(const PTgbLvlUpReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PTgbLvlUpReq::IsInitialized() const {

  return true;
}

void PTgbLvlUpReq::Swap(PTgbLvlUpReq* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PTgbLvlUpReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PTgbLvlUpReq_descriptor_;
  metadata.reflection = PTgbLvlUpReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PTgbLvlUpRsp::kGbLvlUpCostXWFieldNumber;
const int PTgbLvlUpRsp::kGbLevelFieldNumber;
const int PTgbLvlUpRsp::kGbEnergyFieldNumber;
#endif  // !_MSC_VER

PTgbLvlUpRsp::PTgbLvlUpRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void PTgbLvlUpRsp::InitAsDefaultInstance() {
}

PTgbLvlUpRsp::PTgbLvlUpRsp(const PTgbLvlUpRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void PTgbLvlUpRsp::SharedCtor() {
  _cached_size_ = 0;
  gblvlupcostxw_ = 0u;
  gblevel_ = 0u;
  gbenergy_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PTgbLvlUpRsp::~PTgbLvlUpRsp() {
  SharedDtor();
}

void PTgbLvlUpRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PTgbLvlUpRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PTgbLvlUpRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PTgbLvlUpRsp_descriptor_;
}

const PTgbLvlUpRsp& PTgbLvlUpRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_PracticeTrue_2eproto();
  return *default_instance_;
}

PTgbLvlUpRsp* PTgbLvlUpRsp::default_instance_ = NULL;

PTgbLvlUpRsp* PTgbLvlUpRsp::New() const {
  return new PTgbLvlUpRsp;
}

void PTgbLvlUpRsp::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    gblvlupcostxw_ = 0u;
    gblevel_ = 0u;
    gbenergy_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PTgbLvlUpRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 gbLvlUpCostXW = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &gblvlupcostxw_)));
          set_has_gblvlupcostxw();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_gbLevel;
        break;
      }

      // required uint32 gbLevel = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_gbLevel:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &gblevel_)));
          set_has_gblevel();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_gbEnergy;
        break;
      }

      // required uint32 gbEnergy = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_gbEnergy:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &gbenergy_)));
          set_has_gbenergy();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PTgbLvlUpRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint32 gbLvlUpCostXW = 1;
  if (has_gblvlupcostxw()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->gblvlupcostxw(), output);
  }

  // required uint32 gbLevel = 2;
  if (has_gblevel()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->gblevel(), output);
  }

  // required uint32 gbEnergy = 3;
  if (has_gbenergy()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->gbenergy(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PTgbLvlUpRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint32 gbLvlUpCostXW = 1;
  if (has_gblvlupcostxw()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->gblvlupcostxw(), target);
  }

  // required uint32 gbLevel = 2;
  if (has_gblevel()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->gblevel(), target);
  }

  // required uint32 gbEnergy = 3;
  if (has_gbenergy()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->gbenergy(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PTgbLvlUpRsp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 gbLvlUpCostXW = 1;
    if (has_gblvlupcostxw()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->gblvlupcostxw());
    }

    // required uint32 gbLevel = 2;
    if (has_gblevel()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->gblevel());
    }

    // required uint32 gbEnergy = 3;
    if (has_gbenergy()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->gbenergy());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PTgbLvlUpRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PTgbLvlUpRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PTgbLvlUpRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PTgbLvlUpRsp::MergeFrom(const PTgbLvlUpRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_gblvlupcostxw()) {
      set_gblvlupcostxw(from.gblvlupcostxw());
    }
    if (from.has_gblevel()) {
      set_gblevel(from.gblevel());
    }
    if (from.has_gbenergy()) {
      set_gbenergy(from.gbenergy());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PTgbLvlUpRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PTgbLvlUpRsp::CopyFrom(const PTgbLvlUpRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PTgbLvlUpRsp::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  return true;
}

void PTgbLvlUpRsp::Swap(PTgbLvlUpRsp* other) {
  if (other != this) {
    std::swap(gblvlupcostxw_, other->gblvlupcostxw_);
    std::swap(gblevel_, other->gblevel_);
    std::swap(gbenergy_, other->gbenergy_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PTgbLvlUpRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PTgbLvlUpRsp_descriptor_;
  metadata.reflection = PTgbLvlUpRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

PTebLvlUpReq::PTebLvlUpReq()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void PTebLvlUpReq::InitAsDefaultInstance() {
}

PTebLvlUpReq::PTebLvlUpReq(const PTebLvlUpReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void PTebLvlUpReq::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PTebLvlUpReq::~PTebLvlUpReq() {
  SharedDtor();
}

void PTebLvlUpReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PTebLvlUpReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PTebLvlUpReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PTebLvlUpReq_descriptor_;
}

const PTebLvlUpReq& PTebLvlUpReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_PracticeTrue_2eproto();
  return *default_instance_;
}

PTebLvlUpReq* PTebLvlUpReq::default_instance_ = NULL;

PTebLvlUpReq* PTebLvlUpReq::New() const {
  return new PTebLvlUpReq;
}

void PTebLvlUpReq::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PTebLvlUpReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void PTebLvlUpReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PTebLvlUpReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PTebLvlUpReq::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PTebLvlUpReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PTebLvlUpReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PTebLvlUpReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PTebLvlUpReq::MergeFrom(const PTebLvlUpReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PTebLvlUpReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PTebLvlUpReq::CopyFrom(const PTebLvlUpReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PTebLvlUpReq::IsInitialized() const {

  return true;
}

void PTebLvlUpReq::Swap(PTebLvlUpReq* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PTebLvlUpReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PTebLvlUpReq_descriptor_;
  metadata.reflection = PTebLvlUpReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PTebLvlUpRsp::kEbLvlUpResultFieldNumber;
const int PTebLvlUpRsp::kGbLvlUpCostXWFieldNumber;
const int PTebLvlUpRsp::kGbEnergyFieldNumber;
const int PTebLvlUpRsp::kEbLevelFieldNumber;
const int PTebLvlUpRsp::kEbFlyFailInvigorationFieldNumber;
const int PTebLvlUpRsp::kLgTypesFieldNumber;
const int PTebLvlUpRsp::kLgPointsFieldNumber;
const int PTebLvlUpRsp::kLgPointsAddFieldNumber;
#endif  // !_MSC_VER

PTebLvlUpRsp::PTebLvlUpRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void PTebLvlUpRsp::InitAsDefaultInstance() {
}

PTebLvlUpRsp::PTebLvlUpRsp(const PTebLvlUpRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void PTebLvlUpRsp::SharedCtor() {
  _cached_size_ = 0;
  eblvlupresult_ = 0u;
  gblvlupcostxw_ = 0u;
  gbenergy_ = 0u;
  eblevel_ = 0u;
  ebflyfailinvigoration_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PTebLvlUpRsp::~PTebLvlUpRsp() {
  SharedDtor();
}

void PTebLvlUpRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PTebLvlUpRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PTebLvlUpRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PTebLvlUpRsp_descriptor_;
}

const PTebLvlUpRsp& PTebLvlUpRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_PracticeTrue_2eproto();
  return *default_instance_;
}

PTebLvlUpRsp* PTebLvlUpRsp::default_instance_ = NULL;

PTebLvlUpRsp* PTebLvlUpRsp::New() const {
  return new PTebLvlUpRsp;
}

void PTebLvlUpRsp::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    eblvlupresult_ = 0u;
    gblvlupcostxw_ = 0u;
    gbenergy_ = 0u;
    eblevel_ = 0u;
    ebflyfailinvigoration_ = 0u;
  }
  lgtypes_.Clear();
  lgpoints_.Clear();
  lgpointsadd_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PTebLvlUpRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 ebLvlUpResult = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &eblvlupresult_)));
          set_has_eblvlupresult();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_gbLvlUpCostXW;
        break;
      }

      // required uint32 gbLvlUpCostXW = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_gbLvlUpCostXW:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &gblvlupcostxw_)));
          set_has_gblvlupcostxw();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_gbEnergy;
        break;
      }

      // required uint32 gbEnergy = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_gbEnergy:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &gbenergy_)));
          set_has_gbenergy();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_ebLevel;
        break;
      }

      // optional uint32 ebLevel = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_ebLevel:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &eblevel_)));
          set_has_eblevel();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_ebFlyFailInvigoration;
        break;
      }

      // optional uint32 ebFlyFailInvigoration = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_ebFlyFailInvigoration:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ebflyfailinvigoration_)));
          set_has_ebflyfailinvigoration();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_lgTypes;
        break;
      }

      // repeated uint32 lgTypes = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_lgTypes:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 48, input, this->mutable_lgtypes())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_lgtypes())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_lgTypes;
        if (input->ExpectTag(56)) goto parse_lgPoints;
        break;
      }

      // repeated uint32 lgPoints = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_lgPoints:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 56, input, this->mutable_lgpoints())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_lgpoints())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_lgPoints;
        if (input->ExpectTag(64)) goto parse_lgPointsAdd;
        break;
      }

      // repeated uint32 lgPointsAdd = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_lgPointsAdd:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 64, input, this->mutable_lgpointsadd())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_lgpointsadd())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(64)) goto parse_lgPointsAdd;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PTebLvlUpRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint32 ebLvlUpResult = 1;
  if (has_eblvlupresult()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->eblvlupresult(), output);
  }

  // required uint32 gbLvlUpCostXW = 2;
  if (has_gblvlupcostxw()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->gblvlupcostxw(), output);
  }

  // required uint32 gbEnergy = 3;
  if (has_gbenergy()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->gbenergy(), output);
  }

  // optional uint32 ebLevel = 4;
  if (has_eblevel()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->eblevel(), output);
  }

  // optional uint32 ebFlyFailInvigoration = 5;
  if (has_ebflyfailinvigoration()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->ebflyfailinvigoration(), output);
  }

  // repeated uint32 lgTypes = 6;
  for (int i = 0; i < this->lgtypes_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      6, this->lgtypes(i), output);
  }

  // repeated uint32 lgPoints = 7;
  for (int i = 0; i < this->lgpoints_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      7, this->lgpoints(i), output);
  }

  // repeated uint32 lgPointsAdd = 8;
  for (int i = 0; i < this->lgpointsadd_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      8, this->lgpointsadd(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PTebLvlUpRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint32 ebLvlUpResult = 1;
  if (has_eblvlupresult()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->eblvlupresult(), target);
  }

  // required uint32 gbLvlUpCostXW = 2;
  if (has_gblvlupcostxw()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->gblvlupcostxw(), target);
  }

  // required uint32 gbEnergy = 3;
  if (has_gbenergy()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->gbenergy(), target);
  }

  // optional uint32 ebLevel = 4;
  if (has_eblevel()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->eblevel(), target);
  }

  // optional uint32 ebFlyFailInvigoration = 5;
  if (has_ebflyfailinvigoration()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->ebflyfailinvigoration(), target);
  }

  // repeated uint32 lgTypes = 6;
  for (int i = 0; i < this->lgtypes_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(6, this->lgtypes(i), target);
  }

  // repeated uint32 lgPoints = 7;
  for (int i = 0; i < this->lgpoints_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(7, this->lgpoints(i), target);
  }

  // repeated uint32 lgPointsAdd = 8;
  for (int i = 0; i < this->lgpointsadd_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(8, this->lgpointsadd(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PTebLvlUpRsp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 ebLvlUpResult = 1;
    if (has_eblvlupresult()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->eblvlupresult());
    }

    // required uint32 gbLvlUpCostXW = 2;
    if (has_gblvlupcostxw()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->gblvlupcostxw());
    }

    // required uint32 gbEnergy = 3;
    if (has_gbenergy()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->gbenergy());
    }

    // optional uint32 ebLevel = 4;
    if (has_eblevel()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->eblevel());
    }

    // optional uint32 ebFlyFailInvigoration = 5;
    if (has_ebflyfailinvigoration()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->ebflyfailinvigoration());
    }

  }
  // repeated uint32 lgTypes = 6;
  {
    int data_size = 0;
    for (int i = 0; i < this->lgtypes_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->lgtypes(i));
    }
    total_size += 1 * this->lgtypes_size() + data_size;
  }

  // repeated uint32 lgPoints = 7;
  {
    int data_size = 0;
    for (int i = 0; i < this->lgpoints_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->lgpoints(i));
    }
    total_size += 1 * this->lgpoints_size() + data_size;
  }

  // repeated uint32 lgPointsAdd = 8;
  {
    int data_size = 0;
    for (int i = 0; i < this->lgpointsadd_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->lgpointsadd(i));
    }
    total_size += 1 * this->lgpointsadd_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PTebLvlUpRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PTebLvlUpRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PTebLvlUpRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PTebLvlUpRsp::MergeFrom(const PTebLvlUpRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  lgtypes_.MergeFrom(from.lgtypes_);
  lgpoints_.MergeFrom(from.lgpoints_);
  lgpointsadd_.MergeFrom(from.lgpointsadd_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_eblvlupresult()) {
      set_eblvlupresult(from.eblvlupresult());
    }
    if (from.has_gblvlupcostxw()) {
      set_gblvlupcostxw(from.gblvlupcostxw());
    }
    if (from.has_gbenergy()) {
      set_gbenergy(from.gbenergy());
    }
    if (from.has_eblevel()) {
      set_eblevel(from.eblevel());
    }
    if (from.has_ebflyfailinvigoration()) {
      set_ebflyfailinvigoration(from.ebflyfailinvigoration());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PTebLvlUpRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PTebLvlUpRsp::CopyFrom(const PTebLvlUpRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PTebLvlUpRsp::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  return true;
}

void PTebLvlUpRsp::Swap(PTebLvlUpRsp* other) {
  if (other != this) {
    std::swap(eblvlupresult_, other->eblvlupresult_);
    std::swap(gblvlupcostxw_, other->gblvlupcostxw_);
    std::swap(gbenergy_, other->gbenergy_);
    std::swap(eblevel_, other->eblevel_);
    std::swap(ebflyfailinvigoration_, other->ebflyfailinvigoration_);
    lgtypes_.Swap(&other->lgtypes_);
    lgpoints_.Swap(&other->lgpoints_);
    lgpointsadd_.Swap(&other->lgpointsadd_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PTebLvlUpRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PTebLvlUpRsp_descriptor_;
  metadata.reflection = PTebLvlUpRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PTgfActiveReq::kGfTypeFieldNumber;
#endif  // !_MSC_VER

PTgfActiveReq::PTgfActiveReq()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void PTgfActiveReq::InitAsDefaultInstance() {
}

PTgfActiveReq::PTgfActiveReq(const PTgfActiveReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void PTgfActiveReq::SharedCtor() {
  _cached_size_ = 0;
  gftype_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PTgfActiveReq::~PTgfActiveReq() {
  SharedDtor();
}

void PTgfActiveReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PTgfActiveReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PTgfActiveReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PTgfActiveReq_descriptor_;
}

const PTgfActiveReq& PTgfActiveReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_PracticeTrue_2eproto();
  return *default_instance_;
}

PTgfActiveReq* PTgfActiveReq::default_instance_ = NULL;

PTgfActiveReq* PTgfActiveReq::New() const {
  return new PTgfActiveReq;
}

void PTgfActiveReq::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    gftype_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PTgfActiveReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 gfType = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &gftype_)));
          set_has_gftype();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PTgfActiveReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint32 gfType = 1;
  if (has_gftype()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->gftype(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PTgfActiveReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint32 gfType = 1;
  if (has_gftype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->gftype(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PTgfActiveReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 gfType = 1;
    if (has_gftype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->gftype());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PTgfActiveReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PTgfActiveReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PTgfActiveReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PTgfActiveReq::MergeFrom(const PTgfActiveReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_gftype()) {
      set_gftype(from.gftype());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PTgfActiveReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PTgfActiveReq::CopyFrom(const PTgfActiveReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PTgfActiveReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void PTgfActiveReq::Swap(PTgfActiveReq* other) {
  if (other != this) {
    std::swap(gftype_, other->gftype_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PTgfActiveReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PTgfActiveReq_descriptor_;
  metadata.reflection = PTgfActiveReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PTgfActiveRsp::kGfActiveResultFieldNumber;
const int PTgfActiveRsp::kGfTypeFieldNumber;
const int PTgfActiveRsp::kGfLvlFieldNumber;
#endif  // !_MSC_VER

PTgfActiveRsp::PTgfActiveRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void PTgfActiveRsp::InitAsDefaultInstance() {
}

PTgfActiveRsp::PTgfActiveRsp(const PTgfActiveRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void PTgfActiveRsp::SharedCtor() {
  _cached_size_ = 0;
  gfactiveresult_ = 0u;
  gftype_ = 0u;
  gflvl_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PTgfActiveRsp::~PTgfActiveRsp() {
  SharedDtor();
}

void PTgfActiveRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PTgfActiveRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PTgfActiveRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PTgfActiveRsp_descriptor_;
}

const PTgfActiveRsp& PTgfActiveRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_PracticeTrue_2eproto();
  return *default_instance_;
}

PTgfActiveRsp* PTgfActiveRsp::default_instance_ = NULL;

PTgfActiveRsp* PTgfActiveRsp::New() const {
  return new PTgfActiveRsp;
}

void PTgfActiveRsp::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    gfactiveresult_ = 0u;
    gftype_ = 0u;
    gflvl_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PTgfActiveRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 gfActiveResult = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &gfactiveresult_)));
          set_has_gfactiveresult();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_gfType;
        break;
      }

      // required uint32 gfType = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_gfType:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &gftype_)));
          set_has_gftype();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_gfLvl;
        break;
      }

      // required uint32 gfLvl = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_gfLvl:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &gflvl_)));
          set_has_gflvl();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PTgfActiveRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint32 gfActiveResult = 1;
  if (has_gfactiveresult()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->gfactiveresult(), output);
  }

  // required uint32 gfType = 2;
  if (has_gftype()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->gftype(), output);
  }

  // required uint32 gfLvl = 3;
  if (has_gflvl()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->gflvl(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PTgfActiveRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint32 gfActiveResult = 1;
  if (has_gfactiveresult()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->gfactiveresult(), target);
  }

  // required uint32 gfType = 2;
  if (has_gftype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->gftype(), target);
  }

  // required uint32 gfLvl = 3;
  if (has_gflvl()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->gflvl(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PTgfActiveRsp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 gfActiveResult = 1;
    if (has_gfactiveresult()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->gfactiveresult());
    }

    // required uint32 gfType = 2;
    if (has_gftype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->gftype());
    }

    // required uint32 gfLvl = 3;
    if (has_gflvl()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->gflvl());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PTgfActiveRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PTgfActiveRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PTgfActiveRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PTgfActiveRsp::MergeFrom(const PTgfActiveRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_gfactiveresult()) {
      set_gfactiveresult(from.gfactiveresult());
    }
    if (from.has_gftype()) {
      set_gftype(from.gftype());
    }
    if (from.has_gflvl()) {
      set_gflvl(from.gflvl());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PTgfActiveRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PTgfActiveRsp::CopyFrom(const PTgfActiveRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PTgfActiveRsp::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  return true;
}

void PTgfActiveRsp::Swap(PTgfActiveRsp* other) {
  if (other != this) {
    std::swap(gfactiveresult_, other->gfactiveresult_);
    std::swap(gftype_, other->gftype_);
    std::swap(gflvl_, other->gflvl_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PTgfActiveRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PTgfActiveRsp_descriptor_;
  metadata.reflection = PTgfActiveRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PTgfLvlUpReq::kGfTypeFieldNumber;
#endif  // !_MSC_VER

PTgfLvlUpReq::PTgfLvlUpReq()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void PTgfLvlUpReq::InitAsDefaultInstance() {
}

PTgfLvlUpReq::PTgfLvlUpReq(const PTgfLvlUpReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void PTgfLvlUpReq::SharedCtor() {
  _cached_size_ = 0;
  gftype_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PTgfLvlUpReq::~PTgfLvlUpReq() {
  SharedDtor();
}

void PTgfLvlUpReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PTgfLvlUpReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PTgfLvlUpReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PTgfLvlUpReq_descriptor_;
}

const PTgfLvlUpReq& PTgfLvlUpReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_PracticeTrue_2eproto();
  return *default_instance_;
}

PTgfLvlUpReq* PTgfLvlUpReq::default_instance_ = NULL;

PTgfLvlUpReq* PTgfLvlUpReq::New() const {
  return new PTgfLvlUpReq;
}

void PTgfLvlUpReq::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    gftype_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PTgfLvlUpReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 gfType = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &gftype_)));
          set_has_gftype();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PTgfLvlUpReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint32 gfType = 1;
  if (has_gftype()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->gftype(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PTgfLvlUpReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint32 gfType = 1;
  if (has_gftype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->gftype(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PTgfLvlUpReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 gfType = 1;
    if (has_gftype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->gftype());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PTgfLvlUpReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PTgfLvlUpReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PTgfLvlUpReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PTgfLvlUpReq::MergeFrom(const PTgfLvlUpReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_gftype()) {
      set_gftype(from.gftype());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PTgfLvlUpReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PTgfLvlUpReq::CopyFrom(const PTgfLvlUpReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PTgfLvlUpReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void PTgfLvlUpReq::Swap(PTgfLvlUpReq* other) {
  if (other != this) {
    std::swap(gftype_, other->gftype_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PTgfLvlUpReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PTgfLvlUpReq_descriptor_;
  metadata.reflection = PTgfLvlUpReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PTgfLvlUpRsp::kGfLvlUpResultFieldNumber;
const int PTgfLvlUpRsp::kGfTypeFieldNumber;
const int PTgfLvlUpRsp::kGfLvlFieldNumber;
const int PTgfLvlUpRsp::kGbEnergyFieldNumber;
#endif  // !_MSC_VER

PTgfLvlUpRsp::PTgfLvlUpRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void PTgfLvlUpRsp::InitAsDefaultInstance() {
}

PTgfLvlUpRsp::PTgfLvlUpRsp(const PTgfLvlUpRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void PTgfLvlUpRsp::SharedCtor() {
  _cached_size_ = 0;
  gflvlupresult_ = 0u;
  gftype_ = 0u;
  gflvl_ = 0u;
  gbenergy_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PTgfLvlUpRsp::~PTgfLvlUpRsp() {
  SharedDtor();
}

void PTgfLvlUpRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PTgfLvlUpRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PTgfLvlUpRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PTgfLvlUpRsp_descriptor_;
}

const PTgfLvlUpRsp& PTgfLvlUpRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_PracticeTrue_2eproto();
  return *default_instance_;
}

PTgfLvlUpRsp* PTgfLvlUpRsp::default_instance_ = NULL;

PTgfLvlUpRsp* PTgfLvlUpRsp::New() const {
  return new PTgfLvlUpRsp;
}

void PTgfLvlUpRsp::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    gflvlupresult_ = 0u;
    gftype_ = 0u;
    gflvl_ = 0u;
    gbenergy_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PTgfLvlUpRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 gfLvlUpResult = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &gflvlupresult_)));
          set_has_gflvlupresult();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_gfType;
        break;
      }

      // required uint32 gfType = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_gfType:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &gftype_)));
          set_has_gftype();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_gfLvl;
        break;
      }

      // required uint32 gfLvl = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_gfLvl:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &gflvl_)));
          set_has_gflvl();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_gbEnergy;
        break;
      }

      // required uint32 gbEnergy = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_gbEnergy:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &gbenergy_)));
          set_has_gbenergy();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PTgfLvlUpRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint32 gfLvlUpResult = 1;
  if (has_gflvlupresult()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->gflvlupresult(), output);
  }

  // required uint32 gfType = 2;
  if (has_gftype()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->gftype(), output);
  }

  // required uint32 gfLvl = 3;
  if (has_gflvl()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->gflvl(), output);
  }

  // required uint32 gbEnergy = 4;
  if (has_gbenergy()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->gbenergy(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PTgfLvlUpRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint32 gfLvlUpResult = 1;
  if (has_gflvlupresult()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->gflvlupresult(), target);
  }

  // required uint32 gfType = 2;
  if (has_gftype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->gftype(), target);
  }

  // required uint32 gfLvl = 3;
  if (has_gflvl()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->gflvl(), target);
  }

  // required uint32 gbEnergy = 4;
  if (has_gbenergy()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->gbenergy(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PTgfLvlUpRsp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 gfLvlUpResult = 1;
    if (has_gflvlupresult()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->gflvlupresult());
    }

    // required uint32 gfType = 2;
    if (has_gftype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->gftype());
    }

    // required uint32 gfLvl = 3;
    if (has_gflvl()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->gflvl());
    }

    // required uint32 gbEnergy = 4;
    if (has_gbenergy()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->gbenergy());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PTgfLvlUpRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PTgfLvlUpRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PTgfLvlUpRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PTgfLvlUpRsp::MergeFrom(const PTgfLvlUpRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_gflvlupresult()) {
      set_gflvlupresult(from.gflvlupresult());
    }
    if (from.has_gftype()) {
      set_gftype(from.gftype());
    }
    if (from.has_gflvl()) {
      set_gflvl(from.gflvl());
    }
    if (from.has_gbenergy()) {
      set_gbenergy(from.gbenergy());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PTgfLvlUpRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PTgfLvlUpRsp::CopyFrom(const PTgfLvlUpRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PTgfLvlUpRsp::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;

  return true;
}

void PTgfLvlUpRsp::Swap(PTgfLvlUpRsp* other) {
  if (other != this) {
    std::swap(gflvlupresult_, other->gflvlupresult_);
    std::swap(gftype_, other->gftype_);
    std::swap(gflvl_, other->gflvl_);
    std::swap(gbenergy_, other->gbenergy_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PTgfLvlUpRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PTgfLvlUpRsp_descriptor_;
  metadata.reflection = PTgfLvlUpRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PTgfStageUpReq::kGfTypeFieldNumber;
#endif  // !_MSC_VER

PTgfStageUpReq::PTgfStageUpReq()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void PTgfStageUpReq::InitAsDefaultInstance() {
}

PTgfStageUpReq::PTgfStageUpReq(const PTgfStageUpReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void PTgfStageUpReq::SharedCtor() {
  _cached_size_ = 0;
  gftype_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PTgfStageUpReq::~PTgfStageUpReq() {
  SharedDtor();
}

void PTgfStageUpReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PTgfStageUpReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PTgfStageUpReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PTgfStageUpReq_descriptor_;
}

const PTgfStageUpReq& PTgfStageUpReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_PracticeTrue_2eproto();
  return *default_instance_;
}

PTgfStageUpReq* PTgfStageUpReq::default_instance_ = NULL;

PTgfStageUpReq* PTgfStageUpReq::New() const {
  return new PTgfStageUpReq;
}

void PTgfStageUpReq::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    gftype_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PTgfStageUpReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 gfType = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &gftype_)));
          set_has_gftype();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PTgfStageUpReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint32 gfType = 1;
  if (has_gftype()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->gftype(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PTgfStageUpReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint32 gfType = 1;
  if (has_gftype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->gftype(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PTgfStageUpReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 gfType = 1;
    if (has_gftype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->gftype());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PTgfStageUpReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PTgfStageUpReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PTgfStageUpReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PTgfStageUpReq::MergeFrom(const PTgfStageUpReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_gftype()) {
      set_gftype(from.gftype());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PTgfStageUpReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PTgfStageUpReq::CopyFrom(const PTgfStageUpReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PTgfStageUpReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void PTgfStageUpReq::Swap(PTgfStageUpReq* other) {
  if (other != this) {
    std::swap(gftype_, other->gftype_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PTgfStageUpReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PTgfStageUpReq_descriptor_;
  metadata.reflection = PTgfStageUpReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PTgfStageUpRsp::kGfStageUpResultFieldNumber;
const int PTgfStageUpRsp::kGfTypeFieldNumber;
const int PTgfStageUpRsp::kGfStageFieldNumber;
#endif  // !_MSC_VER

PTgfStageUpRsp::PTgfStageUpRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void PTgfStageUpRsp::InitAsDefaultInstance() {
}

PTgfStageUpRsp::PTgfStageUpRsp(const PTgfStageUpRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void PTgfStageUpRsp::SharedCtor() {
  _cached_size_ = 0;
  gfstageupresult_ = 0u;
  gftype_ = 0u;
  gfstage_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PTgfStageUpRsp::~PTgfStageUpRsp() {
  SharedDtor();
}

void PTgfStageUpRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PTgfStageUpRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PTgfStageUpRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PTgfStageUpRsp_descriptor_;
}

const PTgfStageUpRsp& PTgfStageUpRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_PracticeTrue_2eproto();
  return *default_instance_;
}

PTgfStageUpRsp* PTgfStageUpRsp::default_instance_ = NULL;

PTgfStageUpRsp* PTgfStageUpRsp::New() const {
  return new PTgfStageUpRsp;
}

void PTgfStageUpRsp::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    gfstageupresult_ = 0u;
    gftype_ = 0u;
    gfstage_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PTgfStageUpRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 gfStageUpResult = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &gfstageupresult_)));
          set_has_gfstageupresult();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_gfType;
        break;
      }

      // required uint32 gfType = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_gfType:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &gftype_)));
          set_has_gftype();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_gfStage;
        break;
      }

      // required uint32 gfStage = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_gfStage:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &gfstage_)));
          set_has_gfstage();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PTgfStageUpRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint32 gfStageUpResult = 1;
  if (has_gfstageupresult()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->gfstageupresult(), output);
  }

  // required uint32 gfType = 2;
  if (has_gftype()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->gftype(), output);
  }

  // required uint32 gfStage = 3;
  if (has_gfstage()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->gfstage(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PTgfStageUpRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint32 gfStageUpResult = 1;
  if (has_gfstageupresult()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->gfstageupresult(), target);
  }

  // required uint32 gfType = 2;
  if (has_gftype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->gftype(), target);
  }

  // required uint32 gfStage = 3;
  if (has_gfstage()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->gfstage(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PTgfStageUpRsp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 gfStageUpResult = 1;
    if (has_gfstageupresult()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->gfstageupresult());
    }

    // required uint32 gfType = 2;
    if (has_gftype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->gftype());
    }

    // required uint32 gfStage = 3;
    if (has_gfstage()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->gfstage());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PTgfStageUpRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PTgfStageUpRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PTgfStageUpRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PTgfStageUpRsp::MergeFrom(const PTgfStageUpRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_gfstageupresult()) {
      set_gfstageupresult(from.gfstageupresult());
    }
    if (from.has_gftype()) {
      set_gftype(from.gftype());
    }
    if (from.has_gfstage()) {
      set_gfstage(from.gfstage());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PTgfStageUpRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PTgfStageUpRsp::CopyFrom(const PTgfStageUpRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PTgfStageUpRsp::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  return true;
}

void PTgfStageUpRsp::Swap(PTgfStageUpRsp* other) {
  if (other != this) {
    std::swap(gfstageupresult_, other->gfstageupresult_);
    std::swap(gftype_, other->gftype_);
    std::swap(gfstage_, other->gfstage_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PTgfStageUpRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PTgfStageUpRsp_descriptor_;
  metadata.reflection = PTgfStageUpRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PTjmLvlUpReq::kJmTypeFieldNumber;
#endif  // !_MSC_VER

PTjmLvlUpReq::PTjmLvlUpReq()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void PTjmLvlUpReq::InitAsDefaultInstance() {
}

PTjmLvlUpReq::PTjmLvlUpReq(const PTjmLvlUpReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void PTjmLvlUpReq::SharedCtor() {
  _cached_size_ = 0;
  jmtype_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PTjmLvlUpReq::~PTjmLvlUpReq() {
  SharedDtor();
}

void PTjmLvlUpReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PTjmLvlUpReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PTjmLvlUpReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PTjmLvlUpReq_descriptor_;
}

const PTjmLvlUpReq& PTjmLvlUpReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_PracticeTrue_2eproto();
  return *default_instance_;
}

PTjmLvlUpReq* PTjmLvlUpReq::default_instance_ = NULL;

PTjmLvlUpReq* PTjmLvlUpReq::New() const {
  return new PTjmLvlUpReq;
}

void PTjmLvlUpReq::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    jmtype_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PTjmLvlUpReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 jmType = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &jmtype_)));
          set_has_jmtype();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PTjmLvlUpReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint32 jmType = 1;
  if (has_jmtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->jmtype(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PTjmLvlUpReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint32 jmType = 1;
  if (has_jmtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->jmtype(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PTjmLvlUpReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 jmType = 1;
    if (has_jmtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->jmtype());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PTjmLvlUpReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PTjmLvlUpReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PTjmLvlUpReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PTjmLvlUpReq::MergeFrom(const PTjmLvlUpReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_jmtype()) {
      set_jmtype(from.jmtype());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PTjmLvlUpReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PTjmLvlUpReq::CopyFrom(const PTjmLvlUpReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PTjmLvlUpReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void PTjmLvlUpReq::Swap(PTjmLvlUpReq* other) {
  if (other != this) {
    std::swap(jmtype_, other->jmtype_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PTjmLvlUpReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PTjmLvlUpReq_descriptor_;
  metadata.reflection = PTjmLvlUpReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PTjmLvlUpRsp::kSuccessFieldNumber;
const int PTjmLvlUpRsp::kJmTypeFieldNumber;
const int PTjmLvlUpRsp::kLvlFieldNumber;
const int PTjmLvlUpRsp::kGbEnergyFieldNumber;
#endif  // !_MSC_VER

PTjmLvlUpRsp::PTjmLvlUpRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void PTjmLvlUpRsp::InitAsDefaultInstance() {
}

PTjmLvlUpRsp::PTjmLvlUpRsp(const PTjmLvlUpRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void PTjmLvlUpRsp::SharedCtor() {
  _cached_size_ = 0;
  success_ = false;
  jmtype_ = 0u;
  lvl_ = 0u;
  gbenergy_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PTjmLvlUpRsp::~PTjmLvlUpRsp() {
  SharedDtor();
}

void PTjmLvlUpRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PTjmLvlUpRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PTjmLvlUpRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PTjmLvlUpRsp_descriptor_;
}

const PTjmLvlUpRsp& PTjmLvlUpRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_PracticeTrue_2eproto();
  return *default_instance_;
}

PTjmLvlUpRsp* PTjmLvlUpRsp::default_instance_ = NULL;

PTjmLvlUpRsp* PTjmLvlUpRsp::New() const {
  return new PTjmLvlUpRsp;
}

void PTjmLvlUpRsp::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    success_ = false;
    jmtype_ = 0u;
    lvl_ = 0u;
    gbenergy_ = GOOGLE_ULONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PTjmLvlUpRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bool success = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &success_)));
          set_has_success();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_jmType;
        break;
      }

      // optional uint32 jmType = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_jmType:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &jmtype_)));
          set_has_jmtype();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_lvl;
        break;
      }

      // optional uint32 lvl = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_lvl:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &lvl_)));
          set_has_lvl();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_gbEnergy;
        break;
      }

      // optional uint64 gbEnergy = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_gbEnergy:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &gbenergy_)));
          set_has_gbenergy();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PTjmLvlUpRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required bool success = 1;
  if (has_success()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->success(), output);
  }

  // optional uint32 jmType = 2;
  if (has_jmtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->jmtype(), output);
  }

  // optional uint32 lvl = 3;
  if (has_lvl()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->lvl(), output);
  }

  // optional uint64 gbEnergy = 4;
  if (has_gbenergy()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->gbenergy(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PTjmLvlUpRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required bool success = 1;
  if (has_success()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->success(), target);
  }

  // optional uint32 jmType = 2;
  if (has_jmtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->jmtype(), target);
  }

  // optional uint32 lvl = 3;
  if (has_lvl()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->lvl(), target);
  }

  // optional uint64 gbEnergy = 4;
  if (has_gbenergy()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->gbenergy(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PTjmLvlUpRsp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required bool success = 1;
    if (has_success()) {
      total_size += 1 + 1;
    }

    // optional uint32 jmType = 2;
    if (has_jmtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->jmtype());
    }

    // optional uint32 lvl = 3;
    if (has_lvl()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->lvl());
    }

    // optional uint64 gbEnergy = 4;
    if (has_gbenergy()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->gbenergy());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PTjmLvlUpRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PTjmLvlUpRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PTjmLvlUpRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PTjmLvlUpRsp::MergeFrom(const PTjmLvlUpRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_success()) {
      set_success(from.success());
    }
    if (from.has_jmtype()) {
      set_jmtype(from.jmtype());
    }
    if (from.has_lvl()) {
      set_lvl(from.lvl());
    }
    if (from.has_gbenergy()) {
      set_gbenergy(from.gbenergy());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PTjmLvlUpRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PTjmLvlUpRsp::CopyFrom(const PTjmLvlUpRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PTjmLvlUpRsp::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void PTjmLvlUpRsp::Swap(PTjmLvlUpRsp* other) {
  if (other != this) {
    std::swap(success_, other->success_);
    std::swap(jmtype_, other->jmtype_);
    std::swap(lvl_, other->lvl_);
    std::swap(gbenergy_, other->gbenergy_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PTjmLvlUpRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PTjmLvlUpRsp_descriptor_;
  metadata.reflection = PTjmLvlUpRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PTjmStageUpReq::kJmTypeFieldNumber;
#endif  // !_MSC_VER

PTjmStageUpReq::PTjmStageUpReq()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void PTjmStageUpReq::InitAsDefaultInstance() {
}

PTjmStageUpReq::PTjmStageUpReq(const PTjmStageUpReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void PTjmStageUpReq::SharedCtor() {
  _cached_size_ = 0;
  jmtype_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PTjmStageUpReq::~PTjmStageUpReq() {
  SharedDtor();
}

void PTjmStageUpReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PTjmStageUpReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PTjmStageUpReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PTjmStageUpReq_descriptor_;
}

const PTjmStageUpReq& PTjmStageUpReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_PracticeTrue_2eproto();
  return *default_instance_;
}

PTjmStageUpReq* PTjmStageUpReq::default_instance_ = NULL;

PTjmStageUpReq* PTjmStageUpReq::New() const {
  return new PTjmStageUpReq;
}

void PTjmStageUpReq::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    jmtype_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PTjmStageUpReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 jmType = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &jmtype_)));
          set_has_jmtype();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PTjmStageUpReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint32 jmType = 1;
  if (has_jmtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->jmtype(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PTjmStageUpReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint32 jmType = 1;
  if (has_jmtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->jmtype(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PTjmStageUpReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 jmType = 1;
    if (has_jmtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->jmtype());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PTjmStageUpReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PTjmStageUpReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PTjmStageUpReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PTjmStageUpReq::MergeFrom(const PTjmStageUpReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_jmtype()) {
      set_jmtype(from.jmtype());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PTjmStageUpReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PTjmStageUpReq::CopyFrom(const PTjmStageUpReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PTjmStageUpReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void PTjmStageUpReq::Swap(PTjmStageUpReq* other) {
  if (other != this) {
    std::swap(jmtype_, other->jmtype_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PTjmStageUpReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PTjmStageUpReq_descriptor_;
  metadata.reflection = PTjmStageUpReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PTjmStageUpRsp::kErrorFieldNumber;
const int PTjmStageUpRsp::kJmTypeFieldNumber;
const int PTjmStageUpRsp::kStageFieldNumber;
const int PTjmStageUpRsp::kGfTypeFieldNumber;
const int PTjmStageUpRsp::kJmStageUpFailInvigorationFieldNumber;
#endif  // !_MSC_VER

PTjmStageUpRsp::PTjmStageUpRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void PTjmStageUpRsp::InitAsDefaultInstance() {
}

PTjmStageUpRsp::PTjmStageUpRsp(const PTjmStageUpRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void PTjmStageUpRsp::SharedCtor() {
  _cached_size_ = 0;
  error_ = 0u;
  jmtype_ = 0u;
  stage_ = 0u;
  gftype_ = 0u;
  jmstageupfailinvigoration_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PTjmStageUpRsp::~PTjmStageUpRsp() {
  SharedDtor();
}

void PTjmStageUpRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PTjmStageUpRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PTjmStageUpRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PTjmStageUpRsp_descriptor_;
}

const PTjmStageUpRsp& PTjmStageUpRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_PracticeTrue_2eproto();
  return *default_instance_;
}

PTjmStageUpRsp* PTjmStageUpRsp::default_instance_ = NULL;

PTjmStageUpRsp* PTjmStageUpRsp::New() const {
  return new PTjmStageUpRsp;
}

void PTjmStageUpRsp::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    error_ = 0u;
    jmtype_ = 0u;
    stage_ = 0u;
    gftype_ = 0u;
    jmstageupfailinvigoration_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PTjmStageUpRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 error = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &error_)));
          set_has_error();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_jmType;
        break;
      }

      // optional uint32 jmType = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_jmType:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &jmtype_)));
          set_has_jmtype();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_stage;
        break;
      }

      // optional uint32 stage = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_stage:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &stage_)));
          set_has_stage();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_gfType;
        break;
      }

      // optional uint32 gfType = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_gfType:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &gftype_)));
          set_has_gftype();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_jmStageUpFailInvigoration;
        break;
      }

      // optional uint32 jmStageUpFailInvigoration = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_jmStageUpFailInvigoration:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &jmstageupfailinvigoration_)));
          set_has_jmstageupfailinvigoration();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PTjmStageUpRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint32 error = 1;
  if (has_error()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->error(), output);
  }

  // optional uint32 jmType = 2;
  if (has_jmtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->jmtype(), output);
  }

  // optional uint32 stage = 3;
  if (has_stage()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->stage(), output);
  }

  // optional uint32 gfType = 4;
  if (has_gftype()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->gftype(), output);
  }

  // optional uint32 jmStageUpFailInvigoration = 5;
  if (has_jmstageupfailinvigoration()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->jmstageupfailinvigoration(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PTjmStageUpRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint32 error = 1;
  if (has_error()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->error(), target);
  }

  // optional uint32 jmType = 2;
  if (has_jmtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->jmtype(), target);
  }

  // optional uint32 stage = 3;
  if (has_stage()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->stage(), target);
  }

  // optional uint32 gfType = 4;
  if (has_gftype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->gftype(), target);
  }

  // optional uint32 jmStageUpFailInvigoration = 5;
  if (has_jmstageupfailinvigoration()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->jmstageupfailinvigoration(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PTjmStageUpRsp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 error = 1;
    if (has_error()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->error());
    }

    // optional uint32 jmType = 2;
    if (has_jmtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->jmtype());
    }

    // optional uint32 stage = 3;
    if (has_stage()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->stage());
    }

    // optional uint32 gfType = 4;
    if (has_gftype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->gftype());
    }

    // optional uint32 jmStageUpFailInvigoration = 5;
    if (has_jmstageupfailinvigoration()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->jmstageupfailinvigoration());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PTjmStageUpRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PTjmStageUpRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PTjmStageUpRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PTjmStageUpRsp::MergeFrom(const PTjmStageUpRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_error()) {
      set_error(from.error());
    }
    if (from.has_jmtype()) {
      set_jmtype(from.jmtype());
    }
    if (from.has_stage()) {
      set_stage(from.stage());
    }
    if (from.has_gftype()) {
      set_gftype(from.gftype());
    }
    if (from.has_jmstageupfailinvigoration()) {
      set_jmstageupfailinvigoration(from.jmstageupfailinvigoration());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PTjmStageUpRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PTjmStageUpRsp::CopyFrom(const PTjmStageUpRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PTjmStageUpRsp::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void PTjmStageUpRsp::Swap(PTjmStageUpRsp* other) {
  if (other != this) {
    std::swap(error_, other->error_);
    std::swap(jmtype_, other->jmtype_);
    std::swap(stage_, other->stage_);
    std::swap(gftype_, other->gftype_);
    std::swap(jmstageupfailinvigoration_, other->jmstageupfailinvigoration_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PTjmStageUpRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PTjmStageUpRsp_descriptor_;
  metadata.reflection = PTjmStageUpRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

PTjmMergeUpReq::PTjmMergeUpReq()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void PTjmMergeUpReq::InitAsDefaultInstance() {
}

PTjmMergeUpReq::PTjmMergeUpReq(const PTjmMergeUpReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void PTjmMergeUpReq::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PTjmMergeUpReq::~PTjmMergeUpReq() {
  SharedDtor();
}

void PTjmMergeUpReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PTjmMergeUpReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PTjmMergeUpReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PTjmMergeUpReq_descriptor_;
}

const PTjmMergeUpReq& PTjmMergeUpReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_PracticeTrue_2eproto();
  return *default_instance_;
}

PTjmMergeUpReq* PTjmMergeUpReq::default_instance_ = NULL;

PTjmMergeUpReq* PTjmMergeUpReq::New() const {
  return new PTjmMergeUpReq;
}

void PTjmMergeUpReq::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PTjmMergeUpReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void PTjmMergeUpReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PTjmMergeUpReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PTjmMergeUpReq::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PTjmMergeUpReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PTjmMergeUpReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PTjmMergeUpReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PTjmMergeUpReq::MergeFrom(const PTjmMergeUpReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PTjmMergeUpReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PTjmMergeUpReq::CopyFrom(const PTjmMergeUpReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PTjmMergeUpReq::IsInitialized() const {

  return true;
}

void PTjmMergeUpReq::Swap(PTjmMergeUpReq* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PTjmMergeUpReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PTjmMergeUpReq_descriptor_;
  metadata.reflection = PTjmMergeUpReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PTjmMergeUpRsp::kErrorFieldNumber;
const int PTjmMergeUpRsp::kJmMergeLvlFieldNumber;
const int PTjmMergeUpRsp::kJmTypeFieldNumber;
const int PTjmMergeUpRsp::kJmNeedStageLvlFieldNumber;
#endif  // !_MSC_VER

PTjmMergeUpRsp::PTjmMergeUpRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void PTjmMergeUpRsp::InitAsDefaultInstance() {
}

PTjmMergeUpRsp::PTjmMergeUpRsp(const PTjmMergeUpRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void PTjmMergeUpRsp::SharedCtor() {
  _cached_size_ = 0;
  error_ = 0u;
  jmmergelvl_ = 0u;
  jmtype_ = 0u;
  jmneedstagelvl_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PTjmMergeUpRsp::~PTjmMergeUpRsp() {
  SharedDtor();
}

void PTjmMergeUpRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PTjmMergeUpRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PTjmMergeUpRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PTjmMergeUpRsp_descriptor_;
}

const PTjmMergeUpRsp& PTjmMergeUpRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_PracticeTrue_2eproto();
  return *default_instance_;
}

PTjmMergeUpRsp* PTjmMergeUpRsp::default_instance_ = NULL;

PTjmMergeUpRsp* PTjmMergeUpRsp::New() const {
  return new PTjmMergeUpRsp;
}

void PTjmMergeUpRsp::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    error_ = 0u;
    jmmergelvl_ = 0u;
    jmtype_ = 0u;
    jmneedstagelvl_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PTjmMergeUpRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 error = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &error_)));
          set_has_error();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_jmMergeLvl;
        break;
      }

      // optional uint32 jmMergeLvl = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_jmMergeLvl:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &jmmergelvl_)));
          set_has_jmmergelvl();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_jmType;
        break;
      }

      // optional uint32 jmType = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_jmType:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &jmtype_)));
          set_has_jmtype();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_jmNeedStageLvl;
        break;
      }

      // optional uint32 jmNeedStageLvl = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_jmNeedStageLvl:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &jmneedstagelvl_)));
          set_has_jmneedstagelvl();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PTjmMergeUpRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint32 error = 1;
  if (has_error()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->error(), output);
  }

  // optional uint32 jmMergeLvl = 2;
  if (has_jmmergelvl()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->jmmergelvl(), output);
  }

  // optional uint32 jmType = 3;
  if (has_jmtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->jmtype(), output);
  }

  // optional uint32 jmNeedStageLvl = 4;
  if (has_jmneedstagelvl()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->jmneedstagelvl(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PTjmMergeUpRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint32 error = 1;
  if (has_error()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->error(), target);
  }

  // optional uint32 jmMergeLvl = 2;
  if (has_jmmergelvl()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->jmmergelvl(), target);
  }

  // optional uint32 jmType = 3;
  if (has_jmtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->jmtype(), target);
  }

  // optional uint32 jmNeedStageLvl = 4;
  if (has_jmneedstagelvl()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->jmneedstagelvl(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PTjmMergeUpRsp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 error = 1;
    if (has_error()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->error());
    }

    // optional uint32 jmMergeLvl = 2;
    if (has_jmmergelvl()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->jmmergelvl());
    }

    // optional uint32 jmType = 3;
    if (has_jmtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->jmtype());
    }

    // optional uint32 jmNeedStageLvl = 4;
    if (has_jmneedstagelvl()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->jmneedstagelvl());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PTjmMergeUpRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PTjmMergeUpRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PTjmMergeUpRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PTjmMergeUpRsp::MergeFrom(const PTjmMergeUpRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_error()) {
      set_error(from.error());
    }
    if (from.has_jmmergelvl()) {
      set_jmmergelvl(from.jmmergelvl());
    }
    if (from.has_jmtype()) {
      set_jmtype(from.jmtype());
    }
    if (from.has_jmneedstagelvl()) {
      set_jmneedstagelvl(from.jmneedstagelvl());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PTjmMergeUpRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PTjmMergeUpRsp::CopyFrom(const PTjmMergeUpRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PTjmMergeUpRsp::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void PTjmMergeUpRsp::Swap(PTjmMergeUpRsp* other) {
  if (other != this) {
    std::swap(error_, other->error_);
    std::swap(jmmergelvl_, other->jmmergelvl_);
    std::swap(jmtype_, other->jmtype_);
    std::swap(jmneedstagelvl_, other->jmneedstagelvl_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PTjmMergeUpRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PTjmMergeUpRsp_descriptor_;
  metadata.reflection = PTjmMergeUpRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PTlgLvlUpReq::kLgTypeFieldNumber;
#endif  // !_MSC_VER

PTlgLvlUpReq::PTlgLvlUpReq()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void PTlgLvlUpReq::InitAsDefaultInstance() {
}

PTlgLvlUpReq::PTlgLvlUpReq(const PTlgLvlUpReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void PTlgLvlUpReq::SharedCtor() {
  _cached_size_ = 0;
  lgtype_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PTlgLvlUpReq::~PTlgLvlUpReq() {
  SharedDtor();
}

void PTlgLvlUpReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PTlgLvlUpReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PTlgLvlUpReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PTlgLvlUpReq_descriptor_;
}

const PTlgLvlUpReq& PTlgLvlUpReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_PracticeTrue_2eproto();
  return *default_instance_;
}

PTlgLvlUpReq* PTlgLvlUpReq::default_instance_ = NULL;

PTlgLvlUpReq* PTlgLvlUpReq::New() const {
  return new PTlgLvlUpReq;
}

void PTlgLvlUpReq::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    lgtype_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PTlgLvlUpReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 lgType = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &lgtype_)));
          set_has_lgtype();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PTlgLvlUpReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint32 lgType = 1;
  if (has_lgtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->lgtype(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PTlgLvlUpReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint32 lgType = 1;
  if (has_lgtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->lgtype(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PTlgLvlUpReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 lgType = 1;
    if (has_lgtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->lgtype());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PTlgLvlUpReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PTlgLvlUpReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PTlgLvlUpReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PTlgLvlUpReq::MergeFrom(const PTlgLvlUpReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_lgtype()) {
      set_lgtype(from.lgtype());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PTlgLvlUpReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PTlgLvlUpReq::CopyFrom(const PTlgLvlUpReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PTlgLvlUpReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void PTlgLvlUpReq::Swap(PTlgLvlUpReq* other) {
  if (other != this) {
    std::swap(lgtype_, other->lgtype_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PTlgLvlUpReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PTlgLvlUpReq_descriptor_;
  metadata.reflection = PTlgLvlUpReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PTlgLvlUpRsp::kErrorFieldNumber;
const int PTlgLvlUpRsp::kLgTypeFieldNumber;
const int PTlgLvlUpRsp::kLgLvlFieldNumber;
const int PTlgLvlUpRsp::kLgPointsFieldNumber;
const int PTlgLvlUpRsp::kGbEnergyFieldNumber;
#endif  // !_MSC_VER

PTlgLvlUpRsp::PTlgLvlUpRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void PTlgLvlUpRsp::InitAsDefaultInstance() {
}

PTlgLvlUpRsp::PTlgLvlUpRsp(const PTlgLvlUpRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void PTlgLvlUpRsp::SharedCtor() {
  _cached_size_ = 0;
  error_ = 0u;
  lgtype_ = 0u;
  lglvl_ = 0u;
  lgpoints_ = 0u;
  gbenergy_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PTlgLvlUpRsp::~PTlgLvlUpRsp() {
  SharedDtor();
}

void PTlgLvlUpRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PTlgLvlUpRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PTlgLvlUpRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PTlgLvlUpRsp_descriptor_;
}

const PTlgLvlUpRsp& PTlgLvlUpRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_PracticeTrue_2eproto();
  return *default_instance_;
}

PTlgLvlUpRsp* PTlgLvlUpRsp::default_instance_ = NULL;

PTlgLvlUpRsp* PTlgLvlUpRsp::New() const {
  return new PTlgLvlUpRsp;
}

void PTlgLvlUpRsp::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    error_ = 0u;
    lgtype_ = 0u;
    lglvl_ = 0u;
    lgpoints_ = 0u;
    gbenergy_ = GOOGLE_ULONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PTlgLvlUpRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 error = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &error_)));
          set_has_error();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_lgType;
        break;
      }

      // optional uint32 lgType = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_lgType:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &lgtype_)));
          set_has_lgtype();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_lgLvl;
        break;
      }

      // optional uint32 lgLvl = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_lgLvl:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &lglvl_)));
          set_has_lglvl();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_lgPoints;
        break;
      }

      // optional uint32 lgPoints = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_lgPoints:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &lgpoints_)));
          set_has_lgpoints();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_gbEnergy;
        break;
      }

      // optional uint64 gbEnergy = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_gbEnergy:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &gbenergy_)));
          set_has_gbenergy();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PTlgLvlUpRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint32 error = 1;
  if (has_error()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->error(), output);
  }

  // optional uint32 lgType = 2;
  if (has_lgtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->lgtype(), output);
  }

  // optional uint32 lgLvl = 3;
  if (has_lglvl()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->lglvl(), output);
  }

  // optional uint32 lgPoints = 4;
  if (has_lgpoints()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->lgpoints(), output);
  }

  // optional uint64 gbEnergy = 5;
  if (has_gbenergy()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(5, this->gbenergy(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PTlgLvlUpRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint32 error = 1;
  if (has_error()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->error(), target);
  }

  // optional uint32 lgType = 2;
  if (has_lgtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->lgtype(), target);
  }

  // optional uint32 lgLvl = 3;
  if (has_lglvl()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->lglvl(), target);
  }

  // optional uint32 lgPoints = 4;
  if (has_lgpoints()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->lgpoints(), target);
  }

  // optional uint64 gbEnergy = 5;
  if (has_gbenergy()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(5, this->gbenergy(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PTlgLvlUpRsp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 error = 1;
    if (has_error()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->error());
    }

    // optional uint32 lgType = 2;
    if (has_lgtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->lgtype());
    }

    // optional uint32 lgLvl = 3;
    if (has_lglvl()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->lglvl());
    }

    // optional uint32 lgPoints = 4;
    if (has_lgpoints()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->lgpoints());
    }

    // optional uint64 gbEnergy = 5;
    if (has_gbenergy()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->gbenergy());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PTlgLvlUpRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PTlgLvlUpRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PTlgLvlUpRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PTlgLvlUpRsp::MergeFrom(const PTlgLvlUpRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_error()) {
      set_error(from.error());
    }
    if (from.has_lgtype()) {
      set_lgtype(from.lgtype());
    }
    if (from.has_lglvl()) {
      set_lglvl(from.lglvl());
    }
    if (from.has_lgpoints()) {
      set_lgpoints(from.lgpoints());
    }
    if (from.has_gbenergy()) {
      set_gbenergy(from.gbenergy());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PTlgLvlUpRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PTlgLvlUpRsp::CopyFrom(const PTlgLvlUpRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PTlgLvlUpRsp::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void PTlgLvlUpRsp::Swap(PTlgLvlUpRsp* other) {
  if (other != this) {
    std::swap(error_, other->error_);
    std::swap(lgtype_, other->lgtype_);
    std::swap(lglvl_, other->lglvl_);
    std::swap(lgpoints_, other->lgpoints_);
    std::swap(gbenergy_, other->gbenergy_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PTlgLvlUpRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PTlgLvlUpRsp_descriptor_;
  metadata.reflection = PTlgLvlUpRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PTlgPotionUseReq::kItemIdFieldNumber;
#endif  // !_MSC_VER

PTlgPotionUseReq::PTlgPotionUseReq()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void PTlgPotionUseReq::InitAsDefaultInstance() {
}

PTlgPotionUseReq::PTlgPotionUseReq(const PTlgPotionUseReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void PTlgPotionUseReq::SharedCtor() {
  _cached_size_ = 0;
  itemid_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PTlgPotionUseReq::~PTlgPotionUseReq() {
  SharedDtor();
}

void PTlgPotionUseReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PTlgPotionUseReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PTlgPotionUseReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PTlgPotionUseReq_descriptor_;
}

const PTlgPotionUseReq& PTlgPotionUseReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_PracticeTrue_2eproto();
  return *default_instance_;
}

PTlgPotionUseReq* PTlgPotionUseReq::default_instance_ = NULL;

PTlgPotionUseReq* PTlgPotionUseReq::New() const {
  return new PTlgPotionUseReq;
}

void PTlgPotionUseReq::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    itemid_ = GOOGLE_ULONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PTlgPotionUseReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint64 itemId = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &itemid_)));
          set_has_itemid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PTlgPotionUseReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint64 itemId = 1;
  if (has_itemid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->itemid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PTlgPotionUseReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint64 itemId = 1;
  if (has_itemid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->itemid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PTlgPotionUseReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint64 itemId = 1;
    if (has_itemid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->itemid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PTlgPotionUseReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PTlgPotionUseReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PTlgPotionUseReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PTlgPotionUseReq::MergeFrom(const PTlgPotionUseReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_itemid()) {
      set_itemid(from.itemid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PTlgPotionUseReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PTlgPotionUseReq::CopyFrom(const PTlgPotionUseReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PTlgPotionUseReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void PTlgPotionUseReq::Swap(PTlgPotionUseReq* other) {
  if (other != this) {
    std::swap(itemid_, other->itemid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PTlgPotionUseReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PTlgPotionUseReq_descriptor_;
  metadata.reflection = PTlgPotionUseReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PTlgPotionUseRsp::kLgTypesFieldNumber;
const int PTlgPotionUseRsp::kLgPointsFieldNumber;
const int PTlgPotionUseRsp::kLgPointsAddFieldNumber;
#endif  // !_MSC_VER

PTlgPotionUseRsp::PTlgPotionUseRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void PTlgPotionUseRsp::InitAsDefaultInstance() {
}

PTlgPotionUseRsp::PTlgPotionUseRsp(const PTlgPotionUseRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void PTlgPotionUseRsp::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PTlgPotionUseRsp::~PTlgPotionUseRsp() {
  SharedDtor();
}

void PTlgPotionUseRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PTlgPotionUseRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PTlgPotionUseRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PTlgPotionUseRsp_descriptor_;
}

const PTlgPotionUseRsp& PTlgPotionUseRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_PracticeTrue_2eproto();
  return *default_instance_;
}

PTlgPotionUseRsp* PTlgPotionUseRsp::default_instance_ = NULL;

PTlgPotionUseRsp* PTlgPotionUseRsp::New() const {
  return new PTlgPotionUseRsp;
}

void PTlgPotionUseRsp::Clear() {
  lgtypes_.Clear();
  lgpoints_.Clear();
  lgpointsadd_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PTlgPotionUseRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint32 lgTypes = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_lgTypes:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 8, input, this->mutable_lgtypes())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_lgtypes())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(8)) goto parse_lgTypes;
        if (input->ExpectTag(16)) goto parse_lgPoints;
        break;
      }

      // repeated uint32 lgPoints = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_lgPoints:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 16, input, this->mutable_lgpoints())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_lgpoints())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_lgPoints;
        if (input->ExpectTag(24)) goto parse_lgPointsAdd;
        break;
      }

      // repeated uint32 lgPointsAdd = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_lgPointsAdd:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 24, input, this->mutable_lgpointsadd())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_lgpointsadd())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_lgPointsAdd;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PTlgPotionUseRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated uint32 lgTypes = 1;
  for (int i = 0; i < this->lgtypes_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      1, this->lgtypes(i), output);
  }

  // repeated uint32 lgPoints = 2;
  for (int i = 0; i < this->lgpoints_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      2, this->lgpoints(i), output);
  }

  // repeated uint32 lgPointsAdd = 3;
  for (int i = 0; i < this->lgpointsadd_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      3, this->lgpointsadd(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PTlgPotionUseRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated uint32 lgTypes = 1;
  for (int i = 0; i < this->lgtypes_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(1, this->lgtypes(i), target);
  }

  // repeated uint32 lgPoints = 2;
  for (int i = 0; i < this->lgpoints_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(2, this->lgpoints(i), target);
  }

  // repeated uint32 lgPointsAdd = 3;
  for (int i = 0; i < this->lgpointsadd_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(3, this->lgpointsadd(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PTlgPotionUseRsp::ByteSize() const {
  int total_size = 0;

  // repeated uint32 lgTypes = 1;
  {
    int data_size = 0;
    for (int i = 0; i < this->lgtypes_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->lgtypes(i));
    }
    total_size += 1 * this->lgtypes_size() + data_size;
  }

  // repeated uint32 lgPoints = 2;
  {
    int data_size = 0;
    for (int i = 0; i < this->lgpoints_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->lgpoints(i));
    }
    total_size += 1 * this->lgpoints_size() + data_size;
  }

  // repeated uint32 lgPointsAdd = 3;
  {
    int data_size = 0;
    for (int i = 0; i < this->lgpointsadd_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->lgpointsadd(i));
    }
    total_size += 1 * this->lgpointsadd_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PTlgPotionUseRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PTlgPotionUseRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PTlgPotionUseRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PTlgPotionUseRsp::MergeFrom(const PTlgPotionUseRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  lgtypes_.MergeFrom(from.lgtypes_);
  lgpoints_.MergeFrom(from.lgpoints_);
  lgpointsadd_.MergeFrom(from.lgpointsadd_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PTlgPotionUseRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PTlgPotionUseRsp::CopyFrom(const PTlgPotionUseRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PTlgPotionUseRsp::IsInitialized() const {

  return true;
}

void PTlgPotionUseRsp::Swap(PTlgPotionUseRsp* other) {
  if (other != this) {
    lgtypes_.Swap(&other->lgtypes_);
    lgpoints_.Swap(&other->lgpoints_);
    lgpointsadd_.Swap(&other->lgpointsadd_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PTlgPotionUseRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PTlgPotionUseRsp_descriptor_;
  metadata.reflection = PTlgPotionUseRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PTPurchasedResult::kPurchasedRecordFieldNumber;
const int PTPurchasedResult::kGbXLForeverFieldNumber;
const int PTPurchasedResult::kGbXWPAddFieldNumber;
const int PTPurchasedResult::kGbEnergyCritRateFieldNumber;
const int PTPurchasedResult::kGbXLEventXWPAddFieldNumber;
const int PTPurchasedResult::kGbXLEventGetItemRateFieldNumber;
const int PTPurchasedResult::kEbLvlUpRateFieldNumber;
const int PTPurchasedResult::kEbFlyRateAddFieldNumber;
const int PTPurchasedResult::kEbFlyFailInvigorationAddFieldNumber;
const int PTPurchasedResult::kJmLvlUpRateAddFieldNumber;
const int PTPurchasedResult::kJmStageUpRateAddFieldNumber;
#endif  // !_MSC_VER

PTPurchasedResult::PTPurchasedResult()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void PTPurchasedResult::InitAsDefaultInstance() {
  purchasedrecord_ = const_cast< ::proto_ff::PTPurchaseRecord*>(&::proto_ff::PTPurchaseRecord::default_instance());
}

PTPurchasedResult::PTPurchasedResult(const PTPurchasedResult& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void PTPurchasedResult::SharedCtor() {
  _cached_size_ = 0;
  purchasedrecord_ = NULL;
  gbxlforever_ = 0u;
  gbxwpadd_ = 0u;
  gbenergycritrate_ = 0u;
  gbxleventxwpadd_ = 0u;
  gbxleventgetitemrate_ = 0u;
  eblvluprate_ = 0u;
  ebflyrateadd_ = 0u;
  ebflyfailinvigorationadd_ = 0u;
  jmlvluprateadd_ = 0u;
  jmstageuprateadd_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PTPurchasedResult::~PTPurchasedResult() {
  SharedDtor();
}

void PTPurchasedResult::SharedDtor() {
  if (this != default_instance_) {
    delete purchasedrecord_;
  }
}

void PTPurchasedResult::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PTPurchasedResult::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PTPurchasedResult_descriptor_;
}

const PTPurchasedResult& PTPurchasedResult::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_PracticeTrue_2eproto();
  return *default_instance_;
}

PTPurchasedResult* PTPurchasedResult::default_instance_ = NULL;

PTPurchasedResult* PTPurchasedResult::New() const {
  return new PTPurchasedResult;
}

void PTPurchasedResult::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_purchasedrecord()) {
      if (purchasedrecord_ != NULL) purchasedrecord_->::proto_ff::PTPurchaseRecord::Clear();
    }
    gbxlforever_ = 0u;
    gbxwpadd_ = 0u;
    gbenergycritrate_ = 0u;
    gbxleventxwpadd_ = 0u;
    gbxleventgetitemrate_ = 0u;
    eblvluprate_ = 0u;
    ebflyrateadd_ = 0u;
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    ebflyfailinvigorationadd_ = 0u;
    jmlvluprateadd_ = 0u;
    jmstageuprateadd_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PTPurchasedResult::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .proto_ff.PTPurchaseRecord purchasedRecord = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_purchasedrecord()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_gbXLForever;
        break;
      }

      // optional uint32 gbXLForever = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_gbXLForever:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &gbxlforever_)));
          set_has_gbxlforever();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_gbXWPAdd;
        break;
      }

      // optional uint32 gbXWPAdd = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_gbXWPAdd:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &gbxwpadd_)));
          set_has_gbxwpadd();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_gbEnergyCritRate;
        break;
      }

      // optional uint32 gbEnergyCritRate = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_gbEnergyCritRate:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &gbenergycritrate_)));
          set_has_gbenergycritrate();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_gbXLEventXWPAdd;
        break;
      }

      // optional uint32 gbXLEventXWPAdd = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_gbXLEventXWPAdd:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &gbxleventxwpadd_)));
          set_has_gbxleventxwpadd();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_gbXLEventGetItemRate;
        break;
      }

      // optional uint32 gbXLEventGetItemRate = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_gbXLEventGetItemRate:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &gbxleventgetitemrate_)));
          set_has_gbxleventgetitemrate();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_ebLvlUpRate;
        break;
      }

      // optional uint32 ebLvlUpRate = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_ebLvlUpRate:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &eblvluprate_)));
          set_has_eblvluprate();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(64)) goto parse_ebFlyRateAdd;
        break;
      }

      // optional uint32 ebFlyRateAdd = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_ebFlyRateAdd:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ebflyrateadd_)));
          set_has_ebflyrateadd();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(72)) goto parse_ebFlyFailInvigorationAdd;
        break;
      }

      // optional uint32 ebFlyFailInvigorationAdd = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_ebFlyFailInvigorationAdd:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ebflyfailinvigorationadd_)));
          set_has_ebflyfailinvigorationadd();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(80)) goto parse_jmLvlUpRateAdd;
        break;
      }

      // optional uint32 jmLvlUpRateAdd = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_jmLvlUpRateAdd:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &jmlvluprateadd_)));
          set_has_jmlvluprateadd();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(88)) goto parse_jmStageUpRateAdd;
        break;
      }

      // optional uint32 jmStageUpRateAdd = 11;
      case 11: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_jmStageUpRateAdd:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &jmstageuprateadd_)));
          set_has_jmstageuprateadd();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PTPurchasedResult::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .proto_ff.PTPurchaseRecord purchasedRecord = 1;
  if (has_purchasedrecord()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->purchasedrecord(), output);
  }

  // optional uint32 gbXLForever = 2;
  if (has_gbxlforever()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->gbxlforever(), output);
  }

  // optional uint32 gbXWPAdd = 3;
  if (has_gbxwpadd()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->gbxwpadd(), output);
  }

  // optional uint32 gbEnergyCritRate = 4;
  if (has_gbenergycritrate()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->gbenergycritrate(), output);
  }

  // optional uint32 gbXLEventXWPAdd = 5;
  if (has_gbxleventxwpadd()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->gbxleventxwpadd(), output);
  }

  // optional uint32 gbXLEventGetItemRate = 6;
  if (has_gbxleventgetitemrate()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->gbxleventgetitemrate(), output);
  }

  // optional uint32 ebLvlUpRate = 7;
  if (has_eblvluprate()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->eblvluprate(), output);
  }

  // optional uint32 ebFlyRateAdd = 8;
  if (has_ebflyrateadd()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->ebflyrateadd(), output);
  }

  // optional uint32 ebFlyFailInvigorationAdd = 9;
  if (has_ebflyfailinvigorationadd()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->ebflyfailinvigorationadd(), output);
  }

  // optional uint32 jmLvlUpRateAdd = 10;
  if (has_jmlvluprateadd()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(10, this->jmlvluprateadd(), output);
  }

  // optional uint32 jmStageUpRateAdd = 11;
  if (has_jmstageuprateadd()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(11, this->jmstageuprateadd(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PTPurchasedResult::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .proto_ff.PTPurchaseRecord purchasedRecord = 1;
  if (has_purchasedrecord()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->purchasedrecord(), target);
  }

  // optional uint32 gbXLForever = 2;
  if (has_gbxlforever()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->gbxlforever(), target);
  }

  // optional uint32 gbXWPAdd = 3;
  if (has_gbxwpadd()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->gbxwpadd(), target);
  }

  // optional uint32 gbEnergyCritRate = 4;
  if (has_gbenergycritrate()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->gbenergycritrate(), target);
  }

  // optional uint32 gbXLEventXWPAdd = 5;
  if (has_gbxleventxwpadd()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->gbxleventxwpadd(), target);
  }

  // optional uint32 gbXLEventGetItemRate = 6;
  if (has_gbxleventgetitemrate()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->gbxleventgetitemrate(), target);
  }

  // optional uint32 ebLvlUpRate = 7;
  if (has_eblvluprate()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->eblvluprate(), target);
  }

  // optional uint32 ebFlyRateAdd = 8;
  if (has_ebflyrateadd()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->ebflyrateadd(), target);
  }

  // optional uint32 ebFlyFailInvigorationAdd = 9;
  if (has_ebflyfailinvigorationadd()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->ebflyfailinvigorationadd(), target);
  }

  // optional uint32 jmLvlUpRateAdd = 10;
  if (has_jmlvluprateadd()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(10, this->jmlvluprateadd(), target);
  }

  // optional uint32 jmStageUpRateAdd = 11;
  if (has_jmstageuprateadd()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(11, this->jmstageuprateadd(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PTPurchasedResult::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .proto_ff.PTPurchaseRecord purchasedRecord = 1;
    if (has_purchasedrecord()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->purchasedrecord());
    }

    // optional uint32 gbXLForever = 2;
    if (has_gbxlforever()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->gbxlforever());
    }

    // optional uint32 gbXWPAdd = 3;
    if (has_gbxwpadd()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->gbxwpadd());
    }

    // optional uint32 gbEnergyCritRate = 4;
    if (has_gbenergycritrate()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->gbenergycritrate());
    }

    // optional uint32 gbXLEventXWPAdd = 5;
    if (has_gbxleventxwpadd()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->gbxleventxwpadd());
    }

    // optional uint32 gbXLEventGetItemRate = 6;
    if (has_gbxleventgetitemrate()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->gbxleventgetitemrate());
    }

    // optional uint32 ebLvlUpRate = 7;
    if (has_eblvluprate()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->eblvluprate());
    }

    // optional uint32 ebFlyRateAdd = 8;
    if (has_ebflyrateadd()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->ebflyrateadd());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional uint32 ebFlyFailInvigorationAdd = 9;
    if (has_ebflyfailinvigorationadd()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->ebflyfailinvigorationadd());
    }

    // optional uint32 jmLvlUpRateAdd = 10;
    if (has_jmlvluprateadd()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->jmlvluprateadd());
    }

    // optional uint32 jmStageUpRateAdd = 11;
    if (has_jmstageuprateadd()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->jmstageuprateadd());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PTPurchasedResult::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PTPurchasedResult* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PTPurchasedResult*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PTPurchasedResult::MergeFrom(const PTPurchasedResult& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_purchasedrecord()) {
      mutable_purchasedrecord()->::proto_ff::PTPurchaseRecord::MergeFrom(from.purchasedrecord());
    }
    if (from.has_gbxlforever()) {
      set_gbxlforever(from.gbxlforever());
    }
    if (from.has_gbxwpadd()) {
      set_gbxwpadd(from.gbxwpadd());
    }
    if (from.has_gbenergycritrate()) {
      set_gbenergycritrate(from.gbenergycritrate());
    }
    if (from.has_gbxleventxwpadd()) {
      set_gbxleventxwpadd(from.gbxleventxwpadd());
    }
    if (from.has_gbxleventgetitemrate()) {
      set_gbxleventgetitemrate(from.gbxleventgetitemrate());
    }
    if (from.has_eblvluprate()) {
      set_eblvluprate(from.eblvluprate());
    }
    if (from.has_ebflyrateadd()) {
      set_ebflyrateadd(from.ebflyrateadd());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_ebflyfailinvigorationadd()) {
      set_ebflyfailinvigorationadd(from.ebflyfailinvigorationadd());
    }
    if (from.has_jmlvluprateadd()) {
      set_jmlvluprateadd(from.jmlvluprateadd());
    }
    if (from.has_jmstageuprateadd()) {
      set_jmstageuprateadd(from.jmstageuprateadd());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PTPurchasedResult::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PTPurchasedResult::CopyFrom(const PTPurchasedResult& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PTPurchasedResult::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (has_purchasedrecord()) {
    if (!this->purchasedrecord().IsInitialized()) return false;
  }
  return true;
}

void PTPurchasedResult::Swap(PTPurchasedResult* other) {
  if (other != this) {
    std::swap(purchasedrecord_, other->purchasedrecord_);
    std::swap(gbxlforever_, other->gbxlforever_);
    std::swap(gbxwpadd_, other->gbxwpadd_);
    std::swap(gbenergycritrate_, other->gbenergycritrate_);
    std::swap(gbxleventxwpadd_, other->gbxleventxwpadd_);
    std::swap(gbxleventgetitemrate_, other->gbxleventgetitemrate_);
    std::swap(eblvluprate_, other->eblvluprate_);
    std::swap(ebflyrateadd_, other->ebflyrateadd_);
    std::swap(ebflyfailinvigorationadd_, other->ebflyfailinvigorationadd_);
    std::swap(jmlvluprateadd_, other->jmlvluprateadd_);
    std::swap(jmstageuprateadd_, other->jmstageuprateadd_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PTPurchasedResult::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PTPurchasedResult_descriptor_;
  metadata.reflection = PTPurchasedResult_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PTPurchaseGfBookResult::kSuccessFieldNumber;
const int PTPurchaseGfBookResult::kGfTypeFieldNumber;
const int PTPurchaseGfBookResult::kPurchasedTimeFieldNumber;
#endif  // !_MSC_VER

PTPurchaseGfBookResult::PTPurchaseGfBookResult()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void PTPurchaseGfBookResult::InitAsDefaultInstance() {
}

PTPurchaseGfBookResult::PTPurchaseGfBookResult(const PTPurchaseGfBookResult& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void PTPurchaseGfBookResult::SharedCtor() {
  _cached_size_ = 0;
  success_ = 0u;
  gftype_ = 0u;
  purchasedtime_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PTPurchaseGfBookResult::~PTPurchaseGfBookResult() {
  SharedDtor();
}

void PTPurchaseGfBookResult::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PTPurchaseGfBookResult::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PTPurchaseGfBookResult::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PTPurchaseGfBookResult_descriptor_;
}

const PTPurchaseGfBookResult& PTPurchaseGfBookResult::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_PracticeTrue_2eproto();
  return *default_instance_;
}

PTPurchaseGfBookResult* PTPurchaseGfBookResult::default_instance_ = NULL;

PTPurchaseGfBookResult* PTPurchaseGfBookResult::New() const {
  return new PTPurchaseGfBookResult;
}

void PTPurchaseGfBookResult::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    success_ = 0u;
    gftype_ = 0u;
    purchasedtime_ = GOOGLE_ULONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PTPurchaseGfBookResult::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 success = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &success_)));
          set_has_success();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_gfType;
        break;
      }

      // required uint32 gfType = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_gfType:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &gftype_)));
          set_has_gftype();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_purchasedTime;
        break;
      }

      // required uint64 purchasedTime = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_purchasedTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &purchasedtime_)));
          set_has_purchasedtime();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PTPurchaseGfBookResult::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint32 success = 1;
  if (has_success()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->success(), output);
  }

  // required uint32 gfType = 2;
  if (has_gftype()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->gftype(), output);
  }

  // required uint64 purchasedTime = 3;
  if (has_purchasedtime()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->purchasedtime(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PTPurchaseGfBookResult::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint32 success = 1;
  if (has_success()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->success(), target);
  }

  // required uint32 gfType = 2;
  if (has_gftype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->gftype(), target);
  }

  // required uint64 purchasedTime = 3;
  if (has_purchasedtime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->purchasedtime(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PTPurchaseGfBookResult::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 success = 1;
    if (has_success()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->success());
    }

    // required uint32 gfType = 2;
    if (has_gftype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->gftype());
    }

    // required uint64 purchasedTime = 3;
    if (has_purchasedtime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->purchasedtime());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PTPurchaseGfBookResult::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PTPurchaseGfBookResult* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PTPurchaseGfBookResult*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PTPurchaseGfBookResult::MergeFrom(const PTPurchaseGfBookResult& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_success()) {
      set_success(from.success());
    }
    if (from.has_gftype()) {
      set_gftype(from.gftype());
    }
    if (from.has_purchasedtime()) {
      set_purchasedtime(from.purchasedtime());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PTPurchaseGfBookResult::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PTPurchaseGfBookResult::CopyFrom(const PTPurchaseGfBookResult& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PTPurchaseGfBookResult::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  return true;
}

void PTPurchaseGfBookResult::Swap(PTPurchaseGfBookResult* other) {
  if (other != this) {
    std::swap(success_, other->success_);
    std::swap(gftype_, other->gftype_);
    std::swap(purchasedtime_, other->purchasedtime_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PTPurchaseGfBookResult::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PTPurchaseGfBookResult_descriptor_;
  metadata.reflection = PTPurchaseGfBookResult_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

PSDatasReq::PSDatasReq()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void PSDatasReq::InitAsDefaultInstance() {
}

PSDatasReq::PSDatasReq(const PSDatasReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void PSDatasReq::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PSDatasReq::~PSDatasReq() {
  SharedDtor();
}

void PSDatasReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PSDatasReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PSDatasReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PSDatasReq_descriptor_;
}

const PSDatasReq& PSDatasReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_PracticeTrue_2eproto();
  return *default_instance_;
}

PSDatasReq* PSDatasReq::default_instance_ = NULL;

PSDatasReq* PSDatasReq::New() const {
  return new PSDatasReq;
}

void PSDatasReq::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PSDatasReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void PSDatasReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PSDatasReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PSDatasReq::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PSDatasReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PSDatasReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PSDatasReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PSDatasReq::MergeFrom(const PSDatasReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PSDatasReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PSDatasReq::CopyFrom(const PSDatasReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PSDatasReq::IsInitialized() const {

  return true;
}

void PSDatasReq::Swap(PSDatasReq* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PSDatasReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PSDatasReq_descriptor_;
  metadata.reflection = PSDatasReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PSDatasRsp::kDatasFieldNumber;
#endif  // !_MSC_VER

PSDatasRsp::PSDatasRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void PSDatasRsp::InitAsDefaultInstance() {
  datas_ = const_cast< ::proto_ff::PSDatas*>(&::proto_ff::PSDatas::default_instance());
}

PSDatasRsp::PSDatasRsp(const PSDatasRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void PSDatasRsp::SharedCtor() {
  _cached_size_ = 0;
  datas_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PSDatasRsp::~PSDatasRsp() {
  SharedDtor();
}

void PSDatasRsp::SharedDtor() {
  if (this != default_instance_) {
    delete datas_;
  }
}

void PSDatasRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PSDatasRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PSDatasRsp_descriptor_;
}

const PSDatasRsp& PSDatasRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_PracticeTrue_2eproto();
  return *default_instance_;
}

PSDatasRsp* PSDatasRsp::default_instance_ = NULL;

PSDatasRsp* PSDatasRsp::New() const {
  return new PSDatasRsp;
}

void PSDatasRsp::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_datas()) {
      if (datas_ != NULL) datas_->::proto_ff::PSDatas::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PSDatasRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .proto_ff.PSDatas datas = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_datas()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PSDatasRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .proto_ff.PSDatas datas = 1;
  if (has_datas()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->datas(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PSDatasRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .proto_ff.PSDatas datas = 1;
  if (has_datas()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->datas(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PSDatasRsp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .proto_ff.PSDatas datas = 1;
    if (has_datas()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->datas());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PSDatasRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PSDatasRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PSDatasRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PSDatasRsp::MergeFrom(const PSDatasRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_datas()) {
      mutable_datas()->::proto_ff::PSDatas::MergeFrom(from.datas());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PSDatasRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PSDatasRsp::CopyFrom(const PSDatasRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PSDatasRsp::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (has_datas()) {
    if (!this->datas().IsInitialized()) return false;
  }
  return true;
}

void PSDatasRsp::Swap(PSDatasRsp* other) {
  if (other != this) {
    std::swap(datas_, other->datas_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PSDatasRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PSDatasRsp_descriptor_;
  metadata.reflection = PSDatasRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PSPurchaseReq::kShopIdFieldNumber;
const int PSPurchaseReq::kGoodsIdFieldNumber;
#endif  // !_MSC_VER

PSPurchaseReq::PSPurchaseReq()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void PSPurchaseReq::InitAsDefaultInstance() {
}

PSPurchaseReq::PSPurchaseReq(const PSPurchaseReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void PSPurchaseReq::SharedCtor() {
  _cached_size_ = 0;
  shopid_ = 0u;
  goodsid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PSPurchaseReq::~PSPurchaseReq() {
  SharedDtor();
}

void PSPurchaseReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PSPurchaseReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PSPurchaseReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PSPurchaseReq_descriptor_;
}

const PSPurchaseReq& PSPurchaseReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_PracticeTrue_2eproto();
  return *default_instance_;
}

PSPurchaseReq* PSPurchaseReq::default_instance_ = NULL;

PSPurchaseReq* PSPurchaseReq::New() const {
  return new PSPurchaseReq;
}

void PSPurchaseReq::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    shopid_ = 0u;
    goodsid_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PSPurchaseReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 shopId = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &shopid_)));
          set_has_shopid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_goodsId;
        break;
      }

      // required uint32 goodsId = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_goodsId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &goodsid_)));
          set_has_goodsid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PSPurchaseReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint32 shopId = 1;
  if (has_shopid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->shopid(), output);
  }

  // required uint32 goodsId = 2;
  if (has_goodsid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->goodsid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PSPurchaseReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint32 shopId = 1;
  if (has_shopid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->shopid(), target);
  }

  // required uint32 goodsId = 2;
  if (has_goodsid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->goodsid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PSPurchaseReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 shopId = 1;
    if (has_shopid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->shopid());
    }

    // required uint32 goodsId = 2;
    if (has_goodsid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->goodsid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PSPurchaseReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PSPurchaseReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PSPurchaseReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PSPurchaseReq::MergeFrom(const PSPurchaseReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_shopid()) {
      set_shopid(from.shopid());
    }
    if (from.has_goodsid()) {
      set_goodsid(from.goodsid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PSPurchaseReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PSPurchaseReq::CopyFrom(const PSPurchaseReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PSPurchaseReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void PSPurchaseReq::Swap(PSPurchaseReq* other) {
  if (other != this) {
    std::swap(shopid_, other->shopid_);
    std::swap(goodsid_, other->goodsid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PSPurchaseReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PSPurchaseReq_descriptor_;
  metadata.reflection = PSPurchaseReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PSPurchaseRsp::kErrcodeFieldNumber;
const int PSPurchaseRsp::kShopIdFieldNumber;
const int PSPurchaseRsp::kGoodsIdFieldNumber;
const int PSPurchaseRsp::kAmountFieldNumber;
const int PSPurchaseRsp::kShopTimeFieldNumber;
#endif  // !_MSC_VER

PSPurchaseRsp::PSPurchaseRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void PSPurchaseRsp::InitAsDefaultInstance() {
}

PSPurchaseRsp::PSPurchaseRsp(const PSPurchaseRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void PSPurchaseRsp::SharedCtor() {
  _cached_size_ = 0;
  errcode_ = 0u;
  shopid_ = 0u;
  goodsid_ = 0u;
  amount_ = 0u;
  shoptime_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PSPurchaseRsp::~PSPurchaseRsp() {
  SharedDtor();
}

void PSPurchaseRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PSPurchaseRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PSPurchaseRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PSPurchaseRsp_descriptor_;
}

const PSPurchaseRsp& PSPurchaseRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_PracticeTrue_2eproto();
  return *default_instance_;
}

PSPurchaseRsp* PSPurchaseRsp::default_instance_ = NULL;

PSPurchaseRsp* PSPurchaseRsp::New() const {
  return new PSPurchaseRsp;
}

void PSPurchaseRsp::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    errcode_ = 0u;
    shopid_ = 0u;
    goodsid_ = 0u;
    amount_ = 0u;
    shoptime_ = GOOGLE_ULONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PSPurchaseRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 errcode = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &errcode_)));
          set_has_errcode();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_shopId;
        break;
      }

      // optional uint32 shopId = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_shopId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &shopid_)));
          set_has_shopid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_goodsId;
        break;
      }

      // optional uint32 goodsId = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_goodsId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &goodsid_)));
          set_has_goodsid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_amount;
        break;
      }

      // optional uint32 amount = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_amount:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &amount_)));
          set_has_amount();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_shopTime;
        break;
      }

      // optional uint64 shopTime = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_shopTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &shoptime_)));
          set_has_shoptime();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PSPurchaseRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint32 errcode = 1;
  if (has_errcode()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->errcode(), output);
  }

  // optional uint32 shopId = 2;
  if (has_shopid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->shopid(), output);
  }

  // optional uint32 goodsId = 3;
  if (has_goodsid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->goodsid(), output);
  }

  // optional uint32 amount = 4;
  if (has_amount()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->amount(), output);
  }

  // optional uint64 shopTime = 5;
  if (has_shoptime()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(5, this->shoptime(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PSPurchaseRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint32 errcode = 1;
  if (has_errcode()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->errcode(), target);
  }

  // optional uint32 shopId = 2;
  if (has_shopid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->shopid(), target);
  }

  // optional uint32 goodsId = 3;
  if (has_goodsid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->goodsid(), target);
  }

  // optional uint32 amount = 4;
  if (has_amount()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->amount(), target);
  }

  // optional uint64 shopTime = 5;
  if (has_shoptime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(5, this->shoptime(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PSPurchaseRsp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 errcode = 1;
    if (has_errcode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->errcode());
    }

    // optional uint32 shopId = 2;
    if (has_shopid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->shopid());
    }

    // optional uint32 goodsId = 3;
    if (has_goodsid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->goodsid());
    }

    // optional uint32 amount = 4;
    if (has_amount()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->amount());
    }

    // optional uint64 shopTime = 5;
    if (has_shoptime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->shoptime());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PSPurchaseRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PSPurchaseRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PSPurchaseRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PSPurchaseRsp::MergeFrom(const PSPurchaseRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_errcode()) {
      set_errcode(from.errcode());
    }
    if (from.has_shopid()) {
      set_shopid(from.shopid());
    }
    if (from.has_goodsid()) {
      set_goodsid(from.goodsid());
    }
    if (from.has_amount()) {
      set_amount(from.amount());
    }
    if (from.has_shoptime()) {
      set_shoptime(from.shoptime());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PSPurchaseRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PSPurchaseRsp::CopyFrom(const PSPurchaseRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PSPurchaseRsp::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void PSPurchaseRsp::Swap(PSPurchaseRsp* other) {
  if (other != this) {
    std::swap(errcode_, other->errcode_);
    std::swap(shopid_, other->shopid_);
    std::swap(goodsid_, other->goodsid_);
    std::swap(amount_, other->amount_);
    std::swap(shoptime_, other->shoptime_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PSPurchaseRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PSPurchaseRsp_descriptor_;
  metadata.reflection = PSPurchaseRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PSRefreshReq::kShopIdFieldNumber;
#endif  // !_MSC_VER

PSRefreshReq::PSRefreshReq()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void PSRefreshReq::InitAsDefaultInstance() {
}

PSRefreshReq::PSRefreshReq(const PSRefreshReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void PSRefreshReq::SharedCtor() {
  _cached_size_ = 0;
  shopid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PSRefreshReq::~PSRefreshReq() {
  SharedDtor();
}

void PSRefreshReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PSRefreshReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PSRefreshReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PSRefreshReq_descriptor_;
}

const PSRefreshReq& PSRefreshReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_PracticeTrue_2eproto();
  return *default_instance_;
}

PSRefreshReq* PSRefreshReq::default_instance_ = NULL;

PSRefreshReq* PSRefreshReq::New() const {
  return new PSRefreshReq;
}

void PSRefreshReq::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    shopid_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PSRefreshReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 shopId = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &shopid_)));
          set_has_shopid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PSRefreshReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint32 shopId = 1;
  if (has_shopid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->shopid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PSRefreshReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint32 shopId = 1;
  if (has_shopid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->shopid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PSRefreshReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 shopId = 1;
    if (has_shopid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->shopid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PSRefreshReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PSRefreshReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PSRefreshReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PSRefreshReq::MergeFrom(const PSRefreshReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_shopid()) {
      set_shopid(from.shopid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PSRefreshReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PSRefreshReq::CopyFrom(const PSRefreshReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PSRefreshReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void PSRefreshReq::Swap(PSRefreshReq* other) {
  if (other != this) {
    std::swap(shopid_, other->shopid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PSRefreshReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PSRefreshReq_descriptor_;
  metadata.reflection = PSRefreshReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PSRefreshRsp::kErrcodeFieldNumber;
const int PSRefreshRsp::kShopIdFieldNumber;
const int PSRefreshRsp::kSaleListFieldNumber;
const int PSRefreshRsp::kFreeRefreshCountFieldNumber;
#endif  // !_MSC_VER

PSRefreshRsp::PSRefreshRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void PSRefreshRsp::InitAsDefaultInstance() {
}

PSRefreshRsp::PSRefreshRsp(const PSRefreshRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void PSRefreshRsp::SharedCtor() {
  _cached_size_ = 0;
  errcode_ = 0u;
  shopid_ = 0u;
  freerefreshcount_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PSRefreshRsp::~PSRefreshRsp() {
  SharedDtor();
}

void PSRefreshRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PSRefreshRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PSRefreshRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PSRefreshRsp_descriptor_;
}

const PSRefreshRsp& PSRefreshRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_PracticeTrue_2eproto();
  return *default_instance_;
}

PSRefreshRsp* PSRefreshRsp::default_instance_ = NULL;

PSRefreshRsp* PSRefreshRsp::New() const {
  return new PSRefreshRsp;
}

void PSRefreshRsp::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    errcode_ = 0u;
    shopid_ = 0u;
    freerefreshcount_ = 0u;
  }
  salelist_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PSRefreshRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 errcode = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &errcode_)));
          set_has_errcode();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_shopId;
        break;
      }

      // optional uint32 shopId = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_shopId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &shopid_)));
          set_has_shopid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_saleList;
        break;
      }

      // repeated .proto_ff.PSDGoods saleList = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_saleList:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_salelist()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_saleList;
        if (input->ExpectTag(32)) goto parse_freeRefreshCount;
        break;
      }

      // optional uint32 freeRefreshCount = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_freeRefreshCount:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &freerefreshcount_)));
          set_has_freerefreshcount();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PSRefreshRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint32 errcode = 1;
  if (has_errcode()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->errcode(), output);
  }

  // optional uint32 shopId = 2;
  if (has_shopid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->shopid(), output);
  }

  // repeated .proto_ff.PSDGoods saleList = 3;
  for (int i = 0; i < this->salelist_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->salelist(i), output);
  }

  // optional uint32 freeRefreshCount = 4;
  if (has_freerefreshcount()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->freerefreshcount(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PSRefreshRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint32 errcode = 1;
  if (has_errcode()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->errcode(), target);
  }

  // optional uint32 shopId = 2;
  if (has_shopid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->shopid(), target);
  }

  // repeated .proto_ff.PSDGoods saleList = 3;
  for (int i = 0; i < this->salelist_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->salelist(i), target);
  }

  // optional uint32 freeRefreshCount = 4;
  if (has_freerefreshcount()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->freerefreshcount(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PSRefreshRsp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 errcode = 1;
    if (has_errcode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->errcode());
    }

    // optional uint32 shopId = 2;
    if (has_shopid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->shopid());
    }

    // optional uint32 freeRefreshCount = 4;
    if (has_freerefreshcount()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->freerefreshcount());
    }

  }
  // repeated .proto_ff.PSDGoods saleList = 3;
  total_size += 1 * this->salelist_size();
  for (int i = 0; i < this->salelist_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->salelist(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PSRefreshRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PSRefreshRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PSRefreshRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PSRefreshRsp::MergeFrom(const PSRefreshRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  salelist_.MergeFrom(from.salelist_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_errcode()) {
      set_errcode(from.errcode());
    }
    if (from.has_shopid()) {
      set_shopid(from.shopid());
    }
    if (from.has_freerefreshcount()) {
      set_freerefreshcount(from.freerefreshcount());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PSRefreshRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PSRefreshRsp::CopyFrom(const PSRefreshRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PSRefreshRsp::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  for (int i = 0; i < salelist_size(); i++) {
    if (!this->salelist(i).IsInitialized()) return false;
  }
  return true;
}

void PSRefreshRsp::Swap(PSRefreshRsp* other) {
  if (other != this) {
    std::swap(errcode_, other->errcode_);
    std::swap(shopid_, other->shopid_);
    salelist_.Swap(&other->salelist_);
    std::swap(freerefreshcount_, other->freerefreshcount_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PSRefreshRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PSRefreshRsp_descriptor_;
  metadata.reflection = PSRefreshRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PSShopsRmvNt::kShopIdsFieldNumber;
#endif  // !_MSC_VER

PSShopsRmvNt::PSShopsRmvNt()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void PSShopsRmvNt::InitAsDefaultInstance() {
}

PSShopsRmvNt::PSShopsRmvNt(const PSShopsRmvNt& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void PSShopsRmvNt::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PSShopsRmvNt::~PSShopsRmvNt() {
  SharedDtor();
}

void PSShopsRmvNt::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PSShopsRmvNt::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PSShopsRmvNt::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PSShopsRmvNt_descriptor_;
}

const PSShopsRmvNt& PSShopsRmvNt::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_PracticeTrue_2eproto();
  return *default_instance_;
}

PSShopsRmvNt* PSShopsRmvNt::default_instance_ = NULL;

PSShopsRmvNt* PSShopsRmvNt::New() const {
  return new PSShopsRmvNt;
}

void PSShopsRmvNt::Clear() {
  shopids_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PSShopsRmvNt::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint32 shopIds = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_shopIds:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 8, input, this->mutable_shopids())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_shopids())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(8)) goto parse_shopIds;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PSShopsRmvNt::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated uint32 shopIds = 1;
  for (int i = 0; i < this->shopids_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      1, this->shopids(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PSShopsRmvNt::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated uint32 shopIds = 1;
  for (int i = 0; i < this->shopids_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(1, this->shopids(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PSShopsRmvNt::ByteSize() const {
  int total_size = 0;

  // repeated uint32 shopIds = 1;
  {
    int data_size = 0;
    for (int i = 0; i < this->shopids_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->shopids(i));
    }
    total_size += 1 * this->shopids_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PSShopsRmvNt::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PSShopsRmvNt* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PSShopsRmvNt*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PSShopsRmvNt::MergeFrom(const PSShopsRmvNt& from) {
  GOOGLE_CHECK_NE(&from, this);
  shopids_.MergeFrom(from.shopids_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PSShopsRmvNt::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PSShopsRmvNt::CopyFrom(const PSShopsRmvNt& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PSShopsRmvNt::IsInitialized() const {

  return true;
}

void PSShopsRmvNt::Swap(PSShopsRmvNt* other) {
  if (other != this) {
    shopids_.Swap(&other->shopids_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PSShopsRmvNt::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PSShopsRmvNt_descriptor_;
  metadata.reflection = PSShopsRmvNt_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PSShopAddNt::kShopFieldNumber;
#endif  // !_MSC_VER

PSShopAddNt::PSShopAddNt()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void PSShopAddNt::InitAsDefaultInstance() {
  shop_ = const_cast< ::proto_ff::PSDShop*>(&::proto_ff::PSDShop::default_instance());
}

PSShopAddNt::PSShopAddNt(const PSShopAddNt& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void PSShopAddNt::SharedCtor() {
  _cached_size_ = 0;
  shop_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PSShopAddNt::~PSShopAddNt() {
  SharedDtor();
}

void PSShopAddNt::SharedDtor() {
  if (this != default_instance_) {
    delete shop_;
  }
}

void PSShopAddNt::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PSShopAddNt::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PSShopAddNt_descriptor_;
}

const PSShopAddNt& PSShopAddNt::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_PracticeTrue_2eproto();
  return *default_instance_;
}

PSShopAddNt* PSShopAddNt::default_instance_ = NULL;

PSShopAddNt* PSShopAddNt::New() const {
  return new PSShopAddNt;
}

void PSShopAddNt::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_shop()) {
      if (shop_ != NULL) shop_->::proto_ff::PSDShop::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PSShopAddNt::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .proto_ff.PSDShop shop = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_shop()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PSShopAddNt::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .proto_ff.PSDShop shop = 1;
  if (has_shop()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->shop(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PSShopAddNt::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .proto_ff.PSDShop shop = 1;
  if (has_shop()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->shop(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PSShopAddNt::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .proto_ff.PSDShop shop = 1;
    if (has_shop()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->shop());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PSShopAddNt::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PSShopAddNt* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PSShopAddNt*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PSShopAddNt::MergeFrom(const PSShopAddNt& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_shop()) {
      mutable_shop()->::proto_ff::PSDShop::MergeFrom(from.shop());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PSShopAddNt::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PSShopAddNt::CopyFrom(const PSShopAddNt& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PSShopAddNt::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (has_shop()) {
    if (!this->shop().IsInitialized()) return false;
  }
  return true;
}

void PSShopAddNt::Swap(PSShopAddNt* other) {
  if (other != this) {
    std::swap(shop_, other->shop_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PSShopAddNt::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PSShopAddNt_descriptor_;
  metadata.reflection = PSShopAddNt_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto_ff

// @@protoc_insertion_point(global_scope)
