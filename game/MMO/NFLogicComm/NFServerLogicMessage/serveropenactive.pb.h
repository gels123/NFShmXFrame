// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: serveropenactive.proto

#ifndef PROTOBUF_serveropenactive_2eproto__INCLUDED
#define PROTOBUF_serveropenactive_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "yd_fieldoptions.pb.h"
// @@protoc_insertion_point(includes)

namespace proto_ff {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_serveropenactive_2eproto();
void protobuf_AssignDesc_serveropenactive_2eproto();
void protobuf_ShutdownFile_serveropenactive_2eproto();

class serveropenactiveserviceActivity;
class Sheet_serveropenactiveserviceActivity;
class serveropenactivepageBook;
class Sheet_serveropenactivepageBook;
class serveropenactivepage;
class Sheet_serveropenactivepage;
class serveropenactivemRank;
class Sheet_serveropenactivemRank;
class serveropenactivemAdvanced;
class Sheet_serveropenactivemAdvanced;
class serveropenactivemRecharge;
class Sheet_serveropenactivemRecharge;
class serveropenactivemGoods;
class Sheet_serveropenactivemGoods;

// ===================================================================

class serveropenactiveserviceActivity : public ::google::protobuf::Message {
 public:
  serveropenactiveserviceActivity();
  virtual ~serveropenactiveserviceActivity();

  serveropenactiveserviceActivity(const serveropenactiveserviceActivity& from);

  inline serveropenactiveserviceActivity& operator=(const serveropenactiveserviceActivity& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const serveropenactiveserviceActivity& default_instance();

  void Swap(serveropenactiveserviceActivity* other);

  // implements Message ----------------------------------------------

  serveropenactiveserviceActivity* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const serveropenactiveserviceActivity& from);
  void MergeFrom(const serveropenactiveserviceActivity& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int64 id() const;
  inline void set_id(::google::protobuf::int64 value);

  // optional int32 servertype = 2;
  inline bool has_servertype() const;
  inline void clear_servertype();
  static const int kServertypeFieldNumber = 2;
  inline ::google::protobuf::int32 servertype() const;
  inline void set_servertype(::google::protobuf::int32 value);

  // optional int32 timeA = 3;
  inline bool has_timea() const;
  inline void clear_timea();
  static const int kTimeAFieldNumber = 3;
  inline ::google::protobuf::int32 timea() const;
  inline void set_timea(::google::protobuf::int32 value);

  // optional int32 timeB = 4;
  inline bool has_timeb() const;
  inline void clear_timeb();
  static const int kTimeBFieldNumber = 4;
  inline ::google::protobuf::int32 timeb() const;
  inline void set_timeb(::google::protobuf::int32 value);

  // optional string pageId = 5;
  inline bool has_pageid() const;
  inline void clear_pageid();
  static const int kPageIdFieldNumber = 5;
  inline const ::std::string& pageid() const;
  inline void set_pageid(const ::std::string& value);
  inline void set_pageid(const char* value);
  inline void set_pageid(const char* value, size_t size);
  inline ::std::string* mutable_pageid();
  inline ::std::string* release_pageid();
  inline void set_allocated_pageid(::std::string* pageid);

  // @@protoc_insertion_point(class_scope:proto_ff.serveropenactiveserviceActivity)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_servertype();
  inline void clear_has_servertype();
  inline void set_has_timea();
  inline void clear_has_timea();
  inline void set_has_timeb();
  inline void clear_has_timeb();
  inline void set_has_pageid();
  inline void clear_has_pageid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 id_;
  ::google::protobuf::int32 servertype_;
  ::google::protobuf::int32 timea_;
  ::std::string* pageid_;
  ::google::protobuf::int32 timeb_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_serveropenactive_2eproto();
  friend void protobuf_AssignDesc_serveropenactive_2eproto();
  friend void protobuf_ShutdownFile_serveropenactive_2eproto();

  void InitAsDefaultInstance();
  static serveropenactiveserviceActivity* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_serveropenactiveserviceActivity : public ::google::protobuf::Message {
 public:
  Sheet_serveropenactiveserviceActivity();
  virtual ~Sheet_serveropenactiveserviceActivity();

  Sheet_serveropenactiveserviceActivity(const Sheet_serveropenactiveserviceActivity& from);

  inline Sheet_serveropenactiveserviceActivity& operator=(const Sheet_serveropenactiveserviceActivity& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_serveropenactiveserviceActivity& default_instance();

  void Swap(Sheet_serveropenactiveserviceActivity* other);

  // implements Message ----------------------------------------------

  Sheet_serveropenactiveserviceActivity* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_serveropenactiveserviceActivity& from);
  void MergeFrom(const Sheet_serveropenactiveserviceActivity& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.serveropenactiveserviceActivity serveropenactiveserviceActivity_List = 1;
  inline int serveropenactiveserviceactivity_list_size() const;
  inline void clear_serveropenactiveserviceactivity_list();
  static const int kServeropenactiveserviceActivityListFieldNumber = 1;
  inline const ::proto_ff::serveropenactiveserviceActivity& serveropenactiveserviceactivity_list(int index) const;
  inline ::proto_ff::serveropenactiveserviceActivity* mutable_serveropenactiveserviceactivity_list(int index);
  inline ::proto_ff::serveropenactiveserviceActivity* add_serveropenactiveserviceactivity_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::serveropenactiveserviceActivity >&
      serveropenactiveserviceactivity_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::serveropenactiveserviceActivity >*
      mutable_serveropenactiveserviceactivity_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_serveropenactiveserviceActivity)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::serveropenactiveserviceActivity > serveropenactiveserviceactivity_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_serveropenactive_2eproto();
  friend void protobuf_AssignDesc_serveropenactive_2eproto();
  friend void protobuf_ShutdownFile_serveropenactive_2eproto();

  void InitAsDefaultInstance();
  static Sheet_serveropenactiveserviceActivity* default_instance_;
};
// -------------------------------------------------------------------

class serveropenactivepageBook : public ::google::protobuf::Message {
 public:
  serveropenactivepageBook();
  virtual ~serveropenactivepageBook();

  serveropenactivepageBook(const serveropenactivepageBook& from);

  inline serveropenactivepageBook& operator=(const serveropenactivepageBook& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const serveropenactivepageBook& default_instance();

  void Swap(serveropenactivepageBook* other);

  // implements Message ----------------------------------------------

  serveropenactivepageBook* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const serveropenactivepageBook& from);
  void MergeFrom(const serveropenactivepageBook& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 Id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.serveropenactivepageBook)
 private:
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_serveropenactive_2eproto();
  friend void protobuf_AssignDesc_serveropenactive_2eproto();
  friend void protobuf_ShutdownFile_serveropenactive_2eproto();

  void InitAsDefaultInstance();
  static serveropenactivepageBook* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_serveropenactivepageBook : public ::google::protobuf::Message {
 public:
  Sheet_serveropenactivepageBook();
  virtual ~Sheet_serveropenactivepageBook();

  Sheet_serveropenactivepageBook(const Sheet_serveropenactivepageBook& from);

  inline Sheet_serveropenactivepageBook& operator=(const Sheet_serveropenactivepageBook& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_serveropenactivepageBook& default_instance();

  void Swap(Sheet_serveropenactivepageBook* other);

  // implements Message ----------------------------------------------

  Sheet_serveropenactivepageBook* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_serveropenactivepageBook& from);
  void MergeFrom(const Sheet_serveropenactivepageBook& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.serveropenactivepageBook serveropenactivepageBook_List = 1;
  inline int serveropenactivepagebook_list_size() const;
  inline void clear_serveropenactivepagebook_list();
  static const int kServeropenactivepageBookListFieldNumber = 1;
  inline const ::proto_ff::serveropenactivepageBook& serveropenactivepagebook_list(int index) const;
  inline ::proto_ff::serveropenactivepageBook* mutable_serveropenactivepagebook_list(int index);
  inline ::proto_ff::serveropenactivepageBook* add_serveropenactivepagebook_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::serveropenactivepageBook >&
      serveropenactivepagebook_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::serveropenactivepageBook >*
      mutable_serveropenactivepagebook_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_serveropenactivepageBook)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::serveropenactivepageBook > serveropenactivepagebook_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_serveropenactive_2eproto();
  friend void protobuf_AssignDesc_serveropenactive_2eproto();
  friend void protobuf_ShutdownFile_serveropenactive_2eproto();

  void InitAsDefaultInstance();
  static Sheet_serveropenactivepageBook* default_instance_;
};
// -------------------------------------------------------------------

class serveropenactivepage : public ::google::protobuf::Message {
 public:
  serveropenactivepage();
  virtual ~serveropenactivepage();

  serveropenactivepage(const serveropenactivepage& from);

  inline serveropenactivepage& operator=(const serveropenactivepage& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const serveropenactivepage& default_instance();

  void Swap(serveropenactivepage* other);

  // implements Message ----------------------------------------------

  serveropenactivepage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const serveropenactivepage& from);
  void MergeFrom(const serveropenactivepage& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 Id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int64 id() const;
  inline void set_id(::google::protobuf::int64 value);

  // optional int32 mType = 2;
  inline bool has_mtype() const;
  inline void clear_mtype();
  static const int kMTypeFieldNumber = 2;
  inline ::google::protobuf::int32 mtype() const;
  inline void set_mtype(::google::protobuf::int32 value);

  // optional int32 mCanshu = 3;
  inline bool has_mcanshu() const;
  inline void clear_mcanshu();
  static const int kMCanshuFieldNumber = 3;
  inline ::google::protobuf::int32 mcanshu() const;
  inline void set_mcanshu(::google::protobuf::int32 value);

  // optional string start = 4;
  inline bool has_start() const;
  inline void clear_start();
  static const int kStartFieldNumber = 4;
  inline const ::std::string& start() const;
  inline void set_start(const ::std::string& value);
  inline void set_start(const char* value);
  inline void set_start(const char* value, size_t size);
  inline ::std::string* mutable_start();
  inline ::std::string* release_start();
  inline void set_allocated_start(::std::string* start);

  // optional string finish = 5;
  inline bool has_finish() const;
  inline void clear_finish();
  static const int kFinishFieldNumber = 5;
  inline const ::std::string& finish() const;
  inline void set_finish(const ::std::string& value);
  inline void set_finish(const char* value);
  inline void set_finish(const char* value, size_t size);
  inline ::std::string* mutable_finish();
  inline ::std::string* release_finish();
  inline void set_allocated_finish(::std::string* finish);

  // optional string miaoshu = 6;
  inline bool has_miaoshu() const;
  inline void clear_miaoshu();
  static const int kMiaoshuFieldNumber = 6;
  inline const ::std::string& miaoshu() const;
  inline void set_miaoshu(const ::std::string& value);
  inline void set_miaoshu(const char* value);
  inline void set_miaoshu(const char* value, size_t size);
  inline ::std::string* mutable_miaoshu();
  inline ::std::string* release_miaoshu();
  inline void set_allocated_miaoshu(::std::string* miaoshu);

  // optional string tiaojianId = 7;
  inline bool has_tiaojianid() const;
  inline void clear_tiaojianid();
  static const int kTiaojianIdFieldNumber = 7;
  inline const ::std::string& tiaojianid() const;
  inline void set_tiaojianid(const ::std::string& value);
  inline void set_tiaojianid(const char* value);
  inline void set_tiaojianid(const char* value, size_t size);
  inline ::std::string* mutable_tiaojianid();
  inline ::std::string* release_tiaojianid();
  inline void set_allocated_tiaojianid(::std::string* tiaojianid);

  // optional int64 mailid = 8;
  inline bool has_mailid() const;
  inline void clear_mailid();
  static const int kMailidFieldNumber = 8;
  inline ::google::protobuf::int64 mailid() const;
  inline void set_mailid(::google::protobuf::int64 value);

  // optional int64 youjianid = 9;
  inline bool has_youjianid() const;
  inline void clear_youjianid();
  static const int kYoujianidFieldNumber = 9;
  inline ::google::protobuf::int64 youjianid() const;
  inline void set_youjianid(::google::protobuf::int64 value);

  // optional int64 nonstandardmailid = 10;
  inline bool has_nonstandardmailid() const;
  inline void clear_nonstandardmailid();
  static const int kNonstandardmailidFieldNumber = 10;
  inline ::google::protobuf::int64 nonstandardmailid() const;
  inline void set_nonstandardmailid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.serveropenactivepage)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_mtype();
  inline void clear_has_mtype();
  inline void set_has_mcanshu();
  inline void clear_has_mcanshu();
  inline void set_has_start();
  inline void clear_has_start();
  inline void set_has_finish();
  inline void clear_has_finish();
  inline void set_has_miaoshu();
  inline void clear_has_miaoshu();
  inline void set_has_tiaojianid();
  inline void clear_has_tiaojianid();
  inline void set_has_mailid();
  inline void clear_has_mailid();
  inline void set_has_youjianid();
  inline void clear_has_youjianid();
  inline void set_has_nonstandardmailid();
  inline void clear_has_nonstandardmailid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 id_;
  ::google::protobuf::int32 mtype_;
  ::google::protobuf::int32 mcanshu_;
  ::std::string* start_;
  ::std::string* finish_;
  ::std::string* miaoshu_;
  ::std::string* tiaojianid_;
  ::google::protobuf::int64 mailid_;
  ::google::protobuf::int64 youjianid_;
  ::google::protobuf::int64 nonstandardmailid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(10 + 31) / 32];

  friend void  protobuf_AddDesc_serveropenactive_2eproto();
  friend void protobuf_AssignDesc_serveropenactive_2eproto();
  friend void protobuf_ShutdownFile_serveropenactive_2eproto();

  void InitAsDefaultInstance();
  static serveropenactivepage* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_serveropenactivepage : public ::google::protobuf::Message {
 public:
  Sheet_serveropenactivepage();
  virtual ~Sheet_serveropenactivepage();

  Sheet_serveropenactivepage(const Sheet_serveropenactivepage& from);

  inline Sheet_serveropenactivepage& operator=(const Sheet_serveropenactivepage& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_serveropenactivepage& default_instance();

  void Swap(Sheet_serveropenactivepage* other);

  // implements Message ----------------------------------------------

  Sheet_serveropenactivepage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_serveropenactivepage& from);
  void MergeFrom(const Sheet_serveropenactivepage& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.serveropenactivepage serveropenactivepage_List = 1;
  inline int serveropenactivepage_list_size() const;
  inline void clear_serveropenactivepage_list();
  static const int kServeropenactivepageListFieldNumber = 1;
  inline const ::proto_ff::serveropenactivepage& serveropenactivepage_list(int index) const;
  inline ::proto_ff::serveropenactivepage* mutable_serveropenactivepage_list(int index);
  inline ::proto_ff::serveropenactivepage* add_serveropenactivepage_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::serveropenactivepage >&
      serveropenactivepage_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::serveropenactivepage >*
      mutable_serveropenactivepage_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_serveropenactivepage)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::serveropenactivepage > serveropenactivepage_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_serveropenactive_2eproto();
  friend void protobuf_AssignDesc_serveropenactive_2eproto();
  friend void protobuf_ShutdownFile_serveropenactive_2eproto();

  void InitAsDefaultInstance();
  static Sheet_serveropenactivepage* default_instance_;
};
// -------------------------------------------------------------------

class serveropenactivemRank : public ::google::protobuf::Message {
 public:
  serveropenactivemRank();
  virtual ~serveropenactivemRank();

  serveropenactivemRank(const serveropenactivemRank& from);

  inline serveropenactivemRank& operator=(const serveropenactivemRank& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const serveropenactivemRank& default_instance();

  void Swap(serveropenactivemRank* other);

  // implements Message ----------------------------------------------

  serveropenactivemRank* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const serveropenactivemRank& from);
  void MergeFrom(const serveropenactivemRank& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // optional int32 randtype = 2;
  inline bool has_randtype() const;
  inline void clear_randtype();
  static const int kRandtypeFieldNumber = 2;
  inline ::google::protobuf::int32 randtype() const;
  inline void set_randtype(::google::protobuf::int32 value);

  // optional string miaoshu = 3;
  inline bool has_miaoshu() const;
  inline void clear_miaoshu();
  static const int kMiaoshuFieldNumber = 3;
  inline const ::std::string& miaoshu() const;
  inline void set_miaoshu(const ::std::string& value);
  inline void set_miaoshu(const char* value);
  inline void set_miaoshu(const char* value, size_t size);
  inline ::std::string* mutable_miaoshu();
  inline ::std::string* release_miaoshu();
  inline void set_allocated_miaoshu(::std::string* miaoshu);

  // optional int64 boxid = 4;
  inline bool has_boxid() const;
  inline void clear_boxid();
  static const int kBoxidFieldNumber = 4;
  inline ::google::protobuf::int64 boxid() const;
  inline void set_boxid(::google::protobuf::int64 value);

  // repeated int64 canshu = 5;
  inline int canshu_size() const;
  inline void clear_canshu();
  static const int kCanshuFieldNumber = 5;
  inline ::google::protobuf::int64 canshu(int index) const;
  inline void set_canshu(int index, ::google::protobuf::int64 value);
  inline void add_canshu(::google::protobuf::int64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      canshu() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_canshu();

  // @@protoc_insertion_point(class_scope:proto_ff.serveropenactivemRank)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_randtype();
  inline void clear_has_randtype();
  inline void set_has_miaoshu();
  inline void clear_has_miaoshu();
  inline void set_has_boxid();
  inline void clear_has_boxid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 randtype_;
  ::std::string* miaoshu_;
  ::google::protobuf::int64 boxid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > canshu_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_serveropenactive_2eproto();
  friend void protobuf_AssignDesc_serveropenactive_2eproto();
  friend void protobuf_ShutdownFile_serveropenactive_2eproto();

  void InitAsDefaultInstance();
  static serveropenactivemRank* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_serveropenactivemRank : public ::google::protobuf::Message {
 public:
  Sheet_serveropenactivemRank();
  virtual ~Sheet_serveropenactivemRank();

  Sheet_serveropenactivemRank(const Sheet_serveropenactivemRank& from);

  inline Sheet_serveropenactivemRank& operator=(const Sheet_serveropenactivemRank& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_serveropenactivemRank& default_instance();

  void Swap(Sheet_serveropenactivemRank* other);

  // implements Message ----------------------------------------------

  Sheet_serveropenactivemRank* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_serveropenactivemRank& from);
  void MergeFrom(const Sheet_serveropenactivemRank& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.serveropenactivemRank serveropenactivemRank_List = 1;
  inline int serveropenactivemrank_list_size() const;
  inline void clear_serveropenactivemrank_list();
  static const int kServeropenactivemRankListFieldNumber = 1;
  inline const ::proto_ff::serveropenactivemRank& serveropenactivemrank_list(int index) const;
  inline ::proto_ff::serveropenactivemRank* mutable_serveropenactivemrank_list(int index);
  inline ::proto_ff::serveropenactivemRank* add_serveropenactivemrank_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::serveropenactivemRank >&
      serveropenactivemrank_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::serveropenactivemRank >*
      mutable_serveropenactivemrank_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_serveropenactivemRank)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::serveropenactivemRank > serveropenactivemrank_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_serveropenactive_2eproto();
  friend void protobuf_AssignDesc_serveropenactive_2eproto();
  friend void protobuf_ShutdownFile_serveropenactive_2eproto();

  void InitAsDefaultInstance();
  static Sheet_serveropenactivemRank* default_instance_;
};
// -------------------------------------------------------------------

class serveropenactivemAdvanced : public ::google::protobuf::Message {
 public:
  serveropenactivemAdvanced();
  virtual ~serveropenactivemAdvanced();

  serveropenactivemAdvanced(const serveropenactivemAdvanced& from);

  inline serveropenactivemAdvanced& operator=(const serveropenactivemAdvanced& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const serveropenactivemAdvanced& default_instance();

  void Swap(serveropenactivemAdvanced* other);

  // implements Message ----------------------------------------------

  serveropenactivemAdvanced* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const serveropenactivemAdvanced& from);
  void MergeFrom(const serveropenactivemAdvanced& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // optional int32 advancedType = 2;
  inline bool has_advancedtype() const;
  inline void clear_advancedtype();
  static const int kAdvancedTypeFieldNumber = 2;
  inline ::google::protobuf::int32 advancedtype() const;
  inline void set_advancedtype(::google::protobuf::int32 value);

  // optional int64 num = 3;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 3;
  inline ::google::protobuf::int64 num() const;
  inline void set_num(::google::protobuf::int64 value);

  // optional int64 parameter = 4;
  inline bool has_parameter() const;
  inline void clear_parameter();
  static const int kParameterFieldNumber = 4;
  inline ::google::protobuf::int64 parameter() const;
  inline void set_parameter(::google::protobuf::int64 value);

  // optional string miaoshu = 5;
  inline bool has_miaoshu() const;
  inline void clear_miaoshu();
  static const int kMiaoshuFieldNumber = 5;
  inline const ::std::string& miaoshu() const;
  inline void set_miaoshu(const ::std::string& value);
  inline void set_miaoshu(const char* value);
  inline void set_miaoshu(const char* value, size_t size);
  inline ::std::string* mutable_miaoshu();
  inline ::std::string* release_miaoshu();
  inline void set_allocated_miaoshu(::std::string* miaoshu);

  // optional int64 jiangLi = 6;
  inline bool has_jiangli() const;
  inline void clear_jiangli();
  static const int kJiangLiFieldNumber = 6;
  inline ::google::protobuf::int64 jiangli() const;
  inline void set_jiangli(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.serveropenactivemAdvanced)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_advancedtype();
  inline void clear_has_advancedtype();
  inline void set_has_num();
  inline void clear_has_num();
  inline void set_has_parameter();
  inline void clear_has_parameter();
  inline void set_has_miaoshu();
  inline void clear_has_miaoshu();
  inline void set_has_jiangli();
  inline void clear_has_jiangli();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 advancedtype_;
  ::google::protobuf::int64 num_;
  ::google::protobuf::int64 parameter_;
  ::std::string* miaoshu_;
  ::google::protobuf::int64 jiangli_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_serveropenactive_2eproto();
  friend void protobuf_AssignDesc_serveropenactive_2eproto();
  friend void protobuf_ShutdownFile_serveropenactive_2eproto();

  void InitAsDefaultInstance();
  static serveropenactivemAdvanced* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_serveropenactivemAdvanced : public ::google::protobuf::Message {
 public:
  Sheet_serveropenactivemAdvanced();
  virtual ~Sheet_serveropenactivemAdvanced();

  Sheet_serveropenactivemAdvanced(const Sheet_serveropenactivemAdvanced& from);

  inline Sheet_serveropenactivemAdvanced& operator=(const Sheet_serveropenactivemAdvanced& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_serveropenactivemAdvanced& default_instance();

  void Swap(Sheet_serveropenactivemAdvanced* other);

  // implements Message ----------------------------------------------

  Sheet_serveropenactivemAdvanced* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_serveropenactivemAdvanced& from);
  void MergeFrom(const Sheet_serveropenactivemAdvanced& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.serveropenactivemAdvanced serveropenactivemAdvanced_List = 1;
  inline int serveropenactivemadvanced_list_size() const;
  inline void clear_serveropenactivemadvanced_list();
  static const int kServeropenactivemAdvancedListFieldNumber = 1;
  inline const ::proto_ff::serveropenactivemAdvanced& serveropenactivemadvanced_list(int index) const;
  inline ::proto_ff::serveropenactivemAdvanced* mutable_serveropenactivemadvanced_list(int index);
  inline ::proto_ff::serveropenactivemAdvanced* add_serveropenactivemadvanced_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::serveropenactivemAdvanced >&
      serveropenactivemadvanced_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::serveropenactivemAdvanced >*
      mutable_serveropenactivemadvanced_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_serveropenactivemAdvanced)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::serveropenactivemAdvanced > serveropenactivemadvanced_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_serveropenactive_2eproto();
  friend void protobuf_AssignDesc_serveropenactive_2eproto();
  friend void protobuf_ShutdownFile_serveropenactive_2eproto();

  void InitAsDefaultInstance();
  static Sheet_serveropenactivemAdvanced* default_instance_;
};
// -------------------------------------------------------------------

class serveropenactivemRecharge : public ::google::protobuf::Message {
 public:
  serveropenactivemRecharge();
  virtual ~serveropenactivemRecharge();

  serveropenactivemRecharge(const serveropenactivemRecharge& from);

  inline serveropenactivemRecharge& operator=(const serveropenactivemRecharge& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const serveropenactivemRecharge& default_instance();

  void Swap(serveropenactivemRecharge* other);

  // implements Message ----------------------------------------------

  serveropenactivemRecharge* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const serveropenactivemRecharge& from);
  void MergeFrom(const serveropenactivemRecharge& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // optional int32 numType = 2;
  inline bool has_numtype() const;
  inline void clear_numtype();
  static const int kNumTypeFieldNumber = 2;
  inline ::google::protobuf::int32 numtype() const;
  inline void set_numtype(::google::protobuf::int32 value);

  // optional int32 num = 3;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 3;
  inline ::google::protobuf::int32 num() const;
  inline void set_num(::google::protobuf::int32 value);

  // optional string miaoshu = 4;
  inline bool has_miaoshu() const;
  inline void clear_miaoshu();
  static const int kMiaoshuFieldNumber = 4;
  inline const ::std::string& miaoshu() const;
  inline void set_miaoshu(const ::std::string& value);
  inline void set_miaoshu(const char* value);
  inline void set_miaoshu(const char* value, size_t size);
  inline ::std::string* mutable_miaoshu();
  inline ::std::string* release_miaoshu();
  inline void set_allocated_miaoshu(::std::string* miaoshu);

  // optional int64 jiangLi = 5;
  inline bool has_jiangli() const;
  inline void clear_jiangli();
  static const int kJiangLiFieldNumber = 5;
  inline ::google::protobuf::int64 jiangli() const;
  inline void set_jiangli(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.serveropenactivemRecharge)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_numtype();
  inline void clear_has_numtype();
  inline void set_has_num();
  inline void clear_has_num();
  inline void set_has_miaoshu();
  inline void clear_has_miaoshu();
  inline void set_has_jiangli();
  inline void clear_has_jiangli();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 numtype_;
  ::std::string* miaoshu_;
  ::google::protobuf::int64 jiangli_;
  ::google::protobuf::int32 num_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_serveropenactive_2eproto();
  friend void protobuf_AssignDesc_serveropenactive_2eproto();
  friend void protobuf_ShutdownFile_serveropenactive_2eproto();

  void InitAsDefaultInstance();
  static serveropenactivemRecharge* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_serveropenactivemRecharge : public ::google::protobuf::Message {
 public:
  Sheet_serveropenactivemRecharge();
  virtual ~Sheet_serveropenactivemRecharge();

  Sheet_serveropenactivemRecharge(const Sheet_serveropenactivemRecharge& from);

  inline Sheet_serveropenactivemRecharge& operator=(const Sheet_serveropenactivemRecharge& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_serveropenactivemRecharge& default_instance();

  void Swap(Sheet_serveropenactivemRecharge* other);

  // implements Message ----------------------------------------------

  Sheet_serveropenactivemRecharge* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_serveropenactivemRecharge& from);
  void MergeFrom(const Sheet_serveropenactivemRecharge& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.serveropenactivemRecharge serveropenactivemRecharge_List = 1;
  inline int serveropenactivemrecharge_list_size() const;
  inline void clear_serveropenactivemrecharge_list();
  static const int kServeropenactivemRechargeListFieldNumber = 1;
  inline const ::proto_ff::serveropenactivemRecharge& serveropenactivemrecharge_list(int index) const;
  inline ::proto_ff::serveropenactivemRecharge* mutable_serveropenactivemrecharge_list(int index);
  inline ::proto_ff::serveropenactivemRecharge* add_serveropenactivemrecharge_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::serveropenactivemRecharge >&
      serveropenactivemrecharge_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::serveropenactivemRecharge >*
      mutable_serveropenactivemrecharge_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_serveropenactivemRecharge)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::serveropenactivemRecharge > serveropenactivemrecharge_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_serveropenactive_2eproto();
  friend void protobuf_AssignDesc_serveropenactive_2eproto();
  friend void protobuf_ShutdownFile_serveropenactive_2eproto();

  void InitAsDefaultInstance();
  static Sheet_serveropenactivemRecharge* default_instance_;
};
// -------------------------------------------------------------------

class serveropenactivemGoods : public ::google::protobuf::Message {
 public:
  serveropenactivemGoods();
  virtual ~serveropenactivemGoods();

  serveropenactivemGoods(const serveropenactivemGoods& from);

  inline serveropenactivemGoods& operator=(const serveropenactivemGoods& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const serveropenactivemGoods& default_instance();

  void Swap(serveropenactivemGoods* other);

  // implements Message ----------------------------------------------

  serveropenactivemGoods* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const serveropenactivemGoods& from);
  void MergeFrom(const serveropenactivemGoods& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int64 id() const;
  inline void set_id(::google::protobuf::int64 value);

  // optional int64 itemid = 2;
  inline bool has_itemid() const;
  inline void clear_itemid();
  static const int kItemidFieldNumber = 2;
  inline ::google::protobuf::int64 itemid() const;
  inline void set_itemid(::google::protobuf::int64 value);

  // optional int32 currency = 3;
  inline bool has_currency() const;
  inline void clear_currency();
  static const int kCurrencyFieldNumber = 3;
  inline ::google::protobuf::int32 currency() const;
  inline void set_currency(::google::protobuf::int32 value);

  // optional int32 priceA = 4;
  inline bool has_pricea() const;
  inline void clear_pricea();
  static const int kPriceAFieldNumber = 4;
  inline ::google::protobuf::int32 pricea() const;
  inline void set_pricea(::google::protobuf::int32 value);

  // optional int32 priceB = 5;
  inline bool has_priceb() const;
  inline void clear_priceb();
  static const int kPriceBFieldNumber = 5;
  inline ::google::protobuf::int32 priceb() const;
  inline void set_priceb(::google::protobuf::int32 value);

  // optional int32 quantity = 6;
  inline bool has_quantity() const;
  inline void clear_quantity();
  static const int kQuantityFieldNumber = 6;
  inline ::google::protobuf::int32 quantity() const;
  inline void set_quantity(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.serveropenactivemGoods)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_itemid();
  inline void clear_has_itemid();
  inline void set_has_currency();
  inline void clear_has_currency();
  inline void set_has_pricea();
  inline void clear_has_pricea();
  inline void set_has_priceb();
  inline void clear_has_priceb();
  inline void set_has_quantity();
  inline void clear_has_quantity();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 id_;
  ::google::protobuf::int64 itemid_;
  ::google::protobuf::int32 currency_;
  ::google::protobuf::int32 pricea_;
  ::google::protobuf::int32 priceb_;
  ::google::protobuf::int32 quantity_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_serveropenactive_2eproto();
  friend void protobuf_AssignDesc_serveropenactive_2eproto();
  friend void protobuf_ShutdownFile_serveropenactive_2eproto();

  void InitAsDefaultInstance();
  static serveropenactivemGoods* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_serveropenactivemGoods : public ::google::protobuf::Message {
 public:
  Sheet_serveropenactivemGoods();
  virtual ~Sheet_serveropenactivemGoods();

  Sheet_serveropenactivemGoods(const Sheet_serveropenactivemGoods& from);

  inline Sheet_serveropenactivemGoods& operator=(const Sheet_serveropenactivemGoods& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_serveropenactivemGoods& default_instance();

  void Swap(Sheet_serveropenactivemGoods* other);

  // implements Message ----------------------------------------------

  Sheet_serveropenactivemGoods* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_serveropenactivemGoods& from);
  void MergeFrom(const Sheet_serveropenactivemGoods& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.serveropenactivemGoods serveropenactivemGoods_List = 1;
  inline int serveropenactivemgoods_list_size() const;
  inline void clear_serveropenactivemgoods_list();
  static const int kServeropenactivemGoodsListFieldNumber = 1;
  inline const ::proto_ff::serveropenactivemGoods& serveropenactivemgoods_list(int index) const;
  inline ::proto_ff::serveropenactivemGoods* mutable_serveropenactivemgoods_list(int index);
  inline ::proto_ff::serveropenactivemGoods* add_serveropenactivemgoods_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::serveropenactivemGoods >&
      serveropenactivemgoods_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::serveropenactivemGoods >*
      mutable_serveropenactivemgoods_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_serveropenactivemGoods)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::serveropenactivemGoods > serveropenactivemgoods_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_serveropenactive_2eproto();
  friend void protobuf_AssignDesc_serveropenactive_2eproto();
  friend void protobuf_ShutdownFile_serveropenactive_2eproto();

  void InitAsDefaultInstance();
  static Sheet_serveropenactivemGoods* default_instance_;
};
// ===================================================================


// ===================================================================

// serveropenactiveserviceActivity

// optional int64 id = 1;
inline bool serveropenactiveserviceActivity::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void serveropenactiveserviceActivity::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void serveropenactiveserviceActivity::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void serveropenactiveserviceActivity::clear_id() {
  id_ = GOOGLE_LONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::int64 serveropenactiveserviceActivity::id() const {
  return id_;
}
inline void serveropenactiveserviceActivity::set_id(::google::protobuf::int64 value) {
  set_has_id();
  id_ = value;
}

// optional int32 servertype = 2;
inline bool serveropenactiveserviceActivity::has_servertype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void serveropenactiveserviceActivity::set_has_servertype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void serveropenactiveserviceActivity::clear_has_servertype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void serveropenactiveserviceActivity::clear_servertype() {
  servertype_ = 0;
  clear_has_servertype();
}
inline ::google::protobuf::int32 serveropenactiveserviceActivity::servertype() const {
  return servertype_;
}
inline void serveropenactiveserviceActivity::set_servertype(::google::protobuf::int32 value) {
  set_has_servertype();
  servertype_ = value;
}

// optional int32 timeA = 3;
inline bool serveropenactiveserviceActivity::has_timea() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void serveropenactiveserviceActivity::set_has_timea() {
  _has_bits_[0] |= 0x00000004u;
}
inline void serveropenactiveserviceActivity::clear_has_timea() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void serveropenactiveserviceActivity::clear_timea() {
  timea_ = 0;
  clear_has_timea();
}
inline ::google::protobuf::int32 serveropenactiveserviceActivity::timea() const {
  return timea_;
}
inline void serveropenactiveserviceActivity::set_timea(::google::protobuf::int32 value) {
  set_has_timea();
  timea_ = value;
}

// optional int32 timeB = 4;
inline bool serveropenactiveserviceActivity::has_timeb() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void serveropenactiveserviceActivity::set_has_timeb() {
  _has_bits_[0] |= 0x00000008u;
}
inline void serveropenactiveserviceActivity::clear_has_timeb() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void serveropenactiveserviceActivity::clear_timeb() {
  timeb_ = 0;
  clear_has_timeb();
}
inline ::google::protobuf::int32 serveropenactiveserviceActivity::timeb() const {
  return timeb_;
}
inline void serveropenactiveserviceActivity::set_timeb(::google::protobuf::int32 value) {
  set_has_timeb();
  timeb_ = value;
}

// optional string pageId = 5;
inline bool serveropenactiveserviceActivity::has_pageid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void serveropenactiveserviceActivity::set_has_pageid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void serveropenactiveserviceActivity::clear_has_pageid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void serveropenactiveserviceActivity::clear_pageid() {
  if (pageid_ != &::google::protobuf::internal::kEmptyString) {
    pageid_->clear();
  }
  clear_has_pageid();
}
inline const ::std::string& serveropenactiveserviceActivity::pageid() const {
  return *pageid_;
}
inline void serveropenactiveserviceActivity::set_pageid(const ::std::string& value) {
  set_has_pageid();
  if (pageid_ == &::google::protobuf::internal::kEmptyString) {
    pageid_ = new ::std::string;
  }
  pageid_->assign(value);
}
inline void serveropenactiveserviceActivity::set_pageid(const char* value) {
  set_has_pageid();
  if (pageid_ == &::google::protobuf::internal::kEmptyString) {
    pageid_ = new ::std::string;
  }
  pageid_->assign(value);
}
inline void serveropenactiveserviceActivity::set_pageid(const char* value, size_t size) {
  set_has_pageid();
  if (pageid_ == &::google::protobuf::internal::kEmptyString) {
    pageid_ = new ::std::string;
  }
  pageid_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* serveropenactiveserviceActivity::mutable_pageid() {
  set_has_pageid();
  if (pageid_ == &::google::protobuf::internal::kEmptyString) {
    pageid_ = new ::std::string;
  }
  return pageid_;
}
inline ::std::string* serveropenactiveserviceActivity::release_pageid() {
  clear_has_pageid();
  if (pageid_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = pageid_;
    pageid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void serveropenactiveserviceActivity::set_allocated_pageid(::std::string* pageid) {
  if (pageid_ != &::google::protobuf::internal::kEmptyString) {
    delete pageid_;
  }
  if (pageid) {
    set_has_pageid();
    pageid_ = pageid;
  } else {
    clear_has_pageid();
    pageid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// Sheet_serveropenactiveserviceActivity

// repeated .proto_ff.serveropenactiveserviceActivity serveropenactiveserviceActivity_List = 1;
inline int Sheet_serveropenactiveserviceActivity::serveropenactiveserviceactivity_list_size() const {
  return serveropenactiveserviceactivity_list_.size();
}
inline void Sheet_serveropenactiveserviceActivity::clear_serveropenactiveserviceactivity_list() {
  serveropenactiveserviceactivity_list_.Clear();
}
inline const ::proto_ff::serveropenactiveserviceActivity& Sheet_serveropenactiveserviceActivity::serveropenactiveserviceactivity_list(int index) const {
  return serveropenactiveserviceactivity_list_.Get(index);
}
inline ::proto_ff::serveropenactiveserviceActivity* Sheet_serveropenactiveserviceActivity::mutable_serveropenactiveserviceactivity_list(int index) {
  return serveropenactiveserviceactivity_list_.Mutable(index);
}
inline ::proto_ff::serveropenactiveserviceActivity* Sheet_serveropenactiveserviceActivity::add_serveropenactiveserviceactivity_list() {
  return serveropenactiveserviceactivity_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::serveropenactiveserviceActivity >&
Sheet_serveropenactiveserviceActivity::serveropenactiveserviceactivity_list() const {
  return serveropenactiveserviceactivity_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::serveropenactiveserviceActivity >*
Sheet_serveropenactiveserviceActivity::mutable_serveropenactiveserviceactivity_list() {
  return &serveropenactiveserviceactivity_list_;
}

// -------------------------------------------------------------------

// serveropenactivepageBook

// optional int32 Id = 1;
inline bool serveropenactivepageBook::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void serveropenactivepageBook::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void serveropenactivepageBook::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void serveropenactivepageBook::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 serveropenactivepageBook::id() const {
  return id_;
}
inline void serveropenactivepageBook::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// -------------------------------------------------------------------

// Sheet_serveropenactivepageBook

// repeated .proto_ff.serveropenactivepageBook serveropenactivepageBook_List = 1;
inline int Sheet_serveropenactivepageBook::serveropenactivepagebook_list_size() const {
  return serveropenactivepagebook_list_.size();
}
inline void Sheet_serveropenactivepageBook::clear_serveropenactivepagebook_list() {
  serveropenactivepagebook_list_.Clear();
}
inline const ::proto_ff::serveropenactivepageBook& Sheet_serveropenactivepageBook::serveropenactivepagebook_list(int index) const {
  return serveropenactivepagebook_list_.Get(index);
}
inline ::proto_ff::serveropenactivepageBook* Sheet_serveropenactivepageBook::mutable_serveropenactivepagebook_list(int index) {
  return serveropenactivepagebook_list_.Mutable(index);
}
inline ::proto_ff::serveropenactivepageBook* Sheet_serveropenactivepageBook::add_serveropenactivepagebook_list() {
  return serveropenactivepagebook_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::serveropenactivepageBook >&
Sheet_serveropenactivepageBook::serveropenactivepagebook_list() const {
  return serveropenactivepagebook_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::serveropenactivepageBook >*
Sheet_serveropenactivepageBook::mutable_serveropenactivepagebook_list() {
  return &serveropenactivepagebook_list_;
}

// -------------------------------------------------------------------

// serveropenactivepage

// optional int64 Id = 1;
inline bool serveropenactivepage::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void serveropenactivepage::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void serveropenactivepage::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void serveropenactivepage::clear_id() {
  id_ = GOOGLE_LONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::int64 serveropenactivepage::id() const {
  return id_;
}
inline void serveropenactivepage::set_id(::google::protobuf::int64 value) {
  set_has_id();
  id_ = value;
}

// optional int32 mType = 2;
inline bool serveropenactivepage::has_mtype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void serveropenactivepage::set_has_mtype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void serveropenactivepage::clear_has_mtype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void serveropenactivepage::clear_mtype() {
  mtype_ = 0;
  clear_has_mtype();
}
inline ::google::protobuf::int32 serveropenactivepage::mtype() const {
  return mtype_;
}
inline void serveropenactivepage::set_mtype(::google::protobuf::int32 value) {
  set_has_mtype();
  mtype_ = value;
}

// optional int32 mCanshu = 3;
inline bool serveropenactivepage::has_mcanshu() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void serveropenactivepage::set_has_mcanshu() {
  _has_bits_[0] |= 0x00000004u;
}
inline void serveropenactivepage::clear_has_mcanshu() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void serveropenactivepage::clear_mcanshu() {
  mcanshu_ = 0;
  clear_has_mcanshu();
}
inline ::google::protobuf::int32 serveropenactivepage::mcanshu() const {
  return mcanshu_;
}
inline void serveropenactivepage::set_mcanshu(::google::protobuf::int32 value) {
  set_has_mcanshu();
  mcanshu_ = value;
}

// optional string start = 4;
inline bool serveropenactivepage::has_start() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void serveropenactivepage::set_has_start() {
  _has_bits_[0] |= 0x00000008u;
}
inline void serveropenactivepage::clear_has_start() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void serveropenactivepage::clear_start() {
  if (start_ != &::google::protobuf::internal::kEmptyString) {
    start_->clear();
  }
  clear_has_start();
}
inline const ::std::string& serveropenactivepage::start() const {
  return *start_;
}
inline void serveropenactivepage::set_start(const ::std::string& value) {
  set_has_start();
  if (start_ == &::google::protobuf::internal::kEmptyString) {
    start_ = new ::std::string;
  }
  start_->assign(value);
}
inline void serveropenactivepage::set_start(const char* value) {
  set_has_start();
  if (start_ == &::google::protobuf::internal::kEmptyString) {
    start_ = new ::std::string;
  }
  start_->assign(value);
}
inline void serveropenactivepage::set_start(const char* value, size_t size) {
  set_has_start();
  if (start_ == &::google::protobuf::internal::kEmptyString) {
    start_ = new ::std::string;
  }
  start_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* serveropenactivepage::mutable_start() {
  set_has_start();
  if (start_ == &::google::protobuf::internal::kEmptyString) {
    start_ = new ::std::string;
  }
  return start_;
}
inline ::std::string* serveropenactivepage::release_start() {
  clear_has_start();
  if (start_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = start_;
    start_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void serveropenactivepage::set_allocated_start(::std::string* start) {
  if (start_ != &::google::protobuf::internal::kEmptyString) {
    delete start_;
  }
  if (start) {
    set_has_start();
    start_ = start;
  } else {
    clear_has_start();
    start_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string finish = 5;
inline bool serveropenactivepage::has_finish() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void serveropenactivepage::set_has_finish() {
  _has_bits_[0] |= 0x00000010u;
}
inline void serveropenactivepage::clear_has_finish() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void serveropenactivepage::clear_finish() {
  if (finish_ != &::google::protobuf::internal::kEmptyString) {
    finish_->clear();
  }
  clear_has_finish();
}
inline const ::std::string& serveropenactivepage::finish() const {
  return *finish_;
}
inline void serveropenactivepage::set_finish(const ::std::string& value) {
  set_has_finish();
  if (finish_ == &::google::protobuf::internal::kEmptyString) {
    finish_ = new ::std::string;
  }
  finish_->assign(value);
}
inline void serveropenactivepage::set_finish(const char* value) {
  set_has_finish();
  if (finish_ == &::google::protobuf::internal::kEmptyString) {
    finish_ = new ::std::string;
  }
  finish_->assign(value);
}
inline void serveropenactivepage::set_finish(const char* value, size_t size) {
  set_has_finish();
  if (finish_ == &::google::protobuf::internal::kEmptyString) {
    finish_ = new ::std::string;
  }
  finish_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* serveropenactivepage::mutable_finish() {
  set_has_finish();
  if (finish_ == &::google::protobuf::internal::kEmptyString) {
    finish_ = new ::std::string;
  }
  return finish_;
}
inline ::std::string* serveropenactivepage::release_finish() {
  clear_has_finish();
  if (finish_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = finish_;
    finish_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void serveropenactivepage::set_allocated_finish(::std::string* finish) {
  if (finish_ != &::google::protobuf::internal::kEmptyString) {
    delete finish_;
  }
  if (finish) {
    set_has_finish();
    finish_ = finish;
  } else {
    clear_has_finish();
    finish_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string miaoshu = 6;
inline bool serveropenactivepage::has_miaoshu() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void serveropenactivepage::set_has_miaoshu() {
  _has_bits_[0] |= 0x00000020u;
}
inline void serveropenactivepage::clear_has_miaoshu() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void serveropenactivepage::clear_miaoshu() {
  if (miaoshu_ != &::google::protobuf::internal::kEmptyString) {
    miaoshu_->clear();
  }
  clear_has_miaoshu();
}
inline const ::std::string& serveropenactivepage::miaoshu() const {
  return *miaoshu_;
}
inline void serveropenactivepage::set_miaoshu(const ::std::string& value) {
  set_has_miaoshu();
  if (miaoshu_ == &::google::protobuf::internal::kEmptyString) {
    miaoshu_ = new ::std::string;
  }
  miaoshu_->assign(value);
}
inline void serveropenactivepage::set_miaoshu(const char* value) {
  set_has_miaoshu();
  if (miaoshu_ == &::google::protobuf::internal::kEmptyString) {
    miaoshu_ = new ::std::string;
  }
  miaoshu_->assign(value);
}
inline void serveropenactivepage::set_miaoshu(const char* value, size_t size) {
  set_has_miaoshu();
  if (miaoshu_ == &::google::protobuf::internal::kEmptyString) {
    miaoshu_ = new ::std::string;
  }
  miaoshu_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* serveropenactivepage::mutable_miaoshu() {
  set_has_miaoshu();
  if (miaoshu_ == &::google::protobuf::internal::kEmptyString) {
    miaoshu_ = new ::std::string;
  }
  return miaoshu_;
}
inline ::std::string* serveropenactivepage::release_miaoshu() {
  clear_has_miaoshu();
  if (miaoshu_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = miaoshu_;
    miaoshu_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void serveropenactivepage::set_allocated_miaoshu(::std::string* miaoshu) {
  if (miaoshu_ != &::google::protobuf::internal::kEmptyString) {
    delete miaoshu_;
  }
  if (miaoshu) {
    set_has_miaoshu();
    miaoshu_ = miaoshu;
  } else {
    clear_has_miaoshu();
    miaoshu_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string tiaojianId = 7;
inline bool serveropenactivepage::has_tiaojianid() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void serveropenactivepage::set_has_tiaojianid() {
  _has_bits_[0] |= 0x00000040u;
}
inline void serveropenactivepage::clear_has_tiaojianid() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void serveropenactivepage::clear_tiaojianid() {
  if (tiaojianid_ != &::google::protobuf::internal::kEmptyString) {
    tiaojianid_->clear();
  }
  clear_has_tiaojianid();
}
inline const ::std::string& serveropenactivepage::tiaojianid() const {
  return *tiaojianid_;
}
inline void serveropenactivepage::set_tiaojianid(const ::std::string& value) {
  set_has_tiaojianid();
  if (tiaojianid_ == &::google::protobuf::internal::kEmptyString) {
    tiaojianid_ = new ::std::string;
  }
  tiaojianid_->assign(value);
}
inline void serveropenactivepage::set_tiaojianid(const char* value) {
  set_has_tiaojianid();
  if (tiaojianid_ == &::google::protobuf::internal::kEmptyString) {
    tiaojianid_ = new ::std::string;
  }
  tiaojianid_->assign(value);
}
inline void serveropenactivepage::set_tiaojianid(const char* value, size_t size) {
  set_has_tiaojianid();
  if (tiaojianid_ == &::google::protobuf::internal::kEmptyString) {
    tiaojianid_ = new ::std::string;
  }
  tiaojianid_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* serveropenactivepage::mutable_tiaojianid() {
  set_has_tiaojianid();
  if (tiaojianid_ == &::google::protobuf::internal::kEmptyString) {
    tiaojianid_ = new ::std::string;
  }
  return tiaojianid_;
}
inline ::std::string* serveropenactivepage::release_tiaojianid() {
  clear_has_tiaojianid();
  if (tiaojianid_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = tiaojianid_;
    tiaojianid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void serveropenactivepage::set_allocated_tiaojianid(::std::string* tiaojianid) {
  if (tiaojianid_ != &::google::protobuf::internal::kEmptyString) {
    delete tiaojianid_;
  }
  if (tiaojianid) {
    set_has_tiaojianid();
    tiaojianid_ = tiaojianid;
  } else {
    clear_has_tiaojianid();
    tiaojianid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int64 mailid = 8;
inline bool serveropenactivepage::has_mailid() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void serveropenactivepage::set_has_mailid() {
  _has_bits_[0] |= 0x00000080u;
}
inline void serveropenactivepage::clear_has_mailid() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void serveropenactivepage::clear_mailid() {
  mailid_ = GOOGLE_LONGLONG(0);
  clear_has_mailid();
}
inline ::google::protobuf::int64 serveropenactivepage::mailid() const {
  return mailid_;
}
inline void serveropenactivepage::set_mailid(::google::protobuf::int64 value) {
  set_has_mailid();
  mailid_ = value;
}

// optional int64 youjianid = 9;
inline bool serveropenactivepage::has_youjianid() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void serveropenactivepage::set_has_youjianid() {
  _has_bits_[0] |= 0x00000100u;
}
inline void serveropenactivepage::clear_has_youjianid() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void serveropenactivepage::clear_youjianid() {
  youjianid_ = GOOGLE_LONGLONG(0);
  clear_has_youjianid();
}
inline ::google::protobuf::int64 serveropenactivepage::youjianid() const {
  return youjianid_;
}
inline void serveropenactivepage::set_youjianid(::google::protobuf::int64 value) {
  set_has_youjianid();
  youjianid_ = value;
}

// optional int64 nonstandardmailid = 10;
inline bool serveropenactivepage::has_nonstandardmailid() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void serveropenactivepage::set_has_nonstandardmailid() {
  _has_bits_[0] |= 0x00000200u;
}
inline void serveropenactivepage::clear_has_nonstandardmailid() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void serveropenactivepage::clear_nonstandardmailid() {
  nonstandardmailid_ = GOOGLE_LONGLONG(0);
  clear_has_nonstandardmailid();
}
inline ::google::protobuf::int64 serveropenactivepage::nonstandardmailid() const {
  return nonstandardmailid_;
}
inline void serveropenactivepage::set_nonstandardmailid(::google::protobuf::int64 value) {
  set_has_nonstandardmailid();
  nonstandardmailid_ = value;
}

// -------------------------------------------------------------------

// Sheet_serveropenactivepage

// repeated .proto_ff.serveropenactivepage serveropenactivepage_List = 1;
inline int Sheet_serveropenactivepage::serveropenactivepage_list_size() const {
  return serveropenactivepage_list_.size();
}
inline void Sheet_serveropenactivepage::clear_serveropenactivepage_list() {
  serveropenactivepage_list_.Clear();
}
inline const ::proto_ff::serveropenactivepage& Sheet_serveropenactivepage::serveropenactivepage_list(int index) const {
  return serveropenactivepage_list_.Get(index);
}
inline ::proto_ff::serveropenactivepage* Sheet_serveropenactivepage::mutable_serveropenactivepage_list(int index) {
  return serveropenactivepage_list_.Mutable(index);
}
inline ::proto_ff::serveropenactivepage* Sheet_serveropenactivepage::add_serveropenactivepage_list() {
  return serveropenactivepage_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::serveropenactivepage >&
Sheet_serveropenactivepage::serveropenactivepage_list() const {
  return serveropenactivepage_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::serveropenactivepage >*
Sheet_serveropenactivepage::mutable_serveropenactivepage_list() {
  return &serveropenactivepage_list_;
}

// -------------------------------------------------------------------

// serveropenactivemRank

// optional int32 id = 1;
inline bool serveropenactivemRank::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void serveropenactivemRank::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void serveropenactivemRank::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void serveropenactivemRank::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 serveropenactivemRank::id() const {
  return id_;
}
inline void serveropenactivemRank::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// optional int32 randtype = 2;
inline bool serveropenactivemRank::has_randtype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void serveropenactivemRank::set_has_randtype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void serveropenactivemRank::clear_has_randtype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void serveropenactivemRank::clear_randtype() {
  randtype_ = 0;
  clear_has_randtype();
}
inline ::google::protobuf::int32 serveropenactivemRank::randtype() const {
  return randtype_;
}
inline void serveropenactivemRank::set_randtype(::google::protobuf::int32 value) {
  set_has_randtype();
  randtype_ = value;
}

// optional string miaoshu = 3;
inline bool serveropenactivemRank::has_miaoshu() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void serveropenactivemRank::set_has_miaoshu() {
  _has_bits_[0] |= 0x00000004u;
}
inline void serveropenactivemRank::clear_has_miaoshu() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void serveropenactivemRank::clear_miaoshu() {
  if (miaoshu_ != &::google::protobuf::internal::kEmptyString) {
    miaoshu_->clear();
  }
  clear_has_miaoshu();
}
inline const ::std::string& serveropenactivemRank::miaoshu() const {
  return *miaoshu_;
}
inline void serveropenactivemRank::set_miaoshu(const ::std::string& value) {
  set_has_miaoshu();
  if (miaoshu_ == &::google::protobuf::internal::kEmptyString) {
    miaoshu_ = new ::std::string;
  }
  miaoshu_->assign(value);
}
inline void serveropenactivemRank::set_miaoshu(const char* value) {
  set_has_miaoshu();
  if (miaoshu_ == &::google::protobuf::internal::kEmptyString) {
    miaoshu_ = new ::std::string;
  }
  miaoshu_->assign(value);
}
inline void serveropenactivemRank::set_miaoshu(const char* value, size_t size) {
  set_has_miaoshu();
  if (miaoshu_ == &::google::protobuf::internal::kEmptyString) {
    miaoshu_ = new ::std::string;
  }
  miaoshu_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* serveropenactivemRank::mutable_miaoshu() {
  set_has_miaoshu();
  if (miaoshu_ == &::google::protobuf::internal::kEmptyString) {
    miaoshu_ = new ::std::string;
  }
  return miaoshu_;
}
inline ::std::string* serveropenactivemRank::release_miaoshu() {
  clear_has_miaoshu();
  if (miaoshu_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = miaoshu_;
    miaoshu_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void serveropenactivemRank::set_allocated_miaoshu(::std::string* miaoshu) {
  if (miaoshu_ != &::google::protobuf::internal::kEmptyString) {
    delete miaoshu_;
  }
  if (miaoshu) {
    set_has_miaoshu();
    miaoshu_ = miaoshu;
  } else {
    clear_has_miaoshu();
    miaoshu_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int64 boxid = 4;
inline bool serveropenactivemRank::has_boxid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void serveropenactivemRank::set_has_boxid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void serveropenactivemRank::clear_has_boxid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void serveropenactivemRank::clear_boxid() {
  boxid_ = GOOGLE_LONGLONG(0);
  clear_has_boxid();
}
inline ::google::protobuf::int64 serveropenactivemRank::boxid() const {
  return boxid_;
}
inline void serveropenactivemRank::set_boxid(::google::protobuf::int64 value) {
  set_has_boxid();
  boxid_ = value;
}

// repeated int64 canshu = 5;
inline int serveropenactivemRank::canshu_size() const {
  return canshu_.size();
}
inline void serveropenactivemRank::clear_canshu() {
  canshu_.Clear();
}
inline ::google::protobuf::int64 serveropenactivemRank::canshu(int index) const {
  return canshu_.Get(index);
}
inline void serveropenactivemRank::set_canshu(int index, ::google::protobuf::int64 value) {
  canshu_.Set(index, value);
}
inline void serveropenactivemRank::add_canshu(::google::protobuf::int64 value) {
  canshu_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
serveropenactivemRank::canshu() const {
  return canshu_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
serveropenactivemRank::mutable_canshu() {
  return &canshu_;
}

// -------------------------------------------------------------------

// Sheet_serveropenactivemRank

// repeated .proto_ff.serveropenactivemRank serveropenactivemRank_List = 1;
inline int Sheet_serveropenactivemRank::serveropenactivemrank_list_size() const {
  return serveropenactivemrank_list_.size();
}
inline void Sheet_serveropenactivemRank::clear_serveropenactivemrank_list() {
  serveropenactivemrank_list_.Clear();
}
inline const ::proto_ff::serveropenactivemRank& Sheet_serveropenactivemRank::serveropenactivemrank_list(int index) const {
  return serveropenactivemrank_list_.Get(index);
}
inline ::proto_ff::serveropenactivemRank* Sheet_serveropenactivemRank::mutable_serveropenactivemrank_list(int index) {
  return serveropenactivemrank_list_.Mutable(index);
}
inline ::proto_ff::serveropenactivemRank* Sheet_serveropenactivemRank::add_serveropenactivemrank_list() {
  return serveropenactivemrank_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::serveropenactivemRank >&
Sheet_serveropenactivemRank::serveropenactivemrank_list() const {
  return serveropenactivemrank_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::serveropenactivemRank >*
Sheet_serveropenactivemRank::mutable_serveropenactivemrank_list() {
  return &serveropenactivemrank_list_;
}

// -------------------------------------------------------------------

// serveropenactivemAdvanced

// optional int32 id = 1;
inline bool serveropenactivemAdvanced::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void serveropenactivemAdvanced::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void serveropenactivemAdvanced::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void serveropenactivemAdvanced::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 serveropenactivemAdvanced::id() const {
  return id_;
}
inline void serveropenactivemAdvanced::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// optional int32 advancedType = 2;
inline bool serveropenactivemAdvanced::has_advancedtype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void serveropenactivemAdvanced::set_has_advancedtype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void serveropenactivemAdvanced::clear_has_advancedtype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void serveropenactivemAdvanced::clear_advancedtype() {
  advancedtype_ = 0;
  clear_has_advancedtype();
}
inline ::google::protobuf::int32 serveropenactivemAdvanced::advancedtype() const {
  return advancedtype_;
}
inline void serveropenactivemAdvanced::set_advancedtype(::google::protobuf::int32 value) {
  set_has_advancedtype();
  advancedtype_ = value;
}

// optional int64 num = 3;
inline bool serveropenactivemAdvanced::has_num() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void serveropenactivemAdvanced::set_has_num() {
  _has_bits_[0] |= 0x00000004u;
}
inline void serveropenactivemAdvanced::clear_has_num() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void serveropenactivemAdvanced::clear_num() {
  num_ = GOOGLE_LONGLONG(0);
  clear_has_num();
}
inline ::google::protobuf::int64 serveropenactivemAdvanced::num() const {
  return num_;
}
inline void serveropenactivemAdvanced::set_num(::google::protobuf::int64 value) {
  set_has_num();
  num_ = value;
}

// optional int64 parameter = 4;
inline bool serveropenactivemAdvanced::has_parameter() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void serveropenactivemAdvanced::set_has_parameter() {
  _has_bits_[0] |= 0x00000008u;
}
inline void serveropenactivemAdvanced::clear_has_parameter() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void serveropenactivemAdvanced::clear_parameter() {
  parameter_ = GOOGLE_LONGLONG(0);
  clear_has_parameter();
}
inline ::google::protobuf::int64 serveropenactivemAdvanced::parameter() const {
  return parameter_;
}
inline void serveropenactivemAdvanced::set_parameter(::google::protobuf::int64 value) {
  set_has_parameter();
  parameter_ = value;
}

// optional string miaoshu = 5;
inline bool serveropenactivemAdvanced::has_miaoshu() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void serveropenactivemAdvanced::set_has_miaoshu() {
  _has_bits_[0] |= 0x00000010u;
}
inline void serveropenactivemAdvanced::clear_has_miaoshu() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void serveropenactivemAdvanced::clear_miaoshu() {
  if (miaoshu_ != &::google::protobuf::internal::kEmptyString) {
    miaoshu_->clear();
  }
  clear_has_miaoshu();
}
inline const ::std::string& serveropenactivemAdvanced::miaoshu() const {
  return *miaoshu_;
}
inline void serveropenactivemAdvanced::set_miaoshu(const ::std::string& value) {
  set_has_miaoshu();
  if (miaoshu_ == &::google::protobuf::internal::kEmptyString) {
    miaoshu_ = new ::std::string;
  }
  miaoshu_->assign(value);
}
inline void serveropenactivemAdvanced::set_miaoshu(const char* value) {
  set_has_miaoshu();
  if (miaoshu_ == &::google::protobuf::internal::kEmptyString) {
    miaoshu_ = new ::std::string;
  }
  miaoshu_->assign(value);
}
inline void serveropenactivemAdvanced::set_miaoshu(const char* value, size_t size) {
  set_has_miaoshu();
  if (miaoshu_ == &::google::protobuf::internal::kEmptyString) {
    miaoshu_ = new ::std::string;
  }
  miaoshu_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* serveropenactivemAdvanced::mutable_miaoshu() {
  set_has_miaoshu();
  if (miaoshu_ == &::google::protobuf::internal::kEmptyString) {
    miaoshu_ = new ::std::string;
  }
  return miaoshu_;
}
inline ::std::string* serveropenactivemAdvanced::release_miaoshu() {
  clear_has_miaoshu();
  if (miaoshu_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = miaoshu_;
    miaoshu_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void serveropenactivemAdvanced::set_allocated_miaoshu(::std::string* miaoshu) {
  if (miaoshu_ != &::google::protobuf::internal::kEmptyString) {
    delete miaoshu_;
  }
  if (miaoshu) {
    set_has_miaoshu();
    miaoshu_ = miaoshu;
  } else {
    clear_has_miaoshu();
    miaoshu_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int64 jiangLi = 6;
inline bool serveropenactivemAdvanced::has_jiangli() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void serveropenactivemAdvanced::set_has_jiangli() {
  _has_bits_[0] |= 0x00000020u;
}
inline void serveropenactivemAdvanced::clear_has_jiangli() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void serveropenactivemAdvanced::clear_jiangli() {
  jiangli_ = GOOGLE_LONGLONG(0);
  clear_has_jiangli();
}
inline ::google::protobuf::int64 serveropenactivemAdvanced::jiangli() const {
  return jiangli_;
}
inline void serveropenactivemAdvanced::set_jiangli(::google::protobuf::int64 value) {
  set_has_jiangli();
  jiangli_ = value;
}

// -------------------------------------------------------------------

// Sheet_serveropenactivemAdvanced

// repeated .proto_ff.serveropenactivemAdvanced serveropenactivemAdvanced_List = 1;
inline int Sheet_serveropenactivemAdvanced::serveropenactivemadvanced_list_size() const {
  return serveropenactivemadvanced_list_.size();
}
inline void Sheet_serveropenactivemAdvanced::clear_serveropenactivemadvanced_list() {
  serveropenactivemadvanced_list_.Clear();
}
inline const ::proto_ff::serveropenactivemAdvanced& Sheet_serveropenactivemAdvanced::serveropenactivemadvanced_list(int index) const {
  return serveropenactivemadvanced_list_.Get(index);
}
inline ::proto_ff::serveropenactivemAdvanced* Sheet_serveropenactivemAdvanced::mutable_serveropenactivemadvanced_list(int index) {
  return serveropenactivemadvanced_list_.Mutable(index);
}
inline ::proto_ff::serveropenactivemAdvanced* Sheet_serveropenactivemAdvanced::add_serveropenactivemadvanced_list() {
  return serveropenactivemadvanced_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::serveropenactivemAdvanced >&
Sheet_serveropenactivemAdvanced::serveropenactivemadvanced_list() const {
  return serveropenactivemadvanced_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::serveropenactivemAdvanced >*
Sheet_serveropenactivemAdvanced::mutable_serveropenactivemadvanced_list() {
  return &serveropenactivemadvanced_list_;
}

// -------------------------------------------------------------------

// serveropenactivemRecharge

// optional int32 id = 1;
inline bool serveropenactivemRecharge::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void serveropenactivemRecharge::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void serveropenactivemRecharge::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void serveropenactivemRecharge::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 serveropenactivemRecharge::id() const {
  return id_;
}
inline void serveropenactivemRecharge::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// optional int32 numType = 2;
inline bool serveropenactivemRecharge::has_numtype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void serveropenactivemRecharge::set_has_numtype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void serveropenactivemRecharge::clear_has_numtype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void serveropenactivemRecharge::clear_numtype() {
  numtype_ = 0;
  clear_has_numtype();
}
inline ::google::protobuf::int32 serveropenactivemRecharge::numtype() const {
  return numtype_;
}
inline void serveropenactivemRecharge::set_numtype(::google::protobuf::int32 value) {
  set_has_numtype();
  numtype_ = value;
}

// optional int32 num = 3;
inline bool serveropenactivemRecharge::has_num() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void serveropenactivemRecharge::set_has_num() {
  _has_bits_[0] |= 0x00000004u;
}
inline void serveropenactivemRecharge::clear_has_num() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void serveropenactivemRecharge::clear_num() {
  num_ = 0;
  clear_has_num();
}
inline ::google::protobuf::int32 serveropenactivemRecharge::num() const {
  return num_;
}
inline void serveropenactivemRecharge::set_num(::google::protobuf::int32 value) {
  set_has_num();
  num_ = value;
}

// optional string miaoshu = 4;
inline bool serveropenactivemRecharge::has_miaoshu() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void serveropenactivemRecharge::set_has_miaoshu() {
  _has_bits_[0] |= 0x00000008u;
}
inline void serveropenactivemRecharge::clear_has_miaoshu() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void serveropenactivemRecharge::clear_miaoshu() {
  if (miaoshu_ != &::google::protobuf::internal::kEmptyString) {
    miaoshu_->clear();
  }
  clear_has_miaoshu();
}
inline const ::std::string& serveropenactivemRecharge::miaoshu() const {
  return *miaoshu_;
}
inline void serveropenactivemRecharge::set_miaoshu(const ::std::string& value) {
  set_has_miaoshu();
  if (miaoshu_ == &::google::protobuf::internal::kEmptyString) {
    miaoshu_ = new ::std::string;
  }
  miaoshu_->assign(value);
}
inline void serveropenactivemRecharge::set_miaoshu(const char* value) {
  set_has_miaoshu();
  if (miaoshu_ == &::google::protobuf::internal::kEmptyString) {
    miaoshu_ = new ::std::string;
  }
  miaoshu_->assign(value);
}
inline void serveropenactivemRecharge::set_miaoshu(const char* value, size_t size) {
  set_has_miaoshu();
  if (miaoshu_ == &::google::protobuf::internal::kEmptyString) {
    miaoshu_ = new ::std::string;
  }
  miaoshu_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* serveropenactivemRecharge::mutable_miaoshu() {
  set_has_miaoshu();
  if (miaoshu_ == &::google::protobuf::internal::kEmptyString) {
    miaoshu_ = new ::std::string;
  }
  return miaoshu_;
}
inline ::std::string* serveropenactivemRecharge::release_miaoshu() {
  clear_has_miaoshu();
  if (miaoshu_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = miaoshu_;
    miaoshu_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void serveropenactivemRecharge::set_allocated_miaoshu(::std::string* miaoshu) {
  if (miaoshu_ != &::google::protobuf::internal::kEmptyString) {
    delete miaoshu_;
  }
  if (miaoshu) {
    set_has_miaoshu();
    miaoshu_ = miaoshu;
  } else {
    clear_has_miaoshu();
    miaoshu_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int64 jiangLi = 5;
inline bool serveropenactivemRecharge::has_jiangli() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void serveropenactivemRecharge::set_has_jiangli() {
  _has_bits_[0] |= 0x00000010u;
}
inline void serveropenactivemRecharge::clear_has_jiangli() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void serveropenactivemRecharge::clear_jiangli() {
  jiangli_ = GOOGLE_LONGLONG(0);
  clear_has_jiangli();
}
inline ::google::protobuf::int64 serveropenactivemRecharge::jiangli() const {
  return jiangli_;
}
inline void serveropenactivemRecharge::set_jiangli(::google::protobuf::int64 value) {
  set_has_jiangli();
  jiangli_ = value;
}

// -------------------------------------------------------------------

// Sheet_serveropenactivemRecharge

// repeated .proto_ff.serveropenactivemRecharge serveropenactivemRecharge_List = 1;
inline int Sheet_serveropenactivemRecharge::serveropenactivemrecharge_list_size() const {
  return serveropenactivemrecharge_list_.size();
}
inline void Sheet_serveropenactivemRecharge::clear_serveropenactivemrecharge_list() {
  serveropenactivemrecharge_list_.Clear();
}
inline const ::proto_ff::serveropenactivemRecharge& Sheet_serveropenactivemRecharge::serveropenactivemrecharge_list(int index) const {
  return serveropenactivemrecharge_list_.Get(index);
}
inline ::proto_ff::serveropenactivemRecharge* Sheet_serveropenactivemRecharge::mutable_serveropenactivemrecharge_list(int index) {
  return serveropenactivemrecharge_list_.Mutable(index);
}
inline ::proto_ff::serveropenactivemRecharge* Sheet_serveropenactivemRecharge::add_serveropenactivemrecharge_list() {
  return serveropenactivemrecharge_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::serveropenactivemRecharge >&
Sheet_serveropenactivemRecharge::serveropenactivemrecharge_list() const {
  return serveropenactivemrecharge_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::serveropenactivemRecharge >*
Sheet_serveropenactivemRecharge::mutable_serveropenactivemrecharge_list() {
  return &serveropenactivemrecharge_list_;
}

// -------------------------------------------------------------------

// serveropenactivemGoods

// optional int64 id = 1;
inline bool serveropenactivemGoods::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void serveropenactivemGoods::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void serveropenactivemGoods::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void serveropenactivemGoods::clear_id() {
  id_ = GOOGLE_LONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::int64 serveropenactivemGoods::id() const {
  return id_;
}
inline void serveropenactivemGoods::set_id(::google::protobuf::int64 value) {
  set_has_id();
  id_ = value;
}

// optional int64 itemid = 2;
inline bool serveropenactivemGoods::has_itemid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void serveropenactivemGoods::set_has_itemid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void serveropenactivemGoods::clear_has_itemid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void serveropenactivemGoods::clear_itemid() {
  itemid_ = GOOGLE_LONGLONG(0);
  clear_has_itemid();
}
inline ::google::protobuf::int64 serveropenactivemGoods::itemid() const {
  return itemid_;
}
inline void serveropenactivemGoods::set_itemid(::google::protobuf::int64 value) {
  set_has_itemid();
  itemid_ = value;
}

// optional int32 currency = 3;
inline bool serveropenactivemGoods::has_currency() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void serveropenactivemGoods::set_has_currency() {
  _has_bits_[0] |= 0x00000004u;
}
inline void serveropenactivemGoods::clear_has_currency() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void serveropenactivemGoods::clear_currency() {
  currency_ = 0;
  clear_has_currency();
}
inline ::google::protobuf::int32 serveropenactivemGoods::currency() const {
  return currency_;
}
inline void serveropenactivemGoods::set_currency(::google::protobuf::int32 value) {
  set_has_currency();
  currency_ = value;
}

// optional int32 priceA = 4;
inline bool serveropenactivemGoods::has_pricea() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void serveropenactivemGoods::set_has_pricea() {
  _has_bits_[0] |= 0x00000008u;
}
inline void serveropenactivemGoods::clear_has_pricea() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void serveropenactivemGoods::clear_pricea() {
  pricea_ = 0;
  clear_has_pricea();
}
inline ::google::protobuf::int32 serveropenactivemGoods::pricea() const {
  return pricea_;
}
inline void serveropenactivemGoods::set_pricea(::google::protobuf::int32 value) {
  set_has_pricea();
  pricea_ = value;
}

// optional int32 priceB = 5;
inline bool serveropenactivemGoods::has_priceb() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void serveropenactivemGoods::set_has_priceb() {
  _has_bits_[0] |= 0x00000010u;
}
inline void serveropenactivemGoods::clear_has_priceb() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void serveropenactivemGoods::clear_priceb() {
  priceb_ = 0;
  clear_has_priceb();
}
inline ::google::protobuf::int32 serveropenactivemGoods::priceb() const {
  return priceb_;
}
inline void serveropenactivemGoods::set_priceb(::google::protobuf::int32 value) {
  set_has_priceb();
  priceb_ = value;
}

// optional int32 quantity = 6;
inline bool serveropenactivemGoods::has_quantity() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void serveropenactivemGoods::set_has_quantity() {
  _has_bits_[0] |= 0x00000020u;
}
inline void serveropenactivemGoods::clear_has_quantity() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void serveropenactivemGoods::clear_quantity() {
  quantity_ = 0;
  clear_has_quantity();
}
inline ::google::protobuf::int32 serveropenactivemGoods::quantity() const {
  return quantity_;
}
inline void serveropenactivemGoods::set_quantity(::google::protobuf::int32 value) {
  set_has_quantity();
  quantity_ = value;
}

// -------------------------------------------------------------------

// Sheet_serveropenactivemGoods

// repeated .proto_ff.serveropenactivemGoods serveropenactivemGoods_List = 1;
inline int Sheet_serveropenactivemGoods::serveropenactivemgoods_list_size() const {
  return serveropenactivemgoods_list_.size();
}
inline void Sheet_serveropenactivemGoods::clear_serveropenactivemgoods_list() {
  serveropenactivemgoods_list_.Clear();
}
inline const ::proto_ff::serveropenactivemGoods& Sheet_serveropenactivemGoods::serveropenactivemgoods_list(int index) const {
  return serveropenactivemgoods_list_.Get(index);
}
inline ::proto_ff::serveropenactivemGoods* Sheet_serveropenactivemGoods::mutable_serveropenactivemgoods_list(int index) {
  return serveropenactivemgoods_list_.Mutable(index);
}
inline ::proto_ff::serveropenactivemGoods* Sheet_serveropenactivemGoods::add_serveropenactivemgoods_list() {
  return serveropenactivemgoods_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::serveropenactivemGoods >&
Sheet_serveropenactivemGoods::serveropenactivemgoods_list() const {
  return serveropenactivemgoods_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::serveropenactivemGoods >*
Sheet_serveropenactivemGoods::mutable_serveropenactivemgoods_list() {
  return &serveropenactivemgoods_list_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto_ff

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_serveropenactive_2eproto__INCLUDED
