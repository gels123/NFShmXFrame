// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: E_Nickgod.proto

#ifndef PROTOBUF_E_5fNickgod_2eproto__INCLUDED
#define PROTOBUF_E_5fNickgod_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "yd_fieldoptions.pb.h"
// @@protoc_insertion_point(includes)

namespace proto_ff {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_E_5fNickgod_2eproto();
void protobuf_AssignDesc_E_5fNickgod_2eproto();
void protobuf_ShutdownFile_E_5fNickgod_2eproto();

class E_NickgodConstant;
class Sheet_NickgodConstant;
class E_NickgodName;
class Sheet_NickgodName;
class E_NickgodStageMosDesc;
class E_NickgodStageBossDesc;
class E_NickgodStage;
class Sheet_NickgodStage;
class E_NickgodRewardsRewardDesc;
class E_NickgodRewards;
class Sheet_NickgodRewards;
class E_NickgodLattice;
class Sheet_NickgodLattice;
class E_NickgodTreasuryItemDesc;
class E_NickgodTreasury;
class Sheet_NickgodTreasury;
class E_NickgodPrivilegeRewardDesc;
class E_NickgodPrivilege;
class Sheet_NickgodPrivilege;
class E_NickgodSaleItemDesc;
class E_NickgodSale;
class Sheet_NickgodSale;
class E_NickgodChargeupRewardDesc;
class E_NickgodChargeup;
class Sheet_NickgodChargeup;

// ===================================================================

class E_NickgodConstant : public ::google::protobuf::Message {
 public:
  E_NickgodConstant();
  virtual ~E_NickgodConstant();

  E_NickgodConstant(const E_NickgodConstant& from);

  inline E_NickgodConstant& operator=(const E_NickgodConstant& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_NickgodConstant& default_instance();

  void Swap(E_NickgodConstant* other);

  // implements Message ----------------------------------------------

  E_NickgodConstant* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_NickgodConstant& from);
  void MergeFrom(const E_NickgodConstant& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 m_id = 1;
  inline bool has_m_id() const;
  inline void clear_m_id();
  static const int kMIdFieldNumber = 1;
  inline ::google::protobuf::int64 m_id() const;
  inline void set_m_id(::google::protobuf::int64 value);

  // optional int32 m_skill = 2;
  inline bool has_m_skill() const;
  inline void clear_m_skill();
  static const int kMSkillFieldNumber = 2;
  inline ::google::protobuf::int32 m_skill() const;
  inline void set_m_skill(::google::protobuf::int32 value);

  // optional int32 m_time = 3;
  inline bool has_m_time() const;
  inline void clear_m_time();
  static const int kMTimeFieldNumber = 3;
  inline ::google::protobuf::int32 m_time() const;
  inline void set_m_time(::google::protobuf::int32 value);

  // optional int32 m_maxUser = 4;
  inline bool has_m_maxuser() const;
  inline void clear_m_maxuser();
  static const int kMMaxUserFieldNumber = 4;
  inline ::google::protobuf::int32 m_maxuser() const;
  inline void set_m_maxuser(::google::protobuf::int32 value);

  // optional int32 m_floorsMax = 5;
  inline bool has_m_floorsmax() const;
  inline void clear_m_floorsmax();
  static const int kMFloorsMaxFieldNumber = 5;
  inline ::google::protobuf::int32 m_floorsmax() const;
  inline void set_m_floorsmax(::google::protobuf::int32 value);

  // optional int32 m_lattice = 6;
  inline bool has_m_lattice() const;
  inline void clear_m_lattice();
  static const int kMLatticeFieldNumber = 6;
  inline ::google::protobuf::int32 m_lattice() const;
  inline void set_m_lattice(::google::protobuf::int32 value);

  // optional int32 m_repairItem = 7;
  inline bool has_m_repairitem() const;
  inline void clear_m_repairitem();
  static const int kMRepairItemFieldNumber = 7;
  inline ::google::protobuf::int32 m_repairitem() const;
  inline void set_m_repairitem(::google::protobuf::int32 value);

  // optional int32 m_repairNum = 8;
  inline bool has_m_repairnum() const;
  inline void clear_m_repairnum();
  static const int kMRepairNumFieldNumber = 8;
  inline ::google::protobuf::int32 m_repairnum() const;
  inline void set_m_repairnum(::google::protobuf::int32 value);

  // optional int32 m_openItem = 9;
  inline bool has_m_openitem() const;
  inline void clear_m_openitem();
  static const int kMOpenItemFieldNumber = 9;
  inline ::google::protobuf::int32 m_openitem() const;
  inline void set_m_openitem(::google::protobuf::int32 value);

  // optional int32 m_openNum = 10;
  inline bool has_m_opennum() const;
  inline void clear_m_opennum();
  static const int kMOpenNumFieldNumber = 10;
  inline ::google::protobuf::int32 m_opennum() const;
  inline void set_m_opennum(::google::protobuf::int32 value);

  // optional string m_week = 11;
  inline bool has_m_week() const;
  inline void clear_m_week();
  static const int kMWeekFieldNumber = 11;
  inline const ::std::string& m_week() const;
  inline void set_m_week(const ::std::string& value);
  inline void set_m_week(const char* value);
  inline void set_m_week(const char* value, size_t size);
  inline ::std::string* mutable_m_week();
  inline ::std::string* release_m_week();
  inline void set_allocated_m_week(::std::string* m_week);

  // optional int32 m_opentime = 12;
  inline bool has_m_opentime() const;
  inline void clear_m_opentime();
  static const int kMOpentimeFieldNumber = 12;
  inline ::google::protobuf::int32 m_opentime() const;
  inline void set_m_opentime(::google::protobuf::int32 value);

  // optional int32 m_endtime = 13;
  inline bool has_m_endtime() const;
  inline void clear_m_endtime();
  static const int kMEndtimeFieldNumber = 13;
  inline ::google::protobuf::int32 m_endtime() const;
  inline void set_m_endtime(::google::protobuf::int32 value);

  // optional int32 m_logMax = 14;
  inline bool has_m_logmax() const;
  inline void clear_m_logmax();
  static const int kMLogMaxFieldNumber = 14;
  inline ::google::protobuf::int32 m_logmax() const;
  inline void set_m_logmax(::google::protobuf::int32 value);

  // optional int32 m_readyMap = 15;
  inline bool has_m_readymap() const;
  inline void clear_m_readymap();
  static const int kMReadyMapFieldNumber = 15;
  inline ::google::protobuf::int32 m_readymap() const;
  inline void set_m_readymap(::google::protobuf::int32 value);

  // optional int32 m_readyPiont = 16;
  inline bool has_m_readypiont() const;
  inline void clear_m_readypiont();
  static const int kMReadyPiontFieldNumber = 16;
  inline ::google::protobuf::int32 m_readypiont() const;
  inline void set_m_readypiont(::google::protobuf::int32 value);

  // optional int32 m_actId = 17;
  inline bool has_m_actid() const;
  inline void clear_m_actid();
  static const int kMActIdFieldNumber = 17;
  inline ::google::protobuf::int32 m_actid() const;
  inline void set_m_actid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.E_NickgodConstant)
 private:
  inline void set_has_m_id();
  inline void clear_has_m_id();
  inline void set_has_m_skill();
  inline void clear_has_m_skill();
  inline void set_has_m_time();
  inline void clear_has_m_time();
  inline void set_has_m_maxuser();
  inline void clear_has_m_maxuser();
  inline void set_has_m_floorsmax();
  inline void clear_has_m_floorsmax();
  inline void set_has_m_lattice();
  inline void clear_has_m_lattice();
  inline void set_has_m_repairitem();
  inline void clear_has_m_repairitem();
  inline void set_has_m_repairnum();
  inline void clear_has_m_repairnum();
  inline void set_has_m_openitem();
  inline void clear_has_m_openitem();
  inline void set_has_m_opennum();
  inline void clear_has_m_opennum();
  inline void set_has_m_week();
  inline void clear_has_m_week();
  inline void set_has_m_opentime();
  inline void clear_has_m_opentime();
  inline void set_has_m_endtime();
  inline void clear_has_m_endtime();
  inline void set_has_m_logmax();
  inline void clear_has_m_logmax();
  inline void set_has_m_readymap();
  inline void clear_has_m_readymap();
  inline void set_has_m_readypiont();
  inline void clear_has_m_readypiont();
  inline void set_has_m_actid();
  inline void clear_has_m_actid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 m_id_;
  ::google::protobuf::int32 m_skill_;
  ::google::protobuf::int32 m_time_;
  ::google::protobuf::int32 m_maxuser_;
  ::google::protobuf::int32 m_floorsmax_;
  ::google::protobuf::int32 m_lattice_;
  ::google::protobuf::int32 m_repairitem_;
  ::google::protobuf::int32 m_repairnum_;
  ::google::protobuf::int32 m_openitem_;
  ::std::string* m_week_;
  ::google::protobuf::int32 m_opennum_;
  ::google::protobuf::int32 m_opentime_;
  ::google::protobuf::int32 m_endtime_;
  ::google::protobuf::int32 m_logmax_;
  ::google::protobuf::int32 m_readymap_;
  ::google::protobuf::int32 m_readypiont_;
  ::google::protobuf::int32 m_actid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(17 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fNickgod_2eproto();
  friend void protobuf_AssignDesc_E_5fNickgod_2eproto();
  friend void protobuf_ShutdownFile_E_5fNickgod_2eproto();

  void InitAsDefaultInstance();
  static E_NickgodConstant* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_NickgodConstant : public ::google::protobuf::Message {
 public:
  Sheet_NickgodConstant();
  virtual ~Sheet_NickgodConstant();

  Sheet_NickgodConstant(const Sheet_NickgodConstant& from);

  inline Sheet_NickgodConstant& operator=(const Sheet_NickgodConstant& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_NickgodConstant& default_instance();

  void Swap(Sheet_NickgodConstant* other);

  // implements Message ----------------------------------------------

  Sheet_NickgodConstant* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_NickgodConstant& from);
  void MergeFrom(const Sheet_NickgodConstant& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.E_NickgodConstant E_NickgodConstant_List = 1;
  inline int e_nickgodconstant_list_size() const;
  inline void clear_e_nickgodconstant_list();
  static const int kENickgodConstantListFieldNumber = 1;
  inline const ::proto_ff::E_NickgodConstant& e_nickgodconstant_list(int index) const;
  inline ::proto_ff::E_NickgodConstant* mutable_e_nickgodconstant_list(int index);
  inline ::proto_ff::E_NickgodConstant* add_e_nickgodconstant_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_NickgodConstant >&
      e_nickgodconstant_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_NickgodConstant >*
      mutable_e_nickgodconstant_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_NickgodConstant)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_NickgodConstant > e_nickgodconstant_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fNickgod_2eproto();
  friend void protobuf_AssignDesc_E_5fNickgod_2eproto();
  friend void protobuf_ShutdownFile_E_5fNickgod_2eproto();

  void InitAsDefaultInstance();
  static Sheet_NickgodConstant* default_instance_;
};
// -------------------------------------------------------------------

class E_NickgodName : public ::google::protobuf::Message {
 public:
  E_NickgodName();
  virtual ~E_NickgodName();

  E_NickgodName(const E_NickgodName& from);

  inline E_NickgodName& operator=(const E_NickgodName& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_NickgodName& default_instance();

  void Swap(E_NickgodName* other);

  // implements Message ----------------------------------------------

  E_NickgodName* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_NickgodName& from);
  void MergeFrom(const E_NickgodName& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 m_id = 1;
  inline bool has_m_id() const;
  inline void clear_m_id();
  static const int kMIdFieldNumber = 1;
  inline ::google::protobuf::int32 m_id() const;
  inline void set_m_id(::google::protobuf::int32 value);

  // optional string m_name = 2;
  inline bool has_m_name() const;
  inline void clear_m_name();
  static const int kMNameFieldNumber = 2;
  inline const ::std::string& m_name() const;
  inline void set_m_name(const ::std::string& value);
  inline void set_m_name(const char* value);
  inline void set_m_name(const char* value, size_t size);
  inline ::std::string* mutable_m_name();
  inline ::std::string* release_m_name();
  inline void set_allocated_m_name(::std::string* m_name);

  // @@protoc_insertion_point(class_scope:proto_ff.E_NickgodName)
 private:
  inline void set_has_m_id();
  inline void clear_has_m_id();
  inline void set_has_m_name();
  inline void clear_has_m_name();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* m_name_;
  ::google::protobuf::int32 m_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fNickgod_2eproto();
  friend void protobuf_AssignDesc_E_5fNickgod_2eproto();
  friend void protobuf_ShutdownFile_E_5fNickgod_2eproto();

  void InitAsDefaultInstance();
  static E_NickgodName* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_NickgodName : public ::google::protobuf::Message {
 public:
  Sheet_NickgodName();
  virtual ~Sheet_NickgodName();

  Sheet_NickgodName(const Sheet_NickgodName& from);

  inline Sheet_NickgodName& operator=(const Sheet_NickgodName& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_NickgodName& default_instance();

  void Swap(Sheet_NickgodName* other);

  // implements Message ----------------------------------------------

  Sheet_NickgodName* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_NickgodName& from);
  void MergeFrom(const Sheet_NickgodName& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.E_NickgodName E_NickgodName_List = 1;
  inline int e_nickgodname_list_size() const;
  inline void clear_e_nickgodname_list();
  static const int kENickgodNameListFieldNumber = 1;
  inline const ::proto_ff::E_NickgodName& e_nickgodname_list(int index) const;
  inline ::proto_ff::E_NickgodName* mutable_e_nickgodname_list(int index);
  inline ::proto_ff::E_NickgodName* add_e_nickgodname_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_NickgodName >&
      e_nickgodname_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_NickgodName >*
      mutable_e_nickgodname_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_NickgodName)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_NickgodName > e_nickgodname_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fNickgod_2eproto();
  friend void protobuf_AssignDesc_E_5fNickgod_2eproto();
  friend void protobuf_ShutdownFile_E_5fNickgod_2eproto();

  void InitAsDefaultInstance();
  static Sheet_NickgodName* default_instance_;
};
// -------------------------------------------------------------------

class E_NickgodStageMosDesc : public ::google::protobuf::Message {
 public:
  E_NickgodStageMosDesc();
  virtual ~E_NickgodStageMosDesc();

  E_NickgodStageMosDesc(const E_NickgodStageMosDesc& from);

  inline E_NickgodStageMosDesc& operator=(const E_NickgodStageMosDesc& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_NickgodStageMosDesc& default_instance();

  void Swap(E_NickgodStageMosDesc* other);

  // implements Message ----------------------------------------------

  E_NickgodStageMosDesc* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_NickgodStageMosDesc& from);
  void MergeFrom(const E_NickgodStageMosDesc& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 m_id = 1;
  inline bool has_m_id() const;
  inline void clear_m_id();
  static const int kMIdFieldNumber = 1;
  inline ::google::protobuf::int32 m_id() const;
  inline void set_m_id(::google::protobuf::int32 value);

  // optional int32 m_point = 2;
  inline bool has_m_point() const;
  inline void clear_m_point();
  static const int kMPointFieldNumber = 2;
  inline ::google::protobuf::int32 m_point() const;
  inline void set_m_point(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.E_NickgodStageMosDesc)
 private:
  inline void set_has_m_id();
  inline void clear_has_m_id();
  inline void set_has_m_point();
  inline void clear_has_m_point();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_id_;
  ::google::protobuf::int32 m_point_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fNickgod_2eproto();
  friend void protobuf_AssignDesc_E_5fNickgod_2eproto();
  friend void protobuf_ShutdownFile_E_5fNickgod_2eproto();

  void InitAsDefaultInstance();
  static E_NickgodStageMosDesc* default_instance_;
};
// -------------------------------------------------------------------

class E_NickgodStageBossDesc : public ::google::protobuf::Message {
 public:
  E_NickgodStageBossDesc();
  virtual ~E_NickgodStageBossDesc();

  E_NickgodStageBossDesc(const E_NickgodStageBossDesc& from);

  inline E_NickgodStageBossDesc& operator=(const E_NickgodStageBossDesc& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_NickgodStageBossDesc& default_instance();

  void Swap(E_NickgodStageBossDesc* other);

  // implements Message ----------------------------------------------

  E_NickgodStageBossDesc* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_NickgodStageBossDesc& from);
  void MergeFrom(const E_NickgodStageBossDesc& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string m_dropPreview = 1;
  inline bool has_m_droppreview() const;
  inline void clear_m_droppreview();
  static const int kMDropPreviewFieldNumber = 1;
  inline const ::std::string& m_droppreview() const;
  inline void set_m_droppreview(const ::std::string& value);
  inline void set_m_droppreview(const char* value);
  inline void set_m_droppreview(const char* value, size_t size);
  inline ::std::string* mutable_m_droppreview();
  inline ::std::string* release_m_droppreview();
  inline void set_allocated_m_droppreview(::std::string* m_droppreview);

  // optional int32 m_id = 2;
  inline bool has_m_id() const;
  inline void clear_m_id();
  static const int kMIdFieldNumber = 2;
  inline ::google::protobuf::int32 m_id() const;
  inline void set_m_id(::google::protobuf::int32 value);

  // optional int32 m_point = 3;
  inline bool has_m_point() const;
  inline void clear_m_point();
  static const int kMPointFieldNumber = 3;
  inline ::google::protobuf::int32 m_point() const;
  inline void set_m_point(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.E_NickgodStageBossDesc)
 private:
  inline void set_has_m_droppreview();
  inline void clear_has_m_droppreview();
  inline void set_has_m_id();
  inline void clear_has_m_id();
  inline void set_has_m_point();
  inline void clear_has_m_point();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* m_droppreview_;
  ::google::protobuf::int32 m_id_;
  ::google::protobuf::int32 m_point_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fNickgod_2eproto();
  friend void protobuf_AssignDesc_E_5fNickgod_2eproto();
  friend void protobuf_ShutdownFile_E_5fNickgod_2eproto();

  void InitAsDefaultInstance();
  static E_NickgodStageBossDesc* default_instance_;
};
// -------------------------------------------------------------------

class E_NickgodStage : public ::google::protobuf::Message {
 public:
  E_NickgodStage();
  virtual ~E_NickgodStage();

  E_NickgodStage(const E_NickgodStage& from);

  inline E_NickgodStage& operator=(const E_NickgodStage& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_NickgodStage& default_instance();

  void Swap(E_NickgodStage* other);

  // implements Message ----------------------------------------------

  E_NickgodStage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_NickgodStage& from);
  void MergeFrom(const E_NickgodStage& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 m_id = 1;
  inline bool has_m_id() const;
  inline void clear_m_id();
  static const int kMIdFieldNumber = 1;
  inline ::google::protobuf::int32 m_id() const;
  inline void set_m_id(::google::protobuf::int32 value);

  // optional int32 m_map = 2;
  inline bool has_m_map() const;
  inline void clear_m_map();
  static const int kMMapFieldNumber = 2;
  inline ::google::protobuf::int32 m_map() const;
  inline void set_m_map(::google::protobuf::int32 value);

  // optional int32 m_duration = 3;
  inline bool has_m_duration() const;
  inline void clear_m_duration();
  static const int kMDurationFieldNumber = 3;
  inline ::google::protobuf::int32 m_duration() const;
  inline void set_m_duration(::google::protobuf::int32 value);

  // optional int32 m_mosDieRefresh = 4;
  inline bool has_m_mosdierefresh() const;
  inline void clear_m_mosdierefresh();
  static const int kMMosDieRefreshFieldNumber = 4;
  inline ::google::protobuf::int32 m_mosdierefresh() const;
  inline void set_m_mosdierefresh(::google::protobuf::int32 value);

  // optional int32 m_bossFirstRefresh = 5;
  inline bool has_m_bossfirstrefresh() const;
  inline void clear_m_bossfirstrefresh();
  static const int kMBossFirstRefreshFieldNumber = 5;
  inline ::google::protobuf::int32 m_bossfirstrefresh() const;
  inline void set_m_bossfirstrefresh(::google::protobuf::int32 value);

  // optional int32 m_bossDieRefresh = 6;
  inline bool has_m_bossdierefresh() const;
  inline void clear_m_bossdierefresh();
  static const int kMBossDieRefreshFieldNumber = 6;
  inline ::google::protobuf::int32 m_bossdierefresh() const;
  inline void set_m_bossdierefresh(::google::protobuf::int32 value);

  // optional int32 m_playerDieDrop = 7;
  inline bool has_m_playerdiedrop() const;
  inline void clear_m_playerdiedrop();
  static const int kMPlayerDieDropFieldNumber = 7;
  inline ::google::protobuf::int32 m_playerdiedrop() const;
  inline void set_m_playerdiedrop(::google::protobuf::int32 value);

  // optional int32 m_sceneIntegralTime = 8;
  inline bool has_m_sceneintegraltime() const;
  inline void clear_m_sceneintegraltime();
  static const int kMSceneIntegralTimeFieldNumber = 8;
  inline ::google::protobuf::int32 m_sceneintegraltime() const;
  inline void set_m_sceneintegraltime(::google::protobuf::int32 value);

  // optional int32 m_sceneIntegral = 9;
  inline bool has_m_sceneintegral() const;
  inline void clear_m_sceneintegral();
  static const int kMSceneIntegralFieldNumber = 9;
  inline ::google::protobuf::int32 m_sceneintegral() const;
  inline void set_m_sceneintegral(::google::protobuf::int32 value);

  // optional int32 m_killmosIntegral = 10;
  inline bool has_m_killmosintegral() const;
  inline void clear_m_killmosintegral();
  static const int kMKillmosIntegralFieldNumber = 10;
  inline ::google::protobuf::int32 m_killmosintegral() const;
  inline void set_m_killmosintegral(::google::protobuf::int32 value);

  // optional int32 m_killbossIntegral = 11;
  inline bool has_m_killbossintegral() const;
  inline void clear_m_killbossintegral();
  static const int kMKillbossIntegralFieldNumber = 11;
  inline ::google::protobuf::int32 m_killbossintegral() const;
  inline void set_m_killbossintegral(::google::protobuf::int32 value);

  // optional int32 m_killplayerIntegral = 12;
  inline bool has_m_killplayerintegral() const;
  inline void clear_m_killplayerintegral();
  static const int kMKillplayerIntegralFieldNumber = 12;
  inline ::google::protobuf::int32 m_killplayerintegral() const;
  inline void set_m_killplayerintegral(::google::protobuf::int32 value);

  // optional int32 m_assistplayerIntegral = 13;
  inline bool has_m_assistplayerintegral() const;
  inline void clear_m_assistplayerintegral();
  static const int kMAssistplayerIntegralFieldNumber = 13;
  inline ::google::protobuf::int32 m_assistplayerintegral() const;
  inline void set_m_assistplayerintegral(::google::protobuf::int32 value);

  // repeated .proto_ff.E_NickgodStageMosDesc m_mos = 14;
  inline int m_mos_size() const;
  inline void clear_m_mos();
  static const int kMMosFieldNumber = 14;
  inline const ::proto_ff::E_NickgodStageMosDesc& m_mos(int index) const;
  inline ::proto_ff::E_NickgodStageMosDesc* mutable_m_mos(int index);
  inline ::proto_ff::E_NickgodStageMosDesc* add_m_mos();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_NickgodStageMosDesc >&
      m_mos() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_NickgodStageMosDesc >*
      mutable_m_mos();

  // repeated .proto_ff.E_NickgodStageBossDesc m_boss = 15;
  inline int m_boss_size() const;
  inline void clear_m_boss();
  static const int kMBossFieldNumber = 15;
  inline const ::proto_ff::E_NickgodStageBossDesc& m_boss(int index) const;
  inline ::proto_ff::E_NickgodStageBossDesc* mutable_m_boss(int index);
  inline ::proto_ff::E_NickgodStageBossDesc* add_m_boss();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_NickgodStageBossDesc >&
      m_boss() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_NickgodStageBossDesc >*
      mutable_m_boss();

  // repeated int32 m_revivalPoint = 16;
  inline int m_revivalpoint_size() const;
  inline void clear_m_revivalpoint();
  static const int kMRevivalPointFieldNumber = 16;
  inline ::google::protobuf::int32 m_revivalpoint(int index) const;
  inline void set_m_revivalpoint(int index, ::google::protobuf::int32 value);
  inline void add_m_revivalpoint(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      m_revivalpoint() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_m_revivalpoint();

  // @@protoc_insertion_point(class_scope:proto_ff.E_NickgodStage)
 private:
  inline void set_has_m_id();
  inline void clear_has_m_id();
  inline void set_has_m_map();
  inline void clear_has_m_map();
  inline void set_has_m_duration();
  inline void clear_has_m_duration();
  inline void set_has_m_mosdierefresh();
  inline void clear_has_m_mosdierefresh();
  inline void set_has_m_bossfirstrefresh();
  inline void clear_has_m_bossfirstrefresh();
  inline void set_has_m_bossdierefresh();
  inline void clear_has_m_bossdierefresh();
  inline void set_has_m_playerdiedrop();
  inline void clear_has_m_playerdiedrop();
  inline void set_has_m_sceneintegraltime();
  inline void clear_has_m_sceneintegraltime();
  inline void set_has_m_sceneintegral();
  inline void clear_has_m_sceneintegral();
  inline void set_has_m_killmosintegral();
  inline void clear_has_m_killmosintegral();
  inline void set_has_m_killbossintegral();
  inline void clear_has_m_killbossintegral();
  inline void set_has_m_killplayerintegral();
  inline void clear_has_m_killplayerintegral();
  inline void set_has_m_assistplayerintegral();
  inline void clear_has_m_assistplayerintegral();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_id_;
  ::google::protobuf::int32 m_map_;
  ::google::protobuf::int32 m_duration_;
  ::google::protobuf::int32 m_mosdierefresh_;
  ::google::protobuf::int32 m_bossfirstrefresh_;
  ::google::protobuf::int32 m_bossdierefresh_;
  ::google::protobuf::int32 m_playerdiedrop_;
  ::google::protobuf::int32 m_sceneintegraltime_;
  ::google::protobuf::int32 m_sceneintegral_;
  ::google::protobuf::int32 m_killmosintegral_;
  ::google::protobuf::int32 m_killbossintegral_;
  ::google::protobuf::int32 m_killplayerintegral_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_NickgodStageMosDesc > m_mos_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_NickgodStageBossDesc > m_boss_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > m_revivalpoint_;
  ::google::protobuf::int32 m_assistplayerintegral_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(16 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fNickgod_2eproto();
  friend void protobuf_AssignDesc_E_5fNickgod_2eproto();
  friend void protobuf_ShutdownFile_E_5fNickgod_2eproto();

  void InitAsDefaultInstance();
  static E_NickgodStage* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_NickgodStage : public ::google::protobuf::Message {
 public:
  Sheet_NickgodStage();
  virtual ~Sheet_NickgodStage();

  Sheet_NickgodStage(const Sheet_NickgodStage& from);

  inline Sheet_NickgodStage& operator=(const Sheet_NickgodStage& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_NickgodStage& default_instance();

  void Swap(Sheet_NickgodStage* other);

  // implements Message ----------------------------------------------

  Sheet_NickgodStage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_NickgodStage& from);
  void MergeFrom(const Sheet_NickgodStage& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.E_NickgodStage E_NickgodStage_List = 1;
  inline int e_nickgodstage_list_size() const;
  inline void clear_e_nickgodstage_list();
  static const int kENickgodStageListFieldNumber = 1;
  inline const ::proto_ff::E_NickgodStage& e_nickgodstage_list(int index) const;
  inline ::proto_ff::E_NickgodStage* mutable_e_nickgodstage_list(int index);
  inline ::proto_ff::E_NickgodStage* add_e_nickgodstage_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_NickgodStage >&
      e_nickgodstage_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_NickgodStage >*
      mutable_e_nickgodstage_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_NickgodStage)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_NickgodStage > e_nickgodstage_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fNickgod_2eproto();
  friend void protobuf_AssignDesc_E_5fNickgod_2eproto();
  friend void protobuf_ShutdownFile_E_5fNickgod_2eproto();

  void InitAsDefaultInstance();
  static Sheet_NickgodStage* default_instance_;
};
// -------------------------------------------------------------------

class E_NickgodRewardsRewardDesc : public ::google::protobuf::Message {
 public:
  E_NickgodRewardsRewardDesc();
  virtual ~E_NickgodRewardsRewardDesc();

  E_NickgodRewardsRewardDesc(const E_NickgodRewardsRewardDesc& from);

  inline E_NickgodRewardsRewardDesc& operator=(const E_NickgodRewardsRewardDesc& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_NickgodRewardsRewardDesc& default_instance();

  void Swap(E_NickgodRewardsRewardDesc* other);

  // implements Message ----------------------------------------------

  E_NickgodRewardsRewardDesc* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_NickgodRewardsRewardDesc& from);
  void MergeFrom(const E_NickgodRewardsRewardDesc& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 m_Num = 1;
  inline bool has_m_num() const;
  inline void clear_m_num();
  static const int kMNumFieldNumber = 1;
  inline ::google::protobuf::int32 m_num() const;
  inline void set_m_num(::google::protobuf::int32 value);

  // optional int64 m_ID = 2;
  inline bool has_m_id() const;
  inline void clear_m_id();
  static const int kMIDFieldNumber = 2;
  inline ::google::protobuf::int64 m_id() const;
  inline void set_m_id(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.E_NickgodRewardsRewardDesc)
 private:
  inline void set_has_m_num();
  inline void clear_has_m_num();
  inline void set_has_m_id();
  inline void clear_has_m_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 m_id_;
  ::google::protobuf::int32 m_num_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fNickgod_2eproto();
  friend void protobuf_AssignDesc_E_5fNickgod_2eproto();
  friend void protobuf_ShutdownFile_E_5fNickgod_2eproto();

  void InitAsDefaultInstance();
  static E_NickgodRewardsRewardDesc* default_instance_;
};
// -------------------------------------------------------------------

class E_NickgodRewards : public ::google::protobuf::Message {
 public:
  E_NickgodRewards();
  virtual ~E_NickgodRewards();

  E_NickgodRewards(const E_NickgodRewards& from);

  inline E_NickgodRewards& operator=(const E_NickgodRewards& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_NickgodRewards& default_instance();

  void Swap(E_NickgodRewards* other);

  // implements Message ----------------------------------------------

  E_NickgodRewards* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_NickgodRewards& from);
  void MergeFrom(const E_NickgodRewards& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 m_id = 1;
  inline bool has_m_id() const;
  inline void clear_m_id();
  static const int kMIdFieldNumber = 1;
  inline ::google::protobuf::int32 m_id() const;
  inline void set_m_id(::google::protobuf::int32 value);

  // optional int32 m_rankingMin = 2;
  inline bool has_m_rankingmin() const;
  inline void clear_m_rankingmin();
  static const int kMRankingMinFieldNumber = 2;
  inline ::google::protobuf::int32 m_rankingmin() const;
  inline void set_m_rankingmin(::google::protobuf::int32 value);

  // optional int32 m_rankingMax = 3;
  inline bool has_m_rankingmax() const;
  inline void clear_m_rankingmax();
  static const int kMRankingMaxFieldNumber = 3;
  inline ::google::protobuf::int32 m_rankingmax() const;
  inline void set_m_rankingmax(::google::protobuf::int32 value);

  // optional int32 m_score = 4;
  inline bool has_m_score() const;
  inline void clear_m_score();
  static const int kMScoreFieldNumber = 4;
  inline ::google::protobuf::int32 m_score() const;
  inline void set_m_score(::google::protobuf::int32 value);

  // repeated .proto_ff.E_NickgodRewardsRewardDesc m_reward = 5;
  inline int m_reward_size() const;
  inline void clear_m_reward();
  static const int kMRewardFieldNumber = 5;
  inline const ::proto_ff::E_NickgodRewardsRewardDesc& m_reward(int index) const;
  inline ::proto_ff::E_NickgodRewardsRewardDesc* mutable_m_reward(int index);
  inline ::proto_ff::E_NickgodRewardsRewardDesc* add_m_reward();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_NickgodRewardsRewardDesc >&
      m_reward() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_NickgodRewardsRewardDesc >*
      mutable_m_reward();

  // @@protoc_insertion_point(class_scope:proto_ff.E_NickgodRewards)
 private:
  inline void set_has_m_id();
  inline void clear_has_m_id();
  inline void set_has_m_rankingmin();
  inline void clear_has_m_rankingmin();
  inline void set_has_m_rankingmax();
  inline void clear_has_m_rankingmax();
  inline void set_has_m_score();
  inline void clear_has_m_score();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_id_;
  ::google::protobuf::int32 m_rankingmin_;
  ::google::protobuf::int32 m_rankingmax_;
  ::google::protobuf::int32 m_score_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_NickgodRewardsRewardDesc > m_reward_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fNickgod_2eproto();
  friend void protobuf_AssignDesc_E_5fNickgod_2eproto();
  friend void protobuf_ShutdownFile_E_5fNickgod_2eproto();

  void InitAsDefaultInstance();
  static E_NickgodRewards* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_NickgodRewards : public ::google::protobuf::Message {
 public:
  Sheet_NickgodRewards();
  virtual ~Sheet_NickgodRewards();

  Sheet_NickgodRewards(const Sheet_NickgodRewards& from);

  inline Sheet_NickgodRewards& operator=(const Sheet_NickgodRewards& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_NickgodRewards& default_instance();

  void Swap(Sheet_NickgodRewards* other);

  // implements Message ----------------------------------------------

  Sheet_NickgodRewards* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_NickgodRewards& from);
  void MergeFrom(const Sheet_NickgodRewards& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.E_NickgodRewards E_NickgodRewards_List = 1;
  inline int e_nickgodrewards_list_size() const;
  inline void clear_e_nickgodrewards_list();
  static const int kENickgodRewardsListFieldNumber = 1;
  inline const ::proto_ff::E_NickgodRewards& e_nickgodrewards_list(int index) const;
  inline ::proto_ff::E_NickgodRewards* mutable_e_nickgodrewards_list(int index);
  inline ::proto_ff::E_NickgodRewards* add_e_nickgodrewards_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_NickgodRewards >&
      e_nickgodrewards_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_NickgodRewards >*
      mutable_e_nickgodrewards_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_NickgodRewards)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_NickgodRewards > e_nickgodrewards_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fNickgod_2eproto();
  friend void protobuf_AssignDesc_E_5fNickgod_2eproto();
  friend void protobuf_ShutdownFile_E_5fNickgod_2eproto();

  void InitAsDefaultInstance();
  static Sheet_NickgodRewards* default_instance_;
};
// -------------------------------------------------------------------

class E_NickgodLattice : public ::google::protobuf::Message {
 public:
  E_NickgodLattice();
  virtual ~E_NickgodLattice();

  E_NickgodLattice(const E_NickgodLattice& from);

  inline E_NickgodLattice& operator=(const E_NickgodLattice& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_NickgodLattice& default_instance();

  void Swap(E_NickgodLattice* other);

  // implements Message ----------------------------------------------

  E_NickgodLattice* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_NickgodLattice& from);
  void MergeFrom(const E_NickgodLattice& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 m_id = 1;
  inline bool has_m_id() const;
  inline void clear_m_id();
  static const int kMIdFieldNumber = 1;
  inline ::google::protobuf::int32 m_id() const;
  inline void set_m_id(::google::protobuf::int32 value);

  // optional int32 m_itemId = 2;
  inline bool has_m_itemid() const;
  inline void clear_m_itemid();
  static const int kMItemIdFieldNumber = 2;
  inline ::google::protobuf::int32 m_itemid() const;
  inline void set_m_itemid(::google::protobuf::int32 value);

  // optional int32 m_itemNum = 3;
  inline bool has_m_itemnum() const;
  inline void clear_m_itemnum();
  static const int kMItemNumFieldNumber = 3;
  inline ::google::protobuf::int32 m_itemnum() const;
  inline void set_m_itemnum(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.E_NickgodLattice)
 private:
  inline void set_has_m_id();
  inline void clear_has_m_id();
  inline void set_has_m_itemid();
  inline void clear_has_m_itemid();
  inline void set_has_m_itemnum();
  inline void clear_has_m_itemnum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_id_;
  ::google::protobuf::int32 m_itemid_;
  ::google::protobuf::int32 m_itemnum_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fNickgod_2eproto();
  friend void protobuf_AssignDesc_E_5fNickgod_2eproto();
  friend void protobuf_ShutdownFile_E_5fNickgod_2eproto();

  void InitAsDefaultInstance();
  static E_NickgodLattice* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_NickgodLattice : public ::google::protobuf::Message {
 public:
  Sheet_NickgodLattice();
  virtual ~Sheet_NickgodLattice();

  Sheet_NickgodLattice(const Sheet_NickgodLattice& from);

  inline Sheet_NickgodLattice& operator=(const Sheet_NickgodLattice& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_NickgodLattice& default_instance();

  void Swap(Sheet_NickgodLattice* other);

  // implements Message ----------------------------------------------

  Sheet_NickgodLattice* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_NickgodLattice& from);
  void MergeFrom(const Sheet_NickgodLattice& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.E_NickgodLattice E_NickgodLattice_List = 1;
  inline int e_nickgodlattice_list_size() const;
  inline void clear_e_nickgodlattice_list();
  static const int kENickgodLatticeListFieldNumber = 1;
  inline const ::proto_ff::E_NickgodLattice& e_nickgodlattice_list(int index) const;
  inline ::proto_ff::E_NickgodLattice* mutable_e_nickgodlattice_list(int index);
  inline ::proto_ff::E_NickgodLattice* add_e_nickgodlattice_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_NickgodLattice >&
      e_nickgodlattice_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_NickgodLattice >*
      mutable_e_nickgodlattice_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_NickgodLattice)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_NickgodLattice > e_nickgodlattice_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fNickgod_2eproto();
  friend void protobuf_AssignDesc_E_5fNickgod_2eproto();
  friend void protobuf_ShutdownFile_E_5fNickgod_2eproto();

  void InitAsDefaultInstance();
  static Sheet_NickgodLattice* default_instance_;
};
// -------------------------------------------------------------------

class E_NickgodTreasuryItemDesc : public ::google::protobuf::Message {
 public:
  E_NickgodTreasuryItemDesc();
  virtual ~E_NickgodTreasuryItemDesc();

  E_NickgodTreasuryItemDesc(const E_NickgodTreasuryItemDesc& from);

  inline E_NickgodTreasuryItemDesc& operator=(const E_NickgodTreasuryItemDesc& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_NickgodTreasuryItemDesc& default_instance();

  void Swap(E_NickgodTreasuryItemDesc* other);

  // implements Message ----------------------------------------------

  E_NickgodTreasuryItemDesc* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_NickgodTreasuryItemDesc& from);
  void MergeFrom(const E_NickgodTreasuryItemDesc& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 m_show = 1;
  inline bool has_m_show() const;
  inline void clear_m_show();
  static const int kMShowFieldNumber = 1;
  inline ::google::protobuf::int32 m_show() const;
  inline void set_m_show(::google::protobuf::int32 value);

  // optional int32 m_rand = 2;
  inline bool has_m_rand() const;
  inline void clear_m_rand();
  static const int kMRandFieldNumber = 2;
  inline ::google::protobuf::int32 m_rand() const;
  inline void set_m_rand(::google::protobuf::int32 value);

  // optional int32 m_num = 3;
  inline bool has_m_num() const;
  inline void clear_m_num();
  static const int kMNumFieldNumber = 3;
  inline ::google::protobuf::int32 m_num() const;
  inline void set_m_num(::google::protobuf::int32 value);

  // optional int32 m_id = 4;
  inline bool has_m_id() const;
  inline void clear_m_id();
  static const int kMIdFieldNumber = 4;
  inline ::google::protobuf::int32 m_id() const;
  inline void set_m_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.E_NickgodTreasuryItemDesc)
 private:
  inline void set_has_m_show();
  inline void clear_has_m_show();
  inline void set_has_m_rand();
  inline void clear_has_m_rand();
  inline void set_has_m_num();
  inline void clear_has_m_num();
  inline void set_has_m_id();
  inline void clear_has_m_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_show_;
  ::google::protobuf::int32 m_rand_;
  ::google::protobuf::int32 m_num_;
  ::google::protobuf::int32 m_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fNickgod_2eproto();
  friend void protobuf_AssignDesc_E_5fNickgod_2eproto();
  friend void protobuf_ShutdownFile_E_5fNickgod_2eproto();

  void InitAsDefaultInstance();
  static E_NickgodTreasuryItemDesc* default_instance_;
};
// -------------------------------------------------------------------

class E_NickgodTreasury : public ::google::protobuf::Message {
 public:
  E_NickgodTreasury();
  virtual ~E_NickgodTreasury();

  E_NickgodTreasury(const E_NickgodTreasury& from);

  inline E_NickgodTreasury& operator=(const E_NickgodTreasury& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_NickgodTreasury& default_instance();

  void Swap(E_NickgodTreasury* other);

  // implements Message ----------------------------------------------

  E_NickgodTreasury* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_NickgodTreasury& from);
  void MergeFrom(const E_NickgodTreasury& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 m_id = 1;
  inline bool has_m_id() const;
  inline void clear_m_id();
  static const int kMIdFieldNumber = 1;
  inline ::google::protobuf::int32 m_id() const;
  inline void set_m_id(::google::protobuf::int32 value);

  // repeated .proto_ff.E_NickgodTreasuryItemDesc m_item = 2;
  inline int m_item_size() const;
  inline void clear_m_item();
  static const int kMItemFieldNumber = 2;
  inline const ::proto_ff::E_NickgodTreasuryItemDesc& m_item(int index) const;
  inline ::proto_ff::E_NickgodTreasuryItemDesc* mutable_m_item(int index);
  inline ::proto_ff::E_NickgodTreasuryItemDesc* add_m_item();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_NickgodTreasuryItemDesc >&
      m_item() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_NickgodTreasuryItemDesc >*
      mutable_m_item();

  // @@protoc_insertion_point(class_scope:proto_ff.E_NickgodTreasury)
 private:
  inline void set_has_m_id();
  inline void clear_has_m_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_NickgodTreasuryItemDesc > m_item_;
  ::google::protobuf::int32 m_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fNickgod_2eproto();
  friend void protobuf_AssignDesc_E_5fNickgod_2eproto();
  friend void protobuf_ShutdownFile_E_5fNickgod_2eproto();

  void InitAsDefaultInstance();
  static E_NickgodTreasury* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_NickgodTreasury : public ::google::protobuf::Message {
 public:
  Sheet_NickgodTreasury();
  virtual ~Sheet_NickgodTreasury();

  Sheet_NickgodTreasury(const Sheet_NickgodTreasury& from);

  inline Sheet_NickgodTreasury& operator=(const Sheet_NickgodTreasury& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_NickgodTreasury& default_instance();

  void Swap(Sheet_NickgodTreasury* other);

  // implements Message ----------------------------------------------

  Sheet_NickgodTreasury* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_NickgodTreasury& from);
  void MergeFrom(const Sheet_NickgodTreasury& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.E_NickgodTreasury E_NickgodTreasury_List = 1;
  inline int e_nickgodtreasury_list_size() const;
  inline void clear_e_nickgodtreasury_list();
  static const int kENickgodTreasuryListFieldNumber = 1;
  inline const ::proto_ff::E_NickgodTreasury& e_nickgodtreasury_list(int index) const;
  inline ::proto_ff::E_NickgodTreasury* mutable_e_nickgodtreasury_list(int index);
  inline ::proto_ff::E_NickgodTreasury* add_e_nickgodtreasury_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_NickgodTreasury >&
      e_nickgodtreasury_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_NickgodTreasury >*
      mutable_e_nickgodtreasury_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_NickgodTreasury)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_NickgodTreasury > e_nickgodtreasury_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fNickgod_2eproto();
  friend void protobuf_AssignDesc_E_5fNickgod_2eproto();
  friend void protobuf_ShutdownFile_E_5fNickgod_2eproto();

  void InitAsDefaultInstance();
  static Sheet_NickgodTreasury* default_instance_;
};
// -------------------------------------------------------------------

class E_NickgodPrivilegeRewardDesc : public ::google::protobuf::Message {
 public:
  E_NickgodPrivilegeRewardDesc();
  virtual ~E_NickgodPrivilegeRewardDesc();

  E_NickgodPrivilegeRewardDesc(const E_NickgodPrivilegeRewardDesc& from);

  inline E_NickgodPrivilegeRewardDesc& operator=(const E_NickgodPrivilegeRewardDesc& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_NickgodPrivilegeRewardDesc& default_instance();

  void Swap(E_NickgodPrivilegeRewardDesc* other);

  // implements Message ----------------------------------------------

  E_NickgodPrivilegeRewardDesc* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_NickgodPrivilegeRewardDesc& from);
  void MergeFrom(const E_NickgodPrivilegeRewardDesc& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 m_Num = 1;
  inline bool has_m_num() const;
  inline void clear_m_num();
  static const int kMNumFieldNumber = 1;
  inline ::google::protobuf::int32 m_num() const;
  inline void set_m_num(::google::protobuf::int32 value);

  // optional int64 m_ID = 2;
  inline bool has_m_id() const;
  inline void clear_m_id();
  static const int kMIDFieldNumber = 2;
  inline ::google::protobuf::int64 m_id() const;
  inline void set_m_id(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.E_NickgodPrivilegeRewardDesc)
 private:
  inline void set_has_m_num();
  inline void clear_has_m_num();
  inline void set_has_m_id();
  inline void clear_has_m_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 m_id_;
  ::google::protobuf::int32 m_num_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fNickgod_2eproto();
  friend void protobuf_AssignDesc_E_5fNickgod_2eproto();
  friend void protobuf_ShutdownFile_E_5fNickgod_2eproto();

  void InitAsDefaultInstance();
  static E_NickgodPrivilegeRewardDesc* default_instance_;
};
// -------------------------------------------------------------------

class E_NickgodPrivilege : public ::google::protobuf::Message {
 public:
  E_NickgodPrivilege();
  virtual ~E_NickgodPrivilege();

  E_NickgodPrivilege(const E_NickgodPrivilege& from);

  inline E_NickgodPrivilege& operator=(const E_NickgodPrivilege& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_NickgodPrivilege& default_instance();

  void Swap(E_NickgodPrivilege* other);

  // implements Message ----------------------------------------------

  E_NickgodPrivilege* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_NickgodPrivilege& from);
  void MergeFrom(const E_NickgodPrivilege& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 m_id = 1;
  inline bool has_m_id() const;
  inline void clear_m_id();
  static const int kMIdFieldNumber = 1;
  inline ::google::protobuf::int32 m_id() const;
  inline void set_m_id(::google::protobuf::int32 value);

  // optional int32 m_condition = 2;
  inline bool has_m_condition() const;
  inline void clear_m_condition();
  static const int kMConditionFieldNumber = 2;
  inline ::google::protobuf::int32 m_condition() const;
  inline void set_m_condition(::google::protobuf::int32 value);

  // optional int32 m_param = 3;
  inline bool has_m_param() const;
  inline void clear_m_param();
  static const int kMParamFieldNumber = 3;
  inline ::google::protobuf::int32 m_param() const;
  inline void set_m_param(::google::protobuf::int32 value);

  // optional int32 m_open = 4;
  inline bool has_m_open() const;
  inline void clear_m_open();
  static const int kMOpenFieldNumber = 4;
  inline ::google::protobuf::int32 m_open() const;
  inline void set_m_open(::google::protobuf::int32 value);

  // repeated .proto_ff.E_NickgodPrivilegeRewardDesc m_reward = 5;
  inline int m_reward_size() const;
  inline void clear_m_reward();
  static const int kMRewardFieldNumber = 5;
  inline const ::proto_ff::E_NickgodPrivilegeRewardDesc& m_reward(int index) const;
  inline ::proto_ff::E_NickgodPrivilegeRewardDesc* mutable_m_reward(int index);
  inline ::proto_ff::E_NickgodPrivilegeRewardDesc* add_m_reward();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_NickgodPrivilegeRewardDesc >&
      m_reward() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_NickgodPrivilegeRewardDesc >*
      mutable_m_reward();

  // @@protoc_insertion_point(class_scope:proto_ff.E_NickgodPrivilege)
 private:
  inline void set_has_m_id();
  inline void clear_has_m_id();
  inline void set_has_m_condition();
  inline void clear_has_m_condition();
  inline void set_has_m_param();
  inline void clear_has_m_param();
  inline void set_has_m_open();
  inline void clear_has_m_open();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_id_;
  ::google::protobuf::int32 m_condition_;
  ::google::protobuf::int32 m_param_;
  ::google::protobuf::int32 m_open_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_NickgodPrivilegeRewardDesc > m_reward_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fNickgod_2eproto();
  friend void protobuf_AssignDesc_E_5fNickgod_2eproto();
  friend void protobuf_ShutdownFile_E_5fNickgod_2eproto();

  void InitAsDefaultInstance();
  static E_NickgodPrivilege* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_NickgodPrivilege : public ::google::protobuf::Message {
 public:
  Sheet_NickgodPrivilege();
  virtual ~Sheet_NickgodPrivilege();

  Sheet_NickgodPrivilege(const Sheet_NickgodPrivilege& from);

  inline Sheet_NickgodPrivilege& operator=(const Sheet_NickgodPrivilege& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_NickgodPrivilege& default_instance();

  void Swap(Sheet_NickgodPrivilege* other);

  // implements Message ----------------------------------------------

  Sheet_NickgodPrivilege* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_NickgodPrivilege& from);
  void MergeFrom(const Sheet_NickgodPrivilege& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.E_NickgodPrivilege E_NickgodPrivilege_List = 1;
  inline int e_nickgodprivilege_list_size() const;
  inline void clear_e_nickgodprivilege_list();
  static const int kENickgodPrivilegeListFieldNumber = 1;
  inline const ::proto_ff::E_NickgodPrivilege& e_nickgodprivilege_list(int index) const;
  inline ::proto_ff::E_NickgodPrivilege* mutable_e_nickgodprivilege_list(int index);
  inline ::proto_ff::E_NickgodPrivilege* add_e_nickgodprivilege_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_NickgodPrivilege >&
      e_nickgodprivilege_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_NickgodPrivilege >*
      mutable_e_nickgodprivilege_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_NickgodPrivilege)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_NickgodPrivilege > e_nickgodprivilege_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fNickgod_2eproto();
  friend void protobuf_AssignDesc_E_5fNickgod_2eproto();
  friend void protobuf_ShutdownFile_E_5fNickgod_2eproto();

  void InitAsDefaultInstance();
  static Sheet_NickgodPrivilege* default_instance_;
};
// -------------------------------------------------------------------

class E_NickgodSaleItemDesc : public ::google::protobuf::Message {
 public:
  E_NickgodSaleItemDesc();
  virtual ~E_NickgodSaleItemDesc();

  E_NickgodSaleItemDesc(const E_NickgodSaleItemDesc& from);

  inline E_NickgodSaleItemDesc& operator=(const E_NickgodSaleItemDesc& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_NickgodSaleItemDesc& default_instance();

  void Swap(E_NickgodSaleItemDesc* other);

  // implements Message ----------------------------------------------

  E_NickgodSaleItemDesc* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_NickgodSaleItemDesc& from);
  void MergeFrom(const E_NickgodSaleItemDesc& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 m_Num = 1;
  inline bool has_m_num() const;
  inline void clear_m_num();
  static const int kMNumFieldNumber = 1;
  inline ::google::protobuf::int32 m_num() const;
  inline void set_m_num(::google::protobuf::int32 value);

  // optional int64 m_ID = 2;
  inline bool has_m_id() const;
  inline void clear_m_id();
  static const int kMIDFieldNumber = 2;
  inline ::google::protobuf::int64 m_id() const;
  inline void set_m_id(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.E_NickgodSaleItemDesc)
 private:
  inline void set_has_m_num();
  inline void clear_has_m_num();
  inline void set_has_m_id();
  inline void clear_has_m_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 m_id_;
  ::google::protobuf::int32 m_num_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fNickgod_2eproto();
  friend void protobuf_AssignDesc_E_5fNickgod_2eproto();
  friend void protobuf_ShutdownFile_E_5fNickgod_2eproto();

  void InitAsDefaultInstance();
  static E_NickgodSaleItemDesc* default_instance_;
};
// -------------------------------------------------------------------

class E_NickgodSale : public ::google::protobuf::Message {
 public:
  E_NickgodSale();
  virtual ~E_NickgodSale();

  E_NickgodSale(const E_NickgodSale& from);

  inline E_NickgodSale& operator=(const E_NickgodSale& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_NickgodSale& default_instance();

  void Swap(E_NickgodSale* other);

  // implements Message ----------------------------------------------

  E_NickgodSale* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_NickgodSale& from);
  void MergeFrom(const E_NickgodSale& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 m_id = 1;
  inline bool has_m_id() const;
  inline void clear_m_id();
  static const int kMIdFieldNumber = 1;
  inline ::google::protobuf::int32 m_id() const;
  inline void set_m_id(::google::protobuf::int32 value);

  // optional string m_discount = 2;
  inline bool has_m_discount() const;
  inline void clear_m_discount();
  static const int kMDiscountFieldNumber = 2;
  inline const ::std::string& m_discount() const;
  inline void set_m_discount(const ::std::string& value);
  inline void set_m_discount(const char* value);
  inline void set_m_discount(const char* value, size_t size);
  inline ::std::string* mutable_m_discount();
  inline ::std::string* release_m_discount();
  inline void set_allocated_m_discount(::std::string* m_discount);

  // optional int32 m_money = 3;
  inline bool has_m_money() const;
  inline void clear_m_money();
  static const int kMMoneyFieldNumber = 3;
  inline ::google::protobuf::int32 m_money() const;
  inline void set_m_money(::google::protobuf::int32 value);

  // optional int32 m_price = 4;
  inline bool has_m_price() const;
  inline void clear_m_price();
  static const int kMPriceFieldNumber = 4;
  inline ::google::protobuf::int32 m_price() const;
  inline void set_m_price(::google::protobuf::int32 value);

  // optional int32 m_buyLimit = 5;
  inline bool has_m_buylimit() const;
  inline void clear_m_buylimit();
  static const int kMBuyLimitFieldNumber = 5;
  inline ::google::protobuf::int32 m_buylimit() const;
  inline void set_m_buylimit(::google::protobuf::int32 value);

  // repeated .proto_ff.E_NickgodSaleItemDesc m_item = 6;
  inline int m_item_size() const;
  inline void clear_m_item();
  static const int kMItemFieldNumber = 6;
  inline const ::proto_ff::E_NickgodSaleItemDesc& m_item(int index) const;
  inline ::proto_ff::E_NickgodSaleItemDesc* mutable_m_item(int index);
  inline ::proto_ff::E_NickgodSaleItemDesc* add_m_item();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_NickgodSaleItemDesc >&
      m_item() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_NickgodSaleItemDesc >*
      mutable_m_item();

  // @@protoc_insertion_point(class_scope:proto_ff.E_NickgodSale)
 private:
  inline void set_has_m_id();
  inline void clear_has_m_id();
  inline void set_has_m_discount();
  inline void clear_has_m_discount();
  inline void set_has_m_money();
  inline void clear_has_m_money();
  inline void set_has_m_price();
  inline void clear_has_m_price();
  inline void set_has_m_buylimit();
  inline void clear_has_m_buylimit();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* m_discount_;
  ::google::protobuf::int32 m_id_;
  ::google::protobuf::int32 m_money_;
  ::google::protobuf::int32 m_price_;
  ::google::protobuf::int32 m_buylimit_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_NickgodSaleItemDesc > m_item_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fNickgod_2eproto();
  friend void protobuf_AssignDesc_E_5fNickgod_2eproto();
  friend void protobuf_ShutdownFile_E_5fNickgod_2eproto();

  void InitAsDefaultInstance();
  static E_NickgodSale* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_NickgodSale : public ::google::protobuf::Message {
 public:
  Sheet_NickgodSale();
  virtual ~Sheet_NickgodSale();

  Sheet_NickgodSale(const Sheet_NickgodSale& from);

  inline Sheet_NickgodSale& operator=(const Sheet_NickgodSale& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_NickgodSale& default_instance();

  void Swap(Sheet_NickgodSale* other);

  // implements Message ----------------------------------------------

  Sheet_NickgodSale* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_NickgodSale& from);
  void MergeFrom(const Sheet_NickgodSale& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.E_NickgodSale E_NickgodSale_List = 1;
  inline int e_nickgodsale_list_size() const;
  inline void clear_e_nickgodsale_list();
  static const int kENickgodSaleListFieldNumber = 1;
  inline const ::proto_ff::E_NickgodSale& e_nickgodsale_list(int index) const;
  inline ::proto_ff::E_NickgodSale* mutable_e_nickgodsale_list(int index);
  inline ::proto_ff::E_NickgodSale* add_e_nickgodsale_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_NickgodSale >&
      e_nickgodsale_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_NickgodSale >*
      mutable_e_nickgodsale_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_NickgodSale)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_NickgodSale > e_nickgodsale_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fNickgod_2eproto();
  friend void protobuf_AssignDesc_E_5fNickgod_2eproto();
  friend void protobuf_ShutdownFile_E_5fNickgod_2eproto();

  void InitAsDefaultInstance();
  static Sheet_NickgodSale* default_instance_;
};
// -------------------------------------------------------------------

class E_NickgodChargeupRewardDesc : public ::google::protobuf::Message {
 public:
  E_NickgodChargeupRewardDesc();
  virtual ~E_NickgodChargeupRewardDesc();

  E_NickgodChargeupRewardDesc(const E_NickgodChargeupRewardDesc& from);

  inline E_NickgodChargeupRewardDesc& operator=(const E_NickgodChargeupRewardDesc& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_NickgodChargeupRewardDesc& default_instance();

  void Swap(E_NickgodChargeupRewardDesc* other);

  // implements Message ----------------------------------------------

  E_NickgodChargeupRewardDesc* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_NickgodChargeupRewardDesc& from);
  void MergeFrom(const E_NickgodChargeupRewardDesc& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 m_Num = 1;
  inline bool has_m_num() const;
  inline void clear_m_num();
  static const int kMNumFieldNumber = 1;
  inline ::google::protobuf::int32 m_num() const;
  inline void set_m_num(::google::protobuf::int32 value);

  // optional int64 m_ID = 2;
  inline bool has_m_id() const;
  inline void clear_m_id();
  static const int kMIDFieldNumber = 2;
  inline ::google::protobuf::int64 m_id() const;
  inline void set_m_id(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.E_NickgodChargeupRewardDesc)
 private:
  inline void set_has_m_num();
  inline void clear_has_m_num();
  inline void set_has_m_id();
  inline void clear_has_m_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 m_id_;
  ::google::protobuf::int32 m_num_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fNickgod_2eproto();
  friend void protobuf_AssignDesc_E_5fNickgod_2eproto();
  friend void protobuf_ShutdownFile_E_5fNickgod_2eproto();

  void InitAsDefaultInstance();
  static E_NickgodChargeupRewardDesc* default_instance_;
};
// -------------------------------------------------------------------

class E_NickgodChargeup : public ::google::protobuf::Message {
 public:
  E_NickgodChargeup();
  virtual ~E_NickgodChargeup();

  E_NickgodChargeup(const E_NickgodChargeup& from);

  inline E_NickgodChargeup& operator=(const E_NickgodChargeup& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_NickgodChargeup& default_instance();

  void Swap(E_NickgodChargeup* other);

  // implements Message ----------------------------------------------

  E_NickgodChargeup* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_NickgodChargeup& from);
  void MergeFrom(const E_NickgodChargeup& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 m_id = 1;
  inline bool has_m_id() const;
  inline void clear_m_id();
  static const int kMIdFieldNumber = 1;
  inline ::google::protobuf::int32 m_id() const;
  inline void set_m_id(::google::protobuf::int32 value);

  // optional int32 m_pay = 2;
  inline bool has_m_pay() const;
  inline void clear_m_pay();
  static const int kMPayFieldNumber = 2;
  inline ::google::protobuf::int32 m_pay() const;
  inline void set_m_pay(::google::protobuf::int32 value);

  // repeated .proto_ff.E_NickgodChargeupRewardDesc m_reward = 3;
  inline int m_reward_size() const;
  inline void clear_m_reward();
  static const int kMRewardFieldNumber = 3;
  inline const ::proto_ff::E_NickgodChargeupRewardDesc& m_reward(int index) const;
  inline ::proto_ff::E_NickgodChargeupRewardDesc* mutable_m_reward(int index);
  inline ::proto_ff::E_NickgodChargeupRewardDesc* add_m_reward();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_NickgodChargeupRewardDesc >&
      m_reward() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_NickgodChargeupRewardDesc >*
      mutable_m_reward();

  // @@protoc_insertion_point(class_scope:proto_ff.E_NickgodChargeup)
 private:
  inline void set_has_m_id();
  inline void clear_has_m_id();
  inline void set_has_m_pay();
  inline void clear_has_m_pay();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_id_;
  ::google::protobuf::int32 m_pay_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_NickgodChargeupRewardDesc > m_reward_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fNickgod_2eproto();
  friend void protobuf_AssignDesc_E_5fNickgod_2eproto();
  friend void protobuf_ShutdownFile_E_5fNickgod_2eproto();

  void InitAsDefaultInstance();
  static E_NickgodChargeup* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_NickgodChargeup : public ::google::protobuf::Message {
 public:
  Sheet_NickgodChargeup();
  virtual ~Sheet_NickgodChargeup();

  Sheet_NickgodChargeup(const Sheet_NickgodChargeup& from);

  inline Sheet_NickgodChargeup& operator=(const Sheet_NickgodChargeup& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_NickgodChargeup& default_instance();

  void Swap(Sheet_NickgodChargeup* other);

  // implements Message ----------------------------------------------

  Sheet_NickgodChargeup* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_NickgodChargeup& from);
  void MergeFrom(const Sheet_NickgodChargeup& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.E_NickgodChargeup E_NickgodChargeup_List = 1;
  inline int e_nickgodchargeup_list_size() const;
  inline void clear_e_nickgodchargeup_list();
  static const int kENickgodChargeupListFieldNumber = 1;
  inline const ::proto_ff::E_NickgodChargeup& e_nickgodchargeup_list(int index) const;
  inline ::proto_ff::E_NickgodChargeup* mutable_e_nickgodchargeup_list(int index);
  inline ::proto_ff::E_NickgodChargeup* add_e_nickgodchargeup_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_NickgodChargeup >&
      e_nickgodchargeup_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_NickgodChargeup >*
      mutable_e_nickgodchargeup_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_NickgodChargeup)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_NickgodChargeup > e_nickgodchargeup_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fNickgod_2eproto();
  friend void protobuf_AssignDesc_E_5fNickgod_2eproto();
  friend void protobuf_ShutdownFile_E_5fNickgod_2eproto();

  void InitAsDefaultInstance();
  static Sheet_NickgodChargeup* default_instance_;
};
// ===================================================================


// ===================================================================

// E_NickgodConstant

// optional int64 m_id = 1;
inline bool E_NickgodConstant::has_m_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_NickgodConstant::set_has_m_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_NickgodConstant::clear_has_m_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_NickgodConstant::clear_m_id() {
  m_id_ = GOOGLE_LONGLONG(0);
  clear_has_m_id();
}
inline ::google::protobuf::int64 E_NickgodConstant::m_id() const {
  return m_id_;
}
inline void E_NickgodConstant::set_m_id(::google::protobuf::int64 value) {
  set_has_m_id();
  m_id_ = value;
}

// optional int32 m_skill = 2;
inline bool E_NickgodConstant::has_m_skill() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_NickgodConstant::set_has_m_skill() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_NickgodConstant::clear_has_m_skill() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_NickgodConstant::clear_m_skill() {
  m_skill_ = 0;
  clear_has_m_skill();
}
inline ::google::protobuf::int32 E_NickgodConstant::m_skill() const {
  return m_skill_;
}
inline void E_NickgodConstant::set_m_skill(::google::protobuf::int32 value) {
  set_has_m_skill();
  m_skill_ = value;
}

// optional int32 m_time = 3;
inline bool E_NickgodConstant::has_m_time() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void E_NickgodConstant::set_has_m_time() {
  _has_bits_[0] |= 0x00000004u;
}
inline void E_NickgodConstant::clear_has_m_time() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void E_NickgodConstant::clear_m_time() {
  m_time_ = 0;
  clear_has_m_time();
}
inline ::google::protobuf::int32 E_NickgodConstant::m_time() const {
  return m_time_;
}
inline void E_NickgodConstant::set_m_time(::google::protobuf::int32 value) {
  set_has_m_time();
  m_time_ = value;
}

// optional int32 m_maxUser = 4;
inline bool E_NickgodConstant::has_m_maxuser() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void E_NickgodConstant::set_has_m_maxuser() {
  _has_bits_[0] |= 0x00000008u;
}
inline void E_NickgodConstant::clear_has_m_maxuser() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void E_NickgodConstant::clear_m_maxuser() {
  m_maxuser_ = 0;
  clear_has_m_maxuser();
}
inline ::google::protobuf::int32 E_NickgodConstant::m_maxuser() const {
  return m_maxuser_;
}
inline void E_NickgodConstant::set_m_maxuser(::google::protobuf::int32 value) {
  set_has_m_maxuser();
  m_maxuser_ = value;
}

// optional int32 m_floorsMax = 5;
inline bool E_NickgodConstant::has_m_floorsmax() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void E_NickgodConstant::set_has_m_floorsmax() {
  _has_bits_[0] |= 0x00000010u;
}
inline void E_NickgodConstant::clear_has_m_floorsmax() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void E_NickgodConstant::clear_m_floorsmax() {
  m_floorsmax_ = 0;
  clear_has_m_floorsmax();
}
inline ::google::protobuf::int32 E_NickgodConstant::m_floorsmax() const {
  return m_floorsmax_;
}
inline void E_NickgodConstant::set_m_floorsmax(::google::protobuf::int32 value) {
  set_has_m_floorsmax();
  m_floorsmax_ = value;
}

// optional int32 m_lattice = 6;
inline bool E_NickgodConstant::has_m_lattice() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void E_NickgodConstant::set_has_m_lattice() {
  _has_bits_[0] |= 0x00000020u;
}
inline void E_NickgodConstant::clear_has_m_lattice() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void E_NickgodConstant::clear_m_lattice() {
  m_lattice_ = 0;
  clear_has_m_lattice();
}
inline ::google::protobuf::int32 E_NickgodConstant::m_lattice() const {
  return m_lattice_;
}
inline void E_NickgodConstant::set_m_lattice(::google::protobuf::int32 value) {
  set_has_m_lattice();
  m_lattice_ = value;
}

// optional int32 m_repairItem = 7;
inline bool E_NickgodConstant::has_m_repairitem() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void E_NickgodConstant::set_has_m_repairitem() {
  _has_bits_[0] |= 0x00000040u;
}
inline void E_NickgodConstant::clear_has_m_repairitem() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void E_NickgodConstant::clear_m_repairitem() {
  m_repairitem_ = 0;
  clear_has_m_repairitem();
}
inline ::google::protobuf::int32 E_NickgodConstant::m_repairitem() const {
  return m_repairitem_;
}
inline void E_NickgodConstant::set_m_repairitem(::google::protobuf::int32 value) {
  set_has_m_repairitem();
  m_repairitem_ = value;
}

// optional int32 m_repairNum = 8;
inline bool E_NickgodConstant::has_m_repairnum() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void E_NickgodConstant::set_has_m_repairnum() {
  _has_bits_[0] |= 0x00000080u;
}
inline void E_NickgodConstant::clear_has_m_repairnum() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void E_NickgodConstant::clear_m_repairnum() {
  m_repairnum_ = 0;
  clear_has_m_repairnum();
}
inline ::google::protobuf::int32 E_NickgodConstant::m_repairnum() const {
  return m_repairnum_;
}
inline void E_NickgodConstant::set_m_repairnum(::google::protobuf::int32 value) {
  set_has_m_repairnum();
  m_repairnum_ = value;
}

// optional int32 m_openItem = 9;
inline bool E_NickgodConstant::has_m_openitem() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void E_NickgodConstant::set_has_m_openitem() {
  _has_bits_[0] |= 0x00000100u;
}
inline void E_NickgodConstant::clear_has_m_openitem() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void E_NickgodConstant::clear_m_openitem() {
  m_openitem_ = 0;
  clear_has_m_openitem();
}
inline ::google::protobuf::int32 E_NickgodConstant::m_openitem() const {
  return m_openitem_;
}
inline void E_NickgodConstant::set_m_openitem(::google::protobuf::int32 value) {
  set_has_m_openitem();
  m_openitem_ = value;
}

// optional int32 m_openNum = 10;
inline bool E_NickgodConstant::has_m_opennum() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void E_NickgodConstant::set_has_m_opennum() {
  _has_bits_[0] |= 0x00000200u;
}
inline void E_NickgodConstant::clear_has_m_opennum() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void E_NickgodConstant::clear_m_opennum() {
  m_opennum_ = 0;
  clear_has_m_opennum();
}
inline ::google::protobuf::int32 E_NickgodConstant::m_opennum() const {
  return m_opennum_;
}
inline void E_NickgodConstant::set_m_opennum(::google::protobuf::int32 value) {
  set_has_m_opennum();
  m_opennum_ = value;
}

// optional string m_week = 11;
inline bool E_NickgodConstant::has_m_week() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void E_NickgodConstant::set_has_m_week() {
  _has_bits_[0] |= 0x00000400u;
}
inline void E_NickgodConstant::clear_has_m_week() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void E_NickgodConstant::clear_m_week() {
  if (m_week_ != &::google::protobuf::internal::kEmptyString) {
    m_week_->clear();
  }
  clear_has_m_week();
}
inline const ::std::string& E_NickgodConstant::m_week() const {
  return *m_week_;
}
inline void E_NickgodConstant::set_m_week(const ::std::string& value) {
  set_has_m_week();
  if (m_week_ == &::google::protobuf::internal::kEmptyString) {
    m_week_ = new ::std::string;
  }
  m_week_->assign(value);
}
inline void E_NickgodConstant::set_m_week(const char* value) {
  set_has_m_week();
  if (m_week_ == &::google::protobuf::internal::kEmptyString) {
    m_week_ = new ::std::string;
  }
  m_week_->assign(value);
}
inline void E_NickgodConstant::set_m_week(const char* value, size_t size) {
  set_has_m_week();
  if (m_week_ == &::google::protobuf::internal::kEmptyString) {
    m_week_ = new ::std::string;
  }
  m_week_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* E_NickgodConstant::mutable_m_week() {
  set_has_m_week();
  if (m_week_ == &::google::protobuf::internal::kEmptyString) {
    m_week_ = new ::std::string;
  }
  return m_week_;
}
inline ::std::string* E_NickgodConstant::release_m_week() {
  clear_has_m_week();
  if (m_week_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = m_week_;
    m_week_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void E_NickgodConstant::set_allocated_m_week(::std::string* m_week) {
  if (m_week_ != &::google::protobuf::internal::kEmptyString) {
    delete m_week_;
  }
  if (m_week) {
    set_has_m_week();
    m_week_ = m_week;
  } else {
    clear_has_m_week();
    m_week_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 m_opentime = 12;
inline bool E_NickgodConstant::has_m_opentime() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void E_NickgodConstant::set_has_m_opentime() {
  _has_bits_[0] |= 0x00000800u;
}
inline void E_NickgodConstant::clear_has_m_opentime() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void E_NickgodConstant::clear_m_opentime() {
  m_opentime_ = 0;
  clear_has_m_opentime();
}
inline ::google::protobuf::int32 E_NickgodConstant::m_opentime() const {
  return m_opentime_;
}
inline void E_NickgodConstant::set_m_opentime(::google::protobuf::int32 value) {
  set_has_m_opentime();
  m_opentime_ = value;
}

// optional int32 m_endtime = 13;
inline bool E_NickgodConstant::has_m_endtime() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void E_NickgodConstant::set_has_m_endtime() {
  _has_bits_[0] |= 0x00001000u;
}
inline void E_NickgodConstant::clear_has_m_endtime() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void E_NickgodConstant::clear_m_endtime() {
  m_endtime_ = 0;
  clear_has_m_endtime();
}
inline ::google::protobuf::int32 E_NickgodConstant::m_endtime() const {
  return m_endtime_;
}
inline void E_NickgodConstant::set_m_endtime(::google::protobuf::int32 value) {
  set_has_m_endtime();
  m_endtime_ = value;
}

// optional int32 m_logMax = 14;
inline bool E_NickgodConstant::has_m_logmax() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void E_NickgodConstant::set_has_m_logmax() {
  _has_bits_[0] |= 0x00002000u;
}
inline void E_NickgodConstant::clear_has_m_logmax() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void E_NickgodConstant::clear_m_logmax() {
  m_logmax_ = 0;
  clear_has_m_logmax();
}
inline ::google::protobuf::int32 E_NickgodConstant::m_logmax() const {
  return m_logmax_;
}
inline void E_NickgodConstant::set_m_logmax(::google::protobuf::int32 value) {
  set_has_m_logmax();
  m_logmax_ = value;
}

// optional int32 m_readyMap = 15;
inline bool E_NickgodConstant::has_m_readymap() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void E_NickgodConstant::set_has_m_readymap() {
  _has_bits_[0] |= 0x00004000u;
}
inline void E_NickgodConstant::clear_has_m_readymap() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void E_NickgodConstant::clear_m_readymap() {
  m_readymap_ = 0;
  clear_has_m_readymap();
}
inline ::google::protobuf::int32 E_NickgodConstant::m_readymap() const {
  return m_readymap_;
}
inline void E_NickgodConstant::set_m_readymap(::google::protobuf::int32 value) {
  set_has_m_readymap();
  m_readymap_ = value;
}

// optional int32 m_readyPiont = 16;
inline bool E_NickgodConstant::has_m_readypiont() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void E_NickgodConstant::set_has_m_readypiont() {
  _has_bits_[0] |= 0x00008000u;
}
inline void E_NickgodConstant::clear_has_m_readypiont() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void E_NickgodConstant::clear_m_readypiont() {
  m_readypiont_ = 0;
  clear_has_m_readypiont();
}
inline ::google::protobuf::int32 E_NickgodConstant::m_readypiont() const {
  return m_readypiont_;
}
inline void E_NickgodConstant::set_m_readypiont(::google::protobuf::int32 value) {
  set_has_m_readypiont();
  m_readypiont_ = value;
}

// optional int32 m_actId = 17;
inline bool E_NickgodConstant::has_m_actid() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void E_NickgodConstant::set_has_m_actid() {
  _has_bits_[0] |= 0x00010000u;
}
inline void E_NickgodConstant::clear_has_m_actid() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void E_NickgodConstant::clear_m_actid() {
  m_actid_ = 0;
  clear_has_m_actid();
}
inline ::google::protobuf::int32 E_NickgodConstant::m_actid() const {
  return m_actid_;
}
inline void E_NickgodConstant::set_m_actid(::google::protobuf::int32 value) {
  set_has_m_actid();
  m_actid_ = value;
}

// -------------------------------------------------------------------

// Sheet_NickgodConstant

// repeated .proto_ff.E_NickgodConstant E_NickgodConstant_List = 1;
inline int Sheet_NickgodConstant::e_nickgodconstant_list_size() const {
  return e_nickgodconstant_list_.size();
}
inline void Sheet_NickgodConstant::clear_e_nickgodconstant_list() {
  e_nickgodconstant_list_.Clear();
}
inline const ::proto_ff::E_NickgodConstant& Sheet_NickgodConstant::e_nickgodconstant_list(int index) const {
  return e_nickgodconstant_list_.Get(index);
}
inline ::proto_ff::E_NickgodConstant* Sheet_NickgodConstant::mutable_e_nickgodconstant_list(int index) {
  return e_nickgodconstant_list_.Mutable(index);
}
inline ::proto_ff::E_NickgodConstant* Sheet_NickgodConstant::add_e_nickgodconstant_list() {
  return e_nickgodconstant_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_NickgodConstant >&
Sheet_NickgodConstant::e_nickgodconstant_list() const {
  return e_nickgodconstant_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_NickgodConstant >*
Sheet_NickgodConstant::mutable_e_nickgodconstant_list() {
  return &e_nickgodconstant_list_;
}

// -------------------------------------------------------------------

// E_NickgodName

// optional int32 m_id = 1;
inline bool E_NickgodName::has_m_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_NickgodName::set_has_m_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_NickgodName::clear_has_m_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_NickgodName::clear_m_id() {
  m_id_ = 0;
  clear_has_m_id();
}
inline ::google::protobuf::int32 E_NickgodName::m_id() const {
  return m_id_;
}
inline void E_NickgodName::set_m_id(::google::protobuf::int32 value) {
  set_has_m_id();
  m_id_ = value;
}

// optional string m_name = 2;
inline bool E_NickgodName::has_m_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_NickgodName::set_has_m_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_NickgodName::clear_has_m_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_NickgodName::clear_m_name() {
  if (m_name_ != &::google::protobuf::internal::kEmptyString) {
    m_name_->clear();
  }
  clear_has_m_name();
}
inline const ::std::string& E_NickgodName::m_name() const {
  return *m_name_;
}
inline void E_NickgodName::set_m_name(const ::std::string& value) {
  set_has_m_name();
  if (m_name_ == &::google::protobuf::internal::kEmptyString) {
    m_name_ = new ::std::string;
  }
  m_name_->assign(value);
}
inline void E_NickgodName::set_m_name(const char* value) {
  set_has_m_name();
  if (m_name_ == &::google::protobuf::internal::kEmptyString) {
    m_name_ = new ::std::string;
  }
  m_name_->assign(value);
}
inline void E_NickgodName::set_m_name(const char* value, size_t size) {
  set_has_m_name();
  if (m_name_ == &::google::protobuf::internal::kEmptyString) {
    m_name_ = new ::std::string;
  }
  m_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* E_NickgodName::mutable_m_name() {
  set_has_m_name();
  if (m_name_ == &::google::protobuf::internal::kEmptyString) {
    m_name_ = new ::std::string;
  }
  return m_name_;
}
inline ::std::string* E_NickgodName::release_m_name() {
  clear_has_m_name();
  if (m_name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = m_name_;
    m_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void E_NickgodName::set_allocated_m_name(::std::string* m_name) {
  if (m_name_ != &::google::protobuf::internal::kEmptyString) {
    delete m_name_;
  }
  if (m_name) {
    set_has_m_name();
    m_name_ = m_name;
  } else {
    clear_has_m_name();
    m_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// Sheet_NickgodName

// repeated .proto_ff.E_NickgodName E_NickgodName_List = 1;
inline int Sheet_NickgodName::e_nickgodname_list_size() const {
  return e_nickgodname_list_.size();
}
inline void Sheet_NickgodName::clear_e_nickgodname_list() {
  e_nickgodname_list_.Clear();
}
inline const ::proto_ff::E_NickgodName& Sheet_NickgodName::e_nickgodname_list(int index) const {
  return e_nickgodname_list_.Get(index);
}
inline ::proto_ff::E_NickgodName* Sheet_NickgodName::mutable_e_nickgodname_list(int index) {
  return e_nickgodname_list_.Mutable(index);
}
inline ::proto_ff::E_NickgodName* Sheet_NickgodName::add_e_nickgodname_list() {
  return e_nickgodname_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_NickgodName >&
Sheet_NickgodName::e_nickgodname_list() const {
  return e_nickgodname_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_NickgodName >*
Sheet_NickgodName::mutable_e_nickgodname_list() {
  return &e_nickgodname_list_;
}

// -------------------------------------------------------------------

// E_NickgodStageMosDesc

// optional int32 m_id = 1;
inline bool E_NickgodStageMosDesc::has_m_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_NickgodStageMosDesc::set_has_m_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_NickgodStageMosDesc::clear_has_m_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_NickgodStageMosDesc::clear_m_id() {
  m_id_ = 0;
  clear_has_m_id();
}
inline ::google::protobuf::int32 E_NickgodStageMosDesc::m_id() const {
  return m_id_;
}
inline void E_NickgodStageMosDesc::set_m_id(::google::protobuf::int32 value) {
  set_has_m_id();
  m_id_ = value;
}

// optional int32 m_point = 2;
inline bool E_NickgodStageMosDesc::has_m_point() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_NickgodStageMosDesc::set_has_m_point() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_NickgodStageMosDesc::clear_has_m_point() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_NickgodStageMosDesc::clear_m_point() {
  m_point_ = 0;
  clear_has_m_point();
}
inline ::google::protobuf::int32 E_NickgodStageMosDesc::m_point() const {
  return m_point_;
}
inline void E_NickgodStageMosDesc::set_m_point(::google::protobuf::int32 value) {
  set_has_m_point();
  m_point_ = value;
}

// -------------------------------------------------------------------

// E_NickgodStageBossDesc

// optional string m_dropPreview = 1;
inline bool E_NickgodStageBossDesc::has_m_droppreview() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_NickgodStageBossDesc::set_has_m_droppreview() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_NickgodStageBossDesc::clear_has_m_droppreview() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_NickgodStageBossDesc::clear_m_droppreview() {
  if (m_droppreview_ != &::google::protobuf::internal::kEmptyString) {
    m_droppreview_->clear();
  }
  clear_has_m_droppreview();
}
inline const ::std::string& E_NickgodStageBossDesc::m_droppreview() const {
  return *m_droppreview_;
}
inline void E_NickgodStageBossDesc::set_m_droppreview(const ::std::string& value) {
  set_has_m_droppreview();
  if (m_droppreview_ == &::google::protobuf::internal::kEmptyString) {
    m_droppreview_ = new ::std::string;
  }
  m_droppreview_->assign(value);
}
inline void E_NickgodStageBossDesc::set_m_droppreview(const char* value) {
  set_has_m_droppreview();
  if (m_droppreview_ == &::google::protobuf::internal::kEmptyString) {
    m_droppreview_ = new ::std::string;
  }
  m_droppreview_->assign(value);
}
inline void E_NickgodStageBossDesc::set_m_droppreview(const char* value, size_t size) {
  set_has_m_droppreview();
  if (m_droppreview_ == &::google::protobuf::internal::kEmptyString) {
    m_droppreview_ = new ::std::string;
  }
  m_droppreview_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* E_NickgodStageBossDesc::mutable_m_droppreview() {
  set_has_m_droppreview();
  if (m_droppreview_ == &::google::protobuf::internal::kEmptyString) {
    m_droppreview_ = new ::std::string;
  }
  return m_droppreview_;
}
inline ::std::string* E_NickgodStageBossDesc::release_m_droppreview() {
  clear_has_m_droppreview();
  if (m_droppreview_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = m_droppreview_;
    m_droppreview_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void E_NickgodStageBossDesc::set_allocated_m_droppreview(::std::string* m_droppreview) {
  if (m_droppreview_ != &::google::protobuf::internal::kEmptyString) {
    delete m_droppreview_;
  }
  if (m_droppreview) {
    set_has_m_droppreview();
    m_droppreview_ = m_droppreview;
  } else {
    clear_has_m_droppreview();
    m_droppreview_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 m_id = 2;
inline bool E_NickgodStageBossDesc::has_m_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_NickgodStageBossDesc::set_has_m_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_NickgodStageBossDesc::clear_has_m_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_NickgodStageBossDesc::clear_m_id() {
  m_id_ = 0;
  clear_has_m_id();
}
inline ::google::protobuf::int32 E_NickgodStageBossDesc::m_id() const {
  return m_id_;
}
inline void E_NickgodStageBossDesc::set_m_id(::google::protobuf::int32 value) {
  set_has_m_id();
  m_id_ = value;
}

// optional int32 m_point = 3;
inline bool E_NickgodStageBossDesc::has_m_point() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void E_NickgodStageBossDesc::set_has_m_point() {
  _has_bits_[0] |= 0x00000004u;
}
inline void E_NickgodStageBossDesc::clear_has_m_point() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void E_NickgodStageBossDesc::clear_m_point() {
  m_point_ = 0;
  clear_has_m_point();
}
inline ::google::protobuf::int32 E_NickgodStageBossDesc::m_point() const {
  return m_point_;
}
inline void E_NickgodStageBossDesc::set_m_point(::google::protobuf::int32 value) {
  set_has_m_point();
  m_point_ = value;
}

// -------------------------------------------------------------------

// E_NickgodStage

// optional int32 m_id = 1;
inline bool E_NickgodStage::has_m_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_NickgodStage::set_has_m_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_NickgodStage::clear_has_m_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_NickgodStage::clear_m_id() {
  m_id_ = 0;
  clear_has_m_id();
}
inline ::google::protobuf::int32 E_NickgodStage::m_id() const {
  return m_id_;
}
inline void E_NickgodStage::set_m_id(::google::protobuf::int32 value) {
  set_has_m_id();
  m_id_ = value;
}

// optional int32 m_map = 2;
inline bool E_NickgodStage::has_m_map() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_NickgodStage::set_has_m_map() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_NickgodStage::clear_has_m_map() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_NickgodStage::clear_m_map() {
  m_map_ = 0;
  clear_has_m_map();
}
inline ::google::protobuf::int32 E_NickgodStage::m_map() const {
  return m_map_;
}
inline void E_NickgodStage::set_m_map(::google::protobuf::int32 value) {
  set_has_m_map();
  m_map_ = value;
}

// optional int32 m_duration = 3;
inline bool E_NickgodStage::has_m_duration() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void E_NickgodStage::set_has_m_duration() {
  _has_bits_[0] |= 0x00000004u;
}
inline void E_NickgodStage::clear_has_m_duration() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void E_NickgodStage::clear_m_duration() {
  m_duration_ = 0;
  clear_has_m_duration();
}
inline ::google::protobuf::int32 E_NickgodStage::m_duration() const {
  return m_duration_;
}
inline void E_NickgodStage::set_m_duration(::google::protobuf::int32 value) {
  set_has_m_duration();
  m_duration_ = value;
}

// optional int32 m_mosDieRefresh = 4;
inline bool E_NickgodStage::has_m_mosdierefresh() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void E_NickgodStage::set_has_m_mosdierefresh() {
  _has_bits_[0] |= 0x00000008u;
}
inline void E_NickgodStage::clear_has_m_mosdierefresh() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void E_NickgodStage::clear_m_mosdierefresh() {
  m_mosdierefresh_ = 0;
  clear_has_m_mosdierefresh();
}
inline ::google::protobuf::int32 E_NickgodStage::m_mosdierefresh() const {
  return m_mosdierefresh_;
}
inline void E_NickgodStage::set_m_mosdierefresh(::google::protobuf::int32 value) {
  set_has_m_mosdierefresh();
  m_mosdierefresh_ = value;
}

// optional int32 m_bossFirstRefresh = 5;
inline bool E_NickgodStage::has_m_bossfirstrefresh() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void E_NickgodStage::set_has_m_bossfirstrefresh() {
  _has_bits_[0] |= 0x00000010u;
}
inline void E_NickgodStage::clear_has_m_bossfirstrefresh() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void E_NickgodStage::clear_m_bossfirstrefresh() {
  m_bossfirstrefresh_ = 0;
  clear_has_m_bossfirstrefresh();
}
inline ::google::protobuf::int32 E_NickgodStage::m_bossfirstrefresh() const {
  return m_bossfirstrefresh_;
}
inline void E_NickgodStage::set_m_bossfirstrefresh(::google::protobuf::int32 value) {
  set_has_m_bossfirstrefresh();
  m_bossfirstrefresh_ = value;
}

// optional int32 m_bossDieRefresh = 6;
inline bool E_NickgodStage::has_m_bossdierefresh() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void E_NickgodStage::set_has_m_bossdierefresh() {
  _has_bits_[0] |= 0x00000020u;
}
inline void E_NickgodStage::clear_has_m_bossdierefresh() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void E_NickgodStage::clear_m_bossdierefresh() {
  m_bossdierefresh_ = 0;
  clear_has_m_bossdierefresh();
}
inline ::google::protobuf::int32 E_NickgodStage::m_bossdierefresh() const {
  return m_bossdierefresh_;
}
inline void E_NickgodStage::set_m_bossdierefresh(::google::protobuf::int32 value) {
  set_has_m_bossdierefresh();
  m_bossdierefresh_ = value;
}

// optional int32 m_playerDieDrop = 7;
inline bool E_NickgodStage::has_m_playerdiedrop() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void E_NickgodStage::set_has_m_playerdiedrop() {
  _has_bits_[0] |= 0x00000040u;
}
inline void E_NickgodStage::clear_has_m_playerdiedrop() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void E_NickgodStage::clear_m_playerdiedrop() {
  m_playerdiedrop_ = 0;
  clear_has_m_playerdiedrop();
}
inline ::google::protobuf::int32 E_NickgodStage::m_playerdiedrop() const {
  return m_playerdiedrop_;
}
inline void E_NickgodStage::set_m_playerdiedrop(::google::protobuf::int32 value) {
  set_has_m_playerdiedrop();
  m_playerdiedrop_ = value;
}

// optional int32 m_sceneIntegralTime = 8;
inline bool E_NickgodStage::has_m_sceneintegraltime() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void E_NickgodStage::set_has_m_sceneintegraltime() {
  _has_bits_[0] |= 0x00000080u;
}
inline void E_NickgodStage::clear_has_m_sceneintegraltime() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void E_NickgodStage::clear_m_sceneintegraltime() {
  m_sceneintegraltime_ = 0;
  clear_has_m_sceneintegraltime();
}
inline ::google::protobuf::int32 E_NickgodStage::m_sceneintegraltime() const {
  return m_sceneintegraltime_;
}
inline void E_NickgodStage::set_m_sceneintegraltime(::google::protobuf::int32 value) {
  set_has_m_sceneintegraltime();
  m_sceneintegraltime_ = value;
}

// optional int32 m_sceneIntegral = 9;
inline bool E_NickgodStage::has_m_sceneintegral() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void E_NickgodStage::set_has_m_sceneintegral() {
  _has_bits_[0] |= 0x00000100u;
}
inline void E_NickgodStage::clear_has_m_sceneintegral() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void E_NickgodStage::clear_m_sceneintegral() {
  m_sceneintegral_ = 0;
  clear_has_m_sceneintegral();
}
inline ::google::protobuf::int32 E_NickgodStage::m_sceneintegral() const {
  return m_sceneintegral_;
}
inline void E_NickgodStage::set_m_sceneintegral(::google::protobuf::int32 value) {
  set_has_m_sceneintegral();
  m_sceneintegral_ = value;
}

// optional int32 m_killmosIntegral = 10;
inline bool E_NickgodStage::has_m_killmosintegral() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void E_NickgodStage::set_has_m_killmosintegral() {
  _has_bits_[0] |= 0x00000200u;
}
inline void E_NickgodStage::clear_has_m_killmosintegral() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void E_NickgodStage::clear_m_killmosintegral() {
  m_killmosintegral_ = 0;
  clear_has_m_killmosintegral();
}
inline ::google::protobuf::int32 E_NickgodStage::m_killmosintegral() const {
  return m_killmosintegral_;
}
inline void E_NickgodStage::set_m_killmosintegral(::google::protobuf::int32 value) {
  set_has_m_killmosintegral();
  m_killmosintegral_ = value;
}

// optional int32 m_killbossIntegral = 11;
inline bool E_NickgodStage::has_m_killbossintegral() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void E_NickgodStage::set_has_m_killbossintegral() {
  _has_bits_[0] |= 0x00000400u;
}
inline void E_NickgodStage::clear_has_m_killbossintegral() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void E_NickgodStage::clear_m_killbossintegral() {
  m_killbossintegral_ = 0;
  clear_has_m_killbossintegral();
}
inline ::google::protobuf::int32 E_NickgodStage::m_killbossintegral() const {
  return m_killbossintegral_;
}
inline void E_NickgodStage::set_m_killbossintegral(::google::protobuf::int32 value) {
  set_has_m_killbossintegral();
  m_killbossintegral_ = value;
}

// optional int32 m_killplayerIntegral = 12;
inline bool E_NickgodStage::has_m_killplayerintegral() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void E_NickgodStage::set_has_m_killplayerintegral() {
  _has_bits_[0] |= 0x00000800u;
}
inline void E_NickgodStage::clear_has_m_killplayerintegral() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void E_NickgodStage::clear_m_killplayerintegral() {
  m_killplayerintegral_ = 0;
  clear_has_m_killplayerintegral();
}
inline ::google::protobuf::int32 E_NickgodStage::m_killplayerintegral() const {
  return m_killplayerintegral_;
}
inline void E_NickgodStage::set_m_killplayerintegral(::google::protobuf::int32 value) {
  set_has_m_killplayerintegral();
  m_killplayerintegral_ = value;
}

// optional int32 m_assistplayerIntegral = 13;
inline bool E_NickgodStage::has_m_assistplayerintegral() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void E_NickgodStage::set_has_m_assistplayerintegral() {
  _has_bits_[0] |= 0x00001000u;
}
inline void E_NickgodStage::clear_has_m_assistplayerintegral() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void E_NickgodStage::clear_m_assistplayerintegral() {
  m_assistplayerintegral_ = 0;
  clear_has_m_assistplayerintegral();
}
inline ::google::protobuf::int32 E_NickgodStage::m_assistplayerintegral() const {
  return m_assistplayerintegral_;
}
inline void E_NickgodStage::set_m_assistplayerintegral(::google::protobuf::int32 value) {
  set_has_m_assistplayerintegral();
  m_assistplayerintegral_ = value;
}

// repeated .proto_ff.E_NickgodStageMosDesc m_mos = 14;
inline int E_NickgodStage::m_mos_size() const {
  return m_mos_.size();
}
inline void E_NickgodStage::clear_m_mos() {
  m_mos_.Clear();
}
inline const ::proto_ff::E_NickgodStageMosDesc& E_NickgodStage::m_mos(int index) const {
  return m_mos_.Get(index);
}
inline ::proto_ff::E_NickgodStageMosDesc* E_NickgodStage::mutable_m_mos(int index) {
  return m_mos_.Mutable(index);
}
inline ::proto_ff::E_NickgodStageMosDesc* E_NickgodStage::add_m_mos() {
  return m_mos_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_NickgodStageMosDesc >&
E_NickgodStage::m_mos() const {
  return m_mos_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_NickgodStageMosDesc >*
E_NickgodStage::mutable_m_mos() {
  return &m_mos_;
}

// repeated .proto_ff.E_NickgodStageBossDesc m_boss = 15;
inline int E_NickgodStage::m_boss_size() const {
  return m_boss_.size();
}
inline void E_NickgodStage::clear_m_boss() {
  m_boss_.Clear();
}
inline const ::proto_ff::E_NickgodStageBossDesc& E_NickgodStage::m_boss(int index) const {
  return m_boss_.Get(index);
}
inline ::proto_ff::E_NickgodStageBossDesc* E_NickgodStage::mutable_m_boss(int index) {
  return m_boss_.Mutable(index);
}
inline ::proto_ff::E_NickgodStageBossDesc* E_NickgodStage::add_m_boss() {
  return m_boss_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_NickgodStageBossDesc >&
E_NickgodStage::m_boss() const {
  return m_boss_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_NickgodStageBossDesc >*
E_NickgodStage::mutable_m_boss() {
  return &m_boss_;
}

// repeated int32 m_revivalPoint = 16;
inline int E_NickgodStage::m_revivalpoint_size() const {
  return m_revivalpoint_.size();
}
inline void E_NickgodStage::clear_m_revivalpoint() {
  m_revivalpoint_.Clear();
}
inline ::google::protobuf::int32 E_NickgodStage::m_revivalpoint(int index) const {
  return m_revivalpoint_.Get(index);
}
inline void E_NickgodStage::set_m_revivalpoint(int index, ::google::protobuf::int32 value) {
  m_revivalpoint_.Set(index, value);
}
inline void E_NickgodStage::add_m_revivalpoint(::google::protobuf::int32 value) {
  m_revivalpoint_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
E_NickgodStage::m_revivalpoint() const {
  return m_revivalpoint_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
E_NickgodStage::mutable_m_revivalpoint() {
  return &m_revivalpoint_;
}

// -------------------------------------------------------------------

// Sheet_NickgodStage

// repeated .proto_ff.E_NickgodStage E_NickgodStage_List = 1;
inline int Sheet_NickgodStage::e_nickgodstage_list_size() const {
  return e_nickgodstage_list_.size();
}
inline void Sheet_NickgodStage::clear_e_nickgodstage_list() {
  e_nickgodstage_list_.Clear();
}
inline const ::proto_ff::E_NickgodStage& Sheet_NickgodStage::e_nickgodstage_list(int index) const {
  return e_nickgodstage_list_.Get(index);
}
inline ::proto_ff::E_NickgodStage* Sheet_NickgodStage::mutable_e_nickgodstage_list(int index) {
  return e_nickgodstage_list_.Mutable(index);
}
inline ::proto_ff::E_NickgodStage* Sheet_NickgodStage::add_e_nickgodstage_list() {
  return e_nickgodstage_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_NickgodStage >&
Sheet_NickgodStage::e_nickgodstage_list() const {
  return e_nickgodstage_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_NickgodStage >*
Sheet_NickgodStage::mutable_e_nickgodstage_list() {
  return &e_nickgodstage_list_;
}

// -------------------------------------------------------------------

// E_NickgodRewardsRewardDesc

// optional int32 m_Num = 1;
inline bool E_NickgodRewardsRewardDesc::has_m_num() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_NickgodRewardsRewardDesc::set_has_m_num() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_NickgodRewardsRewardDesc::clear_has_m_num() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_NickgodRewardsRewardDesc::clear_m_num() {
  m_num_ = 0;
  clear_has_m_num();
}
inline ::google::protobuf::int32 E_NickgodRewardsRewardDesc::m_num() const {
  return m_num_;
}
inline void E_NickgodRewardsRewardDesc::set_m_num(::google::protobuf::int32 value) {
  set_has_m_num();
  m_num_ = value;
}

// optional int64 m_ID = 2;
inline bool E_NickgodRewardsRewardDesc::has_m_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_NickgodRewardsRewardDesc::set_has_m_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_NickgodRewardsRewardDesc::clear_has_m_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_NickgodRewardsRewardDesc::clear_m_id() {
  m_id_ = GOOGLE_LONGLONG(0);
  clear_has_m_id();
}
inline ::google::protobuf::int64 E_NickgodRewardsRewardDesc::m_id() const {
  return m_id_;
}
inline void E_NickgodRewardsRewardDesc::set_m_id(::google::protobuf::int64 value) {
  set_has_m_id();
  m_id_ = value;
}

// -------------------------------------------------------------------

// E_NickgodRewards

// optional int32 m_id = 1;
inline bool E_NickgodRewards::has_m_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_NickgodRewards::set_has_m_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_NickgodRewards::clear_has_m_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_NickgodRewards::clear_m_id() {
  m_id_ = 0;
  clear_has_m_id();
}
inline ::google::protobuf::int32 E_NickgodRewards::m_id() const {
  return m_id_;
}
inline void E_NickgodRewards::set_m_id(::google::protobuf::int32 value) {
  set_has_m_id();
  m_id_ = value;
}

// optional int32 m_rankingMin = 2;
inline bool E_NickgodRewards::has_m_rankingmin() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_NickgodRewards::set_has_m_rankingmin() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_NickgodRewards::clear_has_m_rankingmin() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_NickgodRewards::clear_m_rankingmin() {
  m_rankingmin_ = 0;
  clear_has_m_rankingmin();
}
inline ::google::protobuf::int32 E_NickgodRewards::m_rankingmin() const {
  return m_rankingmin_;
}
inline void E_NickgodRewards::set_m_rankingmin(::google::protobuf::int32 value) {
  set_has_m_rankingmin();
  m_rankingmin_ = value;
}

// optional int32 m_rankingMax = 3;
inline bool E_NickgodRewards::has_m_rankingmax() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void E_NickgodRewards::set_has_m_rankingmax() {
  _has_bits_[0] |= 0x00000004u;
}
inline void E_NickgodRewards::clear_has_m_rankingmax() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void E_NickgodRewards::clear_m_rankingmax() {
  m_rankingmax_ = 0;
  clear_has_m_rankingmax();
}
inline ::google::protobuf::int32 E_NickgodRewards::m_rankingmax() const {
  return m_rankingmax_;
}
inline void E_NickgodRewards::set_m_rankingmax(::google::protobuf::int32 value) {
  set_has_m_rankingmax();
  m_rankingmax_ = value;
}

// optional int32 m_score = 4;
inline bool E_NickgodRewards::has_m_score() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void E_NickgodRewards::set_has_m_score() {
  _has_bits_[0] |= 0x00000008u;
}
inline void E_NickgodRewards::clear_has_m_score() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void E_NickgodRewards::clear_m_score() {
  m_score_ = 0;
  clear_has_m_score();
}
inline ::google::protobuf::int32 E_NickgodRewards::m_score() const {
  return m_score_;
}
inline void E_NickgodRewards::set_m_score(::google::protobuf::int32 value) {
  set_has_m_score();
  m_score_ = value;
}

// repeated .proto_ff.E_NickgodRewardsRewardDesc m_reward = 5;
inline int E_NickgodRewards::m_reward_size() const {
  return m_reward_.size();
}
inline void E_NickgodRewards::clear_m_reward() {
  m_reward_.Clear();
}
inline const ::proto_ff::E_NickgodRewardsRewardDesc& E_NickgodRewards::m_reward(int index) const {
  return m_reward_.Get(index);
}
inline ::proto_ff::E_NickgodRewardsRewardDesc* E_NickgodRewards::mutable_m_reward(int index) {
  return m_reward_.Mutable(index);
}
inline ::proto_ff::E_NickgodRewardsRewardDesc* E_NickgodRewards::add_m_reward() {
  return m_reward_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_NickgodRewardsRewardDesc >&
E_NickgodRewards::m_reward() const {
  return m_reward_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_NickgodRewardsRewardDesc >*
E_NickgodRewards::mutable_m_reward() {
  return &m_reward_;
}

// -------------------------------------------------------------------

// Sheet_NickgodRewards

// repeated .proto_ff.E_NickgodRewards E_NickgodRewards_List = 1;
inline int Sheet_NickgodRewards::e_nickgodrewards_list_size() const {
  return e_nickgodrewards_list_.size();
}
inline void Sheet_NickgodRewards::clear_e_nickgodrewards_list() {
  e_nickgodrewards_list_.Clear();
}
inline const ::proto_ff::E_NickgodRewards& Sheet_NickgodRewards::e_nickgodrewards_list(int index) const {
  return e_nickgodrewards_list_.Get(index);
}
inline ::proto_ff::E_NickgodRewards* Sheet_NickgodRewards::mutable_e_nickgodrewards_list(int index) {
  return e_nickgodrewards_list_.Mutable(index);
}
inline ::proto_ff::E_NickgodRewards* Sheet_NickgodRewards::add_e_nickgodrewards_list() {
  return e_nickgodrewards_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_NickgodRewards >&
Sheet_NickgodRewards::e_nickgodrewards_list() const {
  return e_nickgodrewards_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_NickgodRewards >*
Sheet_NickgodRewards::mutable_e_nickgodrewards_list() {
  return &e_nickgodrewards_list_;
}

// -------------------------------------------------------------------

// E_NickgodLattice

// optional int32 m_id = 1;
inline bool E_NickgodLattice::has_m_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_NickgodLattice::set_has_m_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_NickgodLattice::clear_has_m_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_NickgodLattice::clear_m_id() {
  m_id_ = 0;
  clear_has_m_id();
}
inline ::google::protobuf::int32 E_NickgodLattice::m_id() const {
  return m_id_;
}
inline void E_NickgodLattice::set_m_id(::google::protobuf::int32 value) {
  set_has_m_id();
  m_id_ = value;
}

// optional int32 m_itemId = 2;
inline bool E_NickgodLattice::has_m_itemid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_NickgodLattice::set_has_m_itemid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_NickgodLattice::clear_has_m_itemid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_NickgodLattice::clear_m_itemid() {
  m_itemid_ = 0;
  clear_has_m_itemid();
}
inline ::google::protobuf::int32 E_NickgodLattice::m_itemid() const {
  return m_itemid_;
}
inline void E_NickgodLattice::set_m_itemid(::google::protobuf::int32 value) {
  set_has_m_itemid();
  m_itemid_ = value;
}

// optional int32 m_itemNum = 3;
inline bool E_NickgodLattice::has_m_itemnum() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void E_NickgodLattice::set_has_m_itemnum() {
  _has_bits_[0] |= 0x00000004u;
}
inline void E_NickgodLattice::clear_has_m_itemnum() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void E_NickgodLattice::clear_m_itemnum() {
  m_itemnum_ = 0;
  clear_has_m_itemnum();
}
inline ::google::protobuf::int32 E_NickgodLattice::m_itemnum() const {
  return m_itemnum_;
}
inline void E_NickgodLattice::set_m_itemnum(::google::protobuf::int32 value) {
  set_has_m_itemnum();
  m_itemnum_ = value;
}

// -------------------------------------------------------------------

// Sheet_NickgodLattice

// repeated .proto_ff.E_NickgodLattice E_NickgodLattice_List = 1;
inline int Sheet_NickgodLattice::e_nickgodlattice_list_size() const {
  return e_nickgodlattice_list_.size();
}
inline void Sheet_NickgodLattice::clear_e_nickgodlattice_list() {
  e_nickgodlattice_list_.Clear();
}
inline const ::proto_ff::E_NickgodLattice& Sheet_NickgodLattice::e_nickgodlattice_list(int index) const {
  return e_nickgodlattice_list_.Get(index);
}
inline ::proto_ff::E_NickgodLattice* Sheet_NickgodLattice::mutable_e_nickgodlattice_list(int index) {
  return e_nickgodlattice_list_.Mutable(index);
}
inline ::proto_ff::E_NickgodLattice* Sheet_NickgodLattice::add_e_nickgodlattice_list() {
  return e_nickgodlattice_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_NickgodLattice >&
Sheet_NickgodLattice::e_nickgodlattice_list() const {
  return e_nickgodlattice_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_NickgodLattice >*
Sheet_NickgodLattice::mutable_e_nickgodlattice_list() {
  return &e_nickgodlattice_list_;
}

// -------------------------------------------------------------------

// E_NickgodTreasuryItemDesc

// optional int32 m_show = 1;
inline bool E_NickgodTreasuryItemDesc::has_m_show() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_NickgodTreasuryItemDesc::set_has_m_show() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_NickgodTreasuryItemDesc::clear_has_m_show() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_NickgodTreasuryItemDesc::clear_m_show() {
  m_show_ = 0;
  clear_has_m_show();
}
inline ::google::protobuf::int32 E_NickgodTreasuryItemDesc::m_show() const {
  return m_show_;
}
inline void E_NickgodTreasuryItemDesc::set_m_show(::google::protobuf::int32 value) {
  set_has_m_show();
  m_show_ = value;
}

// optional int32 m_rand = 2;
inline bool E_NickgodTreasuryItemDesc::has_m_rand() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_NickgodTreasuryItemDesc::set_has_m_rand() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_NickgodTreasuryItemDesc::clear_has_m_rand() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_NickgodTreasuryItemDesc::clear_m_rand() {
  m_rand_ = 0;
  clear_has_m_rand();
}
inline ::google::protobuf::int32 E_NickgodTreasuryItemDesc::m_rand() const {
  return m_rand_;
}
inline void E_NickgodTreasuryItemDesc::set_m_rand(::google::protobuf::int32 value) {
  set_has_m_rand();
  m_rand_ = value;
}

// optional int32 m_num = 3;
inline bool E_NickgodTreasuryItemDesc::has_m_num() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void E_NickgodTreasuryItemDesc::set_has_m_num() {
  _has_bits_[0] |= 0x00000004u;
}
inline void E_NickgodTreasuryItemDesc::clear_has_m_num() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void E_NickgodTreasuryItemDesc::clear_m_num() {
  m_num_ = 0;
  clear_has_m_num();
}
inline ::google::protobuf::int32 E_NickgodTreasuryItemDesc::m_num() const {
  return m_num_;
}
inline void E_NickgodTreasuryItemDesc::set_m_num(::google::protobuf::int32 value) {
  set_has_m_num();
  m_num_ = value;
}

// optional int32 m_id = 4;
inline bool E_NickgodTreasuryItemDesc::has_m_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void E_NickgodTreasuryItemDesc::set_has_m_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void E_NickgodTreasuryItemDesc::clear_has_m_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void E_NickgodTreasuryItemDesc::clear_m_id() {
  m_id_ = 0;
  clear_has_m_id();
}
inline ::google::protobuf::int32 E_NickgodTreasuryItemDesc::m_id() const {
  return m_id_;
}
inline void E_NickgodTreasuryItemDesc::set_m_id(::google::protobuf::int32 value) {
  set_has_m_id();
  m_id_ = value;
}

// -------------------------------------------------------------------

// E_NickgodTreasury

// optional int32 m_id = 1;
inline bool E_NickgodTreasury::has_m_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_NickgodTreasury::set_has_m_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_NickgodTreasury::clear_has_m_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_NickgodTreasury::clear_m_id() {
  m_id_ = 0;
  clear_has_m_id();
}
inline ::google::protobuf::int32 E_NickgodTreasury::m_id() const {
  return m_id_;
}
inline void E_NickgodTreasury::set_m_id(::google::protobuf::int32 value) {
  set_has_m_id();
  m_id_ = value;
}

// repeated .proto_ff.E_NickgodTreasuryItemDesc m_item = 2;
inline int E_NickgodTreasury::m_item_size() const {
  return m_item_.size();
}
inline void E_NickgodTreasury::clear_m_item() {
  m_item_.Clear();
}
inline const ::proto_ff::E_NickgodTreasuryItemDesc& E_NickgodTreasury::m_item(int index) const {
  return m_item_.Get(index);
}
inline ::proto_ff::E_NickgodTreasuryItemDesc* E_NickgodTreasury::mutable_m_item(int index) {
  return m_item_.Mutable(index);
}
inline ::proto_ff::E_NickgodTreasuryItemDesc* E_NickgodTreasury::add_m_item() {
  return m_item_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_NickgodTreasuryItemDesc >&
E_NickgodTreasury::m_item() const {
  return m_item_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_NickgodTreasuryItemDesc >*
E_NickgodTreasury::mutable_m_item() {
  return &m_item_;
}

// -------------------------------------------------------------------

// Sheet_NickgodTreasury

// repeated .proto_ff.E_NickgodTreasury E_NickgodTreasury_List = 1;
inline int Sheet_NickgodTreasury::e_nickgodtreasury_list_size() const {
  return e_nickgodtreasury_list_.size();
}
inline void Sheet_NickgodTreasury::clear_e_nickgodtreasury_list() {
  e_nickgodtreasury_list_.Clear();
}
inline const ::proto_ff::E_NickgodTreasury& Sheet_NickgodTreasury::e_nickgodtreasury_list(int index) const {
  return e_nickgodtreasury_list_.Get(index);
}
inline ::proto_ff::E_NickgodTreasury* Sheet_NickgodTreasury::mutable_e_nickgodtreasury_list(int index) {
  return e_nickgodtreasury_list_.Mutable(index);
}
inline ::proto_ff::E_NickgodTreasury* Sheet_NickgodTreasury::add_e_nickgodtreasury_list() {
  return e_nickgodtreasury_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_NickgodTreasury >&
Sheet_NickgodTreasury::e_nickgodtreasury_list() const {
  return e_nickgodtreasury_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_NickgodTreasury >*
Sheet_NickgodTreasury::mutable_e_nickgodtreasury_list() {
  return &e_nickgodtreasury_list_;
}

// -------------------------------------------------------------------

// E_NickgodPrivilegeRewardDesc

// optional int32 m_Num = 1;
inline bool E_NickgodPrivilegeRewardDesc::has_m_num() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_NickgodPrivilegeRewardDesc::set_has_m_num() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_NickgodPrivilegeRewardDesc::clear_has_m_num() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_NickgodPrivilegeRewardDesc::clear_m_num() {
  m_num_ = 0;
  clear_has_m_num();
}
inline ::google::protobuf::int32 E_NickgodPrivilegeRewardDesc::m_num() const {
  return m_num_;
}
inline void E_NickgodPrivilegeRewardDesc::set_m_num(::google::protobuf::int32 value) {
  set_has_m_num();
  m_num_ = value;
}

// optional int64 m_ID = 2;
inline bool E_NickgodPrivilegeRewardDesc::has_m_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_NickgodPrivilegeRewardDesc::set_has_m_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_NickgodPrivilegeRewardDesc::clear_has_m_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_NickgodPrivilegeRewardDesc::clear_m_id() {
  m_id_ = GOOGLE_LONGLONG(0);
  clear_has_m_id();
}
inline ::google::protobuf::int64 E_NickgodPrivilegeRewardDesc::m_id() const {
  return m_id_;
}
inline void E_NickgodPrivilegeRewardDesc::set_m_id(::google::protobuf::int64 value) {
  set_has_m_id();
  m_id_ = value;
}

// -------------------------------------------------------------------

// E_NickgodPrivilege

// optional int32 m_id = 1;
inline bool E_NickgodPrivilege::has_m_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_NickgodPrivilege::set_has_m_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_NickgodPrivilege::clear_has_m_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_NickgodPrivilege::clear_m_id() {
  m_id_ = 0;
  clear_has_m_id();
}
inline ::google::protobuf::int32 E_NickgodPrivilege::m_id() const {
  return m_id_;
}
inline void E_NickgodPrivilege::set_m_id(::google::protobuf::int32 value) {
  set_has_m_id();
  m_id_ = value;
}

// optional int32 m_condition = 2;
inline bool E_NickgodPrivilege::has_m_condition() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_NickgodPrivilege::set_has_m_condition() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_NickgodPrivilege::clear_has_m_condition() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_NickgodPrivilege::clear_m_condition() {
  m_condition_ = 0;
  clear_has_m_condition();
}
inline ::google::protobuf::int32 E_NickgodPrivilege::m_condition() const {
  return m_condition_;
}
inline void E_NickgodPrivilege::set_m_condition(::google::protobuf::int32 value) {
  set_has_m_condition();
  m_condition_ = value;
}

// optional int32 m_param = 3;
inline bool E_NickgodPrivilege::has_m_param() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void E_NickgodPrivilege::set_has_m_param() {
  _has_bits_[0] |= 0x00000004u;
}
inline void E_NickgodPrivilege::clear_has_m_param() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void E_NickgodPrivilege::clear_m_param() {
  m_param_ = 0;
  clear_has_m_param();
}
inline ::google::protobuf::int32 E_NickgodPrivilege::m_param() const {
  return m_param_;
}
inline void E_NickgodPrivilege::set_m_param(::google::protobuf::int32 value) {
  set_has_m_param();
  m_param_ = value;
}

// optional int32 m_open = 4;
inline bool E_NickgodPrivilege::has_m_open() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void E_NickgodPrivilege::set_has_m_open() {
  _has_bits_[0] |= 0x00000008u;
}
inline void E_NickgodPrivilege::clear_has_m_open() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void E_NickgodPrivilege::clear_m_open() {
  m_open_ = 0;
  clear_has_m_open();
}
inline ::google::protobuf::int32 E_NickgodPrivilege::m_open() const {
  return m_open_;
}
inline void E_NickgodPrivilege::set_m_open(::google::protobuf::int32 value) {
  set_has_m_open();
  m_open_ = value;
}

// repeated .proto_ff.E_NickgodPrivilegeRewardDesc m_reward = 5;
inline int E_NickgodPrivilege::m_reward_size() const {
  return m_reward_.size();
}
inline void E_NickgodPrivilege::clear_m_reward() {
  m_reward_.Clear();
}
inline const ::proto_ff::E_NickgodPrivilegeRewardDesc& E_NickgodPrivilege::m_reward(int index) const {
  return m_reward_.Get(index);
}
inline ::proto_ff::E_NickgodPrivilegeRewardDesc* E_NickgodPrivilege::mutable_m_reward(int index) {
  return m_reward_.Mutable(index);
}
inline ::proto_ff::E_NickgodPrivilegeRewardDesc* E_NickgodPrivilege::add_m_reward() {
  return m_reward_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_NickgodPrivilegeRewardDesc >&
E_NickgodPrivilege::m_reward() const {
  return m_reward_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_NickgodPrivilegeRewardDesc >*
E_NickgodPrivilege::mutable_m_reward() {
  return &m_reward_;
}

// -------------------------------------------------------------------

// Sheet_NickgodPrivilege

// repeated .proto_ff.E_NickgodPrivilege E_NickgodPrivilege_List = 1;
inline int Sheet_NickgodPrivilege::e_nickgodprivilege_list_size() const {
  return e_nickgodprivilege_list_.size();
}
inline void Sheet_NickgodPrivilege::clear_e_nickgodprivilege_list() {
  e_nickgodprivilege_list_.Clear();
}
inline const ::proto_ff::E_NickgodPrivilege& Sheet_NickgodPrivilege::e_nickgodprivilege_list(int index) const {
  return e_nickgodprivilege_list_.Get(index);
}
inline ::proto_ff::E_NickgodPrivilege* Sheet_NickgodPrivilege::mutable_e_nickgodprivilege_list(int index) {
  return e_nickgodprivilege_list_.Mutable(index);
}
inline ::proto_ff::E_NickgodPrivilege* Sheet_NickgodPrivilege::add_e_nickgodprivilege_list() {
  return e_nickgodprivilege_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_NickgodPrivilege >&
Sheet_NickgodPrivilege::e_nickgodprivilege_list() const {
  return e_nickgodprivilege_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_NickgodPrivilege >*
Sheet_NickgodPrivilege::mutable_e_nickgodprivilege_list() {
  return &e_nickgodprivilege_list_;
}

// -------------------------------------------------------------------

// E_NickgodSaleItemDesc

// optional int32 m_Num = 1;
inline bool E_NickgodSaleItemDesc::has_m_num() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_NickgodSaleItemDesc::set_has_m_num() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_NickgodSaleItemDesc::clear_has_m_num() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_NickgodSaleItemDesc::clear_m_num() {
  m_num_ = 0;
  clear_has_m_num();
}
inline ::google::protobuf::int32 E_NickgodSaleItemDesc::m_num() const {
  return m_num_;
}
inline void E_NickgodSaleItemDesc::set_m_num(::google::protobuf::int32 value) {
  set_has_m_num();
  m_num_ = value;
}

// optional int64 m_ID = 2;
inline bool E_NickgodSaleItemDesc::has_m_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_NickgodSaleItemDesc::set_has_m_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_NickgodSaleItemDesc::clear_has_m_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_NickgodSaleItemDesc::clear_m_id() {
  m_id_ = GOOGLE_LONGLONG(0);
  clear_has_m_id();
}
inline ::google::protobuf::int64 E_NickgodSaleItemDesc::m_id() const {
  return m_id_;
}
inline void E_NickgodSaleItemDesc::set_m_id(::google::protobuf::int64 value) {
  set_has_m_id();
  m_id_ = value;
}

// -------------------------------------------------------------------

// E_NickgodSale

// optional int32 m_id = 1;
inline bool E_NickgodSale::has_m_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_NickgodSale::set_has_m_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_NickgodSale::clear_has_m_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_NickgodSale::clear_m_id() {
  m_id_ = 0;
  clear_has_m_id();
}
inline ::google::protobuf::int32 E_NickgodSale::m_id() const {
  return m_id_;
}
inline void E_NickgodSale::set_m_id(::google::protobuf::int32 value) {
  set_has_m_id();
  m_id_ = value;
}

// optional string m_discount = 2;
inline bool E_NickgodSale::has_m_discount() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_NickgodSale::set_has_m_discount() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_NickgodSale::clear_has_m_discount() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_NickgodSale::clear_m_discount() {
  if (m_discount_ != &::google::protobuf::internal::kEmptyString) {
    m_discount_->clear();
  }
  clear_has_m_discount();
}
inline const ::std::string& E_NickgodSale::m_discount() const {
  return *m_discount_;
}
inline void E_NickgodSale::set_m_discount(const ::std::string& value) {
  set_has_m_discount();
  if (m_discount_ == &::google::protobuf::internal::kEmptyString) {
    m_discount_ = new ::std::string;
  }
  m_discount_->assign(value);
}
inline void E_NickgodSale::set_m_discount(const char* value) {
  set_has_m_discount();
  if (m_discount_ == &::google::protobuf::internal::kEmptyString) {
    m_discount_ = new ::std::string;
  }
  m_discount_->assign(value);
}
inline void E_NickgodSale::set_m_discount(const char* value, size_t size) {
  set_has_m_discount();
  if (m_discount_ == &::google::protobuf::internal::kEmptyString) {
    m_discount_ = new ::std::string;
  }
  m_discount_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* E_NickgodSale::mutable_m_discount() {
  set_has_m_discount();
  if (m_discount_ == &::google::protobuf::internal::kEmptyString) {
    m_discount_ = new ::std::string;
  }
  return m_discount_;
}
inline ::std::string* E_NickgodSale::release_m_discount() {
  clear_has_m_discount();
  if (m_discount_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = m_discount_;
    m_discount_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void E_NickgodSale::set_allocated_m_discount(::std::string* m_discount) {
  if (m_discount_ != &::google::protobuf::internal::kEmptyString) {
    delete m_discount_;
  }
  if (m_discount) {
    set_has_m_discount();
    m_discount_ = m_discount;
  } else {
    clear_has_m_discount();
    m_discount_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 m_money = 3;
inline bool E_NickgodSale::has_m_money() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void E_NickgodSale::set_has_m_money() {
  _has_bits_[0] |= 0x00000004u;
}
inline void E_NickgodSale::clear_has_m_money() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void E_NickgodSale::clear_m_money() {
  m_money_ = 0;
  clear_has_m_money();
}
inline ::google::protobuf::int32 E_NickgodSale::m_money() const {
  return m_money_;
}
inline void E_NickgodSale::set_m_money(::google::protobuf::int32 value) {
  set_has_m_money();
  m_money_ = value;
}

// optional int32 m_price = 4;
inline bool E_NickgodSale::has_m_price() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void E_NickgodSale::set_has_m_price() {
  _has_bits_[0] |= 0x00000008u;
}
inline void E_NickgodSale::clear_has_m_price() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void E_NickgodSale::clear_m_price() {
  m_price_ = 0;
  clear_has_m_price();
}
inline ::google::protobuf::int32 E_NickgodSale::m_price() const {
  return m_price_;
}
inline void E_NickgodSale::set_m_price(::google::protobuf::int32 value) {
  set_has_m_price();
  m_price_ = value;
}

// optional int32 m_buyLimit = 5;
inline bool E_NickgodSale::has_m_buylimit() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void E_NickgodSale::set_has_m_buylimit() {
  _has_bits_[0] |= 0x00000010u;
}
inline void E_NickgodSale::clear_has_m_buylimit() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void E_NickgodSale::clear_m_buylimit() {
  m_buylimit_ = 0;
  clear_has_m_buylimit();
}
inline ::google::protobuf::int32 E_NickgodSale::m_buylimit() const {
  return m_buylimit_;
}
inline void E_NickgodSale::set_m_buylimit(::google::protobuf::int32 value) {
  set_has_m_buylimit();
  m_buylimit_ = value;
}

// repeated .proto_ff.E_NickgodSaleItemDesc m_item = 6;
inline int E_NickgodSale::m_item_size() const {
  return m_item_.size();
}
inline void E_NickgodSale::clear_m_item() {
  m_item_.Clear();
}
inline const ::proto_ff::E_NickgodSaleItemDesc& E_NickgodSale::m_item(int index) const {
  return m_item_.Get(index);
}
inline ::proto_ff::E_NickgodSaleItemDesc* E_NickgodSale::mutable_m_item(int index) {
  return m_item_.Mutable(index);
}
inline ::proto_ff::E_NickgodSaleItemDesc* E_NickgodSale::add_m_item() {
  return m_item_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_NickgodSaleItemDesc >&
E_NickgodSale::m_item() const {
  return m_item_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_NickgodSaleItemDesc >*
E_NickgodSale::mutable_m_item() {
  return &m_item_;
}

// -------------------------------------------------------------------

// Sheet_NickgodSale

// repeated .proto_ff.E_NickgodSale E_NickgodSale_List = 1;
inline int Sheet_NickgodSale::e_nickgodsale_list_size() const {
  return e_nickgodsale_list_.size();
}
inline void Sheet_NickgodSale::clear_e_nickgodsale_list() {
  e_nickgodsale_list_.Clear();
}
inline const ::proto_ff::E_NickgodSale& Sheet_NickgodSale::e_nickgodsale_list(int index) const {
  return e_nickgodsale_list_.Get(index);
}
inline ::proto_ff::E_NickgodSale* Sheet_NickgodSale::mutable_e_nickgodsale_list(int index) {
  return e_nickgodsale_list_.Mutable(index);
}
inline ::proto_ff::E_NickgodSale* Sheet_NickgodSale::add_e_nickgodsale_list() {
  return e_nickgodsale_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_NickgodSale >&
Sheet_NickgodSale::e_nickgodsale_list() const {
  return e_nickgodsale_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_NickgodSale >*
Sheet_NickgodSale::mutable_e_nickgodsale_list() {
  return &e_nickgodsale_list_;
}

// -------------------------------------------------------------------

// E_NickgodChargeupRewardDesc

// optional int32 m_Num = 1;
inline bool E_NickgodChargeupRewardDesc::has_m_num() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_NickgodChargeupRewardDesc::set_has_m_num() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_NickgodChargeupRewardDesc::clear_has_m_num() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_NickgodChargeupRewardDesc::clear_m_num() {
  m_num_ = 0;
  clear_has_m_num();
}
inline ::google::protobuf::int32 E_NickgodChargeupRewardDesc::m_num() const {
  return m_num_;
}
inline void E_NickgodChargeupRewardDesc::set_m_num(::google::protobuf::int32 value) {
  set_has_m_num();
  m_num_ = value;
}

// optional int64 m_ID = 2;
inline bool E_NickgodChargeupRewardDesc::has_m_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_NickgodChargeupRewardDesc::set_has_m_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_NickgodChargeupRewardDesc::clear_has_m_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_NickgodChargeupRewardDesc::clear_m_id() {
  m_id_ = GOOGLE_LONGLONG(0);
  clear_has_m_id();
}
inline ::google::protobuf::int64 E_NickgodChargeupRewardDesc::m_id() const {
  return m_id_;
}
inline void E_NickgodChargeupRewardDesc::set_m_id(::google::protobuf::int64 value) {
  set_has_m_id();
  m_id_ = value;
}

// -------------------------------------------------------------------

// E_NickgodChargeup

// optional int32 m_id = 1;
inline bool E_NickgodChargeup::has_m_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_NickgodChargeup::set_has_m_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_NickgodChargeup::clear_has_m_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_NickgodChargeup::clear_m_id() {
  m_id_ = 0;
  clear_has_m_id();
}
inline ::google::protobuf::int32 E_NickgodChargeup::m_id() const {
  return m_id_;
}
inline void E_NickgodChargeup::set_m_id(::google::protobuf::int32 value) {
  set_has_m_id();
  m_id_ = value;
}

// optional int32 m_pay = 2;
inline bool E_NickgodChargeup::has_m_pay() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_NickgodChargeup::set_has_m_pay() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_NickgodChargeup::clear_has_m_pay() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_NickgodChargeup::clear_m_pay() {
  m_pay_ = 0;
  clear_has_m_pay();
}
inline ::google::protobuf::int32 E_NickgodChargeup::m_pay() const {
  return m_pay_;
}
inline void E_NickgodChargeup::set_m_pay(::google::protobuf::int32 value) {
  set_has_m_pay();
  m_pay_ = value;
}

// repeated .proto_ff.E_NickgodChargeupRewardDesc m_reward = 3;
inline int E_NickgodChargeup::m_reward_size() const {
  return m_reward_.size();
}
inline void E_NickgodChargeup::clear_m_reward() {
  m_reward_.Clear();
}
inline const ::proto_ff::E_NickgodChargeupRewardDesc& E_NickgodChargeup::m_reward(int index) const {
  return m_reward_.Get(index);
}
inline ::proto_ff::E_NickgodChargeupRewardDesc* E_NickgodChargeup::mutable_m_reward(int index) {
  return m_reward_.Mutable(index);
}
inline ::proto_ff::E_NickgodChargeupRewardDesc* E_NickgodChargeup::add_m_reward() {
  return m_reward_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_NickgodChargeupRewardDesc >&
E_NickgodChargeup::m_reward() const {
  return m_reward_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_NickgodChargeupRewardDesc >*
E_NickgodChargeup::mutable_m_reward() {
  return &m_reward_;
}

// -------------------------------------------------------------------

// Sheet_NickgodChargeup

// repeated .proto_ff.E_NickgodChargeup E_NickgodChargeup_List = 1;
inline int Sheet_NickgodChargeup::e_nickgodchargeup_list_size() const {
  return e_nickgodchargeup_list_.size();
}
inline void Sheet_NickgodChargeup::clear_e_nickgodchargeup_list() {
  e_nickgodchargeup_list_.Clear();
}
inline const ::proto_ff::E_NickgodChargeup& Sheet_NickgodChargeup::e_nickgodchargeup_list(int index) const {
  return e_nickgodchargeup_list_.Get(index);
}
inline ::proto_ff::E_NickgodChargeup* Sheet_NickgodChargeup::mutable_e_nickgodchargeup_list(int index) {
  return e_nickgodchargeup_list_.Mutable(index);
}
inline ::proto_ff::E_NickgodChargeup* Sheet_NickgodChargeup::add_e_nickgodchargeup_list() {
  return e_nickgodchargeup_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_NickgodChargeup >&
Sheet_NickgodChargeup::e_nickgodchargeup_list() const {
  return e_nickgodchargeup_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_NickgodChargeup >*
Sheet_NickgodChargeup::mutable_e_nickgodchargeup_list() {
  return &e_nickgodchargeup_list_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto_ff

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_E_5fNickgod_2eproto__INCLUDED
