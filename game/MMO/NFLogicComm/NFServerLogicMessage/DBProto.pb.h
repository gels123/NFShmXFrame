// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: DBProto.proto

#ifndef PROTOBUF_DBProto_2eproto__INCLUDED
#define PROTOBUF_DBProto_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "yd_fieldoptions.pb.h"
#include "Com.pb.h"
#include "ComDefine.pb.h"
// @@protoc_insertion_point(includes)

namespace proto_ff {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_DBProto_2eproto();
void protobuf_AssignDesc_DBProto_2eproto();
void protobuf_ShutdownFile_DBProto_2eproto();

class RoleReliveProto;
class RoleDBBaseData;
class BagItemsDBData;
class BagDBSimpleData;
class RoleDBUnitBagData;
class RoleDBBagData;
class RoleDBEquipData;
class RoleDBTaskData;
class GrowPartEntryDBInfo;
class GrowPartDBData;
class GrowDBData;
class DayUseItemData;
class MiniDBData;
class FacadeDataInfo;
class FacadeDBData;
class SkillDBInfo;
class SkillDBPos;
class SkillDBGroup;
class SkillDBData;
class GodRelicsActivityData;
class MiniActivityDBData;
class DupRecord;
class DupGroupData;
class DupTowerDBRecordEntry;
class DupTowerDBRecord;
class DupTowerDBData;
class ComDupDBData;
class DupDBData;
class BuffDBInfo;
class BuffDBCdInfo;
class BuffDBData;
class BossSimpleInfoDB;
class BossDBData;
class VipDBData;
class RoleDBData;
class LoginRoleDBProto;
class RoleListDBReq;
class RoleListDBRsp;
class CreateRoleDBReq;
class CreateRoleDBRsp;
class RoleInfoDBReq;
class RoleInfoDBRsp;
class RoleInfoUpdateDBReq;
class RoleChgNameDBReq;
class RoleChgNameDBRsp;
class RoleSimpleListDBReq;
class RoleSimpleListDBRsp;
class CreatureTransLogicDBReq;
class CreatureTransLogicDBRsp;
class NewMailDBInfo;
class MailDBOperateInfo;
class SaveMailDBReq;
class SaveMailDBRsp;
class CharacterMailDBRequest;
class CharacterMailDBResponse;
class MaxMailIDRequest;
class MaxMailIDResponse;
class DeleteCharacterMail;
class ZoneMailSaveRsp;
class ZoneMailTransCharacterMailReq;
class ZoneMailTransCharacterMailRsp;
class WebMailDBDataReq;
class WebMailDBDataRsp;
class FriendDBInfo;
class FriendDBRequest;
class FriendDBResponse;
class AllFriendDBRequest;
class AllFriendDBResponse;
class SaveFriendDBRequest;
class DelteFriendDBRequest;
class GlobalDBRequst;
class GlobalDBEntry;
class GlobalDBResponse;
class GlobalDBSetRequest;
class GlobalDBSetResponse;
class GlobalComData;
class ActDBProto;
class ActDBReq;
class ActDBRsp;
class ActSaveDBReq;

// ===================================================================

class RoleReliveProto : public ::google::protobuf::Message {
 public:
  RoleReliveProto();
  virtual ~RoleReliveProto();

  RoleReliveProto(const RoleReliveProto& from);

  inline RoleReliveProto& operator=(const RoleReliveProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RoleReliveProto& default_instance();

  void Swap(RoleReliveProto* other);

  // implements Message ----------------------------------------------

  RoleReliveProto* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RoleReliveProto& from);
  void MergeFrom(const RoleReliveProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 tired_time = 1;
  inline bool has_tired_time() const;
  inline void clear_tired_time();
  static const int kTiredTimeFieldNumber = 1;
  inline ::google::protobuf::uint64 tired_time() const;
  inline void set_tired_time(::google::protobuf::uint64 value);

  // optional int32 relive_num = 2;
  inline bool has_relive_num() const;
  inline void clear_relive_num();
  static const int kReliveNumFieldNumber = 2;
  inline ::google::protobuf::int32 relive_num() const;
  inline void set_relive_num(::google::protobuf::int32 value);

  // optional int32 is_tired = 3;
  inline bool has_is_tired() const;
  inline void clear_is_tired();
  static const int kIsTiredFieldNumber = 3;
  inline ::google::protobuf::int32 is_tired() const;
  inline void set_is_tired(::google::protobuf::int32 value);

  // optional uint64 mapid = 4;
  inline bool has_mapid() const;
  inline void clear_mapid();
  static const int kMapidFieldNumber = 4;
  inline ::google::protobuf::uint64 mapid() const;
  inline void set_mapid(::google::protobuf::uint64 value);

  // optional int32 map_relive_num = 5;
  inline bool has_map_relive_num() const;
  inline void clear_map_relive_num();
  static const int kMapReliveNumFieldNumber = 5;
  inline ::google::protobuf::int32 map_relive_num() const;
  inline void set_map_relive_num(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.RoleReliveProto)
 private:
  inline void set_has_tired_time();
  inline void clear_has_tired_time();
  inline void set_has_relive_num();
  inline void clear_has_relive_num();
  inline void set_has_is_tired();
  inline void clear_has_is_tired();
  inline void set_has_mapid();
  inline void clear_has_mapid();
  inline void set_has_map_relive_num();
  inline void clear_has_map_relive_num();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 tired_time_;
  ::google::protobuf::int32 relive_num_;
  ::google::protobuf::int32 is_tired_;
  ::google::protobuf::uint64 mapid_;
  ::google::protobuf::int32 map_relive_num_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_DBProto_2eproto();
  friend void protobuf_AssignDesc_DBProto_2eproto();
  friend void protobuf_ShutdownFile_DBProto_2eproto();

  void InitAsDefaultInstance();
  static RoleReliveProto* default_instance_;
};
// -------------------------------------------------------------------

class RoleDBBaseData : public ::google::protobuf::Message {
 public:
  RoleDBBaseData();
  virtual ~RoleDBBaseData();

  RoleDBBaseData(const RoleDBBaseData& from);

  inline RoleDBBaseData& operator=(const RoleDBBaseData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RoleDBBaseData& default_instance();

  void Swap(RoleDBBaseData* other);

  // implements Message ----------------------------------------------

  RoleDBBaseData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RoleDBBaseData& from);
  void MergeFrom(const RoleDBBaseData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string name = 1;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 1;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // optional uint32 prof = 2;
  inline bool has_prof() const;
  inline void clear_prof();
  static const int kProfFieldNumber = 2;
  inline ::google::protobuf::uint32 prof() const;
  inline void set_prof(::google::protobuf::uint32 value);

  // optional uint32 level = 3;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 3;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);

  // optional int64 exp = 4;
  inline bool has_exp() const;
  inline void clear_exp();
  static const int kExpFieldNumber = 4;
  inline ::google::protobuf::int64 exp() const;
  inline void set_exp(::google::protobuf::int64 value);

  // optional int64 hp = 5;
  inline bool has_hp() const;
  inline void clear_hp();
  static const int kHpFieldNumber = 5;
  inline ::google::protobuf::int64 hp() const;
  inline void set_hp(::google::protobuf::int64 value);

  // optional int64 fight = 6;
  inline bool has_fight() const;
  inline void clear_fight();
  static const int kFightFieldNumber = 6;
  inline ::google::protobuf::int64 fight() const;
  inline void set_fight(::google::protobuf::int64 value);

  // optional uint64 createTime = 7;
  inline bool has_createtime() const;
  inline void clear_createtime();
  static const int kCreateTimeFieldNumber = 7;
  inline ::google::protobuf::uint64 createtime() const;
  inline void set_createtime(::google::protobuf::uint64 value);

  // optional uint64 loginTime = 8;
  inline bool has_logintime() const;
  inline void clear_logintime();
  static const int kLoginTimeFieldNumber = 8;
  inline ::google::protobuf::uint64 logintime() const;
  inline void set_logintime(::google::protobuf::uint64 value);

  // optional uint64 logoutTime = 9;
  inline bool has_logouttime() const;
  inline void clear_logouttime();
  static const int kLogoutTimeFieldNumber = 9;
  inline ::google::protobuf::uint64 logouttime() const;
  inline void set_logouttime(::google::protobuf::uint64 value);

  // optional uint64 enter_scene_id = 10;
  inline bool has_enter_scene_id() const;
  inline void clear_enter_scene_id();
  static const int kEnterSceneIdFieldNumber = 10;
  inline ::google::protobuf::uint64 enter_scene_id() const;
  inline void set_enter_scene_id(::google::protobuf::uint64 value);

  // optional uint64 enter_map_id = 11;
  inline bool has_enter_map_id() const;
  inline void clear_enter_map_id();
  static const int kEnterMapIdFieldNumber = 11;
  inline ::google::protobuf::uint64 enter_map_id() const;
  inline void set_enter_map_id(::google::protobuf::uint64 value);

  // optional float enterposx = 12;
  inline bool has_enterposx() const;
  inline void clear_enterposx();
  static const int kEnterposxFieldNumber = 12;
  inline float enterposx() const;
  inline void set_enterposx(float value);

  // optional float enterposy = 13;
  inline bool has_enterposy() const;
  inline void clear_enterposy();
  static const int kEnterposyFieldNumber = 13;
  inline float enterposy() const;
  inline void set_enterposy(float value);

  // optional float enterposz = 14;
  inline bool has_enterposz() const;
  inline void clear_enterposz();
  static const int kEnterposzFieldNumber = 14;
  inline float enterposz() const;
  inline void set_enterposz(float value);

  // optional uint64 lastsceneid = 15;
  inline bool has_lastsceneid() const;
  inline void clear_lastsceneid();
  static const int kLastsceneidFieldNumber = 15;
  inline ::google::protobuf::uint64 lastsceneid() const;
  inline void set_lastsceneid(::google::protobuf::uint64 value);

  // optional uint64 lastmapid = 16;
  inline bool has_lastmapid() const;
  inline void clear_lastmapid();
  static const int kLastmapidFieldNumber = 16;
  inline ::google::protobuf::uint64 lastmapid() const;
  inline void set_lastmapid(::google::protobuf::uint64 value);

  // optional float lastposx = 17;
  inline bool has_lastposx() const;
  inline void clear_lastposx();
  static const int kLastposxFieldNumber = 17;
  inline float lastposx() const;
  inline void set_lastposx(float value);

  // optional float lastposy = 18;
  inline bool has_lastposy() const;
  inline void clear_lastposy();
  static const int kLastposyFieldNumber = 18;
  inline float lastposy() const;
  inline void set_lastposy(float value);

  // optional float lastposz = 19;
  inline bool has_lastposz() const;
  inline void clear_lastposz();
  static const int kLastposzFieldNumber = 19;
  inline float lastposz() const;
  inline void set_lastposz(float value);

  // optional .proto_ff.RoleFacadeProto facade = 20;
  inline bool has_facade() const;
  inline void clear_facade();
  static const int kFacadeFieldNumber = 20;
  inline const ::proto_ff::RoleFacadeProto& facade() const;
  inline ::proto_ff::RoleFacadeProto* mutable_facade();
  inline ::proto_ff::RoleFacadeProto* release_facade();
  inline void set_allocated_facade(::proto_ff::RoleFacadeProto* facade);

  // optional uint32 vip_level = 21;
  inline bool has_vip_level() const;
  inline void clear_vip_level();
  static const int kVipLevelFieldNumber = 21;
  inline ::google::protobuf::uint32 vip_level() const;
  inline void set_vip_level(::google::protobuf::uint32 value);

  // optional int32 state = 22;
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 22;
  inline ::google::protobuf::int32 state() const;
  inline void set_state(::google::protobuf::int32 value);

  // optional uint64 hanguptime = 23;
  inline bool has_hanguptime() const;
  inline void clear_hanguptime();
  static const int kHanguptimeFieldNumber = 23;
  inline ::google::protobuf::uint64 hanguptime() const;
  inline void set_hanguptime(::google::protobuf::uint64 value);

  // optional .proto_ff.RoleReliveProto relive = 24;
  inline bool has_relive() const;
  inline void clear_relive();
  static const int kReliveFieldNumber = 24;
  inline const ::proto_ff::RoleReliveProto& relive() const;
  inline ::proto_ff::RoleReliveProto* mutable_relive();
  inline ::proto_ff::RoleReliveProto* release_relive();
  inline void set_allocated_relive(::proto_ff::RoleReliveProto* relive);

  // optional int64 gold = 25;
  inline bool has_gold() const;
  inline void clear_gold();
  static const int kGoldFieldNumber = 25;
  inline ::google::protobuf::int64 gold() const;
  inline void set_gold(::google::protobuf::int64 value);

  // optional int64 dia = 26;
  inline bool has_dia() const;
  inline void clear_dia();
  static const int kDiaFieldNumber = 26;
  inline ::google::protobuf::int64 dia() const;
  inline void set_dia(::google::protobuf::int64 value);

  // optional int64 bdia = 27;
  inline bool has_bdia() const;
  inline void clear_bdia();
  static const int kBdiaFieldNumber = 27;
  inline ::google::protobuf::int64 bdia() const;
  inline void set_bdia(::google::protobuf::int64 value);

  // optional int64 magic = 28;
  inline bool has_magic() const;
  inline void clear_magic();
  static const int kMagicFieldNumber = 28;
  inline ::google::protobuf::int64 magic() const;
  inline void set_magic(::google::protobuf::int64 value);

  // optional int64 prestige = 29;
  inline bool has_prestige() const;
  inline void clear_prestige();
  static const int kPrestigeFieldNumber = 29;
  inline ::google::protobuf::int64 prestige() const;
  inline void set_prestige(::google::protobuf::int64 value);

  // optional int32 vipLv = 30;
  inline bool has_viplv() const;
  inline void clear_viplv();
  static const int kVipLvFieldNumber = 30;
  inline ::google::protobuf::int32 viplv() const;
  inline void set_viplv(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.RoleDBBaseData)
 private:
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_prof();
  inline void clear_has_prof();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_exp();
  inline void clear_has_exp();
  inline void set_has_hp();
  inline void clear_has_hp();
  inline void set_has_fight();
  inline void clear_has_fight();
  inline void set_has_createtime();
  inline void clear_has_createtime();
  inline void set_has_logintime();
  inline void clear_has_logintime();
  inline void set_has_logouttime();
  inline void clear_has_logouttime();
  inline void set_has_enter_scene_id();
  inline void clear_has_enter_scene_id();
  inline void set_has_enter_map_id();
  inline void clear_has_enter_map_id();
  inline void set_has_enterposx();
  inline void clear_has_enterposx();
  inline void set_has_enterposy();
  inline void clear_has_enterposy();
  inline void set_has_enterposz();
  inline void clear_has_enterposz();
  inline void set_has_lastsceneid();
  inline void clear_has_lastsceneid();
  inline void set_has_lastmapid();
  inline void clear_has_lastmapid();
  inline void set_has_lastposx();
  inline void clear_has_lastposx();
  inline void set_has_lastposy();
  inline void clear_has_lastposy();
  inline void set_has_lastposz();
  inline void clear_has_lastposz();
  inline void set_has_facade();
  inline void clear_has_facade();
  inline void set_has_vip_level();
  inline void clear_has_vip_level();
  inline void set_has_state();
  inline void clear_has_state();
  inline void set_has_hanguptime();
  inline void clear_has_hanguptime();
  inline void set_has_relive();
  inline void clear_has_relive();
  inline void set_has_gold();
  inline void clear_has_gold();
  inline void set_has_dia();
  inline void clear_has_dia();
  inline void set_has_bdia();
  inline void clear_has_bdia();
  inline void set_has_magic();
  inline void clear_has_magic();
  inline void set_has_prestige();
  inline void clear_has_prestige();
  inline void set_has_viplv();
  inline void clear_has_viplv();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* name_;
  ::google::protobuf::uint32 prof_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::int64 exp_;
  ::google::protobuf::int64 hp_;
  ::google::protobuf::int64 fight_;
  ::google::protobuf::uint64 createtime_;
  ::google::protobuf::uint64 logintime_;
  ::google::protobuf::uint64 logouttime_;
  ::google::protobuf::uint64 enter_scene_id_;
  ::google::protobuf::uint64 enter_map_id_;
  float enterposx_;
  float enterposy_;
  ::google::protobuf::uint64 lastsceneid_;
  float enterposz_;
  float lastposx_;
  ::google::protobuf::uint64 lastmapid_;
  float lastposy_;
  float lastposz_;
  ::proto_ff::RoleFacadeProto* facade_;
  ::google::protobuf::uint32 vip_level_;
  ::google::protobuf::int32 state_;
  ::google::protobuf::uint64 hanguptime_;
  ::proto_ff::RoleReliveProto* relive_;
  ::google::protobuf::int64 gold_;
  ::google::protobuf::int64 dia_;
  ::google::protobuf::int64 bdia_;
  ::google::protobuf::int64 magic_;
  ::google::protobuf::int64 prestige_;
  ::google::protobuf::int32 viplv_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(30 + 31) / 32];

  friend void  protobuf_AddDesc_DBProto_2eproto();
  friend void protobuf_AssignDesc_DBProto_2eproto();
  friend void protobuf_ShutdownFile_DBProto_2eproto();

  void InitAsDefaultInstance();
  static RoleDBBaseData* default_instance_;
};
// -------------------------------------------------------------------

class BagItemsDBData : public ::google::protobuf::Message {
 public:
  BagItemsDBData();
  virtual ~BagItemsDBData();

  BagItemsDBData(const BagItemsDBData& from);

  inline BagItemsDBData& operator=(const BagItemsDBData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BagItemsDBData& default_instance();

  void Swap(BagItemsDBData* other);

  // implements Message ----------------------------------------------

  BagItemsDBData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BagItemsDBData& from);
  void MergeFrom(const BagItemsDBData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.ItemProtoInfo data = 1;
  inline int data_size() const;
  inline void clear_data();
  static const int kDataFieldNumber = 1;
  inline const ::proto_ff::ItemProtoInfo& data(int index) const;
  inline ::proto_ff::ItemProtoInfo* mutable_data(int index);
  inline ::proto_ff::ItemProtoInfo* add_data();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::ItemProtoInfo >&
      data() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::ItemProtoInfo >*
      mutable_data();

  // optional int32 offset = 2;
  inline bool has_offset() const;
  inline void clear_offset();
  static const int kOffsetFieldNumber = 2;
  inline ::google::protobuf::int32 offset() const;
  inline void set_offset(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.BagItemsDBData)
 private:
  inline void set_has_offset();
  inline void clear_has_offset();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::ItemProtoInfo > data_;
  ::google::protobuf::int32 offset_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_DBProto_2eproto();
  friend void protobuf_AssignDesc_DBProto_2eproto();
  friend void protobuf_ShutdownFile_DBProto_2eproto();

  void InitAsDefaultInstance();
  static BagItemsDBData* default_instance_;
};
// -------------------------------------------------------------------

class BagDBSimpleData : public ::google::protobuf::Message {
 public:
  BagDBSimpleData();
  virtual ~BagDBSimpleData();

  BagDBSimpleData(const BagDBSimpleData& from);

  inline BagDBSimpleData& operator=(const BagDBSimpleData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BagDBSimpleData& default_instance();

  void Swap(BagDBSimpleData* other);

  // implements Message ----------------------------------------------

  BagDBSimpleData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BagDBSimpleData& from);
  void MergeFrom(const BagDBSimpleData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 package_type = 1;
  inline bool has_package_type() const;
  inline void clear_package_type();
  static const int kPackageTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 package_type() const;
  inline void set_package_type(::google::protobuf::uint32 value);

  // optional uint32 expand_num = 2;
  inline bool has_expand_num() const;
  inline void clear_expand_num();
  static const int kExpandNumFieldNumber = 2;
  inline ::google::protobuf::uint32 expand_num() const;
  inline void set_expand_num(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.BagDBSimpleData)
 private:
  inline void set_has_package_type();
  inline void clear_has_package_type();
  inline void set_has_expand_num();
  inline void clear_has_expand_num();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 package_type_;
  ::google::protobuf::uint32 expand_num_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_DBProto_2eproto();
  friend void protobuf_AssignDesc_DBProto_2eproto();
  friend void protobuf_ShutdownFile_DBProto_2eproto();

  void InitAsDefaultInstance();
  static BagDBSimpleData* default_instance_;
};
// -------------------------------------------------------------------

class RoleDBUnitBagData : public ::google::protobuf::Message {
 public:
  RoleDBUnitBagData();
  virtual ~RoleDBUnitBagData();

  RoleDBUnitBagData(const RoleDBUnitBagData& from);

  inline RoleDBUnitBagData& operator=(const RoleDBUnitBagData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RoleDBUnitBagData& default_instance();

  void Swap(RoleDBUnitBagData* other);

  // implements Message ----------------------------------------------

  RoleDBUnitBagData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RoleDBUnitBagData& from);
  void MergeFrom(const RoleDBUnitBagData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string table_name = 1;
  inline bool has_table_name() const;
  inline void clear_table_name();
  static const int kTableNameFieldNumber = 1;
  inline const ::std::string& table_name() const;
  inline void set_table_name(const ::std::string& value);
  inline void set_table_name(const char* value);
  inline void set_table_name(const char* value, size_t size);
  inline ::std::string* mutable_table_name();
  inline ::std::string* release_table_name();
  inline void set_allocated_table_name(::std::string* table_name);

  // optional .proto_ff.BagDBSimpleData simple = 2;
  inline bool has_simple() const;
  inline void clear_simple();
  static const int kSimpleFieldNumber = 2;
  inline const ::proto_ff::BagDBSimpleData& simple() const;
  inline ::proto_ff::BagDBSimpleData* mutable_simple();
  inline ::proto_ff::BagDBSimpleData* release_simple();
  inline void set_allocated_simple(::proto_ff::BagDBSimpleData* simple);

  // repeated .proto_ff.BagItemsDBData parts = 3;
  inline int parts_size() const;
  inline void clear_parts();
  static const int kPartsFieldNumber = 3;
  inline const ::proto_ff::BagItemsDBData& parts(int index) const;
  inline ::proto_ff::BagItemsDBData* mutable_parts(int index);
  inline ::proto_ff::BagItemsDBData* add_parts();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::BagItemsDBData >&
      parts() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::BagItemsDBData >*
      mutable_parts();

  // @@protoc_insertion_point(class_scope:proto_ff.RoleDBUnitBagData)
 private:
  inline void set_has_table_name();
  inline void clear_has_table_name();
  inline void set_has_simple();
  inline void clear_has_simple();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* table_name_;
  ::proto_ff::BagDBSimpleData* simple_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::BagItemsDBData > parts_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_DBProto_2eproto();
  friend void protobuf_AssignDesc_DBProto_2eproto();
  friend void protobuf_ShutdownFile_DBProto_2eproto();

  void InitAsDefaultInstance();
  static RoleDBUnitBagData* default_instance_;
};
// -------------------------------------------------------------------

class RoleDBBagData : public ::google::protobuf::Message {
 public:
  RoleDBBagData();
  virtual ~RoleDBBagData();

  RoleDBBagData(const RoleDBBagData& from);

  inline RoleDBBagData& operator=(const RoleDBBagData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RoleDBBagData& default_instance();

  void Swap(RoleDBBagData* other);

  // implements Message ----------------------------------------------

  RoleDBBagData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RoleDBBagData& from);
  void MergeFrom(const RoleDBBagData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.RoleDBUnitBagData bags = 1;
  inline int bags_size() const;
  inline void clear_bags();
  static const int kBagsFieldNumber = 1;
  inline const ::proto_ff::RoleDBUnitBagData& bags(int index) const;
  inline ::proto_ff::RoleDBUnitBagData* mutable_bags(int index);
  inline ::proto_ff::RoleDBUnitBagData* add_bags();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::RoleDBUnitBagData >&
      bags() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::RoleDBUnitBagData >*
      mutable_bags();

  // @@protoc_insertion_point(class_scope:proto_ff.RoleDBBagData)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::RoleDBUnitBagData > bags_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_DBProto_2eproto();
  friend void protobuf_AssignDesc_DBProto_2eproto();
  friend void protobuf_ShutdownFile_DBProto_2eproto();

  void InitAsDefaultInstance();
  static RoleDBBagData* default_instance_;
};
// -------------------------------------------------------------------

class RoleDBEquipData : public ::google::protobuf::Message {
 public:
  RoleDBEquipData();
  virtual ~RoleDBEquipData();

  RoleDBEquipData(const RoleDBEquipData& from);

  inline RoleDBEquipData& operator=(const RoleDBEquipData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RoleDBEquipData& default_instance();

  void Swap(RoleDBEquipData* other);

  // implements Message ----------------------------------------------

  RoleDBEquipData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RoleDBEquipData& from);
  void MergeFrom(const RoleDBEquipData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.EquipInfo infos = 1;
  inline int infos_size() const;
  inline void clear_infos();
  static const int kInfosFieldNumber = 1;
  inline const ::proto_ff::EquipInfo& infos(int index) const;
  inline ::proto_ff::EquipInfo* mutable_infos(int index);
  inline ::proto_ff::EquipInfo* add_infos();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::EquipInfo >&
      infos() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::EquipInfo >*
      mutable_infos();

  // @@protoc_insertion_point(class_scope:proto_ff.RoleDBEquipData)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::EquipInfo > infos_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_DBProto_2eproto();
  friend void protobuf_AssignDesc_DBProto_2eproto();
  friend void protobuf_ShutdownFile_DBProto_2eproto();

  void InitAsDefaultInstance();
  static RoleDBEquipData* default_instance_;
};
// -------------------------------------------------------------------

class RoleDBTaskData : public ::google::protobuf::Message {
 public:
  RoleDBTaskData();
  virtual ~RoleDBTaskData();

  RoleDBTaskData(const RoleDBTaskData& from);

  inline RoleDBTaskData& operator=(const RoleDBTaskData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RoleDBTaskData& default_instance();

  void Swap(RoleDBTaskData* other);

  // implements Message ----------------------------------------------

  RoleDBTaskData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RoleDBTaskData& from);
  void MergeFrom(const RoleDBTaskData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto_ff.RoleDBTaskData)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_DBProto_2eproto();
  friend void protobuf_AssignDesc_DBProto_2eproto();
  friend void protobuf_ShutdownFile_DBProto_2eproto();

  void InitAsDefaultInstance();
  static RoleDBTaskData* default_instance_;
};
// -------------------------------------------------------------------

class GrowPartEntryDBInfo : public ::google::protobuf::Message {
 public:
  GrowPartEntryDBInfo();
  virtual ~GrowPartEntryDBInfo();

  GrowPartEntryDBInfo(const GrowPartEntryDBInfo& from);

  inline GrowPartEntryDBInfo& operator=(const GrowPartEntryDBInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GrowPartEntryDBInfo& default_instance();

  void Swap(GrowPartEntryDBInfo* other);

  // implements Message ----------------------------------------------

  GrowPartEntryDBInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GrowPartEntryDBInfo& from);
  void MergeFrom(const GrowPartEntryDBInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int64 id() const;
  inline void set_id(::google::protobuf::int64 value);

  // optional int32 lv = 2;
  inline bool has_lv() const;
  inline void clear_lv();
  static const int kLvFieldNumber = 2;
  inline ::google::protobuf::int32 lv() const;
  inline void set_lv(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.GrowPartEntryDBInfo)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_lv();
  inline void clear_has_lv();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 id_;
  ::google::protobuf::int32 lv_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_DBProto_2eproto();
  friend void protobuf_AssignDesc_DBProto_2eproto();
  friend void protobuf_ShutdownFile_DBProto_2eproto();

  void InitAsDefaultInstance();
  static GrowPartEntryDBInfo* default_instance_;
};
// -------------------------------------------------------------------

class GrowPartDBData : public ::google::protobuf::Message {
 public:
  GrowPartDBData();
  virtual ~GrowPartDBData();

  GrowPartDBData(const GrowPartDBData& from);

  inline GrowPartDBData& operator=(const GrowPartDBData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GrowPartDBData& default_instance();

  void Swap(GrowPartDBData* other);

  // implements Message ----------------------------------------------

  GrowPartDBData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GrowPartDBData& from);
  void MergeFrom(const GrowPartDBData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // repeated .proto_ff.GrowPartEntryDBInfo entrys = 2;
  inline int entrys_size() const;
  inline void clear_entrys();
  static const int kEntrysFieldNumber = 2;
  inline const ::proto_ff::GrowPartEntryDBInfo& entrys(int index) const;
  inline ::proto_ff::GrowPartEntryDBInfo* mutable_entrys(int index);
  inline ::proto_ff::GrowPartEntryDBInfo* add_entrys();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::GrowPartEntryDBInfo >&
      entrys() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::GrowPartEntryDBInfo >*
      mutable_entrys();

  // optional int64 curId = 3;
  inline bool has_curid() const;
  inline void clear_curid();
  static const int kCurIdFieldNumber = 3;
  inline ::google::protobuf::int64 curid() const;
  inline void set_curid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.GrowPartDBData)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_curid();
  inline void clear_has_curid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::GrowPartEntryDBInfo > entrys_;
  ::google::protobuf::int64 curid_;
  ::google::protobuf::int32 type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_DBProto_2eproto();
  friend void protobuf_AssignDesc_DBProto_2eproto();
  friend void protobuf_ShutdownFile_DBProto_2eproto();

  void InitAsDefaultInstance();
  static GrowPartDBData* default_instance_;
};
// -------------------------------------------------------------------

class GrowDBData : public ::google::protobuf::Message {
 public:
  GrowDBData();
  virtual ~GrowDBData();

  GrowDBData(const GrowDBData& from);

  inline GrowDBData& operator=(const GrowDBData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GrowDBData& default_instance();

  void Swap(GrowDBData* other);

  // implements Message ----------------------------------------------

  GrowDBData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GrowDBData& from);
  void MergeFrom(const GrowDBData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.GrowPartDBData parts = 1;
  inline int parts_size() const;
  inline void clear_parts();
  static const int kPartsFieldNumber = 1;
  inline const ::proto_ff::GrowPartDBData& parts(int index) const;
  inline ::proto_ff::GrowPartDBData* mutable_parts(int index);
  inline ::proto_ff::GrowPartDBData* add_parts();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::GrowPartDBData >&
      parts() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::GrowPartDBData >*
      mutable_parts();

  // @@protoc_insertion_point(class_scope:proto_ff.GrowDBData)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::GrowPartDBData > parts_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_DBProto_2eproto();
  friend void protobuf_AssignDesc_DBProto_2eproto();
  friend void protobuf_ShutdownFile_DBProto_2eproto();

  void InitAsDefaultInstance();
  static GrowDBData* default_instance_;
};
// -------------------------------------------------------------------

class DayUseItemData : public ::google::protobuf::Message {
 public:
  DayUseItemData();
  virtual ~DayUseItemData();

  DayUseItemData(const DayUseItemData& from);

  inline DayUseItemData& operator=(const DayUseItemData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DayUseItemData& default_instance();

  void Swap(DayUseItemData* other);

  // implements Message ----------------------------------------------

  DayUseItemData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DayUseItemData& from);
  void MergeFrom(const DayUseItemData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.ComPair64 info = 1;
  inline int info_size() const;
  inline void clear_info();
  static const int kInfoFieldNumber = 1;
  inline const ::proto_ff::ComPair64& info(int index) const;
  inline ::proto_ff::ComPair64* mutable_info(int index);
  inline ::proto_ff::ComPair64* add_info();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair64 >&
      info() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair64 >*
      mutable_info();

  // @@protoc_insertion_point(class_scope:proto_ff.DayUseItemData)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair64 > info_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_DBProto_2eproto();
  friend void protobuf_AssignDesc_DBProto_2eproto();
  friend void protobuf_ShutdownFile_DBProto_2eproto();

  void InitAsDefaultInstance();
  static DayUseItemData* default_instance_;
};
// -------------------------------------------------------------------

class MiniDBData : public ::google::protobuf::Message {
 public:
  MiniDBData();
  virtual ~MiniDBData();

  MiniDBData(const MiniDBData& from);

  inline MiniDBData& operator=(const MiniDBData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MiniDBData& default_instance();

  void Swap(MiniDBData* other);

  // implements Message ----------------------------------------------

  MiniDBData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MiniDBData& from);
  void MergeFrom(const MiniDBData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 lastTime = 1;
  inline bool has_lasttime() const;
  inline void clear_lasttime();
  static const int kLastTimeFieldNumber = 1;
  inline ::google::protobuf::uint64 lasttime() const;
  inline void set_lasttime(::google::protobuf::uint64 value);

  // optional .proto_ff.DayUseItemData useItem = 2;
  inline bool has_useitem() const;
  inline void clear_useitem();
  static const int kUseItemFieldNumber = 2;
  inline const ::proto_ff::DayUseItemData& useitem() const;
  inline ::proto_ff::DayUseItemData* mutable_useitem();
  inline ::proto_ff::DayUseItemData* release_useitem();
  inline void set_allocated_useitem(::proto_ff::DayUseItemData* useitem);

  // @@protoc_insertion_point(class_scope:proto_ff.MiniDBData)
 private:
  inline void set_has_lasttime();
  inline void clear_has_lasttime();
  inline void set_has_useitem();
  inline void clear_has_useitem();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 lasttime_;
  ::proto_ff::DayUseItemData* useitem_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_DBProto_2eproto();
  friend void protobuf_AssignDesc_DBProto_2eproto();
  friend void protobuf_ShutdownFile_DBProto_2eproto();

  void InitAsDefaultInstance();
  static MiniDBData* default_instance_;
};
// -------------------------------------------------------------------

class FacadeDataInfo : public ::google::protobuf::Message {
 public:
  FacadeDataInfo();
  virtual ~FacadeDataInfo();

  FacadeDataInfo(const FacadeDataInfo& from);

  inline FacadeDataInfo& operator=(const FacadeDataInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FacadeDataInfo& default_instance();

  void Swap(FacadeDataInfo* other);

  // implements Message ----------------------------------------------

  FacadeDataInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FacadeDataInfo& from);
  void MergeFrom(const FacadeDataInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 facade_type = 1;
  inline bool has_facade_type() const;
  inline void clear_facade_type();
  static const int kFacadeTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 facade_type() const;
  inline void set_facade_type(::google::protobuf::uint32 value);

  // optional uint64 facade_id = 2;
  inline bool has_facade_id() const;
  inline void clear_facade_id();
  static const int kFacadeIdFieldNumber = 2;
  inline ::google::protobuf::uint64 facade_id() const;
  inline void set_facade_id(::google::protobuf::uint64 value);

  // optional uint32 facade_lev = 3;
  inline bool has_facade_lev() const;
  inline void clear_facade_lev();
  static const int kFacadeLevFieldNumber = 3;
  inline ::google::protobuf::uint32 facade_lev() const;
  inline void set_facade_lev(::google::protobuf::uint32 value);

  // optional uint64 facade_exp = 4;
  inline bool has_facade_exp() const;
  inline void clear_facade_exp();
  static const int kFacadeExpFieldNumber = 4;
  inline ::google::protobuf::uint64 facade_exp() const;
  inline void set_facade_exp(::google::protobuf::uint64 value);

  // optional bool use_soul_item = 5;
  inline bool has_use_soul_item() const;
  inline void clear_use_soul_item();
  static const int kUseSoulItemFieldNumber = 5;
  inline bool use_soul_item() const;
  inline void set_use_soul_item(bool value);

  // optional bool use_facade = 6;
  inline bool has_use_facade() const;
  inline void clear_use_facade();
  static const int kUseFacadeFieldNumber = 6;
  inline bool use_facade() const;
  inline void set_use_facade(bool value);

  // optional uint64 equip_fantasy_id = 7;
  inline bool has_equip_fantasy_id() const;
  inline void clear_equip_fantasy_id();
  static const int kEquipFantasyIdFieldNumber = 7;
  inline ::google::protobuf::uint64 equip_fantasy_id() const;
  inline void set_equip_fantasy_id(::google::protobuf::uint64 value);

  // repeated .proto_ff.FacadeFantasyData fantasy_map = 8;
  inline int fantasy_map_size() const;
  inline void clear_fantasy_map();
  static const int kFantasyMapFieldNumber = 8;
  inline const ::proto_ff::FacadeFantasyData& fantasy_map(int index) const;
  inline ::proto_ff::FacadeFantasyData* mutable_fantasy_map(int index);
  inline ::proto_ff::FacadeFantasyData* add_fantasy_map();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::FacadeFantasyData >&
      fantasy_map() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::FacadeFantasyData >*
      mutable_fantasy_map();

  // repeated .proto_ff.FacadeFragmentData fragment_map = 9;
  inline int fragment_map_size() const;
  inline void clear_fragment_map();
  static const int kFragmentMapFieldNumber = 9;
  inline const ::proto_ff::FacadeFragmentData& fragment_map(int index) const;
  inline ::proto_ff::FacadeFragmentData* mutable_fragment_map(int index);
  inline ::proto_ff::FacadeFragmentData* add_fragment_map();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::FacadeFragmentData >&
      fragment_map() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::FacadeFragmentData >*
      mutable_fragment_map();

  // repeated .proto_ff.FacadeSkillData skill_data = 10;
  inline int skill_data_size() const;
  inline void clear_skill_data();
  static const int kSkillDataFieldNumber = 10;
  inline const ::proto_ff::FacadeSkillData& skill_data(int index) const;
  inline ::proto_ff::FacadeSkillData* mutable_skill_data(int index);
  inline ::proto_ff::FacadeSkillData* add_skill_data();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::FacadeSkillData >&
      skill_data() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::FacadeSkillData >*
      mutable_skill_data();

  // @@protoc_insertion_point(class_scope:proto_ff.FacadeDataInfo)
 private:
  inline void set_has_facade_type();
  inline void clear_has_facade_type();
  inline void set_has_facade_id();
  inline void clear_has_facade_id();
  inline void set_has_facade_lev();
  inline void clear_has_facade_lev();
  inline void set_has_facade_exp();
  inline void clear_has_facade_exp();
  inline void set_has_use_soul_item();
  inline void clear_has_use_soul_item();
  inline void set_has_use_facade();
  inline void clear_has_use_facade();
  inline void set_has_equip_fantasy_id();
  inline void clear_has_equip_fantasy_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 facade_id_;
  ::google::protobuf::uint32 facade_type_;
  ::google::protobuf::uint32 facade_lev_;
  ::google::protobuf::uint64 facade_exp_;
  ::google::protobuf::uint64 equip_fantasy_id_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::FacadeFantasyData > fantasy_map_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::FacadeFragmentData > fragment_map_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::FacadeSkillData > skill_data_;
  bool use_soul_item_;
  bool use_facade_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(10 + 31) / 32];

  friend void  protobuf_AddDesc_DBProto_2eproto();
  friend void protobuf_AssignDesc_DBProto_2eproto();
  friend void protobuf_ShutdownFile_DBProto_2eproto();

  void InitAsDefaultInstance();
  static FacadeDataInfo* default_instance_;
};
// -------------------------------------------------------------------

class FacadeDBData : public ::google::protobuf::Message {
 public:
  FacadeDBData();
  virtual ~FacadeDBData();

  FacadeDBData(const FacadeDBData& from);

  inline FacadeDBData& operator=(const FacadeDBData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FacadeDBData& default_instance();

  void Swap(FacadeDBData* other);

  // implements Message ----------------------------------------------

  FacadeDBData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FacadeDBData& from);
  void MergeFrom(const FacadeDBData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.FacadeDataInfo data = 1;
  inline int data_size() const;
  inline void clear_data();
  static const int kDataFieldNumber = 1;
  inline const ::proto_ff::FacadeDataInfo& data(int index) const;
  inline ::proto_ff::FacadeDataInfo* mutable_data(int index);
  inline ::proto_ff::FacadeDataInfo* add_data();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::FacadeDataInfo >&
      data() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::FacadeDataInfo >*
      mutable_data();

  // @@protoc_insertion_point(class_scope:proto_ff.FacadeDBData)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::FacadeDataInfo > data_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_DBProto_2eproto();
  friend void protobuf_AssignDesc_DBProto_2eproto();
  friend void protobuf_ShutdownFile_DBProto_2eproto();

  void InitAsDefaultInstance();
  static FacadeDBData* default_instance_;
};
// -------------------------------------------------------------------

class SkillDBInfo : public ::google::protobuf::Message {
 public:
  SkillDBInfo();
  virtual ~SkillDBInfo();

  SkillDBInfo(const SkillDBInfo& from);

  inline SkillDBInfo& operator=(const SkillDBInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SkillDBInfo& default_instance();

  void Swap(SkillDBInfo* other);

  // implements Message ----------------------------------------------

  SkillDBInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SkillDBInfo& from);
  void MergeFrom(const SkillDBInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 skill_id = 1;
  inline bool has_skill_id() const;
  inline void clear_skill_id();
  static const int kSkillIdFieldNumber = 1;
  inline ::google::protobuf::uint64 skill_id() const;
  inline void set_skill_id(::google::protobuf::uint64 value);

  // optional int32 level = 2;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 2;
  inline ::google::protobuf::int32 level() const;
  inline void set_level(::google::protobuf::int32 value);

  // optional int32 wakeup = 3;
  inline bool has_wakeup() const;
  inline void clear_wakeup();
  static const int kWakeupFieldNumber = 3;
  inline ::google::protobuf::int32 wakeup() const;
  inline void set_wakeup(::google::protobuf::int32 value);

  // optional int32 advance = 4;
  inline bool has_advance() const;
  inline void clear_advance();
  static const int kAdvanceFieldNumber = 4;
  inline ::google::protobuf::int32 advance() const;
  inline void set_advance(::google::protobuf::int32 value);

  // optional int64 use_msc = 5;
  inline bool has_use_msc() const;
  inline void clear_use_msc();
  static const int kUseMscFieldNumber = 5;
  inline ::google::protobuf::int64 use_msc() const;
  inline void set_use_msc(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.SkillDBInfo)
 private:
  inline void set_has_skill_id();
  inline void clear_has_skill_id();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_wakeup();
  inline void clear_has_wakeup();
  inline void set_has_advance();
  inline void clear_has_advance();
  inline void set_has_use_msc();
  inline void clear_has_use_msc();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 skill_id_;
  ::google::protobuf::int32 level_;
  ::google::protobuf::int32 wakeup_;
  ::google::protobuf::int64 use_msc_;
  ::google::protobuf::int32 advance_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_DBProto_2eproto();
  friend void protobuf_AssignDesc_DBProto_2eproto();
  friend void protobuf_ShutdownFile_DBProto_2eproto();

  void InitAsDefaultInstance();
  static SkillDBInfo* default_instance_;
};
// -------------------------------------------------------------------

class SkillDBPos : public ::google::protobuf::Message {
 public:
  SkillDBPos();
  virtual ~SkillDBPos();

  SkillDBPos(const SkillDBPos& from);

  inline SkillDBPos& operator=(const SkillDBPos& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SkillDBPos& default_instance();

  void Swap(SkillDBPos* other);

  // implements Message ----------------------------------------------

  SkillDBPos* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SkillDBPos& from);
  void MergeFrom(const SkillDBPos& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 skill_id = 1;
  inline bool has_skill_id() const;
  inline void clear_skill_id();
  static const int kSkillIdFieldNumber = 1;
  inline ::google::protobuf::uint64 skill_id() const;
  inline void set_skill_id(::google::protobuf::uint64 value);

  // optional uint32 pos = 2;
  inline bool has_pos() const;
  inline void clear_pos();
  static const int kPosFieldNumber = 2;
  inline ::google::protobuf::uint32 pos() const;
  inline void set_pos(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.SkillDBPos)
 private:
  inline void set_has_skill_id();
  inline void clear_has_skill_id();
  inline void set_has_pos();
  inline void clear_has_pos();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 skill_id_;
  ::google::protobuf::uint32 pos_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_DBProto_2eproto();
  friend void protobuf_AssignDesc_DBProto_2eproto();
  friend void protobuf_ShutdownFile_DBProto_2eproto();

  void InitAsDefaultInstance();
  static SkillDBPos* default_instance_;
};
// -------------------------------------------------------------------

class SkillDBGroup : public ::google::protobuf::Message {
 public:
  SkillDBGroup();
  virtual ~SkillDBGroup();

  SkillDBGroup(const SkillDBGroup& from);

  inline SkillDBGroup& operator=(const SkillDBGroup& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SkillDBGroup& default_instance();

  void Swap(SkillDBGroup* other);

  // implements Message ----------------------------------------------

  SkillDBGroup* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SkillDBGroup& from);
  void MergeFrom(const SkillDBGroup& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 group = 1;
  inline bool has_group() const;
  inline void clear_group();
  static const int kGroupFieldNumber = 1;
  inline ::google::protobuf::uint32 group() const;
  inline void set_group(::google::protobuf::uint32 value);

  // optional int32 chg = 2;
  inline bool has_chg() const;
  inline void clear_chg();
  static const int kChgFieldNumber = 2;
  inline ::google::protobuf::int32 chg() const;
  inline void set_chg(::google::protobuf::int32 value);

  // repeated .proto_ff.SkillDBPos pos_lst = 3;
  inline int pos_lst_size() const;
  inline void clear_pos_lst();
  static const int kPosLstFieldNumber = 3;
  inline const ::proto_ff::SkillDBPos& pos_lst(int index) const;
  inline ::proto_ff::SkillDBPos* mutable_pos_lst(int index);
  inline ::proto_ff::SkillDBPos* add_pos_lst();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::SkillDBPos >&
      pos_lst() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::SkillDBPos >*
      mutable_pos_lst();

  // @@protoc_insertion_point(class_scope:proto_ff.SkillDBGroup)
 private:
  inline void set_has_group();
  inline void clear_has_group();
  inline void set_has_chg();
  inline void clear_has_chg();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 group_;
  ::google::protobuf::int32 chg_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::SkillDBPos > pos_lst_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_DBProto_2eproto();
  friend void protobuf_AssignDesc_DBProto_2eproto();
  friend void protobuf_ShutdownFile_DBProto_2eproto();

  void InitAsDefaultInstance();
  static SkillDBGroup* default_instance_;
};
// -------------------------------------------------------------------

class SkillDBData : public ::google::protobuf::Message {
 public:
  SkillDBData();
  virtual ~SkillDBData();

  SkillDBData(const SkillDBData& from);

  inline SkillDBData& operator=(const SkillDBData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SkillDBData& default_instance();

  void Swap(SkillDBData* other);

  // implements Message ----------------------------------------------

  SkillDBData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SkillDBData& from);
  void MergeFrom(const SkillDBData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.SkillDBInfo info_lst = 1;
  inline int info_lst_size() const;
  inline void clear_info_lst();
  static const int kInfoLstFieldNumber = 1;
  inline const ::proto_ff::SkillDBInfo& info_lst(int index) const;
  inline ::proto_ff::SkillDBInfo* mutable_info_lst(int index);
  inline ::proto_ff::SkillDBInfo* add_info_lst();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::SkillDBInfo >&
      info_lst() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::SkillDBInfo >*
      mutable_info_lst();

  // repeated .proto_ff.SkillDBGroup group_lst = 2;
  inline int group_lst_size() const;
  inline void clear_group_lst();
  static const int kGroupLstFieldNumber = 2;
  inline const ::proto_ff::SkillDBGroup& group_lst(int index) const;
  inline ::proto_ff::SkillDBGroup* mutable_group_lst(int index);
  inline ::proto_ff::SkillDBGroup* add_group_lst();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::SkillDBGroup >&
      group_lst() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::SkillDBGroup >*
      mutable_group_lst();

  // optional uint32 group = 3;
  inline bool has_group() const;
  inline void clear_group();
  static const int kGroupFieldNumber = 3;
  inline ::google::protobuf::uint32 group() const;
  inline void set_group(::google::protobuf::uint32 value);

  // optional uint64 last_group = 4;
  inline bool has_last_group() const;
  inline void clear_last_group();
  static const int kLastGroupFieldNumber = 4;
  inline ::google::protobuf::uint64 last_group() const;
  inline void set_last_group(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.SkillDBData)
 private:
  inline void set_has_group();
  inline void clear_has_group();
  inline void set_has_last_group();
  inline void clear_has_last_group();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::SkillDBInfo > info_lst_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::SkillDBGroup > group_lst_;
  ::google::protobuf::uint64 last_group_;
  ::google::protobuf::uint32 group_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_DBProto_2eproto();
  friend void protobuf_AssignDesc_DBProto_2eproto();
  friend void protobuf_ShutdownFile_DBProto_2eproto();

  void InitAsDefaultInstance();
  static SkillDBData* default_instance_;
};
// -------------------------------------------------------------------

class GodRelicsActivityData : public ::google::protobuf::Message {
 public:
  GodRelicsActivityData();
  virtual ~GodRelicsActivityData();

  GodRelicsActivityData(const GodRelicsActivityData& from);

  inline GodRelicsActivityData& operator=(const GodRelicsActivityData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GodRelicsActivityData& default_instance();

  void Swap(GodRelicsActivityData* other);

  // implements Message ----------------------------------------------

  GodRelicsActivityData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GodRelicsActivityData& from);
  void MergeFrom(const GodRelicsActivityData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.GodRelicsTaskGroupEntry group_data = 1;
  inline int group_data_size() const;
  inline void clear_group_data();
  static const int kGroupDataFieldNumber = 1;
  inline const ::proto_ff::GodRelicsTaskGroupEntry& group_data(int index) const;
  inline ::proto_ff::GodRelicsTaskGroupEntry* mutable_group_data(int index);
  inline ::proto_ff::GodRelicsTaskGroupEntry* add_group_data();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::GodRelicsTaskGroupEntry >&
      group_data() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::GodRelicsTaskGroupEntry >*
      mutable_group_data();

  // optional int64 cur_group_id = 2;
  inline bool has_cur_group_id() const;
  inline void clear_cur_group_id();
  static const int kCurGroupIdFieldNumber = 2;
  inline ::google::protobuf::int64 cur_group_id() const;
  inline void set_cur_group_id(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.GodRelicsActivityData)
 private:
  inline void set_has_cur_group_id();
  inline void clear_has_cur_group_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::GodRelicsTaskGroupEntry > group_data_;
  ::google::protobuf::int64 cur_group_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_DBProto_2eproto();
  friend void protobuf_AssignDesc_DBProto_2eproto();
  friend void protobuf_ShutdownFile_DBProto_2eproto();

  void InitAsDefaultInstance();
  static GodRelicsActivityData* default_instance_;
};
// -------------------------------------------------------------------

class MiniActivityDBData : public ::google::protobuf::Message {
 public:
  MiniActivityDBData();
  virtual ~MiniActivityDBData();

  MiniActivityDBData(const MiniActivityDBData& from);

  inline MiniActivityDBData& operator=(const MiniActivityDBData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MiniActivityDBData& default_instance();

  void Swap(MiniActivityDBData* other);

  // implements Message ----------------------------------------------

  MiniActivityDBData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MiniActivityDBData& from);
  void MergeFrom(const MiniActivityDBData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .proto_ff.GodRelicsActivityData god_relics_data = 1;
  inline bool has_god_relics_data() const;
  inline void clear_god_relics_data();
  static const int kGodRelicsDataFieldNumber = 1;
  inline const ::proto_ff::GodRelicsActivityData& god_relics_data() const;
  inline ::proto_ff::GodRelicsActivityData* mutable_god_relics_data();
  inline ::proto_ff::GodRelicsActivityData* release_god_relics_data();
  inline void set_allocated_god_relics_data(::proto_ff::GodRelicsActivityData* god_relics_data);

  // optional .proto_ff.DailyTaskAllData daily_data = 2;
  inline bool has_daily_data() const;
  inline void clear_daily_data();
  static const int kDailyDataFieldNumber = 2;
  inline const ::proto_ff::DailyTaskAllData& daily_data() const;
  inline ::proto_ff::DailyTaskAllData* mutable_daily_data();
  inline ::proto_ff::DailyTaskAllData* release_daily_data();
  inline void set_allocated_daily_data(::proto_ff::DailyTaskAllData* daily_data);

  // @@protoc_insertion_point(class_scope:proto_ff.MiniActivityDBData)
 private:
  inline void set_has_god_relics_data();
  inline void clear_has_god_relics_data();
  inline void set_has_daily_data();
  inline void clear_has_daily_data();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::proto_ff::GodRelicsActivityData* god_relics_data_;
  ::proto_ff::DailyTaskAllData* daily_data_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_DBProto_2eproto();
  friend void protobuf_AssignDesc_DBProto_2eproto();
  friend void protobuf_ShutdownFile_DBProto_2eproto();

  void InitAsDefaultInstance();
  static MiniActivityDBData* default_instance_;
};
// -------------------------------------------------------------------

class DupRecord : public ::google::protobuf::Message {
 public:
  DupRecord();
  virtual ~DupRecord();

  DupRecord(const DupRecord& from);

  inline DupRecord& operator=(const DupRecord& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DupRecord& default_instance();

  void Swap(DupRecord* other);

  // implements Message ----------------------------------------------

  DupRecord* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DupRecord& from);
  void MergeFrom(const DupRecord& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 dupId = 1;
  inline bool has_dupid() const;
  inline void clear_dupid();
  static const int kDupIdFieldNumber = 1;
  inline ::google::protobuf::uint64 dupid() const;
  inline void set_dupid(::google::protobuf::uint64 value);

  // optional int32 star = 2;
  inline bool has_star() const;
  inline void clear_star();
  static const int kStarFieldNumber = 2;
  inline ::google::protobuf::int32 star() const;
  inline void set_star(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.DupRecord)
 private:
  inline void set_has_dupid();
  inline void clear_has_dupid();
  inline void set_has_star();
  inline void clear_has_star();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 dupid_;
  ::google::protobuf::int32 star_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_DBProto_2eproto();
  friend void protobuf_AssignDesc_DBProto_2eproto();
  friend void protobuf_ShutdownFile_DBProto_2eproto();

  void InitAsDefaultInstance();
  static DupRecord* default_instance_;
};
// -------------------------------------------------------------------

class DupGroupData : public ::google::protobuf::Message {
 public:
  DupGroupData();
  virtual ~DupGroupData();

  DupGroupData(const DupGroupData& from);

  inline DupGroupData& operator=(const DupGroupData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DupGroupData& default_instance();

  void Swap(DupGroupData* other);

  // implements Message ----------------------------------------------

  DupGroupData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DupGroupData& from);
  void MergeFrom(const DupGroupData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 group = 1;
  inline bool has_group() const;
  inline void clear_group();
  static const int kGroupFieldNumber = 1;
  inline ::google::protobuf::int32 group() const;
  inline void set_group(::google::protobuf::int32 value);

  // optional int32 enterNum = 2;
  inline bool has_enternum() const;
  inline void clear_enternum();
  static const int kEnterNumFieldNumber = 2;
  inline ::google::protobuf::int32 enternum() const;
  inline void set_enternum(::google::protobuf::int32 value);

  // optional int32 buyNum = 3;
  inline bool has_buynum() const;
  inline void clear_buynum();
  static const int kBuyNumFieldNumber = 3;
  inline ::google::protobuf::int32 buynum() const;
  inline void set_buynum(::google::protobuf::int32 value);

  // optional int32 useNum = 4;
  inline bool has_usenum() const;
  inline void clear_usenum();
  static const int kUseNumFieldNumber = 4;
  inline ::google::protobuf::int32 usenum() const;
  inline void set_usenum(::google::protobuf::int32 value);

  // optional uint64 lastFresh = 5;
  inline bool has_lastfresh() const;
  inline void clear_lastfresh();
  static const int kLastFreshFieldNumber = 5;
  inline ::google::protobuf::uint64 lastfresh() const;
  inline void set_lastfresh(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.DupGroupData)
 private:
  inline void set_has_group();
  inline void clear_has_group();
  inline void set_has_enternum();
  inline void clear_has_enternum();
  inline void set_has_buynum();
  inline void clear_has_buynum();
  inline void set_has_usenum();
  inline void clear_has_usenum();
  inline void set_has_lastfresh();
  inline void clear_has_lastfresh();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 group_;
  ::google::protobuf::int32 enternum_;
  ::google::protobuf::int32 buynum_;
  ::google::protobuf::int32 usenum_;
  ::google::protobuf::uint64 lastfresh_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_DBProto_2eproto();
  friend void protobuf_AssignDesc_DBProto_2eproto();
  friend void protobuf_ShutdownFile_DBProto_2eproto();

  void InitAsDefaultInstance();
  static DupGroupData* default_instance_;
};
// -------------------------------------------------------------------

class DupTowerDBRecordEntry : public ::google::protobuf::Message {
 public:
  DupTowerDBRecordEntry();
  virtual ~DupTowerDBRecordEntry();

  DupTowerDBRecordEntry(const DupTowerDBRecordEntry& from);

  inline DupTowerDBRecordEntry& operator=(const DupTowerDBRecordEntry& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DupTowerDBRecordEntry& default_instance();

  void Swap(DupTowerDBRecordEntry* other);

  // implements Message ----------------------------------------------

  DupTowerDBRecordEntry* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DupTowerDBRecordEntry& from);
  void MergeFrom(const DupTowerDBRecordEntry& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string name = 1;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 1;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // optional uint64 time = 2;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 2;
  inline ::google::protobuf::uint64 time() const;
  inline void set_time(::google::protobuf::uint64 value);

  // optional uint64 cid = 3;
  inline bool has_cid() const;
  inline void clear_cid();
  static const int kCidFieldNumber = 3;
  inline ::google::protobuf::uint64 cid() const;
  inline void set_cid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.DupTowerDBRecordEntry)
 private:
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_time();
  inline void clear_has_time();
  inline void set_has_cid();
  inline void clear_has_cid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* name_;
  ::google::protobuf::uint64 time_;
  ::google::protobuf::uint64 cid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_DBProto_2eproto();
  friend void protobuf_AssignDesc_DBProto_2eproto();
  friend void protobuf_ShutdownFile_DBProto_2eproto();

  void InitAsDefaultInstance();
  static DupTowerDBRecordEntry* default_instance_;
};
// -------------------------------------------------------------------

class DupTowerDBRecord : public ::google::protobuf::Message {
 public:
  DupTowerDBRecord();
  virtual ~DupTowerDBRecord();

  DupTowerDBRecord(const DupTowerDBRecord& from);

  inline DupTowerDBRecord& operator=(const DupTowerDBRecord& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DupTowerDBRecord& default_instance();

  void Swap(DupTowerDBRecord* other);

  // implements Message ----------------------------------------------

  DupTowerDBRecord* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DupTowerDBRecord& from);
  void MergeFrom(const DupTowerDBRecord& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint64 id() const;
  inline void set_id(::google::protobuf::uint64 value);

  // repeated .proto_ff.DupTowerDBRecordEntry entrys = 2;
  inline int entrys_size() const;
  inline void clear_entrys();
  static const int kEntrysFieldNumber = 2;
  inline const ::proto_ff::DupTowerDBRecordEntry& entrys(int index) const;
  inline ::proto_ff::DupTowerDBRecordEntry* mutable_entrys(int index);
  inline ::proto_ff::DupTowerDBRecordEntry* add_entrys();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::DupTowerDBRecordEntry >&
      entrys() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::DupTowerDBRecordEntry >*
      mutable_entrys();

  // @@protoc_insertion_point(class_scope:proto_ff.DupTowerDBRecord)
 private:
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 id_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::DupTowerDBRecordEntry > entrys_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_DBProto_2eproto();
  friend void protobuf_AssignDesc_DBProto_2eproto();
  friend void protobuf_ShutdownFile_DBProto_2eproto();

  void InitAsDefaultInstance();
  static DupTowerDBRecord* default_instance_;
};
// -------------------------------------------------------------------

class DupTowerDBData : public ::google::protobuf::Message {
 public:
  DupTowerDBData();
  virtual ~DupTowerDBData();

  DupTowerDBData(const DupTowerDBData& from);

  inline DupTowerDBData& operator=(const DupTowerDBData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DupTowerDBData& default_instance();

  void Swap(DupTowerDBData* other);

  // implements Message ----------------------------------------------

  DupTowerDBData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DupTowerDBData& from);
  void MergeFrom(const DupTowerDBData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 pass_dupId = 1;
  inline bool has_pass_dupid() const;
  inline void clear_pass_dupid();
  static const int kPassDupIdFieldNumber = 1;
  inline ::google::protobuf::uint64 pass_dupid() const;
  inline void set_pass_dupid(::google::protobuf::uint64 value);

  // repeated uint64 ids = 2;
  inline int ids_size() const;
  inline void clear_ids();
  static const int kIdsFieldNumber = 2;
  inline ::google::protobuf::uint64 ids(int index) const;
  inline void set_ids(int index, ::google::protobuf::uint64 value);
  inline void add_ids(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      ids() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_ids();

  // @@protoc_insertion_point(class_scope:proto_ff.DupTowerDBData)
 private:
  inline void set_has_pass_dupid();
  inline void clear_has_pass_dupid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 pass_dupid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > ids_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_DBProto_2eproto();
  friend void protobuf_AssignDesc_DBProto_2eproto();
  friend void protobuf_ShutdownFile_DBProto_2eproto();

  void InitAsDefaultInstance();
  static DupTowerDBData* default_instance_;
};
// -------------------------------------------------------------------

class ComDupDBData : public ::google::protobuf::Message {
 public:
  ComDupDBData();
  virtual ~ComDupDBData();

  ComDupDBData(const ComDupDBData& from);

  inline ComDupDBData& operator=(const ComDupDBData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ComDupDBData& default_instance();

  void Swap(ComDupDBData* other);

  // implements Message ----------------------------------------------

  ComDupDBData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ComDupDBData& from);
  void MergeFrom(const ComDupDBData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 pass_dupId = 1;
  inline bool has_pass_dupid() const;
  inline void clear_pass_dupid();
  static const int kPassDupIdFieldNumber = 1;
  inline ::google::protobuf::uint64 pass_dupid() const;
  inline void set_pass_dupid(::google::protobuf::uint64 value);

  // optional int32 star = 2;
  inline bool has_star() const;
  inline void clear_star();
  static const int kStarFieldNumber = 2;
  inline ::google::protobuf::int32 star() const;
  inline void set_star(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.ComDupDBData)
 private:
  inline void set_has_pass_dupid();
  inline void clear_has_pass_dupid();
  inline void set_has_star();
  inline void clear_has_star();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 pass_dupid_;
  ::google::protobuf::int32 star_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_DBProto_2eproto();
  friend void protobuf_AssignDesc_DBProto_2eproto();
  friend void protobuf_ShutdownFile_DBProto_2eproto();

  void InitAsDefaultInstance();
  static ComDupDBData* default_instance_;
};
// -------------------------------------------------------------------

class DupDBData : public ::google::protobuf::Message {
 public:
  DupDBData();
  virtual ~DupDBData();

  DupDBData(const DupDBData& from);

  inline DupDBData& operator=(const DupDBData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DupDBData& default_instance();

  void Swap(DupDBData* other);

  // implements Message ----------------------------------------------

  DupDBData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DupDBData& from);
  void MergeFrom(const DupDBData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.DupRecord record = 1;
  inline int record_size() const;
  inline void clear_record();
  static const int kRecordFieldNumber = 1;
  inline const ::proto_ff::DupRecord& record(int index) const;
  inline ::proto_ff::DupRecord* mutable_record(int index);
  inline ::proto_ff::DupRecord* add_record();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::DupRecord >&
      record() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::DupRecord >*
      mutable_record();

  // repeated .proto_ff.DupGroupData groups = 2;
  inline int groups_size() const;
  inline void clear_groups();
  static const int kGroupsFieldNumber = 2;
  inline const ::proto_ff::DupGroupData& groups(int index) const;
  inline ::proto_ff::DupGroupData* mutable_groups(int index);
  inline ::proto_ff::DupGroupData* add_groups();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::DupGroupData >&
      groups() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::DupGroupData >*
      mutable_groups();

  // optional .proto_ff.DupTowerDBData tower = 3;
  inline bool has_tower() const;
  inline void clear_tower();
  static const int kTowerFieldNumber = 3;
  inline const ::proto_ff::DupTowerDBData& tower() const;
  inline ::proto_ff::DupTowerDBData* mutable_tower();
  inline ::proto_ff::DupTowerDBData* release_tower();
  inline void set_allocated_tower(::proto_ff::DupTowerDBData* tower);

  // optional .proto_ff.ComDupDBData level = 4;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 4;
  inline const ::proto_ff::ComDupDBData& level() const;
  inline ::proto_ff::ComDupDBData* mutable_level();
  inline ::proto_ff::ComDupDBData* release_level();
  inline void set_allocated_level(::proto_ff::ComDupDBData* level);

  // @@protoc_insertion_point(class_scope:proto_ff.DupDBData)
 private:
  inline void set_has_tower();
  inline void clear_has_tower();
  inline void set_has_level();
  inline void clear_has_level();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::DupRecord > record_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::DupGroupData > groups_;
  ::proto_ff::DupTowerDBData* tower_;
  ::proto_ff::ComDupDBData* level_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_DBProto_2eproto();
  friend void protobuf_AssignDesc_DBProto_2eproto();
  friend void protobuf_ShutdownFile_DBProto_2eproto();

  void InitAsDefaultInstance();
  static DupDBData* default_instance_;
};
// -------------------------------------------------------------------

class BuffDBInfo : public ::google::protobuf::Message {
 public:
  BuffDBInfo();
  virtual ~BuffDBInfo();

  BuffDBInfo(const BuffDBInfo& from);

  inline BuffDBInfo& operator=(const BuffDBInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BuffDBInfo& default_instance();

  void Swap(BuffDBInfo* other);

  // implements Message ----------------------------------------------

  BuffDBInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BuffDBInfo& from);
  void MergeFrom(const BuffDBInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 buffid = 1;
  inline bool has_buffid() const;
  inline void clear_buffid();
  static const int kBuffidFieldNumber = 1;
  inline ::google::protobuf::uint64 buffid() const;
  inline void set_buffid(::google::protobuf::uint64 value);

  // optional uint64 index = 2;
  inline bool has_index() const;
  inline void clear_index();
  static const int kIndexFieldNumber = 2;
  inline ::google::protobuf::uint64 index() const;
  inline void set_index(::google::protobuf::uint64 value);

  // optional uint64 skillid = 3;
  inline bool has_skillid() const;
  inline void clear_skillid();
  static const int kSkillidFieldNumber = 3;
  inline ::google::protobuf::uint64 skillid() const;
  inline void set_skillid(::google::protobuf::uint64 value);

  // optional uint32 skilllev = 4;
  inline bool has_skilllev() const;
  inline void clear_skilllev();
  static const int kSkilllevFieldNumber = 4;
  inline ::google::protobuf::uint32 skilllev() const;
  inline void set_skilllev(::google::protobuf::uint32 value);

  // optional bool is_forever = 5;
  inline bool has_is_forever() const;
  inline void clear_is_forever();
  static const int kIsForeverFieldNumber = 5;
  inline bool is_forever() const;
  inline void set_is_forever(bool value);

  // optional int64 startmsec = 6;
  inline bool has_startmsec() const;
  inline void clear_startmsec();
  static const int kStartmsecFieldNumber = 6;
  inline ::google::protobuf::int64 startmsec() const;
  inline void set_startmsec(::google::protobuf::int64 value);

  // optional bool is_effect = 7;
  inline bool has_is_effect() const;
  inline void clear_is_effect();
  static const int kIsEffectFieldNumber = 7;
  inline bool is_effect() const;
  inline void set_is_effect(bool value);

  // optional int64 param1 = 8;
  inline bool has_param1() const;
  inline void clear_param1();
  static const int kParam1FieldNumber = 8;
  inline ::google::protobuf::int64 param1() const;
  inline void set_param1(::google::protobuf::int64 value);

  // optional int64 param2 = 9;
  inline bool has_param2() const;
  inline void clear_param2();
  static const int kParam2FieldNumber = 9;
  inline ::google::protobuf::int64 param2() const;
  inline void set_param2(::google::protobuf::int64 value);

  // optional int64 extramsec = 10;
  inline bool has_extramsec() const;
  inline void clear_extramsec();
  static const int kExtramsecFieldNumber = 10;
  inline ::google::protobuf::int64 extramsec() const;
  inline void set_extramsec(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.BuffDBInfo)
 private:
  inline void set_has_buffid();
  inline void clear_has_buffid();
  inline void set_has_index();
  inline void clear_has_index();
  inline void set_has_skillid();
  inline void clear_has_skillid();
  inline void set_has_skilllev();
  inline void clear_has_skilllev();
  inline void set_has_is_forever();
  inline void clear_has_is_forever();
  inline void set_has_startmsec();
  inline void clear_has_startmsec();
  inline void set_has_is_effect();
  inline void clear_has_is_effect();
  inline void set_has_param1();
  inline void clear_has_param1();
  inline void set_has_param2();
  inline void clear_has_param2();
  inline void set_has_extramsec();
  inline void clear_has_extramsec();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 buffid_;
  ::google::protobuf::uint64 index_;
  ::google::protobuf::uint64 skillid_;
  ::google::protobuf::uint32 skilllev_;
  bool is_forever_;
  bool is_effect_;
  ::google::protobuf::int64 startmsec_;
  ::google::protobuf::int64 param1_;
  ::google::protobuf::int64 param2_;
  ::google::protobuf::int64 extramsec_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(10 + 31) / 32];

  friend void  protobuf_AddDesc_DBProto_2eproto();
  friend void protobuf_AssignDesc_DBProto_2eproto();
  friend void protobuf_ShutdownFile_DBProto_2eproto();

  void InitAsDefaultInstance();
  static BuffDBInfo* default_instance_;
};
// -------------------------------------------------------------------

class BuffDBCdInfo : public ::google::protobuf::Message {
 public:
  BuffDBCdInfo();
  virtual ~BuffDBCdInfo();

  BuffDBCdInfo(const BuffDBCdInfo& from);

  inline BuffDBCdInfo& operator=(const BuffDBCdInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BuffDBCdInfo& default_instance();

  void Swap(BuffDBCdInfo* other);

  // implements Message ----------------------------------------------

  BuffDBCdInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BuffDBCdInfo& from);
  void MergeFrom(const BuffDBCdInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 buffid = 1;
  inline bool has_buffid() const;
  inline void clear_buffid();
  static const int kBuffidFieldNumber = 1;
  inline ::google::protobuf::uint64 buffid() const;
  inline void set_buffid(::google::protobuf::uint64 value);

  // optional uint64 lastmsec = 2;
  inline bool has_lastmsec() const;
  inline void clear_lastmsec();
  static const int kLastmsecFieldNumber = 2;
  inline ::google::protobuf::uint64 lastmsec() const;
  inline void set_lastmsec(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.BuffDBCdInfo)
 private:
  inline void set_has_buffid();
  inline void clear_has_buffid();
  inline void set_has_lastmsec();
  inline void clear_has_lastmsec();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 buffid_;
  ::google::protobuf::uint64 lastmsec_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_DBProto_2eproto();
  friend void protobuf_AssignDesc_DBProto_2eproto();
  friend void protobuf_ShutdownFile_DBProto_2eproto();

  void InitAsDefaultInstance();
  static BuffDBCdInfo* default_instance_;
};
// -------------------------------------------------------------------

class BuffDBData : public ::google::protobuf::Message {
 public:
  BuffDBData();
  virtual ~BuffDBData();

  BuffDBData(const BuffDBData& from);

  inline BuffDBData& operator=(const BuffDBData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BuffDBData& default_instance();

  void Swap(BuffDBData* other);

  // implements Message ----------------------------------------------

  BuffDBData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BuffDBData& from);
  void MergeFrom(const BuffDBData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.BuffDBInfo info_lst = 1;
  inline int info_lst_size() const;
  inline void clear_info_lst();
  static const int kInfoLstFieldNumber = 1;
  inline const ::proto_ff::BuffDBInfo& info_lst(int index) const;
  inline ::proto_ff::BuffDBInfo* mutable_info_lst(int index);
  inline ::proto_ff::BuffDBInfo* add_info_lst();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::BuffDBInfo >&
      info_lst() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::BuffDBInfo >*
      mutable_info_lst();

  // repeated .proto_ff.BuffDBCdInfo cd_lst = 2;
  inline int cd_lst_size() const;
  inline void clear_cd_lst();
  static const int kCdLstFieldNumber = 2;
  inline const ::proto_ff::BuffDBCdInfo& cd_lst(int index) const;
  inline ::proto_ff::BuffDBCdInfo* mutable_cd_lst(int index);
  inline ::proto_ff::BuffDBCdInfo* add_cd_lst();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::BuffDBCdInfo >&
      cd_lst() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::BuffDBCdInfo >*
      mutable_cd_lst();

  // @@protoc_insertion_point(class_scope:proto_ff.BuffDBData)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::BuffDBInfo > info_lst_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::BuffDBCdInfo > cd_lst_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_DBProto_2eproto();
  friend void protobuf_AssignDesc_DBProto_2eproto();
  friend void protobuf_ShutdownFile_DBProto_2eproto();

  void InitAsDefaultInstance();
  static BuffDBData* default_instance_;
};
// -------------------------------------------------------------------

class BossSimpleInfoDB : public ::google::protobuf::Message {
 public:
  BossSimpleInfoDB();
  virtual ~BossSimpleInfoDB();

  BossSimpleInfoDB(const BossSimpleInfoDB& from);

  inline BossSimpleInfoDB& operator=(const BossSimpleInfoDB& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BossSimpleInfoDB& default_instance();

  void Swap(BossSimpleInfoDB* other);

  // implements Message ----------------------------------------------

  BossSimpleInfoDB* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BossSimpleInfoDB& from);
  void MergeFrom(const BossSimpleInfoDB& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 boss_type = 1;
  inline bool has_boss_type() const;
  inline void clear_boss_type();
  static const int kBossTypeFieldNumber = 1;
  inline ::google::protobuf::int32 boss_type() const;
  inline void set_boss_type(::google::protobuf::int32 value);

  // optional int32 cur_num = 2;
  inline bool has_cur_num() const;
  inline void clear_cur_num();
  static const int kCurNumFieldNumber = 2;
  inline ::google::protobuf::int32 cur_num() const;
  inline void set_cur_num(::google::protobuf::int32 value);

  // optional int32 back_num = 4;
  inline bool has_back_num() const;
  inline void clear_back_num();
  static const int kBackNumFieldNumber = 4;
  inline ::google::protobuf::int32 back_num() const;
  inline void set_back_num(::google::protobuf::int32 value);

  // optional int32 back_max_num = 5;
  inline bool has_back_max_num() const;
  inline void clear_back_max_num();
  static const int kBackMaxNumFieldNumber = 5;
  inline ::google::protobuf::int32 back_max_num() const;
  inline void set_back_max_num(::google::protobuf::int32 value);

  // optional int32 enter_num = 6;
  inline bool has_enter_num() const;
  inline void clear_enter_num();
  static const int kEnterNumFieldNumber = 6;
  inline ::google::protobuf::int32 enter_num() const;
  inline void set_enter_num(::google::protobuf::int32 value);

  // optional int32 use_item_num = 7;
  inline bool has_use_item_num() const;
  inline void clear_use_item_num();
  static const int kUseItemNumFieldNumber = 7;
  inline ::google::protobuf::int32 use_item_num() const;
  inline void set_use_item_num(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.BossSimpleInfoDB)
 private:
  inline void set_has_boss_type();
  inline void clear_has_boss_type();
  inline void set_has_cur_num();
  inline void clear_has_cur_num();
  inline void set_has_back_num();
  inline void clear_has_back_num();
  inline void set_has_back_max_num();
  inline void clear_has_back_max_num();
  inline void set_has_enter_num();
  inline void clear_has_enter_num();
  inline void set_has_use_item_num();
  inline void clear_has_use_item_num();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 boss_type_;
  ::google::protobuf::int32 cur_num_;
  ::google::protobuf::int32 back_num_;
  ::google::protobuf::int32 back_max_num_;
  ::google::protobuf::int32 enter_num_;
  ::google::protobuf::int32 use_item_num_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_DBProto_2eproto();
  friend void protobuf_AssignDesc_DBProto_2eproto();
  friend void protobuf_ShutdownFile_DBProto_2eproto();

  void InitAsDefaultInstance();
  static BossSimpleInfoDB* default_instance_;
};
// -------------------------------------------------------------------

class BossDBData : public ::google::protobuf::Message {
 public:
  BossDBData();
  virtual ~BossDBData();

  BossDBData(const BossDBData& from);

  inline BossDBData& operator=(const BossDBData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BossDBData& default_instance();

  void Swap(BossDBData* other);

  // implements Message ----------------------------------------------

  BossDBData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BossDBData& from);
  void MergeFrom(const BossDBData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.BossSimpleInfoDB infos = 1;
  inline int infos_size() const;
  inline void clear_infos();
  static const int kInfosFieldNumber = 1;
  inline const ::proto_ff::BossSimpleInfoDB& infos(int index) const;
  inline ::proto_ff::BossSimpleInfoDB* mutable_infos(int index);
  inline ::proto_ff::BossSimpleInfoDB* add_infos();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::BossSimpleInfoDB >&
      infos() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::BossSimpleInfoDB >*
      mutable_infos();

  // optional uint64 lastTime = 2;
  inline bool has_lasttime() const;
  inline void clear_lasttime();
  static const int kLastTimeFieldNumber = 2;
  inline ::google::protobuf::uint64 lasttime() const;
  inline void set_lasttime(::google::protobuf::uint64 value);

  // repeated int64 attents = 3;
  inline int attents_size() const;
  inline void clear_attents();
  static const int kAttentsFieldNumber = 3;
  inline ::google::protobuf::int64 attents(int index) const;
  inline void set_attents(int index, ::google::protobuf::int64 value);
  inline void add_attents(::google::protobuf::int64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      attents() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_attents();

  // @@protoc_insertion_point(class_scope:proto_ff.BossDBData)
 private:
  inline void set_has_lasttime();
  inline void clear_has_lasttime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::BossSimpleInfoDB > infos_;
  ::google::protobuf::uint64 lasttime_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > attents_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_DBProto_2eproto();
  friend void protobuf_AssignDesc_DBProto_2eproto();
  friend void protobuf_ShutdownFile_DBProto_2eproto();

  void InitAsDefaultInstance();
  static BossDBData* default_instance_;
};
// -------------------------------------------------------------------

class VipDBData : public ::google::protobuf::Message {
 public:
  VipDBData();
  virtual ~VipDBData();

  VipDBData(const VipDBData& from);

  inline VipDBData& operator=(const VipDBData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const VipDBData& default_instance();

  void Swap(VipDBData* other);

  // implements Message ----------------------------------------------

  VipDBData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const VipDBData& from);
  void MergeFrom(const VipDBData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 vipExp = 1;
  inline bool has_vipexp() const;
  inline void clear_vipexp();
  static const int kVipExpFieldNumber = 1;
  inline ::google::protobuf::int32 vipexp() const;
  inline void set_vipexp(::google::protobuf::int32 value);

  // optional int32 expDiamond = 2;
  inline bool has_expdiamond() const;
  inline void clear_expdiamond();
  static const int kExpDiamondFieldNumber = 2;
  inline ::google::protobuf::int32 expdiamond() const;
  inline void set_expdiamond(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.VipDBData)
 private:
  inline void set_has_vipexp();
  inline void clear_has_vipexp();
  inline void set_has_expdiamond();
  inline void clear_has_expdiamond();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 vipexp_;
  ::google::protobuf::int32 expdiamond_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_DBProto_2eproto();
  friend void protobuf_AssignDesc_DBProto_2eproto();
  friend void protobuf_ShutdownFile_DBProto_2eproto();

  void InitAsDefaultInstance();
  static VipDBData* default_instance_;
};
// -------------------------------------------------------------------

class RoleDBData : public ::google::protobuf::Message {
 public:
  RoleDBData();
  virtual ~RoleDBData();

  RoleDBData(const RoleDBData& from);

  inline RoleDBData& operator=(const RoleDBData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RoleDBData& default_instance();

  void Swap(RoleDBData* other);

  // implements Message ----------------------------------------------

  RoleDBData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RoleDBData& from);
  void MergeFrom(const RoleDBData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 cid = 1;
  inline bool has_cid() const;
  inline void clear_cid();
  static const int kCidFieldNumber = 1;
  inline ::google::protobuf::uint64 cid() const;
  inline void set_cid(::google::protobuf::uint64 value);

  // optional uint32 zid = 2;
  inline bool has_zid() const;
  inline void clear_zid();
  static const int kZidFieldNumber = 2;
  inline ::google::protobuf::uint32 zid() const;
  inline void set_zid(::google::protobuf::uint32 value);

  // optional uint32 uid = 3;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 3;
  inline ::google::protobuf::uint32 uid() const;
  inline void set_uid(::google::protobuf::uint32 value);

  // optional .proto_ff.RoleDBBaseData base = 4;
  inline bool has_base() const;
  inline void clear_base();
  static const int kBaseFieldNumber = 4;
  inline const ::proto_ff::RoleDBBaseData& base() const;
  inline ::proto_ff::RoleDBBaseData* mutable_base();
  inline ::proto_ff::RoleDBBaseData* release_base();
  inline void set_allocated_base(::proto_ff::RoleDBBaseData* base);

  // optional .proto_ff.RoleDBBagData bag = 5;
  inline bool has_bag() const;
  inline void clear_bag();
  static const int kBagFieldNumber = 5;
  inline const ::proto_ff::RoleDBBagData& bag() const;
  inline ::proto_ff::RoleDBBagData* mutable_bag();
  inline ::proto_ff::RoleDBBagData* release_bag();
  inline void set_allocated_bag(::proto_ff::RoleDBBagData* bag);

  // optional .proto_ff.RoleDBEquipData equip = 6;
  inline bool has_equip() const;
  inline void clear_equip();
  static const int kEquipFieldNumber = 6;
  inline const ::proto_ff::RoleDBEquipData& equip() const;
  inline ::proto_ff::RoleDBEquipData* mutable_equip();
  inline ::proto_ff::RoleDBEquipData* release_equip();
  inline void set_allocated_equip(::proto_ff::RoleDBEquipData* equip);

  // optional .proto_ff.CharacterDBTaskData task = 7;
  inline bool has_task() const;
  inline void clear_task();
  static const int kTaskFieldNumber = 7;
  inline const ::proto_ff::CharacterDBTaskData& task() const;
  inline ::proto_ff::CharacterDBTaskData* mutable_task();
  inline ::proto_ff::CharacterDBTaskData* release_task();
  inline void set_allocated_task(::proto_ff::CharacterDBTaskData* task);

  // optional .proto_ff.FunctionUnlockInfo unlockinfo = 8;
  inline bool has_unlockinfo() const;
  inline void clear_unlockinfo();
  static const int kUnlockinfoFieldNumber = 8;
  inline const ::proto_ff::FunctionUnlockInfo& unlockinfo() const;
  inline ::proto_ff::FunctionUnlockInfo* mutable_unlockinfo();
  inline ::proto_ff::FunctionUnlockInfo* release_unlockinfo();
  inline void set_allocated_unlockinfo(::proto_ff::FunctionUnlockInfo* unlockinfo);

  // optional .proto_ff.GrowDBData grow = 9;
  inline bool has_grow() const;
  inline void clear_grow();
  static const int kGrowFieldNumber = 9;
  inline const ::proto_ff::GrowDBData& grow() const;
  inline ::proto_ff::GrowDBData* mutable_grow();
  inline ::proto_ff::GrowDBData* release_grow();
  inline void set_allocated_grow(::proto_ff::GrowDBData* grow);

  // optional .proto_ff.MiniDBData mini = 10;
  inline bool has_mini() const;
  inline void clear_mini();
  static const int kMiniFieldNumber = 10;
  inline const ::proto_ff::MiniDBData& mini() const;
  inline ::proto_ff::MiniDBData* mutable_mini();
  inline ::proto_ff::MiniDBData* release_mini();
  inline void set_allocated_mini(::proto_ff::MiniDBData* mini);

  // optional .proto_ff.FacadeDBData facade = 11;
  inline bool has_facade() const;
  inline void clear_facade();
  static const int kFacadeFieldNumber = 11;
  inline const ::proto_ff::FacadeDBData& facade() const;
  inline ::proto_ff::FacadeDBData* mutable_facade();
  inline ::proto_ff::FacadeDBData* release_facade();
  inline void set_allocated_facade(::proto_ff::FacadeDBData* facade);

  // optional .proto_ff.SkillDBData skill = 12;
  inline bool has_skill() const;
  inline void clear_skill();
  static const int kSkillFieldNumber = 12;
  inline const ::proto_ff::SkillDBData& skill() const;
  inline ::proto_ff::SkillDBData* mutable_skill();
  inline ::proto_ff::SkillDBData* release_skill();
  inline void set_allocated_skill(::proto_ff::SkillDBData* skill);

  // optional .proto_ff.MiniActivityDBData mini_activity = 13;
  inline bool has_mini_activity() const;
  inline void clear_mini_activity();
  static const int kMiniActivityFieldNumber = 13;
  inline const ::proto_ff::MiniActivityDBData& mini_activity() const;
  inline ::proto_ff::MiniActivityDBData* mutable_mini_activity();
  inline ::proto_ff::MiniActivityDBData* release_mini_activity();
  inline void set_allocated_mini_activity(::proto_ff::MiniActivityDBData* mini_activity);

  // optional .proto_ff.DupDBData dup = 14;
  inline bool has_dup() const;
  inline void clear_dup();
  static const int kDupFieldNumber = 14;
  inline const ::proto_ff::DupDBData& dup() const;
  inline ::proto_ff::DupDBData* mutable_dup();
  inline ::proto_ff::DupDBData* release_dup();
  inline void set_allocated_dup(::proto_ff::DupDBData* dup);

  // optional .proto_ff.BuffDBData buff = 15;
  inline bool has_buff() const;
  inline void clear_buff();
  static const int kBuffFieldNumber = 15;
  inline const ::proto_ff::BuffDBData& buff() const;
  inline ::proto_ff::BuffDBData* mutable_buff();
  inline ::proto_ff::BuffDBData* release_buff();
  inline void set_allocated_buff(::proto_ff::BuffDBData* buff);

  // optional .proto_ff.BossDBData boss = 16;
  inline bool has_boss() const;
  inline void clear_boss();
  static const int kBossFieldNumber = 16;
  inline const ::proto_ff::BossDBData& boss() const;
  inline ::proto_ff::BossDBData* mutable_boss();
  inline ::proto_ff::BossDBData* release_boss();
  inline void set_allocated_boss(::proto_ff::BossDBData* boss);

  // optional .proto_ff.VipDBData vip = 17;
  inline bool has_vip() const;
  inline void clear_vip();
  static const int kVipFieldNumber = 17;
  inline const ::proto_ff::VipDBData& vip() const;
  inline ::proto_ff::VipDBData* mutable_vip();
  inline ::proto_ff::VipDBData* release_vip();
  inline void set_allocated_vip(::proto_ff::VipDBData* vip);

  // @@protoc_insertion_point(class_scope:proto_ff.RoleDBData)
 private:
  inline void set_has_cid();
  inline void clear_has_cid();
  inline void set_has_zid();
  inline void clear_has_zid();
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_base();
  inline void clear_has_base();
  inline void set_has_bag();
  inline void clear_has_bag();
  inline void set_has_equip();
  inline void clear_has_equip();
  inline void set_has_task();
  inline void clear_has_task();
  inline void set_has_unlockinfo();
  inline void clear_has_unlockinfo();
  inline void set_has_grow();
  inline void clear_has_grow();
  inline void set_has_mini();
  inline void clear_has_mini();
  inline void set_has_facade();
  inline void clear_has_facade();
  inline void set_has_skill();
  inline void clear_has_skill();
  inline void set_has_mini_activity();
  inline void clear_has_mini_activity();
  inline void set_has_dup();
  inline void clear_has_dup();
  inline void set_has_buff();
  inline void clear_has_buff();
  inline void set_has_boss();
  inline void clear_has_boss();
  inline void set_has_vip();
  inline void clear_has_vip();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 cid_;
  ::google::protobuf::uint32 zid_;
  ::google::protobuf::uint32 uid_;
  ::proto_ff::RoleDBBaseData* base_;
  ::proto_ff::RoleDBBagData* bag_;
  ::proto_ff::RoleDBEquipData* equip_;
  ::proto_ff::CharacterDBTaskData* task_;
  ::proto_ff::FunctionUnlockInfo* unlockinfo_;
  ::proto_ff::GrowDBData* grow_;
  ::proto_ff::MiniDBData* mini_;
  ::proto_ff::FacadeDBData* facade_;
  ::proto_ff::SkillDBData* skill_;
  ::proto_ff::MiniActivityDBData* mini_activity_;
  ::proto_ff::DupDBData* dup_;
  ::proto_ff::BuffDBData* buff_;
  ::proto_ff::BossDBData* boss_;
  ::proto_ff::VipDBData* vip_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(17 + 31) / 32];

  friend void  protobuf_AddDesc_DBProto_2eproto();
  friend void protobuf_AssignDesc_DBProto_2eproto();
  friend void protobuf_ShutdownFile_DBProto_2eproto();

  void InitAsDefaultInstance();
  static RoleDBData* default_instance_;
};
// -------------------------------------------------------------------

class LoginRoleDBProto : public ::google::protobuf::Message {
 public:
  LoginRoleDBProto();
  virtual ~LoginRoleDBProto();

  LoginRoleDBProto(const LoginRoleDBProto& from);

  inline LoginRoleDBProto& operator=(const LoginRoleDBProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LoginRoleDBProto& default_instance();

  void Swap(LoginRoleDBProto* other);

  // implements Message ----------------------------------------------

  LoginRoleDBProto* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LoginRoleDBProto& from);
  void MergeFrom(const LoginRoleDBProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto_ff.LoginRoleDBProto)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_DBProto_2eproto();
  friend void protobuf_AssignDesc_DBProto_2eproto();
  friend void protobuf_ShutdownFile_DBProto_2eproto();

  void InitAsDefaultInstance();
  static LoginRoleDBProto* default_instance_;
};
// -------------------------------------------------------------------

class RoleListDBReq : public ::google::protobuf::Message {
 public:
  RoleListDBReq();
  virtual ~RoleListDBReq();

  RoleListDBReq(const RoleListDBReq& from);

  inline RoleListDBReq& operator=(const RoleListDBReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RoleListDBReq& default_instance();

  void Swap(RoleListDBReq* other);

  // implements Message ----------------------------------------------

  RoleListDBReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RoleListDBReq& from);
  void MergeFrom(const RoleListDBReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 reqid = 1;
  inline bool has_reqid() const;
  inline void clear_reqid();
  static const int kReqidFieldNumber = 1;
  inline ::google::protobuf::uint64 reqid() const;
  inline void set_reqid(::google::protobuf::uint64 value);

  // optional uint32 uid = 2;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 2;
  inline ::google::protobuf::uint32 uid() const;
  inline void set_uid(::google::protobuf::uint32 value);

  // optional uint32 gateid = 3;
  inline bool has_gateid() const;
  inline void clear_gateid();
  static const int kGateidFieldNumber = 3;
  inline ::google::protobuf::uint32 gateid() const;
  inline void set_gateid(::google::protobuf::uint32 value);

  // optional uint32 born_zid = 4;
  inline bool has_born_zid() const;
  inline void clear_born_zid();
  static const int kBornZidFieldNumber = 4;
  inline ::google::protobuf::uint32 born_zid() const;
  inline void set_born_zid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.RoleListDBReq)
 private:
  inline void set_has_reqid();
  inline void clear_has_reqid();
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_gateid();
  inline void clear_has_gateid();
  inline void set_has_born_zid();
  inline void clear_has_born_zid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 reqid_;
  ::google::protobuf::uint32 uid_;
  ::google::protobuf::uint32 gateid_;
  ::google::protobuf::uint32 born_zid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_DBProto_2eproto();
  friend void protobuf_AssignDesc_DBProto_2eproto();
  friend void protobuf_ShutdownFile_DBProto_2eproto();

  void InitAsDefaultInstance();
  static RoleListDBReq* default_instance_;
};
// -------------------------------------------------------------------

class RoleListDBRsp : public ::google::protobuf::Message {
 public:
  RoleListDBRsp();
  virtual ~RoleListDBRsp();

  RoleListDBRsp(const RoleListDBRsp& from);

  inline RoleListDBRsp& operator=(const RoleListDBRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RoleListDBRsp& default_instance();

  void Swap(RoleListDBRsp* other);

  // implements Message ----------------------------------------------

  RoleListDBRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RoleListDBRsp& from);
  void MergeFrom(const RoleListDBRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 ret = 1;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 1;
  inline ::google::protobuf::int32 ret() const;
  inline void set_ret(::google::protobuf::int32 value);

  // optional uint64 reqid = 2;
  inline bool has_reqid() const;
  inline void clear_reqid();
  static const int kReqidFieldNumber = 2;
  inline ::google::protobuf::uint64 reqid() const;
  inline void set_reqid(::google::protobuf::uint64 value);

  // optional uint32 uid = 3;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 3;
  inline ::google::protobuf::uint32 uid() const;
  inline void set_uid(::google::protobuf::uint32 value);

  // optional uint32 gateid = 4;
  inline bool has_gateid() const;
  inline void clear_gateid();
  static const int kGateidFieldNumber = 4;
  inline ::google::protobuf::uint32 gateid() const;
  inline void set_gateid(::google::protobuf::uint32 value);

  // repeated .proto_ff.RoleListDBProto role_lst = 5;
  inline int role_lst_size() const;
  inline void clear_role_lst();
  static const int kRoleLstFieldNumber = 5;
  inline const ::proto_ff::RoleListDBProto& role_lst(int index) const;
  inline ::proto_ff::RoleListDBProto* mutable_role_lst(int index);
  inline ::proto_ff::RoleListDBProto* add_role_lst();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::RoleListDBProto >&
      role_lst() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::RoleListDBProto >*
      mutable_role_lst();

  // optional uint32 regnum = 6;
  inline bool has_regnum() const;
  inline void clear_regnum();
  static const int kRegnumFieldNumber = 6;
  inline ::google::protobuf::uint32 regnum() const;
  inline void set_regnum(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.RoleListDBRsp)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();
  inline void set_has_reqid();
  inline void clear_has_reqid();
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_gateid();
  inline void clear_has_gateid();
  inline void set_has_regnum();
  inline void clear_has_regnum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 reqid_;
  ::google::protobuf::int32 ret_;
  ::google::protobuf::uint32 uid_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::RoleListDBProto > role_lst_;
  ::google::protobuf::uint32 gateid_;
  ::google::protobuf::uint32 regnum_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_DBProto_2eproto();
  friend void protobuf_AssignDesc_DBProto_2eproto();
  friend void protobuf_ShutdownFile_DBProto_2eproto();

  void InitAsDefaultInstance();
  static RoleListDBRsp* default_instance_;
};
// -------------------------------------------------------------------

class CreateRoleDBReq : public ::google::protobuf::Message {
 public:
  CreateRoleDBReq();
  virtual ~CreateRoleDBReq();

  CreateRoleDBReq(const CreateRoleDBReq& from);

  inline CreateRoleDBReq& operator=(const CreateRoleDBReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CreateRoleDBReq& default_instance();

  void Swap(CreateRoleDBReq* other);

  // implements Message ----------------------------------------------

  CreateRoleDBReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CreateRoleDBReq& from);
  void MergeFrom(const CreateRoleDBReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 reqid = 1;
  inline bool has_reqid() const;
  inline void clear_reqid();
  static const int kReqidFieldNumber = 1;
  inline ::google::protobuf::uint64 reqid() const;
  inline void set_reqid(::google::protobuf::uint64 value);

  // optional uint32 zid = 2;
  inline bool has_zid() const;
  inline void clear_zid();
  static const int kZidFieldNumber = 2;
  inline ::google::protobuf::uint32 zid() const;
  inline void set_zid(::google::protobuf::uint32 value);

  // optional uint32 gateid = 3;
  inline bool has_gateid() const;
  inline void clear_gateid();
  static const int kGateidFieldNumber = 3;
  inline ::google::protobuf::uint32 gateid() const;
  inline void set_gateid(::google::protobuf::uint32 value);

  // optional .proto_ff.RoleDBData data = 4;
  inline bool has_data() const;
  inline void clear_data();
  static const int kDataFieldNumber = 4;
  inline const ::proto_ff::RoleDBData& data() const;
  inline ::proto_ff::RoleDBData* mutable_data();
  inline ::proto_ff::RoleDBData* release_data();
  inline void set_allocated_data(::proto_ff::RoleDBData* data);

  // optional uint32 uid = 5;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 5;
  inline ::google::protobuf::uint32 uid() const;
  inline void set_uid(::google::protobuf::uint32 value);

  // optional uint32 channel_id = 6;
  inline bool has_channel_id() const;
  inline void clear_channel_id();
  static const int kChannelIdFieldNumber = 6;
  inline ::google::protobuf::uint32 channel_id() const;
  inline void set_channel_id(::google::protobuf::uint32 value);

  // optional uint32 zone_mid = 7;
  inline bool has_zone_mid() const;
  inline void clear_zone_mid();
  static const int kZoneMidFieldNumber = 7;
  inline ::google::protobuf::uint32 zone_mid() const;
  inline void set_zone_mid(::google::protobuf::uint32 value);

  // optional uint32 born_zid = 8;
  inline bool has_born_zid() const;
  inline void clear_born_zid();
  static const int kBornZidFieldNumber = 8;
  inline ::google::protobuf::uint32 born_zid() const;
  inline void set_born_zid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.CreateRoleDBReq)
 private:
  inline void set_has_reqid();
  inline void clear_has_reqid();
  inline void set_has_zid();
  inline void clear_has_zid();
  inline void set_has_gateid();
  inline void clear_has_gateid();
  inline void set_has_data();
  inline void clear_has_data();
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_channel_id();
  inline void clear_has_channel_id();
  inline void set_has_zone_mid();
  inline void clear_has_zone_mid();
  inline void set_has_born_zid();
  inline void clear_has_born_zid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 reqid_;
  ::google::protobuf::uint32 zid_;
  ::google::protobuf::uint32 gateid_;
  ::proto_ff::RoleDBData* data_;
  ::google::protobuf::uint32 uid_;
  ::google::protobuf::uint32 channel_id_;
  ::google::protobuf::uint32 zone_mid_;
  ::google::protobuf::uint32 born_zid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];

  friend void  protobuf_AddDesc_DBProto_2eproto();
  friend void protobuf_AssignDesc_DBProto_2eproto();
  friend void protobuf_ShutdownFile_DBProto_2eproto();

  void InitAsDefaultInstance();
  static CreateRoleDBReq* default_instance_;
};
// -------------------------------------------------------------------

class CreateRoleDBRsp : public ::google::protobuf::Message {
 public:
  CreateRoleDBRsp();
  virtual ~CreateRoleDBRsp();

  CreateRoleDBRsp(const CreateRoleDBRsp& from);

  inline CreateRoleDBRsp& operator=(const CreateRoleDBRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CreateRoleDBRsp& default_instance();

  void Swap(CreateRoleDBRsp* other);

  // implements Message ----------------------------------------------

  CreateRoleDBRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CreateRoleDBRsp& from);
  void MergeFrom(const CreateRoleDBRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 ret = 1;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 1;
  inline ::google::protobuf::int32 ret() const;
  inline void set_ret(::google::protobuf::int32 value);

  // optional uint64 reqid = 2;
  inline bool has_reqid() const;
  inline void clear_reqid();
  static const int kReqidFieldNumber = 2;
  inline ::google::protobuf::uint64 reqid() const;
  inline void set_reqid(::google::protobuf::uint64 value);

  // optional uint32 uid = 3;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 3;
  inline ::google::protobuf::uint32 uid() const;
  inline void set_uid(::google::protobuf::uint32 value);

  // optional uint32 gateid = 4;
  inline bool has_gateid() const;
  inline void clear_gateid();
  static const int kGateidFieldNumber = 4;
  inline ::google::protobuf::uint32 gateid() const;
  inline void set_gateid(::google::protobuf::uint32 value);

  // optional .proto_ff.RoleListDBProto info = 5;
  inline bool has_info() const;
  inline void clear_info();
  static const int kInfoFieldNumber = 5;
  inline const ::proto_ff::RoleListDBProto& info() const;
  inline ::proto_ff::RoleListDBProto* mutable_info();
  inline ::proto_ff::RoleListDBProto* release_info();
  inline void set_allocated_info(::proto_ff::RoleListDBProto* info);

  // optional uint32 born_zid = 6;
  inline bool has_born_zid() const;
  inline void clear_born_zid();
  static const int kBornZidFieldNumber = 6;
  inline ::google::protobuf::uint32 born_zid() const;
  inline void set_born_zid(::google::protobuf::uint32 value);

  // optional .proto_ff.CenterRoleProto simple = 7;
  inline bool has_simple() const;
  inline void clear_simple();
  static const int kSimpleFieldNumber = 7;
  inline const ::proto_ff::CenterRoleProto& simple() const;
  inline ::proto_ff::CenterRoleProto* mutable_simple();
  inline ::proto_ff::CenterRoleProto* release_simple();
  inline void set_allocated_simple(::proto_ff::CenterRoleProto* simple);

  // @@protoc_insertion_point(class_scope:proto_ff.CreateRoleDBRsp)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();
  inline void set_has_reqid();
  inline void clear_has_reqid();
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_gateid();
  inline void clear_has_gateid();
  inline void set_has_info();
  inline void clear_has_info();
  inline void set_has_born_zid();
  inline void clear_has_born_zid();
  inline void set_has_simple();
  inline void clear_has_simple();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 reqid_;
  ::google::protobuf::int32 ret_;
  ::google::protobuf::uint32 uid_;
  ::proto_ff::RoleListDBProto* info_;
  ::google::protobuf::uint32 gateid_;
  ::google::protobuf::uint32 born_zid_;
  ::proto_ff::CenterRoleProto* simple_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  friend void  protobuf_AddDesc_DBProto_2eproto();
  friend void protobuf_AssignDesc_DBProto_2eproto();
  friend void protobuf_ShutdownFile_DBProto_2eproto();

  void InitAsDefaultInstance();
  static CreateRoleDBRsp* default_instance_;
};
// -------------------------------------------------------------------

class RoleInfoDBReq : public ::google::protobuf::Message {
 public:
  RoleInfoDBReq();
  virtual ~RoleInfoDBReq();

  RoleInfoDBReq(const RoleInfoDBReq& from);

  inline RoleInfoDBReq& operator=(const RoleInfoDBReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RoleInfoDBReq& default_instance();

  void Swap(RoleInfoDBReq* other);

  // implements Message ----------------------------------------------

  RoleInfoDBReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RoleInfoDBReq& from);
  void MergeFrom(const RoleInfoDBReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 reqid = 1;
  inline bool has_reqid() const;
  inline void clear_reqid();
  static const int kReqidFieldNumber = 1;
  inline ::google::protobuf::uint64 reqid() const;
  inline void set_reqid(::google::protobuf::uint64 value);

  // optional uint64 cid = 2;
  inline bool has_cid() const;
  inline void clear_cid();
  static const int kCidFieldNumber = 2;
  inline ::google::protobuf::uint64 cid() const;
  inline void set_cid(::google::protobuf::uint64 value);

  // optional int32 change = 3;
  inline bool has_change() const;
  inline void clear_change();
  static const int kChangeFieldNumber = 3;
  inline ::google::protobuf::int32 change() const;
  inline void set_change(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.RoleInfoDBReq)
 private:
  inline void set_has_reqid();
  inline void clear_has_reqid();
  inline void set_has_cid();
  inline void clear_has_cid();
  inline void set_has_change();
  inline void clear_has_change();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 reqid_;
  ::google::protobuf::uint64 cid_;
  ::google::protobuf::int32 change_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_DBProto_2eproto();
  friend void protobuf_AssignDesc_DBProto_2eproto();
  friend void protobuf_ShutdownFile_DBProto_2eproto();

  void InitAsDefaultInstance();
  static RoleInfoDBReq* default_instance_;
};
// -------------------------------------------------------------------

class RoleInfoDBRsp : public ::google::protobuf::Message {
 public:
  RoleInfoDBRsp();
  virtual ~RoleInfoDBRsp();

  RoleInfoDBRsp(const RoleInfoDBRsp& from);

  inline RoleInfoDBRsp& operator=(const RoleInfoDBRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RoleInfoDBRsp& default_instance();

  void Swap(RoleInfoDBRsp* other);

  // implements Message ----------------------------------------------

  RoleInfoDBRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RoleInfoDBRsp& from);
  void MergeFrom(const RoleInfoDBRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 ret = 1;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 1;
  inline ::google::protobuf::int32 ret() const;
  inline void set_ret(::google::protobuf::int32 value);

  // optional uint64 reqid = 2;
  inline bool has_reqid() const;
  inline void clear_reqid();
  static const int kReqidFieldNumber = 2;
  inline ::google::protobuf::uint64 reqid() const;
  inline void set_reqid(::google::protobuf::uint64 value);

  // optional uint64 cid = 3;
  inline bool has_cid() const;
  inline void clear_cid();
  static const int kCidFieldNumber = 3;
  inline ::google::protobuf::uint64 cid() const;
  inline void set_cid(::google::protobuf::uint64 value);

  // optional int32 change = 4;
  inline bool has_change() const;
  inline void clear_change();
  static const int kChangeFieldNumber = 4;
  inline ::google::protobuf::int32 change() const;
  inline void set_change(::google::protobuf::int32 value);

  // optional .proto_ff.RoleDBData info = 5;
  inline bool has_info() const;
  inline void clear_info();
  static const int kInfoFieldNumber = 5;
  inline const ::proto_ff::RoleDBData& info() const;
  inline ::proto_ff::RoleDBData* mutable_info();
  inline ::proto_ff::RoleDBData* release_info();
  inline void set_allocated_info(::proto_ff::RoleDBData* info);

  // @@protoc_insertion_point(class_scope:proto_ff.RoleInfoDBRsp)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();
  inline void set_has_reqid();
  inline void clear_has_reqid();
  inline void set_has_cid();
  inline void clear_has_cid();
  inline void set_has_change();
  inline void clear_has_change();
  inline void set_has_info();
  inline void clear_has_info();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 reqid_;
  ::google::protobuf::int32 ret_;
  ::google::protobuf::int32 change_;
  ::google::protobuf::uint64 cid_;
  ::proto_ff::RoleDBData* info_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_DBProto_2eproto();
  friend void protobuf_AssignDesc_DBProto_2eproto();
  friend void protobuf_ShutdownFile_DBProto_2eproto();

  void InitAsDefaultInstance();
  static RoleInfoDBRsp* default_instance_;
};
// -------------------------------------------------------------------

class RoleInfoUpdateDBReq : public ::google::protobuf::Message {
 public:
  RoleInfoUpdateDBReq();
  virtual ~RoleInfoUpdateDBReq();

  RoleInfoUpdateDBReq(const RoleInfoUpdateDBReq& from);

  inline RoleInfoUpdateDBReq& operator=(const RoleInfoUpdateDBReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RoleInfoUpdateDBReq& default_instance();

  void Swap(RoleInfoUpdateDBReq* other);

  // implements Message ----------------------------------------------

  RoleInfoUpdateDBReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RoleInfoUpdateDBReq& from);
  void MergeFrom(const RoleInfoUpdateDBReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 cid = 1;
  inline bool has_cid() const;
  inline void clear_cid();
  static const int kCidFieldNumber = 1;
  inline ::google::protobuf::uint64 cid() const;
  inline void set_cid(::google::protobuf::uint64 value);

  // optional uint32 uid = 2;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 2;
  inline ::google::protobuf::uint32 uid() const;
  inline void set_uid(::google::protobuf::uint32 value);

  // optional .proto_ff.RoleDBData info = 3;
  inline bool has_info() const;
  inline void clear_info();
  static const int kInfoFieldNumber = 3;
  inline const ::proto_ff::RoleDBData& info() const;
  inline ::proto_ff::RoleDBData* mutable_info();
  inline ::proto_ff::RoleDBData* release_info();
  inline void set_allocated_info(::proto_ff::RoleDBData* info);

  // @@protoc_insertion_point(class_scope:proto_ff.RoleInfoUpdateDBReq)
 private:
  inline void set_has_cid();
  inline void clear_has_cid();
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_info();
  inline void clear_has_info();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 cid_;
  ::proto_ff::RoleDBData* info_;
  ::google::protobuf::uint32 uid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_DBProto_2eproto();
  friend void protobuf_AssignDesc_DBProto_2eproto();
  friend void protobuf_ShutdownFile_DBProto_2eproto();

  void InitAsDefaultInstance();
  static RoleInfoUpdateDBReq* default_instance_;
};
// -------------------------------------------------------------------

class RoleChgNameDBReq : public ::google::protobuf::Message {
 public:
  RoleChgNameDBReq();
  virtual ~RoleChgNameDBReq();

  RoleChgNameDBReq(const RoleChgNameDBReq& from);

  inline RoleChgNameDBReq& operator=(const RoleChgNameDBReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RoleChgNameDBReq& default_instance();

  void Swap(RoleChgNameDBReq* other);

  // implements Message ----------------------------------------------

  RoleChgNameDBReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RoleChgNameDBReq& from);
  void MergeFrom(const RoleChgNameDBReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 cid = 1;
  inline bool has_cid() const;
  inline void clear_cid();
  static const int kCidFieldNumber = 1;
  inline ::google::protobuf::uint64 cid() const;
  inline void set_cid(::google::protobuf::uint64 value);

  // optional string name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:proto_ff.RoleChgNameDBReq)
 private:
  inline void set_has_cid();
  inline void clear_has_cid();
  inline void set_has_name();
  inline void clear_has_name();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 cid_;
  ::std::string* name_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_DBProto_2eproto();
  friend void protobuf_AssignDesc_DBProto_2eproto();
  friend void protobuf_ShutdownFile_DBProto_2eproto();

  void InitAsDefaultInstance();
  static RoleChgNameDBReq* default_instance_;
};
// -------------------------------------------------------------------

class RoleChgNameDBRsp : public ::google::protobuf::Message {
 public:
  RoleChgNameDBRsp();
  virtual ~RoleChgNameDBRsp();

  RoleChgNameDBRsp(const RoleChgNameDBRsp& from);

  inline RoleChgNameDBRsp& operator=(const RoleChgNameDBRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RoleChgNameDBRsp& default_instance();

  void Swap(RoleChgNameDBRsp* other);

  // implements Message ----------------------------------------------

  RoleChgNameDBRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RoleChgNameDBRsp& from);
  void MergeFrom(const RoleChgNameDBRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 ret = 1;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 1;
  inline ::google::protobuf::int32 ret() const;
  inline void set_ret(::google::protobuf::int32 value);

  // optional uint64 cid = 2;
  inline bool has_cid() const;
  inline void clear_cid();
  static const int kCidFieldNumber = 2;
  inline ::google::protobuf::uint64 cid() const;
  inline void set_cid(::google::protobuf::uint64 value);

  // optional string name = 3;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 3;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:proto_ff.RoleChgNameDBRsp)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();
  inline void set_has_cid();
  inline void clear_has_cid();
  inline void set_has_name();
  inline void clear_has_name();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 cid_;
  ::std::string* name_;
  ::google::protobuf::int32 ret_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_DBProto_2eproto();
  friend void protobuf_AssignDesc_DBProto_2eproto();
  friend void protobuf_ShutdownFile_DBProto_2eproto();

  void InitAsDefaultInstance();
  static RoleChgNameDBRsp* default_instance_;
};
// -------------------------------------------------------------------

class RoleSimpleListDBReq : public ::google::protobuf::Message {
 public:
  RoleSimpleListDBReq();
  virtual ~RoleSimpleListDBReq();

  RoleSimpleListDBReq(const RoleSimpleListDBReq& from);

  inline RoleSimpleListDBReq& operator=(const RoleSimpleListDBReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RoleSimpleListDBReq& default_instance();

  void Swap(RoleSimpleListDBReq* other);

  // implements Message ----------------------------------------------

  RoleSimpleListDBReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RoleSimpleListDBReq& from);
  void MergeFrom(const RoleSimpleListDBReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto_ff.RoleSimpleListDBReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_DBProto_2eproto();
  friend void protobuf_AssignDesc_DBProto_2eproto();
  friend void protobuf_ShutdownFile_DBProto_2eproto();

  void InitAsDefaultInstance();
  static RoleSimpleListDBReq* default_instance_;
};
// -------------------------------------------------------------------

class RoleSimpleListDBRsp : public ::google::protobuf::Message {
 public:
  RoleSimpleListDBRsp();
  virtual ~RoleSimpleListDBRsp();

  RoleSimpleListDBRsp(const RoleSimpleListDBRsp& from);

  inline RoleSimpleListDBRsp& operator=(const RoleSimpleListDBRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RoleSimpleListDBRsp& default_instance();

  void Swap(RoleSimpleListDBRsp* other);

  // implements Message ----------------------------------------------

  RoleSimpleListDBRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RoleSimpleListDBRsp& from);
  void MergeFrom(const RoleSimpleListDBRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 ret = 1;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 1;
  inline ::google::protobuf::int32 ret() const;
  inline void set_ret(::google::protobuf::int32 value);

  // repeated .proto_ff.CenterRoleProto info = 2;
  inline int info_size() const;
  inline void clear_info();
  static const int kInfoFieldNumber = 2;
  inline const ::proto_ff::CenterRoleProto& info(int index) const;
  inline ::proto_ff::CenterRoleProto* mutable_info(int index);
  inline ::proto_ff::CenterRoleProto* add_info();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::CenterRoleProto >&
      info() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::CenterRoleProto >*
      mutable_info();

  // optional int32 finish_flag = 3;
  inline bool has_finish_flag() const;
  inline void clear_finish_flag();
  static const int kFinishFlagFieldNumber = 3;
  inline ::google::protobuf::int32 finish_flag() const;
  inline void set_finish_flag(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.RoleSimpleListDBRsp)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();
  inline void set_has_finish_flag();
  inline void clear_has_finish_flag();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::CenterRoleProto > info_;
  ::google::protobuf::int32 ret_;
  ::google::protobuf::int32 finish_flag_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_DBProto_2eproto();
  friend void protobuf_AssignDesc_DBProto_2eproto();
  friend void protobuf_ShutdownFile_DBProto_2eproto();

  void InitAsDefaultInstance();
  static RoleSimpleListDBRsp* default_instance_;
};
// -------------------------------------------------------------------

class CreatureTransLogicDBReq : public ::google::protobuf::Message {
 public:
  CreatureTransLogicDBReq();
  virtual ~CreatureTransLogicDBReq();

  CreatureTransLogicDBReq(const CreatureTransLogicDBReq& from);

  inline CreatureTransLogicDBReq& operator=(const CreatureTransLogicDBReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CreatureTransLogicDBReq& default_instance();

  void Swap(CreatureTransLogicDBReq* other);

  // implements Message ----------------------------------------------

  CreatureTransLogicDBReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CreatureTransLogicDBReq& from);
  void MergeFrom(const CreatureTransLogicDBReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string trans_data = 1;
  inline bool has_trans_data() const;
  inline void clear_trans_data();
  static const int kTransDataFieldNumber = 1;
  inline const ::std::string& trans_data() const;
  inline void set_trans_data(const ::std::string& value);
  inline void set_trans_data(const char* value);
  inline void set_trans_data(const char* value, size_t size);
  inline ::std::string* mutable_trans_data();
  inline ::std::string* release_trans_data();
  inline void set_allocated_trans_data(::std::string* trans_data);

  // @@protoc_insertion_point(class_scope:proto_ff.CreatureTransLogicDBReq)
 private:
  inline void set_has_trans_data();
  inline void clear_has_trans_data();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* trans_data_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_DBProto_2eproto();
  friend void protobuf_AssignDesc_DBProto_2eproto();
  friend void protobuf_ShutdownFile_DBProto_2eproto();

  void InitAsDefaultInstance();
  static CreatureTransLogicDBReq* default_instance_;
};
// -------------------------------------------------------------------

class CreatureTransLogicDBRsp : public ::google::protobuf::Message {
 public:
  CreatureTransLogicDBRsp();
  virtual ~CreatureTransLogicDBRsp();

  CreatureTransLogicDBRsp(const CreatureTransLogicDBRsp& from);

  inline CreatureTransLogicDBRsp& operator=(const CreatureTransLogicDBRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CreatureTransLogicDBRsp& default_instance();

  void Swap(CreatureTransLogicDBRsp* other);

  // implements Message ----------------------------------------------

  CreatureTransLogicDBRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CreatureTransLogicDBRsp& from);
  void MergeFrom(const CreatureTransLogicDBRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 retcode = 1;
  inline bool has_retcode() const;
  inline void clear_retcode();
  static const int kRetcodeFieldNumber = 1;
  inline ::google::protobuf::int32 retcode() const;
  inline void set_retcode(::google::protobuf::int32 value);

  // optional uint64 cid = 2;
  inline bool has_cid() const;
  inline void clear_cid();
  static const int kCidFieldNumber = 2;
  inline ::google::protobuf::uint64 cid() const;
  inline void set_cid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.CreatureTransLogicDBRsp)
 private:
  inline void set_has_retcode();
  inline void clear_has_retcode();
  inline void set_has_cid();
  inline void clear_has_cid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 cid_;
  ::google::protobuf::int32 retcode_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_DBProto_2eproto();
  friend void protobuf_AssignDesc_DBProto_2eproto();
  friend void protobuf_ShutdownFile_DBProto_2eproto();

  void InitAsDefaultInstance();
  static CreatureTransLogicDBRsp* default_instance_;
};
// -------------------------------------------------------------------

class NewMailDBInfo : public ::google::protobuf::Message {
 public:
  NewMailDBInfo();
  virtual ~NewMailDBInfo();

  NewMailDBInfo(const NewMailDBInfo& from);

  inline NewMailDBInfo& operator=(const NewMailDBInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NewMailDBInfo& default_instance();

  void Swap(NewMailDBInfo* other);

  // implements Message ----------------------------------------------

  NewMailDBInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NewMailDBInfo& from);
  void MergeFrom(const NewMailDBInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.MailInfo data = 1;
  inline int data_size() const;
  inline void clear_data();
  static const int kDataFieldNumber = 1;
  inline const ::proto_ff::MailInfo& data(int index) const;
  inline ::proto_ff::MailInfo* mutable_data(int index);
  inline ::proto_ff::MailInfo* add_data();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::MailInfo >&
      data() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::MailInfo >*
      mutable_data();

  // optional int32 result = 2;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 2;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.NewMailDBInfo)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::MailInfo > data_;
  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_DBProto_2eproto();
  friend void protobuf_AssignDesc_DBProto_2eproto();
  friend void protobuf_ShutdownFile_DBProto_2eproto();

  void InitAsDefaultInstance();
  static NewMailDBInfo* default_instance_;
};
// -------------------------------------------------------------------

class MailDBOperateInfo : public ::google::protobuf::Message {
 public:
  MailDBOperateInfo();
  virtual ~MailDBOperateInfo();

  MailDBOperateInfo(const MailDBOperateInfo& from);

  inline MailDBOperateInfo& operator=(const MailDBOperateInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MailDBOperateInfo& default_instance();

  void Swap(MailDBOperateInfo* other);

  // implements Message ----------------------------------------------

  MailDBOperateInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MailDBOperateInfo& from);
  void MergeFrom(const MailDBOperateInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 mid_lst = 1;
  inline int mid_lst_size() const;
  inline void clear_mid_lst();
  static const int kMidLstFieldNumber = 1;
  inline ::google::protobuf::uint32 mid_lst(int index) const;
  inline void set_mid_lst(int index, ::google::protobuf::uint32 value);
  inline void add_mid_lst(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      mid_lst() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_mid_lst();

  // optional int32 result = 2;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 2;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.MailDBOperateInfo)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > mid_lst_;
  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_DBProto_2eproto();
  friend void protobuf_AssignDesc_DBProto_2eproto();
  friend void protobuf_ShutdownFile_DBProto_2eproto();

  void InitAsDefaultInstance();
  static MailDBOperateInfo* default_instance_;
};
// -------------------------------------------------------------------

class SaveMailDBReq : public ::google::protobuf::Message {
 public:
  SaveMailDBReq();
  virtual ~SaveMailDBReq();

  SaveMailDBReq(const SaveMailDBReq& from);

  inline SaveMailDBReq& operator=(const SaveMailDBReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SaveMailDBReq& default_instance();

  void Swap(SaveMailDBReq* other);

  // implements Message ----------------------------------------------

  SaveMailDBReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SaveMailDBReq& from);
  void MergeFrom(const SaveMailDBReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 charid = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 1;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // optional .proto_ff.NewMailDBInfo info = 2;
  inline bool has_info() const;
  inline void clear_info();
  static const int kInfoFieldNumber = 2;
  inline const ::proto_ff::NewMailDBInfo& info() const;
  inline ::proto_ff::NewMailDBInfo* mutable_info();
  inline ::proto_ff::NewMailDBInfo* release_info();
  inline void set_allocated_info(::proto_ff::NewMailDBInfo* info);

  // optional .proto_ff.MailDBOperateInfo del = 3;
  inline bool has_del() const;
  inline void clear_del();
  static const int kDelFieldNumber = 3;
  inline const ::proto_ff::MailDBOperateInfo& del() const;
  inline ::proto_ff::MailDBOperateInfo* mutable_del();
  inline ::proto_ff::MailDBOperateInfo* release_del();
  inline void set_allocated_del(::proto_ff::MailDBOperateInfo* del);

  // optional .proto_ff.MailDBOperateInfo fetch = 4;
  inline bool has_fetch() const;
  inline void clear_fetch();
  static const int kFetchFieldNumber = 4;
  inline const ::proto_ff::MailDBOperateInfo& fetch() const;
  inline ::proto_ff::MailDBOperateInfo* mutable_fetch();
  inline ::proto_ff::MailDBOperateInfo* release_fetch();
  inline void set_allocated_fetch(::proto_ff::MailDBOperateInfo* fetch);

  // optional .proto_ff.MailDBOperateInfo read = 5;
  inline bool has_read() const;
  inline void clear_read();
  static const int kReadFieldNumber = 5;
  inline const ::proto_ff::MailDBOperateInfo& read() const;
  inline ::proto_ff::MailDBOperateInfo* mutable_read();
  inline ::proto_ff::MailDBOperateInfo* release_read();
  inline void set_allocated_read(::proto_ff::MailDBOperateInfo* read);

  // optional int32 notify = 6;
  inline bool has_notify() const;
  inline void clear_notify();
  static const int kNotifyFieldNumber = 6;
  inline ::google::protobuf::int32 notify() const;
  inline void set_notify(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.SaveMailDBReq)
 private:
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_info();
  inline void clear_has_info();
  inline void set_has_del();
  inline void clear_has_del();
  inline void set_has_fetch();
  inline void clear_has_fetch();
  inline void set_has_read();
  inline void clear_has_read();
  inline void set_has_notify();
  inline void clear_has_notify();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 charid_;
  ::proto_ff::NewMailDBInfo* info_;
  ::proto_ff::MailDBOperateInfo* del_;
  ::proto_ff::MailDBOperateInfo* fetch_;
  ::proto_ff::MailDBOperateInfo* read_;
  ::google::protobuf::int32 notify_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_DBProto_2eproto();
  friend void protobuf_AssignDesc_DBProto_2eproto();
  friend void protobuf_ShutdownFile_DBProto_2eproto();

  void InitAsDefaultInstance();
  static SaveMailDBReq* default_instance_;
};
// -------------------------------------------------------------------

class SaveMailDBRsp : public ::google::protobuf::Message {
 public:
  SaveMailDBRsp();
  virtual ~SaveMailDBRsp();

  SaveMailDBRsp(const SaveMailDBRsp& from);

  inline SaveMailDBRsp& operator=(const SaveMailDBRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SaveMailDBRsp& default_instance();

  void Swap(SaveMailDBRsp* other);

  // implements Message ----------------------------------------------

  SaveMailDBRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SaveMailDBRsp& from);
  void MergeFrom(const SaveMailDBRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 charid = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 1;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // optional .proto_ff.NewMailDBInfo info = 2;
  inline bool has_info() const;
  inline void clear_info();
  static const int kInfoFieldNumber = 2;
  inline const ::proto_ff::NewMailDBInfo& info() const;
  inline ::proto_ff::NewMailDBInfo* mutable_info();
  inline ::proto_ff::NewMailDBInfo* release_info();
  inline void set_allocated_info(::proto_ff::NewMailDBInfo* info);

  // optional .proto_ff.MailDBOperateInfo del = 3;
  inline bool has_del() const;
  inline void clear_del();
  static const int kDelFieldNumber = 3;
  inline const ::proto_ff::MailDBOperateInfo& del() const;
  inline ::proto_ff::MailDBOperateInfo* mutable_del();
  inline ::proto_ff::MailDBOperateInfo* release_del();
  inline void set_allocated_del(::proto_ff::MailDBOperateInfo* del);

  // optional .proto_ff.MailDBOperateInfo fetch = 4;
  inline bool has_fetch() const;
  inline void clear_fetch();
  static const int kFetchFieldNumber = 4;
  inline const ::proto_ff::MailDBOperateInfo& fetch() const;
  inline ::proto_ff::MailDBOperateInfo* mutable_fetch();
  inline ::proto_ff::MailDBOperateInfo* release_fetch();
  inline void set_allocated_fetch(::proto_ff::MailDBOperateInfo* fetch);

  // optional .proto_ff.MailDBOperateInfo read = 5;
  inline bool has_read() const;
  inline void clear_read();
  static const int kReadFieldNumber = 5;
  inline const ::proto_ff::MailDBOperateInfo& read() const;
  inline ::proto_ff::MailDBOperateInfo* mutable_read();
  inline ::proto_ff::MailDBOperateInfo* release_read();
  inline void set_allocated_read(::proto_ff::MailDBOperateInfo* read);

  // optional int32 notify = 6;
  inline bool has_notify() const;
  inline void clear_notify();
  static const int kNotifyFieldNumber = 6;
  inline ::google::protobuf::int32 notify() const;
  inline void set_notify(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.SaveMailDBRsp)
 private:
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_info();
  inline void clear_has_info();
  inline void set_has_del();
  inline void clear_has_del();
  inline void set_has_fetch();
  inline void clear_has_fetch();
  inline void set_has_read();
  inline void clear_has_read();
  inline void set_has_notify();
  inline void clear_has_notify();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 charid_;
  ::proto_ff::NewMailDBInfo* info_;
  ::proto_ff::MailDBOperateInfo* del_;
  ::proto_ff::MailDBOperateInfo* fetch_;
  ::proto_ff::MailDBOperateInfo* read_;
  ::google::protobuf::int32 notify_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_DBProto_2eproto();
  friend void protobuf_AssignDesc_DBProto_2eproto();
  friend void protobuf_ShutdownFile_DBProto_2eproto();

  void InitAsDefaultInstance();
  static SaveMailDBRsp* default_instance_;
};
// -------------------------------------------------------------------

class CharacterMailDBRequest : public ::google::protobuf::Message {
 public:
  CharacterMailDBRequest();
  virtual ~CharacterMailDBRequest();

  CharacterMailDBRequest(const CharacterMailDBRequest& from);

  inline CharacterMailDBRequest& operator=(const CharacterMailDBRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CharacterMailDBRequest& default_instance();

  void Swap(CharacterMailDBRequest* other);

  // implements Message ----------------------------------------------

  CharacterMailDBRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CharacterMailDBRequest& from);
  void MergeFrom(const CharacterMailDBRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 charID = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIDFieldNumber = 1;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // optional uint32 zone_mail_flag = 2;
  inline bool has_zone_mail_flag() const;
  inline void clear_zone_mail_flag();
  static const int kZoneMailFlagFieldNumber = 2;
  inline ::google::protobuf::uint32 zone_mail_flag() const;
  inline void set_zone_mail_flag(::google::protobuf::uint32 value);

  // optional int32 offset = 3;
  inline bool has_offset() const;
  inline void clear_offset();
  static const int kOffsetFieldNumber = 3;
  inline ::google::protobuf::int32 offset() const;
  inline void set_offset(::google::protobuf::int32 value);

  // optional uint32 reqid = 4;
  inline bool has_reqid() const;
  inline void clear_reqid();
  static const int kReqidFieldNumber = 4;
  inline ::google::protobuf::uint32 reqid() const;
  inline void set_reqid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.CharacterMailDBRequest)
 private:
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_zone_mail_flag();
  inline void clear_has_zone_mail_flag();
  inline void set_has_offset();
  inline void clear_has_offset();
  inline void set_has_reqid();
  inline void clear_has_reqid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 charid_;
  ::google::protobuf::uint32 zone_mail_flag_;
  ::google::protobuf::int32 offset_;
  ::google::protobuf::uint32 reqid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_DBProto_2eproto();
  friend void protobuf_AssignDesc_DBProto_2eproto();
  friend void protobuf_ShutdownFile_DBProto_2eproto();

  void InitAsDefaultInstance();
  static CharacterMailDBRequest* default_instance_;
};
// -------------------------------------------------------------------

class CharacterMailDBResponse : public ::google::protobuf::Message {
 public:
  CharacterMailDBResponse();
  virtual ~CharacterMailDBResponse();

  CharacterMailDBResponse(const CharacterMailDBResponse& from);

  inline CharacterMailDBResponse& operator=(const CharacterMailDBResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CharacterMailDBResponse& default_instance();

  void Swap(CharacterMailDBResponse* other);

  // implements Message ----------------------------------------------

  CharacterMailDBResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CharacterMailDBResponse& from);
  void MergeFrom(const CharacterMailDBResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 charID = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIDFieldNumber = 1;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // repeated .proto_ff.MailInfo info = 2;
  inline int info_size() const;
  inline void clear_info();
  static const int kInfoFieldNumber = 2;
  inline const ::proto_ff::MailInfo& info(int index) const;
  inline ::proto_ff::MailInfo* mutable_info(int index);
  inline ::proto_ff::MailInfo* add_info();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::MailInfo >&
      info() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::MailInfo >*
      mutable_info();

  // optional uint32 zoneMailId = 3;
  inline bool has_zonemailid() const;
  inline void clear_zonemailid();
  static const int kZoneMailIdFieldNumber = 3;
  inline ::google::protobuf::uint32 zonemailid() const;
  inline void set_zonemailid(::google::protobuf::uint32 value);

  // optional int32 offset = 4;
  inline bool has_offset() const;
  inline void clear_offset();
  static const int kOffsetFieldNumber = 4;
  inline ::google::protobuf::int32 offset() const;
  inline void set_offset(::google::protobuf::int32 value);

  // optional uint32 reqid = 5;
  inline bool has_reqid() const;
  inline void clear_reqid();
  static const int kReqidFieldNumber = 5;
  inline ::google::protobuf::uint32 reqid() const;
  inline void set_reqid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.CharacterMailDBResponse)
 private:
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_zonemailid();
  inline void clear_has_zonemailid();
  inline void set_has_offset();
  inline void clear_has_offset();
  inline void set_has_reqid();
  inline void clear_has_reqid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 charid_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::MailInfo > info_;
  ::google::protobuf::uint32 zonemailid_;
  ::google::protobuf::int32 offset_;
  ::google::protobuf::uint32 reqid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_DBProto_2eproto();
  friend void protobuf_AssignDesc_DBProto_2eproto();
  friend void protobuf_ShutdownFile_DBProto_2eproto();

  void InitAsDefaultInstance();
  static CharacterMailDBResponse* default_instance_;
};
// -------------------------------------------------------------------

class MaxMailIDRequest : public ::google::protobuf::Message {
 public:
  MaxMailIDRequest();
  virtual ~MaxMailIDRequest();

  MaxMailIDRequest(const MaxMailIDRequest& from);

  inline MaxMailIDRequest& operator=(const MaxMailIDRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MaxMailIDRequest& default_instance();

  void Swap(MaxMailIDRequest* other);

  // implements Message ----------------------------------------------

  MaxMailIDRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MaxMailIDRequest& from);
  void MergeFrom(const MaxMailIDRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto_ff.MaxMailIDRequest)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_DBProto_2eproto();
  friend void protobuf_AssignDesc_DBProto_2eproto();
  friend void protobuf_ShutdownFile_DBProto_2eproto();

  void InitAsDefaultInstance();
  static MaxMailIDRequest* default_instance_;
};
// -------------------------------------------------------------------

class MaxMailIDResponse : public ::google::protobuf::Message {
 public:
  MaxMailIDResponse();
  virtual ~MaxMailIDResponse();

  MaxMailIDResponse(const MaxMailIDResponse& from);

  inline MaxMailIDResponse& operator=(const MaxMailIDResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MaxMailIDResponse& default_instance();

  void Swap(MaxMailIDResponse* other);

  // implements Message ----------------------------------------------

  MaxMailIDResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MaxMailIDResponse& from);
  void MergeFrom(const MaxMailIDResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 maxZoneMailId = 1;
  inline bool has_maxzonemailid() const;
  inline void clear_maxzonemailid();
  static const int kMaxZoneMailIdFieldNumber = 1;
  inline ::google::protobuf::uint32 maxzonemailid() const;
  inline void set_maxzonemailid(::google::protobuf::uint32 value);

  // optional uint32 maxMailId = 2;
  inline bool has_maxmailid() const;
  inline void clear_maxmailid();
  static const int kMaxMailIdFieldNumber = 2;
  inline ::google::protobuf::uint32 maxmailid() const;
  inline void set_maxmailid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.MaxMailIDResponse)
 private:
  inline void set_has_maxzonemailid();
  inline void clear_has_maxzonemailid();
  inline void set_has_maxmailid();
  inline void clear_has_maxmailid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 maxzonemailid_;
  ::google::protobuf::uint32 maxmailid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_DBProto_2eproto();
  friend void protobuf_AssignDesc_DBProto_2eproto();
  friend void protobuf_ShutdownFile_DBProto_2eproto();

  void InitAsDefaultInstance();
  static MaxMailIDResponse* default_instance_;
};
// -------------------------------------------------------------------

class DeleteCharacterMail : public ::google::protobuf::Message {
 public:
  DeleteCharacterMail();
  virtual ~DeleteCharacterMail();

  DeleteCharacterMail(const DeleteCharacterMail& from);

  inline DeleteCharacterMail& operator=(const DeleteCharacterMail& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DeleteCharacterMail& default_instance();

  void Swap(DeleteCharacterMail* other);

  // implements Message ----------------------------------------------

  DeleteCharacterMail* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DeleteCharacterMail& from);
  void MergeFrom(const DeleteCharacterMail& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 charID = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIDFieldNumber = 1;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.DeleteCharacterMail)
 private:
  inline void set_has_charid();
  inline void clear_has_charid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 charid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_DBProto_2eproto();
  friend void protobuf_AssignDesc_DBProto_2eproto();
  friend void protobuf_ShutdownFile_DBProto_2eproto();

  void InitAsDefaultInstance();
  static DeleteCharacterMail* default_instance_;
};
// -------------------------------------------------------------------

class ZoneMailSaveRsp : public ::google::protobuf::Message {
 public:
  ZoneMailSaveRsp();
  virtual ~ZoneMailSaveRsp();

  ZoneMailSaveRsp(const ZoneMailSaveRsp& from);

  inline ZoneMailSaveRsp& operator=(const ZoneMailSaveRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ZoneMailSaveRsp& default_instance();

  void Swap(ZoneMailSaveRsp* other);

  // implements Message ----------------------------------------------

  ZoneMailSaveRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ZoneMailSaveRsp& from);
  void MergeFrom(const ZoneMailSaveRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 mailId = 1;
  inline bool has_mailid() const;
  inline void clear_mailid();
  static const int kMailIdFieldNumber = 1;
  inline ::google::protobuf::uint32 mailid() const;
  inline void set_mailid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.ZoneMailSaveRsp)
 private:
  inline void set_has_mailid();
  inline void clear_has_mailid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 mailid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_DBProto_2eproto();
  friend void protobuf_AssignDesc_DBProto_2eproto();
  friend void protobuf_ShutdownFile_DBProto_2eproto();

  void InitAsDefaultInstance();
  static ZoneMailSaveRsp* default_instance_;
};
// -------------------------------------------------------------------

class ZoneMailTransCharacterMailReq : public ::google::protobuf::Message {
 public:
  ZoneMailTransCharacterMailReq();
  virtual ~ZoneMailTransCharacterMailReq();

  ZoneMailTransCharacterMailReq(const ZoneMailTransCharacterMailReq& from);

  inline ZoneMailTransCharacterMailReq& operator=(const ZoneMailTransCharacterMailReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ZoneMailTransCharacterMailReq& default_instance();

  void Swap(ZoneMailTransCharacterMailReq* other);

  // implements Message ----------------------------------------------

  ZoneMailTransCharacterMailReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ZoneMailTransCharacterMailReq& from);
  void MergeFrom(const ZoneMailTransCharacterMailReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 mailId = 1;
  inline bool has_mailid() const;
  inline void clear_mailid();
  static const int kMailIdFieldNumber = 1;
  inline ::google::protobuf::uint32 mailid() const;
  inline void set_mailid(::google::protobuf::uint32 value);

  // optional uint64 cid = 2;
  inline bool has_cid() const;
  inline void clear_cid();
  static const int kCidFieldNumber = 2;
  inline ::google::protobuf::uint64 cid() const;
  inline void set_cid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.ZoneMailTransCharacterMailReq)
 private:
  inline void set_has_mailid();
  inline void clear_has_mailid();
  inline void set_has_cid();
  inline void clear_has_cid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 cid_;
  ::google::protobuf::uint32 mailid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_DBProto_2eproto();
  friend void protobuf_AssignDesc_DBProto_2eproto();
  friend void protobuf_ShutdownFile_DBProto_2eproto();

  void InitAsDefaultInstance();
  static ZoneMailTransCharacterMailReq* default_instance_;
};
// -------------------------------------------------------------------

class ZoneMailTransCharacterMailRsp : public ::google::protobuf::Message {
 public:
  ZoneMailTransCharacterMailRsp();
  virtual ~ZoneMailTransCharacterMailRsp();

  ZoneMailTransCharacterMailRsp(const ZoneMailTransCharacterMailRsp& from);

  inline ZoneMailTransCharacterMailRsp& operator=(const ZoneMailTransCharacterMailRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ZoneMailTransCharacterMailRsp& default_instance();

  void Swap(ZoneMailTransCharacterMailRsp* other);

  // implements Message ----------------------------------------------

  ZoneMailTransCharacterMailRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ZoneMailTransCharacterMailRsp& from);
  void MergeFrom(const ZoneMailTransCharacterMailRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 cid = 1;
  inline bool has_cid() const;
  inline void clear_cid();
  static const int kCidFieldNumber = 1;
  inline ::google::protobuf::uint64 cid() const;
  inline void set_cid(::google::protobuf::uint64 value);

  // repeated .proto_ff.MailInfo data = 2;
  inline int data_size() const;
  inline void clear_data();
  static const int kDataFieldNumber = 2;
  inline const ::proto_ff::MailInfo& data(int index) const;
  inline ::proto_ff::MailInfo* mutable_data(int index);
  inline ::proto_ff::MailInfo* add_data();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::MailInfo >&
      data() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::MailInfo >*
      mutable_data();

  // @@protoc_insertion_point(class_scope:proto_ff.ZoneMailTransCharacterMailRsp)
 private:
  inline void set_has_cid();
  inline void clear_has_cid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 cid_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::MailInfo > data_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_DBProto_2eproto();
  friend void protobuf_AssignDesc_DBProto_2eproto();
  friend void protobuf_ShutdownFile_DBProto_2eproto();

  void InitAsDefaultInstance();
  static ZoneMailTransCharacterMailRsp* default_instance_;
};
// -------------------------------------------------------------------

class WebMailDBDataReq : public ::google::protobuf::Message {
 public:
  WebMailDBDataReq();
  virtual ~WebMailDBDataReq();

  WebMailDBDataReq(const WebMailDBDataReq& from);

  inline WebMailDBDataReq& operator=(const WebMailDBDataReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WebMailDBDataReq& default_instance();

  void Swap(WebMailDBDataReq* other);

  // implements Message ----------------------------------------------

  WebMailDBDataReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WebMailDBDataReq& from);
  void MergeFrom(const WebMailDBDataReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 op_type = 1;
  inline bool has_op_type() const;
  inline void clear_op_type();
  static const int kOpTypeFieldNumber = 1;
  inline ::google::protobuf::int32 op_type() const;
  inline void set_op_type(::google::protobuf::int32 value);

  // optional uint64 cid = 2;
  inline bool has_cid() const;
  inline void clear_cid();
  static const int kCidFieldNumber = 2;
  inline ::google::protobuf::uint64 cid() const;
  inline void set_cid(::google::protobuf::uint64 value);

  // optional uint32 pernum = 3;
  inline bool has_pernum() const;
  inline void clear_pernum();
  static const int kPernumFieldNumber = 3;
  inline ::google::protobuf::uint32 pernum() const;
  inline void set_pernum(::google::protobuf::uint32 value);

  // optional uint32 curpage = 4;
  inline bool has_curpage() const;
  inline void clear_curpage();
  static const int kCurpageFieldNumber = 4;
  inline ::google::protobuf::uint32 curpage() const;
  inline void set_curpage(::google::protobuf::uint32 value);

  // repeated uint32 id_lst = 5;
  inline int id_lst_size() const;
  inline void clear_id_lst();
  static const int kIdLstFieldNumber = 5;
  inline ::google::protobuf::uint32 id_lst(int index) const;
  inline void set_id_lst(int index, ::google::protobuf::uint32 value);
  inline void add_id_lst(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      id_lst() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_id_lst();

  // optional string webId = 6;
  inline bool has_webid() const;
  inline void clear_webid();
  static const int kWebIdFieldNumber = 6;
  inline const ::std::string& webid() const;
  inline void set_webid(const ::std::string& value);
  inline void set_webid(const char* value);
  inline void set_webid(const char* value, size_t size);
  inline ::std::string* mutable_webid();
  inline ::std::string* release_webid();
  inline void set_allocated_webid(::std::string* webid);

  // @@protoc_insertion_point(class_scope:proto_ff.WebMailDBDataReq)
 private:
  inline void set_has_op_type();
  inline void clear_has_op_type();
  inline void set_has_cid();
  inline void clear_has_cid();
  inline void set_has_pernum();
  inline void clear_has_pernum();
  inline void set_has_curpage();
  inline void clear_has_curpage();
  inline void set_has_webid();
  inline void clear_has_webid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 cid_;
  ::google::protobuf::int32 op_type_;
  ::google::protobuf::uint32 pernum_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > id_lst_;
  ::std::string* webid_;
  ::google::protobuf::uint32 curpage_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_DBProto_2eproto();
  friend void protobuf_AssignDesc_DBProto_2eproto();
  friend void protobuf_ShutdownFile_DBProto_2eproto();

  void InitAsDefaultInstance();
  static WebMailDBDataReq* default_instance_;
};
// -------------------------------------------------------------------

class WebMailDBDataRsp : public ::google::protobuf::Message {
 public:
  WebMailDBDataRsp();
  virtual ~WebMailDBDataRsp();

  WebMailDBDataRsp(const WebMailDBDataRsp& from);

  inline WebMailDBDataRsp& operator=(const WebMailDBDataRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WebMailDBDataRsp& default_instance();

  void Swap(WebMailDBDataRsp* other);

  // implements Message ----------------------------------------------

  WebMailDBDataRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WebMailDBDataRsp& from);
  void MergeFrom(const WebMailDBDataRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 op_type = 1;
  inline bool has_op_type() const;
  inline void clear_op_type();
  static const int kOpTypeFieldNumber = 1;
  inline ::google::protobuf::int32 op_type() const;
  inline void set_op_type(::google::protobuf::int32 value);

  // optional uint64 cid = 2;
  inline bool has_cid() const;
  inline void clear_cid();
  static const int kCidFieldNumber = 2;
  inline ::google::protobuf::uint64 cid() const;
  inline void set_cid(::google::protobuf::uint64 value);

  // optional uint32 curpage = 3;
  inline bool has_curpage() const;
  inline void clear_curpage();
  static const int kCurpageFieldNumber = 3;
  inline ::google::protobuf::uint32 curpage() const;
  inline void set_curpage(::google::protobuf::uint32 value);

  // optional uint32 totalcount = 4;
  inline bool has_totalcount() const;
  inline void clear_totalcount();
  static const int kTotalcountFieldNumber = 4;
  inline ::google::protobuf::uint32 totalcount() const;
  inline void set_totalcount(::google::protobuf::uint32 value);

  // repeated uint32 id_lst = 5;
  inline int id_lst_size() const;
  inline void clear_id_lst();
  static const int kIdLstFieldNumber = 5;
  inline ::google::protobuf::uint32 id_lst(int index) const;
  inline void set_id_lst(int index, ::google::protobuf::uint32 value);
  inline void add_id_lst(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      id_lst() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_id_lst();

  // repeated .proto_ff.WebMailDataProto info_lst = 6;
  inline int info_lst_size() const;
  inline void clear_info_lst();
  static const int kInfoLstFieldNumber = 6;
  inline const ::proto_ff::WebMailDataProto& info_lst(int index) const;
  inline ::proto_ff::WebMailDataProto* mutable_info_lst(int index);
  inline ::proto_ff::WebMailDataProto* add_info_lst();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::WebMailDataProto >&
      info_lst() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::WebMailDataProto >*
      mutable_info_lst();

  // optional string webId = 7;
  inline bool has_webid() const;
  inline void clear_webid();
  static const int kWebIdFieldNumber = 7;
  inline const ::std::string& webid() const;
  inline void set_webid(const ::std::string& value);
  inline void set_webid(const char* value);
  inline void set_webid(const char* value, size_t size);
  inline ::std::string* mutable_webid();
  inline ::std::string* release_webid();
  inline void set_allocated_webid(::std::string* webid);

  // @@protoc_insertion_point(class_scope:proto_ff.WebMailDBDataRsp)
 private:
  inline void set_has_op_type();
  inline void clear_has_op_type();
  inline void set_has_cid();
  inline void clear_has_cid();
  inline void set_has_curpage();
  inline void clear_has_curpage();
  inline void set_has_totalcount();
  inline void clear_has_totalcount();
  inline void set_has_webid();
  inline void clear_has_webid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 cid_;
  ::google::protobuf::int32 op_type_;
  ::google::protobuf::uint32 curpage_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > id_lst_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::WebMailDataProto > info_lst_;
  ::std::string* webid_;
  ::google::protobuf::uint32 totalcount_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  friend void  protobuf_AddDesc_DBProto_2eproto();
  friend void protobuf_AssignDesc_DBProto_2eproto();
  friend void protobuf_ShutdownFile_DBProto_2eproto();

  void InitAsDefaultInstance();
  static WebMailDBDataRsp* default_instance_;
};
// -------------------------------------------------------------------

class FriendDBInfo : public ::google::protobuf::Message {
 public:
  FriendDBInfo();
  virtual ~FriendDBInfo();

  FriendDBInfo(const FriendDBInfo& from);

  inline FriendDBInfo& operator=(const FriendDBInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FriendDBInfo& default_instance();

  void Swap(FriendDBInfo* other);

  // implements Message ----------------------------------------------

  FriendDBInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FriendDBInfo& from);
  void MergeFrom(const FriendDBInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 charID = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIDFieldNumber = 1;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // optional .proto_ff.RelationDBInfo data = 2;
  inline bool has_data() const;
  inline void clear_data();
  static const int kDataFieldNumber = 2;
  inline const ::proto_ff::RelationDBInfo& data() const;
  inline ::proto_ff::RelationDBInfo* mutable_data();
  inline ::proto_ff::RelationDBInfo* release_data();
  inline void set_allocated_data(::proto_ff::RelationDBInfo* data);

  // @@protoc_insertion_point(class_scope:proto_ff.FriendDBInfo)
 private:
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_data();
  inline void clear_has_data();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 charid_;
  ::proto_ff::RelationDBInfo* data_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_DBProto_2eproto();
  friend void protobuf_AssignDesc_DBProto_2eproto();
  friend void protobuf_ShutdownFile_DBProto_2eproto();

  void InitAsDefaultInstance();
  static FriendDBInfo* default_instance_;
};
// -------------------------------------------------------------------

class FriendDBRequest : public ::google::protobuf::Message {
 public:
  FriendDBRequest();
  virtual ~FriendDBRequest();

  FriendDBRequest(const FriendDBRequest& from);

  inline FriendDBRequest& operator=(const FriendDBRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FriendDBRequest& default_instance();

  void Swap(FriendDBRequest* other);

  // implements Message ----------------------------------------------

  FriendDBRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FriendDBRequest& from);
  void MergeFrom(const FriendDBRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 charid = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 1;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // repeated uint64 dstid_lst = 2;
  inline int dstid_lst_size() const;
  inline void clear_dstid_lst();
  static const int kDstidLstFieldNumber = 2;
  inline ::google::protobuf::uint64 dstid_lst(int index) const;
  inline void set_dstid_lst(int index, ::google::protobuf::uint64 value);
  inline void add_dstid_lst(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      dstid_lst() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_dstid_lst();

  // optional uint32 operate_type = 3;
  inline bool has_operate_type() const;
  inline void clear_operate_type();
  static const int kOperateTypeFieldNumber = 3;
  inline ::google::protobuf::uint32 operate_type() const;
  inline void set_operate_type(::google::protobuf::uint32 value);

  // optional bytes data = 4;
  inline bool has_data() const;
  inline void clear_data();
  static const int kDataFieldNumber = 4;
  inline const ::std::string& data() const;
  inline void set_data(const ::std::string& value);
  inline void set_data(const char* value);
  inline void set_data(const void* value, size_t size);
  inline ::std::string* mutable_data();
  inline ::std::string* release_data();
  inline void set_allocated_data(::std::string* data);

  // optional uint32 query_times = 5;
  inline bool has_query_times() const;
  inline void clear_query_times();
  static const int kQueryTimesFieldNumber = 5;
  inline ::google::protobuf::uint32 query_times() const;
  inline void set_query_times(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.FriendDBRequest)
 private:
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_operate_type();
  inline void clear_has_operate_type();
  inline void set_has_data();
  inline void clear_has_data();
  inline void set_has_query_times();
  inline void clear_has_query_times();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 charid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > dstid_lst_;
  ::std::string* data_;
  ::google::protobuf::uint32 operate_type_;
  ::google::protobuf::uint32 query_times_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_DBProto_2eproto();
  friend void protobuf_AssignDesc_DBProto_2eproto();
  friend void protobuf_ShutdownFile_DBProto_2eproto();

  void InitAsDefaultInstance();
  static FriendDBRequest* default_instance_;
};
// -------------------------------------------------------------------

class FriendDBResponse : public ::google::protobuf::Message {
 public:
  FriendDBResponse();
  virtual ~FriendDBResponse();

  FriendDBResponse(const FriendDBResponse& from);

  inline FriendDBResponse& operator=(const FriendDBResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FriendDBResponse& default_instance();

  void Swap(FriendDBResponse* other);

  // implements Message ----------------------------------------------

  FriendDBResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FriendDBResponse& from);
  void MergeFrom(const FriendDBResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 retcode = 1;
  inline bool has_retcode() const;
  inline void clear_retcode();
  static const int kRetcodeFieldNumber = 1;
  inline ::google::protobuf::int32 retcode() const;
  inline void set_retcode(::google::protobuf::int32 value);

  // optional uint64 charid = 2;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 2;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // optional uint32 operate_type = 3;
  inline bool has_operate_type() const;
  inline void clear_operate_type();
  static const int kOperateTypeFieldNumber = 3;
  inline ::google::protobuf::uint32 operate_type() const;
  inline void set_operate_type(::google::protobuf::uint32 value);

  // repeated .proto_ff.FriendDBInfo info_lst = 4;
  inline int info_lst_size() const;
  inline void clear_info_lst();
  static const int kInfoLstFieldNumber = 4;
  inline const ::proto_ff::FriendDBInfo& info_lst(int index) const;
  inline ::proto_ff::FriendDBInfo* mutable_info_lst(int index);
  inline ::proto_ff::FriendDBInfo* add_info_lst();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::FriendDBInfo >&
      info_lst() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::FriendDBInfo >*
      mutable_info_lst();

  // repeated uint64 last_lst = 5;
  inline int last_lst_size() const;
  inline void clear_last_lst();
  static const int kLastLstFieldNumber = 5;
  inline ::google::protobuf::uint64 last_lst(int index) const;
  inline void set_last_lst(int index, ::google::protobuf::uint64 value);
  inline void add_last_lst(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      last_lst() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_last_lst();

  // optional bytes data = 6;
  inline bool has_data() const;
  inline void clear_data();
  static const int kDataFieldNumber = 6;
  inline const ::std::string& data() const;
  inline void set_data(const ::std::string& value);
  inline void set_data(const char* value);
  inline void set_data(const void* value, size_t size);
  inline ::std::string* mutable_data();
  inline ::std::string* release_data();
  inline void set_allocated_data(::std::string* data);

  // optional uint32 query_times = 7;
  inline bool has_query_times() const;
  inline void clear_query_times();
  static const int kQueryTimesFieldNumber = 7;
  inline ::google::protobuf::uint32 query_times() const;
  inline void set_query_times(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.FriendDBResponse)
 private:
  inline void set_has_retcode();
  inline void clear_has_retcode();
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_operate_type();
  inline void clear_has_operate_type();
  inline void set_has_data();
  inline void clear_has_data();
  inline void set_has_query_times();
  inline void clear_has_query_times();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 charid_;
  ::google::protobuf::int32 retcode_;
  ::google::protobuf::uint32 operate_type_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::FriendDBInfo > info_lst_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > last_lst_;
  ::std::string* data_;
  ::google::protobuf::uint32 query_times_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  friend void  protobuf_AddDesc_DBProto_2eproto();
  friend void protobuf_AssignDesc_DBProto_2eproto();
  friend void protobuf_ShutdownFile_DBProto_2eproto();

  void InitAsDefaultInstance();
  static FriendDBResponse* default_instance_;
};
// -------------------------------------------------------------------

class AllFriendDBRequest : public ::google::protobuf::Message {
 public:
  AllFriendDBRequest();
  virtual ~AllFriendDBRequest();

  AllFriendDBRequest(const AllFriendDBRequest& from);

  inline AllFriendDBRequest& operator=(const AllFriendDBRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AllFriendDBRequest& default_instance();

  void Swap(AllFriendDBRequest* other);

  // implements Message ----------------------------------------------

  AllFriendDBRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AllFriendDBRequest& from);
  void MergeFrom(const AllFriendDBRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 offset = 1;
  inline bool has_offset() const;
  inline void clear_offset();
  static const int kOffsetFieldNumber = 1;
  inline ::google::protobuf::int32 offset() const;
  inline void set_offset(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.AllFriendDBRequest)
 private:
  inline void set_has_offset();
  inline void clear_has_offset();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 offset_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_DBProto_2eproto();
  friend void protobuf_AssignDesc_DBProto_2eproto();
  friend void protobuf_ShutdownFile_DBProto_2eproto();

  void InitAsDefaultInstance();
  static AllFriendDBRequest* default_instance_;
};
// -------------------------------------------------------------------

class AllFriendDBResponse : public ::google::protobuf::Message {
 public:
  AllFriendDBResponse();
  virtual ~AllFriendDBResponse();

  AllFriendDBResponse(const AllFriendDBResponse& from);

  inline AllFriendDBResponse& operator=(const AllFriendDBResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AllFriendDBResponse& default_instance();

  void Swap(AllFriendDBResponse* other);

  // implements Message ----------------------------------------------

  AllFriendDBResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AllFriendDBResponse& from);
  void MergeFrom(const AllFriendDBResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 retcode = 1;
  inline bool has_retcode() const;
  inline void clear_retcode();
  static const int kRetcodeFieldNumber = 1;
  inline ::google::protobuf::int32 retcode() const;
  inline void set_retcode(::google::protobuf::int32 value);

  // optional int32 offset = 2;
  inline bool has_offset() const;
  inline void clear_offset();
  static const int kOffsetFieldNumber = 2;
  inline ::google::protobuf::int32 offset() const;
  inline void set_offset(::google::protobuf::int32 value);

  // repeated .proto_ff.FriendDBInfo info = 3;
  inline int info_size() const;
  inline void clear_info();
  static const int kInfoFieldNumber = 3;
  inline const ::proto_ff::FriendDBInfo& info(int index) const;
  inline ::proto_ff::FriendDBInfo* mutable_info(int index);
  inline ::proto_ff::FriendDBInfo* add_info();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::FriendDBInfo >&
      info() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::FriendDBInfo >*
      mutable_info();

  // @@protoc_insertion_point(class_scope:proto_ff.AllFriendDBResponse)
 private:
  inline void set_has_retcode();
  inline void clear_has_retcode();
  inline void set_has_offset();
  inline void clear_has_offset();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 retcode_;
  ::google::protobuf::int32 offset_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::FriendDBInfo > info_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_DBProto_2eproto();
  friend void protobuf_AssignDesc_DBProto_2eproto();
  friend void protobuf_ShutdownFile_DBProto_2eproto();

  void InitAsDefaultInstance();
  static AllFriendDBResponse* default_instance_;
};
// -------------------------------------------------------------------

class SaveFriendDBRequest : public ::google::protobuf::Message {
 public:
  SaveFriendDBRequest();
  virtual ~SaveFriendDBRequest();

  SaveFriendDBRequest(const SaveFriendDBRequest& from);

  inline SaveFriendDBRequest& operator=(const SaveFriendDBRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SaveFriendDBRequest& default_instance();

  void Swap(SaveFriendDBRequest* other);

  // implements Message ----------------------------------------------

  SaveFriendDBRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SaveFriendDBRequest& from);
  void MergeFrom(const SaveFriendDBRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.FriendDBInfo info = 1;
  inline int info_size() const;
  inline void clear_info();
  static const int kInfoFieldNumber = 1;
  inline const ::proto_ff::FriendDBInfo& info(int index) const;
  inline ::proto_ff::FriendDBInfo* mutable_info(int index);
  inline ::proto_ff::FriendDBInfo* add_info();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::FriendDBInfo >&
      info() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::FriendDBInfo >*
      mutable_info();

  // @@protoc_insertion_point(class_scope:proto_ff.SaveFriendDBRequest)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::FriendDBInfo > info_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_DBProto_2eproto();
  friend void protobuf_AssignDesc_DBProto_2eproto();
  friend void protobuf_ShutdownFile_DBProto_2eproto();

  void InitAsDefaultInstance();
  static SaveFriendDBRequest* default_instance_;
};
// -------------------------------------------------------------------

class DelteFriendDBRequest : public ::google::protobuf::Message {
 public:
  DelteFriendDBRequest();
  virtual ~DelteFriendDBRequest();

  DelteFriendDBRequest(const DelteFriendDBRequest& from);

  inline DelteFriendDBRequest& operator=(const DelteFriendDBRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DelteFriendDBRequest& default_instance();

  void Swap(DelteFriendDBRequest* other);

  // implements Message ----------------------------------------------

  DelteFriendDBRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DelteFriendDBRequest& from);
  void MergeFrom(const DelteFriendDBRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 charId = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIdFieldNumber = 1;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.DelteFriendDBRequest)
 private:
  inline void set_has_charid();
  inline void clear_has_charid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 charid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_DBProto_2eproto();
  friend void protobuf_AssignDesc_DBProto_2eproto();
  friend void protobuf_ShutdownFile_DBProto_2eproto();

  void InitAsDefaultInstance();
  static DelteFriendDBRequest* default_instance_;
};
// -------------------------------------------------------------------

class GlobalDBRequst : public ::google::protobuf::Message {
 public:
  GlobalDBRequst();
  virtual ~GlobalDBRequst();

  GlobalDBRequst(const GlobalDBRequst& from);

  inline GlobalDBRequst& operator=(const GlobalDBRequst& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GlobalDBRequst& default_instance();

  void Swap(GlobalDBRequst* other);

  // implements Message ----------------------------------------------

  GlobalDBRequst* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GlobalDBRequst& from);
  void MergeFrom(const GlobalDBRequst& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto_ff.GlobalDBRequst)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_DBProto_2eproto();
  friend void protobuf_AssignDesc_DBProto_2eproto();
  friend void protobuf_ShutdownFile_DBProto_2eproto();

  void InitAsDefaultInstance();
  static GlobalDBRequst* default_instance_;
};
// -------------------------------------------------------------------

class GlobalDBEntry : public ::google::protobuf::Message {
 public:
  GlobalDBEntry();
  virtual ~GlobalDBEntry();

  GlobalDBEntry(const GlobalDBEntry& from);

  inline GlobalDBEntry& operator=(const GlobalDBEntry& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GlobalDBEntry& default_instance();

  void Swap(GlobalDBEntry* other);

  // implements Message ----------------------------------------------

  GlobalDBEntry* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GlobalDBEntry& from);
  void MergeFrom(const GlobalDBEntry& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 type_id = 1;
  inline bool has_type_id() const;
  inline void clear_type_id();
  static const int kTypeIdFieldNumber = 1;
  inline ::google::protobuf::int32 type_id() const;
  inline void set_type_id(::google::protobuf::int32 value);

  // optional bytes data = 2;
  inline bool has_data() const;
  inline void clear_data();
  static const int kDataFieldNumber = 2;
  inline const ::std::string& data() const;
  inline void set_data(const ::std::string& value);
  inline void set_data(const char* value);
  inline void set_data(const void* value, size_t size);
  inline ::std::string* mutable_data();
  inline ::std::string* release_data();
  inline void set_allocated_data(::std::string* data);

  // @@protoc_insertion_point(class_scope:proto_ff.GlobalDBEntry)
 private:
  inline void set_has_type_id();
  inline void clear_has_type_id();
  inline void set_has_data();
  inline void clear_has_data();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* data_;
  ::google::protobuf::int32 type_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_DBProto_2eproto();
  friend void protobuf_AssignDesc_DBProto_2eproto();
  friend void protobuf_ShutdownFile_DBProto_2eproto();

  void InitAsDefaultInstance();
  static GlobalDBEntry* default_instance_;
};
// -------------------------------------------------------------------

class GlobalDBResponse : public ::google::protobuf::Message {
 public:
  GlobalDBResponse();
  virtual ~GlobalDBResponse();

  GlobalDBResponse(const GlobalDBResponse& from);

  inline GlobalDBResponse& operator=(const GlobalDBResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GlobalDBResponse& default_instance();

  void Swap(GlobalDBResponse* other);

  // implements Message ----------------------------------------------

  GlobalDBResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GlobalDBResponse& from);
  void MergeFrom(const GlobalDBResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.GlobalDBEntry entry = 1;
  inline int entry_size() const;
  inline void clear_entry();
  static const int kEntryFieldNumber = 1;
  inline const ::proto_ff::GlobalDBEntry& entry(int index) const;
  inline ::proto_ff::GlobalDBEntry* mutable_entry(int index);
  inline ::proto_ff::GlobalDBEntry* add_entry();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::GlobalDBEntry >&
      entry() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::GlobalDBEntry >*
      mutable_entry();

  // optional int32 isfinish = 2;
  inline bool has_isfinish() const;
  inline void clear_isfinish();
  static const int kIsfinishFieldNumber = 2;
  inline ::google::protobuf::int32 isfinish() const;
  inline void set_isfinish(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.GlobalDBResponse)
 private:
  inline void set_has_isfinish();
  inline void clear_has_isfinish();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::GlobalDBEntry > entry_;
  ::google::protobuf::int32 isfinish_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_DBProto_2eproto();
  friend void protobuf_AssignDesc_DBProto_2eproto();
  friend void protobuf_ShutdownFile_DBProto_2eproto();

  void InitAsDefaultInstance();
  static GlobalDBResponse* default_instance_;
};
// -------------------------------------------------------------------

class GlobalDBSetRequest : public ::google::protobuf::Message {
 public:
  GlobalDBSetRequest();
  virtual ~GlobalDBSetRequest();

  GlobalDBSetRequest(const GlobalDBSetRequest& from);

  inline GlobalDBSetRequest& operator=(const GlobalDBSetRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GlobalDBSetRequest& default_instance();

  void Swap(GlobalDBSetRequest* other);

  // implements Message ----------------------------------------------

  GlobalDBSetRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GlobalDBSetRequest& from);
  void MergeFrom(const GlobalDBSetRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 type_id = 1;
  inline bool has_type_id() const;
  inline void clear_type_id();
  static const int kTypeIdFieldNumber = 1;
  inline ::google::protobuf::int32 type_id() const;
  inline void set_type_id(::google::protobuf::int32 value);

  // optional bytes data = 2;
  inline bool has_data() const;
  inline void clear_data();
  static const int kDataFieldNumber = 2;
  inline const ::std::string& data() const;
  inline void set_data(const ::std::string& value);
  inline void set_data(const char* value);
  inline void set_data(const void* value, size_t size);
  inline ::std::string* mutable_data();
  inline ::std::string* release_data();
  inline void set_allocated_data(::std::string* data);

  // @@protoc_insertion_point(class_scope:proto_ff.GlobalDBSetRequest)
 private:
  inline void set_has_type_id();
  inline void clear_has_type_id();
  inline void set_has_data();
  inline void clear_has_data();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* data_;
  ::google::protobuf::int32 type_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_DBProto_2eproto();
  friend void protobuf_AssignDesc_DBProto_2eproto();
  friend void protobuf_ShutdownFile_DBProto_2eproto();

  void InitAsDefaultInstance();
  static GlobalDBSetRequest* default_instance_;
};
// -------------------------------------------------------------------

class GlobalDBSetResponse : public ::google::protobuf::Message {
 public:
  GlobalDBSetResponse();
  virtual ~GlobalDBSetResponse();

  GlobalDBSetResponse(const GlobalDBSetResponse& from);

  inline GlobalDBSetResponse& operator=(const GlobalDBSetResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GlobalDBSetResponse& default_instance();

  void Swap(GlobalDBSetResponse* other);

  // implements Message ----------------------------------------------

  GlobalDBSetResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GlobalDBSetResponse& from);
  void MergeFrom(const GlobalDBSetResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 retcode = 1;
  inline bool has_retcode() const;
  inline void clear_retcode();
  static const int kRetcodeFieldNumber = 1;
  inline ::google::protobuf::int32 retcode() const;
  inline void set_retcode(::google::protobuf::int32 value);

  // optional int32 type_id = 2;
  inline bool has_type_id() const;
  inline void clear_type_id();
  static const int kTypeIdFieldNumber = 2;
  inline ::google::protobuf::int32 type_id() const;
  inline void set_type_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.GlobalDBSetResponse)
 private:
  inline void set_has_retcode();
  inline void clear_has_retcode();
  inline void set_has_type_id();
  inline void clear_has_type_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 retcode_;
  ::google::protobuf::int32 type_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_DBProto_2eproto();
  friend void protobuf_AssignDesc_DBProto_2eproto();
  friend void protobuf_ShutdownFile_DBProto_2eproto();

  void InitAsDefaultInstance();
  static GlobalDBSetResponse* default_instance_;
};
// -------------------------------------------------------------------

class GlobalComData : public ::google::protobuf::Message {
 public:
  GlobalComData();
  virtual ~GlobalComData();

  GlobalComData(const GlobalComData& from);

  inline GlobalComData& operator=(const GlobalComData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GlobalComData& default_instance();

  void Swap(GlobalComData* other);

  // implements Message ----------------------------------------------

  GlobalComData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GlobalComData& from);
  void MergeFrom(const GlobalComData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.DupTowerDBRecord towerDupReward = 1;
  inline int towerdupreward_size() const;
  inline void clear_towerdupreward();
  static const int kTowerDupRewardFieldNumber = 1;
  inline const ::proto_ff::DupTowerDBRecord& towerdupreward(int index) const;
  inline ::proto_ff::DupTowerDBRecord* mutable_towerdupreward(int index);
  inline ::proto_ff::DupTowerDBRecord* add_towerdupreward();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::DupTowerDBRecord >&
      towerdupreward() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::DupTowerDBRecord >*
      mutable_towerdupreward();

  // @@protoc_insertion_point(class_scope:proto_ff.GlobalComData)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::DupTowerDBRecord > towerdupreward_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_DBProto_2eproto();
  friend void protobuf_AssignDesc_DBProto_2eproto();
  friend void protobuf_ShutdownFile_DBProto_2eproto();

  void InitAsDefaultInstance();
  static GlobalComData* default_instance_;
};
// -------------------------------------------------------------------

class ActDBProto : public ::google::protobuf::Message {
 public:
  ActDBProto();
  virtual ~ActDBProto();

  ActDBProto(const ActDBProto& from);

  inline ActDBProto& operator=(const ActDBProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ActDBProto& default_instance();

  void Swap(ActDBProto* other);

  // implements Message ----------------------------------------------

  ActDBProto* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ActDBProto& from);
  void MergeFrom(const ActDBProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 actid = 1;
  inline bool has_actid() const;
  inline void clear_actid();
  static const int kActidFieldNumber = 1;
  inline ::google::protobuf::uint64 actid() const;
  inline void set_actid(::google::protobuf::uint64 value);

  // optional uint32 zid = 2;
  inline bool has_zid() const;
  inline void clear_zid();
  static const int kZidFieldNumber = 2;
  inline ::google::protobuf::uint32 zid() const;
  inline void set_zid(::google::protobuf::uint32 value);

  // optional uint64 finishtime = 3;
  inline bool has_finishtime() const;
  inline void clear_finishtime();
  static const int kFinishtimeFieldNumber = 3;
  inline ::google::protobuf::uint64 finishtime() const;
  inline void set_finishtime(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.ActDBProto)
 private:
  inline void set_has_actid();
  inline void clear_has_actid();
  inline void set_has_zid();
  inline void clear_has_zid();
  inline void set_has_finishtime();
  inline void clear_has_finishtime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 actid_;
  ::google::protobuf::uint64 finishtime_;
  ::google::protobuf::uint32 zid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_DBProto_2eproto();
  friend void protobuf_AssignDesc_DBProto_2eproto();
  friend void protobuf_ShutdownFile_DBProto_2eproto();

  void InitAsDefaultInstance();
  static ActDBProto* default_instance_;
};
// -------------------------------------------------------------------

class ActDBReq : public ::google::protobuf::Message {
 public:
  ActDBReq();
  virtual ~ActDBReq();

  ActDBReq(const ActDBReq& from);

  inline ActDBReq& operator=(const ActDBReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ActDBReq& default_instance();

  void Swap(ActDBReq* other);

  // implements Message ----------------------------------------------

  ActDBReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ActDBReq& from);
  void MergeFrom(const ActDBReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto_ff.ActDBReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_DBProto_2eproto();
  friend void protobuf_AssignDesc_DBProto_2eproto();
  friend void protobuf_ShutdownFile_DBProto_2eproto();

  void InitAsDefaultInstance();
  static ActDBReq* default_instance_;
};
// -------------------------------------------------------------------

class ActDBRsp : public ::google::protobuf::Message {
 public:
  ActDBRsp();
  virtual ~ActDBRsp();

  ActDBRsp(const ActDBRsp& from);

  inline ActDBRsp& operator=(const ActDBRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ActDBRsp& default_instance();

  void Swap(ActDBRsp* other);

  // implements Message ----------------------------------------------

  ActDBRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ActDBRsp& from);
  void MergeFrom(const ActDBRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.ActDBProto lst = 1;
  inline int lst_size() const;
  inline void clear_lst();
  static const int kLstFieldNumber = 1;
  inline const ::proto_ff::ActDBProto& lst(int index) const;
  inline ::proto_ff::ActDBProto* mutable_lst(int index);
  inline ::proto_ff::ActDBProto* add_lst();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::ActDBProto >&
      lst() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::ActDBProto >*
      mutable_lst();

  // @@protoc_insertion_point(class_scope:proto_ff.ActDBRsp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::ActDBProto > lst_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_DBProto_2eproto();
  friend void protobuf_AssignDesc_DBProto_2eproto();
  friend void protobuf_ShutdownFile_DBProto_2eproto();

  void InitAsDefaultInstance();
  static ActDBRsp* default_instance_;
};
// -------------------------------------------------------------------

class ActSaveDBReq : public ::google::protobuf::Message {
 public:
  ActSaveDBReq();
  virtual ~ActSaveDBReq();

  ActSaveDBReq(const ActSaveDBReq& from);

  inline ActSaveDBReq& operator=(const ActSaveDBReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ActSaveDBReq& default_instance();

  void Swap(ActSaveDBReq* other);

  // implements Message ----------------------------------------------

  ActSaveDBReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ActSaveDBReq& from);
  void MergeFrom(const ActSaveDBReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.ActDBProto lst = 1;
  inline int lst_size() const;
  inline void clear_lst();
  static const int kLstFieldNumber = 1;
  inline const ::proto_ff::ActDBProto& lst(int index) const;
  inline ::proto_ff::ActDBProto* mutable_lst(int index);
  inline ::proto_ff::ActDBProto* add_lst();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::ActDBProto >&
      lst() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::ActDBProto >*
      mutable_lst();

  // @@protoc_insertion_point(class_scope:proto_ff.ActSaveDBReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::ActDBProto > lst_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_DBProto_2eproto();
  friend void protobuf_AssignDesc_DBProto_2eproto();
  friend void protobuf_ShutdownFile_DBProto_2eproto();

  void InitAsDefaultInstance();
  static ActSaveDBReq* default_instance_;
};
// ===================================================================


// ===================================================================

// RoleReliveProto

// optional uint64 tired_time = 1;
inline bool RoleReliveProto::has_tired_time() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RoleReliveProto::set_has_tired_time() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RoleReliveProto::clear_has_tired_time() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RoleReliveProto::clear_tired_time() {
  tired_time_ = GOOGLE_ULONGLONG(0);
  clear_has_tired_time();
}
inline ::google::protobuf::uint64 RoleReliveProto::tired_time() const {
  return tired_time_;
}
inline void RoleReliveProto::set_tired_time(::google::protobuf::uint64 value) {
  set_has_tired_time();
  tired_time_ = value;
}

// optional int32 relive_num = 2;
inline bool RoleReliveProto::has_relive_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RoleReliveProto::set_has_relive_num() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RoleReliveProto::clear_has_relive_num() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RoleReliveProto::clear_relive_num() {
  relive_num_ = 0;
  clear_has_relive_num();
}
inline ::google::protobuf::int32 RoleReliveProto::relive_num() const {
  return relive_num_;
}
inline void RoleReliveProto::set_relive_num(::google::protobuf::int32 value) {
  set_has_relive_num();
  relive_num_ = value;
}

// optional int32 is_tired = 3;
inline bool RoleReliveProto::has_is_tired() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RoleReliveProto::set_has_is_tired() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RoleReliveProto::clear_has_is_tired() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RoleReliveProto::clear_is_tired() {
  is_tired_ = 0;
  clear_has_is_tired();
}
inline ::google::protobuf::int32 RoleReliveProto::is_tired() const {
  return is_tired_;
}
inline void RoleReliveProto::set_is_tired(::google::protobuf::int32 value) {
  set_has_is_tired();
  is_tired_ = value;
}

// optional uint64 mapid = 4;
inline bool RoleReliveProto::has_mapid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RoleReliveProto::set_has_mapid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void RoleReliveProto::clear_has_mapid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void RoleReliveProto::clear_mapid() {
  mapid_ = GOOGLE_ULONGLONG(0);
  clear_has_mapid();
}
inline ::google::protobuf::uint64 RoleReliveProto::mapid() const {
  return mapid_;
}
inline void RoleReliveProto::set_mapid(::google::protobuf::uint64 value) {
  set_has_mapid();
  mapid_ = value;
}

// optional int32 map_relive_num = 5;
inline bool RoleReliveProto::has_map_relive_num() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void RoleReliveProto::set_has_map_relive_num() {
  _has_bits_[0] |= 0x00000010u;
}
inline void RoleReliveProto::clear_has_map_relive_num() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void RoleReliveProto::clear_map_relive_num() {
  map_relive_num_ = 0;
  clear_has_map_relive_num();
}
inline ::google::protobuf::int32 RoleReliveProto::map_relive_num() const {
  return map_relive_num_;
}
inline void RoleReliveProto::set_map_relive_num(::google::protobuf::int32 value) {
  set_has_map_relive_num();
  map_relive_num_ = value;
}

// -------------------------------------------------------------------

// RoleDBBaseData

// optional string name = 1;
inline bool RoleDBBaseData::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RoleDBBaseData::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RoleDBBaseData::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RoleDBBaseData::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& RoleDBBaseData::name() const {
  return *name_;
}
inline void RoleDBBaseData::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void RoleDBBaseData::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void RoleDBBaseData::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* RoleDBBaseData::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* RoleDBBaseData::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void RoleDBBaseData::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional uint32 prof = 2;
inline bool RoleDBBaseData::has_prof() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RoleDBBaseData::set_has_prof() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RoleDBBaseData::clear_has_prof() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RoleDBBaseData::clear_prof() {
  prof_ = 0u;
  clear_has_prof();
}
inline ::google::protobuf::uint32 RoleDBBaseData::prof() const {
  return prof_;
}
inline void RoleDBBaseData::set_prof(::google::protobuf::uint32 value) {
  set_has_prof();
  prof_ = value;
}

// optional uint32 level = 3;
inline bool RoleDBBaseData::has_level() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RoleDBBaseData::set_has_level() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RoleDBBaseData::clear_has_level() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RoleDBBaseData::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 RoleDBBaseData::level() const {
  return level_;
}
inline void RoleDBBaseData::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
}

// optional int64 exp = 4;
inline bool RoleDBBaseData::has_exp() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RoleDBBaseData::set_has_exp() {
  _has_bits_[0] |= 0x00000008u;
}
inline void RoleDBBaseData::clear_has_exp() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void RoleDBBaseData::clear_exp() {
  exp_ = GOOGLE_LONGLONG(0);
  clear_has_exp();
}
inline ::google::protobuf::int64 RoleDBBaseData::exp() const {
  return exp_;
}
inline void RoleDBBaseData::set_exp(::google::protobuf::int64 value) {
  set_has_exp();
  exp_ = value;
}

// optional int64 hp = 5;
inline bool RoleDBBaseData::has_hp() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void RoleDBBaseData::set_has_hp() {
  _has_bits_[0] |= 0x00000010u;
}
inline void RoleDBBaseData::clear_has_hp() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void RoleDBBaseData::clear_hp() {
  hp_ = GOOGLE_LONGLONG(0);
  clear_has_hp();
}
inline ::google::protobuf::int64 RoleDBBaseData::hp() const {
  return hp_;
}
inline void RoleDBBaseData::set_hp(::google::protobuf::int64 value) {
  set_has_hp();
  hp_ = value;
}

// optional int64 fight = 6;
inline bool RoleDBBaseData::has_fight() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void RoleDBBaseData::set_has_fight() {
  _has_bits_[0] |= 0x00000020u;
}
inline void RoleDBBaseData::clear_has_fight() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void RoleDBBaseData::clear_fight() {
  fight_ = GOOGLE_LONGLONG(0);
  clear_has_fight();
}
inline ::google::protobuf::int64 RoleDBBaseData::fight() const {
  return fight_;
}
inline void RoleDBBaseData::set_fight(::google::protobuf::int64 value) {
  set_has_fight();
  fight_ = value;
}

// optional uint64 createTime = 7;
inline bool RoleDBBaseData::has_createtime() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void RoleDBBaseData::set_has_createtime() {
  _has_bits_[0] |= 0x00000040u;
}
inline void RoleDBBaseData::clear_has_createtime() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void RoleDBBaseData::clear_createtime() {
  createtime_ = GOOGLE_ULONGLONG(0);
  clear_has_createtime();
}
inline ::google::protobuf::uint64 RoleDBBaseData::createtime() const {
  return createtime_;
}
inline void RoleDBBaseData::set_createtime(::google::protobuf::uint64 value) {
  set_has_createtime();
  createtime_ = value;
}

// optional uint64 loginTime = 8;
inline bool RoleDBBaseData::has_logintime() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void RoleDBBaseData::set_has_logintime() {
  _has_bits_[0] |= 0x00000080u;
}
inline void RoleDBBaseData::clear_has_logintime() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void RoleDBBaseData::clear_logintime() {
  logintime_ = GOOGLE_ULONGLONG(0);
  clear_has_logintime();
}
inline ::google::protobuf::uint64 RoleDBBaseData::logintime() const {
  return logintime_;
}
inline void RoleDBBaseData::set_logintime(::google::protobuf::uint64 value) {
  set_has_logintime();
  logintime_ = value;
}

// optional uint64 logoutTime = 9;
inline bool RoleDBBaseData::has_logouttime() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void RoleDBBaseData::set_has_logouttime() {
  _has_bits_[0] |= 0x00000100u;
}
inline void RoleDBBaseData::clear_has_logouttime() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void RoleDBBaseData::clear_logouttime() {
  logouttime_ = GOOGLE_ULONGLONG(0);
  clear_has_logouttime();
}
inline ::google::protobuf::uint64 RoleDBBaseData::logouttime() const {
  return logouttime_;
}
inline void RoleDBBaseData::set_logouttime(::google::protobuf::uint64 value) {
  set_has_logouttime();
  logouttime_ = value;
}

// optional uint64 enter_scene_id = 10;
inline bool RoleDBBaseData::has_enter_scene_id() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void RoleDBBaseData::set_has_enter_scene_id() {
  _has_bits_[0] |= 0x00000200u;
}
inline void RoleDBBaseData::clear_has_enter_scene_id() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void RoleDBBaseData::clear_enter_scene_id() {
  enter_scene_id_ = GOOGLE_ULONGLONG(0);
  clear_has_enter_scene_id();
}
inline ::google::protobuf::uint64 RoleDBBaseData::enter_scene_id() const {
  return enter_scene_id_;
}
inline void RoleDBBaseData::set_enter_scene_id(::google::protobuf::uint64 value) {
  set_has_enter_scene_id();
  enter_scene_id_ = value;
}

// optional uint64 enter_map_id = 11;
inline bool RoleDBBaseData::has_enter_map_id() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void RoleDBBaseData::set_has_enter_map_id() {
  _has_bits_[0] |= 0x00000400u;
}
inline void RoleDBBaseData::clear_has_enter_map_id() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void RoleDBBaseData::clear_enter_map_id() {
  enter_map_id_ = GOOGLE_ULONGLONG(0);
  clear_has_enter_map_id();
}
inline ::google::protobuf::uint64 RoleDBBaseData::enter_map_id() const {
  return enter_map_id_;
}
inline void RoleDBBaseData::set_enter_map_id(::google::protobuf::uint64 value) {
  set_has_enter_map_id();
  enter_map_id_ = value;
}

// optional float enterposx = 12;
inline bool RoleDBBaseData::has_enterposx() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void RoleDBBaseData::set_has_enterposx() {
  _has_bits_[0] |= 0x00000800u;
}
inline void RoleDBBaseData::clear_has_enterposx() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void RoleDBBaseData::clear_enterposx() {
  enterposx_ = 0;
  clear_has_enterposx();
}
inline float RoleDBBaseData::enterposx() const {
  return enterposx_;
}
inline void RoleDBBaseData::set_enterposx(float value) {
  set_has_enterposx();
  enterposx_ = value;
}

// optional float enterposy = 13;
inline bool RoleDBBaseData::has_enterposy() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void RoleDBBaseData::set_has_enterposy() {
  _has_bits_[0] |= 0x00001000u;
}
inline void RoleDBBaseData::clear_has_enterposy() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void RoleDBBaseData::clear_enterposy() {
  enterposy_ = 0;
  clear_has_enterposy();
}
inline float RoleDBBaseData::enterposy() const {
  return enterposy_;
}
inline void RoleDBBaseData::set_enterposy(float value) {
  set_has_enterposy();
  enterposy_ = value;
}

// optional float enterposz = 14;
inline bool RoleDBBaseData::has_enterposz() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void RoleDBBaseData::set_has_enterposz() {
  _has_bits_[0] |= 0x00002000u;
}
inline void RoleDBBaseData::clear_has_enterposz() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void RoleDBBaseData::clear_enterposz() {
  enterposz_ = 0;
  clear_has_enterposz();
}
inline float RoleDBBaseData::enterposz() const {
  return enterposz_;
}
inline void RoleDBBaseData::set_enterposz(float value) {
  set_has_enterposz();
  enterposz_ = value;
}

// optional uint64 lastsceneid = 15;
inline bool RoleDBBaseData::has_lastsceneid() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void RoleDBBaseData::set_has_lastsceneid() {
  _has_bits_[0] |= 0x00004000u;
}
inline void RoleDBBaseData::clear_has_lastsceneid() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void RoleDBBaseData::clear_lastsceneid() {
  lastsceneid_ = GOOGLE_ULONGLONG(0);
  clear_has_lastsceneid();
}
inline ::google::protobuf::uint64 RoleDBBaseData::lastsceneid() const {
  return lastsceneid_;
}
inline void RoleDBBaseData::set_lastsceneid(::google::protobuf::uint64 value) {
  set_has_lastsceneid();
  lastsceneid_ = value;
}

// optional uint64 lastmapid = 16;
inline bool RoleDBBaseData::has_lastmapid() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void RoleDBBaseData::set_has_lastmapid() {
  _has_bits_[0] |= 0x00008000u;
}
inline void RoleDBBaseData::clear_has_lastmapid() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void RoleDBBaseData::clear_lastmapid() {
  lastmapid_ = GOOGLE_ULONGLONG(0);
  clear_has_lastmapid();
}
inline ::google::protobuf::uint64 RoleDBBaseData::lastmapid() const {
  return lastmapid_;
}
inline void RoleDBBaseData::set_lastmapid(::google::protobuf::uint64 value) {
  set_has_lastmapid();
  lastmapid_ = value;
}

// optional float lastposx = 17;
inline bool RoleDBBaseData::has_lastposx() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void RoleDBBaseData::set_has_lastposx() {
  _has_bits_[0] |= 0x00010000u;
}
inline void RoleDBBaseData::clear_has_lastposx() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void RoleDBBaseData::clear_lastposx() {
  lastposx_ = 0;
  clear_has_lastposx();
}
inline float RoleDBBaseData::lastposx() const {
  return lastposx_;
}
inline void RoleDBBaseData::set_lastposx(float value) {
  set_has_lastposx();
  lastposx_ = value;
}

// optional float lastposy = 18;
inline bool RoleDBBaseData::has_lastposy() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void RoleDBBaseData::set_has_lastposy() {
  _has_bits_[0] |= 0x00020000u;
}
inline void RoleDBBaseData::clear_has_lastposy() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void RoleDBBaseData::clear_lastposy() {
  lastposy_ = 0;
  clear_has_lastposy();
}
inline float RoleDBBaseData::lastposy() const {
  return lastposy_;
}
inline void RoleDBBaseData::set_lastposy(float value) {
  set_has_lastposy();
  lastposy_ = value;
}

// optional float lastposz = 19;
inline bool RoleDBBaseData::has_lastposz() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void RoleDBBaseData::set_has_lastposz() {
  _has_bits_[0] |= 0x00040000u;
}
inline void RoleDBBaseData::clear_has_lastposz() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void RoleDBBaseData::clear_lastposz() {
  lastposz_ = 0;
  clear_has_lastposz();
}
inline float RoleDBBaseData::lastposz() const {
  return lastposz_;
}
inline void RoleDBBaseData::set_lastposz(float value) {
  set_has_lastposz();
  lastposz_ = value;
}

// optional .proto_ff.RoleFacadeProto facade = 20;
inline bool RoleDBBaseData::has_facade() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void RoleDBBaseData::set_has_facade() {
  _has_bits_[0] |= 0x00080000u;
}
inline void RoleDBBaseData::clear_has_facade() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void RoleDBBaseData::clear_facade() {
  if (facade_ != NULL) facade_->::proto_ff::RoleFacadeProto::Clear();
  clear_has_facade();
}
inline const ::proto_ff::RoleFacadeProto& RoleDBBaseData::facade() const {
  return facade_ != NULL ? *facade_ : *default_instance_->facade_;
}
inline ::proto_ff::RoleFacadeProto* RoleDBBaseData::mutable_facade() {
  set_has_facade();
  if (facade_ == NULL) facade_ = new ::proto_ff::RoleFacadeProto;
  return facade_;
}
inline ::proto_ff::RoleFacadeProto* RoleDBBaseData::release_facade() {
  clear_has_facade();
  ::proto_ff::RoleFacadeProto* temp = facade_;
  facade_ = NULL;
  return temp;
}
inline void RoleDBBaseData::set_allocated_facade(::proto_ff::RoleFacadeProto* facade) {
  delete facade_;
  facade_ = facade;
  if (facade) {
    set_has_facade();
  } else {
    clear_has_facade();
  }
}

// optional uint32 vip_level = 21;
inline bool RoleDBBaseData::has_vip_level() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void RoleDBBaseData::set_has_vip_level() {
  _has_bits_[0] |= 0x00100000u;
}
inline void RoleDBBaseData::clear_has_vip_level() {
  _has_bits_[0] &= ~0x00100000u;
}
inline void RoleDBBaseData::clear_vip_level() {
  vip_level_ = 0u;
  clear_has_vip_level();
}
inline ::google::protobuf::uint32 RoleDBBaseData::vip_level() const {
  return vip_level_;
}
inline void RoleDBBaseData::set_vip_level(::google::protobuf::uint32 value) {
  set_has_vip_level();
  vip_level_ = value;
}

// optional int32 state = 22;
inline bool RoleDBBaseData::has_state() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
inline void RoleDBBaseData::set_has_state() {
  _has_bits_[0] |= 0x00200000u;
}
inline void RoleDBBaseData::clear_has_state() {
  _has_bits_[0] &= ~0x00200000u;
}
inline void RoleDBBaseData::clear_state() {
  state_ = 0;
  clear_has_state();
}
inline ::google::protobuf::int32 RoleDBBaseData::state() const {
  return state_;
}
inline void RoleDBBaseData::set_state(::google::protobuf::int32 value) {
  set_has_state();
  state_ = value;
}

// optional uint64 hanguptime = 23;
inline bool RoleDBBaseData::has_hanguptime() const {
  return (_has_bits_[0] & 0x00400000u) != 0;
}
inline void RoleDBBaseData::set_has_hanguptime() {
  _has_bits_[0] |= 0x00400000u;
}
inline void RoleDBBaseData::clear_has_hanguptime() {
  _has_bits_[0] &= ~0x00400000u;
}
inline void RoleDBBaseData::clear_hanguptime() {
  hanguptime_ = GOOGLE_ULONGLONG(0);
  clear_has_hanguptime();
}
inline ::google::protobuf::uint64 RoleDBBaseData::hanguptime() const {
  return hanguptime_;
}
inline void RoleDBBaseData::set_hanguptime(::google::protobuf::uint64 value) {
  set_has_hanguptime();
  hanguptime_ = value;
}

// optional .proto_ff.RoleReliveProto relive = 24;
inline bool RoleDBBaseData::has_relive() const {
  return (_has_bits_[0] & 0x00800000u) != 0;
}
inline void RoleDBBaseData::set_has_relive() {
  _has_bits_[0] |= 0x00800000u;
}
inline void RoleDBBaseData::clear_has_relive() {
  _has_bits_[0] &= ~0x00800000u;
}
inline void RoleDBBaseData::clear_relive() {
  if (relive_ != NULL) relive_->::proto_ff::RoleReliveProto::Clear();
  clear_has_relive();
}
inline const ::proto_ff::RoleReliveProto& RoleDBBaseData::relive() const {
  return relive_ != NULL ? *relive_ : *default_instance_->relive_;
}
inline ::proto_ff::RoleReliveProto* RoleDBBaseData::mutable_relive() {
  set_has_relive();
  if (relive_ == NULL) relive_ = new ::proto_ff::RoleReliveProto;
  return relive_;
}
inline ::proto_ff::RoleReliveProto* RoleDBBaseData::release_relive() {
  clear_has_relive();
  ::proto_ff::RoleReliveProto* temp = relive_;
  relive_ = NULL;
  return temp;
}
inline void RoleDBBaseData::set_allocated_relive(::proto_ff::RoleReliveProto* relive) {
  delete relive_;
  relive_ = relive;
  if (relive) {
    set_has_relive();
  } else {
    clear_has_relive();
  }
}

// optional int64 gold = 25;
inline bool RoleDBBaseData::has_gold() const {
  return (_has_bits_[0] & 0x01000000u) != 0;
}
inline void RoleDBBaseData::set_has_gold() {
  _has_bits_[0] |= 0x01000000u;
}
inline void RoleDBBaseData::clear_has_gold() {
  _has_bits_[0] &= ~0x01000000u;
}
inline void RoleDBBaseData::clear_gold() {
  gold_ = GOOGLE_LONGLONG(0);
  clear_has_gold();
}
inline ::google::protobuf::int64 RoleDBBaseData::gold() const {
  return gold_;
}
inline void RoleDBBaseData::set_gold(::google::protobuf::int64 value) {
  set_has_gold();
  gold_ = value;
}

// optional int64 dia = 26;
inline bool RoleDBBaseData::has_dia() const {
  return (_has_bits_[0] & 0x02000000u) != 0;
}
inline void RoleDBBaseData::set_has_dia() {
  _has_bits_[0] |= 0x02000000u;
}
inline void RoleDBBaseData::clear_has_dia() {
  _has_bits_[0] &= ~0x02000000u;
}
inline void RoleDBBaseData::clear_dia() {
  dia_ = GOOGLE_LONGLONG(0);
  clear_has_dia();
}
inline ::google::protobuf::int64 RoleDBBaseData::dia() const {
  return dia_;
}
inline void RoleDBBaseData::set_dia(::google::protobuf::int64 value) {
  set_has_dia();
  dia_ = value;
}

// optional int64 bdia = 27;
inline bool RoleDBBaseData::has_bdia() const {
  return (_has_bits_[0] & 0x04000000u) != 0;
}
inline void RoleDBBaseData::set_has_bdia() {
  _has_bits_[0] |= 0x04000000u;
}
inline void RoleDBBaseData::clear_has_bdia() {
  _has_bits_[0] &= ~0x04000000u;
}
inline void RoleDBBaseData::clear_bdia() {
  bdia_ = GOOGLE_LONGLONG(0);
  clear_has_bdia();
}
inline ::google::protobuf::int64 RoleDBBaseData::bdia() const {
  return bdia_;
}
inline void RoleDBBaseData::set_bdia(::google::protobuf::int64 value) {
  set_has_bdia();
  bdia_ = value;
}

// optional int64 magic = 28;
inline bool RoleDBBaseData::has_magic() const {
  return (_has_bits_[0] & 0x08000000u) != 0;
}
inline void RoleDBBaseData::set_has_magic() {
  _has_bits_[0] |= 0x08000000u;
}
inline void RoleDBBaseData::clear_has_magic() {
  _has_bits_[0] &= ~0x08000000u;
}
inline void RoleDBBaseData::clear_magic() {
  magic_ = GOOGLE_LONGLONG(0);
  clear_has_magic();
}
inline ::google::protobuf::int64 RoleDBBaseData::magic() const {
  return magic_;
}
inline void RoleDBBaseData::set_magic(::google::protobuf::int64 value) {
  set_has_magic();
  magic_ = value;
}

// optional int64 prestige = 29;
inline bool RoleDBBaseData::has_prestige() const {
  return (_has_bits_[0] & 0x10000000u) != 0;
}
inline void RoleDBBaseData::set_has_prestige() {
  _has_bits_[0] |= 0x10000000u;
}
inline void RoleDBBaseData::clear_has_prestige() {
  _has_bits_[0] &= ~0x10000000u;
}
inline void RoleDBBaseData::clear_prestige() {
  prestige_ = GOOGLE_LONGLONG(0);
  clear_has_prestige();
}
inline ::google::protobuf::int64 RoleDBBaseData::prestige() const {
  return prestige_;
}
inline void RoleDBBaseData::set_prestige(::google::protobuf::int64 value) {
  set_has_prestige();
  prestige_ = value;
}

// optional int32 vipLv = 30;
inline bool RoleDBBaseData::has_viplv() const {
  return (_has_bits_[0] & 0x20000000u) != 0;
}
inline void RoleDBBaseData::set_has_viplv() {
  _has_bits_[0] |= 0x20000000u;
}
inline void RoleDBBaseData::clear_has_viplv() {
  _has_bits_[0] &= ~0x20000000u;
}
inline void RoleDBBaseData::clear_viplv() {
  viplv_ = 0;
  clear_has_viplv();
}
inline ::google::protobuf::int32 RoleDBBaseData::viplv() const {
  return viplv_;
}
inline void RoleDBBaseData::set_viplv(::google::protobuf::int32 value) {
  set_has_viplv();
  viplv_ = value;
}

// -------------------------------------------------------------------

// BagItemsDBData

// repeated .proto_ff.ItemProtoInfo data = 1;
inline int BagItemsDBData::data_size() const {
  return data_.size();
}
inline void BagItemsDBData::clear_data() {
  data_.Clear();
}
inline const ::proto_ff::ItemProtoInfo& BagItemsDBData::data(int index) const {
  return data_.Get(index);
}
inline ::proto_ff::ItemProtoInfo* BagItemsDBData::mutable_data(int index) {
  return data_.Mutable(index);
}
inline ::proto_ff::ItemProtoInfo* BagItemsDBData::add_data() {
  return data_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::ItemProtoInfo >&
BagItemsDBData::data() const {
  return data_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::ItemProtoInfo >*
BagItemsDBData::mutable_data() {
  return &data_;
}

// optional int32 offset = 2;
inline bool BagItemsDBData::has_offset() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BagItemsDBData::set_has_offset() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BagItemsDBData::clear_has_offset() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BagItemsDBData::clear_offset() {
  offset_ = 0;
  clear_has_offset();
}
inline ::google::protobuf::int32 BagItemsDBData::offset() const {
  return offset_;
}
inline void BagItemsDBData::set_offset(::google::protobuf::int32 value) {
  set_has_offset();
  offset_ = value;
}

// -------------------------------------------------------------------

// BagDBSimpleData

// optional uint32 package_type = 1;
inline bool BagDBSimpleData::has_package_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BagDBSimpleData::set_has_package_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BagDBSimpleData::clear_has_package_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BagDBSimpleData::clear_package_type() {
  package_type_ = 0u;
  clear_has_package_type();
}
inline ::google::protobuf::uint32 BagDBSimpleData::package_type() const {
  return package_type_;
}
inline void BagDBSimpleData::set_package_type(::google::protobuf::uint32 value) {
  set_has_package_type();
  package_type_ = value;
}

// optional uint32 expand_num = 2;
inline bool BagDBSimpleData::has_expand_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BagDBSimpleData::set_has_expand_num() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BagDBSimpleData::clear_has_expand_num() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BagDBSimpleData::clear_expand_num() {
  expand_num_ = 0u;
  clear_has_expand_num();
}
inline ::google::protobuf::uint32 BagDBSimpleData::expand_num() const {
  return expand_num_;
}
inline void BagDBSimpleData::set_expand_num(::google::protobuf::uint32 value) {
  set_has_expand_num();
  expand_num_ = value;
}

// -------------------------------------------------------------------

// RoleDBUnitBagData

// optional string table_name = 1;
inline bool RoleDBUnitBagData::has_table_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RoleDBUnitBagData::set_has_table_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RoleDBUnitBagData::clear_has_table_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RoleDBUnitBagData::clear_table_name() {
  if (table_name_ != &::google::protobuf::internal::kEmptyString) {
    table_name_->clear();
  }
  clear_has_table_name();
}
inline const ::std::string& RoleDBUnitBagData::table_name() const {
  return *table_name_;
}
inline void RoleDBUnitBagData::set_table_name(const ::std::string& value) {
  set_has_table_name();
  if (table_name_ == &::google::protobuf::internal::kEmptyString) {
    table_name_ = new ::std::string;
  }
  table_name_->assign(value);
}
inline void RoleDBUnitBagData::set_table_name(const char* value) {
  set_has_table_name();
  if (table_name_ == &::google::protobuf::internal::kEmptyString) {
    table_name_ = new ::std::string;
  }
  table_name_->assign(value);
}
inline void RoleDBUnitBagData::set_table_name(const char* value, size_t size) {
  set_has_table_name();
  if (table_name_ == &::google::protobuf::internal::kEmptyString) {
    table_name_ = new ::std::string;
  }
  table_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* RoleDBUnitBagData::mutable_table_name() {
  set_has_table_name();
  if (table_name_ == &::google::protobuf::internal::kEmptyString) {
    table_name_ = new ::std::string;
  }
  return table_name_;
}
inline ::std::string* RoleDBUnitBagData::release_table_name() {
  clear_has_table_name();
  if (table_name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = table_name_;
    table_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void RoleDBUnitBagData::set_allocated_table_name(::std::string* table_name) {
  if (table_name_ != &::google::protobuf::internal::kEmptyString) {
    delete table_name_;
  }
  if (table_name) {
    set_has_table_name();
    table_name_ = table_name;
  } else {
    clear_has_table_name();
    table_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional .proto_ff.BagDBSimpleData simple = 2;
inline bool RoleDBUnitBagData::has_simple() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RoleDBUnitBagData::set_has_simple() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RoleDBUnitBagData::clear_has_simple() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RoleDBUnitBagData::clear_simple() {
  if (simple_ != NULL) simple_->::proto_ff::BagDBSimpleData::Clear();
  clear_has_simple();
}
inline const ::proto_ff::BagDBSimpleData& RoleDBUnitBagData::simple() const {
  return simple_ != NULL ? *simple_ : *default_instance_->simple_;
}
inline ::proto_ff::BagDBSimpleData* RoleDBUnitBagData::mutable_simple() {
  set_has_simple();
  if (simple_ == NULL) simple_ = new ::proto_ff::BagDBSimpleData;
  return simple_;
}
inline ::proto_ff::BagDBSimpleData* RoleDBUnitBagData::release_simple() {
  clear_has_simple();
  ::proto_ff::BagDBSimpleData* temp = simple_;
  simple_ = NULL;
  return temp;
}
inline void RoleDBUnitBagData::set_allocated_simple(::proto_ff::BagDBSimpleData* simple) {
  delete simple_;
  simple_ = simple;
  if (simple) {
    set_has_simple();
  } else {
    clear_has_simple();
  }
}

// repeated .proto_ff.BagItemsDBData parts = 3;
inline int RoleDBUnitBagData::parts_size() const {
  return parts_.size();
}
inline void RoleDBUnitBagData::clear_parts() {
  parts_.Clear();
}
inline const ::proto_ff::BagItemsDBData& RoleDBUnitBagData::parts(int index) const {
  return parts_.Get(index);
}
inline ::proto_ff::BagItemsDBData* RoleDBUnitBagData::mutable_parts(int index) {
  return parts_.Mutable(index);
}
inline ::proto_ff::BagItemsDBData* RoleDBUnitBagData::add_parts() {
  return parts_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::BagItemsDBData >&
RoleDBUnitBagData::parts() const {
  return parts_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::BagItemsDBData >*
RoleDBUnitBagData::mutable_parts() {
  return &parts_;
}

// -------------------------------------------------------------------

// RoleDBBagData

// repeated .proto_ff.RoleDBUnitBagData bags = 1;
inline int RoleDBBagData::bags_size() const {
  return bags_.size();
}
inline void RoleDBBagData::clear_bags() {
  bags_.Clear();
}
inline const ::proto_ff::RoleDBUnitBagData& RoleDBBagData::bags(int index) const {
  return bags_.Get(index);
}
inline ::proto_ff::RoleDBUnitBagData* RoleDBBagData::mutable_bags(int index) {
  return bags_.Mutable(index);
}
inline ::proto_ff::RoleDBUnitBagData* RoleDBBagData::add_bags() {
  return bags_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::RoleDBUnitBagData >&
RoleDBBagData::bags() const {
  return bags_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::RoleDBUnitBagData >*
RoleDBBagData::mutable_bags() {
  return &bags_;
}

// -------------------------------------------------------------------

// RoleDBEquipData

// repeated .proto_ff.EquipInfo infos = 1;
inline int RoleDBEquipData::infos_size() const {
  return infos_.size();
}
inline void RoleDBEquipData::clear_infos() {
  infos_.Clear();
}
inline const ::proto_ff::EquipInfo& RoleDBEquipData::infos(int index) const {
  return infos_.Get(index);
}
inline ::proto_ff::EquipInfo* RoleDBEquipData::mutable_infos(int index) {
  return infos_.Mutable(index);
}
inline ::proto_ff::EquipInfo* RoleDBEquipData::add_infos() {
  return infos_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::EquipInfo >&
RoleDBEquipData::infos() const {
  return infos_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::EquipInfo >*
RoleDBEquipData::mutable_infos() {
  return &infos_;
}

// -------------------------------------------------------------------

// RoleDBTaskData

// -------------------------------------------------------------------

// GrowPartEntryDBInfo

// optional int64 id = 1;
inline bool GrowPartEntryDBInfo::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GrowPartEntryDBInfo::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GrowPartEntryDBInfo::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GrowPartEntryDBInfo::clear_id() {
  id_ = GOOGLE_LONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::int64 GrowPartEntryDBInfo::id() const {
  return id_;
}
inline void GrowPartEntryDBInfo::set_id(::google::protobuf::int64 value) {
  set_has_id();
  id_ = value;
}

// optional int32 lv = 2;
inline bool GrowPartEntryDBInfo::has_lv() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GrowPartEntryDBInfo::set_has_lv() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GrowPartEntryDBInfo::clear_has_lv() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GrowPartEntryDBInfo::clear_lv() {
  lv_ = 0;
  clear_has_lv();
}
inline ::google::protobuf::int32 GrowPartEntryDBInfo::lv() const {
  return lv_;
}
inline void GrowPartEntryDBInfo::set_lv(::google::protobuf::int32 value) {
  set_has_lv();
  lv_ = value;
}

// -------------------------------------------------------------------

// GrowPartDBData

// optional int32 type = 1;
inline bool GrowPartDBData::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GrowPartDBData::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GrowPartDBData::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GrowPartDBData::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 GrowPartDBData::type() const {
  return type_;
}
inline void GrowPartDBData::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// repeated .proto_ff.GrowPartEntryDBInfo entrys = 2;
inline int GrowPartDBData::entrys_size() const {
  return entrys_.size();
}
inline void GrowPartDBData::clear_entrys() {
  entrys_.Clear();
}
inline const ::proto_ff::GrowPartEntryDBInfo& GrowPartDBData::entrys(int index) const {
  return entrys_.Get(index);
}
inline ::proto_ff::GrowPartEntryDBInfo* GrowPartDBData::mutable_entrys(int index) {
  return entrys_.Mutable(index);
}
inline ::proto_ff::GrowPartEntryDBInfo* GrowPartDBData::add_entrys() {
  return entrys_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::GrowPartEntryDBInfo >&
GrowPartDBData::entrys() const {
  return entrys_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::GrowPartEntryDBInfo >*
GrowPartDBData::mutable_entrys() {
  return &entrys_;
}

// optional int64 curId = 3;
inline bool GrowPartDBData::has_curid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GrowPartDBData::set_has_curid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GrowPartDBData::clear_has_curid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GrowPartDBData::clear_curid() {
  curid_ = GOOGLE_LONGLONG(0);
  clear_has_curid();
}
inline ::google::protobuf::int64 GrowPartDBData::curid() const {
  return curid_;
}
inline void GrowPartDBData::set_curid(::google::protobuf::int64 value) {
  set_has_curid();
  curid_ = value;
}

// -------------------------------------------------------------------

// GrowDBData

// repeated .proto_ff.GrowPartDBData parts = 1;
inline int GrowDBData::parts_size() const {
  return parts_.size();
}
inline void GrowDBData::clear_parts() {
  parts_.Clear();
}
inline const ::proto_ff::GrowPartDBData& GrowDBData::parts(int index) const {
  return parts_.Get(index);
}
inline ::proto_ff::GrowPartDBData* GrowDBData::mutable_parts(int index) {
  return parts_.Mutable(index);
}
inline ::proto_ff::GrowPartDBData* GrowDBData::add_parts() {
  return parts_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::GrowPartDBData >&
GrowDBData::parts() const {
  return parts_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::GrowPartDBData >*
GrowDBData::mutable_parts() {
  return &parts_;
}

// -------------------------------------------------------------------

// DayUseItemData

// repeated .proto_ff.ComPair64 info = 1;
inline int DayUseItemData::info_size() const {
  return info_.size();
}
inline void DayUseItemData::clear_info() {
  info_.Clear();
}
inline const ::proto_ff::ComPair64& DayUseItemData::info(int index) const {
  return info_.Get(index);
}
inline ::proto_ff::ComPair64* DayUseItemData::mutable_info(int index) {
  return info_.Mutable(index);
}
inline ::proto_ff::ComPair64* DayUseItemData::add_info() {
  return info_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair64 >&
DayUseItemData::info() const {
  return info_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::ComPair64 >*
DayUseItemData::mutable_info() {
  return &info_;
}

// -------------------------------------------------------------------

// MiniDBData

// optional uint64 lastTime = 1;
inline bool MiniDBData::has_lasttime() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MiniDBData::set_has_lasttime() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MiniDBData::clear_has_lasttime() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MiniDBData::clear_lasttime() {
  lasttime_ = GOOGLE_ULONGLONG(0);
  clear_has_lasttime();
}
inline ::google::protobuf::uint64 MiniDBData::lasttime() const {
  return lasttime_;
}
inline void MiniDBData::set_lasttime(::google::protobuf::uint64 value) {
  set_has_lasttime();
  lasttime_ = value;
}

// optional .proto_ff.DayUseItemData useItem = 2;
inline bool MiniDBData::has_useitem() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MiniDBData::set_has_useitem() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MiniDBData::clear_has_useitem() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MiniDBData::clear_useitem() {
  if (useitem_ != NULL) useitem_->::proto_ff::DayUseItemData::Clear();
  clear_has_useitem();
}
inline const ::proto_ff::DayUseItemData& MiniDBData::useitem() const {
  return useitem_ != NULL ? *useitem_ : *default_instance_->useitem_;
}
inline ::proto_ff::DayUseItemData* MiniDBData::mutable_useitem() {
  set_has_useitem();
  if (useitem_ == NULL) useitem_ = new ::proto_ff::DayUseItemData;
  return useitem_;
}
inline ::proto_ff::DayUseItemData* MiniDBData::release_useitem() {
  clear_has_useitem();
  ::proto_ff::DayUseItemData* temp = useitem_;
  useitem_ = NULL;
  return temp;
}
inline void MiniDBData::set_allocated_useitem(::proto_ff::DayUseItemData* useitem) {
  delete useitem_;
  useitem_ = useitem;
  if (useitem) {
    set_has_useitem();
  } else {
    clear_has_useitem();
  }
}

// -------------------------------------------------------------------

// FacadeDataInfo

// optional uint32 facade_type = 1;
inline bool FacadeDataInfo::has_facade_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FacadeDataInfo::set_has_facade_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FacadeDataInfo::clear_has_facade_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FacadeDataInfo::clear_facade_type() {
  facade_type_ = 0u;
  clear_has_facade_type();
}
inline ::google::protobuf::uint32 FacadeDataInfo::facade_type() const {
  return facade_type_;
}
inline void FacadeDataInfo::set_facade_type(::google::protobuf::uint32 value) {
  set_has_facade_type();
  facade_type_ = value;
}

// optional uint64 facade_id = 2;
inline bool FacadeDataInfo::has_facade_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FacadeDataInfo::set_has_facade_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FacadeDataInfo::clear_has_facade_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FacadeDataInfo::clear_facade_id() {
  facade_id_ = GOOGLE_ULONGLONG(0);
  clear_has_facade_id();
}
inline ::google::protobuf::uint64 FacadeDataInfo::facade_id() const {
  return facade_id_;
}
inline void FacadeDataInfo::set_facade_id(::google::protobuf::uint64 value) {
  set_has_facade_id();
  facade_id_ = value;
}

// optional uint32 facade_lev = 3;
inline bool FacadeDataInfo::has_facade_lev() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void FacadeDataInfo::set_has_facade_lev() {
  _has_bits_[0] |= 0x00000004u;
}
inline void FacadeDataInfo::clear_has_facade_lev() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void FacadeDataInfo::clear_facade_lev() {
  facade_lev_ = 0u;
  clear_has_facade_lev();
}
inline ::google::protobuf::uint32 FacadeDataInfo::facade_lev() const {
  return facade_lev_;
}
inline void FacadeDataInfo::set_facade_lev(::google::protobuf::uint32 value) {
  set_has_facade_lev();
  facade_lev_ = value;
}

// optional uint64 facade_exp = 4;
inline bool FacadeDataInfo::has_facade_exp() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void FacadeDataInfo::set_has_facade_exp() {
  _has_bits_[0] |= 0x00000008u;
}
inline void FacadeDataInfo::clear_has_facade_exp() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void FacadeDataInfo::clear_facade_exp() {
  facade_exp_ = GOOGLE_ULONGLONG(0);
  clear_has_facade_exp();
}
inline ::google::protobuf::uint64 FacadeDataInfo::facade_exp() const {
  return facade_exp_;
}
inline void FacadeDataInfo::set_facade_exp(::google::protobuf::uint64 value) {
  set_has_facade_exp();
  facade_exp_ = value;
}

// optional bool use_soul_item = 5;
inline bool FacadeDataInfo::has_use_soul_item() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void FacadeDataInfo::set_has_use_soul_item() {
  _has_bits_[0] |= 0x00000010u;
}
inline void FacadeDataInfo::clear_has_use_soul_item() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void FacadeDataInfo::clear_use_soul_item() {
  use_soul_item_ = false;
  clear_has_use_soul_item();
}
inline bool FacadeDataInfo::use_soul_item() const {
  return use_soul_item_;
}
inline void FacadeDataInfo::set_use_soul_item(bool value) {
  set_has_use_soul_item();
  use_soul_item_ = value;
}

// optional bool use_facade = 6;
inline bool FacadeDataInfo::has_use_facade() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void FacadeDataInfo::set_has_use_facade() {
  _has_bits_[0] |= 0x00000020u;
}
inline void FacadeDataInfo::clear_has_use_facade() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void FacadeDataInfo::clear_use_facade() {
  use_facade_ = false;
  clear_has_use_facade();
}
inline bool FacadeDataInfo::use_facade() const {
  return use_facade_;
}
inline void FacadeDataInfo::set_use_facade(bool value) {
  set_has_use_facade();
  use_facade_ = value;
}

// optional uint64 equip_fantasy_id = 7;
inline bool FacadeDataInfo::has_equip_fantasy_id() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void FacadeDataInfo::set_has_equip_fantasy_id() {
  _has_bits_[0] |= 0x00000040u;
}
inline void FacadeDataInfo::clear_has_equip_fantasy_id() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void FacadeDataInfo::clear_equip_fantasy_id() {
  equip_fantasy_id_ = GOOGLE_ULONGLONG(0);
  clear_has_equip_fantasy_id();
}
inline ::google::protobuf::uint64 FacadeDataInfo::equip_fantasy_id() const {
  return equip_fantasy_id_;
}
inline void FacadeDataInfo::set_equip_fantasy_id(::google::protobuf::uint64 value) {
  set_has_equip_fantasy_id();
  equip_fantasy_id_ = value;
}

// repeated .proto_ff.FacadeFantasyData fantasy_map = 8;
inline int FacadeDataInfo::fantasy_map_size() const {
  return fantasy_map_.size();
}
inline void FacadeDataInfo::clear_fantasy_map() {
  fantasy_map_.Clear();
}
inline const ::proto_ff::FacadeFantasyData& FacadeDataInfo::fantasy_map(int index) const {
  return fantasy_map_.Get(index);
}
inline ::proto_ff::FacadeFantasyData* FacadeDataInfo::mutable_fantasy_map(int index) {
  return fantasy_map_.Mutable(index);
}
inline ::proto_ff::FacadeFantasyData* FacadeDataInfo::add_fantasy_map() {
  return fantasy_map_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::FacadeFantasyData >&
FacadeDataInfo::fantasy_map() const {
  return fantasy_map_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::FacadeFantasyData >*
FacadeDataInfo::mutable_fantasy_map() {
  return &fantasy_map_;
}

// repeated .proto_ff.FacadeFragmentData fragment_map = 9;
inline int FacadeDataInfo::fragment_map_size() const {
  return fragment_map_.size();
}
inline void FacadeDataInfo::clear_fragment_map() {
  fragment_map_.Clear();
}
inline const ::proto_ff::FacadeFragmentData& FacadeDataInfo::fragment_map(int index) const {
  return fragment_map_.Get(index);
}
inline ::proto_ff::FacadeFragmentData* FacadeDataInfo::mutable_fragment_map(int index) {
  return fragment_map_.Mutable(index);
}
inline ::proto_ff::FacadeFragmentData* FacadeDataInfo::add_fragment_map() {
  return fragment_map_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::FacadeFragmentData >&
FacadeDataInfo::fragment_map() const {
  return fragment_map_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::FacadeFragmentData >*
FacadeDataInfo::mutable_fragment_map() {
  return &fragment_map_;
}

// repeated .proto_ff.FacadeSkillData skill_data = 10;
inline int FacadeDataInfo::skill_data_size() const {
  return skill_data_.size();
}
inline void FacadeDataInfo::clear_skill_data() {
  skill_data_.Clear();
}
inline const ::proto_ff::FacadeSkillData& FacadeDataInfo::skill_data(int index) const {
  return skill_data_.Get(index);
}
inline ::proto_ff::FacadeSkillData* FacadeDataInfo::mutable_skill_data(int index) {
  return skill_data_.Mutable(index);
}
inline ::proto_ff::FacadeSkillData* FacadeDataInfo::add_skill_data() {
  return skill_data_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::FacadeSkillData >&
FacadeDataInfo::skill_data() const {
  return skill_data_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::FacadeSkillData >*
FacadeDataInfo::mutable_skill_data() {
  return &skill_data_;
}

// -------------------------------------------------------------------

// FacadeDBData

// repeated .proto_ff.FacadeDataInfo data = 1;
inline int FacadeDBData::data_size() const {
  return data_.size();
}
inline void FacadeDBData::clear_data() {
  data_.Clear();
}
inline const ::proto_ff::FacadeDataInfo& FacadeDBData::data(int index) const {
  return data_.Get(index);
}
inline ::proto_ff::FacadeDataInfo* FacadeDBData::mutable_data(int index) {
  return data_.Mutable(index);
}
inline ::proto_ff::FacadeDataInfo* FacadeDBData::add_data() {
  return data_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::FacadeDataInfo >&
FacadeDBData::data() const {
  return data_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::FacadeDataInfo >*
FacadeDBData::mutable_data() {
  return &data_;
}

// -------------------------------------------------------------------

// SkillDBInfo

// optional uint64 skill_id = 1;
inline bool SkillDBInfo::has_skill_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SkillDBInfo::set_has_skill_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SkillDBInfo::clear_has_skill_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SkillDBInfo::clear_skill_id() {
  skill_id_ = GOOGLE_ULONGLONG(0);
  clear_has_skill_id();
}
inline ::google::protobuf::uint64 SkillDBInfo::skill_id() const {
  return skill_id_;
}
inline void SkillDBInfo::set_skill_id(::google::protobuf::uint64 value) {
  set_has_skill_id();
  skill_id_ = value;
}

// optional int32 level = 2;
inline bool SkillDBInfo::has_level() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SkillDBInfo::set_has_level() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SkillDBInfo::clear_has_level() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SkillDBInfo::clear_level() {
  level_ = 0;
  clear_has_level();
}
inline ::google::protobuf::int32 SkillDBInfo::level() const {
  return level_;
}
inline void SkillDBInfo::set_level(::google::protobuf::int32 value) {
  set_has_level();
  level_ = value;
}

// optional int32 wakeup = 3;
inline bool SkillDBInfo::has_wakeup() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SkillDBInfo::set_has_wakeup() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SkillDBInfo::clear_has_wakeup() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SkillDBInfo::clear_wakeup() {
  wakeup_ = 0;
  clear_has_wakeup();
}
inline ::google::protobuf::int32 SkillDBInfo::wakeup() const {
  return wakeup_;
}
inline void SkillDBInfo::set_wakeup(::google::protobuf::int32 value) {
  set_has_wakeup();
  wakeup_ = value;
}

// optional int32 advance = 4;
inline bool SkillDBInfo::has_advance() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SkillDBInfo::set_has_advance() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SkillDBInfo::clear_has_advance() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SkillDBInfo::clear_advance() {
  advance_ = 0;
  clear_has_advance();
}
inline ::google::protobuf::int32 SkillDBInfo::advance() const {
  return advance_;
}
inline void SkillDBInfo::set_advance(::google::protobuf::int32 value) {
  set_has_advance();
  advance_ = value;
}

// optional int64 use_msc = 5;
inline bool SkillDBInfo::has_use_msc() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void SkillDBInfo::set_has_use_msc() {
  _has_bits_[0] |= 0x00000010u;
}
inline void SkillDBInfo::clear_has_use_msc() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void SkillDBInfo::clear_use_msc() {
  use_msc_ = GOOGLE_LONGLONG(0);
  clear_has_use_msc();
}
inline ::google::protobuf::int64 SkillDBInfo::use_msc() const {
  return use_msc_;
}
inline void SkillDBInfo::set_use_msc(::google::protobuf::int64 value) {
  set_has_use_msc();
  use_msc_ = value;
}

// -------------------------------------------------------------------

// SkillDBPos

// optional uint64 skill_id = 1;
inline bool SkillDBPos::has_skill_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SkillDBPos::set_has_skill_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SkillDBPos::clear_has_skill_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SkillDBPos::clear_skill_id() {
  skill_id_ = GOOGLE_ULONGLONG(0);
  clear_has_skill_id();
}
inline ::google::protobuf::uint64 SkillDBPos::skill_id() const {
  return skill_id_;
}
inline void SkillDBPos::set_skill_id(::google::protobuf::uint64 value) {
  set_has_skill_id();
  skill_id_ = value;
}

// optional uint32 pos = 2;
inline bool SkillDBPos::has_pos() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SkillDBPos::set_has_pos() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SkillDBPos::clear_has_pos() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SkillDBPos::clear_pos() {
  pos_ = 0u;
  clear_has_pos();
}
inline ::google::protobuf::uint32 SkillDBPos::pos() const {
  return pos_;
}
inline void SkillDBPos::set_pos(::google::protobuf::uint32 value) {
  set_has_pos();
  pos_ = value;
}

// -------------------------------------------------------------------

// SkillDBGroup

// optional uint32 group = 1;
inline bool SkillDBGroup::has_group() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SkillDBGroup::set_has_group() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SkillDBGroup::clear_has_group() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SkillDBGroup::clear_group() {
  group_ = 0u;
  clear_has_group();
}
inline ::google::protobuf::uint32 SkillDBGroup::group() const {
  return group_;
}
inline void SkillDBGroup::set_group(::google::protobuf::uint32 value) {
  set_has_group();
  group_ = value;
}

// optional int32 chg = 2;
inline bool SkillDBGroup::has_chg() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SkillDBGroup::set_has_chg() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SkillDBGroup::clear_has_chg() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SkillDBGroup::clear_chg() {
  chg_ = 0;
  clear_has_chg();
}
inline ::google::protobuf::int32 SkillDBGroup::chg() const {
  return chg_;
}
inline void SkillDBGroup::set_chg(::google::protobuf::int32 value) {
  set_has_chg();
  chg_ = value;
}

// repeated .proto_ff.SkillDBPos pos_lst = 3;
inline int SkillDBGroup::pos_lst_size() const {
  return pos_lst_.size();
}
inline void SkillDBGroup::clear_pos_lst() {
  pos_lst_.Clear();
}
inline const ::proto_ff::SkillDBPos& SkillDBGroup::pos_lst(int index) const {
  return pos_lst_.Get(index);
}
inline ::proto_ff::SkillDBPos* SkillDBGroup::mutable_pos_lst(int index) {
  return pos_lst_.Mutable(index);
}
inline ::proto_ff::SkillDBPos* SkillDBGroup::add_pos_lst() {
  return pos_lst_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::SkillDBPos >&
SkillDBGroup::pos_lst() const {
  return pos_lst_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::SkillDBPos >*
SkillDBGroup::mutable_pos_lst() {
  return &pos_lst_;
}

// -------------------------------------------------------------------

// SkillDBData

// repeated .proto_ff.SkillDBInfo info_lst = 1;
inline int SkillDBData::info_lst_size() const {
  return info_lst_.size();
}
inline void SkillDBData::clear_info_lst() {
  info_lst_.Clear();
}
inline const ::proto_ff::SkillDBInfo& SkillDBData::info_lst(int index) const {
  return info_lst_.Get(index);
}
inline ::proto_ff::SkillDBInfo* SkillDBData::mutable_info_lst(int index) {
  return info_lst_.Mutable(index);
}
inline ::proto_ff::SkillDBInfo* SkillDBData::add_info_lst() {
  return info_lst_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::SkillDBInfo >&
SkillDBData::info_lst() const {
  return info_lst_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::SkillDBInfo >*
SkillDBData::mutable_info_lst() {
  return &info_lst_;
}

// repeated .proto_ff.SkillDBGroup group_lst = 2;
inline int SkillDBData::group_lst_size() const {
  return group_lst_.size();
}
inline void SkillDBData::clear_group_lst() {
  group_lst_.Clear();
}
inline const ::proto_ff::SkillDBGroup& SkillDBData::group_lst(int index) const {
  return group_lst_.Get(index);
}
inline ::proto_ff::SkillDBGroup* SkillDBData::mutable_group_lst(int index) {
  return group_lst_.Mutable(index);
}
inline ::proto_ff::SkillDBGroup* SkillDBData::add_group_lst() {
  return group_lst_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::SkillDBGroup >&
SkillDBData::group_lst() const {
  return group_lst_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::SkillDBGroup >*
SkillDBData::mutable_group_lst() {
  return &group_lst_;
}

// optional uint32 group = 3;
inline bool SkillDBData::has_group() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SkillDBData::set_has_group() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SkillDBData::clear_has_group() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SkillDBData::clear_group() {
  group_ = 0u;
  clear_has_group();
}
inline ::google::protobuf::uint32 SkillDBData::group() const {
  return group_;
}
inline void SkillDBData::set_group(::google::protobuf::uint32 value) {
  set_has_group();
  group_ = value;
}

// optional uint64 last_group = 4;
inline bool SkillDBData::has_last_group() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SkillDBData::set_has_last_group() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SkillDBData::clear_has_last_group() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SkillDBData::clear_last_group() {
  last_group_ = GOOGLE_ULONGLONG(0);
  clear_has_last_group();
}
inline ::google::protobuf::uint64 SkillDBData::last_group() const {
  return last_group_;
}
inline void SkillDBData::set_last_group(::google::protobuf::uint64 value) {
  set_has_last_group();
  last_group_ = value;
}

// -------------------------------------------------------------------

// GodRelicsActivityData

// repeated .proto_ff.GodRelicsTaskGroupEntry group_data = 1;
inline int GodRelicsActivityData::group_data_size() const {
  return group_data_.size();
}
inline void GodRelicsActivityData::clear_group_data() {
  group_data_.Clear();
}
inline const ::proto_ff::GodRelicsTaskGroupEntry& GodRelicsActivityData::group_data(int index) const {
  return group_data_.Get(index);
}
inline ::proto_ff::GodRelicsTaskGroupEntry* GodRelicsActivityData::mutable_group_data(int index) {
  return group_data_.Mutable(index);
}
inline ::proto_ff::GodRelicsTaskGroupEntry* GodRelicsActivityData::add_group_data() {
  return group_data_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::GodRelicsTaskGroupEntry >&
GodRelicsActivityData::group_data() const {
  return group_data_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::GodRelicsTaskGroupEntry >*
GodRelicsActivityData::mutable_group_data() {
  return &group_data_;
}

// optional int64 cur_group_id = 2;
inline bool GodRelicsActivityData::has_cur_group_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GodRelicsActivityData::set_has_cur_group_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GodRelicsActivityData::clear_has_cur_group_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GodRelicsActivityData::clear_cur_group_id() {
  cur_group_id_ = GOOGLE_LONGLONG(0);
  clear_has_cur_group_id();
}
inline ::google::protobuf::int64 GodRelicsActivityData::cur_group_id() const {
  return cur_group_id_;
}
inline void GodRelicsActivityData::set_cur_group_id(::google::protobuf::int64 value) {
  set_has_cur_group_id();
  cur_group_id_ = value;
}

// -------------------------------------------------------------------

// MiniActivityDBData

// optional .proto_ff.GodRelicsActivityData god_relics_data = 1;
inline bool MiniActivityDBData::has_god_relics_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MiniActivityDBData::set_has_god_relics_data() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MiniActivityDBData::clear_has_god_relics_data() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MiniActivityDBData::clear_god_relics_data() {
  if (god_relics_data_ != NULL) god_relics_data_->::proto_ff::GodRelicsActivityData::Clear();
  clear_has_god_relics_data();
}
inline const ::proto_ff::GodRelicsActivityData& MiniActivityDBData::god_relics_data() const {
  return god_relics_data_ != NULL ? *god_relics_data_ : *default_instance_->god_relics_data_;
}
inline ::proto_ff::GodRelicsActivityData* MiniActivityDBData::mutable_god_relics_data() {
  set_has_god_relics_data();
  if (god_relics_data_ == NULL) god_relics_data_ = new ::proto_ff::GodRelicsActivityData;
  return god_relics_data_;
}
inline ::proto_ff::GodRelicsActivityData* MiniActivityDBData::release_god_relics_data() {
  clear_has_god_relics_data();
  ::proto_ff::GodRelicsActivityData* temp = god_relics_data_;
  god_relics_data_ = NULL;
  return temp;
}
inline void MiniActivityDBData::set_allocated_god_relics_data(::proto_ff::GodRelicsActivityData* god_relics_data) {
  delete god_relics_data_;
  god_relics_data_ = god_relics_data;
  if (god_relics_data) {
    set_has_god_relics_data();
  } else {
    clear_has_god_relics_data();
  }
}

// optional .proto_ff.DailyTaskAllData daily_data = 2;
inline bool MiniActivityDBData::has_daily_data() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MiniActivityDBData::set_has_daily_data() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MiniActivityDBData::clear_has_daily_data() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MiniActivityDBData::clear_daily_data() {
  if (daily_data_ != NULL) daily_data_->::proto_ff::DailyTaskAllData::Clear();
  clear_has_daily_data();
}
inline const ::proto_ff::DailyTaskAllData& MiniActivityDBData::daily_data() const {
  return daily_data_ != NULL ? *daily_data_ : *default_instance_->daily_data_;
}
inline ::proto_ff::DailyTaskAllData* MiniActivityDBData::mutable_daily_data() {
  set_has_daily_data();
  if (daily_data_ == NULL) daily_data_ = new ::proto_ff::DailyTaskAllData;
  return daily_data_;
}
inline ::proto_ff::DailyTaskAllData* MiniActivityDBData::release_daily_data() {
  clear_has_daily_data();
  ::proto_ff::DailyTaskAllData* temp = daily_data_;
  daily_data_ = NULL;
  return temp;
}
inline void MiniActivityDBData::set_allocated_daily_data(::proto_ff::DailyTaskAllData* daily_data) {
  delete daily_data_;
  daily_data_ = daily_data;
  if (daily_data) {
    set_has_daily_data();
  } else {
    clear_has_daily_data();
  }
}

// -------------------------------------------------------------------

// DupRecord

// optional uint64 dupId = 1;
inline bool DupRecord::has_dupid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DupRecord::set_has_dupid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DupRecord::clear_has_dupid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DupRecord::clear_dupid() {
  dupid_ = GOOGLE_ULONGLONG(0);
  clear_has_dupid();
}
inline ::google::protobuf::uint64 DupRecord::dupid() const {
  return dupid_;
}
inline void DupRecord::set_dupid(::google::protobuf::uint64 value) {
  set_has_dupid();
  dupid_ = value;
}

// optional int32 star = 2;
inline bool DupRecord::has_star() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DupRecord::set_has_star() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DupRecord::clear_has_star() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DupRecord::clear_star() {
  star_ = 0;
  clear_has_star();
}
inline ::google::protobuf::int32 DupRecord::star() const {
  return star_;
}
inline void DupRecord::set_star(::google::protobuf::int32 value) {
  set_has_star();
  star_ = value;
}

// -------------------------------------------------------------------

// DupGroupData

// optional int32 group = 1;
inline bool DupGroupData::has_group() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DupGroupData::set_has_group() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DupGroupData::clear_has_group() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DupGroupData::clear_group() {
  group_ = 0;
  clear_has_group();
}
inline ::google::protobuf::int32 DupGroupData::group() const {
  return group_;
}
inline void DupGroupData::set_group(::google::protobuf::int32 value) {
  set_has_group();
  group_ = value;
}

// optional int32 enterNum = 2;
inline bool DupGroupData::has_enternum() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DupGroupData::set_has_enternum() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DupGroupData::clear_has_enternum() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DupGroupData::clear_enternum() {
  enternum_ = 0;
  clear_has_enternum();
}
inline ::google::protobuf::int32 DupGroupData::enternum() const {
  return enternum_;
}
inline void DupGroupData::set_enternum(::google::protobuf::int32 value) {
  set_has_enternum();
  enternum_ = value;
}

// optional int32 buyNum = 3;
inline bool DupGroupData::has_buynum() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DupGroupData::set_has_buynum() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DupGroupData::clear_has_buynum() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DupGroupData::clear_buynum() {
  buynum_ = 0;
  clear_has_buynum();
}
inline ::google::protobuf::int32 DupGroupData::buynum() const {
  return buynum_;
}
inline void DupGroupData::set_buynum(::google::protobuf::int32 value) {
  set_has_buynum();
  buynum_ = value;
}

// optional int32 useNum = 4;
inline bool DupGroupData::has_usenum() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void DupGroupData::set_has_usenum() {
  _has_bits_[0] |= 0x00000008u;
}
inline void DupGroupData::clear_has_usenum() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void DupGroupData::clear_usenum() {
  usenum_ = 0;
  clear_has_usenum();
}
inline ::google::protobuf::int32 DupGroupData::usenum() const {
  return usenum_;
}
inline void DupGroupData::set_usenum(::google::protobuf::int32 value) {
  set_has_usenum();
  usenum_ = value;
}

// optional uint64 lastFresh = 5;
inline bool DupGroupData::has_lastfresh() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void DupGroupData::set_has_lastfresh() {
  _has_bits_[0] |= 0x00000010u;
}
inline void DupGroupData::clear_has_lastfresh() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void DupGroupData::clear_lastfresh() {
  lastfresh_ = GOOGLE_ULONGLONG(0);
  clear_has_lastfresh();
}
inline ::google::protobuf::uint64 DupGroupData::lastfresh() const {
  return lastfresh_;
}
inline void DupGroupData::set_lastfresh(::google::protobuf::uint64 value) {
  set_has_lastfresh();
  lastfresh_ = value;
}

// -------------------------------------------------------------------

// DupTowerDBRecordEntry

// optional string name = 1;
inline bool DupTowerDBRecordEntry::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DupTowerDBRecordEntry::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DupTowerDBRecordEntry::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DupTowerDBRecordEntry::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& DupTowerDBRecordEntry::name() const {
  return *name_;
}
inline void DupTowerDBRecordEntry::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void DupTowerDBRecordEntry::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void DupTowerDBRecordEntry::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* DupTowerDBRecordEntry::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* DupTowerDBRecordEntry::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void DupTowerDBRecordEntry::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional uint64 time = 2;
inline bool DupTowerDBRecordEntry::has_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DupTowerDBRecordEntry::set_has_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DupTowerDBRecordEntry::clear_has_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DupTowerDBRecordEntry::clear_time() {
  time_ = GOOGLE_ULONGLONG(0);
  clear_has_time();
}
inline ::google::protobuf::uint64 DupTowerDBRecordEntry::time() const {
  return time_;
}
inline void DupTowerDBRecordEntry::set_time(::google::protobuf::uint64 value) {
  set_has_time();
  time_ = value;
}

// optional uint64 cid = 3;
inline bool DupTowerDBRecordEntry::has_cid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DupTowerDBRecordEntry::set_has_cid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DupTowerDBRecordEntry::clear_has_cid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DupTowerDBRecordEntry::clear_cid() {
  cid_ = GOOGLE_ULONGLONG(0);
  clear_has_cid();
}
inline ::google::protobuf::uint64 DupTowerDBRecordEntry::cid() const {
  return cid_;
}
inline void DupTowerDBRecordEntry::set_cid(::google::protobuf::uint64 value) {
  set_has_cid();
  cid_ = value;
}

// -------------------------------------------------------------------

// DupTowerDBRecord

// optional uint64 id = 1;
inline bool DupTowerDBRecord::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DupTowerDBRecord::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DupTowerDBRecord::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DupTowerDBRecord::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::uint64 DupTowerDBRecord::id() const {
  return id_;
}
inline void DupTowerDBRecord::set_id(::google::protobuf::uint64 value) {
  set_has_id();
  id_ = value;
}

// repeated .proto_ff.DupTowerDBRecordEntry entrys = 2;
inline int DupTowerDBRecord::entrys_size() const {
  return entrys_.size();
}
inline void DupTowerDBRecord::clear_entrys() {
  entrys_.Clear();
}
inline const ::proto_ff::DupTowerDBRecordEntry& DupTowerDBRecord::entrys(int index) const {
  return entrys_.Get(index);
}
inline ::proto_ff::DupTowerDBRecordEntry* DupTowerDBRecord::mutable_entrys(int index) {
  return entrys_.Mutable(index);
}
inline ::proto_ff::DupTowerDBRecordEntry* DupTowerDBRecord::add_entrys() {
  return entrys_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::DupTowerDBRecordEntry >&
DupTowerDBRecord::entrys() const {
  return entrys_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::DupTowerDBRecordEntry >*
DupTowerDBRecord::mutable_entrys() {
  return &entrys_;
}

// -------------------------------------------------------------------

// DupTowerDBData

// optional uint64 pass_dupId = 1;
inline bool DupTowerDBData::has_pass_dupid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DupTowerDBData::set_has_pass_dupid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DupTowerDBData::clear_has_pass_dupid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DupTowerDBData::clear_pass_dupid() {
  pass_dupid_ = GOOGLE_ULONGLONG(0);
  clear_has_pass_dupid();
}
inline ::google::protobuf::uint64 DupTowerDBData::pass_dupid() const {
  return pass_dupid_;
}
inline void DupTowerDBData::set_pass_dupid(::google::protobuf::uint64 value) {
  set_has_pass_dupid();
  pass_dupid_ = value;
}

// repeated uint64 ids = 2;
inline int DupTowerDBData::ids_size() const {
  return ids_.size();
}
inline void DupTowerDBData::clear_ids() {
  ids_.Clear();
}
inline ::google::protobuf::uint64 DupTowerDBData::ids(int index) const {
  return ids_.Get(index);
}
inline void DupTowerDBData::set_ids(int index, ::google::protobuf::uint64 value) {
  ids_.Set(index, value);
}
inline void DupTowerDBData::add_ids(::google::protobuf::uint64 value) {
  ids_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
DupTowerDBData::ids() const {
  return ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
DupTowerDBData::mutable_ids() {
  return &ids_;
}

// -------------------------------------------------------------------

// ComDupDBData

// optional uint64 pass_dupId = 1;
inline bool ComDupDBData::has_pass_dupid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ComDupDBData::set_has_pass_dupid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ComDupDBData::clear_has_pass_dupid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ComDupDBData::clear_pass_dupid() {
  pass_dupid_ = GOOGLE_ULONGLONG(0);
  clear_has_pass_dupid();
}
inline ::google::protobuf::uint64 ComDupDBData::pass_dupid() const {
  return pass_dupid_;
}
inline void ComDupDBData::set_pass_dupid(::google::protobuf::uint64 value) {
  set_has_pass_dupid();
  pass_dupid_ = value;
}

// optional int32 star = 2;
inline bool ComDupDBData::has_star() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ComDupDBData::set_has_star() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ComDupDBData::clear_has_star() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ComDupDBData::clear_star() {
  star_ = 0;
  clear_has_star();
}
inline ::google::protobuf::int32 ComDupDBData::star() const {
  return star_;
}
inline void ComDupDBData::set_star(::google::protobuf::int32 value) {
  set_has_star();
  star_ = value;
}

// -------------------------------------------------------------------

// DupDBData

// repeated .proto_ff.DupRecord record = 1;
inline int DupDBData::record_size() const {
  return record_.size();
}
inline void DupDBData::clear_record() {
  record_.Clear();
}
inline const ::proto_ff::DupRecord& DupDBData::record(int index) const {
  return record_.Get(index);
}
inline ::proto_ff::DupRecord* DupDBData::mutable_record(int index) {
  return record_.Mutable(index);
}
inline ::proto_ff::DupRecord* DupDBData::add_record() {
  return record_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::DupRecord >&
DupDBData::record() const {
  return record_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::DupRecord >*
DupDBData::mutable_record() {
  return &record_;
}

// repeated .proto_ff.DupGroupData groups = 2;
inline int DupDBData::groups_size() const {
  return groups_.size();
}
inline void DupDBData::clear_groups() {
  groups_.Clear();
}
inline const ::proto_ff::DupGroupData& DupDBData::groups(int index) const {
  return groups_.Get(index);
}
inline ::proto_ff::DupGroupData* DupDBData::mutable_groups(int index) {
  return groups_.Mutable(index);
}
inline ::proto_ff::DupGroupData* DupDBData::add_groups() {
  return groups_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::DupGroupData >&
DupDBData::groups() const {
  return groups_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::DupGroupData >*
DupDBData::mutable_groups() {
  return &groups_;
}

// optional .proto_ff.DupTowerDBData tower = 3;
inline bool DupDBData::has_tower() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DupDBData::set_has_tower() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DupDBData::clear_has_tower() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DupDBData::clear_tower() {
  if (tower_ != NULL) tower_->::proto_ff::DupTowerDBData::Clear();
  clear_has_tower();
}
inline const ::proto_ff::DupTowerDBData& DupDBData::tower() const {
  return tower_ != NULL ? *tower_ : *default_instance_->tower_;
}
inline ::proto_ff::DupTowerDBData* DupDBData::mutable_tower() {
  set_has_tower();
  if (tower_ == NULL) tower_ = new ::proto_ff::DupTowerDBData;
  return tower_;
}
inline ::proto_ff::DupTowerDBData* DupDBData::release_tower() {
  clear_has_tower();
  ::proto_ff::DupTowerDBData* temp = tower_;
  tower_ = NULL;
  return temp;
}
inline void DupDBData::set_allocated_tower(::proto_ff::DupTowerDBData* tower) {
  delete tower_;
  tower_ = tower;
  if (tower) {
    set_has_tower();
  } else {
    clear_has_tower();
  }
}

// optional .proto_ff.ComDupDBData level = 4;
inline bool DupDBData::has_level() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void DupDBData::set_has_level() {
  _has_bits_[0] |= 0x00000008u;
}
inline void DupDBData::clear_has_level() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void DupDBData::clear_level() {
  if (level_ != NULL) level_->::proto_ff::ComDupDBData::Clear();
  clear_has_level();
}
inline const ::proto_ff::ComDupDBData& DupDBData::level() const {
  return level_ != NULL ? *level_ : *default_instance_->level_;
}
inline ::proto_ff::ComDupDBData* DupDBData::mutable_level() {
  set_has_level();
  if (level_ == NULL) level_ = new ::proto_ff::ComDupDBData;
  return level_;
}
inline ::proto_ff::ComDupDBData* DupDBData::release_level() {
  clear_has_level();
  ::proto_ff::ComDupDBData* temp = level_;
  level_ = NULL;
  return temp;
}
inline void DupDBData::set_allocated_level(::proto_ff::ComDupDBData* level) {
  delete level_;
  level_ = level;
  if (level) {
    set_has_level();
  } else {
    clear_has_level();
  }
}

// -------------------------------------------------------------------

// BuffDBInfo

// optional uint64 buffid = 1;
inline bool BuffDBInfo::has_buffid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BuffDBInfo::set_has_buffid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BuffDBInfo::clear_has_buffid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BuffDBInfo::clear_buffid() {
  buffid_ = GOOGLE_ULONGLONG(0);
  clear_has_buffid();
}
inline ::google::protobuf::uint64 BuffDBInfo::buffid() const {
  return buffid_;
}
inline void BuffDBInfo::set_buffid(::google::protobuf::uint64 value) {
  set_has_buffid();
  buffid_ = value;
}

// optional uint64 index = 2;
inline bool BuffDBInfo::has_index() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BuffDBInfo::set_has_index() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BuffDBInfo::clear_has_index() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BuffDBInfo::clear_index() {
  index_ = GOOGLE_ULONGLONG(0);
  clear_has_index();
}
inline ::google::protobuf::uint64 BuffDBInfo::index() const {
  return index_;
}
inline void BuffDBInfo::set_index(::google::protobuf::uint64 value) {
  set_has_index();
  index_ = value;
}

// optional uint64 skillid = 3;
inline bool BuffDBInfo::has_skillid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BuffDBInfo::set_has_skillid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BuffDBInfo::clear_has_skillid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BuffDBInfo::clear_skillid() {
  skillid_ = GOOGLE_ULONGLONG(0);
  clear_has_skillid();
}
inline ::google::protobuf::uint64 BuffDBInfo::skillid() const {
  return skillid_;
}
inline void BuffDBInfo::set_skillid(::google::protobuf::uint64 value) {
  set_has_skillid();
  skillid_ = value;
}

// optional uint32 skilllev = 4;
inline bool BuffDBInfo::has_skilllev() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void BuffDBInfo::set_has_skilllev() {
  _has_bits_[0] |= 0x00000008u;
}
inline void BuffDBInfo::clear_has_skilllev() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void BuffDBInfo::clear_skilllev() {
  skilllev_ = 0u;
  clear_has_skilllev();
}
inline ::google::protobuf::uint32 BuffDBInfo::skilllev() const {
  return skilllev_;
}
inline void BuffDBInfo::set_skilllev(::google::protobuf::uint32 value) {
  set_has_skilllev();
  skilllev_ = value;
}

// optional bool is_forever = 5;
inline bool BuffDBInfo::has_is_forever() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void BuffDBInfo::set_has_is_forever() {
  _has_bits_[0] |= 0x00000010u;
}
inline void BuffDBInfo::clear_has_is_forever() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void BuffDBInfo::clear_is_forever() {
  is_forever_ = false;
  clear_has_is_forever();
}
inline bool BuffDBInfo::is_forever() const {
  return is_forever_;
}
inline void BuffDBInfo::set_is_forever(bool value) {
  set_has_is_forever();
  is_forever_ = value;
}

// optional int64 startmsec = 6;
inline bool BuffDBInfo::has_startmsec() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void BuffDBInfo::set_has_startmsec() {
  _has_bits_[0] |= 0x00000020u;
}
inline void BuffDBInfo::clear_has_startmsec() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void BuffDBInfo::clear_startmsec() {
  startmsec_ = GOOGLE_LONGLONG(0);
  clear_has_startmsec();
}
inline ::google::protobuf::int64 BuffDBInfo::startmsec() const {
  return startmsec_;
}
inline void BuffDBInfo::set_startmsec(::google::protobuf::int64 value) {
  set_has_startmsec();
  startmsec_ = value;
}

// optional bool is_effect = 7;
inline bool BuffDBInfo::has_is_effect() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void BuffDBInfo::set_has_is_effect() {
  _has_bits_[0] |= 0x00000040u;
}
inline void BuffDBInfo::clear_has_is_effect() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void BuffDBInfo::clear_is_effect() {
  is_effect_ = false;
  clear_has_is_effect();
}
inline bool BuffDBInfo::is_effect() const {
  return is_effect_;
}
inline void BuffDBInfo::set_is_effect(bool value) {
  set_has_is_effect();
  is_effect_ = value;
}

// optional int64 param1 = 8;
inline bool BuffDBInfo::has_param1() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void BuffDBInfo::set_has_param1() {
  _has_bits_[0] |= 0x00000080u;
}
inline void BuffDBInfo::clear_has_param1() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void BuffDBInfo::clear_param1() {
  param1_ = GOOGLE_LONGLONG(0);
  clear_has_param1();
}
inline ::google::protobuf::int64 BuffDBInfo::param1() const {
  return param1_;
}
inline void BuffDBInfo::set_param1(::google::protobuf::int64 value) {
  set_has_param1();
  param1_ = value;
}

// optional int64 param2 = 9;
inline bool BuffDBInfo::has_param2() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void BuffDBInfo::set_has_param2() {
  _has_bits_[0] |= 0x00000100u;
}
inline void BuffDBInfo::clear_has_param2() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void BuffDBInfo::clear_param2() {
  param2_ = GOOGLE_LONGLONG(0);
  clear_has_param2();
}
inline ::google::protobuf::int64 BuffDBInfo::param2() const {
  return param2_;
}
inline void BuffDBInfo::set_param2(::google::protobuf::int64 value) {
  set_has_param2();
  param2_ = value;
}

// optional int64 extramsec = 10;
inline bool BuffDBInfo::has_extramsec() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void BuffDBInfo::set_has_extramsec() {
  _has_bits_[0] |= 0x00000200u;
}
inline void BuffDBInfo::clear_has_extramsec() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void BuffDBInfo::clear_extramsec() {
  extramsec_ = GOOGLE_LONGLONG(0);
  clear_has_extramsec();
}
inline ::google::protobuf::int64 BuffDBInfo::extramsec() const {
  return extramsec_;
}
inline void BuffDBInfo::set_extramsec(::google::protobuf::int64 value) {
  set_has_extramsec();
  extramsec_ = value;
}

// -------------------------------------------------------------------

// BuffDBCdInfo

// optional uint64 buffid = 1;
inline bool BuffDBCdInfo::has_buffid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BuffDBCdInfo::set_has_buffid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BuffDBCdInfo::clear_has_buffid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BuffDBCdInfo::clear_buffid() {
  buffid_ = GOOGLE_ULONGLONG(0);
  clear_has_buffid();
}
inline ::google::protobuf::uint64 BuffDBCdInfo::buffid() const {
  return buffid_;
}
inline void BuffDBCdInfo::set_buffid(::google::protobuf::uint64 value) {
  set_has_buffid();
  buffid_ = value;
}

// optional uint64 lastmsec = 2;
inline bool BuffDBCdInfo::has_lastmsec() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BuffDBCdInfo::set_has_lastmsec() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BuffDBCdInfo::clear_has_lastmsec() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BuffDBCdInfo::clear_lastmsec() {
  lastmsec_ = GOOGLE_ULONGLONG(0);
  clear_has_lastmsec();
}
inline ::google::protobuf::uint64 BuffDBCdInfo::lastmsec() const {
  return lastmsec_;
}
inline void BuffDBCdInfo::set_lastmsec(::google::protobuf::uint64 value) {
  set_has_lastmsec();
  lastmsec_ = value;
}

// -------------------------------------------------------------------

// BuffDBData

// repeated .proto_ff.BuffDBInfo info_lst = 1;
inline int BuffDBData::info_lst_size() const {
  return info_lst_.size();
}
inline void BuffDBData::clear_info_lst() {
  info_lst_.Clear();
}
inline const ::proto_ff::BuffDBInfo& BuffDBData::info_lst(int index) const {
  return info_lst_.Get(index);
}
inline ::proto_ff::BuffDBInfo* BuffDBData::mutable_info_lst(int index) {
  return info_lst_.Mutable(index);
}
inline ::proto_ff::BuffDBInfo* BuffDBData::add_info_lst() {
  return info_lst_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::BuffDBInfo >&
BuffDBData::info_lst() const {
  return info_lst_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::BuffDBInfo >*
BuffDBData::mutable_info_lst() {
  return &info_lst_;
}

// repeated .proto_ff.BuffDBCdInfo cd_lst = 2;
inline int BuffDBData::cd_lst_size() const {
  return cd_lst_.size();
}
inline void BuffDBData::clear_cd_lst() {
  cd_lst_.Clear();
}
inline const ::proto_ff::BuffDBCdInfo& BuffDBData::cd_lst(int index) const {
  return cd_lst_.Get(index);
}
inline ::proto_ff::BuffDBCdInfo* BuffDBData::mutable_cd_lst(int index) {
  return cd_lst_.Mutable(index);
}
inline ::proto_ff::BuffDBCdInfo* BuffDBData::add_cd_lst() {
  return cd_lst_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::BuffDBCdInfo >&
BuffDBData::cd_lst() const {
  return cd_lst_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::BuffDBCdInfo >*
BuffDBData::mutable_cd_lst() {
  return &cd_lst_;
}

// -------------------------------------------------------------------

// BossSimpleInfoDB

// optional int32 boss_type = 1;
inline bool BossSimpleInfoDB::has_boss_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BossSimpleInfoDB::set_has_boss_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BossSimpleInfoDB::clear_has_boss_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BossSimpleInfoDB::clear_boss_type() {
  boss_type_ = 0;
  clear_has_boss_type();
}
inline ::google::protobuf::int32 BossSimpleInfoDB::boss_type() const {
  return boss_type_;
}
inline void BossSimpleInfoDB::set_boss_type(::google::protobuf::int32 value) {
  set_has_boss_type();
  boss_type_ = value;
}

// optional int32 cur_num = 2;
inline bool BossSimpleInfoDB::has_cur_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BossSimpleInfoDB::set_has_cur_num() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BossSimpleInfoDB::clear_has_cur_num() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BossSimpleInfoDB::clear_cur_num() {
  cur_num_ = 0;
  clear_has_cur_num();
}
inline ::google::protobuf::int32 BossSimpleInfoDB::cur_num() const {
  return cur_num_;
}
inline void BossSimpleInfoDB::set_cur_num(::google::protobuf::int32 value) {
  set_has_cur_num();
  cur_num_ = value;
}

// optional int32 back_num = 4;
inline bool BossSimpleInfoDB::has_back_num() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BossSimpleInfoDB::set_has_back_num() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BossSimpleInfoDB::clear_has_back_num() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BossSimpleInfoDB::clear_back_num() {
  back_num_ = 0;
  clear_has_back_num();
}
inline ::google::protobuf::int32 BossSimpleInfoDB::back_num() const {
  return back_num_;
}
inline void BossSimpleInfoDB::set_back_num(::google::protobuf::int32 value) {
  set_has_back_num();
  back_num_ = value;
}

// optional int32 back_max_num = 5;
inline bool BossSimpleInfoDB::has_back_max_num() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void BossSimpleInfoDB::set_has_back_max_num() {
  _has_bits_[0] |= 0x00000008u;
}
inline void BossSimpleInfoDB::clear_has_back_max_num() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void BossSimpleInfoDB::clear_back_max_num() {
  back_max_num_ = 0;
  clear_has_back_max_num();
}
inline ::google::protobuf::int32 BossSimpleInfoDB::back_max_num() const {
  return back_max_num_;
}
inline void BossSimpleInfoDB::set_back_max_num(::google::protobuf::int32 value) {
  set_has_back_max_num();
  back_max_num_ = value;
}

// optional int32 enter_num = 6;
inline bool BossSimpleInfoDB::has_enter_num() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void BossSimpleInfoDB::set_has_enter_num() {
  _has_bits_[0] |= 0x00000010u;
}
inline void BossSimpleInfoDB::clear_has_enter_num() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void BossSimpleInfoDB::clear_enter_num() {
  enter_num_ = 0;
  clear_has_enter_num();
}
inline ::google::protobuf::int32 BossSimpleInfoDB::enter_num() const {
  return enter_num_;
}
inline void BossSimpleInfoDB::set_enter_num(::google::protobuf::int32 value) {
  set_has_enter_num();
  enter_num_ = value;
}

// optional int32 use_item_num = 7;
inline bool BossSimpleInfoDB::has_use_item_num() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void BossSimpleInfoDB::set_has_use_item_num() {
  _has_bits_[0] |= 0x00000020u;
}
inline void BossSimpleInfoDB::clear_has_use_item_num() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void BossSimpleInfoDB::clear_use_item_num() {
  use_item_num_ = 0;
  clear_has_use_item_num();
}
inline ::google::protobuf::int32 BossSimpleInfoDB::use_item_num() const {
  return use_item_num_;
}
inline void BossSimpleInfoDB::set_use_item_num(::google::protobuf::int32 value) {
  set_has_use_item_num();
  use_item_num_ = value;
}

// -------------------------------------------------------------------

// BossDBData

// repeated .proto_ff.BossSimpleInfoDB infos = 1;
inline int BossDBData::infos_size() const {
  return infos_.size();
}
inline void BossDBData::clear_infos() {
  infos_.Clear();
}
inline const ::proto_ff::BossSimpleInfoDB& BossDBData::infos(int index) const {
  return infos_.Get(index);
}
inline ::proto_ff::BossSimpleInfoDB* BossDBData::mutable_infos(int index) {
  return infos_.Mutable(index);
}
inline ::proto_ff::BossSimpleInfoDB* BossDBData::add_infos() {
  return infos_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::BossSimpleInfoDB >&
BossDBData::infos() const {
  return infos_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::BossSimpleInfoDB >*
BossDBData::mutable_infos() {
  return &infos_;
}

// optional uint64 lastTime = 2;
inline bool BossDBData::has_lasttime() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BossDBData::set_has_lasttime() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BossDBData::clear_has_lasttime() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BossDBData::clear_lasttime() {
  lasttime_ = GOOGLE_ULONGLONG(0);
  clear_has_lasttime();
}
inline ::google::protobuf::uint64 BossDBData::lasttime() const {
  return lasttime_;
}
inline void BossDBData::set_lasttime(::google::protobuf::uint64 value) {
  set_has_lasttime();
  lasttime_ = value;
}

// repeated int64 attents = 3;
inline int BossDBData::attents_size() const {
  return attents_.size();
}
inline void BossDBData::clear_attents() {
  attents_.Clear();
}
inline ::google::protobuf::int64 BossDBData::attents(int index) const {
  return attents_.Get(index);
}
inline void BossDBData::set_attents(int index, ::google::protobuf::int64 value) {
  attents_.Set(index, value);
}
inline void BossDBData::add_attents(::google::protobuf::int64 value) {
  attents_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
BossDBData::attents() const {
  return attents_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
BossDBData::mutable_attents() {
  return &attents_;
}

// -------------------------------------------------------------------

// VipDBData

// optional int32 vipExp = 1;
inline bool VipDBData::has_vipexp() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void VipDBData::set_has_vipexp() {
  _has_bits_[0] |= 0x00000001u;
}
inline void VipDBData::clear_has_vipexp() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void VipDBData::clear_vipexp() {
  vipexp_ = 0;
  clear_has_vipexp();
}
inline ::google::protobuf::int32 VipDBData::vipexp() const {
  return vipexp_;
}
inline void VipDBData::set_vipexp(::google::protobuf::int32 value) {
  set_has_vipexp();
  vipexp_ = value;
}

// optional int32 expDiamond = 2;
inline bool VipDBData::has_expdiamond() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void VipDBData::set_has_expdiamond() {
  _has_bits_[0] |= 0x00000002u;
}
inline void VipDBData::clear_has_expdiamond() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void VipDBData::clear_expdiamond() {
  expdiamond_ = 0;
  clear_has_expdiamond();
}
inline ::google::protobuf::int32 VipDBData::expdiamond() const {
  return expdiamond_;
}
inline void VipDBData::set_expdiamond(::google::protobuf::int32 value) {
  set_has_expdiamond();
  expdiamond_ = value;
}

// -------------------------------------------------------------------

// RoleDBData

// optional uint64 cid = 1;
inline bool RoleDBData::has_cid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RoleDBData::set_has_cid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RoleDBData::clear_has_cid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RoleDBData::clear_cid() {
  cid_ = GOOGLE_ULONGLONG(0);
  clear_has_cid();
}
inline ::google::protobuf::uint64 RoleDBData::cid() const {
  return cid_;
}
inline void RoleDBData::set_cid(::google::protobuf::uint64 value) {
  set_has_cid();
  cid_ = value;
}

// optional uint32 zid = 2;
inline bool RoleDBData::has_zid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RoleDBData::set_has_zid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RoleDBData::clear_has_zid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RoleDBData::clear_zid() {
  zid_ = 0u;
  clear_has_zid();
}
inline ::google::protobuf::uint32 RoleDBData::zid() const {
  return zid_;
}
inline void RoleDBData::set_zid(::google::protobuf::uint32 value) {
  set_has_zid();
  zid_ = value;
}

// optional uint32 uid = 3;
inline bool RoleDBData::has_uid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RoleDBData::set_has_uid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RoleDBData::clear_has_uid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RoleDBData::clear_uid() {
  uid_ = 0u;
  clear_has_uid();
}
inline ::google::protobuf::uint32 RoleDBData::uid() const {
  return uid_;
}
inline void RoleDBData::set_uid(::google::protobuf::uint32 value) {
  set_has_uid();
  uid_ = value;
}

// optional .proto_ff.RoleDBBaseData base = 4;
inline bool RoleDBData::has_base() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RoleDBData::set_has_base() {
  _has_bits_[0] |= 0x00000008u;
}
inline void RoleDBData::clear_has_base() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void RoleDBData::clear_base() {
  if (base_ != NULL) base_->::proto_ff::RoleDBBaseData::Clear();
  clear_has_base();
}
inline const ::proto_ff::RoleDBBaseData& RoleDBData::base() const {
  return base_ != NULL ? *base_ : *default_instance_->base_;
}
inline ::proto_ff::RoleDBBaseData* RoleDBData::mutable_base() {
  set_has_base();
  if (base_ == NULL) base_ = new ::proto_ff::RoleDBBaseData;
  return base_;
}
inline ::proto_ff::RoleDBBaseData* RoleDBData::release_base() {
  clear_has_base();
  ::proto_ff::RoleDBBaseData* temp = base_;
  base_ = NULL;
  return temp;
}
inline void RoleDBData::set_allocated_base(::proto_ff::RoleDBBaseData* base) {
  delete base_;
  base_ = base;
  if (base) {
    set_has_base();
  } else {
    clear_has_base();
  }
}

// optional .proto_ff.RoleDBBagData bag = 5;
inline bool RoleDBData::has_bag() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void RoleDBData::set_has_bag() {
  _has_bits_[0] |= 0x00000010u;
}
inline void RoleDBData::clear_has_bag() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void RoleDBData::clear_bag() {
  if (bag_ != NULL) bag_->::proto_ff::RoleDBBagData::Clear();
  clear_has_bag();
}
inline const ::proto_ff::RoleDBBagData& RoleDBData::bag() const {
  return bag_ != NULL ? *bag_ : *default_instance_->bag_;
}
inline ::proto_ff::RoleDBBagData* RoleDBData::mutable_bag() {
  set_has_bag();
  if (bag_ == NULL) bag_ = new ::proto_ff::RoleDBBagData;
  return bag_;
}
inline ::proto_ff::RoleDBBagData* RoleDBData::release_bag() {
  clear_has_bag();
  ::proto_ff::RoleDBBagData* temp = bag_;
  bag_ = NULL;
  return temp;
}
inline void RoleDBData::set_allocated_bag(::proto_ff::RoleDBBagData* bag) {
  delete bag_;
  bag_ = bag;
  if (bag) {
    set_has_bag();
  } else {
    clear_has_bag();
  }
}

// optional .proto_ff.RoleDBEquipData equip = 6;
inline bool RoleDBData::has_equip() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void RoleDBData::set_has_equip() {
  _has_bits_[0] |= 0x00000020u;
}
inline void RoleDBData::clear_has_equip() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void RoleDBData::clear_equip() {
  if (equip_ != NULL) equip_->::proto_ff::RoleDBEquipData::Clear();
  clear_has_equip();
}
inline const ::proto_ff::RoleDBEquipData& RoleDBData::equip() const {
  return equip_ != NULL ? *equip_ : *default_instance_->equip_;
}
inline ::proto_ff::RoleDBEquipData* RoleDBData::mutable_equip() {
  set_has_equip();
  if (equip_ == NULL) equip_ = new ::proto_ff::RoleDBEquipData;
  return equip_;
}
inline ::proto_ff::RoleDBEquipData* RoleDBData::release_equip() {
  clear_has_equip();
  ::proto_ff::RoleDBEquipData* temp = equip_;
  equip_ = NULL;
  return temp;
}
inline void RoleDBData::set_allocated_equip(::proto_ff::RoleDBEquipData* equip) {
  delete equip_;
  equip_ = equip;
  if (equip) {
    set_has_equip();
  } else {
    clear_has_equip();
  }
}

// optional .proto_ff.CharacterDBTaskData task = 7;
inline bool RoleDBData::has_task() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void RoleDBData::set_has_task() {
  _has_bits_[0] |= 0x00000040u;
}
inline void RoleDBData::clear_has_task() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void RoleDBData::clear_task() {
  if (task_ != NULL) task_->::proto_ff::CharacterDBTaskData::Clear();
  clear_has_task();
}
inline const ::proto_ff::CharacterDBTaskData& RoleDBData::task() const {
  return task_ != NULL ? *task_ : *default_instance_->task_;
}
inline ::proto_ff::CharacterDBTaskData* RoleDBData::mutable_task() {
  set_has_task();
  if (task_ == NULL) task_ = new ::proto_ff::CharacterDBTaskData;
  return task_;
}
inline ::proto_ff::CharacterDBTaskData* RoleDBData::release_task() {
  clear_has_task();
  ::proto_ff::CharacterDBTaskData* temp = task_;
  task_ = NULL;
  return temp;
}
inline void RoleDBData::set_allocated_task(::proto_ff::CharacterDBTaskData* task) {
  delete task_;
  task_ = task;
  if (task) {
    set_has_task();
  } else {
    clear_has_task();
  }
}

// optional .proto_ff.FunctionUnlockInfo unlockinfo = 8;
inline bool RoleDBData::has_unlockinfo() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void RoleDBData::set_has_unlockinfo() {
  _has_bits_[0] |= 0x00000080u;
}
inline void RoleDBData::clear_has_unlockinfo() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void RoleDBData::clear_unlockinfo() {
  if (unlockinfo_ != NULL) unlockinfo_->::proto_ff::FunctionUnlockInfo::Clear();
  clear_has_unlockinfo();
}
inline const ::proto_ff::FunctionUnlockInfo& RoleDBData::unlockinfo() const {
  return unlockinfo_ != NULL ? *unlockinfo_ : *default_instance_->unlockinfo_;
}
inline ::proto_ff::FunctionUnlockInfo* RoleDBData::mutable_unlockinfo() {
  set_has_unlockinfo();
  if (unlockinfo_ == NULL) unlockinfo_ = new ::proto_ff::FunctionUnlockInfo;
  return unlockinfo_;
}
inline ::proto_ff::FunctionUnlockInfo* RoleDBData::release_unlockinfo() {
  clear_has_unlockinfo();
  ::proto_ff::FunctionUnlockInfo* temp = unlockinfo_;
  unlockinfo_ = NULL;
  return temp;
}
inline void RoleDBData::set_allocated_unlockinfo(::proto_ff::FunctionUnlockInfo* unlockinfo) {
  delete unlockinfo_;
  unlockinfo_ = unlockinfo;
  if (unlockinfo) {
    set_has_unlockinfo();
  } else {
    clear_has_unlockinfo();
  }
}

// optional .proto_ff.GrowDBData grow = 9;
inline bool RoleDBData::has_grow() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void RoleDBData::set_has_grow() {
  _has_bits_[0] |= 0x00000100u;
}
inline void RoleDBData::clear_has_grow() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void RoleDBData::clear_grow() {
  if (grow_ != NULL) grow_->::proto_ff::GrowDBData::Clear();
  clear_has_grow();
}
inline const ::proto_ff::GrowDBData& RoleDBData::grow() const {
  return grow_ != NULL ? *grow_ : *default_instance_->grow_;
}
inline ::proto_ff::GrowDBData* RoleDBData::mutable_grow() {
  set_has_grow();
  if (grow_ == NULL) grow_ = new ::proto_ff::GrowDBData;
  return grow_;
}
inline ::proto_ff::GrowDBData* RoleDBData::release_grow() {
  clear_has_grow();
  ::proto_ff::GrowDBData* temp = grow_;
  grow_ = NULL;
  return temp;
}
inline void RoleDBData::set_allocated_grow(::proto_ff::GrowDBData* grow) {
  delete grow_;
  grow_ = grow;
  if (grow) {
    set_has_grow();
  } else {
    clear_has_grow();
  }
}

// optional .proto_ff.MiniDBData mini = 10;
inline bool RoleDBData::has_mini() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void RoleDBData::set_has_mini() {
  _has_bits_[0] |= 0x00000200u;
}
inline void RoleDBData::clear_has_mini() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void RoleDBData::clear_mini() {
  if (mini_ != NULL) mini_->::proto_ff::MiniDBData::Clear();
  clear_has_mini();
}
inline const ::proto_ff::MiniDBData& RoleDBData::mini() const {
  return mini_ != NULL ? *mini_ : *default_instance_->mini_;
}
inline ::proto_ff::MiniDBData* RoleDBData::mutable_mini() {
  set_has_mini();
  if (mini_ == NULL) mini_ = new ::proto_ff::MiniDBData;
  return mini_;
}
inline ::proto_ff::MiniDBData* RoleDBData::release_mini() {
  clear_has_mini();
  ::proto_ff::MiniDBData* temp = mini_;
  mini_ = NULL;
  return temp;
}
inline void RoleDBData::set_allocated_mini(::proto_ff::MiniDBData* mini) {
  delete mini_;
  mini_ = mini;
  if (mini) {
    set_has_mini();
  } else {
    clear_has_mini();
  }
}

// optional .proto_ff.FacadeDBData facade = 11;
inline bool RoleDBData::has_facade() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void RoleDBData::set_has_facade() {
  _has_bits_[0] |= 0x00000400u;
}
inline void RoleDBData::clear_has_facade() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void RoleDBData::clear_facade() {
  if (facade_ != NULL) facade_->::proto_ff::FacadeDBData::Clear();
  clear_has_facade();
}
inline const ::proto_ff::FacadeDBData& RoleDBData::facade() const {
  return facade_ != NULL ? *facade_ : *default_instance_->facade_;
}
inline ::proto_ff::FacadeDBData* RoleDBData::mutable_facade() {
  set_has_facade();
  if (facade_ == NULL) facade_ = new ::proto_ff::FacadeDBData;
  return facade_;
}
inline ::proto_ff::FacadeDBData* RoleDBData::release_facade() {
  clear_has_facade();
  ::proto_ff::FacadeDBData* temp = facade_;
  facade_ = NULL;
  return temp;
}
inline void RoleDBData::set_allocated_facade(::proto_ff::FacadeDBData* facade) {
  delete facade_;
  facade_ = facade;
  if (facade) {
    set_has_facade();
  } else {
    clear_has_facade();
  }
}

// optional .proto_ff.SkillDBData skill = 12;
inline bool RoleDBData::has_skill() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void RoleDBData::set_has_skill() {
  _has_bits_[0] |= 0x00000800u;
}
inline void RoleDBData::clear_has_skill() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void RoleDBData::clear_skill() {
  if (skill_ != NULL) skill_->::proto_ff::SkillDBData::Clear();
  clear_has_skill();
}
inline const ::proto_ff::SkillDBData& RoleDBData::skill() const {
  return skill_ != NULL ? *skill_ : *default_instance_->skill_;
}
inline ::proto_ff::SkillDBData* RoleDBData::mutable_skill() {
  set_has_skill();
  if (skill_ == NULL) skill_ = new ::proto_ff::SkillDBData;
  return skill_;
}
inline ::proto_ff::SkillDBData* RoleDBData::release_skill() {
  clear_has_skill();
  ::proto_ff::SkillDBData* temp = skill_;
  skill_ = NULL;
  return temp;
}
inline void RoleDBData::set_allocated_skill(::proto_ff::SkillDBData* skill) {
  delete skill_;
  skill_ = skill;
  if (skill) {
    set_has_skill();
  } else {
    clear_has_skill();
  }
}

// optional .proto_ff.MiniActivityDBData mini_activity = 13;
inline bool RoleDBData::has_mini_activity() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void RoleDBData::set_has_mini_activity() {
  _has_bits_[0] |= 0x00001000u;
}
inline void RoleDBData::clear_has_mini_activity() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void RoleDBData::clear_mini_activity() {
  if (mini_activity_ != NULL) mini_activity_->::proto_ff::MiniActivityDBData::Clear();
  clear_has_mini_activity();
}
inline const ::proto_ff::MiniActivityDBData& RoleDBData::mini_activity() const {
  return mini_activity_ != NULL ? *mini_activity_ : *default_instance_->mini_activity_;
}
inline ::proto_ff::MiniActivityDBData* RoleDBData::mutable_mini_activity() {
  set_has_mini_activity();
  if (mini_activity_ == NULL) mini_activity_ = new ::proto_ff::MiniActivityDBData;
  return mini_activity_;
}
inline ::proto_ff::MiniActivityDBData* RoleDBData::release_mini_activity() {
  clear_has_mini_activity();
  ::proto_ff::MiniActivityDBData* temp = mini_activity_;
  mini_activity_ = NULL;
  return temp;
}
inline void RoleDBData::set_allocated_mini_activity(::proto_ff::MiniActivityDBData* mini_activity) {
  delete mini_activity_;
  mini_activity_ = mini_activity;
  if (mini_activity) {
    set_has_mini_activity();
  } else {
    clear_has_mini_activity();
  }
}

// optional .proto_ff.DupDBData dup = 14;
inline bool RoleDBData::has_dup() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void RoleDBData::set_has_dup() {
  _has_bits_[0] |= 0x00002000u;
}
inline void RoleDBData::clear_has_dup() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void RoleDBData::clear_dup() {
  if (dup_ != NULL) dup_->::proto_ff::DupDBData::Clear();
  clear_has_dup();
}
inline const ::proto_ff::DupDBData& RoleDBData::dup() const {
  return dup_ != NULL ? *dup_ : *default_instance_->dup_;
}
inline ::proto_ff::DupDBData* RoleDBData::mutable_dup() {
  set_has_dup();
  if (dup_ == NULL) dup_ = new ::proto_ff::DupDBData;
  return dup_;
}
inline ::proto_ff::DupDBData* RoleDBData::release_dup() {
  clear_has_dup();
  ::proto_ff::DupDBData* temp = dup_;
  dup_ = NULL;
  return temp;
}
inline void RoleDBData::set_allocated_dup(::proto_ff::DupDBData* dup) {
  delete dup_;
  dup_ = dup;
  if (dup) {
    set_has_dup();
  } else {
    clear_has_dup();
  }
}

// optional .proto_ff.BuffDBData buff = 15;
inline bool RoleDBData::has_buff() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void RoleDBData::set_has_buff() {
  _has_bits_[0] |= 0x00004000u;
}
inline void RoleDBData::clear_has_buff() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void RoleDBData::clear_buff() {
  if (buff_ != NULL) buff_->::proto_ff::BuffDBData::Clear();
  clear_has_buff();
}
inline const ::proto_ff::BuffDBData& RoleDBData::buff() const {
  return buff_ != NULL ? *buff_ : *default_instance_->buff_;
}
inline ::proto_ff::BuffDBData* RoleDBData::mutable_buff() {
  set_has_buff();
  if (buff_ == NULL) buff_ = new ::proto_ff::BuffDBData;
  return buff_;
}
inline ::proto_ff::BuffDBData* RoleDBData::release_buff() {
  clear_has_buff();
  ::proto_ff::BuffDBData* temp = buff_;
  buff_ = NULL;
  return temp;
}
inline void RoleDBData::set_allocated_buff(::proto_ff::BuffDBData* buff) {
  delete buff_;
  buff_ = buff;
  if (buff) {
    set_has_buff();
  } else {
    clear_has_buff();
  }
}

// optional .proto_ff.BossDBData boss = 16;
inline bool RoleDBData::has_boss() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void RoleDBData::set_has_boss() {
  _has_bits_[0] |= 0x00008000u;
}
inline void RoleDBData::clear_has_boss() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void RoleDBData::clear_boss() {
  if (boss_ != NULL) boss_->::proto_ff::BossDBData::Clear();
  clear_has_boss();
}
inline const ::proto_ff::BossDBData& RoleDBData::boss() const {
  return boss_ != NULL ? *boss_ : *default_instance_->boss_;
}
inline ::proto_ff::BossDBData* RoleDBData::mutable_boss() {
  set_has_boss();
  if (boss_ == NULL) boss_ = new ::proto_ff::BossDBData;
  return boss_;
}
inline ::proto_ff::BossDBData* RoleDBData::release_boss() {
  clear_has_boss();
  ::proto_ff::BossDBData* temp = boss_;
  boss_ = NULL;
  return temp;
}
inline void RoleDBData::set_allocated_boss(::proto_ff::BossDBData* boss) {
  delete boss_;
  boss_ = boss;
  if (boss) {
    set_has_boss();
  } else {
    clear_has_boss();
  }
}

// optional .proto_ff.VipDBData vip = 17;
inline bool RoleDBData::has_vip() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void RoleDBData::set_has_vip() {
  _has_bits_[0] |= 0x00010000u;
}
inline void RoleDBData::clear_has_vip() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void RoleDBData::clear_vip() {
  if (vip_ != NULL) vip_->::proto_ff::VipDBData::Clear();
  clear_has_vip();
}
inline const ::proto_ff::VipDBData& RoleDBData::vip() const {
  return vip_ != NULL ? *vip_ : *default_instance_->vip_;
}
inline ::proto_ff::VipDBData* RoleDBData::mutable_vip() {
  set_has_vip();
  if (vip_ == NULL) vip_ = new ::proto_ff::VipDBData;
  return vip_;
}
inline ::proto_ff::VipDBData* RoleDBData::release_vip() {
  clear_has_vip();
  ::proto_ff::VipDBData* temp = vip_;
  vip_ = NULL;
  return temp;
}
inline void RoleDBData::set_allocated_vip(::proto_ff::VipDBData* vip) {
  delete vip_;
  vip_ = vip;
  if (vip) {
    set_has_vip();
  } else {
    clear_has_vip();
  }
}

// -------------------------------------------------------------------

// LoginRoleDBProto

// -------------------------------------------------------------------

// RoleListDBReq

// optional uint64 reqid = 1;
inline bool RoleListDBReq::has_reqid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RoleListDBReq::set_has_reqid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RoleListDBReq::clear_has_reqid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RoleListDBReq::clear_reqid() {
  reqid_ = GOOGLE_ULONGLONG(0);
  clear_has_reqid();
}
inline ::google::protobuf::uint64 RoleListDBReq::reqid() const {
  return reqid_;
}
inline void RoleListDBReq::set_reqid(::google::protobuf::uint64 value) {
  set_has_reqid();
  reqid_ = value;
}

// optional uint32 uid = 2;
inline bool RoleListDBReq::has_uid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RoleListDBReq::set_has_uid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RoleListDBReq::clear_has_uid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RoleListDBReq::clear_uid() {
  uid_ = 0u;
  clear_has_uid();
}
inline ::google::protobuf::uint32 RoleListDBReq::uid() const {
  return uid_;
}
inline void RoleListDBReq::set_uid(::google::protobuf::uint32 value) {
  set_has_uid();
  uid_ = value;
}

// optional uint32 gateid = 3;
inline bool RoleListDBReq::has_gateid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RoleListDBReq::set_has_gateid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RoleListDBReq::clear_has_gateid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RoleListDBReq::clear_gateid() {
  gateid_ = 0u;
  clear_has_gateid();
}
inline ::google::protobuf::uint32 RoleListDBReq::gateid() const {
  return gateid_;
}
inline void RoleListDBReq::set_gateid(::google::protobuf::uint32 value) {
  set_has_gateid();
  gateid_ = value;
}

// optional uint32 born_zid = 4;
inline bool RoleListDBReq::has_born_zid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RoleListDBReq::set_has_born_zid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void RoleListDBReq::clear_has_born_zid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void RoleListDBReq::clear_born_zid() {
  born_zid_ = 0u;
  clear_has_born_zid();
}
inline ::google::protobuf::uint32 RoleListDBReq::born_zid() const {
  return born_zid_;
}
inline void RoleListDBReq::set_born_zid(::google::protobuf::uint32 value) {
  set_has_born_zid();
  born_zid_ = value;
}

// -------------------------------------------------------------------

// RoleListDBRsp

// optional int32 ret = 1;
inline bool RoleListDBRsp::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RoleListDBRsp::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RoleListDBRsp::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RoleListDBRsp::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
inline ::google::protobuf::int32 RoleListDBRsp::ret() const {
  return ret_;
}
inline void RoleListDBRsp::set_ret(::google::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
}

// optional uint64 reqid = 2;
inline bool RoleListDBRsp::has_reqid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RoleListDBRsp::set_has_reqid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RoleListDBRsp::clear_has_reqid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RoleListDBRsp::clear_reqid() {
  reqid_ = GOOGLE_ULONGLONG(0);
  clear_has_reqid();
}
inline ::google::protobuf::uint64 RoleListDBRsp::reqid() const {
  return reqid_;
}
inline void RoleListDBRsp::set_reqid(::google::protobuf::uint64 value) {
  set_has_reqid();
  reqid_ = value;
}

// optional uint32 uid = 3;
inline bool RoleListDBRsp::has_uid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RoleListDBRsp::set_has_uid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RoleListDBRsp::clear_has_uid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RoleListDBRsp::clear_uid() {
  uid_ = 0u;
  clear_has_uid();
}
inline ::google::protobuf::uint32 RoleListDBRsp::uid() const {
  return uid_;
}
inline void RoleListDBRsp::set_uid(::google::protobuf::uint32 value) {
  set_has_uid();
  uid_ = value;
}

// optional uint32 gateid = 4;
inline bool RoleListDBRsp::has_gateid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RoleListDBRsp::set_has_gateid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void RoleListDBRsp::clear_has_gateid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void RoleListDBRsp::clear_gateid() {
  gateid_ = 0u;
  clear_has_gateid();
}
inline ::google::protobuf::uint32 RoleListDBRsp::gateid() const {
  return gateid_;
}
inline void RoleListDBRsp::set_gateid(::google::protobuf::uint32 value) {
  set_has_gateid();
  gateid_ = value;
}

// repeated .proto_ff.RoleListDBProto role_lst = 5;
inline int RoleListDBRsp::role_lst_size() const {
  return role_lst_.size();
}
inline void RoleListDBRsp::clear_role_lst() {
  role_lst_.Clear();
}
inline const ::proto_ff::RoleListDBProto& RoleListDBRsp::role_lst(int index) const {
  return role_lst_.Get(index);
}
inline ::proto_ff::RoleListDBProto* RoleListDBRsp::mutable_role_lst(int index) {
  return role_lst_.Mutable(index);
}
inline ::proto_ff::RoleListDBProto* RoleListDBRsp::add_role_lst() {
  return role_lst_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::RoleListDBProto >&
RoleListDBRsp::role_lst() const {
  return role_lst_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::RoleListDBProto >*
RoleListDBRsp::mutable_role_lst() {
  return &role_lst_;
}

// optional uint32 regnum = 6;
inline bool RoleListDBRsp::has_regnum() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void RoleListDBRsp::set_has_regnum() {
  _has_bits_[0] |= 0x00000020u;
}
inline void RoleListDBRsp::clear_has_regnum() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void RoleListDBRsp::clear_regnum() {
  regnum_ = 0u;
  clear_has_regnum();
}
inline ::google::protobuf::uint32 RoleListDBRsp::regnum() const {
  return regnum_;
}
inline void RoleListDBRsp::set_regnum(::google::protobuf::uint32 value) {
  set_has_regnum();
  regnum_ = value;
}

// -------------------------------------------------------------------

// CreateRoleDBReq

// optional uint64 reqid = 1;
inline bool CreateRoleDBReq::has_reqid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CreateRoleDBReq::set_has_reqid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CreateRoleDBReq::clear_has_reqid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CreateRoleDBReq::clear_reqid() {
  reqid_ = GOOGLE_ULONGLONG(0);
  clear_has_reqid();
}
inline ::google::protobuf::uint64 CreateRoleDBReq::reqid() const {
  return reqid_;
}
inline void CreateRoleDBReq::set_reqid(::google::protobuf::uint64 value) {
  set_has_reqid();
  reqid_ = value;
}

// optional uint32 zid = 2;
inline bool CreateRoleDBReq::has_zid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CreateRoleDBReq::set_has_zid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CreateRoleDBReq::clear_has_zid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CreateRoleDBReq::clear_zid() {
  zid_ = 0u;
  clear_has_zid();
}
inline ::google::protobuf::uint32 CreateRoleDBReq::zid() const {
  return zid_;
}
inline void CreateRoleDBReq::set_zid(::google::protobuf::uint32 value) {
  set_has_zid();
  zid_ = value;
}

// optional uint32 gateid = 3;
inline bool CreateRoleDBReq::has_gateid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CreateRoleDBReq::set_has_gateid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CreateRoleDBReq::clear_has_gateid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CreateRoleDBReq::clear_gateid() {
  gateid_ = 0u;
  clear_has_gateid();
}
inline ::google::protobuf::uint32 CreateRoleDBReq::gateid() const {
  return gateid_;
}
inline void CreateRoleDBReq::set_gateid(::google::protobuf::uint32 value) {
  set_has_gateid();
  gateid_ = value;
}

// optional .proto_ff.RoleDBData data = 4;
inline bool CreateRoleDBReq::has_data() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CreateRoleDBReq::set_has_data() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CreateRoleDBReq::clear_has_data() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CreateRoleDBReq::clear_data() {
  if (data_ != NULL) data_->::proto_ff::RoleDBData::Clear();
  clear_has_data();
}
inline const ::proto_ff::RoleDBData& CreateRoleDBReq::data() const {
  return data_ != NULL ? *data_ : *default_instance_->data_;
}
inline ::proto_ff::RoleDBData* CreateRoleDBReq::mutable_data() {
  set_has_data();
  if (data_ == NULL) data_ = new ::proto_ff::RoleDBData;
  return data_;
}
inline ::proto_ff::RoleDBData* CreateRoleDBReq::release_data() {
  clear_has_data();
  ::proto_ff::RoleDBData* temp = data_;
  data_ = NULL;
  return temp;
}
inline void CreateRoleDBReq::set_allocated_data(::proto_ff::RoleDBData* data) {
  delete data_;
  data_ = data;
  if (data) {
    set_has_data();
  } else {
    clear_has_data();
  }
}

// optional uint32 uid = 5;
inline bool CreateRoleDBReq::has_uid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CreateRoleDBReq::set_has_uid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CreateRoleDBReq::clear_has_uid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CreateRoleDBReq::clear_uid() {
  uid_ = 0u;
  clear_has_uid();
}
inline ::google::protobuf::uint32 CreateRoleDBReq::uid() const {
  return uid_;
}
inline void CreateRoleDBReq::set_uid(::google::protobuf::uint32 value) {
  set_has_uid();
  uid_ = value;
}

// optional uint32 channel_id = 6;
inline bool CreateRoleDBReq::has_channel_id() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CreateRoleDBReq::set_has_channel_id() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CreateRoleDBReq::clear_has_channel_id() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CreateRoleDBReq::clear_channel_id() {
  channel_id_ = 0u;
  clear_has_channel_id();
}
inline ::google::protobuf::uint32 CreateRoleDBReq::channel_id() const {
  return channel_id_;
}
inline void CreateRoleDBReq::set_channel_id(::google::protobuf::uint32 value) {
  set_has_channel_id();
  channel_id_ = value;
}

// optional uint32 zone_mid = 7;
inline bool CreateRoleDBReq::has_zone_mid() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CreateRoleDBReq::set_has_zone_mid() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CreateRoleDBReq::clear_has_zone_mid() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CreateRoleDBReq::clear_zone_mid() {
  zone_mid_ = 0u;
  clear_has_zone_mid();
}
inline ::google::protobuf::uint32 CreateRoleDBReq::zone_mid() const {
  return zone_mid_;
}
inline void CreateRoleDBReq::set_zone_mid(::google::protobuf::uint32 value) {
  set_has_zone_mid();
  zone_mid_ = value;
}

// optional uint32 born_zid = 8;
inline bool CreateRoleDBReq::has_born_zid() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CreateRoleDBReq::set_has_born_zid() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CreateRoleDBReq::clear_has_born_zid() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CreateRoleDBReq::clear_born_zid() {
  born_zid_ = 0u;
  clear_has_born_zid();
}
inline ::google::protobuf::uint32 CreateRoleDBReq::born_zid() const {
  return born_zid_;
}
inline void CreateRoleDBReq::set_born_zid(::google::protobuf::uint32 value) {
  set_has_born_zid();
  born_zid_ = value;
}

// -------------------------------------------------------------------

// CreateRoleDBRsp

// optional int32 ret = 1;
inline bool CreateRoleDBRsp::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CreateRoleDBRsp::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CreateRoleDBRsp::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CreateRoleDBRsp::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
inline ::google::protobuf::int32 CreateRoleDBRsp::ret() const {
  return ret_;
}
inline void CreateRoleDBRsp::set_ret(::google::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
}

// optional uint64 reqid = 2;
inline bool CreateRoleDBRsp::has_reqid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CreateRoleDBRsp::set_has_reqid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CreateRoleDBRsp::clear_has_reqid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CreateRoleDBRsp::clear_reqid() {
  reqid_ = GOOGLE_ULONGLONG(0);
  clear_has_reqid();
}
inline ::google::protobuf::uint64 CreateRoleDBRsp::reqid() const {
  return reqid_;
}
inline void CreateRoleDBRsp::set_reqid(::google::protobuf::uint64 value) {
  set_has_reqid();
  reqid_ = value;
}

// optional uint32 uid = 3;
inline bool CreateRoleDBRsp::has_uid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CreateRoleDBRsp::set_has_uid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CreateRoleDBRsp::clear_has_uid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CreateRoleDBRsp::clear_uid() {
  uid_ = 0u;
  clear_has_uid();
}
inline ::google::protobuf::uint32 CreateRoleDBRsp::uid() const {
  return uid_;
}
inline void CreateRoleDBRsp::set_uid(::google::protobuf::uint32 value) {
  set_has_uid();
  uid_ = value;
}

// optional uint32 gateid = 4;
inline bool CreateRoleDBRsp::has_gateid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CreateRoleDBRsp::set_has_gateid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CreateRoleDBRsp::clear_has_gateid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CreateRoleDBRsp::clear_gateid() {
  gateid_ = 0u;
  clear_has_gateid();
}
inline ::google::protobuf::uint32 CreateRoleDBRsp::gateid() const {
  return gateid_;
}
inline void CreateRoleDBRsp::set_gateid(::google::protobuf::uint32 value) {
  set_has_gateid();
  gateid_ = value;
}

// optional .proto_ff.RoleListDBProto info = 5;
inline bool CreateRoleDBRsp::has_info() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CreateRoleDBRsp::set_has_info() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CreateRoleDBRsp::clear_has_info() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CreateRoleDBRsp::clear_info() {
  if (info_ != NULL) info_->::proto_ff::RoleListDBProto::Clear();
  clear_has_info();
}
inline const ::proto_ff::RoleListDBProto& CreateRoleDBRsp::info() const {
  return info_ != NULL ? *info_ : *default_instance_->info_;
}
inline ::proto_ff::RoleListDBProto* CreateRoleDBRsp::mutable_info() {
  set_has_info();
  if (info_ == NULL) info_ = new ::proto_ff::RoleListDBProto;
  return info_;
}
inline ::proto_ff::RoleListDBProto* CreateRoleDBRsp::release_info() {
  clear_has_info();
  ::proto_ff::RoleListDBProto* temp = info_;
  info_ = NULL;
  return temp;
}
inline void CreateRoleDBRsp::set_allocated_info(::proto_ff::RoleListDBProto* info) {
  delete info_;
  info_ = info;
  if (info) {
    set_has_info();
  } else {
    clear_has_info();
  }
}

// optional uint32 born_zid = 6;
inline bool CreateRoleDBRsp::has_born_zid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CreateRoleDBRsp::set_has_born_zid() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CreateRoleDBRsp::clear_has_born_zid() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CreateRoleDBRsp::clear_born_zid() {
  born_zid_ = 0u;
  clear_has_born_zid();
}
inline ::google::protobuf::uint32 CreateRoleDBRsp::born_zid() const {
  return born_zid_;
}
inline void CreateRoleDBRsp::set_born_zid(::google::protobuf::uint32 value) {
  set_has_born_zid();
  born_zid_ = value;
}

// optional .proto_ff.CenterRoleProto simple = 7;
inline bool CreateRoleDBRsp::has_simple() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CreateRoleDBRsp::set_has_simple() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CreateRoleDBRsp::clear_has_simple() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CreateRoleDBRsp::clear_simple() {
  if (simple_ != NULL) simple_->::proto_ff::CenterRoleProto::Clear();
  clear_has_simple();
}
inline const ::proto_ff::CenterRoleProto& CreateRoleDBRsp::simple() const {
  return simple_ != NULL ? *simple_ : *default_instance_->simple_;
}
inline ::proto_ff::CenterRoleProto* CreateRoleDBRsp::mutable_simple() {
  set_has_simple();
  if (simple_ == NULL) simple_ = new ::proto_ff::CenterRoleProto;
  return simple_;
}
inline ::proto_ff::CenterRoleProto* CreateRoleDBRsp::release_simple() {
  clear_has_simple();
  ::proto_ff::CenterRoleProto* temp = simple_;
  simple_ = NULL;
  return temp;
}
inline void CreateRoleDBRsp::set_allocated_simple(::proto_ff::CenterRoleProto* simple) {
  delete simple_;
  simple_ = simple;
  if (simple) {
    set_has_simple();
  } else {
    clear_has_simple();
  }
}

// -------------------------------------------------------------------

// RoleInfoDBReq

// optional uint64 reqid = 1;
inline bool RoleInfoDBReq::has_reqid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RoleInfoDBReq::set_has_reqid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RoleInfoDBReq::clear_has_reqid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RoleInfoDBReq::clear_reqid() {
  reqid_ = GOOGLE_ULONGLONG(0);
  clear_has_reqid();
}
inline ::google::protobuf::uint64 RoleInfoDBReq::reqid() const {
  return reqid_;
}
inline void RoleInfoDBReq::set_reqid(::google::protobuf::uint64 value) {
  set_has_reqid();
  reqid_ = value;
}

// optional uint64 cid = 2;
inline bool RoleInfoDBReq::has_cid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RoleInfoDBReq::set_has_cid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RoleInfoDBReq::clear_has_cid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RoleInfoDBReq::clear_cid() {
  cid_ = GOOGLE_ULONGLONG(0);
  clear_has_cid();
}
inline ::google::protobuf::uint64 RoleInfoDBReq::cid() const {
  return cid_;
}
inline void RoleInfoDBReq::set_cid(::google::protobuf::uint64 value) {
  set_has_cid();
  cid_ = value;
}

// optional int32 change = 3;
inline bool RoleInfoDBReq::has_change() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RoleInfoDBReq::set_has_change() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RoleInfoDBReq::clear_has_change() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RoleInfoDBReq::clear_change() {
  change_ = 0;
  clear_has_change();
}
inline ::google::protobuf::int32 RoleInfoDBReq::change() const {
  return change_;
}
inline void RoleInfoDBReq::set_change(::google::protobuf::int32 value) {
  set_has_change();
  change_ = value;
}

// -------------------------------------------------------------------

// RoleInfoDBRsp

// optional int32 ret = 1;
inline bool RoleInfoDBRsp::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RoleInfoDBRsp::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RoleInfoDBRsp::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RoleInfoDBRsp::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
inline ::google::protobuf::int32 RoleInfoDBRsp::ret() const {
  return ret_;
}
inline void RoleInfoDBRsp::set_ret(::google::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
}

// optional uint64 reqid = 2;
inline bool RoleInfoDBRsp::has_reqid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RoleInfoDBRsp::set_has_reqid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RoleInfoDBRsp::clear_has_reqid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RoleInfoDBRsp::clear_reqid() {
  reqid_ = GOOGLE_ULONGLONG(0);
  clear_has_reqid();
}
inline ::google::protobuf::uint64 RoleInfoDBRsp::reqid() const {
  return reqid_;
}
inline void RoleInfoDBRsp::set_reqid(::google::protobuf::uint64 value) {
  set_has_reqid();
  reqid_ = value;
}

// optional uint64 cid = 3;
inline bool RoleInfoDBRsp::has_cid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RoleInfoDBRsp::set_has_cid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RoleInfoDBRsp::clear_has_cid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RoleInfoDBRsp::clear_cid() {
  cid_ = GOOGLE_ULONGLONG(0);
  clear_has_cid();
}
inline ::google::protobuf::uint64 RoleInfoDBRsp::cid() const {
  return cid_;
}
inline void RoleInfoDBRsp::set_cid(::google::protobuf::uint64 value) {
  set_has_cid();
  cid_ = value;
}

// optional int32 change = 4;
inline bool RoleInfoDBRsp::has_change() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RoleInfoDBRsp::set_has_change() {
  _has_bits_[0] |= 0x00000008u;
}
inline void RoleInfoDBRsp::clear_has_change() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void RoleInfoDBRsp::clear_change() {
  change_ = 0;
  clear_has_change();
}
inline ::google::protobuf::int32 RoleInfoDBRsp::change() const {
  return change_;
}
inline void RoleInfoDBRsp::set_change(::google::protobuf::int32 value) {
  set_has_change();
  change_ = value;
}

// optional .proto_ff.RoleDBData info = 5;
inline bool RoleInfoDBRsp::has_info() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void RoleInfoDBRsp::set_has_info() {
  _has_bits_[0] |= 0x00000010u;
}
inline void RoleInfoDBRsp::clear_has_info() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void RoleInfoDBRsp::clear_info() {
  if (info_ != NULL) info_->::proto_ff::RoleDBData::Clear();
  clear_has_info();
}
inline const ::proto_ff::RoleDBData& RoleInfoDBRsp::info() const {
  return info_ != NULL ? *info_ : *default_instance_->info_;
}
inline ::proto_ff::RoleDBData* RoleInfoDBRsp::mutable_info() {
  set_has_info();
  if (info_ == NULL) info_ = new ::proto_ff::RoleDBData;
  return info_;
}
inline ::proto_ff::RoleDBData* RoleInfoDBRsp::release_info() {
  clear_has_info();
  ::proto_ff::RoleDBData* temp = info_;
  info_ = NULL;
  return temp;
}
inline void RoleInfoDBRsp::set_allocated_info(::proto_ff::RoleDBData* info) {
  delete info_;
  info_ = info;
  if (info) {
    set_has_info();
  } else {
    clear_has_info();
  }
}

// -------------------------------------------------------------------

// RoleInfoUpdateDBReq

// optional uint64 cid = 1;
inline bool RoleInfoUpdateDBReq::has_cid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RoleInfoUpdateDBReq::set_has_cid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RoleInfoUpdateDBReq::clear_has_cid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RoleInfoUpdateDBReq::clear_cid() {
  cid_ = GOOGLE_ULONGLONG(0);
  clear_has_cid();
}
inline ::google::protobuf::uint64 RoleInfoUpdateDBReq::cid() const {
  return cid_;
}
inline void RoleInfoUpdateDBReq::set_cid(::google::protobuf::uint64 value) {
  set_has_cid();
  cid_ = value;
}

// optional uint32 uid = 2;
inline bool RoleInfoUpdateDBReq::has_uid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RoleInfoUpdateDBReq::set_has_uid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RoleInfoUpdateDBReq::clear_has_uid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RoleInfoUpdateDBReq::clear_uid() {
  uid_ = 0u;
  clear_has_uid();
}
inline ::google::protobuf::uint32 RoleInfoUpdateDBReq::uid() const {
  return uid_;
}
inline void RoleInfoUpdateDBReq::set_uid(::google::protobuf::uint32 value) {
  set_has_uid();
  uid_ = value;
}

// optional .proto_ff.RoleDBData info = 3;
inline bool RoleInfoUpdateDBReq::has_info() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RoleInfoUpdateDBReq::set_has_info() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RoleInfoUpdateDBReq::clear_has_info() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RoleInfoUpdateDBReq::clear_info() {
  if (info_ != NULL) info_->::proto_ff::RoleDBData::Clear();
  clear_has_info();
}
inline const ::proto_ff::RoleDBData& RoleInfoUpdateDBReq::info() const {
  return info_ != NULL ? *info_ : *default_instance_->info_;
}
inline ::proto_ff::RoleDBData* RoleInfoUpdateDBReq::mutable_info() {
  set_has_info();
  if (info_ == NULL) info_ = new ::proto_ff::RoleDBData;
  return info_;
}
inline ::proto_ff::RoleDBData* RoleInfoUpdateDBReq::release_info() {
  clear_has_info();
  ::proto_ff::RoleDBData* temp = info_;
  info_ = NULL;
  return temp;
}
inline void RoleInfoUpdateDBReq::set_allocated_info(::proto_ff::RoleDBData* info) {
  delete info_;
  info_ = info;
  if (info) {
    set_has_info();
  } else {
    clear_has_info();
  }
}

// -------------------------------------------------------------------

// RoleChgNameDBReq

// optional uint64 cid = 1;
inline bool RoleChgNameDBReq::has_cid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RoleChgNameDBReq::set_has_cid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RoleChgNameDBReq::clear_has_cid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RoleChgNameDBReq::clear_cid() {
  cid_ = GOOGLE_ULONGLONG(0);
  clear_has_cid();
}
inline ::google::protobuf::uint64 RoleChgNameDBReq::cid() const {
  return cid_;
}
inline void RoleChgNameDBReq::set_cid(::google::protobuf::uint64 value) {
  set_has_cid();
  cid_ = value;
}

// optional string name = 2;
inline bool RoleChgNameDBReq::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RoleChgNameDBReq::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RoleChgNameDBReq::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RoleChgNameDBReq::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& RoleChgNameDBReq::name() const {
  return *name_;
}
inline void RoleChgNameDBReq::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void RoleChgNameDBReq::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void RoleChgNameDBReq::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* RoleChgNameDBReq::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* RoleChgNameDBReq::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void RoleChgNameDBReq::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// RoleChgNameDBRsp

// optional int32 ret = 1;
inline bool RoleChgNameDBRsp::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RoleChgNameDBRsp::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RoleChgNameDBRsp::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RoleChgNameDBRsp::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
inline ::google::protobuf::int32 RoleChgNameDBRsp::ret() const {
  return ret_;
}
inline void RoleChgNameDBRsp::set_ret(::google::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
}

// optional uint64 cid = 2;
inline bool RoleChgNameDBRsp::has_cid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RoleChgNameDBRsp::set_has_cid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RoleChgNameDBRsp::clear_has_cid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RoleChgNameDBRsp::clear_cid() {
  cid_ = GOOGLE_ULONGLONG(0);
  clear_has_cid();
}
inline ::google::protobuf::uint64 RoleChgNameDBRsp::cid() const {
  return cid_;
}
inline void RoleChgNameDBRsp::set_cid(::google::protobuf::uint64 value) {
  set_has_cid();
  cid_ = value;
}

// optional string name = 3;
inline bool RoleChgNameDBRsp::has_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RoleChgNameDBRsp::set_has_name() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RoleChgNameDBRsp::clear_has_name() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RoleChgNameDBRsp::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& RoleChgNameDBRsp::name() const {
  return *name_;
}
inline void RoleChgNameDBRsp::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void RoleChgNameDBRsp::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void RoleChgNameDBRsp::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* RoleChgNameDBRsp::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* RoleChgNameDBRsp::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void RoleChgNameDBRsp::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// RoleSimpleListDBReq

// -------------------------------------------------------------------

// RoleSimpleListDBRsp

// optional int32 ret = 1;
inline bool RoleSimpleListDBRsp::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RoleSimpleListDBRsp::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RoleSimpleListDBRsp::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RoleSimpleListDBRsp::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
inline ::google::protobuf::int32 RoleSimpleListDBRsp::ret() const {
  return ret_;
}
inline void RoleSimpleListDBRsp::set_ret(::google::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
}

// repeated .proto_ff.CenterRoleProto info = 2;
inline int RoleSimpleListDBRsp::info_size() const {
  return info_.size();
}
inline void RoleSimpleListDBRsp::clear_info() {
  info_.Clear();
}
inline const ::proto_ff::CenterRoleProto& RoleSimpleListDBRsp::info(int index) const {
  return info_.Get(index);
}
inline ::proto_ff::CenterRoleProto* RoleSimpleListDBRsp::mutable_info(int index) {
  return info_.Mutable(index);
}
inline ::proto_ff::CenterRoleProto* RoleSimpleListDBRsp::add_info() {
  return info_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::CenterRoleProto >&
RoleSimpleListDBRsp::info() const {
  return info_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::CenterRoleProto >*
RoleSimpleListDBRsp::mutable_info() {
  return &info_;
}

// optional int32 finish_flag = 3;
inline bool RoleSimpleListDBRsp::has_finish_flag() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RoleSimpleListDBRsp::set_has_finish_flag() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RoleSimpleListDBRsp::clear_has_finish_flag() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RoleSimpleListDBRsp::clear_finish_flag() {
  finish_flag_ = 0;
  clear_has_finish_flag();
}
inline ::google::protobuf::int32 RoleSimpleListDBRsp::finish_flag() const {
  return finish_flag_;
}
inline void RoleSimpleListDBRsp::set_finish_flag(::google::protobuf::int32 value) {
  set_has_finish_flag();
  finish_flag_ = value;
}

// -------------------------------------------------------------------

// CreatureTransLogicDBReq

// optional string trans_data = 1;
inline bool CreatureTransLogicDBReq::has_trans_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CreatureTransLogicDBReq::set_has_trans_data() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CreatureTransLogicDBReq::clear_has_trans_data() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CreatureTransLogicDBReq::clear_trans_data() {
  if (trans_data_ != &::google::protobuf::internal::kEmptyString) {
    trans_data_->clear();
  }
  clear_has_trans_data();
}
inline const ::std::string& CreatureTransLogicDBReq::trans_data() const {
  return *trans_data_;
}
inline void CreatureTransLogicDBReq::set_trans_data(const ::std::string& value) {
  set_has_trans_data();
  if (trans_data_ == &::google::protobuf::internal::kEmptyString) {
    trans_data_ = new ::std::string;
  }
  trans_data_->assign(value);
}
inline void CreatureTransLogicDBReq::set_trans_data(const char* value) {
  set_has_trans_data();
  if (trans_data_ == &::google::protobuf::internal::kEmptyString) {
    trans_data_ = new ::std::string;
  }
  trans_data_->assign(value);
}
inline void CreatureTransLogicDBReq::set_trans_data(const char* value, size_t size) {
  set_has_trans_data();
  if (trans_data_ == &::google::protobuf::internal::kEmptyString) {
    trans_data_ = new ::std::string;
  }
  trans_data_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CreatureTransLogicDBReq::mutable_trans_data() {
  set_has_trans_data();
  if (trans_data_ == &::google::protobuf::internal::kEmptyString) {
    trans_data_ = new ::std::string;
  }
  return trans_data_;
}
inline ::std::string* CreatureTransLogicDBReq::release_trans_data() {
  clear_has_trans_data();
  if (trans_data_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = trans_data_;
    trans_data_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CreatureTransLogicDBReq::set_allocated_trans_data(::std::string* trans_data) {
  if (trans_data_ != &::google::protobuf::internal::kEmptyString) {
    delete trans_data_;
  }
  if (trans_data) {
    set_has_trans_data();
    trans_data_ = trans_data;
  } else {
    clear_has_trans_data();
    trans_data_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// CreatureTransLogicDBRsp

// optional int32 retcode = 1;
inline bool CreatureTransLogicDBRsp::has_retcode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CreatureTransLogicDBRsp::set_has_retcode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CreatureTransLogicDBRsp::clear_has_retcode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CreatureTransLogicDBRsp::clear_retcode() {
  retcode_ = 0;
  clear_has_retcode();
}
inline ::google::protobuf::int32 CreatureTransLogicDBRsp::retcode() const {
  return retcode_;
}
inline void CreatureTransLogicDBRsp::set_retcode(::google::protobuf::int32 value) {
  set_has_retcode();
  retcode_ = value;
}

// optional uint64 cid = 2;
inline bool CreatureTransLogicDBRsp::has_cid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CreatureTransLogicDBRsp::set_has_cid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CreatureTransLogicDBRsp::clear_has_cid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CreatureTransLogicDBRsp::clear_cid() {
  cid_ = GOOGLE_ULONGLONG(0);
  clear_has_cid();
}
inline ::google::protobuf::uint64 CreatureTransLogicDBRsp::cid() const {
  return cid_;
}
inline void CreatureTransLogicDBRsp::set_cid(::google::protobuf::uint64 value) {
  set_has_cid();
  cid_ = value;
}

// -------------------------------------------------------------------

// NewMailDBInfo

// repeated .proto_ff.MailInfo data = 1;
inline int NewMailDBInfo::data_size() const {
  return data_.size();
}
inline void NewMailDBInfo::clear_data() {
  data_.Clear();
}
inline const ::proto_ff::MailInfo& NewMailDBInfo::data(int index) const {
  return data_.Get(index);
}
inline ::proto_ff::MailInfo* NewMailDBInfo::mutable_data(int index) {
  return data_.Mutable(index);
}
inline ::proto_ff::MailInfo* NewMailDBInfo::add_data() {
  return data_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::MailInfo >&
NewMailDBInfo::data() const {
  return data_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::MailInfo >*
NewMailDBInfo::mutable_data() {
  return &data_;
}

// optional int32 result = 2;
inline bool NewMailDBInfo::has_result() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void NewMailDBInfo::set_has_result() {
  _has_bits_[0] |= 0x00000002u;
}
inline void NewMailDBInfo::clear_has_result() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void NewMailDBInfo::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 NewMailDBInfo::result() const {
  return result_;
}
inline void NewMailDBInfo::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// -------------------------------------------------------------------

// MailDBOperateInfo

// repeated uint32 mid_lst = 1;
inline int MailDBOperateInfo::mid_lst_size() const {
  return mid_lst_.size();
}
inline void MailDBOperateInfo::clear_mid_lst() {
  mid_lst_.Clear();
}
inline ::google::protobuf::uint32 MailDBOperateInfo::mid_lst(int index) const {
  return mid_lst_.Get(index);
}
inline void MailDBOperateInfo::set_mid_lst(int index, ::google::protobuf::uint32 value) {
  mid_lst_.Set(index, value);
}
inline void MailDBOperateInfo::add_mid_lst(::google::protobuf::uint32 value) {
  mid_lst_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
MailDBOperateInfo::mid_lst() const {
  return mid_lst_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
MailDBOperateInfo::mutable_mid_lst() {
  return &mid_lst_;
}

// optional int32 result = 2;
inline bool MailDBOperateInfo::has_result() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MailDBOperateInfo::set_has_result() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MailDBOperateInfo::clear_has_result() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MailDBOperateInfo::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 MailDBOperateInfo::result() const {
  return result_;
}
inline void MailDBOperateInfo::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// -------------------------------------------------------------------

// SaveMailDBReq

// optional uint64 charid = 1;
inline bool SaveMailDBReq::has_charid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SaveMailDBReq::set_has_charid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SaveMailDBReq::clear_has_charid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SaveMailDBReq::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 SaveMailDBReq::charid() const {
  return charid_;
}
inline void SaveMailDBReq::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
}

// optional .proto_ff.NewMailDBInfo info = 2;
inline bool SaveMailDBReq::has_info() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SaveMailDBReq::set_has_info() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SaveMailDBReq::clear_has_info() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SaveMailDBReq::clear_info() {
  if (info_ != NULL) info_->::proto_ff::NewMailDBInfo::Clear();
  clear_has_info();
}
inline const ::proto_ff::NewMailDBInfo& SaveMailDBReq::info() const {
  return info_ != NULL ? *info_ : *default_instance_->info_;
}
inline ::proto_ff::NewMailDBInfo* SaveMailDBReq::mutable_info() {
  set_has_info();
  if (info_ == NULL) info_ = new ::proto_ff::NewMailDBInfo;
  return info_;
}
inline ::proto_ff::NewMailDBInfo* SaveMailDBReq::release_info() {
  clear_has_info();
  ::proto_ff::NewMailDBInfo* temp = info_;
  info_ = NULL;
  return temp;
}
inline void SaveMailDBReq::set_allocated_info(::proto_ff::NewMailDBInfo* info) {
  delete info_;
  info_ = info;
  if (info) {
    set_has_info();
  } else {
    clear_has_info();
  }
}

// optional .proto_ff.MailDBOperateInfo del = 3;
inline bool SaveMailDBReq::has_del() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SaveMailDBReq::set_has_del() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SaveMailDBReq::clear_has_del() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SaveMailDBReq::clear_del() {
  if (del_ != NULL) del_->::proto_ff::MailDBOperateInfo::Clear();
  clear_has_del();
}
inline const ::proto_ff::MailDBOperateInfo& SaveMailDBReq::del() const {
  return del_ != NULL ? *del_ : *default_instance_->del_;
}
inline ::proto_ff::MailDBOperateInfo* SaveMailDBReq::mutable_del() {
  set_has_del();
  if (del_ == NULL) del_ = new ::proto_ff::MailDBOperateInfo;
  return del_;
}
inline ::proto_ff::MailDBOperateInfo* SaveMailDBReq::release_del() {
  clear_has_del();
  ::proto_ff::MailDBOperateInfo* temp = del_;
  del_ = NULL;
  return temp;
}
inline void SaveMailDBReq::set_allocated_del(::proto_ff::MailDBOperateInfo* del) {
  delete del_;
  del_ = del;
  if (del) {
    set_has_del();
  } else {
    clear_has_del();
  }
}

// optional .proto_ff.MailDBOperateInfo fetch = 4;
inline bool SaveMailDBReq::has_fetch() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SaveMailDBReq::set_has_fetch() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SaveMailDBReq::clear_has_fetch() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SaveMailDBReq::clear_fetch() {
  if (fetch_ != NULL) fetch_->::proto_ff::MailDBOperateInfo::Clear();
  clear_has_fetch();
}
inline const ::proto_ff::MailDBOperateInfo& SaveMailDBReq::fetch() const {
  return fetch_ != NULL ? *fetch_ : *default_instance_->fetch_;
}
inline ::proto_ff::MailDBOperateInfo* SaveMailDBReq::mutable_fetch() {
  set_has_fetch();
  if (fetch_ == NULL) fetch_ = new ::proto_ff::MailDBOperateInfo;
  return fetch_;
}
inline ::proto_ff::MailDBOperateInfo* SaveMailDBReq::release_fetch() {
  clear_has_fetch();
  ::proto_ff::MailDBOperateInfo* temp = fetch_;
  fetch_ = NULL;
  return temp;
}
inline void SaveMailDBReq::set_allocated_fetch(::proto_ff::MailDBOperateInfo* fetch) {
  delete fetch_;
  fetch_ = fetch;
  if (fetch) {
    set_has_fetch();
  } else {
    clear_has_fetch();
  }
}

// optional .proto_ff.MailDBOperateInfo read = 5;
inline bool SaveMailDBReq::has_read() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void SaveMailDBReq::set_has_read() {
  _has_bits_[0] |= 0x00000010u;
}
inline void SaveMailDBReq::clear_has_read() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void SaveMailDBReq::clear_read() {
  if (read_ != NULL) read_->::proto_ff::MailDBOperateInfo::Clear();
  clear_has_read();
}
inline const ::proto_ff::MailDBOperateInfo& SaveMailDBReq::read() const {
  return read_ != NULL ? *read_ : *default_instance_->read_;
}
inline ::proto_ff::MailDBOperateInfo* SaveMailDBReq::mutable_read() {
  set_has_read();
  if (read_ == NULL) read_ = new ::proto_ff::MailDBOperateInfo;
  return read_;
}
inline ::proto_ff::MailDBOperateInfo* SaveMailDBReq::release_read() {
  clear_has_read();
  ::proto_ff::MailDBOperateInfo* temp = read_;
  read_ = NULL;
  return temp;
}
inline void SaveMailDBReq::set_allocated_read(::proto_ff::MailDBOperateInfo* read) {
  delete read_;
  read_ = read;
  if (read) {
    set_has_read();
  } else {
    clear_has_read();
  }
}

// optional int32 notify = 6;
inline bool SaveMailDBReq::has_notify() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void SaveMailDBReq::set_has_notify() {
  _has_bits_[0] |= 0x00000020u;
}
inline void SaveMailDBReq::clear_has_notify() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void SaveMailDBReq::clear_notify() {
  notify_ = 0;
  clear_has_notify();
}
inline ::google::protobuf::int32 SaveMailDBReq::notify() const {
  return notify_;
}
inline void SaveMailDBReq::set_notify(::google::protobuf::int32 value) {
  set_has_notify();
  notify_ = value;
}

// -------------------------------------------------------------------

// SaveMailDBRsp

// optional uint64 charid = 1;
inline bool SaveMailDBRsp::has_charid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SaveMailDBRsp::set_has_charid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SaveMailDBRsp::clear_has_charid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SaveMailDBRsp::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 SaveMailDBRsp::charid() const {
  return charid_;
}
inline void SaveMailDBRsp::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
}

// optional .proto_ff.NewMailDBInfo info = 2;
inline bool SaveMailDBRsp::has_info() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SaveMailDBRsp::set_has_info() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SaveMailDBRsp::clear_has_info() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SaveMailDBRsp::clear_info() {
  if (info_ != NULL) info_->::proto_ff::NewMailDBInfo::Clear();
  clear_has_info();
}
inline const ::proto_ff::NewMailDBInfo& SaveMailDBRsp::info() const {
  return info_ != NULL ? *info_ : *default_instance_->info_;
}
inline ::proto_ff::NewMailDBInfo* SaveMailDBRsp::mutable_info() {
  set_has_info();
  if (info_ == NULL) info_ = new ::proto_ff::NewMailDBInfo;
  return info_;
}
inline ::proto_ff::NewMailDBInfo* SaveMailDBRsp::release_info() {
  clear_has_info();
  ::proto_ff::NewMailDBInfo* temp = info_;
  info_ = NULL;
  return temp;
}
inline void SaveMailDBRsp::set_allocated_info(::proto_ff::NewMailDBInfo* info) {
  delete info_;
  info_ = info;
  if (info) {
    set_has_info();
  } else {
    clear_has_info();
  }
}

// optional .proto_ff.MailDBOperateInfo del = 3;
inline bool SaveMailDBRsp::has_del() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SaveMailDBRsp::set_has_del() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SaveMailDBRsp::clear_has_del() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SaveMailDBRsp::clear_del() {
  if (del_ != NULL) del_->::proto_ff::MailDBOperateInfo::Clear();
  clear_has_del();
}
inline const ::proto_ff::MailDBOperateInfo& SaveMailDBRsp::del() const {
  return del_ != NULL ? *del_ : *default_instance_->del_;
}
inline ::proto_ff::MailDBOperateInfo* SaveMailDBRsp::mutable_del() {
  set_has_del();
  if (del_ == NULL) del_ = new ::proto_ff::MailDBOperateInfo;
  return del_;
}
inline ::proto_ff::MailDBOperateInfo* SaveMailDBRsp::release_del() {
  clear_has_del();
  ::proto_ff::MailDBOperateInfo* temp = del_;
  del_ = NULL;
  return temp;
}
inline void SaveMailDBRsp::set_allocated_del(::proto_ff::MailDBOperateInfo* del) {
  delete del_;
  del_ = del;
  if (del) {
    set_has_del();
  } else {
    clear_has_del();
  }
}

// optional .proto_ff.MailDBOperateInfo fetch = 4;
inline bool SaveMailDBRsp::has_fetch() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SaveMailDBRsp::set_has_fetch() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SaveMailDBRsp::clear_has_fetch() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SaveMailDBRsp::clear_fetch() {
  if (fetch_ != NULL) fetch_->::proto_ff::MailDBOperateInfo::Clear();
  clear_has_fetch();
}
inline const ::proto_ff::MailDBOperateInfo& SaveMailDBRsp::fetch() const {
  return fetch_ != NULL ? *fetch_ : *default_instance_->fetch_;
}
inline ::proto_ff::MailDBOperateInfo* SaveMailDBRsp::mutable_fetch() {
  set_has_fetch();
  if (fetch_ == NULL) fetch_ = new ::proto_ff::MailDBOperateInfo;
  return fetch_;
}
inline ::proto_ff::MailDBOperateInfo* SaveMailDBRsp::release_fetch() {
  clear_has_fetch();
  ::proto_ff::MailDBOperateInfo* temp = fetch_;
  fetch_ = NULL;
  return temp;
}
inline void SaveMailDBRsp::set_allocated_fetch(::proto_ff::MailDBOperateInfo* fetch) {
  delete fetch_;
  fetch_ = fetch;
  if (fetch) {
    set_has_fetch();
  } else {
    clear_has_fetch();
  }
}

// optional .proto_ff.MailDBOperateInfo read = 5;
inline bool SaveMailDBRsp::has_read() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void SaveMailDBRsp::set_has_read() {
  _has_bits_[0] |= 0x00000010u;
}
inline void SaveMailDBRsp::clear_has_read() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void SaveMailDBRsp::clear_read() {
  if (read_ != NULL) read_->::proto_ff::MailDBOperateInfo::Clear();
  clear_has_read();
}
inline const ::proto_ff::MailDBOperateInfo& SaveMailDBRsp::read() const {
  return read_ != NULL ? *read_ : *default_instance_->read_;
}
inline ::proto_ff::MailDBOperateInfo* SaveMailDBRsp::mutable_read() {
  set_has_read();
  if (read_ == NULL) read_ = new ::proto_ff::MailDBOperateInfo;
  return read_;
}
inline ::proto_ff::MailDBOperateInfo* SaveMailDBRsp::release_read() {
  clear_has_read();
  ::proto_ff::MailDBOperateInfo* temp = read_;
  read_ = NULL;
  return temp;
}
inline void SaveMailDBRsp::set_allocated_read(::proto_ff::MailDBOperateInfo* read) {
  delete read_;
  read_ = read;
  if (read) {
    set_has_read();
  } else {
    clear_has_read();
  }
}

// optional int32 notify = 6;
inline bool SaveMailDBRsp::has_notify() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void SaveMailDBRsp::set_has_notify() {
  _has_bits_[0] |= 0x00000020u;
}
inline void SaveMailDBRsp::clear_has_notify() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void SaveMailDBRsp::clear_notify() {
  notify_ = 0;
  clear_has_notify();
}
inline ::google::protobuf::int32 SaveMailDBRsp::notify() const {
  return notify_;
}
inline void SaveMailDBRsp::set_notify(::google::protobuf::int32 value) {
  set_has_notify();
  notify_ = value;
}

// -------------------------------------------------------------------

// CharacterMailDBRequest

// optional uint64 charID = 1;
inline bool CharacterMailDBRequest::has_charid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CharacterMailDBRequest::set_has_charid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CharacterMailDBRequest::clear_has_charid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CharacterMailDBRequest::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 CharacterMailDBRequest::charid() const {
  return charid_;
}
inline void CharacterMailDBRequest::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
}

// optional uint32 zone_mail_flag = 2;
inline bool CharacterMailDBRequest::has_zone_mail_flag() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CharacterMailDBRequest::set_has_zone_mail_flag() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CharacterMailDBRequest::clear_has_zone_mail_flag() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CharacterMailDBRequest::clear_zone_mail_flag() {
  zone_mail_flag_ = 0u;
  clear_has_zone_mail_flag();
}
inline ::google::protobuf::uint32 CharacterMailDBRequest::zone_mail_flag() const {
  return zone_mail_flag_;
}
inline void CharacterMailDBRequest::set_zone_mail_flag(::google::protobuf::uint32 value) {
  set_has_zone_mail_flag();
  zone_mail_flag_ = value;
}

// optional int32 offset = 3;
inline bool CharacterMailDBRequest::has_offset() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CharacterMailDBRequest::set_has_offset() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CharacterMailDBRequest::clear_has_offset() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CharacterMailDBRequest::clear_offset() {
  offset_ = 0;
  clear_has_offset();
}
inline ::google::protobuf::int32 CharacterMailDBRequest::offset() const {
  return offset_;
}
inline void CharacterMailDBRequest::set_offset(::google::protobuf::int32 value) {
  set_has_offset();
  offset_ = value;
}

// optional uint32 reqid = 4;
inline bool CharacterMailDBRequest::has_reqid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CharacterMailDBRequest::set_has_reqid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CharacterMailDBRequest::clear_has_reqid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CharacterMailDBRequest::clear_reqid() {
  reqid_ = 0u;
  clear_has_reqid();
}
inline ::google::protobuf::uint32 CharacterMailDBRequest::reqid() const {
  return reqid_;
}
inline void CharacterMailDBRequest::set_reqid(::google::protobuf::uint32 value) {
  set_has_reqid();
  reqid_ = value;
}

// -------------------------------------------------------------------

// CharacterMailDBResponse

// optional uint64 charID = 1;
inline bool CharacterMailDBResponse::has_charid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CharacterMailDBResponse::set_has_charid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CharacterMailDBResponse::clear_has_charid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CharacterMailDBResponse::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 CharacterMailDBResponse::charid() const {
  return charid_;
}
inline void CharacterMailDBResponse::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
}

// repeated .proto_ff.MailInfo info = 2;
inline int CharacterMailDBResponse::info_size() const {
  return info_.size();
}
inline void CharacterMailDBResponse::clear_info() {
  info_.Clear();
}
inline const ::proto_ff::MailInfo& CharacterMailDBResponse::info(int index) const {
  return info_.Get(index);
}
inline ::proto_ff::MailInfo* CharacterMailDBResponse::mutable_info(int index) {
  return info_.Mutable(index);
}
inline ::proto_ff::MailInfo* CharacterMailDBResponse::add_info() {
  return info_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::MailInfo >&
CharacterMailDBResponse::info() const {
  return info_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::MailInfo >*
CharacterMailDBResponse::mutable_info() {
  return &info_;
}

// optional uint32 zoneMailId = 3;
inline bool CharacterMailDBResponse::has_zonemailid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CharacterMailDBResponse::set_has_zonemailid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CharacterMailDBResponse::clear_has_zonemailid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CharacterMailDBResponse::clear_zonemailid() {
  zonemailid_ = 0u;
  clear_has_zonemailid();
}
inline ::google::protobuf::uint32 CharacterMailDBResponse::zonemailid() const {
  return zonemailid_;
}
inline void CharacterMailDBResponse::set_zonemailid(::google::protobuf::uint32 value) {
  set_has_zonemailid();
  zonemailid_ = value;
}

// optional int32 offset = 4;
inline bool CharacterMailDBResponse::has_offset() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CharacterMailDBResponse::set_has_offset() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CharacterMailDBResponse::clear_has_offset() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CharacterMailDBResponse::clear_offset() {
  offset_ = 0;
  clear_has_offset();
}
inline ::google::protobuf::int32 CharacterMailDBResponse::offset() const {
  return offset_;
}
inline void CharacterMailDBResponse::set_offset(::google::protobuf::int32 value) {
  set_has_offset();
  offset_ = value;
}

// optional uint32 reqid = 5;
inline bool CharacterMailDBResponse::has_reqid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CharacterMailDBResponse::set_has_reqid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CharacterMailDBResponse::clear_has_reqid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CharacterMailDBResponse::clear_reqid() {
  reqid_ = 0u;
  clear_has_reqid();
}
inline ::google::protobuf::uint32 CharacterMailDBResponse::reqid() const {
  return reqid_;
}
inline void CharacterMailDBResponse::set_reqid(::google::protobuf::uint32 value) {
  set_has_reqid();
  reqid_ = value;
}

// -------------------------------------------------------------------

// MaxMailIDRequest

// -------------------------------------------------------------------

// MaxMailIDResponse

// optional uint32 maxZoneMailId = 1;
inline bool MaxMailIDResponse::has_maxzonemailid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MaxMailIDResponse::set_has_maxzonemailid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MaxMailIDResponse::clear_has_maxzonemailid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MaxMailIDResponse::clear_maxzonemailid() {
  maxzonemailid_ = 0u;
  clear_has_maxzonemailid();
}
inline ::google::protobuf::uint32 MaxMailIDResponse::maxzonemailid() const {
  return maxzonemailid_;
}
inline void MaxMailIDResponse::set_maxzonemailid(::google::protobuf::uint32 value) {
  set_has_maxzonemailid();
  maxzonemailid_ = value;
}

// optional uint32 maxMailId = 2;
inline bool MaxMailIDResponse::has_maxmailid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MaxMailIDResponse::set_has_maxmailid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MaxMailIDResponse::clear_has_maxmailid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MaxMailIDResponse::clear_maxmailid() {
  maxmailid_ = 0u;
  clear_has_maxmailid();
}
inline ::google::protobuf::uint32 MaxMailIDResponse::maxmailid() const {
  return maxmailid_;
}
inline void MaxMailIDResponse::set_maxmailid(::google::protobuf::uint32 value) {
  set_has_maxmailid();
  maxmailid_ = value;
}

// -------------------------------------------------------------------

// DeleteCharacterMail

// optional uint64 charID = 1;
inline bool DeleteCharacterMail::has_charid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DeleteCharacterMail::set_has_charid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DeleteCharacterMail::clear_has_charid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DeleteCharacterMail::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 DeleteCharacterMail::charid() const {
  return charid_;
}
inline void DeleteCharacterMail::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
}

// -------------------------------------------------------------------

// ZoneMailSaveRsp

// optional uint32 mailId = 1;
inline bool ZoneMailSaveRsp::has_mailid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ZoneMailSaveRsp::set_has_mailid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ZoneMailSaveRsp::clear_has_mailid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ZoneMailSaveRsp::clear_mailid() {
  mailid_ = 0u;
  clear_has_mailid();
}
inline ::google::protobuf::uint32 ZoneMailSaveRsp::mailid() const {
  return mailid_;
}
inline void ZoneMailSaveRsp::set_mailid(::google::protobuf::uint32 value) {
  set_has_mailid();
  mailid_ = value;
}

// -------------------------------------------------------------------

// ZoneMailTransCharacterMailReq

// optional uint32 mailId = 1;
inline bool ZoneMailTransCharacterMailReq::has_mailid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ZoneMailTransCharacterMailReq::set_has_mailid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ZoneMailTransCharacterMailReq::clear_has_mailid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ZoneMailTransCharacterMailReq::clear_mailid() {
  mailid_ = 0u;
  clear_has_mailid();
}
inline ::google::protobuf::uint32 ZoneMailTransCharacterMailReq::mailid() const {
  return mailid_;
}
inline void ZoneMailTransCharacterMailReq::set_mailid(::google::protobuf::uint32 value) {
  set_has_mailid();
  mailid_ = value;
}

// optional uint64 cid = 2;
inline bool ZoneMailTransCharacterMailReq::has_cid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ZoneMailTransCharacterMailReq::set_has_cid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ZoneMailTransCharacterMailReq::clear_has_cid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ZoneMailTransCharacterMailReq::clear_cid() {
  cid_ = GOOGLE_ULONGLONG(0);
  clear_has_cid();
}
inline ::google::protobuf::uint64 ZoneMailTransCharacterMailReq::cid() const {
  return cid_;
}
inline void ZoneMailTransCharacterMailReq::set_cid(::google::protobuf::uint64 value) {
  set_has_cid();
  cid_ = value;
}

// -------------------------------------------------------------------

// ZoneMailTransCharacterMailRsp

// optional uint64 cid = 1;
inline bool ZoneMailTransCharacterMailRsp::has_cid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ZoneMailTransCharacterMailRsp::set_has_cid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ZoneMailTransCharacterMailRsp::clear_has_cid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ZoneMailTransCharacterMailRsp::clear_cid() {
  cid_ = GOOGLE_ULONGLONG(0);
  clear_has_cid();
}
inline ::google::protobuf::uint64 ZoneMailTransCharacterMailRsp::cid() const {
  return cid_;
}
inline void ZoneMailTransCharacterMailRsp::set_cid(::google::protobuf::uint64 value) {
  set_has_cid();
  cid_ = value;
}

// repeated .proto_ff.MailInfo data = 2;
inline int ZoneMailTransCharacterMailRsp::data_size() const {
  return data_.size();
}
inline void ZoneMailTransCharacterMailRsp::clear_data() {
  data_.Clear();
}
inline const ::proto_ff::MailInfo& ZoneMailTransCharacterMailRsp::data(int index) const {
  return data_.Get(index);
}
inline ::proto_ff::MailInfo* ZoneMailTransCharacterMailRsp::mutable_data(int index) {
  return data_.Mutable(index);
}
inline ::proto_ff::MailInfo* ZoneMailTransCharacterMailRsp::add_data() {
  return data_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::MailInfo >&
ZoneMailTransCharacterMailRsp::data() const {
  return data_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::MailInfo >*
ZoneMailTransCharacterMailRsp::mutable_data() {
  return &data_;
}

// -------------------------------------------------------------------

// WebMailDBDataReq

// optional int32 op_type = 1;
inline bool WebMailDBDataReq::has_op_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WebMailDBDataReq::set_has_op_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WebMailDBDataReq::clear_has_op_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WebMailDBDataReq::clear_op_type() {
  op_type_ = 0;
  clear_has_op_type();
}
inline ::google::protobuf::int32 WebMailDBDataReq::op_type() const {
  return op_type_;
}
inline void WebMailDBDataReq::set_op_type(::google::protobuf::int32 value) {
  set_has_op_type();
  op_type_ = value;
}

// optional uint64 cid = 2;
inline bool WebMailDBDataReq::has_cid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void WebMailDBDataReq::set_has_cid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void WebMailDBDataReq::clear_has_cid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void WebMailDBDataReq::clear_cid() {
  cid_ = GOOGLE_ULONGLONG(0);
  clear_has_cid();
}
inline ::google::protobuf::uint64 WebMailDBDataReq::cid() const {
  return cid_;
}
inline void WebMailDBDataReq::set_cid(::google::protobuf::uint64 value) {
  set_has_cid();
  cid_ = value;
}

// optional uint32 pernum = 3;
inline bool WebMailDBDataReq::has_pernum() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void WebMailDBDataReq::set_has_pernum() {
  _has_bits_[0] |= 0x00000004u;
}
inline void WebMailDBDataReq::clear_has_pernum() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void WebMailDBDataReq::clear_pernum() {
  pernum_ = 0u;
  clear_has_pernum();
}
inline ::google::protobuf::uint32 WebMailDBDataReq::pernum() const {
  return pernum_;
}
inline void WebMailDBDataReq::set_pernum(::google::protobuf::uint32 value) {
  set_has_pernum();
  pernum_ = value;
}

// optional uint32 curpage = 4;
inline bool WebMailDBDataReq::has_curpage() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void WebMailDBDataReq::set_has_curpage() {
  _has_bits_[0] |= 0x00000008u;
}
inline void WebMailDBDataReq::clear_has_curpage() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void WebMailDBDataReq::clear_curpage() {
  curpage_ = 0u;
  clear_has_curpage();
}
inline ::google::protobuf::uint32 WebMailDBDataReq::curpage() const {
  return curpage_;
}
inline void WebMailDBDataReq::set_curpage(::google::protobuf::uint32 value) {
  set_has_curpage();
  curpage_ = value;
}

// repeated uint32 id_lst = 5;
inline int WebMailDBDataReq::id_lst_size() const {
  return id_lst_.size();
}
inline void WebMailDBDataReq::clear_id_lst() {
  id_lst_.Clear();
}
inline ::google::protobuf::uint32 WebMailDBDataReq::id_lst(int index) const {
  return id_lst_.Get(index);
}
inline void WebMailDBDataReq::set_id_lst(int index, ::google::protobuf::uint32 value) {
  id_lst_.Set(index, value);
}
inline void WebMailDBDataReq::add_id_lst(::google::protobuf::uint32 value) {
  id_lst_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
WebMailDBDataReq::id_lst() const {
  return id_lst_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
WebMailDBDataReq::mutable_id_lst() {
  return &id_lst_;
}

// optional string webId = 6;
inline bool WebMailDBDataReq::has_webid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void WebMailDBDataReq::set_has_webid() {
  _has_bits_[0] |= 0x00000020u;
}
inline void WebMailDBDataReq::clear_has_webid() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void WebMailDBDataReq::clear_webid() {
  if (webid_ != &::google::protobuf::internal::kEmptyString) {
    webid_->clear();
  }
  clear_has_webid();
}
inline const ::std::string& WebMailDBDataReq::webid() const {
  return *webid_;
}
inline void WebMailDBDataReq::set_webid(const ::std::string& value) {
  set_has_webid();
  if (webid_ == &::google::protobuf::internal::kEmptyString) {
    webid_ = new ::std::string;
  }
  webid_->assign(value);
}
inline void WebMailDBDataReq::set_webid(const char* value) {
  set_has_webid();
  if (webid_ == &::google::protobuf::internal::kEmptyString) {
    webid_ = new ::std::string;
  }
  webid_->assign(value);
}
inline void WebMailDBDataReq::set_webid(const char* value, size_t size) {
  set_has_webid();
  if (webid_ == &::google::protobuf::internal::kEmptyString) {
    webid_ = new ::std::string;
  }
  webid_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* WebMailDBDataReq::mutable_webid() {
  set_has_webid();
  if (webid_ == &::google::protobuf::internal::kEmptyString) {
    webid_ = new ::std::string;
  }
  return webid_;
}
inline ::std::string* WebMailDBDataReq::release_webid() {
  clear_has_webid();
  if (webid_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = webid_;
    webid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void WebMailDBDataReq::set_allocated_webid(::std::string* webid) {
  if (webid_ != &::google::protobuf::internal::kEmptyString) {
    delete webid_;
  }
  if (webid) {
    set_has_webid();
    webid_ = webid;
  } else {
    clear_has_webid();
    webid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// WebMailDBDataRsp

// optional int32 op_type = 1;
inline bool WebMailDBDataRsp::has_op_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WebMailDBDataRsp::set_has_op_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WebMailDBDataRsp::clear_has_op_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WebMailDBDataRsp::clear_op_type() {
  op_type_ = 0;
  clear_has_op_type();
}
inline ::google::protobuf::int32 WebMailDBDataRsp::op_type() const {
  return op_type_;
}
inline void WebMailDBDataRsp::set_op_type(::google::protobuf::int32 value) {
  set_has_op_type();
  op_type_ = value;
}

// optional uint64 cid = 2;
inline bool WebMailDBDataRsp::has_cid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void WebMailDBDataRsp::set_has_cid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void WebMailDBDataRsp::clear_has_cid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void WebMailDBDataRsp::clear_cid() {
  cid_ = GOOGLE_ULONGLONG(0);
  clear_has_cid();
}
inline ::google::protobuf::uint64 WebMailDBDataRsp::cid() const {
  return cid_;
}
inline void WebMailDBDataRsp::set_cid(::google::protobuf::uint64 value) {
  set_has_cid();
  cid_ = value;
}

// optional uint32 curpage = 3;
inline bool WebMailDBDataRsp::has_curpage() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void WebMailDBDataRsp::set_has_curpage() {
  _has_bits_[0] |= 0x00000004u;
}
inline void WebMailDBDataRsp::clear_has_curpage() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void WebMailDBDataRsp::clear_curpage() {
  curpage_ = 0u;
  clear_has_curpage();
}
inline ::google::protobuf::uint32 WebMailDBDataRsp::curpage() const {
  return curpage_;
}
inline void WebMailDBDataRsp::set_curpage(::google::protobuf::uint32 value) {
  set_has_curpage();
  curpage_ = value;
}

// optional uint32 totalcount = 4;
inline bool WebMailDBDataRsp::has_totalcount() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void WebMailDBDataRsp::set_has_totalcount() {
  _has_bits_[0] |= 0x00000008u;
}
inline void WebMailDBDataRsp::clear_has_totalcount() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void WebMailDBDataRsp::clear_totalcount() {
  totalcount_ = 0u;
  clear_has_totalcount();
}
inline ::google::protobuf::uint32 WebMailDBDataRsp::totalcount() const {
  return totalcount_;
}
inline void WebMailDBDataRsp::set_totalcount(::google::protobuf::uint32 value) {
  set_has_totalcount();
  totalcount_ = value;
}

// repeated uint32 id_lst = 5;
inline int WebMailDBDataRsp::id_lst_size() const {
  return id_lst_.size();
}
inline void WebMailDBDataRsp::clear_id_lst() {
  id_lst_.Clear();
}
inline ::google::protobuf::uint32 WebMailDBDataRsp::id_lst(int index) const {
  return id_lst_.Get(index);
}
inline void WebMailDBDataRsp::set_id_lst(int index, ::google::protobuf::uint32 value) {
  id_lst_.Set(index, value);
}
inline void WebMailDBDataRsp::add_id_lst(::google::protobuf::uint32 value) {
  id_lst_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
WebMailDBDataRsp::id_lst() const {
  return id_lst_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
WebMailDBDataRsp::mutable_id_lst() {
  return &id_lst_;
}

// repeated .proto_ff.WebMailDataProto info_lst = 6;
inline int WebMailDBDataRsp::info_lst_size() const {
  return info_lst_.size();
}
inline void WebMailDBDataRsp::clear_info_lst() {
  info_lst_.Clear();
}
inline const ::proto_ff::WebMailDataProto& WebMailDBDataRsp::info_lst(int index) const {
  return info_lst_.Get(index);
}
inline ::proto_ff::WebMailDataProto* WebMailDBDataRsp::mutable_info_lst(int index) {
  return info_lst_.Mutable(index);
}
inline ::proto_ff::WebMailDataProto* WebMailDBDataRsp::add_info_lst() {
  return info_lst_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::WebMailDataProto >&
WebMailDBDataRsp::info_lst() const {
  return info_lst_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::WebMailDataProto >*
WebMailDBDataRsp::mutable_info_lst() {
  return &info_lst_;
}

// optional string webId = 7;
inline bool WebMailDBDataRsp::has_webid() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void WebMailDBDataRsp::set_has_webid() {
  _has_bits_[0] |= 0x00000040u;
}
inline void WebMailDBDataRsp::clear_has_webid() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void WebMailDBDataRsp::clear_webid() {
  if (webid_ != &::google::protobuf::internal::kEmptyString) {
    webid_->clear();
  }
  clear_has_webid();
}
inline const ::std::string& WebMailDBDataRsp::webid() const {
  return *webid_;
}
inline void WebMailDBDataRsp::set_webid(const ::std::string& value) {
  set_has_webid();
  if (webid_ == &::google::protobuf::internal::kEmptyString) {
    webid_ = new ::std::string;
  }
  webid_->assign(value);
}
inline void WebMailDBDataRsp::set_webid(const char* value) {
  set_has_webid();
  if (webid_ == &::google::protobuf::internal::kEmptyString) {
    webid_ = new ::std::string;
  }
  webid_->assign(value);
}
inline void WebMailDBDataRsp::set_webid(const char* value, size_t size) {
  set_has_webid();
  if (webid_ == &::google::protobuf::internal::kEmptyString) {
    webid_ = new ::std::string;
  }
  webid_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* WebMailDBDataRsp::mutable_webid() {
  set_has_webid();
  if (webid_ == &::google::protobuf::internal::kEmptyString) {
    webid_ = new ::std::string;
  }
  return webid_;
}
inline ::std::string* WebMailDBDataRsp::release_webid() {
  clear_has_webid();
  if (webid_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = webid_;
    webid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void WebMailDBDataRsp::set_allocated_webid(::std::string* webid) {
  if (webid_ != &::google::protobuf::internal::kEmptyString) {
    delete webid_;
  }
  if (webid) {
    set_has_webid();
    webid_ = webid;
  } else {
    clear_has_webid();
    webid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// FriendDBInfo

// optional uint64 charID = 1;
inline bool FriendDBInfo::has_charid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FriendDBInfo::set_has_charid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FriendDBInfo::clear_has_charid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FriendDBInfo::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 FriendDBInfo::charid() const {
  return charid_;
}
inline void FriendDBInfo::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
}

// optional .proto_ff.RelationDBInfo data = 2;
inline bool FriendDBInfo::has_data() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FriendDBInfo::set_has_data() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FriendDBInfo::clear_has_data() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FriendDBInfo::clear_data() {
  if (data_ != NULL) data_->::proto_ff::RelationDBInfo::Clear();
  clear_has_data();
}
inline const ::proto_ff::RelationDBInfo& FriendDBInfo::data() const {
  return data_ != NULL ? *data_ : *default_instance_->data_;
}
inline ::proto_ff::RelationDBInfo* FriendDBInfo::mutable_data() {
  set_has_data();
  if (data_ == NULL) data_ = new ::proto_ff::RelationDBInfo;
  return data_;
}
inline ::proto_ff::RelationDBInfo* FriendDBInfo::release_data() {
  clear_has_data();
  ::proto_ff::RelationDBInfo* temp = data_;
  data_ = NULL;
  return temp;
}
inline void FriendDBInfo::set_allocated_data(::proto_ff::RelationDBInfo* data) {
  delete data_;
  data_ = data;
  if (data) {
    set_has_data();
  } else {
    clear_has_data();
  }
}

// -------------------------------------------------------------------

// FriendDBRequest

// optional uint64 charid = 1;
inline bool FriendDBRequest::has_charid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FriendDBRequest::set_has_charid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FriendDBRequest::clear_has_charid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FriendDBRequest::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 FriendDBRequest::charid() const {
  return charid_;
}
inline void FriendDBRequest::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
}

// repeated uint64 dstid_lst = 2;
inline int FriendDBRequest::dstid_lst_size() const {
  return dstid_lst_.size();
}
inline void FriendDBRequest::clear_dstid_lst() {
  dstid_lst_.Clear();
}
inline ::google::protobuf::uint64 FriendDBRequest::dstid_lst(int index) const {
  return dstid_lst_.Get(index);
}
inline void FriendDBRequest::set_dstid_lst(int index, ::google::protobuf::uint64 value) {
  dstid_lst_.Set(index, value);
}
inline void FriendDBRequest::add_dstid_lst(::google::protobuf::uint64 value) {
  dstid_lst_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
FriendDBRequest::dstid_lst() const {
  return dstid_lst_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
FriendDBRequest::mutable_dstid_lst() {
  return &dstid_lst_;
}

// optional uint32 operate_type = 3;
inline bool FriendDBRequest::has_operate_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void FriendDBRequest::set_has_operate_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void FriendDBRequest::clear_has_operate_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void FriendDBRequest::clear_operate_type() {
  operate_type_ = 0u;
  clear_has_operate_type();
}
inline ::google::protobuf::uint32 FriendDBRequest::operate_type() const {
  return operate_type_;
}
inline void FriendDBRequest::set_operate_type(::google::protobuf::uint32 value) {
  set_has_operate_type();
  operate_type_ = value;
}

// optional bytes data = 4;
inline bool FriendDBRequest::has_data() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void FriendDBRequest::set_has_data() {
  _has_bits_[0] |= 0x00000008u;
}
inline void FriendDBRequest::clear_has_data() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void FriendDBRequest::clear_data() {
  if (data_ != &::google::protobuf::internal::kEmptyString) {
    data_->clear();
  }
  clear_has_data();
}
inline const ::std::string& FriendDBRequest::data() const {
  return *data_;
}
inline void FriendDBRequest::set_data(const ::std::string& value) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::kEmptyString) {
    data_ = new ::std::string;
  }
  data_->assign(value);
}
inline void FriendDBRequest::set_data(const char* value) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::kEmptyString) {
    data_ = new ::std::string;
  }
  data_->assign(value);
}
inline void FriendDBRequest::set_data(const void* value, size_t size) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::kEmptyString) {
    data_ = new ::std::string;
  }
  data_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* FriendDBRequest::mutable_data() {
  set_has_data();
  if (data_ == &::google::protobuf::internal::kEmptyString) {
    data_ = new ::std::string;
  }
  return data_;
}
inline ::std::string* FriendDBRequest::release_data() {
  clear_has_data();
  if (data_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = data_;
    data_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void FriendDBRequest::set_allocated_data(::std::string* data) {
  if (data_ != &::google::protobuf::internal::kEmptyString) {
    delete data_;
  }
  if (data) {
    set_has_data();
    data_ = data;
  } else {
    clear_has_data();
    data_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional uint32 query_times = 5;
inline bool FriendDBRequest::has_query_times() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void FriendDBRequest::set_has_query_times() {
  _has_bits_[0] |= 0x00000010u;
}
inline void FriendDBRequest::clear_has_query_times() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void FriendDBRequest::clear_query_times() {
  query_times_ = 0u;
  clear_has_query_times();
}
inline ::google::protobuf::uint32 FriendDBRequest::query_times() const {
  return query_times_;
}
inline void FriendDBRequest::set_query_times(::google::protobuf::uint32 value) {
  set_has_query_times();
  query_times_ = value;
}

// -------------------------------------------------------------------

// FriendDBResponse

// optional int32 retcode = 1;
inline bool FriendDBResponse::has_retcode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FriendDBResponse::set_has_retcode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FriendDBResponse::clear_has_retcode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FriendDBResponse::clear_retcode() {
  retcode_ = 0;
  clear_has_retcode();
}
inline ::google::protobuf::int32 FriendDBResponse::retcode() const {
  return retcode_;
}
inline void FriendDBResponse::set_retcode(::google::protobuf::int32 value) {
  set_has_retcode();
  retcode_ = value;
}

// optional uint64 charid = 2;
inline bool FriendDBResponse::has_charid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FriendDBResponse::set_has_charid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FriendDBResponse::clear_has_charid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FriendDBResponse::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 FriendDBResponse::charid() const {
  return charid_;
}
inline void FriendDBResponse::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
}

// optional uint32 operate_type = 3;
inline bool FriendDBResponse::has_operate_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void FriendDBResponse::set_has_operate_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void FriendDBResponse::clear_has_operate_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void FriendDBResponse::clear_operate_type() {
  operate_type_ = 0u;
  clear_has_operate_type();
}
inline ::google::protobuf::uint32 FriendDBResponse::operate_type() const {
  return operate_type_;
}
inline void FriendDBResponse::set_operate_type(::google::protobuf::uint32 value) {
  set_has_operate_type();
  operate_type_ = value;
}

// repeated .proto_ff.FriendDBInfo info_lst = 4;
inline int FriendDBResponse::info_lst_size() const {
  return info_lst_.size();
}
inline void FriendDBResponse::clear_info_lst() {
  info_lst_.Clear();
}
inline const ::proto_ff::FriendDBInfo& FriendDBResponse::info_lst(int index) const {
  return info_lst_.Get(index);
}
inline ::proto_ff::FriendDBInfo* FriendDBResponse::mutable_info_lst(int index) {
  return info_lst_.Mutable(index);
}
inline ::proto_ff::FriendDBInfo* FriendDBResponse::add_info_lst() {
  return info_lst_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::FriendDBInfo >&
FriendDBResponse::info_lst() const {
  return info_lst_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::FriendDBInfo >*
FriendDBResponse::mutable_info_lst() {
  return &info_lst_;
}

// repeated uint64 last_lst = 5;
inline int FriendDBResponse::last_lst_size() const {
  return last_lst_.size();
}
inline void FriendDBResponse::clear_last_lst() {
  last_lst_.Clear();
}
inline ::google::protobuf::uint64 FriendDBResponse::last_lst(int index) const {
  return last_lst_.Get(index);
}
inline void FriendDBResponse::set_last_lst(int index, ::google::protobuf::uint64 value) {
  last_lst_.Set(index, value);
}
inline void FriendDBResponse::add_last_lst(::google::protobuf::uint64 value) {
  last_lst_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
FriendDBResponse::last_lst() const {
  return last_lst_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
FriendDBResponse::mutable_last_lst() {
  return &last_lst_;
}

// optional bytes data = 6;
inline bool FriendDBResponse::has_data() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void FriendDBResponse::set_has_data() {
  _has_bits_[0] |= 0x00000020u;
}
inline void FriendDBResponse::clear_has_data() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void FriendDBResponse::clear_data() {
  if (data_ != &::google::protobuf::internal::kEmptyString) {
    data_->clear();
  }
  clear_has_data();
}
inline const ::std::string& FriendDBResponse::data() const {
  return *data_;
}
inline void FriendDBResponse::set_data(const ::std::string& value) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::kEmptyString) {
    data_ = new ::std::string;
  }
  data_->assign(value);
}
inline void FriendDBResponse::set_data(const char* value) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::kEmptyString) {
    data_ = new ::std::string;
  }
  data_->assign(value);
}
inline void FriendDBResponse::set_data(const void* value, size_t size) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::kEmptyString) {
    data_ = new ::std::string;
  }
  data_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* FriendDBResponse::mutable_data() {
  set_has_data();
  if (data_ == &::google::protobuf::internal::kEmptyString) {
    data_ = new ::std::string;
  }
  return data_;
}
inline ::std::string* FriendDBResponse::release_data() {
  clear_has_data();
  if (data_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = data_;
    data_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void FriendDBResponse::set_allocated_data(::std::string* data) {
  if (data_ != &::google::protobuf::internal::kEmptyString) {
    delete data_;
  }
  if (data) {
    set_has_data();
    data_ = data;
  } else {
    clear_has_data();
    data_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional uint32 query_times = 7;
inline bool FriendDBResponse::has_query_times() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void FriendDBResponse::set_has_query_times() {
  _has_bits_[0] |= 0x00000040u;
}
inline void FriendDBResponse::clear_has_query_times() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void FriendDBResponse::clear_query_times() {
  query_times_ = 0u;
  clear_has_query_times();
}
inline ::google::protobuf::uint32 FriendDBResponse::query_times() const {
  return query_times_;
}
inline void FriendDBResponse::set_query_times(::google::protobuf::uint32 value) {
  set_has_query_times();
  query_times_ = value;
}

// -------------------------------------------------------------------

// AllFriendDBRequest

// optional int32 offset = 1;
inline bool AllFriendDBRequest::has_offset() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AllFriendDBRequest::set_has_offset() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AllFriendDBRequest::clear_has_offset() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AllFriendDBRequest::clear_offset() {
  offset_ = 0;
  clear_has_offset();
}
inline ::google::protobuf::int32 AllFriendDBRequest::offset() const {
  return offset_;
}
inline void AllFriendDBRequest::set_offset(::google::protobuf::int32 value) {
  set_has_offset();
  offset_ = value;
}

// -------------------------------------------------------------------

// AllFriendDBResponse

// optional int32 retcode = 1;
inline bool AllFriendDBResponse::has_retcode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AllFriendDBResponse::set_has_retcode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AllFriendDBResponse::clear_has_retcode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AllFriendDBResponse::clear_retcode() {
  retcode_ = 0;
  clear_has_retcode();
}
inline ::google::protobuf::int32 AllFriendDBResponse::retcode() const {
  return retcode_;
}
inline void AllFriendDBResponse::set_retcode(::google::protobuf::int32 value) {
  set_has_retcode();
  retcode_ = value;
}

// optional int32 offset = 2;
inline bool AllFriendDBResponse::has_offset() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AllFriendDBResponse::set_has_offset() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AllFriendDBResponse::clear_has_offset() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AllFriendDBResponse::clear_offset() {
  offset_ = 0;
  clear_has_offset();
}
inline ::google::protobuf::int32 AllFriendDBResponse::offset() const {
  return offset_;
}
inline void AllFriendDBResponse::set_offset(::google::protobuf::int32 value) {
  set_has_offset();
  offset_ = value;
}

// repeated .proto_ff.FriendDBInfo info = 3;
inline int AllFriendDBResponse::info_size() const {
  return info_.size();
}
inline void AllFriendDBResponse::clear_info() {
  info_.Clear();
}
inline const ::proto_ff::FriendDBInfo& AllFriendDBResponse::info(int index) const {
  return info_.Get(index);
}
inline ::proto_ff::FriendDBInfo* AllFriendDBResponse::mutable_info(int index) {
  return info_.Mutable(index);
}
inline ::proto_ff::FriendDBInfo* AllFriendDBResponse::add_info() {
  return info_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::FriendDBInfo >&
AllFriendDBResponse::info() const {
  return info_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::FriendDBInfo >*
AllFriendDBResponse::mutable_info() {
  return &info_;
}

// -------------------------------------------------------------------

// SaveFriendDBRequest

// repeated .proto_ff.FriendDBInfo info = 1;
inline int SaveFriendDBRequest::info_size() const {
  return info_.size();
}
inline void SaveFriendDBRequest::clear_info() {
  info_.Clear();
}
inline const ::proto_ff::FriendDBInfo& SaveFriendDBRequest::info(int index) const {
  return info_.Get(index);
}
inline ::proto_ff::FriendDBInfo* SaveFriendDBRequest::mutable_info(int index) {
  return info_.Mutable(index);
}
inline ::proto_ff::FriendDBInfo* SaveFriendDBRequest::add_info() {
  return info_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::FriendDBInfo >&
SaveFriendDBRequest::info() const {
  return info_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::FriendDBInfo >*
SaveFriendDBRequest::mutable_info() {
  return &info_;
}

// -------------------------------------------------------------------

// DelteFriendDBRequest

// optional uint64 charId = 1;
inline bool DelteFriendDBRequest::has_charid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DelteFriendDBRequest::set_has_charid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DelteFriendDBRequest::clear_has_charid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DelteFriendDBRequest::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 DelteFriendDBRequest::charid() const {
  return charid_;
}
inline void DelteFriendDBRequest::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
}

// -------------------------------------------------------------------

// GlobalDBRequst

// -------------------------------------------------------------------

// GlobalDBEntry

// optional int32 type_id = 1;
inline bool GlobalDBEntry::has_type_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GlobalDBEntry::set_has_type_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GlobalDBEntry::clear_has_type_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GlobalDBEntry::clear_type_id() {
  type_id_ = 0;
  clear_has_type_id();
}
inline ::google::protobuf::int32 GlobalDBEntry::type_id() const {
  return type_id_;
}
inline void GlobalDBEntry::set_type_id(::google::protobuf::int32 value) {
  set_has_type_id();
  type_id_ = value;
}

// optional bytes data = 2;
inline bool GlobalDBEntry::has_data() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GlobalDBEntry::set_has_data() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GlobalDBEntry::clear_has_data() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GlobalDBEntry::clear_data() {
  if (data_ != &::google::protobuf::internal::kEmptyString) {
    data_->clear();
  }
  clear_has_data();
}
inline const ::std::string& GlobalDBEntry::data() const {
  return *data_;
}
inline void GlobalDBEntry::set_data(const ::std::string& value) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::kEmptyString) {
    data_ = new ::std::string;
  }
  data_->assign(value);
}
inline void GlobalDBEntry::set_data(const char* value) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::kEmptyString) {
    data_ = new ::std::string;
  }
  data_->assign(value);
}
inline void GlobalDBEntry::set_data(const void* value, size_t size) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::kEmptyString) {
    data_ = new ::std::string;
  }
  data_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GlobalDBEntry::mutable_data() {
  set_has_data();
  if (data_ == &::google::protobuf::internal::kEmptyString) {
    data_ = new ::std::string;
  }
  return data_;
}
inline ::std::string* GlobalDBEntry::release_data() {
  clear_has_data();
  if (data_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = data_;
    data_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GlobalDBEntry::set_allocated_data(::std::string* data) {
  if (data_ != &::google::protobuf::internal::kEmptyString) {
    delete data_;
  }
  if (data) {
    set_has_data();
    data_ = data;
  } else {
    clear_has_data();
    data_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// GlobalDBResponse

// repeated .proto_ff.GlobalDBEntry entry = 1;
inline int GlobalDBResponse::entry_size() const {
  return entry_.size();
}
inline void GlobalDBResponse::clear_entry() {
  entry_.Clear();
}
inline const ::proto_ff::GlobalDBEntry& GlobalDBResponse::entry(int index) const {
  return entry_.Get(index);
}
inline ::proto_ff::GlobalDBEntry* GlobalDBResponse::mutable_entry(int index) {
  return entry_.Mutable(index);
}
inline ::proto_ff::GlobalDBEntry* GlobalDBResponse::add_entry() {
  return entry_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::GlobalDBEntry >&
GlobalDBResponse::entry() const {
  return entry_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::GlobalDBEntry >*
GlobalDBResponse::mutable_entry() {
  return &entry_;
}

// optional int32 isfinish = 2;
inline bool GlobalDBResponse::has_isfinish() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GlobalDBResponse::set_has_isfinish() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GlobalDBResponse::clear_has_isfinish() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GlobalDBResponse::clear_isfinish() {
  isfinish_ = 0;
  clear_has_isfinish();
}
inline ::google::protobuf::int32 GlobalDBResponse::isfinish() const {
  return isfinish_;
}
inline void GlobalDBResponse::set_isfinish(::google::protobuf::int32 value) {
  set_has_isfinish();
  isfinish_ = value;
}

// -------------------------------------------------------------------

// GlobalDBSetRequest

// optional int32 type_id = 1;
inline bool GlobalDBSetRequest::has_type_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GlobalDBSetRequest::set_has_type_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GlobalDBSetRequest::clear_has_type_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GlobalDBSetRequest::clear_type_id() {
  type_id_ = 0;
  clear_has_type_id();
}
inline ::google::protobuf::int32 GlobalDBSetRequest::type_id() const {
  return type_id_;
}
inline void GlobalDBSetRequest::set_type_id(::google::protobuf::int32 value) {
  set_has_type_id();
  type_id_ = value;
}

// optional bytes data = 2;
inline bool GlobalDBSetRequest::has_data() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GlobalDBSetRequest::set_has_data() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GlobalDBSetRequest::clear_has_data() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GlobalDBSetRequest::clear_data() {
  if (data_ != &::google::protobuf::internal::kEmptyString) {
    data_->clear();
  }
  clear_has_data();
}
inline const ::std::string& GlobalDBSetRequest::data() const {
  return *data_;
}
inline void GlobalDBSetRequest::set_data(const ::std::string& value) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::kEmptyString) {
    data_ = new ::std::string;
  }
  data_->assign(value);
}
inline void GlobalDBSetRequest::set_data(const char* value) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::kEmptyString) {
    data_ = new ::std::string;
  }
  data_->assign(value);
}
inline void GlobalDBSetRequest::set_data(const void* value, size_t size) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::kEmptyString) {
    data_ = new ::std::string;
  }
  data_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GlobalDBSetRequest::mutable_data() {
  set_has_data();
  if (data_ == &::google::protobuf::internal::kEmptyString) {
    data_ = new ::std::string;
  }
  return data_;
}
inline ::std::string* GlobalDBSetRequest::release_data() {
  clear_has_data();
  if (data_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = data_;
    data_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GlobalDBSetRequest::set_allocated_data(::std::string* data) {
  if (data_ != &::google::protobuf::internal::kEmptyString) {
    delete data_;
  }
  if (data) {
    set_has_data();
    data_ = data;
  } else {
    clear_has_data();
    data_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// GlobalDBSetResponse

// optional int32 retcode = 1;
inline bool GlobalDBSetResponse::has_retcode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GlobalDBSetResponse::set_has_retcode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GlobalDBSetResponse::clear_has_retcode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GlobalDBSetResponse::clear_retcode() {
  retcode_ = 0;
  clear_has_retcode();
}
inline ::google::protobuf::int32 GlobalDBSetResponse::retcode() const {
  return retcode_;
}
inline void GlobalDBSetResponse::set_retcode(::google::protobuf::int32 value) {
  set_has_retcode();
  retcode_ = value;
}

// optional int32 type_id = 2;
inline bool GlobalDBSetResponse::has_type_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GlobalDBSetResponse::set_has_type_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GlobalDBSetResponse::clear_has_type_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GlobalDBSetResponse::clear_type_id() {
  type_id_ = 0;
  clear_has_type_id();
}
inline ::google::protobuf::int32 GlobalDBSetResponse::type_id() const {
  return type_id_;
}
inline void GlobalDBSetResponse::set_type_id(::google::protobuf::int32 value) {
  set_has_type_id();
  type_id_ = value;
}

// -------------------------------------------------------------------

// GlobalComData

// repeated .proto_ff.DupTowerDBRecord towerDupReward = 1;
inline int GlobalComData::towerdupreward_size() const {
  return towerdupreward_.size();
}
inline void GlobalComData::clear_towerdupreward() {
  towerdupreward_.Clear();
}
inline const ::proto_ff::DupTowerDBRecord& GlobalComData::towerdupreward(int index) const {
  return towerdupreward_.Get(index);
}
inline ::proto_ff::DupTowerDBRecord* GlobalComData::mutable_towerdupreward(int index) {
  return towerdupreward_.Mutable(index);
}
inline ::proto_ff::DupTowerDBRecord* GlobalComData::add_towerdupreward() {
  return towerdupreward_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::DupTowerDBRecord >&
GlobalComData::towerdupreward() const {
  return towerdupreward_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::DupTowerDBRecord >*
GlobalComData::mutable_towerdupreward() {
  return &towerdupreward_;
}

// -------------------------------------------------------------------

// ActDBProto

// optional uint64 actid = 1;
inline bool ActDBProto::has_actid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ActDBProto::set_has_actid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ActDBProto::clear_has_actid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ActDBProto::clear_actid() {
  actid_ = GOOGLE_ULONGLONG(0);
  clear_has_actid();
}
inline ::google::protobuf::uint64 ActDBProto::actid() const {
  return actid_;
}
inline void ActDBProto::set_actid(::google::protobuf::uint64 value) {
  set_has_actid();
  actid_ = value;
}

// optional uint32 zid = 2;
inline bool ActDBProto::has_zid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ActDBProto::set_has_zid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ActDBProto::clear_has_zid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ActDBProto::clear_zid() {
  zid_ = 0u;
  clear_has_zid();
}
inline ::google::protobuf::uint32 ActDBProto::zid() const {
  return zid_;
}
inline void ActDBProto::set_zid(::google::protobuf::uint32 value) {
  set_has_zid();
  zid_ = value;
}

// optional uint64 finishtime = 3;
inline bool ActDBProto::has_finishtime() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ActDBProto::set_has_finishtime() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ActDBProto::clear_has_finishtime() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ActDBProto::clear_finishtime() {
  finishtime_ = GOOGLE_ULONGLONG(0);
  clear_has_finishtime();
}
inline ::google::protobuf::uint64 ActDBProto::finishtime() const {
  return finishtime_;
}
inline void ActDBProto::set_finishtime(::google::protobuf::uint64 value) {
  set_has_finishtime();
  finishtime_ = value;
}

// -------------------------------------------------------------------

// ActDBReq

// -------------------------------------------------------------------

// ActDBRsp

// repeated .proto_ff.ActDBProto lst = 1;
inline int ActDBRsp::lst_size() const {
  return lst_.size();
}
inline void ActDBRsp::clear_lst() {
  lst_.Clear();
}
inline const ::proto_ff::ActDBProto& ActDBRsp::lst(int index) const {
  return lst_.Get(index);
}
inline ::proto_ff::ActDBProto* ActDBRsp::mutable_lst(int index) {
  return lst_.Mutable(index);
}
inline ::proto_ff::ActDBProto* ActDBRsp::add_lst() {
  return lst_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::ActDBProto >&
ActDBRsp::lst() const {
  return lst_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::ActDBProto >*
ActDBRsp::mutable_lst() {
  return &lst_;
}

// -------------------------------------------------------------------

// ActSaveDBReq

// repeated .proto_ff.ActDBProto lst = 1;
inline int ActSaveDBReq::lst_size() const {
  return lst_.size();
}
inline void ActSaveDBReq::clear_lst() {
  lst_.Clear();
}
inline const ::proto_ff::ActDBProto& ActSaveDBReq::lst(int index) const {
  return lst_.Get(index);
}
inline ::proto_ff::ActDBProto* ActSaveDBReq::mutable_lst(int index) {
  return lst_.Mutable(index);
}
inline ::proto_ff::ActDBProto* ActSaveDBReq::add_lst() {
  return lst_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::ActDBProto >&
ActSaveDBReq::lst() const {
  return lst_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::ActDBProto >*
ActSaveDBReq::mutable_lst() {
  return &lst_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto_ff

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_DBProto_2eproto__INCLUDED
