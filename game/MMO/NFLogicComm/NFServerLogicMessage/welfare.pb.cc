// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: welfare.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "welfare.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace proto_ff {

namespace {

const ::google::protobuf::Descriptor* WelfareGetSignDataReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  WelfareGetSignDataReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* WelfareGetSignDataRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  WelfareGetSignDataRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* WelfareGetSignRewardReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  WelfareGetSignRewardReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* WelfareGetSignRewardRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  WelfareGetSignRewardRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* WelfareGetAccureRewardReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  WelfareGetAccureRewardReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* WelfareGetAccureRewardRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  WelfareGetAccureRewardRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* WelfareGetLvRewardDataReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  WelfareGetLvRewardDataReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* WelfareGetLvRewardDataRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  WelfareGetLvRewardDataRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* WelfareGetLvRewardRewardReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  WelfareGetLvRewardRewardReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* WelfareGetLvRewardRewardRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  WelfareGetLvRewardRewardRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* WelfareGetOnlineRewardDataReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  WelfareGetOnlineRewardDataReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* WelfareGetOnlineRewardDataRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  WelfareGetOnlineRewardDataRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* WelfareGetOnlineRewardRewardReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  WelfareGetOnlineRewardRewardReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* WelfareGetOnlineRewardRewardRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  WelfareGetOnlineRewardRewardRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* WelfareGetNotifyRewardDataReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  WelfareGetNotifyRewardDataReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* WelfareGetNotifyRewardDataRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  WelfareGetNotifyRewardDataRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* WelfareGetNotifyRewardRewardReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  WelfareGetNotifyRewardRewardReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* WelfareGetNotifyRewardRewardRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  WelfareGetNotifyRewardRewardRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* WelfareGetFraudRewardDataReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  WelfareGetFraudRewardDataReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* WelfareGetFraudRewardDataRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  WelfareGetFraudRewardDataRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* WelfareGetFraudRewardRewardReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  WelfareGetFraudRewardRewardReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* WelfareGetFraudRewardRewardRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  WelfareGetFraudRewardRewardRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* WelfareGetWeekEndRewardDataReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  WelfareGetWeekEndRewardDataReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* WelfareGetWeekEndRewardDataRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  WelfareGetWeekEndRewardDataRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* WelfareGetWeekEndRewardRewardReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  WelfareGetWeekEndRewardRewardReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* WelfareGetWeekEndRewardRewardRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  WelfareGetWeekEndRewardRewardRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* WelfareGetQiFuDataReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  WelfareGetQiFuDataReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* WelfareGetQiFuDataRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  WelfareGetQiFuDataRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* WelfareQiFuReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  WelfareQiFuReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* WelfareQiFuRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  WelfareQiFuRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* WelfareSaveMoneyReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  WelfareSaveMoneyReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* WelfareSaveMoneyRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  WelfareSaveMoneyRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* WelfareGetMoneyReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  WelfareGetMoneyReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* WelfareGetMoneyRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  WelfareGetMoneyRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* WelfareGetLogonDataReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  WelfareGetLogonDataReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* WelfareGetLogonDataRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  WelfareGetLogonDataRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* WelfareGetLogonRewardReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  WelfareGetLogonRewardReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* WelfareGetLogonRewardRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  WelfareGetLogonRewardRsp_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_welfare_2eproto() {
  protobuf_AddDesc_welfare_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "welfare.proto");
  GOOGLE_CHECK(file != NULL);
  WelfareGetSignDataReq_descriptor_ = file->message_type(0);
  static const int WelfareGetSignDataReq_offsets_[1] = {
  };
  WelfareGetSignDataReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      WelfareGetSignDataReq_descriptor_,
      WelfareGetSignDataReq::default_instance_,
      WelfareGetSignDataReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WelfareGetSignDataReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WelfareGetSignDataReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(WelfareGetSignDataReq));
  WelfareGetSignDataRsp_descriptor_ = file->message_type(1);
  static const int WelfareGetSignDataRsp_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WelfareGetSignDataRsp, sign_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WelfareGetSignDataRsp, accure_),
  };
  WelfareGetSignDataRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      WelfareGetSignDataRsp_descriptor_,
      WelfareGetSignDataRsp::default_instance_,
      WelfareGetSignDataRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WelfareGetSignDataRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WelfareGetSignDataRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(WelfareGetSignDataRsp));
  WelfareGetSignRewardReq_descriptor_ = file->message_type(2);
  static const int WelfareGetSignRewardReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WelfareGetSignRewardReq, id_),
  };
  WelfareGetSignRewardReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      WelfareGetSignRewardReq_descriptor_,
      WelfareGetSignRewardReq::default_instance_,
      WelfareGetSignRewardReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WelfareGetSignRewardReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WelfareGetSignRewardReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(WelfareGetSignRewardReq));
  WelfareGetSignRewardRsp_descriptor_ = file->message_type(3);
  static const int WelfareGetSignRewardRsp_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WelfareGetSignRewardRsp, ret_code_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WelfareGetSignRewardRsp, sign_),
  };
  WelfareGetSignRewardRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      WelfareGetSignRewardRsp_descriptor_,
      WelfareGetSignRewardRsp::default_instance_,
      WelfareGetSignRewardRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WelfareGetSignRewardRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WelfareGetSignRewardRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(WelfareGetSignRewardRsp));
  WelfareGetAccureRewardReq_descriptor_ = file->message_type(4);
  static const int WelfareGetAccureRewardReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WelfareGetAccureRewardReq, id_),
  };
  WelfareGetAccureRewardReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      WelfareGetAccureRewardReq_descriptor_,
      WelfareGetAccureRewardReq::default_instance_,
      WelfareGetAccureRewardReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WelfareGetAccureRewardReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WelfareGetAccureRewardReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(WelfareGetAccureRewardReq));
  WelfareGetAccureRewardRsp_descriptor_ = file->message_type(5);
  static const int WelfareGetAccureRewardRsp_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WelfareGetAccureRewardRsp, ret_code_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WelfareGetAccureRewardRsp, accure_),
  };
  WelfareGetAccureRewardRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      WelfareGetAccureRewardRsp_descriptor_,
      WelfareGetAccureRewardRsp::default_instance_,
      WelfareGetAccureRewardRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WelfareGetAccureRewardRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WelfareGetAccureRewardRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(WelfareGetAccureRewardRsp));
  WelfareGetLvRewardDataReq_descriptor_ = file->message_type(6);
  static const int WelfareGetLvRewardDataReq_offsets_[1] = {
  };
  WelfareGetLvRewardDataReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      WelfareGetLvRewardDataReq_descriptor_,
      WelfareGetLvRewardDataReq::default_instance_,
      WelfareGetLvRewardDataReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WelfareGetLvRewardDataReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WelfareGetLvRewardDataReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(WelfareGetLvRewardDataReq));
  WelfareGetLvRewardDataRsp_descriptor_ = file->message_type(7);
  static const int WelfareGetLvRewardDataRsp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WelfareGetLvRewardDataRsp, lv_),
  };
  WelfareGetLvRewardDataRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      WelfareGetLvRewardDataRsp_descriptor_,
      WelfareGetLvRewardDataRsp::default_instance_,
      WelfareGetLvRewardDataRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WelfareGetLvRewardDataRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WelfareGetLvRewardDataRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(WelfareGetLvRewardDataRsp));
  WelfareGetLvRewardRewardReq_descriptor_ = file->message_type(8);
  static const int WelfareGetLvRewardRewardReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WelfareGetLvRewardRewardReq, id_),
  };
  WelfareGetLvRewardRewardReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      WelfareGetLvRewardRewardReq_descriptor_,
      WelfareGetLvRewardRewardReq::default_instance_,
      WelfareGetLvRewardRewardReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WelfareGetLvRewardRewardReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WelfareGetLvRewardRewardReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(WelfareGetLvRewardRewardReq));
  WelfareGetLvRewardRewardRsp_descriptor_ = file->message_type(9);
  static const int WelfareGetLvRewardRewardRsp_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WelfareGetLvRewardRewardRsp, ret_code_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WelfareGetLvRewardRewardRsp, lv_),
  };
  WelfareGetLvRewardRewardRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      WelfareGetLvRewardRewardRsp_descriptor_,
      WelfareGetLvRewardRewardRsp::default_instance_,
      WelfareGetLvRewardRewardRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WelfareGetLvRewardRewardRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WelfareGetLvRewardRewardRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(WelfareGetLvRewardRewardRsp));
  WelfareGetOnlineRewardDataReq_descriptor_ = file->message_type(10);
  static const int WelfareGetOnlineRewardDataReq_offsets_[1] = {
  };
  WelfareGetOnlineRewardDataReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      WelfareGetOnlineRewardDataReq_descriptor_,
      WelfareGetOnlineRewardDataReq::default_instance_,
      WelfareGetOnlineRewardDataReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WelfareGetOnlineRewardDataReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WelfareGetOnlineRewardDataReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(WelfareGetOnlineRewardDataReq));
  WelfareGetOnlineRewardDataRsp_descriptor_ = file->message_type(11);
  static const int WelfareGetOnlineRewardDataRsp_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WelfareGetOnlineRewardDataRsp, online_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WelfareGetOnlineRewardDataRsp, online_time_),
  };
  WelfareGetOnlineRewardDataRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      WelfareGetOnlineRewardDataRsp_descriptor_,
      WelfareGetOnlineRewardDataRsp::default_instance_,
      WelfareGetOnlineRewardDataRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WelfareGetOnlineRewardDataRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WelfareGetOnlineRewardDataRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(WelfareGetOnlineRewardDataRsp));
  WelfareGetOnlineRewardRewardReq_descriptor_ = file->message_type(12);
  static const int WelfareGetOnlineRewardRewardReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WelfareGetOnlineRewardRewardReq, id_),
  };
  WelfareGetOnlineRewardRewardReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      WelfareGetOnlineRewardRewardReq_descriptor_,
      WelfareGetOnlineRewardRewardReq::default_instance_,
      WelfareGetOnlineRewardRewardReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WelfareGetOnlineRewardRewardReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WelfareGetOnlineRewardRewardReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(WelfareGetOnlineRewardRewardReq));
  WelfareGetOnlineRewardRewardRsp_descriptor_ = file->message_type(13);
  static const int WelfareGetOnlineRewardRewardRsp_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WelfareGetOnlineRewardRewardRsp, ret_code_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WelfareGetOnlineRewardRewardRsp, online_),
  };
  WelfareGetOnlineRewardRewardRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      WelfareGetOnlineRewardRewardRsp_descriptor_,
      WelfareGetOnlineRewardRewardRsp::default_instance_,
      WelfareGetOnlineRewardRewardRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WelfareGetOnlineRewardRewardRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WelfareGetOnlineRewardRewardRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(WelfareGetOnlineRewardRewardRsp));
  WelfareGetNotifyRewardDataReq_descriptor_ = file->message_type(14);
  static const int WelfareGetNotifyRewardDataReq_offsets_[1] = {
  };
  WelfareGetNotifyRewardDataReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      WelfareGetNotifyRewardDataReq_descriptor_,
      WelfareGetNotifyRewardDataReq::default_instance_,
      WelfareGetNotifyRewardDataReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WelfareGetNotifyRewardDataReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WelfareGetNotifyRewardDataReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(WelfareGetNotifyRewardDataReq));
  WelfareGetNotifyRewardDataRsp_descriptor_ = file->message_type(15);
  static const int WelfareGetNotifyRewardDataRsp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WelfareGetNotifyRewardDataRsp, notify_),
  };
  WelfareGetNotifyRewardDataRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      WelfareGetNotifyRewardDataRsp_descriptor_,
      WelfareGetNotifyRewardDataRsp::default_instance_,
      WelfareGetNotifyRewardDataRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WelfareGetNotifyRewardDataRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WelfareGetNotifyRewardDataRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(WelfareGetNotifyRewardDataRsp));
  WelfareGetNotifyRewardRewardReq_descriptor_ = file->message_type(16);
  static const int WelfareGetNotifyRewardRewardReq_offsets_[1] = {
  };
  WelfareGetNotifyRewardRewardReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      WelfareGetNotifyRewardRewardReq_descriptor_,
      WelfareGetNotifyRewardRewardReq::default_instance_,
      WelfareGetNotifyRewardRewardReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WelfareGetNotifyRewardRewardReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WelfareGetNotifyRewardRewardReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(WelfareGetNotifyRewardRewardReq));
  WelfareGetNotifyRewardRewardRsp_descriptor_ = file->message_type(17);
  static const int WelfareGetNotifyRewardRewardRsp_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WelfareGetNotifyRewardRewardRsp, ret_code_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WelfareGetNotifyRewardRewardRsp, notify_),
  };
  WelfareGetNotifyRewardRewardRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      WelfareGetNotifyRewardRewardRsp_descriptor_,
      WelfareGetNotifyRewardRewardRsp::default_instance_,
      WelfareGetNotifyRewardRewardRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WelfareGetNotifyRewardRewardRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WelfareGetNotifyRewardRewardRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(WelfareGetNotifyRewardRewardRsp));
  WelfareGetFraudRewardDataReq_descriptor_ = file->message_type(18);
  static const int WelfareGetFraudRewardDataReq_offsets_[1] = {
  };
  WelfareGetFraudRewardDataReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      WelfareGetFraudRewardDataReq_descriptor_,
      WelfareGetFraudRewardDataReq::default_instance_,
      WelfareGetFraudRewardDataReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WelfareGetFraudRewardDataReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WelfareGetFraudRewardDataReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(WelfareGetFraudRewardDataReq));
  WelfareGetFraudRewardDataRsp_descriptor_ = file->message_type(19);
  static const int WelfareGetFraudRewardDataRsp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WelfareGetFraudRewardDataRsp, fraud_),
  };
  WelfareGetFraudRewardDataRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      WelfareGetFraudRewardDataRsp_descriptor_,
      WelfareGetFraudRewardDataRsp::default_instance_,
      WelfareGetFraudRewardDataRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WelfareGetFraudRewardDataRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WelfareGetFraudRewardDataRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(WelfareGetFraudRewardDataRsp));
  WelfareGetFraudRewardRewardReq_descriptor_ = file->message_type(20);
  static const int WelfareGetFraudRewardRewardReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WelfareGetFraudRewardRewardReq, id_),
  };
  WelfareGetFraudRewardRewardReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      WelfareGetFraudRewardRewardReq_descriptor_,
      WelfareGetFraudRewardRewardReq::default_instance_,
      WelfareGetFraudRewardRewardReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WelfareGetFraudRewardRewardReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WelfareGetFraudRewardRewardReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(WelfareGetFraudRewardRewardReq));
  WelfareGetFraudRewardRewardRsp_descriptor_ = file->message_type(21);
  static const int WelfareGetFraudRewardRewardRsp_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WelfareGetFraudRewardRewardRsp, ret_code_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WelfareGetFraudRewardRewardRsp, fraud_),
  };
  WelfareGetFraudRewardRewardRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      WelfareGetFraudRewardRewardRsp_descriptor_,
      WelfareGetFraudRewardRewardRsp::default_instance_,
      WelfareGetFraudRewardRewardRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WelfareGetFraudRewardRewardRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WelfareGetFraudRewardRewardRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(WelfareGetFraudRewardRewardRsp));
  WelfareGetWeekEndRewardDataReq_descriptor_ = file->message_type(22);
  static const int WelfareGetWeekEndRewardDataReq_offsets_[1] = {
  };
  WelfareGetWeekEndRewardDataReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      WelfareGetWeekEndRewardDataReq_descriptor_,
      WelfareGetWeekEndRewardDataReq::default_instance_,
      WelfareGetWeekEndRewardDataReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WelfareGetWeekEndRewardDataReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WelfareGetWeekEndRewardDataReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(WelfareGetWeekEndRewardDataReq));
  WelfareGetWeekEndRewardDataRsp_descriptor_ = file->message_type(23);
  static const int WelfareGetWeekEndRewardDataRsp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WelfareGetWeekEndRewardDataRsp, data_),
  };
  WelfareGetWeekEndRewardDataRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      WelfareGetWeekEndRewardDataRsp_descriptor_,
      WelfareGetWeekEndRewardDataRsp::default_instance_,
      WelfareGetWeekEndRewardDataRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WelfareGetWeekEndRewardDataRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WelfareGetWeekEndRewardDataRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(WelfareGetWeekEndRewardDataRsp));
  WelfareGetWeekEndRewardRewardReq_descriptor_ = file->message_type(24);
  static const int WelfareGetWeekEndRewardRewardReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WelfareGetWeekEndRewardRewardReq, id_),
  };
  WelfareGetWeekEndRewardRewardReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      WelfareGetWeekEndRewardRewardReq_descriptor_,
      WelfareGetWeekEndRewardRewardReq::default_instance_,
      WelfareGetWeekEndRewardRewardReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WelfareGetWeekEndRewardRewardReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WelfareGetWeekEndRewardRewardReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(WelfareGetWeekEndRewardRewardReq));
  WelfareGetWeekEndRewardRewardRsp_descriptor_ = file->message_type(25);
  static const int WelfareGetWeekEndRewardRewardRsp_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WelfareGetWeekEndRewardRewardRsp, ret_code_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WelfareGetWeekEndRewardRewardRsp, data_),
  };
  WelfareGetWeekEndRewardRewardRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      WelfareGetWeekEndRewardRewardRsp_descriptor_,
      WelfareGetWeekEndRewardRewardRsp::default_instance_,
      WelfareGetWeekEndRewardRewardRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WelfareGetWeekEndRewardRewardRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WelfareGetWeekEndRewardRewardRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(WelfareGetWeekEndRewardRewardRsp));
  WelfareGetQiFuDataReq_descriptor_ = file->message_type(26);
  static const int WelfareGetQiFuDataReq_offsets_[1] = {
  };
  WelfareGetQiFuDataReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      WelfareGetQiFuDataReq_descriptor_,
      WelfareGetQiFuDataReq::default_instance_,
      WelfareGetQiFuDataReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WelfareGetQiFuDataReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WelfareGetQiFuDataReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(WelfareGetQiFuDataReq));
  WelfareGetQiFuDataRsp_descriptor_ = file->message_type(27);
  static const int WelfareGetQiFuDataRsp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WelfareGetQiFuDataRsp, data_),
  };
  WelfareGetQiFuDataRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      WelfareGetQiFuDataRsp_descriptor_,
      WelfareGetQiFuDataRsp::default_instance_,
      WelfareGetQiFuDataRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WelfareGetQiFuDataRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WelfareGetQiFuDataRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(WelfareGetQiFuDataRsp));
  WelfareQiFuReq_descriptor_ = file->message_type(28);
  static const int WelfareQiFuReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WelfareQiFuReq, type_),
  };
  WelfareQiFuReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      WelfareQiFuReq_descriptor_,
      WelfareQiFuReq::default_instance_,
      WelfareQiFuReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WelfareQiFuReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WelfareQiFuReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(WelfareQiFuReq));
  WelfareQiFuRsp_descriptor_ = file->message_type(29);
  static const int WelfareQiFuRsp_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WelfareQiFuRsp, ret_code_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WelfareQiFuRsp, data_),
  };
  WelfareQiFuRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      WelfareQiFuRsp_descriptor_,
      WelfareQiFuRsp::default_instance_,
      WelfareQiFuRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WelfareQiFuRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WelfareQiFuRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(WelfareQiFuRsp));
  WelfareSaveMoneyReq_descriptor_ = file->message_type(30);
  static const int WelfareSaveMoneyReq_offsets_[1] = {
  };
  WelfareSaveMoneyReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      WelfareSaveMoneyReq_descriptor_,
      WelfareSaveMoneyReq::default_instance_,
      WelfareSaveMoneyReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WelfareSaveMoneyReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WelfareSaveMoneyReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(WelfareSaveMoneyReq));
  WelfareSaveMoneyRsp_descriptor_ = file->message_type(31);
  static const int WelfareSaveMoneyRsp_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WelfareSaveMoneyRsp, ret_code_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WelfareSaveMoneyRsp, data_),
  };
  WelfareSaveMoneyRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      WelfareSaveMoneyRsp_descriptor_,
      WelfareSaveMoneyRsp::default_instance_,
      WelfareSaveMoneyRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WelfareSaveMoneyRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WelfareSaveMoneyRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(WelfareSaveMoneyRsp));
  WelfareGetMoneyReq_descriptor_ = file->message_type(32);
  static const int WelfareGetMoneyReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WelfareGetMoneyReq, type_),
  };
  WelfareGetMoneyReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      WelfareGetMoneyReq_descriptor_,
      WelfareGetMoneyReq::default_instance_,
      WelfareGetMoneyReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WelfareGetMoneyReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WelfareGetMoneyReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(WelfareGetMoneyReq));
  WelfareGetMoneyRsp_descriptor_ = file->message_type(33);
  static const int WelfareGetMoneyRsp_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WelfareGetMoneyRsp, ret_code_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WelfareGetMoneyRsp, data_),
  };
  WelfareGetMoneyRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      WelfareGetMoneyRsp_descriptor_,
      WelfareGetMoneyRsp::default_instance_,
      WelfareGetMoneyRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WelfareGetMoneyRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WelfareGetMoneyRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(WelfareGetMoneyRsp));
  WelfareGetLogonDataReq_descriptor_ = file->message_type(34);
  static const int WelfareGetLogonDataReq_offsets_[1] = {
  };
  WelfareGetLogonDataReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      WelfareGetLogonDataReq_descriptor_,
      WelfareGetLogonDataReq::default_instance_,
      WelfareGetLogonDataReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WelfareGetLogonDataReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WelfareGetLogonDataReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(WelfareGetLogonDataReq));
  WelfareGetLogonDataRsp_descriptor_ = file->message_type(35);
  static const int WelfareGetLogonDataRsp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WelfareGetLogonDataRsp, logon_),
  };
  WelfareGetLogonDataRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      WelfareGetLogonDataRsp_descriptor_,
      WelfareGetLogonDataRsp::default_instance_,
      WelfareGetLogonDataRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WelfareGetLogonDataRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WelfareGetLogonDataRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(WelfareGetLogonDataRsp));
  WelfareGetLogonRewardReq_descriptor_ = file->message_type(36);
  static const int WelfareGetLogonRewardReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WelfareGetLogonRewardReq, id_),
  };
  WelfareGetLogonRewardReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      WelfareGetLogonRewardReq_descriptor_,
      WelfareGetLogonRewardReq::default_instance_,
      WelfareGetLogonRewardReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WelfareGetLogonRewardReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WelfareGetLogonRewardReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(WelfareGetLogonRewardReq));
  WelfareGetLogonRewardRsp_descriptor_ = file->message_type(37);
  static const int WelfareGetLogonRewardRsp_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WelfareGetLogonRewardRsp, ret_code_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WelfareGetLogonRewardRsp, data_),
  };
  WelfareGetLogonRewardRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      WelfareGetLogonRewardRsp_descriptor_,
      WelfareGetLogonRewardRsp::default_instance_,
      WelfareGetLogonRewardRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WelfareGetLogonRewardRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WelfareGetLogonRewardRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(WelfareGetLogonRewardRsp));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_welfare_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    WelfareGetSignDataReq_descriptor_, &WelfareGetSignDataReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    WelfareGetSignDataRsp_descriptor_, &WelfareGetSignDataRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    WelfareGetSignRewardReq_descriptor_, &WelfareGetSignRewardReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    WelfareGetSignRewardRsp_descriptor_, &WelfareGetSignRewardRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    WelfareGetAccureRewardReq_descriptor_, &WelfareGetAccureRewardReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    WelfareGetAccureRewardRsp_descriptor_, &WelfareGetAccureRewardRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    WelfareGetLvRewardDataReq_descriptor_, &WelfareGetLvRewardDataReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    WelfareGetLvRewardDataRsp_descriptor_, &WelfareGetLvRewardDataRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    WelfareGetLvRewardRewardReq_descriptor_, &WelfareGetLvRewardRewardReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    WelfareGetLvRewardRewardRsp_descriptor_, &WelfareGetLvRewardRewardRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    WelfareGetOnlineRewardDataReq_descriptor_, &WelfareGetOnlineRewardDataReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    WelfareGetOnlineRewardDataRsp_descriptor_, &WelfareGetOnlineRewardDataRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    WelfareGetOnlineRewardRewardReq_descriptor_, &WelfareGetOnlineRewardRewardReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    WelfareGetOnlineRewardRewardRsp_descriptor_, &WelfareGetOnlineRewardRewardRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    WelfareGetNotifyRewardDataReq_descriptor_, &WelfareGetNotifyRewardDataReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    WelfareGetNotifyRewardDataRsp_descriptor_, &WelfareGetNotifyRewardDataRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    WelfareGetNotifyRewardRewardReq_descriptor_, &WelfareGetNotifyRewardRewardReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    WelfareGetNotifyRewardRewardRsp_descriptor_, &WelfareGetNotifyRewardRewardRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    WelfareGetFraudRewardDataReq_descriptor_, &WelfareGetFraudRewardDataReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    WelfareGetFraudRewardDataRsp_descriptor_, &WelfareGetFraudRewardDataRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    WelfareGetFraudRewardRewardReq_descriptor_, &WelfareGetFraudRewardRewardReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    WelfareGetFraudRewardRewardRsp_descriptor_, &WelfareGetFraudRewardRewardRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    WelfareGetWeekEndRewardDataReq_descriptor_, &WelfareGetWeekEndRewardDataReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    WelfareGetWeekEndRewardDataRsp_descriptor_, &WelfareGetWeekEndRewardDataRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    WelfareGetWeekEndRewardRewardReq_descriptor_, &WelfareGetWeekEndRewardRewardReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    WelfareGetWeekEndRewardRewardRsp_descriptor_, &WelfareGetWeekEndRewardRewardRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    WelfareGetQiFuDataReq_descriptor_, &WelfareGetQiFuDataReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    WelfareGetQiFuDataRsp_descriptor_, &WelfareGetQiFuDataRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    WelfareQiFuReq_descriptor_, &WelfareQiFuReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    WelfareQiFuRsp_descriptor_, &WelfareQiFuRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    WelfareSaveMoneyReq_descriptor_, &WelfareSaveMoneyReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    WelfareSaveMoneyRsp_descriptor_, &WelfareSaveMoneyRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    WelfareGetMoneyReq_descriptor_, &WelfareGetMoneyReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    WelfareGetMoneyRsp_descriptor_, &WelfareGetMoneyRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    WelfareGetLogonDataReq_descriptor_, &WelfareGetLogonDataReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    WelfareGetLogonDataRsp_descriptor_, &WelfareGetLogonDataRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    WelfareGetLogonRewardReq_descriptor_, &WelfareGetLogonRewardReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    WelfareGetLogonRewardRsp_descriptor_, &WelfareGetLogonRewardRsp::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_welfare_2eproto() {
  delete WelfareGetSignDataReq::default_instance_;
  delete WelfareGetSignDataReq_reflection_;
  delete WelfareGetSignDataRsp::default_instance_;
  delete WelfareGetSignDataRsp_reflection_;
  delete WelfareGetSignRewardReq::default_instance_;
  delete WelfareGetSignRewardReq_reflection_;
  delete WelfareGetSignRewardRsp::default_instance_;
  delete WelfareGetSignRewardRsp_reflection_;
  delete WelfareGetAccureRewardReq::default_instance_;
  delete WelfareGetAccureRewardReq_reflection_;
  delete WelfareGetAccureRewardRsp::default_instance_;
  delete WelfareGetAccureRewardRsp_reflection_;
  delete WelfareGetLvRewardDataReq::default_instance_;
  delete WelfareGetLvRewardDataReq_reflection_;
  delete WelfareGetLvRewardDataRsp::default_instance_;
  delete WelfareGetLvRewardDataRsp_reflection_;
  delete WelfareGetLvRewardRewardReq::default_instance_;
  delete WelfareGetLvRewardRewardReq_reflection_;
  delete WelfareGetLvRewardRewardRsp::default_instance_;
  delete WelfareGetLvRewardRewardRsp_reflection_;
  delete WelfareGetOnlineRewardDataReq::default_instance_;
  delete WelfareGetOnlineRewardDataReq_reflection_;
  delete WelfareGetOnlineRewardDataRsp::default_instance_;
  delete WelfareGetOnlineRewardDataRsp_reflection_;
  delete WelfareGetOnlineRewardRewardReq::default_instance_;
  delete WelfareGetOnlineRewardRewardReq_reflection_;
  delete WelfareGetOnlineRewardRewardRsp::default_instance_;
  delete WelfareGetOnlineRewardRewardRsp_reflection_;
  delete WelfareGetNotifyRewardDataReq::default_instance_;
  delete WelfareGetNotifyRewardDataReq_reflection_;
  delete WelfareGetNotifyRewardDataRsp::default_instance_;
  delete WelfareGetNotifyRewardDataRsp_reflection_;
  delete WelfareGetNotifyRewardRewardReq::default_instance_;
  delete WelfareGetNotifyRewardRewardReq_reflection_;
  delete WelfareGetNotifyRewardRewardRsp::default_instance_;
  delete WelfareGetNotifyRewardRewardRsp_reflection_;
  delete WelfareGetFraudRewardDataReq::default_instance_;
  delete WelfareGetFraudRewardDataReq_reflection_;
  delete WelfareGetFraudRewardDataRsp::default_instance_;
  delete WelfareGetFraudRewardDataRsp_reflection_;
  delete WelfareGetFraudRewardRewardReq::default_instance_;
  delete WelfareGetFraudRewardRewardReq_reflection_;
  delete WelfareGetFraudRewardRewardRsp::default_instance_;
  delete WelfareGetFraudRewardRewardRsp_reflection_;
  delete WelfareGetWeekEndRewardDataReq::default_instance_;
  delete WelfareGetWeekEndRewardDataReq_reflection_;
  delete WelfareGetWeekEndRewardDataRsp::default_instance_;
  delete WelfareGetWeekEndRewardDataRsp_reflection_;
  delete WelfareGetWeekEndRewardRewardReq::default_instance_;
  delete WelfareGetWeekEndRewardRewardReq_reflection_;
  delete WelfareGetWeekEndRewardRewardRsp::default_instance_;
  delete WelfareGetWeekEndRewardRewardRsp_reflection_;
  delete WelfareGetQiFuDataReq::default_instance_;
  delete WelfareGetQiFuDataReq_reflection_;
  delete WelfareGetQiFuDataRsp::default_instance_;
  delete WelfareGetQiFuDataRsp_reflection_;
  delete WelfareQiFuReq::default_instance_;
  delete WelfareQiFuReq_reflection_;
  delete WelfareQiFuRsp::default_instance_;
  delete WelfareQiFuRsp_reflection_;
  delete WelfareSaveMoneyReq::default_instance_;
  delete WelfareSaveMoneyReq_reflection_;
  delete WelfareSaveMoneyRsp::default_instance_;
  delete WelfareSaveMoneyRsp_reflection_;
  delete WelfareGetMoneyReq::default_instance_;
  delete WelfareGetMoneyReq_reflection_;
  delete WelfareGetMoneyRsp::default_instance_;
  delete WelfareGetMoneyRsp_reflection_;
  delete WelfareGetLogonDataReq::default_instance_;
  delete WelfareGetLogonDataReq_reflection_;
  delete WelfareGetLogonDataRsp::default_instance_;
  delete WelfareGetLogonDataRsp_reflection_;
  delete WelfareGetLogonRewardReq::default_instance_;
  delete WelfareGetLogonRewardReq_reflection_;
  delete WelfareGetLogonRewardRsp::default_instance_;
  delete WelfareGetLogonRewardRsp_reflection_;
}

void protobuf_AddDesc_welfare_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::proto_ff::protobuf_AddDesc_Com_2eproto();
  ::proto_ff::protobuf_AddDesc_ComDefine_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\rwelfare.proto\022\010proto_ff\032\tCom.proto\032\017Co"
    "mDefine.proto\"\027\n\025WelfareGetSignDataReq\"w"
    "\n\025WelfareGetSignDataRsp\022)\n\004sign\030\001 \003(\0132\033."
    "proto_ff.WelfareSignPBData\0223\n\006accure\030\002 \003"
    "(\0132#.proto_ff.WelfareAccrueRewardPBData\""
    "%\n\027WelfareGetSignRewardReq\022\n\n\002id\030\001 \001(\005\"V"
    "\n\027WelfareGetSignRewardRsp\022\020\n\010ret_code\030\001 "
    "\001(\005\022)\n\004sign\030\002 \001(\0132\033.proto_ff.WelfareSign"
    "PBData\"\'\n\031WelfareGetAccureRewardReq\022\n\n\002i"
    "d\030\001 \001(\005\"b\n\031WelfareGetAccureRewardRsp\022\020\n\010"
    "ret_code\030\001 \001(\005\0223\n\006accure\030\002 \001(\0132#.proto_f"
    "f.WelfareAccrueRewardPBData\"\033\n\031WelfareGe"
    "tLvRewardDataReq\"H\n\031WelfareGetLvRewardDa"
    "taRsp\022+\n\002lv\030\001 \003(\0132\037.proto_ff.WelfareLvRe"
    "wardPBData\")\n\033WelfareGetLvRewardRewardRe"
    "q\022\n\n\002id\030\001 \001(\005\"\\\n\033WelfareGetLvRewardRewar"
    "dRsp\022\020\n\010ret_code\030\001 \001(\005\022+\n\002lv\030\002 \001(\0132\037.pro"
    "to_ff.WelfareLvRewardPBData\"\037\n\035WelfareGe"
    "tOnlineRewardDataReq\"i\n\035WelfareGetOnline"
    "RewardDataRsp\0223\n\006online\030\001 \003(\0132#.proto_ff"
    ".WelfareOnlineRewardPBData\022\023\n\013online_tim"
    "e\030\002 \001(\005\"-\n\037WelfareGetOnlineRewardRewardR"
    "eq\022\n\n\002id\030\001 \001(\005\"h\n\037WelfareGetOnlineReward"
    "RewardRsp\022\020\n\010ret_code\030\001 \001(\005\0223\n\006online\030\002 "
    "\001(\0132#.proto_ff.WelfareOnlineRewardPBData"
    "\"\037\n\035WelfareGetNotifyRewardDataReq\"T\n\035Wel"
    "fareGetNotifyRewardDataRsp\0223\n\006notify\030\001 \001"
    "(\0132#.proto_ff.WelfareNotifyRewardPBData\""
    "!\n\037WelfareGetNotifyRewardRewardReq\"h\n\037We"
    "lfareGetNotifyRewardRewardRsp\022\020\n\010ret_cod"
    "e\030\001 \001(\005\0223\n\006notify\030\002 \001(\0132#.proto_ff.Welfa"
    "reNotifyRewardPBData\"\036\n\034WelfareGetFraudR"
    "ewardDataReq\"Q\n\034WelfareGetFraudRewardDat"
    "aRsp\0221\n\005fraud\030\001 \001(\0132\".proto_ff.WelfareFr"
    "audRewardPBData\",\n\036WelfareGetFraudReward"
    "RewardReq\022\n\n\002id\030\001 \003(\005\"e\n\036WelfareGetFraud"
    "RewardRewardRsp\022\020\n\010ret_code\030\001 \001(\005\0221\n\005fra"
    "ud\030\002 \001(\0132\".proto_ff.WelfareFraudRewardPB"
    "Data\" \n\036WelfareGetWeekEndRewardDataReq\"T"
    "\n\036WelfareGetWeekEndRewardDataRsp\0222\n\004data"
    "\030\001 \003(\0132$.proto_ff.WelfareWeekEndRewardPB"
    "Data\".\n WelfareGetWeekEndRewardRewardReq"
    "\022\n\n\002id\030\001 \001(\005\"h\n WelfareGetWeekEndRewardR"
    "ewardRsp\022\020\n\010ret_code\030\001 \001(\005\0222\n\004data\030\002 \001(\013"
    "2$.proto_ff.WelfareWeekEndRewardPBData\"\027"
    "\n\025WelfareGetQiFuDataReq\"@\n\025WelfareGetQiF"
    "uDataRsp\022\'\n\004data\030\001 \001(\0132\031.proto_ff.Welfar"
    "eQiFuData\"\036\n\016WelfareQiFuReq\022\014\n\004type\030\001 \001("
    "\005\"K\n\016WelfareQiFuRsp\022\020\n\010ret_code\030\001 \001(\005\022\'\n"
    "\004data\030\002 \001(\0132\031.proto_ff.WelfareQiFuData\"\025"
    "\n\023WelfareSaveMoneyReq\"P\n\023WelfareSaveMone"
    "yRsp\022\020\n\010ret_code\030\001 \001(\005\022\'\n\004data\030\002 \001(\0132\031.p"
    "roto_ff.WelfareQiFuData\"\"\n\022WelfareGetMon"
    "eyReq\022\014\n\004type\030\001 \001(\005\"O\n\022WelfareGetMoneyRs"
    "p\022\020\n\010ret_code\030\001 \001(\005\022\'\n\004data\030\002 \001(\0132\031.prot"
    "o_ff.WelfareQiFuData\"\030\n\026WelfareGetLogonD"
    "ataReq\"C\n\026WelfareGetLogonDataRsp\022)\n\005logo"
    "n\030\r \003(\0132\032.proto_ff.WelfareLogonData\"&\n\030W"
    "elfareGetLogonRewardReq\022\n\n\002id\030\001 \001(\003\"V\n\030W"
    "elfareGetLogonRewardRsp\022\020\n\010ret_code\030\001 \001("
    "\005\022(\n\004data\030\002 \001(\0132\032.proto_ff.WelfareLogonD"
    "ata", 2443);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "welfare.proto", &protobuf_RegisterTypes);
  WelfareGetSignDataReq::default_instance_ = new WelfareGetSignDataReq();
  WelfareGetSignDataRsp::default_instance_ = new WelfareGetSignDataRsp();
  WelfareGetSignRewardReq::default_instance_ = new WelfareGetSignRewardReq();
  WelfareGetSignRewardRsp::default_instance_ = new WelfareGetSignRewardRsp();
  WelfareGetAccureRewardReq::default_instance_ = new WelfareGetAccureRewardReq();
  WelfareGetAccureRewardRsp::default_instance_ = new WelfareGetAccureRewardRsp();
  WelfareGetLvRewardDataReq::default_instance_ = new WelfareGetLvRewardDataReq();
  WelfareGetLvRewardDataRsp::default_instance_ = new WelfareGetLvRewardDataRsp();
  WelfareGetLvRewardRewardReq::default_instance_ = new WelfareGetLvRewardRewardReq();
  WelfareGetLvRewardRewardRsp::default_instance_ = new WelfareGetLvRewardRewardRsp();
  WelfareGetOnlineRewardDataReq::default_instance_ = new WelfareGetOnlineRewardDataReq();
  WelfareGetOnlineRewardDataRsp::default_instance_ = new WelfareGetOnlineRewardDataRsp();
  WelfareGetOnlineRewardRewardReq::default_instance_ = new WelfareGetOnlineRewardRewardReq();
  WelfareGetOnlineRewardRewardRsp::default_instance_ = new WelfareGetOnlineRewardRewardRsp();
  WelfareGetNotifyRewardDataReq::default_instance_ = new WelfareGetNotifyRewardDataReq();
  WelfareGetNotifyRewardDataRsp::default_instance_ = new WelfareGetNotifyRewardDataRsp();
  WelfareGetNotifyRewardRewardReq::default_instance_ = new WelfareGetNotifyRewardRewardReq();
  WelfareGetNotifyRewardRewardRsp::default_instance_ = new WelfareGetNotifyRewardRewardRsp();
  WelfareGetFraudRewardDataReq::default_instance_ = new WelfareGetFraudRewardDataReq();
  WelfareGetFraudRewardDataRsp::default_instance_ = new WelfareGetFraudRewardDataRsp();
  WelfareGetFraudRewardRewardReq::default_instance_ = new WelfareGetFraudRewardRewardReq();
  WelfareGetFraudRewardRewardRsp::default_instance_ = new WelfareGetFraudRewardRewardRsp();
  WelfareGetWeekEndRewardDataReq::default_instance_ = new WelfareGetWeekEndRewardDataReq();
  WelfareGetWeekEndRewardDataRsp::default_instance_ = new WelfareGetWeekEndRewardDataRsp();
  WelfareGetWeekEndRewardRewardReq::default_instance_ = new WelfareGetWeekEndRewardRewardReq();
  WelfareGetWeekEndRewardRewardRsp::default_instance_ = new WelfareGetWeekEndRewardRewardRsp();
  WelfareGetQiFuDataReq::default_instance_ = new WelfareGetQiFuDataReq();
  WelfareGetQiFuDataRsp::default_instance_ = new WelfareGetQiFuDataRsp();
  WelfareQiFuReq::default_instance_ = new WelfareQiFuReq();
  WelfareQiFuRsp::default_instance_ = new WelfareQiFuRsp();
  WelfareSaveMoneyReq::default_instance_ = new WelfareSaveMoneyReq();
  WelfareSaveMoneyRsp::default_instance_ = new WelfareSaveMoneyRsp();
  WelfareGetMoneyReq::default_instance_ = new WelfareGetMoneyReq();
  WelfareGetMoneyRsp::default_instance_ = new WelfareGetMoneyRsp();
  WelfareGetLogonDataReq::default_instance_ = new WelfareGetLogonDataReq();
  WelfareGetLogonDataRsp::default_instance_ = new WelfareGetLogonDataRsp();
  WelfareGetLogonRewardReq::default_instance_ = new WelfareGetLogonRewardReq();
  WelfareGetLogonRewardRsp::default_instance_ = new WelfareGetLogonRewardRsp();
  WelfareGetSignDataReq::default_instance_->InitAsDefaultInstance();
  WelfareGetSignDataRsp::default_instance_->InitAsDefaultInstance();
  WelfareGetSignRewardReq::default_instance_->InitAsDefaultInstance();
  WelfareGetSignRewardRsp::default_instance_->InitAsDefaultInstance();
  WelfareGetAccureRewardReq::default_instance_->InitAsDefaultInstance();
  WelfareGetAccureRewardRsp::default_instance_->InitAsDefaultInstance();
  WelfareGetLvRewardDataReq::default_instance_->InitAsDefaultInstance();
  WelfareGetLvRewardDataRsp::default_instance_->InitAsDefaultInstance();
  WelfareGetLvRewardRewardReq::default_instance_->InitAsDefaultInstance();
  WelfareGetLvRewardRewardRsp::default_instance_->InitAsDefaultInstance();
  WelfareGetOnlineRewardDataReq::default_instance_->InitAsDefaultInstance();
  WelfareGetOnlineRewardDataRsp::default_instance_->InitAsDefaultInstance();
  WelfareGetOnlineRewardRewardReq::default_instance_->InitAsDefaultInstance();
  WelfareGetOnlineRewardRewardRsp::default_instance_->InitAsDefaultInstance();
  WelfareGetNotifyRewardDataReq::default_instance_->InitAsDefaultInstance();
  WelfareGetNotifyRewardDataRsp::default_instance_->InitAsDefaultInstance();
  WelfareGetNotifyRewardRewardReq::default_instance_->InitAsDefaultInstance();
  WelfareGetNotifyRewardRewardRsp::default_instance_->InitAsDefaultInstance();
  WelfareGetFraudRewardDataReq::default_instance_->InitAsDefaultInstance();
  WelfareGetFraudRewardDataRsp::default_instance_->InitAsDefaultInstance();
  WelfareGetFraudRewardRewardReq::default_instance_->InitAsDefaultInstance();
  WelfareGetFraudRewardRewardRsp::default_instance_->InitAsDefaultInstance();
  WelfareGetWeekEndRewardDataReq::default_instance_->InitAsDefaultInstance();
  WelfareGetWeekEndRewardDataRsp::default_instance_->InitAsDefaultInstance();
  WelfareGetWeekEndRewardRewardReq::default_instance_->InitAsDefaultInstance();
  WelfareGetWeekEndRewardRewardRsp::default_instance_->InitAsDefaultInstance();
  WelfareGetQiFuDataReq::default_instance_->InitAsDefaultInstance();
  WelfareGetQiFuDataRsp::default_instance_->InitAsDefaultInstance();
  WelfareQiFuReq::default_instance_->InitAsDefaultInstance();
  WelfareQiFuRsp::default_instance_->InitAsDefaultInstance();
  WelfareSaveMoneyReq::default_instance_->InitAsDefaultInstance();
  WelfareSaveMoneyRsp::default_instance_->InitAsDefaultInstance();
  WelfareGetMoneyReq::default_instance_->InitAsDefaultInstance();
  WelfareGetMoneyRsp::default_instance_->InitAsDefaultInstance();
  WelfareGetLogonDataReq::default_instance_->InitAsDefaultInstance();
  WelfareGetLogonDataRsp::default_instance_->InitAsDefaultInstance();
  WelfareGetLogonRewardReq::default_instance_->InitAsDefaultInstance();
  WelfareGetLogonRewardRsp::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_welfare_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_welfare_2eproto {
  StaticDescriptorInitializer_welfare_2eproto() {
    protobuf_AddDesc_welfare_2eproto();
  }
} static_descriptor_initializer_welfare_2eproto_;

// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

WelfareGetSignDataReq::WelfareGetSignDataReq()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void WelfareGetSignDataReq::InitAsDefaultInstance() {
}

WelfareGetSignDataReq::WelfareGetSignDataReq(const WelfareGetSignDataReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void WelfareGetSignDataReq::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

WelfareGetSignDataReq::~WelfareGetSignDataReq() {
  SharedDtor();
}

void WelfareGetSignDataReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void WelfareGetSignDataReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* WelfareGetSignDataReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return WelfareGetSignDataReq_descriptor_;
}

const WelfareGetSignDataReq& WelfareGetSignDataReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_welfare_2eproto();
  return *default_instance_;
}

WelfareGetSignDataReq* WelfareGetSignDataReq::default_instance_ = NULL;

WelfareGetSignDataReq* WelfareGetSignDataReq::New() const {
  return new WelfareGetSignDataReq;
}

void WelfareGetSignDataReq::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool WelfareGetSignDataReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void WelfareGetSignDataReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* WelfareGetSignDataReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int WelfareGetSignDataReq::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void WelfareGetSignDataReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const WelfareGetSignDataReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const WelfareGetSignDataReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void WelfareGetSignDataReq::MergeFrom(const WelfareGetSignDataReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void WelfareGetSignDataReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WelfareGetSignDataReq::CopyFrom(const WelfareGetSignDataReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WelfareGetSignDataReq::IsInitialized() const {

  return true;
}

void WelfareGetSignDataReq::Swap(WelfareGetSignDataReq* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata WelfareGetSignDataReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = WelfareGetSignDataReq_descriptor_;
  metadata.reflection = WelfareGetSignDataReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int WelfareGetSignDataRsp::kSignFieldNumber;
const int WelfareGetSignDataRsp::kAccureFieldNumber;
#endif  // !_MSC_VER

WelfareGetSignDataRsp::WelfareGetSignDataRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void WelfareGetSignDataRsp::InitAsDefaultInstance() {
}

WelfareGetSignDataRsp::WelfareGetSignDataRsp(const WelfareGetSignDataRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void WelfareGetSignDataRsp::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

WelfareGetSignDataRsp::~WelfareGetSignDataRsp() {
  SharedDtor();
}

void WelfareGetSignDataRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void WelfareGetSignDataRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* WelfareGetSignDataRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return WelfareGetSignDataRsp_descriptor_;
}

const WelfareGetSignDataRsp& WelfareGetSignDataRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_welfare_2eproto();
  return *default_instance_;
}

WelfareGetSignDataRsp* WelfareGetSignDataRsp::default_instance_ = NULL;

WelfareGetSignDataRsp* WelfareGetSignDataRsp::New() const {
  return new WelfareGetSignDataRsp;
}

void WelfareGetSignDataRsp::Clear() {
  sign_.Clear();
  accure_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool WelfareGetSignDataRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.WelfareSignPBData sign = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_sign:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_sign()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_sign;
        if (input->ExpectTag(18)) goto parse_accure;
        break;
      }

      // repeated .proto_ff.WelfareAccrueRewardPBData accure = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_accure:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_accure()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_accure;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void WelfareGetSignDataRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.WelfareSignPBData sign = 1;
  for (int i = 0; i < this->sign_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->sign(i), output);
  }

  // repeated .proto_ff.WelfareAccrueRewardPBData accure = 2;
  for (int i = 0; i < this->accure_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->accure(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* WelfareGetSignDataRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.WelfareSignPBData sign = 1;
  for (int i = 0; i < this->sign_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->sign(i), target);
  }

  // repeated .proto_ff.WelfareAccrueRewardPBData accure = 2;
  for (int i = 0; i < this->accure_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->accure(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int WelfareGetSignDataRsp::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.WelfareSignPBData sign = 1;
  total_size += 1 * this->sign_size();
  for (int i = 0; i < this->sign_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->sign(i));
  }

  // repeated .proto_ff.WelfareAccrueRewardPBData accure = 2;
  total_size += 1 * this->accure_size();
  for (int i = 0; i < this->accure_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->accure(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void WelfareGetSignDataRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const WelfareGetSignDataRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const WelfareGetSignDataRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void WelfareGetSignDataRsp::MergeFrom(const WelfareGetSignDataRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  sign_.MergeFrom(from.sign_);
  accure_.MergeFrom(from.accure_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void WelfareGetSignDataRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WelfareGetSignDataRsp::CopyFrom(const WelfareGetSignDataRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WelfareGetSignDataRsp::IsInitialized() const {

  return true;
}

void WelfareGetSignDataRsp::Swap(WelfareGetSignDataRsp* other) {
  if (other != this) {
    sign_.Swap(&other->sign_);
    accure_.Swap(&other->accure_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata WelfareGetSignDataRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = WelfareGetSignDataRsp_descriptor_;
  metadata.reflection = WelfareGetSignDataRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int WelfareGetSignRewardReq::kIdFieldNumber;
#endif  // !_MSC_VER

WelfareGetSignRewardReq::WelfareGetSignRewardReq()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void WelfareGetSignRewardReq::InitAsDefaultInstance() {
}

WelfareGetSignRewardReq::WelfareGetSignRewardReq(const WelfareGetSignRewardReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void WelfareGetSignRewardReq::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

WelfareGetSignRewardReq::~WelfareGetSignRewardReq() {
  SharedDtor();
}

void WelfareGetSignRewardReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void WelfareGetSignRewardReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* WelfareGetSignRewardReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return WelfareGetSignRewardReq_descriptor_;
}

const WelfareGetSignRewardReq& WelfareGetSignRewardReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_welfare_2eproto();
  return *default_instance_;
}

WelfareGetSignRewardReq* WelfareGetSignRewardReq::default_instance_ = NULL;

WelfareGetSignRewardReq* WelfareGetSignRewardReq::New() const {
  return new WelfareGetSignRewardReq;
}

void WelfareGetSignRewardReq::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool WelfareGetSignRewardReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void WelfareGetSignRewardReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* WelfareGetSignRewardReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int WelfareGetSignRewardReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->id());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void WelfareGetSignRewardReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const WelfareGetSignRewardReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const WelfareGetSignRewardReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void WelfareGetSignRewardReq::MergeFrom(const WelfareGetSignRewardReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void WelfareGetSignRewardReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WelfareGetSignRewardReq::CopyFrom(const WelfareGetSignRewardReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WelfareGetSignRewardReq::IsInitialized() const {

  return true;
}

void WelfareGetSignRewardReq::Swap(WelfareGetSignRewardReq* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata WelfareGetSignRewardReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = WelfareGetSignRewardReq_descriptor_;
  metadata.reflection = WelfareGetSignRewardReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int WelfareGetSignRewardRsp::kRetCodeFieldNumber;
const int WelfareGetSignRewardRsp::kSignFieldNumber;
#endif  // !_MSC_VER

WelfareGetSignRewardRsp::WelfareGetSignRewardRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void WelfareGetSignRewardRsp::InitAsDefaultInstance() {
  sign_ = const_cast< ::proto_ff::WelfareSignPBData*>(&::proto_ff::WelfareSignPBData::default_instance());
}

WelfareGetSignRewardRsp::WelfareGetSignRewardRsp(const WelfareGetSignRewardRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void WelfareGetSignRewardRsp::SharedCtor() {
  _cached_size_ = 0;
  ret_code_ = 0;
  sign_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

WelfareGetSignRewardRsp::~WelfareGetSignRewardRsp() {
  SharedDtor();
}

void WelfareGetSignRewardRsp::SharedDtor() {
  if (this != default_instance_) {
    delete sign_;
  }
}

void WelfareGetSignRewardRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* WelfareGetSignRewardRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return WelfareGetSignRewardRsp_descriptor_;
}

const WelfareGetSignRewardRsp& WelfareGetSignRewardRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_welfare_2eproto();
  return *default_instance_;
}

WelfareGetSignRewardRsp* WelfareGetSignRewardRsp::default_instance_ = NULL;

WelfareGetSignRewardRsp* WelfareGetSignRewardRsp::New() const {
  return new WelfareGetSignRewardRsp;
}

void WelfareGetSignRewardRsp::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    ret_code_ = 0;
    if (has_sign()) {
      if (sign_ != NULL) sign_->::proto_ff::WelfareSignPBData::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool WelfareGetSignRewardRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 ret_code = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ret_code_)));
          set_has_ret_code();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_sign;
        break;
      }

      // optional .proto_ff.WelfareSignPBData sign = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_sign:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_sign()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void WelfareGetSignRewardRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 ret_code = 1;
  if (has_ret_code()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->ret_code(), output);
  }

  // optional .proto_ff.WelfareSignPBData sign = 2;
  if (has_sign()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->sign(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* WelfareGetSignRewardRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 ret_code = 1;
  if (has_ret_code()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->ret_code(), target);
  }

  // optional .proto_ff.WelfareSignPBData sign = 2;
  if (has_sign()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->sign(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int WelfareGetSignRewardRsp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 ret_code = 1;
    if (has_ret_code()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->ret_code());
    }

    // optional .proto_ff.WelfareSignPBData sign = 2;
    if (has_sign()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->sign());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void WelfareGetSignRewardRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const WelfareGetSignRewardRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const WelfareGetSignRewardRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void WelfareGetSignRewardRsp::MergeFrom(const WelfareGetSignRewardRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_ret_code()) {
      set_ret_code(from.ret_code());
    }
    if (from.has_sign()) {
      mutable_sign()->::proto_ff::WelfareSignPBData::MergeFrom(from.sign());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void WelfareGetSignRewardRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WelfareGetSignRewardRsp::CopyFrom(const WelfareGetSignRewardRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WelfareGetSignRewardRsp::IsInitialized() const {

  return true;
}

void WelfareGetSignRewardRsp::Swap(WelfareGetSignRewardRsp* other) {
  if (other != this) {
    std::swap(ret_code_, other->ret_code_);
    std::swap(sign_, other->sign_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata WelfareGetSignRewardRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = WelfareGetSignRewardRsp_descriptor_;
  metadata.reflection = WelfareGetSignRewardRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int WelfareGetAccureRewardReq::kIdFieldNumber;
#endif  // !_MSC_VER

WelfareGetAccureRewardReq::WelfareGetAccureRewardReq()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void WelfareGetAccureRewardReq::InitAsDefaultInstance() {
}

WelfareGetAccureRewardReq::WelfareGetAccureRewardReq(const WelfareGetAccureRewardReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void WelfareGetAccureRewardReq::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

WelfareGetAccureRewardReq::~WelfareGetAccureRewardReq() {
  SharedDtor();
}

void WelfareGetAccureRewardReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void WelfareGetAccureRewardReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* WelfareGetAccureRewardReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return WelfareGetAccureRewardReq_descriptor_;
}

const WelfareGetAccureRewardReq& WelfareGetAccureRewardReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_welfare_2eproto();
  return *default_instance_;
}

WelfareGetAccureRewardReq* WelfareGetAccureRewardReq::default_instance_ = NULL;

WelfareGetAccureRewardReq* WelfareGetAccureRewardReq::New() const {
  return new WelfareGetAccureRewardReq;
}

void WelfareGetAccureRewardReq::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool WelfareGetAccureRewardReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void WelfareGetAccureRewardReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* WelfareGetAccureRewardReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int WelfareGetAccureRewardReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->id());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void WelfareGetAccureRewardReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const WelfareGetAccureRewardReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const WelfareGetAccureRewardReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void WelfareGetAccureRewardReq::MergeFrom(const WelfareGetAccureRewardReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void WelfareGetAccureRewardReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WelfareGetAccureRewardReq::CopyFrom(const WelfareGetAccureRewardReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WelfareGetAccureRewardReq::IsInitialized() const {

  return true;
}

void WelfareGetAccureRewardReq::Swap(WelfareGetAccureRewardReq* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata WelfareGetAccureRewardReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = WelfareGetAccureRewardReq_descriptor_;
  metadata.reflection = WelfareGetAccureRewardReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int WelfareGetAccureRewardRsp::kRetCodeFieldNumber;
const int WelfareGetAccureRewardRsp::kAccureFieldNumber;
#endif  // !_MSC_VER

WelfareGetAccureRewardRsp::WelfareGetAccureRewardRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void WelfareGetAccureRewardRsp::InitAsDefaultInstance() {
  accure_ = const_cast< ::proto_ff::WelfareAccrueRewardPBData*>(&::proto_ff::WelfareAccrueRewardPBData::default_instance());
}

WelfareGetAccureRewardRsp::WelfareGetAccureRewardRsp(const WelfareGetAccureRewardRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void WelfareGetAccureRewardRsp::SharedCtor() {
  _cached_size_ = 0;
  ret_code_ = 0;
  accure_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

WelfareGetAccureRewardRsp::~WelfareGetAccureRewardRsp() {
  SharedDtor();
}

void WelfareGetAccureRewardRsp::SharedDtor() {
  if (this != default_instance_) {
    delete accure_;
  }
}

void WelfareGetAccureRewardRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* WelfareGetAccureRewardRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return WelfareGetAccureRewardRsp_descriptor_;
}

const WelfareGetAccureRewardRsp& WelfareGetAccureRewardRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_welfare_2eproto();
  return *default_instance_;
}

WelfareGetAccureRewardRsp* WelfareGetAccureRewardRsp::default_instance_ = NULL;

WelfareGetAccureRewardRsp* WelfareGetAccureRewardRsp::New() const {
  return new WelfareGetAccureRewardRsp;
}

void WelfareGetAccureRewardRsp::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    ret_code_ = 0;
    if (has_accure()) {
      if (accure_ != NULL) accure_->::proto_ff::WelfareAccrueRewardPBData::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool WelfareGetAccureRewardRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 ret_code = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ret_code_)));
          set_has_ret_code();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_accure;
        break;
      }

      // optional .proto_ff.WelfareAccrueRewardPBData accure = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_accure:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_accure()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void WelfareGetAccureRewardRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 ret_code = 1;
  if (has_ret_code()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->ret_code(), output);
  }

  // optional .proto_ff.WelfareAccrueRewardPBData accure = 2;
  if (has_accure()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->accure(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* WelfareGetAccureRewardRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 ret_code = 1;
  if (has_ret_code()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->ret_code(), target);
  }

  // optional .proto_ff.WelfareAccrueRewardPBData accure = 2;
  if (has_accure()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->accure(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int WelfareGetAccureRewardRsp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 ret_code = 1;
    if (has_ret_code()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->ret_code());
    }

    // optional .proto_ff.WelfareAccrueRewardPBData accure = 2;
    if (has_accure()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->accure());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void WelfareGetAccureRewardRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const WelfareGetAccureRewardRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const WelfareGetAccureRewardRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void WelfareGetAccureRewardRsp::MergeFrom(const WelfareGetAccureRewardRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_ret_code()) {
      set_ret_code(from.ret_code());
    }
    if (from.has_accure()) {
      mutable_accure()->::proto_ff::WelfareAccrueRewardPBData::MergeFrom(from.accure());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void WelfareGetAccureRewardRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WelfareGetAccureRewardRsp::CopyFrom(const WelfareGetAccureRewardRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WelfareGetAccureRewardRsp::IsInitialized() const {

  return true;
}

void WelfareGetAccureRewardRsp::Swap(WelfareGetAccureRewardRsp* other) {
  if (other != this) {
    std::swap(ret_code_, other->ret_code_);
    std::swap(accure_, other->accure_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata WelfareGetAccureRewardRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = WelfareGetAccureRewardRsp_descriptor_;
  metadata.reflection = WelfareGetAccureRewardRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

WelfareGetLvRewardDataReq::WelfareGetLvRewardDataReq()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void WelfareGetLvRewardDataReq::InitAsDefaultInstance() {
}

WelfareGetLvRewardDataReq::WelfareGetLvRewardDataReq(const WelfareGetLvRewardDataReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void WelfareGetLvRewardDataReq::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

WelfareGetLvRewardDataReq::~WelfareGetLvRewardDataReq() {
  SharedDtor();
}

void WelfareGetLvRewardDataReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void WelfareGetLvRewardDataReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* WelfareGetLvRewardDataReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return WelfareGetLvRewardDataReq_descriptor_;
}

const WelfareGetLvRewardDataReq& WelfareGetLvRewardDataReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_welfare_2eproto();
  return *default_instance_;
}

WelfareGetLvRewardDataReq* WelfareGetLvRewardDataReq::default_instance_ = NULL;

WelfareGetLvRewardDataReq* WelfareGetLvRewardDataReq::New() const {
  return new WelfareGetLvRewardDataReq;
}

void WelfareGetLvRewardDataReq::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool WelfareGetLvRewardDataReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void WelfareGetLvRewardDataReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* WelfareGetLvRewardDataReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int WelfareGetLvRewardDataReq::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void WelfareGetLvRewardDataReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const WelfareGetLvRewardDataReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const WelfareGetLvRewardDataReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void WelfareGetLvRewardDataReq::MergeFrom(const WelfareGetLvRewardDataReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void WelfareGetLvRewardDataReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WelfareGetLvRewardDataReq::CopyFrom(const WelfareGetLvRewardDataReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WelfareGetLvRewardDataReq::IsInitialized() const {

  return true;
}

void WelfareGetLvRewardDataReq::Swap(WelfareGetLvRewardDataReq* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata WelfareGetLvRewardDataReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = WelfareGetLvRewardDataReq_descriptor_;
  metadata.reflection = WelfareGetLvRewardDataReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int WelfareGetLvRewardDataRsp::kLvFieldNumber;
#endif  // !_MSC_VER

WelfareGetLvRewardDataRsp::WelfareGetLvRewardDataRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void WelfareGetLvRewardDataRsp::InitAsDefaultInstance() {
}

WelfareGetLvRewardDataRsp::WelfareGetLvRewardDataRsp(const WelfareGetLvRewardDataRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void WelfareGetLvRewardDataRsp::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

WelfareGetLvRewardDataRsp::~WelfareGetLvRewardDataRsp() {
  SharedDtor();
}

void WelfareGetLvRewardDataRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void WelfareGetLvRewardDataRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* WelfareGetLvRewardDataRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return WelfareGetLvRewardDataRsp_descriptor_;
}

const WelfareGetLvRewardDataRsp& WelfareGetLvRewardDataRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_welfare_2eproto();
  return *default_instance_;
}

WelfareGetLvRewardDataRsp* WelfareGetLvRewardDataRsp::default_instance_ = NULL;

WelfareGetLvRewardDataRsp* WelfareGetLvRewardDataRsp::New() const {
  return new WelfareGetLvRewardDataRsp;
}

void WelfareGetLvRewardDataRsp::Clear() {
  lv_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool WelfareGetLvRewardDataRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.WelfareLvRewardPBData lv = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_lv:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_lv()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_lv;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void WelfareGetLvRewardDataRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.WelfareLvRewardPBData lv = 1;
  for (int i = 0; i < this->lv_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->lv(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* WelfareGetLvRewardDataRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.WelfareLvRewardPBData lv = 1;
  for (int i = 0; i < this->lv_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->lv(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int WelfareGetLvRewardDataRsp::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.WelfareLvRewardPBData lv = 1;
  total_size += 1 * this->lv_size();
  for (int i = 0; i < this->lv_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->lv(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void WelfareGetLvRewardDataRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const WelfareGetLvRewardDataRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const WelfareGetLvRewardDataRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void WelfareGetLvRewardDataRsp::MergeFrom(const WelfareGetLvRewardDataRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  lv_.MergeFrom(from.lv_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void WelfareGetLvRewardDataRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WelfareGetLvRewardDataRsp::CopyFrom(const WelfareGetLvRewardDataRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WelfareGetLvRewardDataRsp::IsInitialized() const {

  return true;
}

void WelfareGetLvRewardDataRsp::Swap(WelfareGetLvRewardDataRsp* other) {
  if (other != this) {
    lv_.Swap(&other->lv_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata WelfareGetLvRewardDataRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = WelfareGetLvRewardDataRsp_descriptor_;
  metadata.reflection = WelfareGetLvRewardDataRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int WelfareGetLvRewardRewardReq::kIdFieldNumber;
#endif  // !_MSC_VER

WelfareGetLvRewardRewardReq::WelfareGetLvRewardRewardReq()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void WelfareGetLvRewardRewardReq::InitAsDefaultInstance() {
}

WelfareGetLvRewardRewardReq::WelfareGetLvRewardRewardReq(const WelfareGetLvRewardRewardReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void WelfareGetLvRewardRewardReq::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

WelfareGetLvRewardRewardReq::~WelfareGetLvRewardRewardReq() {
  SharedDtor();
}

void WelfareGetLvRewardRewardReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void WelfareGetLvRewardRewardReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* WelfareGetLvRewardRewardReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return WelfareGetLvRewardRewardReq_descriptor_;
}

const WelfareGetLvRewardRewardReq& WelfareGetLvRewardRewardReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_welfare_2eproto();
  return *default_instance_;
}

WelfareGetLvRewardRewardReq* WelfareGetLvRewardRewardReq::default_instance_ = NULL;

WelfareGetLvRewardRewardReq* WelfareGetLvRewardRewardReq::New() const {
  return new WelfareGetLvRewardRewardReq;
}

void WelfareGetLvRewardRewardReq::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool WelfareGetLvRewardRewardReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void WelfareGetLvRewardRewardReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* WelfareGetLvRewardRewardReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int WelfareGetLvRewardRewardReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->id());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void WelfareGetLvRewardRewardReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const WelfareGetLvRewardRewardReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const WelfareGetLvRewardRewardReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void WelfareGetLvRewardRewardReq::MergeFrom(const WelfareGetLvRewardRewardReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void WelfareGetLvRewardRewardReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WelfareGetLvRewardRewardReq::CopyFrom(const WelfareGetLvRewardRewardReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WelfareGetLvRewardRewardReq::IsInitialized() const {

  return true;
}

void WelfareGetLvRewardRewardReq::Swap(WelfareGetLvRewardRewardReq* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata WelfareGetLvRewardRewardReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = WelfareGetLvRewardRewardReq_descriptor_;
  metadata.reflection = WelfareGetLvRewardRewardReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int WelfareGetLvRewardRewardRsp::kRetCodeFieldNumber;
const int WelfareGetLvRewardRewardRsp::kLvFieldNumber;
#endif  // !_MSC_VER

WelfareGetLvRewardRewardRsp::WelfareGetLvRewardRewardRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void WelfareGetLvRewardRewardRsp::InitAsDefaultInstance() {
  lv_ = const_cast< ::proto_ff::WelfareLvRewardPBData*>(&::proto_ff::WelfareLvRewardPBData::default_instance());
}

WelfareGetLvRewardRewardRsp::WelfareGetLvRewardRewardRsp(const WelfareGetLvRewardRewardRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void WelfareGetLvRewardRewardRsp::SharedCtor() {
  _cached_size_ = 0;
  ret_code_ = 0;
  lv_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

WelfareGetLvRewardRewardRsp::~WelfareGetLvRewardRewardRsp() {
  SharedDtor();
}

void WelfareGetLvRewardRewardRsp::SharedDtor() {
  if (this != default_instance_) {
    delete lv_;
  }
}

void WelfareGetLvRewardRewardRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* WelfareGetLvRewardRewardRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return WelfareGetLvRewardRewardRsp_descriptor_;
}

const WelfareGetLvRewardRewardRsp& WelfareGetLvRewardRewardRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_welfare_2eproto();
  return *default_instance_;
}

WelfareGetLvRewardRewardRsp* WelfareGetLvRewardRewardRsp::default_instance_ = NULL;

WelfareGetLvRewardRewardRsp* WelfareGetLvRewardRewardRsp::New() const {
  return new WelfareGetLvRewardRewardRsp;
}

void WelfareGetLvRewardRewardRsp::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    ret_code_ = 0;
    if (has_lv()) {
      if (lv_ != NULL) lv_->::proto_ff::WelfareLvRewardPBData::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool WelfareGetLvRewardRewardRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 ret_code = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ret_code_)));
          set_has_ret_code();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_lv;
        break;
      }

      // optional .proto_ff.WelfareLvRewardPBData lv = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_lv:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_lv()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void WelfareGetLvRewardRewardRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 ret_code = 1;
  if (has_ret_code()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->ret_code(), output);
  }

  // optional .proto_ff.WelfareLvRewardPBData lv = 2;
  if (has_lv()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->lv(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* WelfareGetLvRewardRewardRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 ret_code = 1;
  if (has_ret_code()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->ret_code(), target);
  }

  // optional .proto_ff.WelfareLvRewardPBData lv = 2;
  if (has_lv()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->lv(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int WelfareGetLvRewardRewardRsp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 ret_code = 1;
    if (has_ret_code()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->ret_code());
    }

    // optional .proto_ff.WelfareLvRewardPBData lv = 2;
    if (has_lv()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->lv());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void WelfareGetLvRewardRewardRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const WelfareGetLvRewardRewardRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const WelfareGetLvRewardRewardRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void WelfareGetLvRewardRewardRsp::MergeFrom(const WelfareGetLvRewardRewardRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_ret_code()) {
      set_ret_code(from.ret_code());
    }
    if (from.has_lv()) {
      mutable_lv()->::proto_ff::WelfareLvRewardPBData::MergeFrom(from.lv());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void WelfareGetLvRewardRewardRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WelfareGetLvRewardRewardRsp::CopyFrom(const WelfareGetLvRewardRewardRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WelfareGetLvRewardRewardRsp::IsInitialized() const {

  return true;
}

void WelfareGetLvRewardRewardRsp::Swap(WelfareGetLvRewardRewardRsp* other) {
  if (other != this) {
    std::swap(ret_code_, other->ret_code_);
    std::swap(lv_, other->lv_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata WelfareGetLvRewardRewardRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = WelfareGetLvRewardRewardRsp_descriptor_;
  metadata.reflection = WelfareGetLvRewardRewardRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

WelfareGetOnlineRewardDataReq::WelfareGetOnlineRewardDataReq()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void WelfareGetOnlineRewardDataReq::InitAsDefaultInstance() {
}

WelfareGetOnlineRewardDataReq::WelfareGetOnlineRewardDataReq(const WelfareGetOnlineRewardDataReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void WelfareGetOnlineRewardDataReq::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

WelfareGetOnlineRewardDataReq::~WelfareGetOnlineRewardDataReq() {
  SharedDtor();
}

void WelfareGetOnlineRewardDataReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void WelfareGetOnlineRewardDataReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* WelfareGetOnlineRewardDataReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return WelfareGetOnlineRewardDataReq_descriptor_;
}

const WelfareGetOnlineRewardDataReq& WelfareGetOnlineRewardDataReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_welfare_2eproto();
  return *default_instance_;
}

WelfareGetOnlineRewardDataReq* WelfareGetOnlineRewardDataReq::default_instance_ = NULL;

WelfareGetOnlineRewardDataReq* WelfareGetOnlineRewardDataReq::New() const {
  return new WelfareGetOnlineRewardDataReq;
}

void WelfareGetOnlineRewardDataReq::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool WelfareGetOnlineRewardDataReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void WelfareGetOnlineRewardDataReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* WelfareGetOnlineRewardDataReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int WelfareGetOnlineRewardDataReq::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void WelfareGetOnlineRewardDataReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const WelfareGetOnlineRewardDataReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const WelfareGetOnlineRewardDataReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void WelfareGetOnlineRewardDataReq::MergeFrom(const WelfareGetOnlineRewardDataReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void WelfareGetOnlineRewardDataReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WelfareGetOnlineRewardDataReq::CopyFrom(const WelfareGetOnlineRewardDataReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WelfareGetOnlineRewardDataReq::IsInitialized() const {

  return true;
}

void WelfareGetOnlineRewardDataReq::Swap(WelfareGetOnlineRewardDataReq* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata WelfareGetOnlineRewardDataReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = WelfareGetOnlineRewardDataReq_descriptor_;
  metadata.reflection = WelfareGetOnlineRewardDataReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int WelfareGetOnlineRewardDataRsp::kOnlineFieldNumber;
const int WelfareGetOnlineRewardDataRsp::kOnlineTimeFieldNumber;
#endif  // !_MSC_VER

WelfareGetOnlineRewardDataRsp::WelfareGetOnlineRewardDataRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void WelfareGetOnlineRewardDataRsp::InitAsDefaultInstance() {
}

WelfareGetOnlineRewardDataRsp::WelfareGetOnlineRewardDataRsp(const WelfareGetOnlineRewardDataRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void WelfareGetOnlineRewardDataRsp::SharedCtor() {
  _cached_size_ = 0;
  online_time_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

WelfareGetOnlineRewardDataRsp::~WelfareGetOnlineRewardDataRsp() {
  SharedDtor();
}

void WelfareGetOnlineRewardDataRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void WelfareGetOnlineRewardDataRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* WelfareGetOnlineRewardDataRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return WelfareGetOnlineRewardDataRsp_descriptor_;
}

const WelfareGetOnlineRewardDataRsp& WelfareGetOnlineRewardDataRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_welfare_2eproto();
  return *default_instance_;
}

WelfareGetOnlineRewardDataRsp* WelfareGetOnlineRewardDataRsp::default_instance_ = NULL;

WelfareGetOnlineRewardDataRsp* WelfareGetOnlineRewardDataRsp::New() const {
  return new WelfareGetOnlineRewardDataRsp;
}

void WelfareGetOnlineRewardDataRsp::Clear() {
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    online_time_ = 0;
  }
  online_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool WelfareGetOnlineRewardDataRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.WelfareOnlineRewardPBData online = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_online:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_online()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_online;
        if (input->ExpectTag(16)) goto parse_online_time;
        break;
      }

      // optional int32 online_time = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_online_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &online_time_)));
          set_has_online_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void WelfareGetOnlineRewardDataRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.WelfareOnlineRewardPBData online = 1;
  for (int i = 0; i < this->online_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->online(i), output);
  }

  // optional int32 online_time = 2;
  if (has_online_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->online_time(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* WelfareGetOnlineRewardDataRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.WelfareOnlineRewardPBData online = 1;
  for (int i = 0; i < this->online_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->online(i), target);
  }

  // optional int32 online_time = 2;
  if (has_online_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->online_time(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int WelfareGetOnlineRewardDataRsp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // optional int32 online_time = 2;
    if (has_online_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->online_time());
    }

  }
  // repeated .proto_ff.WelfareOnlineRewardPBData online = 1;
  total_size += 1 * this->online_size();
  for (int i = 0; i < this->online_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->online(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void WelfareGetOnlineRewardDataRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const WelfareGetOnlineRewardDataRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const WelfareGetOnlineRewardDataRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void WelfareGetOnlineRewardDataRsp::MergeFrom(const WelfareGetOnlineRewardDataRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  online_.MergeFrom(from.online_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_online_time()) {
      set_online_time(from.online_time());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void WelfareGetOnlineRewardDataRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WelfareGetOnlineRewardDataRsp::CopyFrom(const WelfareGetOnlineRewardDataRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WelfareGetOnlineRewardDataRsp::IsInitialized() const {

  return true;
}

void WelfareGetOnlineRewardDataRsp::Swap(WelfareGetOnlineRewardDataRsp* other) {
  if (other != this) {
    online_.Swap(&other->online_);
    std::swap(online_time_, other->online_time_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata WelfareGetOnlineRewardDataRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = WelfareGetOnlineRewardDataRsp_descriptor_;
  metadata.reflection = WelfareGetOnlineRewardDataRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int WelfareGetOnlineRewardRewardReq::kIdFieldNumber;
#endif  // !_MSC_VER

WelfareGetOnlineRewardRewardReq::WelfareGetOnlineRewardRewardReq()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void WelfareGetOnlineRewardRewardReq::InitAsDefaultInstance() {
}

WelfareGetOnlineRewardRewardReq::WelfareGetOnlineRewardRewardReq(const WelfareGetOnlineRewardRewardReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void WelfareGetOnlineRewardRewardReq::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

WelfareGetOnlineRewardRewardReq::~WelfareGetOnlineRewardRewardReq() {
  SharedDtor();
}

void WelfareGetOnlineRewardRewardReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void WelfareGetOnlineRewardRewardReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* WelfareGetOnlineRewardRewardReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return WelfareGetOnlineRewardRewardReq_descriptor_;
}

const WelfareGetOnlineRewardRewardReq& WelfareGetOnlineRewardRewardReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_welfare_2eproto();
  return *default_instance_;
}

WelfareGetOnlineRewardRewardReq* WelfareGetOnlineRewardRewardReq::default_instance_ = NULL;

WelfareGetOnlineRewardRewardReq* WelfareGetOnlineRewardRewardReq::New() const {
  return new WelfareGetOnlineRewardRewardReq;
}

void WelfareGetOnlineRewardRewardReq::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool WelfareGetOnlineRewardRewardReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void WelfareGetOnlineRewardRewardReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* WelfareGetOnlineRewardRewardReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int WelfareGetOnlineRewardRewardReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->id());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void WelfareGetOnlineRewardRewardReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const WelfareGetOnlineRewardRewardReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const WelfareGetOnlineRewardRewardReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void WelfareGetOnlineRewardRewardReq::MergeFrom(const WelfareGetOnlineRewardRewardReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void WelfareGetOnlineRewardRewardReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WelfareGetOnlineRewardRewardReq::CopyFrom(const WelfareGetOnlineRewardRewardReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WelfareGetOnlineRewardRewardReq::IsInitialized() const {

  return true;
}

void WelfareGetOnlineRewardRewardReq::Swap(WelfareGetOnlineRewardRewardReq* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata WelfareGetOnlineRewardRewardReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = WelfareGetOnlineRewardRewardReq_descriptor_;
  metadata.reflection = WelfareGetOnlineRewardRewardReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int WelfareGetOnlineRewardRewardRsp::kRetCodeFieldNumber;
const int WelfareGetOnlineRewardRewardRsp::kOnlineFieldNumber;
#endif  // !_MSC_VER

WelfareGetOnlineRewardRewardRsp::WelfareGetOnlineRewardRewardRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void WelfareGetOnlineRewardRewardRsp::InitAsDefaultInstance() {
  online_ = const_cast< ::proto_ff::WelfareOnlineRewardPBData*>(&::proto_ff::WelfareOnlineRewardPBData::default_instance());
}

WelfareGetOnlineRewardRewardRsp::WelfareGetOnlineRewardRewardRsp(const WelfareGetOnlineRewardRewardRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void WelfareGetOnlineRewardRewardRsp::SharedCtor() {
  _cached_size_ = 0;
  ret_code_ = 0;
  online_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

WelfareGetOnlineRewardRewardRsp::~WelfareGetOnlineRewardRewardRsp() {
  SharedDtor();
}

void WelfareGetOnlineRewardRewardRsp::SharedDtor() {
  if (this != default_instance_) {
    delete online_;
  }
}

void WelfareGetOnlineRewardRewardRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* WelfareGetOnlineRewardRewardRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return WelfareGetOnlineRewardRewardRsp_descriptor_;
}

const WelfareGetOnlineRewardRewardRsp& WelfareGetOnlineRewardRewardRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_welfare_2eproto();
  return *default_instance_;
}

WelfareGetOnlineRewardRewardRsp* WelfareGetOnlineRewardRewardRsp::default_instance_ = NULL;

WelfareGetOnlineRewardRewardRsp* WelfareGetOnlineRewardRewardRsp::New() const {
  return new WelfareGetOnlineRewardRewardRsp;
}

void WelfareGetOnlineRewardRewardRsp::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    ret_code_ = 0;
    if (has_online()) {
      if (online_ != NULL) online_->::proto_ff::WelfareOnlineRewardPBData::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool WelfareGetOnlineRewardRewardRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 ret_code = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ret_code_)));
          set_has_ret_code();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_online;
        break;
      }

      // optional .proto_ff.WelfareOnlineRewardPBData online = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_online:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_online()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void WelfareGetOnlineRewardRewardRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 ret_code = 1;
  if (has_ret_code()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->ret_code(), output);
  }

  // optional .proto_ff.WelfareOnlineRewardPBData online = 2;
  if (has_online()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->online(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* WelfareGetOnlineRewardRewardRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 ret_code = 1;
  if (has_ret_code()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->ret_code(), target);
  }

  // optional .proto_ff.WelfareOnlineRewardPBData online = 2;
  if (has_online()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->online(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int WelfareGetOnlineRewardRewardRsp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 ret_code = 1;
    if (has_ret_code()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->ret_code());
    }

    // optional .proto_ff.WelfareOnlineRewardPBData online = 2;
    if (has_online()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->online());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void WelfareGetOnlineRewardRewardRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const WelfareGetOnlineRewardRewardRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const WelfareGetOnlineRewardRewardRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void WelfareGetOnlineRewardRewardRsp::MergeFrom(const WelfareGetOnlineRewardRewardRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_ret_code()) {
      set_ret_code(from.ret_code());
    }
    if (from.has_online()) {
      mutable_online()->::proto_ff::WelfareOnlineRewardPBData::MergeFrom(from.online());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void WelfareGetOnlineRewardRewardRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WelfareGetOnlineRewardRewardRsp::CopyFrom(const WelfareGetOnlineRewardRewardRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WelfareGetOnlineRewardRewardRsp::IsInitialized() const {

  return true;
}

void WelfareGetOnlineRewardRewardRsp::Swap(WelfareGetOnlineRewardRewardRsp* other) {
  if (other != this) {
    std::swap(ret_code_, other->ret_code_);
    std::swap(online_, other->online_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata WelfareGetOnlineRewardRewardRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = WelfareGetOnlineRewardRewardRsp_descriptor_;
  metadata.reflection = WelfareGetOnlineRewardRewardRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

WelfareGetNotifyRewardDataReq::WelfareGetNotifyRewardDataReq()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void WelfareGetNotifyRewardDataReq::InitAsDefaultInstance() {
}

WelfareGetNotifyRewardDataReq::WelfareGetNotifyRewardDataReq(const WelfareGetNotifyRewardDataReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void WelfareGetNotifyRewardDataReq::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

WelfareGetNotifyRewardDataReq::~WelfareGetNotifyRewardDataReq() {
  SharedDtor();
}

void WelfareGetNotifyRewardDataReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void WelfareGetNotifyRewardDataReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* WelfareGetNotifyRewardDataReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return WelfareGetNotifyRewardDataReq_descriptor_;
}

const WelfareGetNotifyRewardDataReq& WelfareGetNotifyRewardDataReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_welfare_2eproto();
  return *default_instance_;
}

WelfareGetNotifyRewardDataReq* WelfareGetNotifyRewardDataReq::default_instance_ = NULL;

WelfareGetNotifyRewardDataReq* WelfareGetNotifyRewardDataReq::New() const {
  return new WelfareGetNotifyRewardDataReq;
}

void WelfareGetNotifyRewardDataReq::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool WelfareGetNotifyRewardDataReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void WelfareGetNotifyRewardDataReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* WelfareGetNotifyRewardDataReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int WelfareGetNotifyRewardDataReq::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void WelfareGetNotifyRewardDataReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const WelfareGetNotifyRewardDataReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const WelfareGetNotifyRewardDataReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void WelfareGetNotifyRewardDataReq::MergeFrom(const WelfareGetNotifyRewardDataReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void WelfareGetNotifyRewardDataReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WelfareGetNotifyRewardDataReq::CopyFrom(const WelfareGetNotifyRewardDataReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WelfareGetNotifyRewardDataReq::IsInitialized() const {

  return true;
}

void WelfareGetNotifyRewardDataReq::Swap(WelfareGetNotifyRewardDataReq* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata WelfareGetNotifyRewardDataReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = WelfareGetNotifyRewardDataReq_descriptor_;
  metadata.reflection = WelfareGetNotifyRewardDataReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int WelfareGetNotifyRewardDataRsp::kNotifyFieldNumber;
#endif  // !_MSC_VER

WelfareGetNotifyRewardDataRsp::WelfareGetNotifyRewardDataRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void WelfareGetNotifyRewardDataRsp::InitAsDefaultInstance() {
  notify_ = const_cast< ::proto_ff::WelfareNotifyRewardPBData*>(&::proto_ff::WelfareNotifyRewardPBData::default_instance());
}

WelfareGetNotifyRewardDataRsp::WelfareGetNotifyRewardDataRsp(const WelfareGetNotifyRewardDataRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void WelfareGetNotifyRewardDataRsp::SharedCtor() {
  _cached_size_ = 0;
  notify_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

WelfareGetNotifyRewardDataRsp::~WelfareGetNotifyRewardDataRsp() {
  SharedDtor();
}

void WelfareGetNotifyRewardDataRsp::SharedDtor() {
  if (this != default_instance_) {
    delete notify_;
  }
}

void WelfareGetNotifyRewardDataRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* WelfareGetNotifyRewardDataRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return WelfareGetNotifyRewardDataRsp_descriptor_;
}

const WelfareGetNotifyRewardDataRsp& WelfareGetNotifyRewardDataRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_welfare_2eproto();
  return *default_instance_;
}

WelfareGetNotifyRewardDataRsp* WelfareGetNotifyRewardDataRsp::default_instance_ = NULL;

WelfareGetNotifyRewardDataRsp* WelfareGetNotifyRewardDataRsp::New() const {
  return new WelfareGetNotifyRewardDataRsp;
}

void WelfareGetNotifyRewardDataRsp::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_notify()) {
      if (notify_ != NULL) notify_->::proto_ff::WelfareNotifyRewardPBData::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool WelfareGetNotifyRewardDataRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .proto_ff.WelfareNotifyRewardPBData notify = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_notify()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void WelfareGetNotifyRewardDataRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional .proto_ff.WelfareNotifyRewardPBData notify = 1;
  if (has_notify()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->notify(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* WelfareGetNotifyRewardDataRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional .proto_ff.WelfareNotifyRewardPBData notify = 1;
  if (has_notify()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->notify(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int WelfareGetNotifyRewardDataRsp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .proto_ff.WelfareNotifyRewardPBData notify = 1;
    if (has_notify()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->notify());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void WelfareGetNotifyRewardDataRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const WelfareGetNotifyRewardDataRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const WelfareGetNotifyRewardDataRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void WelfareGetNotifyRewardDataRsp::MergeFrom(const WelfareGetNotifyRewardDataRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_notify()) {
      mutable_notify()->::proto_ff::WelfareNotifyRewardPBData::MergeFrom(from.notify());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void WelfareGetNotifyRewardDataRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WelfareGetNotifyRewardDataRsp::CopyFrom(const WelfareGetNotifyRewardDataRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WelfareGetNotifyRewardDataRsp::IsInitialized() const {

  return true;
}

void WelfareGetNotifyRewardDataRsp::Swap(WelfareGetNotifyRewardDataRsp* other) {
  if (other != this) {
    std::swap(notify_, other->notify_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata WelfareGetNotifyRewardDataRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = WelfareGetNotifyRewardDataRsp_descriptor_;
  metadata.reflection = WelfareGetNotifyRewardDataRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

WelfareGetNotifyRewardRewardReq::WelfareGetNotifyRewardRewardReq()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void WelfareGetNotifyRewardRewardReq::InitAsDefaultInstance() {
}

WelfareGetNotifyRewardRewardReq::WelfareGetNotifyRewardRewardReq(const WelfareGetNotifyRewardRewardReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void WelfareGetNotifyRewardRewardReq::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

WelfareGetNotifyRewardRewardReq::~WelfareGetNotifyRewardRewardReq() {
  SharedDtor();
}

void WelfareGetNotifyRewardRewardReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void WelfareGetNotifyRewardRewardReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* WelfareGetNotifyRewardRewardReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return WelfareGetNotifyRewardRewardReq_descriptor_;
}

const WelfareGetNotifyRewardRewardReq& WelfareGetNotifyRewardRewardReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_welfare_2eproto();
  return *default_instance_;
}

WelfareGetNotifyRewardRewardReq* WelfareGetNotifyRewardRewardReq::default_instance_ = NULL;

WelfareGetNotifyRewardRewardReq* WelfareGetNotifyRewardRewardReq::New() const {
  return new WelfareGetNotifyRewardRewardReq;
}

void WelfareGetNotifyRewardRewardReq::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool WelfareGetNotifyRewardRewardReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void WelfareGetNotifyRewardRewardReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* WelfareGetNotifyRewardRewardReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int WelfareGetNotifyRewardRewardReq::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void WelfareGetNotifyRewardRewardReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const WelfareGetNotifyRewardRewardReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const WelfareGetNotifyRewardRewardReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void WelfareGetNotifyRewardRewardReq::MergeFrom(const WelfareGetNotifyRewardRewardReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void WelfareGetNotifyRewardRewardReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WelfareGetNotifyRewardRewardReq::CopyFrom(const WelfareGetNotifyRewardRewardReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WelfareGetNotifyRewardRewardReq::IsInitialized() const {

  return true;
}

void WelfareGetNotifyRewardRewardReq::Swap(WelfareGetNotifyRewardRewardReq* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata WelfareGetNotifyRewardRewardReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = WelfareGetNotifyRewardRewardReq_descriptor_;
  metadata.reflection = WelfareGetNotifyRewardRewardReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int WelfareGetNotifyRewardRewardRsp::kRetCodeFieldNumber;
const int WelfareGetNotifyRewardRewardRsp::kNotifyFieldNumber;
#endif  // !_MSC_VER

WelfareGetNotifyRewardRewardRsp::WelfareGetNotifyRewardRewardRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void WelfareGetNotifyRewardRewardRsp::InitAsDefaultInstance() {
  notify_ = const_cast< ::proto_ff::WelfareNotifyRewardPBData*>(&::proto_ff::WelfareNotifyRewardPBData::default_instance());
}

WelfareGetNotifyRewardRewardRsp::WelfareGetNotifyRewardRewardRsp(const WelfareGetNotifyRewardRewardRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void WelfareGetNotifyRewardRewardRsp::SharedCtor() {
  _cached_size_ = 0;
  ret_code_ = 0;
  notify_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

WelfareGetNotifyRewardRewardRsp::~WelfareGetNotifyRewardRewardRsp() {
  SharedDtor();
}

void WelfareGetNotifyRewardRewardRsp::SharedDtor() {
  if (this != default_instance_) {
    delete notify_;
  }
}

void WelfareGetNotifyRewardRewardRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* WelfareGetNotifyRewardRewardRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return WelfareGetNotifyRewardRewardRsp_descriptor_;
}

const WelfareGetNotifyRewardRewardRsp& WelfareGetNotifyRewardRewardRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_welfare_2eproto();
  return *default_instance_;
}

WelfareGetNotifyRewardRewardRsp* WelfareGetNotifyRewardRewardRsp::default_instance_ = NULL;

WelfareGetNotifyRewardRewardRsp* WelfareGetNotifyRewardRewardRsp::New() const {
  return new WelfareGetNotifyRewardRewardRsp;
}

void WelfareGetNotifyRewardRewardRsp::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    ret_code_ = 0;
    if (has_notify()) {
      if (notify_ != NULL) notify_->::proto_ff::WelfareNotifyRewardPBData::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool WelfareGetNotifyRewardRewardRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 ret_code = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ret_code_)));
          set_has_ret_code();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_notify;
        break;
      }

      // optional .proto_ff.WelfareNotifyRewardPBData notify = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_notify:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_notify()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void WelfareGetNotifyRewardRewardRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 ret_code = 1;
  if (has_ret_code()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->ret_code(), output);
  }

  // optional .proto_ff.WelfareNotifyRewardPBData notify = 2;
  if (has_notify()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->notify(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* WelfareGetNotifyRewardRewardRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 ret_code = 1;
  if (has_ret_code()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->ret_code(), target);
  }

  // optional .proto_ff.WelfareNotifyRewardPBData notify = 2;
  if (has_notify()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->notify(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int WelfareGetNotifyRewardRewardRsp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 ret_code = 1;
    if (has_ret_code()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->ret_code());
    }

    // optional .proto_ff.WelfareNotifyRewardPBData notify = 2;
    if (has_notify()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->notify());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void WelfareGetNotifyRewardRewardRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const WelfareGetNotifyRewardRewardRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const WelfareGetNotifyRewardRewardRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void WelfareGetNotifyRewardRewardRsp::MergeFrom(const WelfareGetNotifyRewardRewardRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_ret_code()) {
      set_ret_code(from.ret_code());
    }
    if (from.has_notify()) {
      mutable_notify()->::proto_ff::WelfareNotifyRewardPBData::MergeFrom(from.notify());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void WelfareGetNotifyRewardRewardRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WelfareGetNotifyRewardRewardRsp::CopyFrom(const WelfareGetNotifyRewardRewardRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WelfareGetNotifyRewardRewardRsp::IsInitialized() const {

  return true;
}

void WelfareGetNotifyRewardRewardRsp::Swap(WelfareGetNotifyRewardRewardRsp* other) {
  if (other != this) {
    std::swap(ret_code_, other->ret_code_);
    std::swap(notify_, other->notify_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata WelfareGetNotifyRewardRewardRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = WelfareGetNotifyRewardRewardRsp_descriptor_;
  metadata.reflection = WelfareGetNotifyRewardRewardRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

WelfareGetFraudRewardDataReq::WelfareGetFraudRewardDataReq()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void WelfareGetFraudRewardDataReq::InitAsDefaultInstance() {
}

WelfareGetFraudRewardDataReq::WelfareGetFraudRewardDataReq(const WelfareGetFraudRewardDataReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void WelfareGetFraudRewardDataReq::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

WelfareGetFraudRewardDataReq::~WelfareGetFraudRewardDataReq() {
  SharedDtor();
}

void WelfareGetFraudRewardDataReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void WelfareGetFraudRewardDataReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* WelfareGetFraudRewardDataReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return WelfareGetFraudRewardDataReq_descriptor_;
}

const WelfareGetFraudRewardDataReq& WelfareGetFraudRewardDataReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_welfare_2eproto();
  return *default_instance_;
}

WelfareGetFraudRewardDataReq* WelfareGetFraudRewardDataReq::default_instance_ = NULL;

WelfareGetFraudRewardDataReq* WelfareGetFraudRewardDataReq::New() const {
  return new WelfareGetFraudRewardDataReq;
}

void WelfareGetFraudRewardDataReq::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool WelfareGetFraudRewardDataReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void WelfareGetFraudRewardDataReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* WelfareGetFraudRewardDataReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int WelfareGetFraudRewardDataReq::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void WelfareGetFraudRewardDataReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const WelfareGetFraudRewardDataReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const WelfareGetFraudRewardDataReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void WelfareGetFraudRewardDataReq::MergeFrom(const WelfareGetFraudRewardDataReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void WelfareGetFraudRewardDataReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WelfareGetFraudRewardDataReq::CopyFrom(const WelfareGetFraudRewardDataReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WelfareGetFraudRewardDataReq::IsInitialized() const {

  return true;
}

void WelfareGetFraudRewardDataReq::Swap(WelfareGetFraudRewardDataReq* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata WelfareGetFraudRewardDataReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = WelfareGetFraudRewardDataReq_descriptor_;
  metadata.reflection = WelfareGetFraudRewardDataReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int WelfareGetFraudRewardDataRsp::kFraudFieldNumber;
#endif  // !_MSC_VER

WelfareGetFraudRewardDataRsp::WelfareGetFraudRewardDataRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void WelfareGetFraudRewardDataRsp::InitAsDefaultInstance() {
  fraud_ = const_cast< ::proto_ff::WelfareFraudRewardPBData*>(&::proto_ff::WelfareFraudRewardPBData::default_instance());
}

WelfareGetFraudRewardDataRsp::WelfareGetFraudRewardDataRsp(const WelfareGetFraudRewardDataRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void WelfareGetFraudRewardDataRsp::SharedCtor() {
  _cached_size_ = 0;
  fraud_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

WelfareGetFraudRewardDataRsp::~WelfareGetFraudRewardDataRsp() {
  SharedDtor();
}

void WelfareGetFraudRewardDataRsp::SharedDtor() {
  if (this != default_instance_) {
    delete fraud_;
  }
}

void WelfareGetFraudRewardDataRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* WelfareGetFraudRewardDataRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return WelfareGetFraudRewardDataRsp_descriptor_;
}

const WelfareGetFraudRewardDataRsp& WelfareGetFraudRewardDataRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_welfare_2eproto();
  return *default_instance_;
}

WelfareGetFraudRewardDataRsp* WelfareGetFraudRewardDataRsp::default_instance_ = NULL;

WelfareGetFraudRewardDataRsp* WelfareGetFraudRewardDataRsp::New() const {
  return new WelfareGetFraudRewardDataRsp;
}

void WelfareGetFraudRewardDataRsp::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_fraud()) {
      if (fraud_ != NULL) fraud_->::proto_ff::WelfareFraudRewardPBData::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool WelfareGetFraudRewardDataRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .proto_ff.WelfareFraudRewardPBData fraud = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_fraud()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void WelfareGetFraudRewardDataRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional .proto_ff.WelfareFraudRewardPBData fraud = 1;
  if (has_fraud()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->fraud(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* WelfareGetFraudRewardDataRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional .proto_ff.WelfareFraudRewardPBData fraud = 1;
  if (has_fraud()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->fraud(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int WelfareGetFraudRewardDataRsp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .proto_ff.WelfareFraudRewardPBData fraud = 1;
    if (has_fraud()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->fraud());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void WelfareGetFraudRewardDataRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const WelfareGetFraudRewardDataRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const WelfareGetFraudRewardDataRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void WelfareGetFraudRewardDataRsp::MergeFrom(const WelfareGetFraudRewardDataRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_fraud()) {
      mutable_fraud()->::proto_ff::WelfareFraudRewardPBData::MergeFrom(from.fraud());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void WelfareGetFraudRewardDataRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WelfareGetFraudRewardDataRsp::CopyFrom(const WelfareGetFraudRewardDataRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WelfareGetFraudRewardDataRsp::IsInitialized() const {

  return true;
}

void WelfareGetFraudRewardDataRsp::Swap(WelfareGetFraudRewardDataRsp* other) {
  if (other != this) {
    std::swap(fraud_, other->fraud_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata WelfareGetFraudRewardDataRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = WelfareGetFraudRewardDataRsp_descriptor_;
  metadata.reflection = WelfareGetFraudRewardDataRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int WelfareGetFraudRewardRewardReq::kIdFieldNumber;
#endif  // !_MSC_VER

WelfareGetFraudRewardRewardReq::WelfareGetFraudRewardRewardReq()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void WelfareGetFraudRewardRewardReq::InitAsDefaultInstance() {
}

WelfareGetFraudRewardRewardReq::WelfareGetFraudRewardRewardReq(const WelfareGetFraudRewardRewardReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void WelfareGetFraudRewardRewardReq::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

WelfareGetFraudRewardRewardReq::~WelfareGetFraudRewardRewardReq() {
  SharedDtor();
}

void WelfareGetFraudRewardRewardReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void WelfareGetFraudRewardRewardReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* WelfareGetFraudRewardRewardReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return WelfareGetFraudRewardRewardReq_descriptor_;
}

const WelfareGetFraudRewardRewardReq& WelfareGetFraudRewardRewardReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_welfare_2eproto();
  return *default_instance_;
}

WelfareGetFraudRewardRewardReq* WelfareGetFraudRewardRewardReq::default_instance_ = NULL;

WelfareGetFraudRewardRewardReq* WelfareGetFraudRewardRewardReq::New() const {
  return new WelfareGetFraudRewardRewardReq;
}

void WelfareGetFraudRewardRewardReq::Clear() {
  id_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool WelfareGetFraudRewardRewardReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int32 id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 8, input, this->mutable_id())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_id())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(8)) goto parse_id;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void WelfareGetFraudRewardRewardReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated int32 id = 1;
  for (int i = 0; i < this->id_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      1, this->id(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* WelfareGetFraudRewardRewardReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated int32 id = 1;
  for (int i = 0; i < this->id_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(1, this->id(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int WelfareGetFraudRewardRewardReq::ByteSize() const {
  int total_size = 0;

  // repeated int32 id = 1;
  {
    int data_size = 0;
    for (int i = 0; i < this->id_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->id(i));
    }
    total_size += 1 * this->id_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void WelfareGetFraudRewardRewardReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const WelfareGetFraudRewardRewardReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const WelfareGetFraudRewardRewardReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void WelfareGetFraudRewardRewardReq::MergeFrom(const WelfareGetFraudRewardRewardReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  id_.MergeFrom(from.id_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void WelfareGetFraudRewardRewardReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WelfareGetFraudRewardRewardReq::CopyFrom(const WelfareGetFraudRewardRewardReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WelfareGetFraudRewardRewardReq::IsInitialized() const {

  return true;
}

void WelfareGetFraudRewardRewardReq::Swap(WelfareGetFraudRewardRewardReq* other) {
  if (other != this) {
    id_.Swap(&other->id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata WelfareGetFraudRewardRewardReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = WelfareGetFraudRewardRewardReq_descriptor_;
  metadata.reflection = WelfareGetFraudRewardRewardReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int WelfareGetFraudRewardRewardRsp::kRetCodeFieldNumber;
const int WelfareGetFraudRewardRewardRsp::kFraudFieldNumber;
#endif  // !_MSC_VER

WelfareGetFraudRewardRewardRsp::WelfareGetFraudRewardRewardRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void WelfareGetFraudRewardRewardRsp::InitAsDefaultInstance() {
  fraud_ = const_cast< ::proto_ff::WelfareFraudRewardPBData*>(&::proto_ff::WelfareFraudRewardPBData::default_instance());
}

WelfareGetFraudRewardRewardRsp::WelfareGetFraudRewardRewardRsp(const WelfareGetFraudRewardRewardRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void WelfareGetFraudRewardRewardRsp::SharedCtor() {
  _cached_size_ = 0;
  ret_code_ = 0;
  fraud_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

WelfareGetFraudRewardRewardRsp::~WelfareGetFraudRewardRewardRsp() {
  SharedDtor();
}

void WelfareGetFraudRewardRewardRsp::SharedDtor() {
  if (this != default_instance_) {
    delete fraud_;
  }
}

void WelfareGetFraudRewardRewardRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* WelfareGetFraudRewardRewardRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return WelfareGetFraudRewardRewardRsp_descriptor_;
}

const WelfareGetFraudRewardRewardRsp& WelfareGetFraudRewardRewardRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_welfare_2eproto();
  return *default_instance_;
}

WelfareGetFraudRewardRewardRsp* WelfareGetFraudRewardRewardRsp::default_instance_ = NULL;

WelfareGetFraudRewardRewardRsp* WelfareGetFraudRewardRewardRsp::New() const {
  return new WelfareGetFraudRewardRewardRsp;
}

void WelfareGetFraudRewardRewardRsp::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    ret_code_ = 0;
    if (has_fraud()) {
      if (fraud_ != NULL) fraud_->::proto_ff::WelfareFraudRewardPBData::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool WelfareGetFraudRewardRewardRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 ret_code = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ret_code_)));
          set_has_ret_code();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_fraud;
        break;
      }

      // optional .proto_ff.WelfareFraudRewardPBData fraud = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_fraud:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_fraud()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void WelfareGetFraudRewardRewardRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 ret_code = 1;
  if (has_ret_code()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->ret_code(), output);
  }

  // optional .proto_ff.WelfareFraudRewardPBData fraud = 2;
  if (has_fraud()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->fraud(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* WelfareGetFraudRewardRewardRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 ret_code = 1;
  if (has_ret_code()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->ret_code(), target);
  }

  // optional .proto_ff.WelfareFraudRewardPBData fraud = 2;
  if (has_fraud()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->fraud(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int WelfareGetFraudRewardRewardRsp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 ret_code = 1;
    if (has_ret_code()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->ret_code());
    }

    // optional .proto_ff.WelfareFraudRewardPBData fraud = 2;
    if (has_fraud()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->fraud());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void WelfareGetFraudRewardRewardRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const WelfareGetFraudRewardRewardRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const WelfareGetFraudRewardRewardRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void WelfareGetFraudRewardRewardRsp::MergeFrom(const WelfareGetFraudRewardRewardRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_ret_code()) {
      set_ret_code(from.ret_code());
    }
    if (from.has_fraud()) {
      mutable_fraud()->::proto_ff::WelfareFraudRewardPBData::MergeFrom(from.fraud());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void WelfareGetFraudRewardRewardRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WelfareGetFraudRewardRewardRsp::CopyFrom(const WelfareGetFraudRewardRewardRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WelfareGetFraudRewardRewardRsp::IsInitialized() const {

  return true;
}

void WelfareGetFraudRewardRewardRsp::Swap(WelfareGetFraudRewardRewardRsp* other) {
  if (other != this) {
    std::swap(ret_code_, other->ret_code_);
    std::swap(fraud_, other->fraud_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata WelfareGetFraudRewardRewardRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = WelfareGetFraudRewardRewardRsp_descriptor_;
  metadata.reflection = WelfareGetFraudRewardRewardRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

WelfareGetWeekEndRewardDataReq::WelfareGetWeekEndRewardDataReq()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void WelfareGetWeekEndRewardDataReq::InitAsDefaultInstance() {
}

WelfareGetWeekEndRewardDataReq::WelfareGetWeekEndRewardDataReq(const WelfareGetWeekEndRewardDataReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void WelfareGetWeekEndRewardDataReq::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

WelfareGetWeekEndRewardDataReq::~WelfareGetWeekEndRewardDataReq() {
  SharedDtor();
}

void WelfareGetWeekEndRewardDataReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void WelfareGetWeekEndRewardDataReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* WelfareGetWeekEndRewardDataReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return WelfareGetWeekEndRewardDataReq_descriptor_;
}

const WelfareGetWeekEndRewardDataReq& WelfareGetWeekEndRewardDataReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_welfare_2eproto();
  return *default_instance_;
}

WelfareGetWeekEndRewardDataReq* WelfareGetWeekEndRewardDataReq::default_instance_ = NULL;

WelfareGetWeekEndRewardDataReq* WelfareGetWeekEndRewardDataReq::New() const {
  return new WelfareGetWeekEndRewardDataReq;
}

void WelfareGetWeekEndRewardDataReq::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool WelfareGetWeekEndRewardDataReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void WelfareGetWeekEndRewardDataReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* WelfareGetWeekEndRewardDataReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int WelfareGetWeekEndRewardDataReq::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void WelfareGetWeekEndRewardDataReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const WelfareGetWeekEndRewardDataReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const WelfareGetWeekEndRewardDataReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void WelfareGetWeekEndRewardDataReq::MergeFrom(const WelfareGetWeekEndRewardDataReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void WelfareGetWeekEndRewardDataReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WelfareGetWeekEndRewardDataReq::CopyFrom(const WelfareGetWeekEndRewardDataReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WelfareGetWeekEndRewardDataReq::IsInitialized() const {

  return true;
}

void WelfareGetWeekEndRewardDataReq::Swap(WelfareGetWeekEndRewardDataReq* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata WelfareGetWeekEndRewardDataReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = WelfareGetWeekEndRewardDataReq_descriptor_;
  metadata.reflection = WelfareGetWeekEndRewardDataReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int WelfareGetWeekEndRewardDataRsp::kDataFieldNumber;
#endif  // !_MSC_VER

WelfareGetWeekEndRewardDataRsp::WelfareGetWeekEndRewardDataRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void WelfareGetWeekEndRewardDataRsp::InitAsDefaultInstance() {
}

WelfareGetWeekEndRewardDataRsp::WelfareGetWeekEndRewardDataRsp(const WelfareGetWeekEndRewardDataRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void WelfareGetWeekEndRewardDataRsp::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

WelfareGetWeekEndRewardDataRsp::~WelfareGetWeekEndRewardDataRsp() {
  SharedDtor();
}

void WelfareGetWeekEndRewardDataRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void WelfareGetWeekEndRewardDataRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* WelfareGetWeekEndRewardDataRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return WelfareGetWeekEndRewardDataRsp_descriptor_;
}

const WelfareGetWeekEndRewardDataRsp& WelfareGetWeekEndRewardDataRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_welfare_2eproto();
  return *default_instance_;
}

WelfareGetWeekEndRewardDataRsp* WelfareGetWeekEndRewardDataRsp::default_instance_ = NULL;

WelfareGetWeekEndRewardDataRsp* WelfareGetWeekEndRewardDataRsp::New() const {
  return new WelfareGetWeekEndRewardDataRsp;
}

void WelfareGetWeekEndRewardDataRsp::Clear() {
  data_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool WelfareGetWeekEndRewardDataRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.WelfareWeekEndRewardPBData data = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_data:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_data()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_data;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void WelfareGetWeekEndRewardDataRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.WelfareWeekEndRewardPBData data = 1;
  for (int i = 0; i < this->data_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->data(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* WelfareGetWeekEndRewardDataRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.WelfareWeekEndRewardPBData data = 1;
  for (int i = 0; i < this->data_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->data(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int WelfareGetWeekEndRewardDataRsp::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.WelfareWeekEndRewardPBData data = 1;
  total_size += 1 * this->data_size();
  for (int i = 0; i < this->data_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->data(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void WelfareGetWeekEndRewardDataRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const WelfareGetWeekEndRewardDataRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const WelfareGetWeekEndRewardDataRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void WelfareGetWeekEndRewardDataRsp::MergeFrom(const WelfareGetWeekEndRewardDataRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  data_.MergeFrom(from.data_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void WelfareGetWeekEndRewardDataRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WelfareGetWeekEndRewardDataRsp::CopyFrom(const WelfareGetWeekEndRewardDataRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WelfareGetWeekEndRewardDataRsp::IsInitialized() const {

  return true;
}

void WelfareGetWeekEndRewardDataRsp::Swap(WelfareGetWeekEndRewardDataRsp* other) {
  if (other != this) {
    data_.Swap(&other->data_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata WelfareGetWeekEndRewardDataRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = WelfareGetWeekEndRewardDataRsp_descriptor_;
  metadata.reflection = WelfareGetWeekEndRewardDataRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int WelfareGetWeekEndRewardRewardReq::kIdFieldNumber;
#endif  // !_MSC_VER

WelfareGetWeekEndRewardRewardReq::WelfareGetWeekEndRewardRewardReq()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void WelfareGetWeekEndRewardRewardReq::InitAsDefaultInstance() {
}

WelfareGetWeekEndRewardRewardReq::WelfareGetWeekEndRewardRewardReq(const WelfareGetWeekEndRewardRewardReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void WelfareGetWeekEndRewardRewardReq::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

WelfareGetWeekEndRewardRewardReq::~WelfareGetWeekEndRewardRewardReq() {
  SharedDtor();
}

void WelfareGetWeekEndRewardRewardReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void WelfareGetWeekEndRewardRewardReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* WelfareGetWeekEndRewardRewardReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return WelfareGetWeekEndRewardRewardReq_descriptor_;
}

const WelfareGetWeekEndRewardRewardReq& WelfareGetWeekEndRewardRewardReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_welfare_2eproto();
  return *default_instance_;
}

WelfareGetWeekEndRewardRewardReq* WelfareGetWeekEndRewardRewardReq::default_instance_ = NULL;

WelfareGetWeekEndRewardRewardReq* WelfareGetWeekEndRewardRewardReq::New() const {
  return new WelfareGetWeekEndRewardRewardReq;
}

void WelfareGetWeekEndRewardRewardReq::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool WelfareGetWeekEndRewardRewardReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void WelfareGetWeekEndRewardRewardReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* WelfareGetWeekEndRewardRewardReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int WelfareGetWeekEndRewardRewardReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->id());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void WelfareGetWeekEndRewardRewardReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const WelfareGetWeekEndRewardRewardReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const WelfareGetWeekEndRewardRewardReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void WelfareGetWeekEndRewardRewardReq::MergeFrom(const WelfareGetWeekEndRewardRewardReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void WelfareGetWeekEndRewardRewardReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WelfareGetWeekEndRewardRewardReq::CopyFrom(const WelfareGetWeekEndRewardRewardReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WelfareGetWeekEndRewardRewardReq::IsInitialized() const {

  return true;
}

void WelfareGetWeekEndRewardRewardReq::Swap(WelfareGetWeekEndRewardRewardReq* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata WelfareGetWeekEndRewardRewardReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = WelfareGetWeekEndRewardRewardReq_descriptor_;
  metadata.reflection = WelfareGetWeekEndRewardRewardReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int WelfareGetWeekEndRewardRewardRsp::kRetCodeFieldNumber;
const int WelfareGetWeekEndRewardRewardRsp::kDataFieldNumber;
#endif  // !_MSC_VER

WelfareGetWeekEndRewardRewardRsp::WelfareGetWeekEndRewardRewardRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void WelfareGetWeekEndRewardRewardRsp::InitAsDefaultInstance() {
  data_ = const_cast< ::proto_ff::WelfareWeekEndRewardPBData*>(&::proto_ff::WelfareWeekEndRewardPBData::default_instance());
}

WelfareGetWeekEndRewardRewardRsp::WelfareGetWeekEndRewardRewardRsp(const WelfareGetWeekEndRewardRewardRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void WelfareGetWeekEndRewardRewardRsp::SharedCtor() {
  _cached_size_ = 0;
  ret_code_ = 0;
  data_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

WelfareGetWeekEndRewardRewardRsp::~WelfareGetWeekEndRewardRewardRsp() {
  SharedDtor();
}

void WelfareGetWeekEndRewardRewardRsp::SharedDtor() {
  if (this != default_instance_) {
    delete data_;
  }
}

void WelfareGetWeekEndRewardRewardRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* WelfareGetWeekEndRewardRewardRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return WelfareGetWeekEndRewardRewardRsp_descriptor_;
}

const WelfareGetWeekEndRewardRewardRsp& WelfareGetWeekEndRewardRewardRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_welfare_2eproto();
  return *default_instance_;
}

WelfareGetWeekEndRewardRewardRsp* WelfareGetWeekEndRewardRewardRsp::default_instance_ = NULL;

WelfareGetWeekEndRewardRewardRsp* WelfareGetWeekEndRewardRewardRsp::New() const {
  return new WelfareGetWeekEndRewardRewardRsp;
}

void WelfareGetWeekEndRewardRewardRsp::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    ret_code_ = 0;
    if (has_data()) {
      if (data_ != NULL) data_->::proto_ff::WelfareWeekEndRewardPBData::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool WelfareGetWeekEndRewardRewardRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 ret_code = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ret_code_)));
          set_has_ret_code();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_data;
        break;
      }

      // optional .proto_ff.WelfareWeekEndRewardPBData data = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_data:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_data()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void WelfareGetWeekEndRewardRewardRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 ret_code = 1;
  if (has_ret_code()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->ret_code(), output);
  }

  // optional .proto_ff.WelfareWeekEndRewardPBData data = 2;
  if (has_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->data(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* WelfareGetWeekEndRewardRewardRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 ret_code = 1;
  if (has_ret_code()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->ret_code(), target);
  }

  // optional .proto_ff.WelfareWeekEndRewardPBData data = 2;
  if (has_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->data(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int WelfareGetWeekEndRewardRewardRsp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 ret_code = 1;
    if (has_ret_code()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->ret_code());
    }

    // optional .proto_ff.WelfareWeekEndRewardPBData data = 2;
    if (has_data()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->data());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void WelfareGetWeekEndRewardRewardRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const WelfareGetWeekEndRewardRewardRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const WelfareGetWeekEndRewardRewardRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void WelfareGetWeekEndRewardRewardRsp::MergeFrom(const WelfareGetWeekEndRewardRewardRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_ret_code()) {
      set_ret_code(from.ret_code());
    }
    if (from.has_data()) {
      mutable_data()->::proto_ff::WelfareWeekEndRewardPBData::MergeFrom(from.data());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void WelfareGetWeekEndRewardRewardRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WelfareGetWeekEndRewardRewardRsp::CopyFrom(const WelfareGetWeekEndRewardRewardRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WelfareGetWeekEndRewardRewardRsp::IsInitialized() const {

  return true;
}

void WelfareGetWeekEndRewardRewardRsp::Swap(WelfareGetWeekEndRewardRewardRsp* other) {
  if (other != this) {
    std::swap(ret_code_, other->ret_code_);
    std::swap(data_, other->data_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata WelfareGetWeekEndRewardRewardRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = WelfareGetWeekEndRewardRewardRsp_descriptor_;
  metadata.reflection = WelfareGetWeekEndRewardRewardRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

WelfareGetQiFuDataReq::WelfareGetQiFuDataReq()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void WelfareGetQiFuDataReq::InitAsDefaultInstance() {
}

WelfareGetQiFuDataReq::WelfareGetQiFuDataReq(const WelfareGetQiFuDataReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void WelfareGetQiFuDataReq::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

WelfareGetQiFuDataReq::~WelfareGetQiFuDataReq() {
  SharedDtor();
}

void WelfareGetQiFuDataReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void WelfareGetQiFuDataReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* WelfareGetQiFuDataReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return WelfareGetQiFuDataReq_descriptor_;
}

const WelfareGetQiFuDataReq& WelfareGetQiFuDataReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_welfare_2eproto();
  return *default_instance_;
}

WelfareGetQiFuDataReq* WelfareGetQiFuDataReq::default_instance_ = NULL;

WelfareGetQiFuDataReq* WelfareGetQiFuDataReq::New() const {
  return new WelfareGetQiFuDataReq;
}

void WelfareGetQiFuDataReq::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool WelfareGetQiFuDataReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void WelfareGetQiFuDataReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* WelfareGetQiFuDataReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int WelfareGetQiFuDataReq::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void WelfareGetQiFuDataReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const WelfareGetQiFuDataReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const WelfareGetQiFuDataReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void WelfareGetQiFuDataReq::MergeFrom(const WelfareGetQiFuDataReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void WelfareGetQiFuDataReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WelfareGetQiFuDataReq::CopyFrom(const WelfareGetQiFuDataReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WelfareGetQiFuDataReq::IsInitialized() const {

  return true;
}

void WelfareGetQiFuDataReq::Swap(WelfareGetQiFuDataReq* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata WelfareGetQiFuDataReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = WelfareGetQiFuDataReq_descriptor_;
  metadata.reflection = WelfareGetQiFuDataReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int WelfareGetQiFuDataRsp::kDataFieldNumber;
#endif  // !_MSC_VER

WelfareGetQiFuDataRsp::WelfareGetQiFuDataRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void WelfareGetQiFuDataRsp::InitAsDefaultInstance() {
  data_ = const_cast< ::proto_ff::WelfareQiFuData*>(&::proto_ff::WelfareQiFuData::default_instance());
}

WelfareGetQiFuDataRsp::WelfareGetQiFuDataRsp(const WelfareGetQiFuDataRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void WelfareGetQiFuDataRsp::SharedCtor() {
  _cached_size_ = 0;
  data_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

WelfareGetQiFuDataRsp::~WelfareGetQiFuDataRsp() {
  SharedDtor();
}

void WelfareGetQiFuDataRsp::SharedDtor() {
  if (this != default_instance_) {
    delete data_;
  }
}

void WelfareGetQiFuDataRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* WelfareGetQiFuDataRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return WelfareGetQiFuDataRsp_descriptor_;
}

const WelfareGetQiFuDataRsp& WelfareGetQiFuDataRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_welfare_2eproto();
  return *default_instance_;
}

WelfareGetQiFuDataRsp* WelfareGetQiFuDataRsp::default_instance_ = NULL;

WelfareGetQiFuDataRsp* WelfareGetQiFuDataRsp::New() const {
  return new WelfareGetQiFuDataRsp;
}

void WelfareGetQiFuDataRsp::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_data()) {
      if (data_ != NULL) data_->::proto_ff::WelfareQiFuData::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool WelfareGetQiFuDataRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .proto_ff.WelfareQiFuData data = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_data()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void WelfareGetQiFuDataRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional .proto_ff.WelfareQiFuData data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->data(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* WelfareGetQiFuDataRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional .proto_ff.WelfareQiFuData data = 1;
  if (has_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->data(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int WelfareGetQiFuDataRsp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .proto_ff.WelfareQiFuData data = 1;
    if (has_data()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->data());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void WelfareGetQiFuDataRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const WelfareGetQiFuDataRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const WelfareGetQiFuDataRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void WelfareGetQiFuDataRsp::MergeFrom(const WelfareGetQiFuDataRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      mutable_data()->::proto_ff::WelfareQiFuData::MergeFrom(from.data());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void WelfareGetQiFuDataRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WelfareGetQiFuDataRsp::CopyFrom(const WelfareGetQiFuDataRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WelfareGetQiFuDataRsp::IsInitialized() const {

  return true;
}

void WelfareGetQiFuDataRsp::Swap(WelfareGetQiFuDataRsp* other) {
  if (other != this) {
    std::swap(data_, other->data_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata WelfareGetQiFuDataRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = WelfareGetQiFuDataRsp_descriptor_;
  metadata.reflection = WelfareGetQiFuDataRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int WelfareQiFuReq::kTypeFieldNumber;
#endif  // !_MSC_VER

WelfareQiFuReq::WelfareQiFuReq()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void WelfareQiFuReq::InitAsDefaultInstance() {
}

WelfareQiFuReq::WelfareQiFuReq(const WelfareQiFuReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void WelfareQiFuReq::SharedCtor() {
  _cached_size_ = 0;
  type_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

WelfareQiFuReq::~WelfareQiFuReq() {
  SharedDtor();
}

void WelfareQiFuReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void WelfareQiFuReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* WelfareQiFuReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return WelfareQiFuReq_descriptor_;
}

const WelfareQiFuReq& WelfareQiFuReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_welfare_2eproto();
  return *default_instance_;
}

WelfareQiFuReq* WelfareQiFuReq::default_instance_ = NULL;

WelfareQiFuReq* WelfareQiFuReq::New() const {
  return new WelfareQiFuReq;
}

void WelfareQiFuReq::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    type_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool WelfareQiFuReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void WelfareQiFuReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 type = 1;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->type(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* WelfareQiFuReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 type = 1;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->type(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int WelfareQiFuReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 type = 1;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void WelfareQiFuReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const WelfareQiFuReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const WelfareQiFuReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void WelfareQiFuReq::MergeFrom(const WelfareQiFuReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_type()) {
      set_type(from.type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void WelfareQiFuReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WelfareQiFuReq::CopyFrom(const WelfareQiFuReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WelfareQiFuReq::IsInitialized() const {

  return true;
}

void WelfareQiFuReq::Swap(WelfareQiFuReq* other) {
  if (other != this) {
    std::swap(type_, other->type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata WelfareQiFuReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = WelfareQiFuReq_descriptor_;
  metadata.reflection = WelfareQiFuReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int WelfareQiFuRsp::kRetCodeFieldNumber;
const int WelfareQiFuRsp::kDataFieldNumber;
#endif  // !_MSC_VER

WelfareQiFuRsp::WelfareQiFuRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void WelfareQiFuRsp::InitAsDefaultInstance() {
  data_ = const_cast< ::proto_ff::WelfareQiFuData*>(&::proto_ff::WelfareQiFuData::default_instance());
}

WelfareQiFuRsp::WelfareQiFuRsp(const WelfareQiFuRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void WelfareQiFuRsp::SharedCtor() {
  _cached_size_ = 0;
  ret_code_ = 0;
  data_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

WelfareQiFuRsp::~WelfareQiFuRsp() {
  SharedDtor();
}

void WelfareQiFuRsp::SharedDtor() {
  if (this != default_instance_) {
    delete data_;
  }
}

void WelfareQiFuRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* WelfareQiFuRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return WelfareQiFuRsp_descriptor_;
}

const WelfareQiFuRsp& WelfareQiFuRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_welfare_2eproto();
  return *default_instance_;
}

WelfareQiFuRsp* WelfareQiFuRsp::default_instance_ = NULL;

WelfareQiFuRsp* WelfareQiFuRsp::New() const {
  return new WelfareQiFuRsp;
}

void WelfareQiFuRsp::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    ret_code_ = 0;
    if (has_data()) {
      if (data_ != NULL) data_->::proto_ff::WelfareQiFuData::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool WelfareQiFuRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 ret_code = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ret_code_)));
          set_has_ret_code();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_data;
        break;
      }

      // optional .proto_ff.WelfareQiFuData data = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_data:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_data()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void WelfareQiFuRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 ret_code = 1;
  if (has_ret_code()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->ret_code(), output);
  }

  // optional .proto_ff.WelfareQiFuData data = 2;
  if (has_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->data(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* WelfareQiFuRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 ret_code = 1;
  if (has_ret_code()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->ret_code(), target);
  }

  // optional .proto_ff.WelfareQiFuData data = 2;
  if (has_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->data(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int WelfareQiFuRsp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 ret_code = 1;
    if (has_ret_code()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->ret_code());
    }

    // optional .proto_ff.WelfareQiFuData data = 2;
    if (has_data()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->data());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void WelfareQiFuRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const WelfareQiFuRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const WelfareQiFuRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void WelfareQiFuRsp::MergeFrom(const WelfareQiFuRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_ret_code()) {
      set_ret_code(from.ret_code());
    }
    if (from.has_data()) {
      mutable_data()->::proto_ff::WelfareQiFuData::MergeFrom(from.data());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void WelfareQiFuRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WelfareQiFuRsp::CopyFrom(const WelfareQiFuRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WelfareQiFuRsp::IsInitialized() const {

  return true;
}

void WelfareQiFuRsp::Swap(WelfareQiFuRsp* other) {
  if (other != this) {
    std::swap(ret_code_, other->ret_code_);
    std::swap(data_, other->data_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata WelfareQiFuRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = WelfareQiFuRsp_descriptor_;
  metadata.reflection = WelfareQiFuRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

WelfareSaveMoneyReq::WelfareSaveMoneyReq()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void WelfareSaveMoneyReq::InitAsDefaultInstance() {
}

WelfareSaveMoneyReq::WelfareSaveMoneyReq(const WelfareSaveMoneyReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void WelfareSaveMoneyReq::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

WelfareSaveMoneyReq::~WelfareSaveMoneyReq() {
  SharedDtor();
}

void WelfareSaveMoneyReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void WelfareSaveMoneyReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* WelfareSaveMoneyReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return WelfareSaveMoneyReq_descriptor_;
}

const WelfareSaveMoneyReq& WelfareSaveMoneyReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_welfare_2eproto();
  return *default_instance_;
}

WelfareSaveMoneyReq* WelfareSaveMoneyReq::default_instance_ = NULL;

WelfareSaveMoneyReq* WelfareSaveMoneyReq::New() const {
  return new WelfareSaveMoneyReq;
}

void WelfareSaveMoneyReq::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool WelfareSaveMoneyReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void WelfareSaveMoneyReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* WelfareSaveMoneyReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int WelfareSaveMoneyReq::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void WelfareSaveMoneyReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const WelfareSaveMoneyReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const WelfareSaveMoneyReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void WelfareSaveMoneyReq::MergeFrom(const WelfareSaveMoneyReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void WelfareSaveMoneyReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WelfareSaveMoneyReq::CopyFrom(const WelfareSaveMoneyReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WelfareSaveMoneyReq::IsInitialized() const {

  return true;
}

void WelfareSaveMoneyReq::Swap(WelfareSaveMoneyReq* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata WelfareSaveMoneyReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = WelfareSaveMoneyReq_descriptor_;
  metadata.reflection = WelfareSaveMoneyReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int WelfareSaveMoneyRsp::kRetCodeFieldNumber;
const int WelfareSaveMoneyRsp::kDataFieldNumber;
#endif  // !_MSC_VER

WelfareSaveMoneyRsp::WelfareSaveMoneyRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void WelfareSaveMoneyRsp::InitAsDefaultInstance() {
  data_ = const_cast< ::proto_ff::WelfareQiFuData*>(&::proto_ff::WelfareQiFuData::default_instance());
}

WelfareSaveMoneyRsp::WelfareSaveMoneyRsp(const WelfareSaveMoneyRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void WelfareSaveMoneyRsp::SharedCtor() {
  _cached_size_ = 0;
  ret_code_ = 0;
  data_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

WelfareSaveMoneyRsp::~WelfareSaveMoneyRsp() {
  SharedDtor();
}

void WelfareSaveMoneyRsp::SharedDtor() {
  if (this != default_instance_) {
    delete data_;
  }
}

void WelfareSaveMoneyRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* WelfareSaveMoneyRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return WelfareSaveMoneyRsp_descriptor_;
}

const WelfareSaveMoneyRsp& WelfareSaveMoneyRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_welfare_2eproto();
  return *default_instance_;
}

WelfareSaveMoneyRsp* WelfareSaveMoneyRsp::default_instance_ = NULL;

WelfareSaveMoneyRsp* WelfareSaveMoneyRsp::New() const {
  return new WelfareSaveMoneyRsp;
}

void WelfareSaveMoneyRsp::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    ret_code_ = 0;
    if (has_data()) {
      if (data_ != NULL) data_->::proto_ff::WelfareQiFuData::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool WelfareSaveMoneyRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 ret_code = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ret_code_)));
          set_has_ret_code();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_data;
        break;
      }

      // optional .proto_ff.WelfareQiFuData data = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_data:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_data()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void WelfareSaveMoneyRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 ret_code = 1;
  if (has_ret_code()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->ret_code(), output);
  }

  // optional .proto_ff.WelfareQiFuData data = 2;
  if (has_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->data(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* WelfareSaveMoneyRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 ret_code = 1;
  if (has_ret_code()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->ret_code(), target);
  }

  // optional .proto_ff.WelfareQiFuData data = 2;
  if (has_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->data(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int WelfareSaveMoneyRsp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 ret_code = 1;
    if (has_ret_code()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->ret_code());
    }

    // optional .proto_ff.WelfareQiFuData data = 2;
    if (has_data()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->data());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void WelfareSaveMoneyRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const WelfareSaveMoneyRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const WelfareSaveMoneyRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void WelfareSaveMoneyRsp::MergeFrom(const WelfareSaveMoneyRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_ret_code()) {
      set_ret_code(from.ret_code());
    }
    if (from.has_data()) {
      mutable_data()->::proto_ff::WelfareQiFuData::MergeFrom(from.data());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void WelfareSaveMoneyRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WelfareSaveMoneyRsp::CopyFrom(const WelfareSaveMoneyRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WelfareSaveMoneyRsp::IsInitialized() const {

  return true;
}

void WelfareSaveMoneyRsp::Swap(WelfareSaveMoneyRsp* other) {
  if (other != this) {
    std::swap(ret_code_, other->ret_code_);
    std::swap(data_, other->data_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata WelfareSaveMoneyRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = WelfareSaveMoneyRsp_descriptor_;
  metadata.reflection = WelfareSaveMoneyRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int WelfareGetMoneyReq::kTypeFieldNumber;
#endif  // !_MSC_VER

WelfareGetMoneyReq::WelfareGetMoneyReq()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void WelfareGetMoneyReq::InitAsDefaultInstance() {
}

WelfareGetMoneyReq::WelfareGetMoneyReq(const WelfareGetMoneyReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void WelfareGetMoneyReq::SharedCtor() {
  _cached_size_ = 0;
  type_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

WelfareGetMoneyReq::~WelfareGetMoneyReq() {
  SharedDtor();
}

void WelfareGetMoneyReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void WelfareGetMoneyReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* WelfareGetMoneyReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return WelfareGetMoneyReq_descriptor_;
}

const WelfareGetMoneyReq& WelfareGetMoneyReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_welfare_2eproto();
  return *default_instance_;
}

WelfareGetMoneyReq* WelfareGetMoneyReq::default_instance_ = NULL;

WelfareGetMoneyReq* WelfareGetMoneyReq::New() const {
  return new WelfareGetMoneyReq;
}

void WelfareGetMoneyReq::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    type_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool WelfareGetMoneyReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void WelfareGetMoneyReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 type = 1;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->type(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* WelfareGetMoneyReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 type = 1;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->type(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int WelfareGetMoneyReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 type = 1;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void WelfareGetMoneyReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const WelfareGetMoneyReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const WelfareGetMoneyReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void WelfareGetMoneyReq::MergeFrom(const WelfareGetMoneyReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_type()) {
      set_type(from.type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void WelfareGetMoneyReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WelfareGetMoneyReq::CopyFrom(const WelfareGetMoneyReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WelfareGetMoneyReq::IsInitialized() const {

  return true;
}

void WelfareGetMoneyReq::Swap(WelfareGetMoneyReq* other) {
  if (other != this) {
    std::swap(type_, other->type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata WelfareGetMoneyReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = WelfareGetMoneyReq_descriptor_;
  metadata.reflection = WelfareGetMoneyReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int WelfareGetMoneyRsp::kRetCodeFieldNumber;
const int WelfareGetMoneyRsp::kDataFieldNumber;
#endif  // !_MSC_VER

WelfareGetMoneyRsp::WelfareGetMoneyRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void WelfareGetMoneyRsp::InitAsDefaultInstance() {
  data_ = const_cast< ::proto_ff::WelfareQiFuData*>(&::proto_ff::WelfareQiFuData::default_instance());
}

WelfareGetMoneyRsp::WelfareGetMoneyRsp(const WelfareGetMoneyRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void WelfareGetMoneyRsp::SharedCtor() {
  _cached_size_ = 0;
  ret_code_ = 0;
  data_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

WelfareGetMoneyRsp::~WelfareGetMoneyRsp() {
  SharedDtor();
}

void WelfareGetMoneyRsp::SharedDtor() {
  if (this != default_instance_) {
    delete data_;
  }
}

void WelfareGetMoneyRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* WelfareGetMoneyRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return WelfareGetMoneyRsp_descriptor_;
}

const WelfareGetMoneyRsp& WelfareGetMoneyRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_welfare_2eproto();
  return *default_instance_;
}

WelfareGetMoneyRsp* WelfareGetMoneyRsp::default_instance_ = NULL;

WelfareGetMoneyRsp* WelfareGetMoneyRsp::New() const {
  return new WelfareGetMoneyRsp;
}

void WelfareGetMoneyRsp::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    ret_code_ = 0;
    if (has_data()) {
      if (data_ != NULL) data_->::proto_ff::WelfareQiFuData::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool WelfareGetMoneyRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 ret_code = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ret_code_)));
          set_has_ret_code();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_data;
        break;
      }

      // optional .proto_ff.WelfareQiFuData data = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_data:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_data()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void WelfareGetMoneyRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 ret_code = 1;
  if (has_ret_code()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->ret_code(), output);
  }

  // optional .proto_ff.WelfareQiFuData data = 2;
  if (has_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->data(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* WelfareGetMoneyRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 ret_code = 1;
  if (has_ret_code()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->ret_code(), target);
  }

  // optional .proto_ff.WelfareQiFuData data = 2;
  if (has_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->data(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int WelfareGetMoneyRsp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 ret_code = 1;
    if (has_ret_code()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->ret_code());
    }

    // optional .proto_ff.WelfareQiFuData data = 2;
    if (has_data()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->data());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void WelfareGetMoneyRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const WelfareGetMoneyRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const WelfareGetMoneyRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void WelfareGetMoneyRsp::MergeFrom(const WelfareGetMoneyRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_ret_code()) {
      set_ret_code(from.ret_code());
    }
    if (from.has_data()) {
      mutable_data()->::proto_ff::WelfareQiFuData::MergeFrom(from.data());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void WelfareGetMoneyRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WelfareGetMoneyRsp::CopyFrom(const WelfareGetMoneyRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WelfareGetMoneyRsp::IsInitialized() const {

  return true;
}

void WelfareGetMoneyRsp::Swap(WelfareGetMoneyRsp* other) {
  if (other != this) {
    std::swap(ret_code_, other->ret_code_);
    std::swap(data_, other->data_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata WelfareGetMoneyRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = WelfareGetMoneyRsp_descriptor_;
  metadata.reflection = WelfareGetMoneyRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

WelfareGetLogonDataReq::WelfareGetLogonDataReq()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void WelfareGetLogonDataReq::InitAsDefaultInstance() {
}

WelfareGetLogonDataReq::WelfareGetLogonDataReq(const WelfareGetLogonDataReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void WelfareGetLogonDataReq::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

WelfareGetLogonDataReq::~WelfareGetLogonDataReq() {
  SharedDtor();
}

void WelfareGetLogonDataReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void WelfareGetLogonDataReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* WelfareGetLogonDataReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return WelfareGetLogonDataReq_descriptor_;
}

const WelfareGetLogonDataReq& WelfareGetLogonDataReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_welfare_2eproto();
  return *default_instance_;
}

WelfareGetLogonDataReq* WelfareGetLogonDataReq::default_instance_ = NULL;

WelfareGetLogonDataReq* WelfareGetLogonDataReq::New() const {
  return new WelfareGetLogonDataReq;
}

void WelfareGetLogonDataReq::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool WelfareGetLogonDataReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void WelfareGetLogonDataReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* WelfareGetLogonDataReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int WelfareGetLogonDataReq::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void WelfareGetLogonDataReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const WelfareGetLogonDataReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const WelfareGetLogonDataReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void WelfareGetLogonDataReq::MergeFrom(const WelfareGetLogonDataReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void WelfareGetLogonDataReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WelfareGetLogonDataReq::CopyFrom(const WelfareGetLogonDataReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WelfareGetLogonDataReq::IsInitialized() const {

  return true;
}

void WelfareGetLogonDataReq::Swap(WelfareGetLogonDataReq* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata WelfareGetLogonDataReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = WelfareGetLogonDataReq_descriptor_;
  metadata.reflection = WelfareGetLogonDataReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int WelfareGetLogonDataRsp::kLogonFieldNumber;
#endif  // !_MSC_VER

WelfareGetLogonDataRsp::WelfareGetLogonDataRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void WelfareGetLogonDataRsp::InitAsDefaultInstance() {
}

WelfareGetLogonDataRsp::WelfareGetLogonDataRsp(const WelfareGetLogonDataRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void WelfareGetLogonDataRsp::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

WelfareGetLogonDataRsp::~WelfareGetLogonDataRsp() {
  SharedDtor();
}

void WelfareGetLogonDataRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void WelfareGetLogonDataRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* WelfareGetLogonDataRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return WelfareGetLogonDataRsp_descriptor_;
}

const WelfareGetLogonDataRsp& WelfareGetLogonDataRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_welfare_2eproto();
  return *default_instance_;
}

WelfareGetLogonDataRsp* WelfareGetLogonDataRsp::default_instance_ = NULL;

WelfareGetLogonDataRsp* WelfareGetLogonDataRsp::New() const {
  return new WelfareGetLogonDataRsp;
}

void WelfareGetLogonDataRsp::Clear() {
  logon_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool WelfareGetLogonDataRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.WelfareLogonData logon = 13;
      case 13: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_logon:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_logon()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(106)) goto parse_logon;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void WelfareGetLogonDataRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.WelfareLogonData logon = 13;
  for (int i = 0; i < this->logon_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      13, this->logon(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* WelfareGetLogonDataRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.WelfareLogonData logon = 13;
  for (int i = 0; i < this->logon_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        13, this->logon(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int WelfareGetLogonDataRsp::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.WelfareLogonData logon = 13;
  total_size += 1 * this->logon_size();
  for (int i = 0; i < this->logon_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->logon(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void WelfareGetLogonDataRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const WelfareGetLogonDataRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const WelfareGetLogonDataRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void WelfareGetLogonDataRsp::MergeFrom(const WelfareGetLogonDataRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  logon_.MergeFrom(from.logon_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void WelfareGetLogonDataRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WelfareGetLogonDataRsp::CopyFrom(const WelfareGetLogonDataRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WelfareGetLogonDataRsp::IsInitialized() const {

  return true;
}

void WelfareGetLogonDataRsp::Swap(WelfareGetLogonDataRsp* other) {
  if (other != this) {
    logon_.Swap(&other->logon_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata WelfareGetLogonDataRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = WelfareGetLogonDataRsp_descriptor_;
  metadata.reflection = WelfareGetLogonDataRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int WelfareGetLogonRewardReq::kIdFieldNumber;
#endif  // !_MSC_VER

WelfareGetLogonRewardReq::WelfareGetLogonRewardReq()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void WelfareGetLogonRewardReq::InitAsDefaultInstance() {
}

WelfareGetLogonRewardReq::WelfareGetLogonRewardReq(const WelfareGetLogonRewardReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void WelfareGetLogonRewardReq::SharedCtor() {
  _cached_size_ = 0;
  id_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

WelfareGetLogonRewardReq::~WelfareGetLogonRewardReq() {
  SharedDtor();
}

void WelfareGetLogonRewardReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void WelfareGetLogonRewardReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* WelfareGetLogonRewardReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return WelfareGetLogonRewardReq_descriptor_;
}

const WelfareGetLogonRewardReq& WelfareGetLogonRewardReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_welfare_2eproto();
  return *default_instance_;
}

WelfareGetLogonRewardReq* WelfareGetLogonRewardReq::default_instance_ = NULL;

WelfareGetLogonRewardReq* WelfareGetLogonRewardReq::New() const {
  return new WelfareGetLogonRewardReq;
}

void WelfareGetLogonRewardReq::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    id_ = GOOGLE_LONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool WelfareGetLogonRewardReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void WelfareGetLogonRewardReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* WelfareGetLogonRewardReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int WelfareGetLogonRewardReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->id());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void WelfareGetLogonRewardReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const WelfareGetLogonRewardReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const WelfareGetLogonRewardReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void WelfareGetLogonRewardReq::MergeFrom(const WelfareGetLogonRewardReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void WelfareGetLogonRewardReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WelfareGetLogonRewardReq::CopyFrom(const WelfareGetLogonRewardReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WelfareGetLogonRewardReq::IsInitialized() const {

  return true;
}

void WelfareGetLogonRewardReq::Swap(WelfareGetLogonRewardReq* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata WelfareGetLogonRewardReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = WelfareGetLogonRewardReq_descriptor_;
  metadata.reflection = WelfareGetLogonRewardReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int WelfareGetLogonRewardRsp::kRetCodeFieldNumber;
const int WelfareGetLogonRewardRsp::kDataFieldNumber;
#endif  // !_MSC_VER

WelfareGetLogonRewardRsp::WelfareGetLogonRewardRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void WelfareGetLogonRewardRsp::InitAsDefaultInstance() {
  data_ = const_cast< ::proto_ff::WelfareLogonData*>(&::proto_ff::WelfareLogonData::default_instance());
}

WelfareGetLogonRewardRsp::WelfareGetLogonRewardRsp(const WelfareGetLogonRewardRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void WelfareGetLogonRewardRsp::SharedCtor() {
  _cached_size_ = 0;
  ret_code_ = 0;
  data_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

WelfareGetLogonRewardRsp::~WelfareGetLogonRewardRsp() {
  SharedDtor();
}

void WelfareGetLogonRewardRsp::SharedDtor() {
  if (this != default_instance_) {
    delete data_;
  }
}

void WelfareGetLogonRewardRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* WelfareGetLogonRewardRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return WelfareGetLogonRewardRsp_descriptor_;
}

const WelfareGetLogonRewardRsp& WelfareGetLogonRewardRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_welfare_2eproto();
  return *default_instance_;
}

WelfareGetLogonRewardRsp* WelfareGetLogonRewardRsp::default_instance_ = NULL;

WelfareGetLogonRewardRsp* WelfareGetLogonRewardRsp::New() const {
  return new WelfareGetLogonRewardRsp;
}

void WelfareGetLogonRewardRsp::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    ret_code_ = 0;
    if (has_data()) {
      if (data_ != NULL) data_->::proto_ff::WelfareLogonData::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool WelfareGetLogonRewardRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 ret_code = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ret_code_)));
          set_has_ret_code();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_data;
        break;
      }

      // optional .proto_ff.WelfareLogonData data = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_data:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_data()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void WelfareGetLogonRewardRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 ret_code = 1;
  if (has_ret_code()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->ret_code(), output);
  }

  // optional .proto_ff.WelfareLogonData data = 2;
  if (has_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->data(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* WelfareGetLogonRewardRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 ret_code = 1;
  if (has_ret_code()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->ret_code(), target);
  }

  // optional .proto_ff.WelfareLogonData data = 2;
  if (has_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->data(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int WelfareGetLogonRewardRsp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 ret_code = 1;
    if (has_ret_code()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->ret_code());
    }

    // optional .proto_ff.WelfareLogonData data = 2;
    if (has_data()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->data());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void WelfareGetLogonRewardRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const WelfareGetLogonRewardRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const WelfareGetLogonRewardRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void WelfareGetLogonRewardRsp::MergeFrom(const WelfareGetLogonRewardRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_ret_code()) {
      set_ret_code(from.ret_code());
    }
    if (from.has_data()) {
      mutable_data()->::proto_ff::WelfareLogonData::MergeFrom(from.data());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void WelfareGetLogonRewardRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WelfareGetLogonRewardRsp::CopyFrom(const WelfareGetLogonRewardRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WelfareGetLogonRewardRsp::IsInitialized() const {

  return true;
}

void WelfareGetLogonRewardRsp::Swap(WelfareGetLogonRewardRsp* other) {
  if (other != this) {
    std::swap(ret_code_, other->ret_code_);
    std::swap(data_, other->data_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata WelfareGetLogonRewardRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = WelfareGetLogonRewardRsp_descriptor_;
  metadata.reflection = WelfareGetLogonRewardRsp_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto_ff

// @@protoc_insertion_point(global_scope)
