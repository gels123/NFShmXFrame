// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: witch.proto

#ifndef PROTOBUF_witch_2eproto__INCLUDED
#define PROTOBUF_witch_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "yd_fieldoptions.pb.h"
// @@protoc_insertion_point(includes)

namespace proto_ff {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_witch_2eproto();
void protobuf_AssignDesc_witch_2eproto();
void protobuf_ShutdownFile_witch_2eproto();

class witchawarditemDesc;
class witchaward;
class Sheet_witchaward;
class witchsummon;
class Sheet_witchsummon;
class witchrewardExp;
class Sheet_witchrewardExp;

// ===================================================================

class witchawarditemDesc : public ::google::protobuf::Message {
 public:
  witchawarditemDesc();
  virtual ~witchawarditemDesc();

  witchawarditemDesc(const witchawarditemDesc& from);

  inline witchawarditemDesc& operator=(const witchawarditemDesc& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const witchawarditemDesc& default_instance();

  void Swap(witchawarditemDesc* other);

  // implements Message ----------------------------------------------

  witchawarditemDesc* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const witchawarditemDesc& from);
  void MergeFrom(const witchawarditemDesc& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 num = 1;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 1;
  inline ::google::protobuf::int32 num() const;
  inline void set_num(::google::protobuf::int32 value);

  // optional int64 name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline ::google::protobuf::int64 name() const;
  inline void set_name(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.witchawarditemDesc)
 private:
  inline void set_has_num();
  inline void clear_has_num();
  inline void set_has_name();
  inline void clear_has_name();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 name_;
  ::google::protobuf::int32 num_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_witch_2eproto();
  friend void protobuf_AssignDesc_witch_2eproto();
  friend void protobuf_ShutdownFile_witch_2eproto();

  void InitAsDefaultInstance();
  static witchawarditemDesc* default_instance_;
};
// -------------------------------------------------------------------

class witchaward : public ::google::protobuf::Message {
 public:
  witchaward();
  virtual ~witchaward();

  witchaward(const witchaward& from);

  inline witchaward& operator=(const witchaward& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const witchaward& default_instance();

  void Swap(witchaward* other);

  // implements Message ----------------------------------------------

  witchaward* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const witchaward& from);
  void MergeFrom(const witchaward& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // optional int32 rank1 = 2;
  inline bool has_rank1() const;
  inline void clear_rank1();
  static const int kRank1FieldNumber = 2;
  inline ::google::protobuf::int32 rank1() const;
  inline void set_rank1(::google::protobuf::int32 value);

  // optional int32 rank2 = 3;
  inline bool has_rank2() const;
  inline void clear_rank2();
  static const int kRank2FieldNumber = 3;
  inline ::google::protobuf::int32 rank2() const;
  inline void set_rank2(::google::protobuf::int32 value);

  // optional int32 integral_blue_nub = 4;
  inline bool has_integral_blue_nub() const;
  inline void clear_integral_blue_nub();
  static const int kIntegralBlueNubFieldNumber = 4;
  inline ::google::protobuf::int32 integral_blue_nub() const;
  inline void set_integral_blue_nub(::google::protobuf::int32 value);

  // optional int32 integral_purple_nub = 5;
  inline bool has_integral_purple_nub() const;
  inline void clear_integral_purple_nub();
  static const int kIntegralPurpleNubFieldNumber = 5;
  inline ::google::protobuf::int32 integral_purple_nub() const;
  inline void set_integral_purple_nub(::google::protobuf::int32 value);

  // optional int32 integral_red_nub = 6;
  inline bool has_integral_red_nub() const;
  inline void clear_integral_red_nub();
  static const int kIntegralRedNubFieldNumber = 6;
  inline ::google::protobuf::int32 integral_red_nub() const;
  inline void set_integral_red_nub(::google::protobuf::int32 value);

  // repeated .proto_ff.witchawarditemDesc item = 7;
  inline int item_size() const;
  inline void clear_item();
  static const int kItemFieldNumber = 7;
  inline const ::proto_ff::witchawarditemDesc& item(int index) const;
  inline ::proto_ff::witchawarditemDesc* mutable_item(int index);
  inline ::proto_ff::witchawarditemDesc* add_item();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::witchawarditemDesc >&
      item() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::witchawarditemDesc >*
      mutable_item();

  // @@protoc_insertion_point(class_scope:proto_ff.witchaward)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_rank1();
  inline void clear_has_rank1();
  inline void set_has_rank2();
  inline void clear_has_rank2();
  inline void set_has_integral_blue_nub();
  inline void clear_has_integral_blue_nub();
  inline void set_has_integral_purple_nub();
  inline void clear_has_integral_purple_nub();
  inline void set_has_integral_red_nub();
  inline void clear_has_integral_red_nub();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 rank1_;
  ::google::protobuf::int32 rank2_;
  ::google::protobuf::int32 integral_blue_nub_;
  ::google::protobuf::int32 integral_purple_nub_;
  ::google::protobuf::int32 integral_red_nub_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::witchawarditemDesc > item_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  friend void  protobuf_AddDesc_witch_2eproto();
  friend void protobuf_AssignDesc_witch_2eproto();
  friend void protobuf_ShutdownFile_witch_2eproto();

  void InitAsDefaultInstance();
  static witchaward* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_witchaward : public ::google::protobuf::Message {
 public:
  Sheet_witchaward();
  virtual ~Sheet_witchaward();

  Sheet_witchaward(const Sheet_witchaward& from);

  inline Sheet_witchaward& operator=(const Sheet_witchaward& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_witchaward& default_instance();

  void Swap(Sheet_witchaward* other);

  // implements Message ----------------------------------------------

  Sheet_witchaward* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_witchaward& from);
  void MergeFrom(const Sheet_witchaward& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.witchaward witchaward_List = 1;
  inline int witchaward_list_size() const;
  inline void clear_witchaward_list();
  static const int kWitchawardListFieldNumber = 1;
  inline const ::proto_ff::witchaward& witchaward_list(int index) const;
  inline ::proto_ff::witchaward* mutable_witchaward_list(int index);
  inline ::proto_ff::witchaward* add_witchaward_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::witchaward >&
      witchaward_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::witchaward >*
      mutable_witchaward_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_witchaward)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::witchaward > witchaward_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_witch_2eproto();
  friend void protobuf_AssignDesc_witch_2eproto();
  friend void protobuf_ShutdownFile_witch_2eproto();

  void InitAsDefaultInstance();
  static Sheet_witchaward* default_instance_;
};
// -------------------------------------------------------------------

class witchsummon : public ::google::protobuf::Message {
 public:
  witchsummon();
  virtual ~witchsummon();

  witchsummon(const witchsummon& from);

  inline witchsummon& operator=(const witchsummon& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const witchsummon& default_instance();

  void Swap(witchsummon* other);

  // implements Message ----------------------------------------------

  witchsummon* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const witchsummon& from);
  void MergeFrom(const witchsummon& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // optional int32 consume = 2;
  inline bool has_consume() const;
  inline void clear_consume();
  static const int kConsumeFieldNumber = 2;
  inline ::google::protobuf::int32 consume() const;
  inline void set_consume(::google::protobuf::int32 value);

  // optional int64 bossId = 3;
  inline bool has_bossid() const;
  inline void clear_bossid();
  static const int kBossIdFieldNumber = 3;
  inline ::google::protobuf::int64 bossid() const;
  inline void set_bossid(::google::protobuf::int64 value);

  // optional int64 item = 4;
  inline bool has_item() const;
  inline void clear_item();
  static const int kItemFieldNumber = 4;
  inline ::google::protobuf::int64 item() const;
  inline void set_item(::google::protobuf::int64 value);

  // optional int32 purpleDrill = 5;
  inline bool has_purpledrill() const;
  inline void clear_purpledrill();
  static const int kPurpleDrillFieldNumber = 5;
  inline ::google::protobuf::int32 purpledrill() const;
  inline void set_purpledrill(::google::protobuf::int32 value);

  // optional int32 xzhou = 6;
  inline bool has_xzhou() const;
  inline void clear_xzhou();
  static const int kXzhouFieldNumber = 6;
  inline ::google::protobuf::int32 xzhou() const;
  inline void set_xzhou(::google::protobuf::int32 value);

  // optional int32 yzhou = 7;
  inline bool has_yzhou() const;
  inline void clear_yzhou();
  static const int kYzhouFieldNumber = 7;
  inline ::google::protobuf::int32 yzhou() const;
  inline void set_yzhou(::google::protobuf::int32 value);

  // optional int32 zzhou = 8;
  inline bool has_zzhou() const;
  inline void clear_zzhou();
  static const int kZzhouFieldNumber = 8;
  inline ::google::protobuf::int32 zzhou() const;
  inline void set_zzhou(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.witchsummon)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_consume();
  inline void clear_has_consume();
  inline void set_has_bossid();
  inline void clear_has_bossid();
  inline void set_has_item();
  inline void clear_has_item();
  inline void set_has_purpledrill();
  inline void clear_has_purpledrill();
  inline void set_has_xzhou();
  inline void clear_has_xzhou();
  inline void set_has_yzhou();
  inline void clear_has_yzhou();
  inline void set_has_zzhou();
  inline void clear_has_zzhou();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 consume_;
  ::google::protobuf::int64 bossid_;
  ::google::protobuf::int64 item_;
  ::google::protobuf::int32 purpledrill_;
  ::google::protobuf::int32 xzhou_;
  ::google::protobuf::int32 yzhou_;
  ::google::protobuf::int32 zzhou_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];

  friend void  protobuf_AddDesc_witch_2eproto();
  friend void protobuf_AssignDesc_witch_2eproto();
  friend void protobuf_ShutdownFile_witch_2eproto();

  void InitAsDefaultInstance();
  static witchsummon* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_witchsummon : public ::google::protobuf::Message {
 public:
  Sheet_witchsummon();
  virtual ~Sheet_witchsummon();

  Sheet_witchsummon(const Sheet_witchsummon& from);

  inline Sheet_witchsummon& operator=(const Sheet_witchsummon& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_witchsummon& default_instance();

  void Swap(Sheet_witchsummon* other);

  // implements Message ----------------------------------------------

  Sheet_witchsummon* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_witchsummon& from);
  void MergeFrom(const Sheet_witchsummon& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.witchsummon witchsummon_List = 1;
  inline int witchsummon_list_size() const;
  inline void clear_witchsummon_list();
  static const int kWitchsummonListFieldNumber = 1;
  inline const ::proto_ff::witchsummon& witchsummon_list(int index) const;
  inline ::proto_ff::witchsummon* mutable_witchsummon_list(int index);
  inline ::proto_ff::witchsummon* add_witchsummon_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::witchsummon >&
      witchsummon_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::witchsummon >*
      mutable_witchsummon_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_witchsummon)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::witchsummon > witchsummon_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_witch_2eproto();
  friend void protobuf_AssignDesc_witch_2eproto();
  friend void protobuf_ShutdownFile_witch_2eproto();

  void InitAsDefaultInstance();
  static Sheet_witchsummon* default_instance_;
};
// -------------------------------------------------------------------

class witchrewardExp : public ::google::protobuf::Message {
 public:
  witchrewardExp();
  virtual ~witchrewardExp();

  witchrewardExp(const witchrewardExp& from);

  inline witchrewardExp& operator=(const witchrewardExp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const witchrewardExp& default_instance();

  void Swap(witchrewardExp* other);

  // implements Message ----------------------------------------------

  witchrewardExp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const witchrewardExp& from);
  void MergeFrom(const witchrewardExp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 lv = 1;
  inline bool has_lv() const;
  inline void clear_lv();
  static const int kLvFieldNumber = 1;
  inline ::google::protobuf::int32 lv() const;
  inline void set_lv(::google::protobuf::int32 value);

  // optional int64 reward_Exp = 2;
  inline bool has_reward_exp() const;
  inline void clear_reward_exp();
  static const int kRewardExpFieldNumber = 2;
  inline ::google::protobuf::int64 reward_exp() const;
  inline void set_reward_exp(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.witchrewardExp)
 private:
  inline void set_has_lv();
  inline void clear_has_lv();
  inline void set_has_reward_exp();
  inline void clear_has_reward_exp();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 reward_exp_;
  ::google::protobuf::int32 lv_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_witch_2eproto();
  friend void protobuf_AssignDesc_witch_2eproto();
  friend void protobuf_ShutdownFile_witch_2eproto();

  void InitAsDefaultInstance();
  static witchrewardExp* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_witchrewardExp : public ::google::protobuf::Message {
 public:
  Sheet_witchrewardExp();
  virtual ~Sheet_witchrewardExp();

  Sheet_witchrewardExp(const Sheet_witchrewardExp& from);

  inline Sheet_witchrewardExp& operator=(const Sheet_witchrewardExp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_witchrewardExp& default_instance();

  void Swap(Sheet_witchrewardExp* other);

  // implements Message ----------------------------------------------

  Sheet_witchrewardExp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_witchrewardExp& from);
  void MergeFrom(const Sheet_witchrewardExp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.witchrewardExp witchrewardExp_List = 1;
  inline int witchrewardexp_list_size() const;
  inline void clear_witchrewardexp_list();
  static const int kWitchrewardExpListFieldNumber = 1;
  inline const ::proto_ff::witchrewardExp& witchrewardexp_list(int index) const;
  inline ::proto_ff::witchrewardExp* mutable_witchrewardexp_list(int index);
  inline ::proto_ff::witchrewardExp* add_witchrewardexp_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::witchrewardExp >&
      witchrewardexp_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::witchrewardExp >*
      mutable_witchrewardexp_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_witchrewardExp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::witchrewardExp > witchrewardexp_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_witch_2eproto();
  friend void protobuf_AssignDesc_witch_2eproto();
  friend void protobuf_ShutdownFile_witch_2eproto();

  void InitAsDefaultInstance();
  static Sheet_witchrewardExp* default_instance_;
};
// ===================================================================


// ===================================================================

// witchawarditemDesc

// optional int32 num = 1;
inline bool witchawarditemDesc::has_num() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void witchawarditemDesc::set_has_num() {
  _has_bits_[0] |= 0x00000001u;
}
inline void witchawarditemDesc::clear_has_num() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void witchawarditemDesc::clear_num() {
  num_ = 0;
  clear_has_num();
}
inline ::google::protobuf::int32 witchawarditemDesc::num() const {
  return num_;
}
inline void witchawarditemDesc::set_num(::google::protobuf::int32 value) {
  set_has_num();
  num_ = value;
}

// optional int64 name = 2;
inline bool witchawarditemDesc::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void witchawarditemDesc::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void witchawarditemDesc::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void witchawarditemDesc::clear_name() {
  name_ = GOOGLE_LONGLONG(0);
  clear_has_name();
}
inline ::google::protobuf::int64 witchawarditemDesc::name() const {
  return name_;
}
inline void witchawarditemDesc::set_name(::google::protobuf::int64 value) {
  set_has_name();
  name_ = value;
}

// -------------------------------------------------------------------

// witchaward

// optional int32 id = 1;
inline bool witchaward::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void witchaward::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void witchaward::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void witchaward::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 witchaward::id() const {
  return id_;
}
inline void witchaward::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// optional int32 rank1 = 2;
inline bool witchaward::has_rank1() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void witchaward::set_has_rank1() {
  _has_bits_[0] |= 0x00000002u;
}
inline void witchaward::clear_has_rank1() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void witchaward::clear_rank1() {
  rank1_ = 0;
  clear_has_rank1();
}
inline ::google::protobuf::int32 witchaward::rank1() const {
  return rank1_;
}
inline void witchaward::set_rank1(::google::protobuf::int32 value) {
  set_has_rank1();
  rank1_ = value;
}

// optional int32 rank2 = 3;
inline bool witchaward::has_rank2() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void witchaward::set_has_rank2() {
  _has_bits_[0] |= 0x00000004u;
}
inline void witchaward::clear_has_rank2() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void witchaward::clear_rank2() {
  rank2_ = 0;
  clear_has_rank2();
}
inline ::google::protobuf::int32 witchaward::rank2() const {
  return rank2_;
}
inline void witchaward::set_rank2(::google::protobuf::int32 value) {
  set_has_rank2();
  rank2_ = value;
}

// optional int32 integral_blue_nub = 4;
inline bool witchaward::has_integral_blue_nub() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void witchaward::set_has_integral_blue_nub() {
  _has_bits_[0] |= 0x00000008u;
}
inline void witchaward::clear_has_integral_blue_nub() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void witchaward::clear_integral_blue_nub() {
  integral_blue_nub_ = 0;
  clear_has_integral_blue_nub();
}
inline ::google::protobuf::int32 witchaward::integral_blue_nub() const {
  return integral_blue_nub_;
}
inline void witchaward::set_integral_blue_nub(::google::protobuf::int32 value) {
  set_has_integral_blue_nub();
  integral_blue_nub_ = value;
}

// optional int32 integral_purple_nub = 5;
inline bool witchaward::has_integral_purple_nub() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void witchaward::set_has_integral_purple_nub() {
  _has_bits_[0] |= 0x00000010u;
}
inline void witchaward::clear_has_integral_purple_nub() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void witchaward::clear_integral_purple_nub() {
  integral_purple_nub_ = 0;
  clear_has_integral_purple_nub();
}
inline ::google::protobuf::int32 witchaward::integral_purple_nub() const {
  return integral_purple_nub_;
}
inline void witchaward::set_integral_purple_nub(::google::protobuf::int32 value) {
  set_has_integral_purple_nub();
  integral_purple_nub_ = value;
}

// optional int32 integral_red_nub = 6;
inline bool witchaward::has_integral_red_nub() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void witchaward::set_has_integral_red_nub() {
  _has_bits_[0] |= 0x00000020u;
}
inline void witchaward::clear_has_integral_red_nub() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void witchaward::clear_integral_red_nub() {
  integral_red_nub_ = 0;
  clear_has_integral_red_nub();
}
inline ::google::protobuf::int32 witchaward::integral_red_nub() const {
  return integral_red_nub_;
}
inline void witchaward::set_integral_red_nub(::google::protobuf::int32 value) {
  set_has_integral_red_nub();
  integral_red_nub_ = value;
}

// repeated .proto_ff.witchawarditemDesc item = 7;
inline int witchaward::item_size() const {
  return item_.size();
}
inline void witchaward::clear_item() {
  item_.Clear();
}
inline const ::proto_ff::witchawarditemDesc& witchaward::item(int index) const {
  return item_.Get(index);
}
inline ::proto_ff::witchawarditemDesc* witchaward::mutable_item(int index) {
  return item_.Mutable(index);
}
inline ::proto_ff::witchawarditemDesc* witchaward::add_item() {
  return item_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::witchawarditemDesc >&
witchaward::item() const {
  return item_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::witchawarditemDesc >*
witchaward::mutable_item() {
  return &item_;
}

// -------------------------------------------------------------------

// Sheet_witchaward

// repeated .proto_ff.witchaward witchaward_List = 1;
inline int Sheet_witchaward::witchaward_list_size() const {
  return witchaward_list_.size();
}
inline void Sheet_witchaward::clear_witchaward_list() {
  witchaward_list_.Clear();
}
inline const ::proto_ff::witchaward& Sheet_witchaward::witchaward_list(int index) const {
  return witchaward_list_.Get(index);
}
inline ::proto_ff::witchaward* Sheet_witchaward::mutable_witchaward_list(int index) {
  return witchaward_list_.Mutable(index);
}
inline ::proto_ff::witchaward* Sheet_witchaward::add_witchaward_list() {
  return witchaward_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::witchaward >&
Sheet_witchaward::witchaward_list() const {
  return witchaward_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::witchaward >*
Sheet_witchaward::mutable_witchaward_list() {
  return &witchaward_list_;
}

// -------------------------------------------------------------------

// witchsummon

// optional int32 id = 1;
inline bool witchsummon::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void witchsummon::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void witchsummon::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void witchsummon::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 witchsummon::id() const {
  return id_;
}
inline void witchsummon::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// optional int32 consume = 2;
inline bool witchsummon::has_consume() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void witchsummon::set_has_consume() {
  _has_bits_[0] |= 0x00000002u;
}
inline void witchsummon::clear_has_consume() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void witchsummon::clear_consume() {
  consume_ = 0;
  clear_has_consume();
}
inline ::google::protobuf::int32 witchsummon::consume() const {
  return consume_;
}
inline void witchsummon::set_consume(::google::protobuf::int32 value) {
  set_has_consume();
  consume_ = value;
}

// optional int64 bossId = 3;
inline bool witchsummon::has_bossid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void witchsummon::set_has_bossid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void witchsummon::clear_has_bossid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void witchsummon::clear_bossid() {
  bossid_ = GOOGLE_LONGLONG(0);
  clear_has_bossid();
}
inline ::google::protobuf::int64 witchsummon::bossid() const {
  return bossid_;
}
inline void witchsummon::set_bossid(::google::protobuf::int64 value) {
  set_has_bossid();
  bossid_ = value;
}

// optional int64 item = 4;
inline bool witchsummon::has_item() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void witchsummon::set_has_item() {
  _has_bits_[0] |= 0x00000008u;
}
inline void witchsummon::clear_has_item() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void witchsummon::clear_item() {
  item_ = GOOGLE_LONGLONG(0);
  clear_has_item();
}
inline ::google::protobuf::int64 witchsummon::item() const {
  return item_;
}
inline void witchsummon::set_item(::google::protobuf::int64 value) {
  set_has_item();
  item_ = value;
}

// optional int32 purpleDrill = 5;
inline bool witchsummon::has_purpledrill() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void witchsummon::set_has_purpledrill() {
  _has_bits_[0] |= 0x00000010u;
}
inline void witchsummon::clear_has_purpledrill() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void witchsummon::clear_purpledrill() {
  purpledrill_ = 0;
  clear_has_purpledrill();
}
inline ::google::protobuf::int32 witchsummon::purpledrill() const {
  return purpledrill_;
}
inline void witchsummon::set_purpledrill(::google::protobuf::int32 value) {
  set_has_purpledrill();
  purpledrill_ = value;
}

// optional int32 xzhou = 6;
inline bool witchsummon::has_xzhou() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void witchsummon::set_has_xzhou() {
  _has_bits_[0] |= 0x00000020u;
}
inline void witchsummon::clear_has_xzhou() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void witchsummon::clear_xzhou() {
  xzhou_ = 0;
  clear_has_xzhou();
}
inline ::google::protobuf::int32 witchsummon::xzhou() const {
  return xzhou_;
}
inline void witchsummon::set_xzhou(::google::protobuf::int32 value) {
  set_has_xzhou();
  xzhou_ = value;
}

// optional int32 yzhou = 7;
inline bool witchsummon::has_yzhou() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void witchsummon::set_has_yzhou() {
  _has_bits_[0] |= 0x00000040u;
}
inline void witchsummon::clear_has_yzhou() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void witchsummon::clear_yzhou() {
  yzhou_ = 0;
  clear_has_yzhou();
}
inline ::google::protobuf::int32 witchsummon::yzhou() const {
  return yzhou_;
}
inline void witchsummon::set_yzhou(::google::protobuf::int32 value) {
  set_has_yzhou();
  yzhou_ = value;
}

// optional int32 zzhou = 8;
inline bool witchsummon::has_zzhou() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void witchsummon::set_has_zzhou() {
  _has_bits_[0] |= 0x00000080u;
}
inline void witchsummon::clear_has_zzhou() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void witchsummon::clear_zzhou() {
  zzhou_ = 0;
  clear_has_zzhou();
}
inline ::google::protobuf::int32 witchsummon::zzhou() const {
  return zzhou_;
}
inline void witchsummon::set_zzhou(::google::protobuf::int32 value) {
  set_has_zzhou();
  zzhou_ = value;
}

// -------------------------------------------------------------------

// Sheet_witchsummon

// repeated .proto_ff.witchsummon witchsummon_List = 1;
inline int Sheet_witchsummon::witchsummon_list_size() const {
  return witchsummon_list_.size();
}
inline void Sheet_witchsummon::clear_witchsummon_list() {
  witchsummon_list_.Clear();
}
inline const ::proto_ff::witchsummon& Sheet_witchsummon::witchsummon_list(int index) const {
  return witchsummon_list_.Get(index);
}
inline ::proto_ff::witchsummon* Sheet_witchsummon::mutable_witchsummon_list(int index) {
  return witchsummon_list_.Mutable(index);
}
inline ::proto_ff::witchsummon* Sheet_witchsummon::add_witchsummon_list() {
  return witchsummon_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::witchsummon >&
Sheet_witchsummon::witchsummon_list() const {
  return witchsummon_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::witchsummon >*
Sheet_witchsummon::mutable_witchsummon_list() {
  return &witchsummon_list_;
}

// -------------------------------------------------------------------

// witchrewardExp

// optional int32 lv = 1;
inline bool witchrewardExp::has_lv() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void witchrewardExp::set_has_lv() {
  _has_bits_[0] |= 0x00000001u;
}
inline void witchrewardExp::clear_has_lv() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void witchrewardExp::clear_lv() {
  lv_ = 0;
  clear_has_lv();
}
inline ::google::protobuf::int32 witchrewardExp::lv() const {
  return lv_;
}
inline void witchrewardExp::set_lv(::google::protobuf::int32 value) {
  set_has_lv();
  lv_ = value;
}

// optional int64 reward_Exp = 2;
inline bool witchrewardExp::has_reward_exp() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void witchrewardExp::set_has_reward_exp() {
  _has_bits_[0] |= 0x00000002u;
}
inline void witchrewardExp::clear_has_reward_exp() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void witchrewardExp::clear_reward_exp() {
  reward_exp_ = GOOGLE_LONGLONG(0);
  clear_has_reward_exp();
}
inline ::google::protobuf::int64 witchrewardExp::reward_exp() const {
  return reward_exp_;
}
inline void witchrewardExp::set_reward_exp(::google::protobuf::int64 value) {
  set_has_reward_exp();
  reward_exp_ = value;
}

// -------------------------------------------------------------------

// Sheet_witchrewardExp

// repeated .proto_ff.witchrewardExp witchrewardExp_List = 1;
inline int Sheet_witchrewardExp::witchrewardexp_list_size() const {
  return witchrewardexp_list_.size();
}
inline void Sheet_witchrewardExp::clear_witchrewardexp_list() {
  witchrewardexp_list_.Clear();
}
inline const ::proto_ff::witchrewardExp& Sheet_witchrewardExp::witchrewardexp_list(int index) const {
  return witchrewardexp_list_.Get(index);
}
inline ::proto_ff::witchrewardExp* Sheet_witchrewardExp::mutable_witchrewardexp_list(int index) {
  return witchrewardexp_list_.Mutable(index);
}
inline ::proto_ff::witchrewardExp* Sheet_witchrewardExp::add_witchrewardexp_list() {
  return witchrewardexp_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::witchrewardExp >&
Sheet_witchrewardExp::witchrewardexp_list() const {
  return witchrewardexp_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::witchrewardExp >*
Sheet_witchrewardExp::mutable_witchrewardexp_list() {
  return &witchrewardexp_list_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto_ff

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_witch_2eproto__INCLUDED
