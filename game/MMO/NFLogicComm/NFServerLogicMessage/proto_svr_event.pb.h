// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto_svr_event.proto

#ifndef PROTOBUF_proto_5fsvr_5fevent_2eproto__INCLUDED
#define PROTOBUF_proto_5fsvr_5fevent_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "yd_fieldoptions.pb.h"
#include "Com.pb.h"
// @@protoc_insertion_point(includes)

namespace proto_ff {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_proto_5fsvr_5fevent_2eproto();
void protobuf_AssignDesc_proto_5fsvr_5fevent_2eproto();
void protobuf_ShutdownFile_proto_5fsvr_5fevent_2eproto();

class FunctionUnlockEvent;
class PlayerLeveUpEvent;
class ItemUseEvent;
class AcceptTaskEvent;
class FinishTaskEvent;
class LeaveSceneEvent;
class ChgSceneEvent;
class EnterSceneEvent;
class SyncScenePos;
class SyncSceneState;
class GrowPartActiveEvent;
class GrowPartLvUpEvent;
class GrowPartDressEvent;
class ChangeFacadeEvent;
class PayEvent;
class PassDupEvent;
class DeityFantasyBattleEvent;
class DeityActiveEvent;

// ===================================================================

class FunctionUnlockEvent : public ::google::protobuf::Message {
 public:
  FunctionUnlockEvent();
  virtual ~FunctionUnlockEvent();

  FunctionUnlockEvent(const FunctionUnlockEvent& from);

  inline FunctionUnlockEvent& operator=(const FunctionUnlockEvent& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FunctionUnlockEvent& default_instance();

  void Swap(FunctionUnlockEvent* other);

  // implements Message ----------------------------------------------

  FunctionUnlockEvent* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FunctionUnlockEvent& from);
  void MergeFrom(const FunctionUnlockEvent& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 functionId = 1;
  inline bool has_functionid() const;
  inline void clear_functionid();
  static const int kFunctionIdFieldNumber = 1;
  inline ::google::protobuf::uint64 functionid() const;
  inline void set_functionid(::google::protobuf::uint64 value);

  // optional bool sync = 2;
  inline bool has_sync() const;
  inline void clear_sync();
  static const int kSyncFieldNumber = 2;
  inline bool sync() const;
  inline void set_sync(bool value);

  // @@protoc_insertion_point(class_scope:proto_ff.FunctionUnlockEvent)
 private:
  inline void set_has_functionid();
  inline void clear_has_functionid();
  inline void set_has_sync();
  inline void clear_has_sync();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 functionid_;
  bool sync_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_proto_5fsvr_5fevent_2eproto();
  friend void protobuf_AssignDesc_proto_5fsvr_5fevent_2eproto();
  friend void protobuf_ShutdownFile_proto_5fsvr_5fevent_2eproto();

  void InitAsDefaultInstance();
  static FunctionUnlockEvent* default_instance_;
};
// -------------------------------------------------------------------

class PlayerLeveUpEvent : public ::google::protobuf::Message {
 public:
  PlayerLeveUpEvent();
  virtual ~PlayerLeveUpEvent();

  PlayerLeveUpEvent(const PlayerLeveUpEvent& from);

  inline PlayerLeveUpEvent& operator=(const PlayerLeveUpEvent& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerLeveUpEvent& default_instance();

  void Swap(PlayerLeveUpEvent* other);

  // implements Message ----------------------------------------------

  PlayerLeveUpEvent* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PlayerLeveUpEvent& from);
  void MergeFrom(const PlayerLeveUpEvent& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 cid = 1;
  inline bool has_cid() const;
  inline void clear_cid();
  static const int kCidFieldNumber = 1;
  inline ::google::protobuf::uint64 cid() const;
  inline void set_cid(::google::protobuf::uint64 value);

  // optional uint32 level = 2;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 2;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.PlayerLeveUpEvent)
 private:
  inline void set_has_cid();
  inline void clear_has_cid();
  inline void set_has_level();
  inline void clear_has_level();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 cid_;
  ::google::protobuf::uint32 level_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_proto_5fsvr_5fevent_2eproto();
  friend void protobuf_AssignDesc_proto_5fsvr_5fevent_2eproto();
  friend void protobuf_ShutdownFile_proto_5fsvr_5fevent_2eproto();

  void InitAsDefaultInstance();
  static PlayerLeveUpEvent* default_instance_;
};
// -------------------------------------------------------------------

class ItemUseEvent : public ::google::protobuf::Message {
 public:
  ItemUseEvent();
  virtual ~ItemUseEvent();

  ItemUseEvent(const ItemUseEvent& from);

  inline ItemUseEvent& operator=(const ItemUseEvent& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ItemUseEvent& default_instance();

  void Swap(ItemUseEvent* other);

  // implements Message ----------------------------------------------

  ItemUseEvent* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ItemUseEvent& from);
  void MergeFrom(const ItemUseEvent& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 itemId = 1;
  inline bool has_itemid() const;
  inline void clear_itemid();
  static const int kItemIdFieldNumber = 1;
  inline ::google::protobuf::uint64 itemid() const;
  inline void set_itemid(::google::protobuf::uint64 value);

  // optional int32 num = 2;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 2;
  inline ::google::protobuf::int32 num() const;
  inline void set_num(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.ItemUseEvent)
 private:
  inline void set_has_itemid();
  inline void clear_has_itemid();
  inline void set_has_num();
  inline void clear_has_num();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 itemid_;
  ::google::protobuf::int32 num_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_proto_5fsvr_5fevent_2eproto();
  friend void protobuf_AssignDesc_proto_5fsvr_5fevent_2eproto();
  friend void protobuf_ShutdownFile_proto_5fsvr_5fevent_2eproto();

  void InitAsDefaultInstance();
  static ItemUseEvent* default_instance_;
};
// -------------------------------------------------------------------

class AcceptTaskEvent : public ::google::protobuf::Message {
 public:
  AcceptTaskEvent();
  virtual ~AcceptTaskEvent();

  AcceptTaskEvent(const AcceptTaskEvent& from);

  inline AcceptTaskEvent& operator=(const AcceptTaskEvent& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AcceptTaskEvent& default_instance();

  void Swap(AcceptTaskEvent* other);

  // implements Message ----------------------------------------------

  AcceptTaskEvent* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AcceptTaskEvent& from);
  void MergeFrom(const AcceptTaskEvent& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 taskId = 1;
  inline bool has_taskid() const;
  inline void clear_taskid();
  static const int kTaskIdFieldNumber = 1;
  inline ::google::protobuf::uint64 taskid() const;
  inline void set_taskid(::google::protobuf::uint64 value);

  // optional uint64 cid = 2;
  inline bool has_cid() const;
  inline void clear_cid();
  static const int kCidFieldNumber = 2;
  inline ::google::protobuf::uint64 cid() const;
  inline void set_cid(::google::protobuf::uint64 value);

  // optional uint32 taskType = 3;
  inline bool has_tasktype() const;
  inline void clear_tasktype();
  static const int kTaskTypeFieldNumber = 3;
  inline ::google::protobuf::uint32 tasktype() const;
  inline void set_tasktype(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.AcceptTaskEvent)
 private:
  inline void set_has_taskid();
  inline void clear_has_taskid();
  inline void set_has_cid();
  inline void clear_has_cid();
  inline void set_has_tasktype();
  inline void clear_has_tasktype();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 taskid_;
  ::google::protobuf::uint64 cid_;
  ::google::protobuf::uint32 tasktype_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_proto_5fsvr_5fevent_2eproto();
  friend void protobuf_AssignDesc_proto_5fsvr_5fevent_2eproto();
  friend void protobuf_ShutdownFile_proto_5fsvr_5fevent_2eproto();

  void InitAsDefaultInstance();
  static AcceptTaskEvent* default_instance_;
};
// -------------------------------------------------------------------

class FinishTaskEvent : public ::google::protobuf::Message {
 public:
  FinishTaskEvent();
  virtual ~FinishTaskEvent();

  FinishTaskEvent(const FinishTaskEvent& from);

  inline FinishTaskEvent& operator=(const FinishTaskEvent& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FinishTaskEvent& default_instance();

  void Swap(FinishTaskEvent* other);

  // implements Message ----------------------------------------------

  FinishTaskEvent* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FinishTaskEvent& from);
  void MergeFrom(const FinishTaskEvent& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 taskId = 1;
  inline bool has_taskid() const;
  inline void clear_taskid();
  static const int kTaskIdFieldNumber = 1;
  inline ::google::protobuf::uint64 taskid() const;
  inline void set_taskid(::google::protobuf::uint64 value);

  // optional uint64 cid = 2;
  inline bool has_cid() const;
  inline void clear_cid();
  static const int kCidFieldNumber = 2;
  inline ::google::protobuf::uint64 cid() const;
  inline void set_cid(::google::protobuf::uint64 value);

  // optional uint32 taskType = 3;
  inline bool has_tasktype() const;
  inline void clear_tasktype();
  static const int kTaskTypeFieldNumber = 3;
  inline ::google::protobuf::uint32 tasktype() const;
  inline void set_tasktype(::google::protobuf::uint32 value);

  // optional int32 mapGroup = 4;
  inline bool has_mapgroup() const;
  inline void clear_mapgroup();
  static const int kMapGroupFieldNumber = 4;
  inline ::google::protobuf::int32 mapgroup() const;
  inline void set_mapgroup(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.FinishTaskEvent)
 private:
  inline void set_has_taskid();
  inline void clear_has_taskid();
  inline void set_has_cid();
  inline void clear_has_cid();
  inline void set_has_tasktype();
  inline void clear_has_tasktype();
  inline void set_has_mapgroup();
  inline void clear_has_mapgroup();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 taskid_;
  ::google::protobuf::uint64 cid_;
  ::google::protobuf::uint32 tasktype_;
  ::google::protobuf::int32 mapgroup_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_proto_5fsvr_5fevent_2eproto();
  friend void protobuf_AssignDesc_proto_5fsvr_5fevent_2eproto();
  friend void protobuf_ShutdownFile_proto_5fsvr_5fevent_2eproto();

  void InitAsDefaultInstance();
  static FinishTaskEvent* default_instance_;
};
// -------------------------------------------------------------------

class LeaveSceneEvent : public ::google::protobuf::Message {
 public:
  LeaveSceneEvent();
  virtual ~LeaveSceneEvent();

  LeaveSceneEvent(const LeaveSceneEvent& from);

  inline LeaveSceneEvent& operator=(const LeaveSceneEvent& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LeaveSceneEvent& default_instance();

  void Swap(LeaveSceneEvent* other);

  // implements Message ----------------------------------------------

  LeaveSceneEvent* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LeaveSceneEvent& from);
  void MergeFrom(const LeaveSceneEvent& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 cid = 1;
  inline bool has_cid() const;
  inline void clear_cid();
  static const int kCidFieldNumber = 1;
  inline ::google::protobuf::uint64 cid() const;
  inline void set_cid(::google::protobuf::uint64 value);

  // optional uint64 sceneid = 2;
  inline bool has_sceneid() const;
  inline void clear_sceneid();
  static const int kSceneidFieldNumber = 2;
  inline ::google::protobuf::uint64 sceneid() const;
  inline void set_sceneid(::google::protobuf::uint64 value);

  // optional uint64 mapid = 3;
  inline bool has_mapid() const;
  inline void clear_mapid();
  static const int kMapidFieldNumber = 3;
  inline ::google::protobuf::uint64 mapid() const;
  inline void set_mapid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.LeaveSceneEvent)
 private:
  inline void set_has_cid();
  inline void clear_has_cid();
  inline void set_has_sceneid();
  inline void clear_has_sceneid();
  inline void set_has_mapid();
  inline void clear_has_mapid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 cid_;
  ::google::protobuf::uint64 sceneid_;
  ::google::protobuf::uint64 mapid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_proto_5fsvr_5fevent_2eproto();
  friend void protobuf_AssignDesc_proto_5fsvr_5fevent_2eproto();
  friend void protobuf_ShutdownFile_proto_5fsvr_5fevent_2eproto();

  void InitAsDefaultInstance();
  static LeaveSceneEvent* default_instance_;
};
// -------------------------------------------------------------------

class ChgSceneEvent : public ::google::protobuf::Message {
 public:
  ChgSceneEvent();
  virtual ~ChgSceneEvent();

  ChgSceneEvent(const ChgSceneEvent& from);

  inline ChgSceneEvent& operator=(const ChgSceneEvent& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ChgSceneEvent& default_instance();

  void Swap(ChgSceneEvent* other);

  // implements Message ----------------------------------------------

  ChgSceneEvent* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ChgSceneEvent& from);
  void MergeFrom(const ChgSceneEvent& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 cid = 1;
  inline bool has_cid() const;
  inline void clear_cid();
  static const int kCidFieldNumber = 1;
  inline ::google::protobuf::uint64 cid() const;
  inline void set_cid(::google::protobuf::uint64 value);

  // optional bool enterflag = 2;
  inline bool has_enterflag() const;
  inline void clear_enterflag();
  static const int kEnterflagFieldNumber = 2;
  inline bool enterflag() const;
  inline void set_enterflag(bool value);

  // @@protoc_insertion_point(class_scope:proto_ff.ChgSceneEvent)
 private:
  inline void set_has_cid();
  inline void clear_has_cid();
  inline void set_has_enterflag();
  inline void clear_has_enterflag();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 cid_;
  bool enterflag_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_proto_5fsvr_5fevent_2eproto();
  friend void protobuf_AssignDesc_proto_5fsvr_5fevent_2eproto();
  friend void protobuf_ShutdownFile_proto_5fsvr_5fevent_2eproto();

  void InitAsDefaultInstance();
  static ChgSceneEvent* default_instance_;
};
// -------------------------------------------------------------------

class EnterSceneEvent : public ::google::protobuf::Message {
 public:
  EnterSceneEvent();
  virtual ~EnterSceneEvent();

  EnterSceneEvent(const EnterSceneEvent& from);

  inline EnterSceneEvent& operator=(const EnterSceneEvent& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EnterSceneEvent& default_instance();

  void Swap(EnterSceneEvent* other);

  // implements Message ----------------------------------------------

  EnterSceneEvent* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const EnterSceneEvent& from);
  void MergeFrom(const EnterSceneEvent& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 cid = 1;
  inline bool has_cid() const;
  inline void clear_cid();
  static const int kCidFieldNumber = 1;
  inline ::google::protobuf::uint64 cid() const;
  inline void set_cid(::google::protobuf::uint64 value);

  // optional uint32 uid = 2;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 2;
  inline ::google::protobuf::uint32 uid() const;
  inline void set_uid(::google::protobuf::uint32 value);

  // optional uint64 clientid = 3;
  inline bool has_clientid() const;
  inline void clear_clientid();
  static const int kClientidFieldNumber = 3;
  inline ::google::protobuf::uint64 clientid() const;
  inline void set_clientid(::google::protobuf::uint64 value);

  // optional uint64 mapid = 4;
  inline bool has_mapid() const;
  inline void clear_mapid();
  static const int kMapidFieldNumber = 4;
  inline ::google::protobuf::uint64 mapid() const;
  inline void set_mapid(::google::protobuf::uint64 value);

  // optional int32 x = 5;
  inline bool has_x() const;
  inline void clear_x();
  static const int kXFieldNumber = 5;
  inline ::google::protobuf::int32 x() const;
  inline void set_x(::google::protobuf::int32 value);

  // optional int32 y = 6;
  inline bool has_y() const;
  inline void clear_y();
  static const int kYFieldNumber = 6;
  inline ::google::protobuf::int32 y() const;
  inline void set_y(::google::protobuf::int32 value);

  // optional int32 z = 7;
  inline bool has_z() const;
  inline void clear_z();
  static const int kZFieldNumber = 7;
  inline ::google::protobuf::int32 z() const;
  inline void set_z(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.EnterSceneEvent)
 private:
  inline void set_has_cid();
  inline void clear_has_cid();
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_clientid();
  inline void clear_has_clientid();
  inline void set_has_mapid();
  inline void clear_has_mapid();
  inline void set_has_x();
  inline void clear_has_x();
  inline void set_has_y();
  inline void clear_has_y();
  inline void set_has_z();
  inline void clear_has_z();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 cid_;
  ::google::protobuf::uint64 clientid_;
  ::google::protobuf::uint32 uid_;
  ::google::protobuf::int32 x_;
  ::google::protobuf::uint64 mapid_;
  ::google::protobuf::int32 y_;
  ::google::protobuf::int32 z_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  friend void  protobuf_AddDesc_proto_5fsvr_5fevent_2eproto();
  friend void protobuf_AssignDesc_proto_5fsvr_5fevent_2eproto();
  friend void protobuf_ShutdownFile_proto_5fsvr_5fevent_2eproto();

  void InitAsDefaultInstance();
  static EnterSceneEvent* default_instance_;
};
// -------------------------------------------------------------------

class SyncScenePos : public ::google::protobuf::Message {
 public:
  SyncScenePos();
  virtual ~SyncScenePos();

  SyncScenePos(const SyncScenePos& from);

  inline SyncScenePos& operator=(const SyncScenePos& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SyncScenePos& default_instance();

  void Swap(SyncScenePos* other);

  // implements Message ----------------------------------------------

  SyncScenePos* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SyncScenePos& from);
  void MergeFrom(const SyncScenePos& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 map_id = 1;
  inline bool has_map_id() const;
  inline void clear_map_id();
  static const int kMapIdFieldNumber = 1;
  inline ::google::protobuf::uint64 map_id() const;
  inline void set_map_id(::google::protobuf::uint64 value);

  // optional uint64 scene_id = 2;
  inline bool has_scene_id() const;
  inline void clear_scene_id();
  static const int kSceneIdFieldNumber = 2;
  inline ::google::protobuf::uint64 scene_id() const;
  inline void set_scene_id(::google::protobuf::uint64 value);

  // optional .proto_ff.Vector3PB pos = 3;
  inline bool has_pos() const;
  inline void clear_pos();
  static const int kPosFieldNumber = 3;
  inline const ::proto_ff::Vector3PB& pos() const;
  inline ::proto_ff::Vector3PB* mutable_pos();
  inline ::proto_ff::Vector3PB* release_pos();
  inline void set_allocated_pos(::proto_ff::Vector3PB* pos);

  // @@protoc_insertion_point(class_scope:proto_ff.SyncScenePos)
 private:
  inline void set_has_map_id();
  inline void clear_has_map_id();
  inline void set_has_scene_id();
  inline void clear_has_scene_id();
  inline void set_has_pos();
  inline void clear_has_pos();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 map_id_;
  ::google::protobuf::uint64 scene_id_;
  ::proto_ff::Vector3PB* pos_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_proto_5fsvr_5fevent_2eproto();
  friend void protobuf_AssignDesc_proto_5fsvr_5fevent_2eproto();
  friend void protobuf_ShutdownFile_proto_5fsvr_5fevent_2eproto();

  void InitAsDefaultInstance();
  static SyncScenePos* default_instance_;
};
// -------------------------------------------------------------------

class SyncSceneState : public ::google::protobuf::Message {
 public:
  SyncSceneState();
  virtual ~SyncSceneState();

  SyncSceneState(const SyncSceneState& from);

  inline SyncSceneState& operator=(const SyncSceneState& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SyncSceneState& default_instance();

  void Swap(SyncSceneState* other);

  // implements Message ----------------------------------------------

  SyncSceneState* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SyncSceneState& from);
  void MergeFrom(const SyncSceneState& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 last_state = 1;
  inline bool has_last_state() const;
  inline void clear_last_state();
  static const int kLastStateFieldNumber = 1;
  inline ::google::protobuf::uint32 last_state() const;
  inline void set_last_state(::google::protobuf::uint32 value);

  // optional uint32 cur_state = 2;
  inline bool has_cur_state() const;
  inline void clear_cur_state();
  static const int kCurStateFieldNumber = 2;
  inline ::google::protobuf::uint32 cur_state() const;
  inline void set_cur_state(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.SyncSceneState)
 private:
  inline void set_has_last_state();
  inline void clear_has_last_state();
  inline void set_has_cur_state();
  inline void clear_has_cur_state();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 last_state_;
  ::google::protobuf::uint32 cur_state_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_proto_5fsvr_5fevent_2eproto();
  friend void protobuf_AssignDesc_proto_5fsvr_5fevent_2eproto();
  friend void protobuf_ShutdownFile_proto_5fsvr_5fevent_2eproto();

  void InitAsDefaultInstance();
  static SyncSceneState* default_instance_;
};
// -------------------------------------------------------------------

class GrowPartActiveEvent : public ::google::protobuf::Message {
 public:
  GrowPartActiveEvent();
  virtual ~GrowPartActiveEvent();

  GrowPartActiveEvent(const GrowPartActiveEvent& from);

  inline GrowPartActiveEvent& operator=(const GrowPartActiveEvent& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GrowPartActiveEvent& default_instance();

  void Swap(GrowPartActiveEvent* other);

  // implements Message ----------------------------------------------

  GrowPartActiveEvent* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GrowPartActiveEvent& from);
  void MergeFrom(const GrowPartActiveEvent& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // optional int32 id = 2;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 2;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // optional int32 curLv = 3;
  inline bool has_curlv() const;
  inline void clear_curlv();
  static const int kCurLvFieldNumber = 3;
  inline ::google::protobuf::int32 curlv() const;
  inline void set_curlv(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.GrowPartActiveEvent)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_curlv();
  inline void clear_has_curlv();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 curlv_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_proto_5fsvr_5fevent_2eproto();
  friend void protobuf_AssignDesc_proto_5fsvr_5fevent_2eproto();
  friend void protobuf_ShutdownFile_proto_5fsvr_5fevent_2eproto();

  void InitAsDefaultInstance();
  static GrowPartActiveEvent* default_instance_;
};
// -------------------------------------------------------------------

class GrowPartLvUpEvent : public ::google::protobuf::Message {
 public:
  GrowPartLvUpEvent();
  virtual ~GrowPartLvUpEvent();

  GrowPartLvUpEvent(const GrowPartLvUpEvent& from);

  inline GrowPartLvUpEvent& operator=(const GrowPartLvUpEvent& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GrowPartLvUpEvent& default_instance();

  void Swap(GrowPartLvUpEvent* other);

  // implements Message ----------------------------------------------

  GrowPartLvUpEvent* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GrowPartLvUpEvent& from);
  void MergeFrom(const GrowPartLvUpEvent& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // optional int32 id = 2;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 2;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // optional int32 curLv = 3;
  inline bool has_curlv() const;
  inline void clear_curlv();
  static const int kCurLvFieldNumber = 3;
  inline ::google::protobuf::int32 curlv() const;
  inline void set_curlv(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.GrowPartLvUpEvent)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_curlv();
  inline void clear_has_curlv();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 curlv_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_proto_5fsvr_5fevent_2eproto();
  friend void protobuf_AssignDesc_proto_5fsvr_5fevent_2eproto();
  friend void protobuf_ShutdownFile_proto_5fsvr_5fevent_2eproto();

  void InitAsDefaultInstance();
  static GrowPartLvUpEvent* default_instance_;
};
// -------------------------------------------------------------------

class GrowPartDressEvent : public ::google::protobuf::Message {
 public:
  GrowPartDressEvent();
  virtual ~GrowPartDressEvent();

  GrowPartDressEvent(const GrowPartDressEvent& from);

  inline GrowPartDressEvent& operator=(const GrowPartDressEvent& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GrowPartDressEvent& default_instance();

  void Swap(GrowPartDressEvent* other);

  // implements Message ----------------------------------------------

  GrowPartDressEvent* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GrowPartDressEvent& from);
  void MergeFrom(const GrowPartDressEvent& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // optional int32 id = 2;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 2;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // optional int32 curLv = 3;
  inline bool has_curlv() const;
  inline void clear_curlv();
  static const int kCurLvFieldNumber = 3;
  inline ::google::protobuf::int32 curlv() const;
  inline void set_curlv(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.GrowPartDressEvent)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_curlv();
  inline void clear_has_curlv();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 curlv_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_proto_5fsvr_5fevent_2eproto();
  friend void protobuf_AssignDesc_proto_5fsvr_5fevent_2eproto();
  friend void protobuf_ShutdownFile_proto_5fsvr_5fevent_2eproto();

  void InitAsDefaultInstance();
  static GrowPartDressEvent* default_instance_;
};
// -------------------------------------------------------------------

class ChangeFacadeEvent : public ::google::protobuf::Message {
 public:
  ChangeFacadeEvent();
  virtual ~ChangeFacadeEvent();

  ChangeFacadeEvent(const ChangeFacadeEvent& from);

  inline ChangeFacadeEvent& operator=(const ChangeFacadeEvent& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ChangeFacadeEvent& default_instance();

  void Swap(ChangeFacadeEvent* other);

  // implements Message ----------------------------------------------

  ChangeFacadeEvent* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ChangeFacadeEvent& from);
  void MergeFrom(const ChangeFacadeEvent& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 cid = 1;
  inline bool has_cid() const;
  inline void clear_cid();
  static const int kCidFieldNumber = 1;
  inline ::google::protobuf::uint64 cid() const;
  inline void set_cid(::google::protobuf::uint64 value);

  // optional uint64 wingId = 2;
  inline bool has_wingid() const;
  inline void clear_wingid();
  static const int kWingIdFieldNumber = 2;
  inline ::google::protobuf::uint64 wingid() const;
  inline void set_wingid(::google::protobuf::uint64 value);

  // optional uint64 fashionClothesId = 3;
  inline bool has_fashionclothesid() const;
  inline void clear_fashionclothesid();
  static const int kFashionClothesIdFieldNumber = 3;
  inline ::google::protobuf::uint64 fashionclothesid() const;
  inline void set_fashionclothesid(::google::protobuf::uint64 value);

  // optional uint64 fashionWeaponId = 4;
  inline bool has_fashionweaponid() const;
  inline void clear_fashionweaponid();
  static const int kFashionWeaponIdFieldNumber = 4;
  inline ::google::protobuf::uint64 fashionweaponid() const;
  inline void set_fashionweaponid(::google::protobuf::uint64 value);

  // optional uint64 occupationId = 5;
  inline bool has_occupationid() const;
  inline void clear_occupationid();
  static const int kOccupationIdFieldNumber = 5;
  inline ::google::protobuf::uint64 occupationid() const;
  inline void set_occupationid(::google::protobuf::uint64 value);

  // optional uint64 mountId = 6;
  inline bool has_mountid() const;
  inline void clear_mountid();
  static const int kMountIdFieldNumber = 6;
  inline ::google::protobuf::uint64 mountid() const;
  inline void set_mountid(::google::protobuf::uint64 value);

  // optional uint64 treasure_id = 7;
  inline bool has_treasure_id() const;
  inline void clear_treasure_id();
  static const int kTreasureIdFieldNumber = 7;
  inline ::google::protobuf::uint64 treasure_id() const;
  inline void set_treasure_id(::google::protobuf::uint64 value);

  // optional int32 treasure_type = 8;
  inline bool has_treasure_type() const;
  inline void clear_treasure_type();
  static const int kTreasureTypeFieldNumber = 8;
  inline ::google::protobuf::int32 treasure_type() const;
  inline void set_treasure_type(::google::protobuf::int32 value);

  // optional uint64 artifact_id = 9;
  inline bool has_artifact_id() const;
  inline void clear_artifact_id();
  static const int kArtifactIdFieldNumber = 9;
  inline ::google::protobuf::uint64 artifact_id() const;
  inline void set_artifact_id(::google::protobuf::uint64 value);

  // optional uint64 head_id = 10;
  inline bool has_head_id() const;
  inline void clear_head_id();
  static const int kHeadIdFieldNumber = 10;
  inline ::google::protobuf::uint64 head_id() const;
  inline void set_head_id(::google::protobuf::uint64 value);

  // optional uint64 frame_id = 11;
  inline bool has_frame_id() const;
  inline void clear_frame_id();
  static const int kFrameIdFieldNumber = 11;
  inline ::google::protobuf::uint64 frame_id() const;
  inline void set_frame_id(::google::protobuf::uint64 value);

  // optional uint64 bubble_id = 12;
  inline bool has_bubble_id() const;
  inline void clear_bubble_id();
  static const int kBubbleIdFieldNumber = 12;
  inline ::google::protobuf::uint64 bubble_id() const;
  inline void set_bubble_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.ChangeFacadeEvent)
 private:
  inline void set_has_cid();
  inline void clear_has_cid();
  inline void set_has_wingid();
  inline void clear_has_wingid();
  inline void set_has_fashionclothesid();
  inline void clear_has_fashionclothesid();
  inline void set_has_fashionweaponid();
  inline void clear_has_fashionweaponid();
  inline void set_has_occupationid();
  inline void clear_has_occupationid();
  inline void set_has_mountid();
  inline void clear_has_mountid();
  inline void set_has_treasure_id();
  inline void clear_has_treasure_id();
  inline void set_has_treasure_type();
  inline void clear_has_treasure_type();
  inline void set_has_artifact_id();
  inline void clear_has_artifact_id();
  inline void set_has_head_id();
  inline void clear_has_head_id();
  inline void set_has_frame_id();
  inline void clear_has_frame_id();
  inline void set_has_bubble_id();
  inline void clear_has_bubble_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 cid_;
  ::google::protobuf::uint64 wingid_;
  ::google::protobuf::uint64 fashionclothesid_;
  ::google::protobuf::uint64 fashionweaponid_;
  ::google::protobuf::uint64 occupationid_;
  ::google::protobuf::uint64 mountid_;
  ::google::protobuf::uint64 treasure_id_;
  ::google::protobuf::uint64 artifact_id_;
  ::google::protobuf::uint64 head_id_;
  ::google::protobuf::uint64 frame_id_;
  ::google::protobuf::uint64 bubble_id_;
  ::google::protobuf::int32 treasure_type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(12 + 31) / 32];

  friend void  protobuf_AddDesc_proto_5fsvr_5fevent_2eproto();
  friend void protobuf_AssignDesc_proto_5fsvr_5fevent_2eproto();
  friend void protobuf_ShutdownFile_proto_5fsvr_5fevent_2eproto();

  void InitAsDefaultInstance();
  static ChangeFacadeEvent* default_instance_;
};
// -------------------------------------------------------------------

class PayEvent : public ::google::protobuf::Message {
 public:
  PayEvent();
  virtual ~PayEvent();

  PayEvent(const PayEvent& from);

  inline PayEvent& operator=(const PayEvent& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PayEvent& default_instance();

  void Swap(PayEvent* other);

  // implements Message ----------------------------------------------

  PayEvent* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PayEvent& from);
  void MergeFrom(const PayEvent& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 payIndex = 1;
  inline bool has_payindex() const;
  inline void clear_payindex();
  static const int kPayIndexFieldNumber = 1;
  inline ::google::protobuf::uint32 payindex() const;
  inline void set_payindex(::google::protobuf::uint32 value);

  // optional uint32 money = 2;
  inline bool has_money() const;
  inline void clear_money();
  static const int kMoneyFieldNumber = 2;
  inline ::google::protobuf::uint32 money() const;
  inline void set_money(::google::protobuf::uint32 value);

  // optional uint32 price = 3;
  inline bool has_price() const;
  inline void clear_price();
  static const int kPriceFieldNumber = 3;
  inline ::google::protobuf::uint32 price() const;
  inline void set_price(::google::protobuf::uint32 value);

  // optional uint32 type = 4;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 4;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);

  // optional uint32 quantity = 5;
  inline bool has_quantity() const;
  inline void clear_quantity();
  static const int kQuantityFieldNumber = 5;
  inline ::google::protobuf::uint32 quantity() const;
  inline void set_quantity(::google::protobuf::uint32 value);

  // optional bool indexFirst = 6;
  inline bool has_indexfirst() const;
  inline void clear_indexfirst();
  static const int kIndexFirstFieldNumber = 6;
  inline bool indexfirst() const;
  inline void set_indexfirst(bool value);

  // optional bool allFirst = 7;
  inline bool has_allfirst() const;
  inline void clear_allfirst();
  static const int kAllFirstFieldNumber = 7;
  inline bool allfirst() const;
  inline void set_allfirst(bool value);

  // optional uint32 chanid = 8;
  inline bool has_chanid() const;
  inline void clear_chanid();
  static const int kChanidFieldNumber = 8;
  inline ::google::protobuf::uint32 chanid() const;
  inline void set_chanid(::google::protobuf::uint32 value);

  // optional string productid = 9;
  inline bool has_productid() const;
  inline void clear_productid();
  static const int kProductidFieldNumber = 9;
  inline const ::std::string& productid() const;
  inline void set_productid(const ::std::string& value);
  inline void set_productid(const char* value);
  inline void set_productid(const char* value, size_t size);
  inline ::std::string* mutable_productid();
  inline ::std::string* release_productid();
  inline void set_allocated_productid(::std::string* productid);

  // @@protoc_insertion_point(class_scope:proto_ff.PayEvent)
 private:
  inline void set_has_payindex();
  inline void clear_has_payindex();
  inline void set_has_money();
  inline void clear_has_money();
  inline void set_has_price();
  inline void clear_has_price();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_quantity();
  inline void clear_has_quantity();
  inline void set_has_indexfirst();
  inline void clear_has_indexfirst();
  inline void set_has_allfirst();
  inline void clear_has_allfirst();
  inline void set_has_chanid();
  inline void clear_has_chanid();
  inline void set_has_productid();
  inline void clear_has_productid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 payindex_;
  ::google::protobuf::uint32 money_;
  ::google::protobuf::uint32 price_;
  ::google::protobuf::uint32 type_;
  ::google::protobuf::uint32 quantity_;
  bool indexfirst_;
  bool allfirst_;
  ::std::string* productid_;
  ::google::protobuf::uint32 chanid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(9 + 31) / 32];

  friend void  protobuf_AddDesc_proto_5fsvr_5fevent_2eproto();
  friend void protobuf_AssignDesc_proto_5fsvr_5fevent_2eproto();
  friend void protobuf_ShutdownFile_proto_5fsvr_5fevent_2eproto();

  void InitAsDefaultInstance();
  static PayEvent* default_instance_;
};
// -------------------------------------------------------------------

class PassDupEvent : public ::google::protobuf::Message {
 public:
  PassDupEvent();
  virtual ~PassDupEvent();

  PassDupEvent(const PassDupEvent& from);

  inline PassDupEvent& operator=(const PassDupEvent& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PassDupEvent& default_instance();

  void Swap(PassDupEvent* other);

  // implements Message ----------------------------------------------

  PassDupEvent* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PassDupEvent& from);
  void MergeFrom(const PassDupEvent& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 dupId = 1;
  inline bool has_dupid() const;
  inline void clear_dupid();
  static const int kDupIdFieldNumber = 1;
  inline ::google::protobuf::uint64 dupid() const;
  inline void set_dupid(::google::protobuf::uint64 value);

  // optional uint64 groupId = 2;
  inline bool has_groupid() const;
  inline void clear_groupid();
  static const int kGroupIdFieldNumber = 2;
  inline ::google::protobuf::uint64 groupid() const;
  inline void set_groupid(::google::protobuf::uint64 value);

  // optional uint32 star = 3;
  inline bool has_star() const;
  inline void clear_star();
  static const int kStarFieldNumber = 3;
  inline ::google::protobuf::uint32 star() const;
  inline void set_star(::google::protobuf::uint32 value);

  // optional uint32 zid = 4;
  inline bool has_zid() const;
  inline void clear_zid();
  static const int kZidFieldNumber = 4;
  inline ::google::protobuf::uint32 zid() const;
  inline void set_zid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.PassDupEvent)
 private:
  inline void set_has_dupid();
  inline void clear_has_dupid();
  inline void set_has_groupid();
  inline void clear_has_groupid();
  inline void set_has_star();
  inline void clear_has_star();
  inline void set_has_zid();
  inline void clear_has_zid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 dupid_;
  ::google::protobuf::uint64 groupid_;
  ::google::protobuf::uint32 star_;
  ::google::protobuf::uint32 zid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_proto_5fsvr_5fevent_2eproto();
  friend void protobuf_AssignDesc_proto_5fsvr_5fevent_2eproto();
  friend void protobuf_ShutdownFile_proto_5fsvr_5fevent_2eproto();

  void InitAsDefaultInstance();
  static PassDupEvent* default_instance_;
};
// -------------------------------------------------------------------

class DeityFantasyBattleEvent : public ::google::protobuf::Message {
 public:
  DeityFantasyBattleEvent();
  virtual ~DeityFantasyBattleEvent();

  DeityFantasyBattleEvent(const DeityFantasyBattleEvent& from);

  inline DeityFantasyBattleEvent& operator=(const DeityFantasyBattleEvent& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DeityFantasyBattleEvent& default_instance();

  void Swap(DeityFantasyBattleEvent* other);

  // implements Message ----------------------------------------------

  DeityFantasyBattleEvent* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DeityFantasyBattleEvent& from);
  void MergeFrom(const DeityFantasyBattleEvent& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 num = 1;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 1;
  inline ::google::protobuf::uint32 num() const;
  inline void set_num(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.DeityFantasyBattleEvent)
 private:
  inline void set_has_num();
  inline void clear_has_num();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 num_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_proto_5fsvr_5fevent_2eproto();
  friend void protobuf_AssignDesc_proto_5fsvr_5fevent_2eproto();
  friend void protobuf_ShutdownFile_proto_5fsvr_5fevent_2eproto();

  void InitAsDefaultInstance();
  static DeityFantasyBattleEvent* default_instance_;
};
// -------------------------------------------------------------------

class DeityActiveEvent : public ::google::protobuf::Message {
 public:
  DeityActiveEvent();
  virtual ~DeityActiveEvent();

  DeityActiveEvent(const DeityActiveEvent& from);

  inline DeityActiveEvent& operator=(const DeityActiveEvent& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DeityActiveEvent& default_instance();

  void Swap(DeityActiveEvent* other);

  // implements Message ----------------------------------------------

  DeityActiveEvent* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DeityActiveEvent& from);
  void MergeFrom(const DeityActiveEvent& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int64 id() const;
  inline void set_id(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.DeityActiveEvent)
 private:
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_proto_5fsvr_5fevent_2eproto();
  friend void protobuf_AssignDesc_proto_5fsvr_5fevent_2eproto();
  friend void protobuf_ShutdownFile_proto_5fsvr_5fevent_2eproto();

  void InitAsDefaultInstance();
  static DeityActiveEvent* default_instance_;
};
// ===================================================================


// ===================================================================

// FunctionUnlockEvent

// optional uint64 functionId = 1;
inline bool FunctionUnlockEvent::has_functionid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FunctionUnlockEvent::set_has_functionid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FunctionUnlockEvent::clear_has_functionid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FunctionUnlockEvent::clear_functionid() {
  functionid_ = GOOGLE_ULONGLONG(0);
  clear_has_functionid();
}
inline ::google::protobuf::uint64 FunctionUnlockEvent::functionid() const {
  return functionid_;
}
inline void FunctionUnlockEvent::set_functionid(::google::protobuf::uint64 value) {
  set_has_functionid();
  functionid_ = value;
}

// optional bool sync = 2;
inline bool FunctionUnlockEvent::has_sync() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FunctionUnlockEvent::set_has_sync() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FunctionUnlockEvent::clear_has_sync() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FunctionUnlockEvent::clear_sync() {
  sync_ = false;
  clear_has_sync();
}
inline bool FunctionUnlockEvent::sync() const {
  return sync_;
}
inline void FunctionUnlockEvent::set_sync(bool value) {
  set_has_sync();
  sync_ = value;
}

// -------------------------------------------------------------------

// PlayerLeveUpEvent

// optional uint64 cid = 1;
inline bool PlayerLeveUpEvent::has_cid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PlayerLeveUpEvent::set_has_cid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PlayerLeveUpEvent::clear_has_cid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PlayerLeveUpEvent::clear_cid() {
  cid_ = GOOGLE_ULONGLONG(0);
  clear_has_cid();
}
inline ::google::protobuf::uint64 PlayerLeveUpEvent::cid() const {
  return cid_;
}
inline void PlayerLeveUpEvent::set_cid(::google::protobuf::uint64 value) {
  set_has_cid();
  cid_ = value;
}

// optional uint32 level = 2;
inline bool PlayerLeveUpEvent::has_level() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PlayerLeveUpEvent::set_has_level() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PlayerLeveUpEvent::clear_has_level() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PlayerLeveUpEvent::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 PlayerLeveUpEvent::level() const {
  return level_;
}
inline void PlayerLeveUpEvent::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
}

// -------------------------------------------------------------------

// ItemUseEvent

// optional uint64 itemId = 1;
inline bool ItemUseEvent::has_itemid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ItemUseEvent::set_has_itemid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ItemUseEvent::clear_has_itemid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ItemUseEvent::clear_itemid() {
  itemid_ = GOOGLE_ULONGLONG(0);
  clear_has_itemid();
}
inline ::google::protobuf::uint64 ItemUseEvent::itemid() const {
  return itemid_;
}
inline void ItemUseEvent::set_itemid(::google::protobuf::uint64 value) {
  set_has_itemid();
  itemid_ = value;
}

// optional int32 num = 2;
inline bool ItemUseEvent::has_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ItemUseEvent::set_has_num() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ItemUseEvent::clear_has_num() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ItemUseEvent::clear_num() {
  num_ = 0;
  clear_has_num();
}
inline ::google::protobuf::int32 ItemUseEvent::num() const {
  return num_;
}
inline void ItemUseEvent::set_num(::google::protobuf::int32 value) {
  set_has_num();
  num_ = value;
}

// -------------------------------------------------------------------

// AcceptTaskEvent

// optional uint64 taskId = 1;
inline bool AcceptTaskEvent::has_taskid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AcceptTaskEvent::set_has_taskid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AcceptTaskEvent::clear_has_taskid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AcceptTaskEvent::clear_taskid() {
  taskid_ = GOOGLE_ULONGLONG(0);
  clear_has_taskid();
}
inline ::google::protobuf::uint64 AcceptTaskEvent::taskid() const {
  return taskid_;
}
inline void AcceptTaskEvent::set_taskid(::google::protobuf::uint64 value) {
  set_has_taskid();
  taskid_ = value;
}

// optional uint64 cid = 2;
inline bool AcceptTaskEvent::has_cid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AcceptTaskEvent::set_has_cid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AcceptTaskEvent::clear_has_cid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AcceptTaskEvent::clear_cid() {
  cid_ = GOOGLE_ULONGLONG(0);
  clear_has_cid();
}
inline ::google::protobuf::uint64 AcceptTaskEvent::cid() const {
  return cid_;
}
inline void AcceptTaskEvent::set_cid(::google::protobuf::uint64 value) {
  set_has_cid();
  cid_ = value;
}

// optional uint32 taskType = 3;
inline bool AcceptTaskEvent::has_tasktype() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AcceptTaskEvent::set_has_tasktype() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AcceptTaskEvent::clear_has_tasktype() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AcceptTaskEvent::clear_tasktype() {
  tasktype_ = 0u;
  clear_has_tasktype();
}
inline ::google::protobuf::uint32 AcceptTaskEvent::tasktype() const {
  return tasktype_;
}
inline void AcceptTaskEvent::set_tasktype(::google::protobuf::uint32 value) {
  set_has_tasktype();
  tasktype_ = value;
}

// -------------------------------------------------------------------

// FinishTaskEvent

// optional uint64 taskId = 1;
inline bool FinishTaskEvent::has_taskid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FinishTaskEvent::set_has_taskid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FinishTaskEvent::clear_has_taskid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FinishTaskEvent::clear_taskid() {
  taskid_ = GOOGLE_ULONGLONG(0);
  clear_has_taskid();
}
inline ::google::protobuf::uint64 FinishTaskEvent::taskid() const {
  return taskid_;
}
inline void FinishTaskEvent::set_taskid(::google::protobuf::uint64 value) {
  set_has_taskid();
  taskid_ = value;
}

// optional uint64 cid = 2;
inline bool FinishTaskEvent::has_cid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FinishTaskEvent::set_has_cid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FinishTaskEvent::clear_has_cid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FinishTaskEvent::clear_cid() {
  cid_ = GOOGLE_ULONGLONG(0);
  clear_has_cid();
}
inline ::google::protobuf::uint64 FinishTaskEvent::cid() const {
  return cid_;
}
inline void FinishTaskEvent::set_cid(::google::protobuf::uint64 value) {
  set_has_cid();
  cid_ = value;
}

// optional uint32 taskType = 3;
inline bool FinishTaskEvent::has_tasktype() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void FinishTaskEvent::set_has_tasktype() {
  _has_bits_[0] |= 0x00000004u;
}
inline void FinishTaskEvent::clear_has_tasktype() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void FinishTaskEvent::clear_tasktype() {
  tasktype_ = 0u;
  clear_has_tasktype();
}
inline ::google::protobuf::uint32 FinishTaskEvent::tasktype() const {
  return tasktype_;
}
inline void FinishTaskEvent::set_tasktype(::google::protobuf::uint32 value) {
  set_has_tasktype();
  tasktype_ = value;
}

// optional int32 mapGroup = 4;
inline bool FinishTaskEvent::has_mapgroup() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void FinishTaskEvent::set_has_mapgroup() {
  _has_bits_[0] |= 0x00000008u;
}
inline void FinishTaskEvent::clear_has_mapgroup() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void FinishTaskEvent::clear_mapgroup() {
  mapgroup_ = 0;
  clear_has_mapgroup();
}
inline ::google::protobuf::int32 FinishTaskEvent::mapgroup() const {
  return mapgroup_;
}
inline void FinishTaskEvent::set_mapgroup(::google::protobuf::int32 value) {
  set_has_mapgroup();
  mapgroup_ = value;
}

// -------------------------------------------------------------------

// LeaveSceneEvent

// optional uint64 cid = 1;
inline bool LeaveSceneEvent::has_cid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LeaveSceneEvent::set_has_cid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LeaveSceneEvent::clear_has_cid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LeaveSceneEvent::clear_cid() {
  cid_ = GOOGLE_ULONGLONG(0);
  clear_has_cid();
}
inline ::google::protobuf::uint64 LeaveSceneEvent::cid() const {
  return cid_;
}
inline void LeaveSceneEvent::set_cid(::google::protobuf::uint64 value) {
  set_has_cid();
  cid_ = value;
}

// optional uint64 sceneid = 2;
inline bool LeaveSceneEvent::has_sceneid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LeaveSceneEvent::set_has_sceneid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LeaveSceneEvent::clear_has_sceneid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LeaveSceneEvent::clear_sceneid() {
  sceneid_ = GOOGLE_ULONGLONG(0);
  clear_has_sceneid();
}
inline ::google::protobuf::uint64 LeaveSceneEvent::sceneid() const {
  return sceneid_;
}
inline void LeaveSceneEvent::set_sceneid(::google::protobuf::uint64 value) {
  set_has_sceneid();
  sceneid_ = value;
}

// optional uint64 mapid = 3;
inline bool LeaveSceneEvent::has_mapid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LeaveSceneEvent::set_has_mapid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LeaveSceneEvent::clear_has_mapid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LeaveSceneEvent::clear_mapid() {
  mapid_ = GOOGLE_ULONGLONG(0);
  clear_has_mapid();
}
inline ::google::protobuf::uint64 LeaveSceneEvent::mapid() const {
  return mapid_;
}
inline void LeaveSceneEvent::set_mapid(::google::protobuf::uint64 value) {
  set_has_mapid();
  mapid_ = value;
}

// -------------------------------------------------------------------

// ChgSceneEvent

// optional uint64 cid = 1;
inline bool ChgSceneEvent::has_cid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ChgSceneEvent::set_has_cid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ChgSceneEvent::clear_has_cid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ChgSceneEvent::clear_cid() {
  cid_ = GOOGLE_ULONGLONG(0);
  clear_has_cid();
}
inline ::google::protobuf::uint64 ChgSceneEvent::cid() const {
  return cid_;
}
inline void ChgSceneEvent::set_cid(::google::protobuf::uint64 value) {
  set_has_cid();
  cid_ = value;
}

// optional bool enterflag = 2;
inline bool ChgSceneEvent::has_enterflag() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ChgSceneEvent::set_has_enterflag() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ChgSceneEvent::clear_has_enterflag() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ChgSceneEvent::clear_enterflag() {
  enterflag_ = false;
  clear_has_enterflag();
}
inline bool ChgSceneEvent::enterflag() const {
  return enterflag_;
}
inline void ChgSceneEvent::set_enterflag(bool value) {
  set_has_enterflag();
  enterflag_ = value;
}

// -------------------------------------------------------------------

// EnterSceneEvent

// optional uint64 cid = 1;
inline bool EnterSceneEvent::has_cid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EnterSceneEvent::set_has_cid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EnterSceneEvent::clear_has_cid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EnterSceneEvent::clear_cid() {
  cid_ = GOOGLE_ULONGLONG(0);
  clear_has_cid();
}
inline ::google::protobuf::uint64 EnterSceneEvent::cid() const {
  return cid_;
}
inline void EnterSceneEvent::set_cid(::google::protobuf::uint64 value) {
  set_has_cid();
  cid_ = value;
}

// optional uint32 uid = 2;
inline bool EnterSceneEvent::has_uid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void EnterSceneEvent::set_has_uid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void EnterSceneEvent::clear_has_uid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void EnterSceneEvent::clear_uid() {
  uid_ = 0u;
  clear_has_uid();
}
inline ::google::protobuf::uint32 EnterSceneEvent::uid() const {
  return uid_;
}
inline void EnterSceneEvent::set_uid(::google::protobuf::uint32 value) {
  set_has_uid();
  uid_ = value;
}

// optional uint64 clientid = 3;
inline bool EnterSceneEvent::has_clientid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void EnterSceneEvent::set_has_clientid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void EnterSceneEvent::clear_has_clientid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void EnterSceneEvent::clear_clientid() {
  clientid_ = GOOGLE_ULONGLONG(0);
  clear_has_clientid();
}
inline ::google::protobuf::uint64 EnterSceneEvent::clientid() const {
  return clientid_;
}
inline void EnterSceneEvent::set_clientid(::google::protobuf::uint64 value) {
  set_has_clientid();
  clientid_ = value;
}

// optional uint64 mapid = 4;
inline bool EnterSceneEvent::has_mapid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void EnterSceneEvent::set_has_mapid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void EnterSceneEvent::clear_has_mapid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void EnterSceneEvent::clear_mapid() {
  mapid_ = GOOGLE_ULONGLONG(0);
  clear_has_mapid();
}
inline ::google::protobuf::uint64 EnterSceneEvent::mapid() const {
  return mapid_;
}
inline void EnterSceneEvent::set_mapid(::google::protobuf::uint64 value) {
  set_has_mapid();
  mapid_ = value;
}

// optional int32 x = 5;
inline bool EnterSceneEvent::has_x() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void EnterSceneEvent::set_has_x() {
  _has_bits_[0] |= 0x00000010u;
}
inline void EnterSceneEvent::clear_has_x() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void EnterSceneEvent::clear_x() {
  x_ = 0;
  clear_has_x();
}
inline ::google::protobuf::int32 EnterSceneEvent::x() const {
  return x_;
}
inline void EnterSceneEvent::set_x(::google::protobuf::int32 value) {
  set_has_x();
  x_ = value;
}

// optional int32 y = 6;
inline bool EnterSceneEvent::has_y() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void EnterSceneEvent::set_has_y() {
  _has_bits_[0] |= 0x00000020u;
}
inline void EnterSceneEvent::clear_has_y() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void EnterSceneEvent::clear_y() {
  y_ = 0;
  clear_has_y();
}
inline ::google::protobuf::int32 EnterSceneEvent::y() const {
  return y_;
}
inline void EnterSceneEvent::set_y(::google::protobuf::int32 value) {
  set_has_y();
  y_ = value;
}

// optional int32 z = 7;
inline bool EnterSceneEvent::has_z() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void EnterSceneEvent::set_has_z() {
  _has_bits_[0] |= 0x00000040u;
}
inline void EnterSceneEvent::clear_has_z() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void EnterSceneEvent::clear_z() {
  z_ = 0;
  clear_has_z();
}
inline ::google::protobuf::int32 EnterSceneEvent::z() const {
  return z_;
}
inline void EnterSceneEvent::set_z(::google::protobuf::int32 value) {
  set_has_z();
  z_ = value;
}

// -------------------------------------------------------------------

// SyncScenePos

// optional uint64 map_id = 1;
inline bool SyncScenePos::has_map_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SyncScenePos::set_has_map_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SyncScenePos::clear_has_map_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SyncScenePos::clear_map_id() {
  map_id_ = GOOGLE_ULONGLONG(0);
  clear_has_map_id();
}
inline ::google::protobuf::uint64 SyncScenePos::map_id() const {
  return map_id_;
}
inline void SyncScenePos::set_map_id(::google::protobuf::uint64 value) {
  set_has_map_id();
  map_id_ = value;
}

// optional uint64 scene_id = 2;
inline bool SyncScenePos::has_scene_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SyncScenePos::set_has_scene_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SyncScenePos::clear_has_scene_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SyncScenePos::clear_scene_id() {
  scene_id_ = GOOGLE_ULONGLONG(0);
  clear_has_scene_id();
}
inline ::google::protobuf::uint64 SyncScenePos::scene_id() const {
  return scene_id_;
}
inline void SyncScenePos::set_scene_id(::google::protobuf::uint64 value) {
  set_has_scene_id();
  scene_id_ = value;
}

// optional .proto_ff.Vector3PB pos = 3;
inline bool SyncScenePos::has_pos() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SyncScenePos::set_has_pos() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SyncScenePos::clear_has_pos() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SyncScenePos::clear_pos() {
  if (pos_ != NULL) pos_->::proto_ff::Vector3PB::Clear();
  clear_has_pos();
}
inline const ::proto_ff::Vector3PB& SyncScenePos::pos() const {
  return pos_ != NULL ? *pos_ : *default_instance_->pos_;
}
inline ::proto_ff::Vector3PB* SyncScenePos::mutable_pos() {
  set_has_pos();
  if (pos_ == NULL) pos_ = new ::proto_ff::Vector3PB;
  return pos_;
}
inline ::proto_ff::Vector3PB* SyncScenePos::release_pos() {
  clear_has_pos();
  ::proto_ff::Vector3PB* temp = pos_;
  pos_ = NULL;
  return temp;
}
inline void SyncScenePos::set_allocated_pos(::proto_ff::Vector3PB* pos) {
  delete pos_;
  pos_ = pos;
  if (pos) {
    set_has_pos();
  } else {
    clear_has_pos();
  }
}

// -------------------------------------------------------------------

// SyncSceneState

// optional uint32 last_state = 1;
inline bool SyncSceneState::has_last_state() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SyncSceneState::set_has_last_state() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SyncSceneState::clear_has_last_state() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SyncSceneState::clear_last_state() {
  last_state_ = 0u;
  clear_has_last_state();
}
inline ::google::protobuf::uint32 SyncSceneState::last_state() const {
  return last_state_;
}
inline void SyncSceneState::set_last_state(::google::protobuf::uint32 value) {
  set_has_last_state();
  last_state_ = value;
}

// optional uint32 cur_state = 2;
inline bool SyncSceneState::has_cur_state() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SyncSceneState::set_has_cur_state() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SyncSceneState::clear_has_cur_state() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SyncSceneState::clear_cur_state() {
  cur_state_ = 0u;
  clear_has_cur_state();
}
inline ::google::protobuf::uint32 SyncSceneState::cur_state() const {
  return cur_state_;
}
inline void SyncSceneState::set_cur_state(::google::protobuf::uint32 value) {
  set_has_cur_state();
  cur_state_ = value;
}

// -------------------------------------------------------------------

// GrowPartActiveEvent

// optional int32 type = 1;
inline bool GrowPartActiveEvent::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GrowPartActiveEvent::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GrowPartActiveEvent::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GrowPartActiveEvent::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 GrowPartActiveEvent::type() const {
  return type_;
}
inline void GrowPartActiveEvent::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// optional int32 id = 2;
inline bool GrowPartActiveEvent::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GrowPartActiveEvent::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GrowPartActiveEvent::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GrowPartActiveEvent::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 GrowPartActiveEvent::id() const {
  return id_;
}
inline void GrowPartActiveEvent::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// optional int32 curLv = 3;
inline bool GrowPartActiveEvent::has_curlv() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GrowPartActiveEvent::set_has_curlv() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GrowPartActiveEvent::clear_has_curlv() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GrowPartActiveEvent::clear_curlv() {
  curlv_ = 0;
  clear_has_curlv();
}
inline ::google::protobuf::int32 GrowPartActiveEvent::curlv() const {
  return curlv_;
}
inline void GrowPartActiveEvent::set_curlv(::google::protobuf::int32 value) {
  set_has_curlv();
  curlv_ = value;
}

// -------------------------------------------------------------------

// GrowPartLvUpEvent

// optional int32 type = 1;
inline bool GrowPartLvUpEvent::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GrowPartLvUpEvent::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GrowPartLvUpEvent::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GrowPartLvUpEvent::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 GrowPartLvUpEvent::type() const {
  return type_;
}
inline void GrowPartLvUpEvent::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// optional int32 id = 2;
inline bool GrowPartLvUpEvent::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GrowPartLvUpEvent::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GrowPartLvUpEvent::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GrowPartLvUpEvent::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 GrowPartLvUpEvent::id() const {
  return id_;
}
inline void GrowPartLvUpEvent::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// optional int32 curLv = 3;
inline bool GrowPartLvUpEvent::has_curlv() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GrowPartLvUpEvent::set_has_curlv() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GrowPartLvUpEvent::clear_has_curlv() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GrowPartLvUpEvent::clear_curlv() {
  curlv_ = 0;
  clear_has_curlv();
}
inline ::google::protobuf::int32 GrowPartLvUpEvent::curlv() const {
  return curlv_;
}
inline void GrowPartLvUpEvent::set_curlv(::google::protobuf::int32 value) {
  set_has_curlv();
  curlv_ = value;
}

// -------------------------------------------------------------------

// GrowPartDressEvent

// optional int32 type = 1;
inline bool GrowPartDressEvent::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GrowPartDressEvent::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GrowPartDressEvent::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GrowPartDressEvent::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 GrowPartDressEvent::type() const {
  return type_;
}
inline void GrowPartDressEvent::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// optional int32 id = 2;
inline bool GrowPartDressEvent::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GrowPartDressEvent::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GrowPartDressEvent::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GrowPartDressEvent::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 GrowPartDressEvent::id() const {
  return id_;
}
inline void GrowPartDressEvent::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// optional int32 curLv = 3;
inline bool GrowPartDressEvent::has_curlv() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GrowPartDressEvent::set_has_curlv() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GrowPartDressEvent::clear_has_curlv() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GrowPartDressEvent::clear_curlv() {
  curlv_ = 0;
  clear_has_curlv();
}
inline ::google::protobuf::int32 GrowPartDressEvent::curlv() const {
  return curlv_;
}
inline void GrowPartDressEvent::set_curlv(::google::protobuf::int32 value) {
  set_has_curlv();
  curlv_ = value;
}

// -------------------------------------------------------------------

// ChangeFacadeEvent

// optional uint64 cid = 1;
inline bool ChangeFacadeEvent::has_cid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ChangeFacadeEvent::set_has_cid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ChangeFacadeEvent::clear_has_cid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ChangeFacadeEvent::clear_cid() {
  cid_ = GOOGLE_ULONGLONG(0);
  clear_has_cid();
}
inline ::google::protobuf::uint64 ChangeFacadeEvent::cid() const {
  return cid_;
}
inline void ChangeFacadeEvent::set_cid(::google::protobuf::uint64 value) {
  set_has_cid();
  cid_ = value;
}

// optional uint64 wingId = 2;
inline bool ChangeFacadeEvent::has_wingid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ChangeFacadeEvent::set_has_wingid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ChangeFacadeEvent::clear_has_wingid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ChangeFacadeEvent::clear_wingid() {
  wingid_ = GOOGLE_ULONGLONG(0);
  clear_has_wingid();
}
inline ::google::protobuf::uint64 ChangeFacadeEvent::wingid() const {
  return wingid_;
}
inline void ChangeFacadeEvent::set_wingid(::google::protobuf::uint64 value) {
  set_has_wingid();
  wingid_ = value;
}

// optional uint64 fashionClothesId = 3;
inline bool ChangeFacadeEvent::has_fashionclothesid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ChangeFacadeEvent::set_has_fashionclothesid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ChangeFacadeEvent::clear_has_fashionclothesid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ChangeFacadeEvent::clear_fashionclothesid() {
  fashionclothesid_ = GOOGLE_ULONGLONG(0);
  clear_has_fashionclothesid();
}
inline ::google::protobuf::uint64 ChangeFacadeEvent::fashionclothesid() const {
  return fashionclothesid_;
}
inline void ChangeFacadeEvent::set_fashionclothesid(::google::protobuf::uint64 value) {
  set_has_fashionclothesid();
  fashionclothesid_ = value;
}

// optional uint64 fashionWeaponId = 4;
inline bool ChangeFacadeEvent::has_fashionweaponid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ChangeFacadeEvent::set_has_fashionweaponid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ChangeFacadeEvent::clear_has_fashionweaponid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ChangeFacadeEvent::clear_fashionweaponid() {
  fashionweaponid_ = GOOGLE_ULONGLONG(0);
  clear_has_fashionweaponid();
}
inline ::google::protobuf::uint64 ChangeFacadeEvent::fashionweaponid() const {
  return fashionweaponid_;
}
inline void ChangeFacadeEvent::set_fashionweaponid(::google::protobuf::uint64 value) {
  set_has_fashionweaponid();
  fashionweaponid_ = value;
}

// optional uint64 occupationId = 5;
inline bool ChangeFacadeEvent::has_occupationid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ChangeFacadeEvent::set_has_occupationid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ChangeFacadeEvent::clear_has_occupationid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ChangeFacadeEvent::clear_occupationid() {
  occupationid_ = GOOGLE_ULONGLONG(0);
  clear_has_occupationid();
}
inline ::google::protobuf::uint64 ChangeFacadeEvent::occupationid() const {
  return occupationid_;
}
inline void ChangeFacadeEvent::set_occupationid(::google::protobuf::uint64 value) {
  set_has_occupationid();
  occupationid_ = value;
}

// optional uint64 mountId = 6;
inline bool ChangeFacadeEvent::has_mountid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ChangeFacadeEvent::set_has_mountid() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ChangeFacadeEvent::clear_has_mountid() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ChangeFacadeEvent::clear_mountid() {
  mountid_ = GOOGLE_ULONGLONG(0);
  clear_has_mountid();
}
inline ::google::protobuf::uint64 ChangeFacadeEvent::mountid() const {
  return mountid_;
}
inline void ChangeFacadeEvent::set_mountid(::google::protobuf::uint64 value) {
  set_has_mountid();
  mountid_ = value;
}

// optional uint64 treasure_id = 7;
inline bool ChangeFacadeEvent::has_treasure_id() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void ChangeFacadeEvent::set_has_treasure_id() {
  _has_bits_[0] |= 0x00000040u;
}
inline void ChangeFacadeEvent::clear_has_treasure_id() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void ChangeFacadeEvent::clear_treasure_id() {
  treasure_id_ = GOOGLE_ULONGLONG(0);
  clear_has_treasure_id();
}
inline ::google::protobuf::uint64 ChangeFacadeEvent::treasure_id() const {
  return treasure_id_;
}
inline void ChangeFacadeEvent::set_treasure_id(::google::protobuf::uint64 value) {
  set_has_treasure_id();
  treasure_id_ = value;
}

// optional int32 treasure_type = 8;
inline bool ChangeFacadeEvent::has_treasure_type() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void ChangeFacadeEvent::set_has_treasure_type() {
  _has_bits_[0] |= 0x00000080u;
}
inline void ChangeFacadeEvent::clear_has_treasure_type() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void ChangeFacadeEvent::clear_treasure_type() {
  treasure_type_ = 0;
  clear_has_treasure_type();
}
inline ::google::protobuf::int32 ChangeFacadeEvent::treasure_type() const {
  return treasure_type_;
}
inline void ChangeFacadeEvent::set_treasure_type(::google::protobuf::int32 value) {
  set_has_treasure_type();
  treasure_type_ = value;
}

// optional uint64 artifact_id = 9;
inline bool ChangeFacadeEvent::has_artifact_id() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void ChangeFacadeEvent::set_has_artifact_id() {
  _has_bits_[0] |= 0x00000100u;
}
inline void ChangeFacadeEvent::clear_has_artifact_id() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void ChangeFacadeEvent::clear_artifact_id() {
  artifact_id_ = GOOGLE_ULONGLONG(0);
  clear_has_artifact_id();
}
inline ::google::protobuf::uint64 ChangeFacadeEvent::artifact_id() const {
  return artifact_id_;
}
inline void ChangeFacadeEvent::set_artifact_id(::google::protobuf::uint64 value) {
  set_has_artifact_id();
  artifact_id_ = value;
}

// optional uint64 head_id = 10;
inline bool ChangeFacadeEvent::has_head_id() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void ChangeFacadeEvent::set_has_head_id() {
  _has_bits_[0] |= 0x00000200u;
}
inline void ChangeFacadeEvent::clear_has_head_id() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void ChangeFacadeEvent::clear_head_id() {
  head_id_ = GOOGLE_ULONGLONG(0);
  clear_has_head_id();
}
inline ::google::protobuf::uint64 ChangeFacadeEvent::head_id() const {
  return head_id_;
}
inline void ChangeFacadeEvent::set_head_id(::google::protobuf::uint64 value) {
  set_has_head_id();
  head_id_ = value;
}

// optional uint64 frame_id = 11;
inline bool ChangeFacadeEvent::has_frame_id() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void ChangeFacadeEvent::set_has_frame_id() {
  _has_bits_[0] |= 0x00000400u;
}
inline void ChangeFacadeEvent::clear_has_frame_id() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void ChangeFacadeEvent::clear_frame_id() {
  frame_id_ = GOOGLE_ULONGLONG(0);
  clear_has_frame_id();
}
inline ::google::protobuf::uint64 ChangeFacadeEvent::frame_id() const {
  return frame_id_;
}
inline void ChangeFacadeEvent::set_frame_id(::google::protobuf::uint64 value) {
  set_has_frame_id();
  frame_id_ = value;
}

// optional uint64 bubble_id = 12;
inline bool ChangeFacadeEvent::has_bubble_id() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void ChangeFacadeEvent::set_has_bubble_id() {
  _has_bits_[0] |= 0x00000800u;
}
inline void ChangeFacadeEvent::clear_has_bubble_id() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void ChangeFacadeEvent::clear_bubble_id() {
  bubble_id_ = GOOGLE_ULONGLONG(0);
  clear_has_bubble_id();
}
inline ::google::protobuf::uint64 ChangeFacadeEvent::bubble_id() const {
  return bubble_id_;
}
inline void ChangeFacadeEvent::set_bubble_id(::google::protobuf::uint64 value) {
  set_has_bubble_id();
  bubble_id_ = value;
}

// -------------------------------------------------------------------

// PayEvent

// optional uint32 payIndex = 1;
inline bool PayEvent::has_payindex() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PayEvent::set_has_payindex() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PayEvent::clear_has_payindex() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PayEvent::clear_payindex() {
  payindex_ = 0u;
  clear_has_payindex();
}
inline ::google::protobuf::uint32 PayEvent::payindex() const {
  return payindex_;
}
inline void PayEvent::set_payindex(::google::protobuf::uint32 value) {
  set_has_payindex();
  payindex_ = value;
}

// optional uint32 money = 2;
inline bool PayEvent::has_money() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PayEvent::set_has_money() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PayEvent::clear_has_money() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PayEvent::clear_money() {
  money_ = 0u;
  clear_has_money();
}
inline ::google::protobuf::uint32 PayEvent::money() const {
  return money_;
}
inline void PayEvent::set_money(::google::protobuf::uint32 value) {
  set_has_money();
  money_ = value;
}

// optional uint32 price = 3;
inline bool PayEvent::has_price() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PayEvent::set_has_price() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PayEvent::clear_has_price() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PayEvent::clear_price() {
  price_ = 0u;
  clear_has_price();
}
inline ::google::protobuf::uint32 PayEvent::price() const {
  return price_;
}
inline void PayEvent::set_price(::google::protobuf::uint32 value) {
  set_has_price();
  price_ = value;
}

// optional uint32 type = 4;
inline bool PayEvent::has_type() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PayEvent::set_has_type() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PayEvent::clear_has_type() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PayEvent::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 PayEvent::type() const {
  return type_;
}
inline void PayEvent::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
}

// optional uint32 quantity = 5;
inline bool PayEvent::has_quantity() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PayEvent::set_has_quantity() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PayEvent::clear_has_quantity() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PayEvent::clear_quantity() {
  quantity_ = 0u;
  clear_has_quantity();
}
inline ::google::protobuf::uint32 PayEvent::quantity() const {
  return quantity_;
}
inline void PayEvent::set_quantity(::google::protobuf::uint32 value) {
  set_has_quantity();
  quantity_ = value;
}

// optional bool indexFirst = 6;
inline bool PayEvent::has_indexfirst() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void PayEvent::set_has_indexfirst() {
  _has_bits_[0] |= 0x00000020u;
}
inline void PayEvent::clear_has_indexfirst() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void PayEvent::clear_indexfirst() {
  indexfirst_ = false;
  clear_has_indexfirst();
}
inline bool PayEvent::indexfirst() const {
  return indexfirst_;
}
inline void PayEvent::set_indexfirst(bool value) {
  set_has_indexfirst();
  indexfirst_ = value;
}

// optional bool allFirst = 7;
inline bool PayEvent::has_allfirst() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void PayEvent::set_has_allfirst() {
  _has_bits_[0] |= 0x00000040u;
}
inline void PayEvent::clear_has_allfirst() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void PayEvent::clear_allfirst() {
  allfirst_ = false;
  clear_has_allfirst();
}
inline bool PayEvent::allfirst() const {
  return allfirst_;
}
inline void PayEvent::set_allfirst(bool value) {
  set_has_allfirst();
  allfirst_ = value;
}

// optional uint32 chanid = 8;
inline bool PayEvent::has_chanid() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void PayEvent::set_has_chanid() {
  _has_bits_[0] |= 0x00000080u;
}
inline void PayEvent::clear_has_chanid() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void PayEvent::clear_chanid() {
  chanid_ = 0u;
  clear_has_chanid();
}
inline ::google::protobuf::uint32 PayEvent::chanid() const {
  return chanid_;
}
inline void PayEvent::set_chanid(::google::protobuf::uint32 value) {
  set_has_chanid();
  chanid_ = value;
}

// optional string productid = 9;
inline bool PayEvent::has_productid() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void PayEvent::set_has_productid() {
  _has_bits_[0] |= 0x00000100u;
}
inline void PayEvent::clear_has_productid() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void PayEvent::clear_productid() {
  if (productid_ != &::google::protobuf::internal::kEmptyString) {
    productid_->clear();
  }
  clear_has_productid();
}
inline const ::std::string& PayEvent::productid() const {
  return *productid_;
}
inline void PayEvent::set_productid(const ::std::string& value) {
  set_has_productid();
  if (productid_ == &::google::protobuf::internal::kEmptyString) {
    productid_ = new ::std::string;
  }
  productid_->assign(value);
}
inline void PayEvent::set_productid(const char* value) {
  set_has_productid();
  if (productid_ == &::google::protobuf::internal::kEmptyString) {
    productid_ = new ::std::string;
  }
  productid_->assign(value);
}
inline void PayEvent::set_productid(const char* value, size_t size) {
  set_has_productid();
  if (productid_ == &::google::protobuf::internal::kEmptyString) {
    productid_ = new ::std::string;
  }
  productid_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PayEvent::mutable_productid() {
  set_has_productid();
  if (productid_ == &::google::protobuf::internal::kEmptyString) {
    productid_ = new ::std::string;
  }
  return productid_;
}
inline ::std::string* PayEvent::release_productid() {
  clear_has_productid();
  if (productid_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = productid_;
    productid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void PayEvent::set_allocated_productid(::std::string* productid) {
  if (productid_ != &::google::protobuf::internal::kEmptyString) {
    delete productid_;
  }
  if (productid) {
    set_has_productid();
    productid_ = productid;
  } else {
    clear_has_productid();
    productid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// PassDupEvent

// optional uint64 dupId = 1;
inline bool PassDupEvent::has_dupid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PassDupEvent::set_has_dupid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PassDupEvent::clear_has_dupid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PassDupEvent::clear_dupid() {
  dupid_ = GOOGLE_ULONGLONG(0);
  clear_has_dupid();
}
inline ::google::protobuf::uint64 PassDupEvent::dupid() const {
  return dupid_;
}
inline void PassDupEvent::set_dupid(::google::protobuf::uint64 value) {
  set_has_dupid();
  dupid_ = value;
}

// optional uint64 groupId = 2;
inline bool PassDupEvent::has_groupid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PassDupEvent::set_has_groupid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PassDupEvent::clear_has_groupid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PassDupEvent::clear_groupid() {
  groupid_ = GOOGLE_ULONGLONG(0);
  clear_has_groupid();
}
inline ::google::protobuf::uint64 PassDupEvent::groupid() const {
  return groupid_;
}
inline void PassDupEvent::set_groupid(::google::protobuf::uint64 value) {
  set_has_groupid();
  groupid_ = value;
}

// optional uint32 star = 3;
inline bool PassDupEvent::has_star() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PassDupEvent::set_has_star() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PassDupEvent::clear_has_star() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PassDupEvent::clear_star() {
  star_ = 0u;
  clear_has_star();
}
inline ::google::protobuf::uint32 PassDupEvent::star() const {
  return star_;
}
inline void PassDupEvent::set_star(::google::protobuf::uint32 value) {
  set_has_star();
  star_ = value;
}

// optional uint32 zid = 4;
inline bool PassDupEvent::has_zid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PassDupEvent::set_has_zid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PassDupEvent::clear_has_zid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PassDupEvent::clear_zid() {
  zid_ = 0u;
  clear_has_zid();
}
inline ::google::protobuf::uint32 PassDupEvent::zid() const {
  return zid_;
}
inline void PassDupEvent::set_zid(::google::protobuf::uint32 value) {
  set_has_zid();
  zid_ = value;
}

// -------------------------------------------------------------------

// DeityFantasyBattleEvent

// optional uint32 num = 1;
inline bool DeityFantasyBattleEvent::has_num() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DeityFantasyBattleEvent::set_has_num() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DeityFantasyBattleEvent::clear_has_num() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DeityFantasyBattleEvent::clear_num() {
  num_ = 0u;
  clear_has_num();
}
inline ::google::protobuf::uint32 DeityFantasyBattleEvent::num() const {
  return num_;
}
inline void DeityFantasyBattleEvent::set_num(::google::protobuf::uint32 value) {
  set_has_num();
  num_ = value;
}

// -------------------------------------------------------------------

// DeityActiveEvent

// optional int64 id = 1;
inline bool DeityActiveEvent::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DeityActiveEvent::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DeityActiveEvent::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DeityActiveEvent::clear_id() {
  id_ = GOOGLE_LONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::int64 DeityActiveEvent::id() const {
  return id_;
}
inline void DeityActiveEvent::set_id(::google::protobuf::int64 value) {
  set_has_id();
  id_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto_ff

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_proto_5fsvr_5fevent_2eproto__INCLUDED
