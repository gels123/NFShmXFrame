// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Scene.proto

#ifndef PROTOBUF_Scene_2eproto__INCLUDED
#define PROTOBUF_Scene_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "yd_fieldoptions.pb.h"
#include "common_logic.pb.h"
#include "Com.pb.h"
// @@protoc_insertion_point(includes)

namespace proto_ff {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_Scene_2eproto();
void protobuf_AssignDesc_Scene_2eproto();
void protobuf_ShutdownFile_Scene_2eproto();

class CreateSceneParamProto;
class SceneTransParam;
class PlayerTransParam;
class CreatureTransParam;
class NotifyLoadMap;
class TransSceneReq;
class TransSceneRsp;
class LoadMapFinishReq;
class CorpseInfo;
class NotifySceneCorpseInfoRsp;
class NotifySceneDriveRsp;
class CenterCreateSceneReq;
class CenterCreateSceneRsp;
class SCAddNewScene;
class SCDelScene;
class NotifyLogicSceneClose;
class LogicCreatureTransSceneReq;
class CenterCreatureTransSceneResultRsp;
class CenterCreatureTransSceneSuccessRsp;
class NotifyRoleEnterScene;
class NotifyRoleChgLogic;

// ===================================================================

class CreateSceneParamProto : public ::google::protobuf::Message {
 public:
  CreateSceneParamProto();
  virtual ~CreateSceneParamProto();

  CreateSceneParamProto(const CreateSceneParamProto& from);

  inline CreateSceneParamProto& operator=(const CreateSceneParamProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CreateSceneParamProto& default_instance();

  void Swap(CreateSceneParamProto* other);

  // implements Message ----------------------------------------------

  CreateSceneParamProto* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CreateSceneParamProto& from);
  void MergeFrom(const CreateSceneParamProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 param_type = 1;
  inline bool has_param_type() const;
  inline void clear_param_type();
  static const int kParamTypeFieldNumber = 1;
  inline ::google::protobuf::int32 param_type() const;
  inline void set_param_type(::google::protobuf::int32 value);

  // required uint32 zid = 2;
  inline bool has_zid() const;
  inline void clear_zid();
  static const int kZidFieldNumber = 2;
  inline ::google::protobuf::uint32 zid() const;
  inline void set_zid(::google::protobuf::uint32 value);

  // optional uint64 cid = 3;
  inline bool has_cid() const;
  inline void clear_cid();
  static const int kCidFieldNumber = 3;
  inline ::google::protobuf::uint64 cid() const;
  inline void set_cid(::google::protobuf::uint64 value);

  // optional uint64 dup_id = 4;
  inline bool has_dup_id() const;
  inline void clear_dup_id();
  static const int kDupIdFieldNumber = 4;
  inline ::google::protobuf::uint64 dup_id() const;
  inline void set_dup_id(::google::protobuf::uint64 value);

  // optional int32 key_type = 5;
  inline bool has_key_type() const;
  inline void clear_key_type();
  static const int kKeyTypeFieldNumber = 5;
  inline ::google::protobuf::int32 key_type() const;
  inline void set_key_type(::google::protobuf::int32 value);

  // optional uint64 key_value = 6;
  inline bool has_key_value() const;
  inline void clear_key_value();
  static const int kKeyValueFieldNumber = 6;
  inline ::google::protobuf::uint64 key_value() const;
  inline void set_key_value(::google::protobuf::uint64 value);

  // optional int32 alive_time_sec = 7;
  inline bool has_alive_time_sec() const;
  inline void clear_alive_time_sec();
  static const int kAliveTimeSecFieldNumber = 7;
  inline ::google::protobuf::int32 alive_time_sec() const;
  inline void set_alive_time_sec(::google::protobuf::int32 value);

  // optional int32 mergenum = 8;
  inline bool has_mergenum() const;
  inline void clear_mergenum();
  static const int kMergenumFieldNumber = 8;
  inline ::google::protobuf::int32 mergenum() const;
  inline void set_mergenum(::google::protobuf::int32 value);

  // optional int32 teamid = 9;
  inline bool has_teamid() const;
  inline void clear_teamid();
  static const int kTeamidFieldNumber = 9;
  inline ::google::protobuf::int32 teamid() const;
  inline void set_teamid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.CreateSceneParamProto)
 private:
  inline void set_has_param_type();
  inline void clear_has_param_type();
  inline void set_has_zid();
  inline void clear_has_zid();
  inline void set_has_cid();
  inline void clear_has_cid();
  inline void set_has_dup_id();
  inline void clear_has_dup_id();
  inline void set_has_key_type();
  inline void clear_has_key_type();
  inline void set_has_key_value();
  inline void clear_has_key_value();
  inline void set_has_alive_time_sec();
  inline void clear_has_alive_time_sec();
  inline void set_has_mergenum();
  inline void clear_has_mergenum();
  inline void set_has_teamid();
  inline void clear_has_teamid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 param_type_;
  ::google::protobuf::uint32 zid_;
  ::google::protobuf::uint64 cid_;
  ::google::protobuf::uint64 dup_id_;
  ::google::protobuf::uint64 key_value_;
  ::google::protobuf::int32 key_type_;
  ::google::protobuf::int32 alive_time_sec_;
  ::google::protobuf::int32 mergenum_;
  ::google::protobuf::int32 teamid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(9 + 31) / 32];

  friend void  protobuf_AddDesc_Scene_2eproto();
  friend void protobuf_AssignDesc_Scene_2eproto();
  friend void protobuf_ShutdownFile_Scene_2eproto();

  void InitAsDefaultInstance();
  static CreateSceneParamProto* default_instance_;
};
// -------------------------------------------------------------------

class SceneTransParam : public ::google::protobuf::Message {
 public:
  SceneTransParam();
  virtual ~SceneTransParam();

  SceneTransParam(const SceneTransParam& from);

  inline SceneTransParam& operator=(const SceneTransParam& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SceneTransParam& default_instance();

  void Swap(SceneTransParam* other);

  // implements Message ----------------------------------------------

  SceneTransParam* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SceneTransParam& from);
  void MergeFrom(const SceneTransParam& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 src_map = 1;
  inline bool has_src_map() const;
  inline void clear_src_map();
  static const int kSrcMapFieldNumber = 1;
  inline ::google::protobuf::uint64 src_map() const;
  inline void set_src_map(::google::protobuf::uint64 value);

  // optional int32 trans_type = 2;
  inline bool has_trans_type() const;
  inline void clear_trans_type();
  static const int kTransTypeFieldNumber = 2;
  inline ::google::protobuf::int32 trans_type() const;
  inline void set_trans_type(::google::protobuf::int32 value);

  // optional uint64 trans_val = 3;
  inline bool has_trans_val() const;
  inline void clear_trans_val();
  static const int kTransValFieldNumber = 3;
  inline ::google::protobuf::uint64 trans_val() const;
  inline void set_trans_val(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.SceneTransParam)
 private:
  inline void set_has_src_map();
  inline void clear_has_src_map();
  inline void set_has_trans_type();
  inline void clear_has_trans_type();
  inline void set_has_trans_val();
  inline void clear_has_trans_val();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 src_map_;
  ::google::protobuf::uint64 trans_val_;
  ::google::protobuf::int32 trans_type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_Scene_2eproto();
  friend void protobuf_AssignDesc_Scene_2eproto();
  friend void protobuf_ShutdownFile_Scene_2eproto();

  void InitAsDefaultInstance();
  static SceneTransParam* default_instance_;
};
// -------------------------------------------------------------------

class PlayerTransParam : public ::google::protobuf::Message {
 public:
  PlayerTransParam();
  virtual ~PlayerTransParam();

  PlayerTransParam(const PlayerTransParam& from);

  inline PlayerTransParam& operator=(const PlayerTransParam& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerTransParam& default_instance();

  void Swap(PlayerTransParam* other);

  // implements Message ----------------------------------------------

  PlayerTransParam* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PlayerTransParam& from);
  void MergeFrom(const PlayerTransParam& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 client_id = 1;
  inline bool has_client_id() const;
  inline void clear_client_id();
  static const int kClientIdFieldNumber = 1;
  inline ::google::protobuf::uint32 client_id() const;
  inline void set_client_id(::google::protobuf::uint32 value);

  // required uint64 enter_scene_id = 2;
  inline bool has_enter_scene_id() const;
  inline void clear_enter_scene_id();
  static const int kEnterSceneIdFieldNumber = 2;
  inline ::google::protobuf::uint64 enter_scene_id() const;
  inline void set_enter_scene_id(::google::protobuf::uint64 value);

  // required uint64 enter_map_id = 3;
  inline bool has_enter_map_id() const;
  inline void clear_enter_map_id();
  static const int kEnterMapIdFieldNumber = 3;
  inline ::google::protobuf::uint64 enter_map_id() const;
  inline void set_enter_map_id(::google::protobuf::uint64 value);

  // required float enterposx = 4;
  inline bool has_enterposx() const;
  inline void clear_enterposx();
  static const int kEnterposxFieldNumber = 4;
  inline float enterposx() const;
  inline void set_enterposx(float value);

  // required float enterposy = 5;
  inline bool has_enterposy() const;
  inline void clear_enterposy();
  static const int kEnterposyFieldNumber = 5;
  inline float enterposy() const;
  inline void set_enterposy(float value);

  // required float enterposz = 6;
  inline bool has_enterposz() const;
  inline void clear_enterposz();
  static const int kEnterposzFieldNumber = 6;
  inline float enterposz() const;
  inline void set_enterposz(float value);

  // required uint64 last_scene_id = 7;
  inline bool has_last_scene_id() const;
  inline void clear_last_scene_id();
  static const int kLastSceneIdFieldNumber = 7;
  inline ::google::protobuf::uint64 last_scene_id() const;
  inline void set_last_scene_id(::google::protobuf::uint64 value);

  // required uint64 last_map_id = 8;
  inline bool has_last_map_id() const;
  inline void clear_last_map_id();
  static const int kLastMapIdFieldNumber = 8;
  inline ::google::protobuf::uint64 last_map_id() const;
  inline void set_last_map_id(::google::protobuf::uint64 value);

  // required float lastposx = 9;
  inline bool has_lastposx() const;
  inline void clear_lastposx();
  static const int kLastposxFieldNumber = 9;
  inline float lastposx() const;
  inline void set_lastposx(float value);

  // required float lastposy = 10;
  inline bool has_lastposy() const;
  inline void clear_lastposy();
  static const int kLastposyFieldNumber = 10;
  inline float lastposy() const;
  inline void set_lastposy(float value);

  // required float lastposz = 11;
  inline bool has_lastposz() const;
  inline void clear_lastposz();
  static const int kLastposzFieldNumber = 11;
  inline float lastposz() const;
  inline void set_lastposz(float value);

  // optional uint32 gateId = 12;
  inline bool has_gateid() const;
  inline void clear_gateid();
  static const int kGateIdFieldNumber = 12;
  inline ::google::protobuf::uint32 gateid() const;
  inline void set_gateid(::google::protobuf::uint32 value);

  // optional uint32 channId = 13;
  inline bool has_channid() const;
  inline void clear_channid();
  static const int kChannIdFieldNumber = 13;
  inline ::google::protobuf::uint32 channid() const;
  inline void set_channid(::google::protobuf::uint32 value);

  // optional uint32 uid = 14;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 14;
  inline ::google::protobuf::uint32 uid() const;
  inline void set_uid(::google::protobuf::uint32 value);

  // optional uint32 zid = 15;
  inline bool has_zid() const;
  inline void clear_zid();
  static const int kZidFieldNumber = 15;
  inline ::google::protobuf::uint32 zid() const;
  inline void set_zid(::google::protobuf::uint32 value);

  // optional .proto_ff.LoginSyncProto sync = 16;
  inline bool has_sync() const;
  inline void clear_sync();
  static const int kSyncFieldNumber = 16;
  inline const ::proto_ff::LoginSyncProto& sync() const;
  inline ::proto_ff::LoginSyncProto* mutable_sync();
  inline ::proto_ff::LoginSyncProto* release_sync();
  inline void set_allocated_sync(::proto_ff::LoginSyncProto* sync);

  // optional int32 prof = 17;
  inline bool has_prof() const;
  inline void clear_prof();
  static const int kProfFieldNumber = 17;
  inline ::google::protobuf::int32 prof() const;
  inline void set_prof(::google::protobuf::int32 value);

  // optional int32 last_state = 18;
  inline bool has_last_state() const;
  inline void clear_last_state();
  static const int kLastStateFieldNumber = 18;
  inline ::google::protobuf::int32 last_state() const;
  inline void set_last_state(::google::protobuf::int32 value);

  // optional int32 head_flag = 19;
  inline bool has_head_flag() const;
  inline void clear_head_flag();
  static const int kHeadFlagFieldNumber = 19;
  inline ::google::protobuf::int32 head_flag() const;
  inline void set_head_flag(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.PlayerTransParam)
 private:
  inline void set_has_client_id();
  inline void clear_has_client_id();
  inline void set_has_enter_scene_id();
  inline void clear_has_enter_scene_id();
  inline void set_has_enter_map_id();
  inline void clear_has_enter_map_id();
  inline void set_has_enterposx();
  inline void clear_has_enterposx();
  inline void set_has_enterposy();
  inline void clear_has_enterposy();
  inline void set_has_enterposz();
  inline void clear_has_enterposz();
  inline void set_has_last_scene_id();
  inline void clear_has_last_scene_id();
  inline void set_has_last_map_id();
  inline void clear_has_last_map_id();
  inline void set_has_lastposx();
  inline void clear_has_lastposx();
  inline void set_has_lastposy();
  inline void clear_has_lastposy();
  inline void set_has_lastposz();
  inline void clear_has_lastposz();
  inline void set_has_gateid();
  inline void clear_has_gateid();
  inline void set_has_channid();
  inline void clear_has_channid();
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_zid();
  inline void clear_has_zid();
  inline void set_has_sync();
  inline void clear_has_sync();
  inline void set_has_prof();
  inline void clear_has_prof();
  inline void set_has_last_state();
  inline void clear_has_last_state();
  inline void set_has_head_flag();
  inline void clear_has_head_flag();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 enter_scene_id_;
  ::google::protobuf::uint32 client_id_;
  float enterposx_;
  ::google::protobuf::uint64 enter_map_id_;
  float enterposy_;
  float enterposz_;
  ::google::protobuf::uint64 last_scene_id_;
  ::google::protobuf::uint64 last_map_id_;
  float lastposx_;
  float lastposy_;
  float lastposz_;
  ::google::protobuf::uint32 gateid_;
  ::google::protobuf::uint32 channid_;
  ::google::protobuf::uint32 uid_;
  ::proto_ff::LoginSyncProto* sync_;
  ::google::protobuf::uint32 zid_;
  ::google::protobuf::int32 prof_;
  ::google::protobuf::int32 last_state_;
  ::google::protobuf::int32 head_flag_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(19 + 31) / 32];

  friend void  protobuf_AddDesc_Scene_2eproto();
  friend void protobuf_AssignDesc_Scene_2eproto();
  friend void protobuf_ShutdownFile_Scene_2eproto();

  void InitAsDefaultInstance();
  static PlayerTransParam* default_instance_;
};
// -------------------------------------------------------------------

class CreatureTransParam : public ::google::protobuf::Message {
 public:
  CreatureTransParam();
  virtual ~CreatureTransParam();

  CreatureTransParam(const CreatureTransParam& from);

  inline CreatureTransParam& operator=(const CreatureTransParam& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CreatureTransParam& default_instance();

  void Swap(CreatureTransParam* other);

  // implements Message ----------------------------------------------

  CreatureTransParam* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CreatureTransParam& from);
  void MergeFrom(const CreatureTransParam& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 kind = 1;
  inline bool has_kind() const;
  inline void clear_kind();
  static const int kKindFieldNumber = 1;
  inline ::google::protobuf::int32 kind() const;
  inline void set_kind(::google::protobuf::int32 value);

  // required uint64 cid = 2;
  inline bool has_cid() const;
  inline void clear_cid();
  static const int kCidFieldNumber = 2;
  inline ::google::protobuf::uint64 cid() const;
  inline void set_cid(::google::protobuf::uint64 value);

  // optional .proto_ff.PlayerTransParam player_param = 3;
  inline bool has_player_param() const;
  inline void clear_player_param();
  static const int kPlayerParamFieldNumber = 3;
  inline const ::proto_ff::PlayerTransParam& player_param() const;
  inline ::proto_ff::PlayerTransParam* mutable_player_param();
  inline ::proto_ff::PlayerTransParam* release_player_param();
  inline void set_allocated_player_param(::proto_ff::PlayerTransParam* player_param);

  // optional .proto_ff.SceneTransParam trans_param = 4;
  inline bool has_trans_param() const;
  inline void clear_trans_param();
  static const int kTransParamFieldNumber = 4;
  inline const ::proto_ff::SceneTransParam& trans_param() const;
  inline ::proto_ff::SceneTransParam* mutable_trans_param();
  inline ::proto_ff::SceneTransParam* release_trans_param();
  inline void set_allocated_trans_param(::proto_ff::SceneTransParam* trans_param);

  // @@protoc_insertion_point(class_scope:proto_ff.CreatureTransParam)
 private:
  inline void set_has_kind();
  inline void clear_has_kind();
  inline void set_has_cid();
  inline void clear_has_cid();
  inline void set_has_player_param();
  inline void clear_has_player_param();
  inline void set_has_trans_param();
  inline void clear_has_trans_param();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 cid_;
  ::proto_ff::PlayerTransParam* player_param_;
  ::proto_ff::SceneTransParam* trans_param_;
  ::google::protobuf::int32 kind_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_Scene_2eproto();
  friend void protobuf_AssignDesc_Scene_2eproto();
  friend void protobuf_ShutdownFile_Scene_2eproto();

  void InitAsDefaultInstance();
  static CreatureTransParam* default_instance_;
};
// -------------------------------------------------------------------

class NotifyLoadMap : public ::google::protobuf::Message {
 public:
  NotifyLoadMap();
  virtual ~NotifyLoadMap();

  NotifyLoadMap(const NotifyLoadMap& from);

  inline NotifyLoadMap& operator=(const NotifyLoadMap& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NotifyLoadMap& default_instance();

  void Swap(NotifyLoadMap* other);

  // implements Message ----------------------------------------------

  NotifyLoadMap* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NotifyLoadMap& from);
  void MergeFrom(const NotifyLoadMap& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 mapid = 1;
  inline bool has_mapid() const;
  inline void clear_mapid();
  static const int kMapidFieldNumber = 1;
  inline ::google::protobuf::uint64 mapid() const;
  inline void set_mapid(::google::protobuf::uint64 value);

  // required .proto_ff.Vector3PB pos = 2;
  inline bool has_pos() const;
  inline void clear_pos();
  static const int kPosFieldNumber = 2;
  inline const ::proto_ff::Vector3PB& pos() const;
  inline ::proto_ff::Vector3PB* mutable_pos();
  inline ::proto_ff::Vector3PB* release_pos();
  inline void set_allocated_pos(::proto_ff::Vector3PB* pos);

  // @@protoc_insertion_point(class_scope:proto_ff.NotifyLoadMap)
 private:
  inline void set_has_mapid();
  inline void clear_has_mapid();
  inline void set_has_pos();
  inline void clear_has_pos();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 mapid_;
  ::proto_ff::Vector3PB* pos_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Scene_2eproto();
  friend void protobuf_AssignDesc_Scene_2eproto();
  friend void protobuf_ShutdownFile_Scene_2eproto();

  void InitAsDefaultInstance();
  static NotifyLoadMap* default_instance_;
};
// -------------------------------------------------------------------

class TransSceneReq : public ::google::protobuf::Message {
 public:
  TransSceneReq();
  virtual ~TransSceneReq();

  TransSceneReq(const TransSceneReq& from);

  inline TransSceneReq& operator=(const TransSceneReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TransSceneReq& default_instance();

  void Swap(TransSceneReq* other);

  // implements Message ----------------------------------------------

  TransSceneReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TransSceneReq& from);
  void MergeFrom(const TransSceneReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 dst_mapid = 1;
  inline bool has_dst_mapid() const;
  inline void clear_dst_mapid();
  static const int kDstMapidFieldNumber = 1;
  inline ::google::protobuf::uint64 dst_mapid() const;
  inline void set_dst_mapid(::google::protobuf::uint64 value);

  // optional int32 type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // optional uint64 id = 3;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 3;
  inline ::google::protobuf::uint64 id() const;
  inline void set_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.TransSceneReq)
 private:
  inline void set_has_dst_mapid();
  inline void clear_has_dst_mapid();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 dst_mapid_;
  ::google::protobuf::uint64 id_;
  ::google::protobuf::int32 type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_Scene_2eproto();
  friend void protobuf_AssignDesc_Scene_2eproto();
  friend void protobuf_ShutdownFile_Scene_2eproto();

  void InitAsDefaultInstance();
  static TransSceneReq* default_instance_;
};
// -------------------------------------------------------------------

class TransSceneRsp : public ::google::protobuf::Message {
 public:
  TransSceneRsp();
  virtual ~TransSceneRsp();

  TransSceneRsp(const TransSceneRsp& from);

  inline TransSceneRsp& operator=(const TransSceneRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TransSceneRsp& default_instance();

  void Swap(TransSceneRsp* other);

  // implements Message ----------------------------------------------

  TransSceneRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TransSceneRsp& from);
  void MergeFrom(const TransSceneRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 retcode = 1;
  inline bool has_retcode() const;
  inline void clear_retcode();
  static const int kRetcodeFieldNumber = 1;
  inline ::google::protobuf::int32 retcode() const;
  inline void set_retcode(::google::protobuf::int32 value);

  // optional uint64 mapid = 2;
  inline bool has_mapid() const;
  inline void clear_mapid();
  static const int kMapidFieldNumber = 2;
  inline ::google::protobuf::uint64 mapid() const;
  inline void set_mapid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.TransSceneRsp)
 private:
  inline void set_has_retcode();
  inline void clear_has_retcode();
  inline void set_has_mapid();
  inline void clear_has_mapid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 mapid_;
  ::google::protobuf::int32 retcode_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Scene_2eproto();
  friend void protobuf_AssignDesc_Scene_2eproto();
  friend void protobuf_ShutdownFile_Scene_2eproto();

  void InitAsDefaultInstance();
  static TransSceneRsp* default_instance_;
};
// -------------------------------------------------------------------

class LoadMapFinishReq : public ::google::protobuf::Message {
 public:
  LoadMapFinishReq();
  virtual ~LoadMapFinishReq();

  LoadMapFinishReq(const LoadMapFinishReq& from);

  inline LoadMapFinishReq& operator=(const LoadMapFinishReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LoadMapFinishReq& default_instance();

  void Swap(LoadMapFinishReq* other);

  // implements Message ----------------------------------------------

  LoadMapFinishReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LoadMapFinishReq& from);
  void MergeFrom(const LoadMapFinishReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto_ff.LoadMapFinishReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_Scene_2eproto();
  friend void protobuf_AssignDesc_Scene_2eproto();
  friend void protobuf_ShutdownFile_Scene_2eproto();

  void InitAsDefaultInstance();
  static LoadMapFinishReq* default_instance_;
};
// -------------------------------------------------------------------

class CorpseInfo : public ::google::protobuf::Message {
 public:
  CorpseInfo();
  virtual ~CorpseInfo();

  CorpseInfo(const CorpseInfo& from);

  inline CorpseInfo& operator=(const CorpseInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CorpseInfo& default_instance();

  void Swap(CorpseInfo* other);

  // implements Message ----------------------------------------------

  CorpseInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CorpseInfo& from);
  void MergeFrom(const CorpseInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 cfgId = 1;
  inline bool has_cfgid() const;
  inline void clear_cfgid();
  static const int kCfgIdFieldNumber = 1;
  inline ::google::protobuf::uint64 cfgid() const;
  inline void set_cfgid(::google::protobuf::uint64 value);

  // optional uint64 aliveTime = 2;
  inline bool has_alivetime() const;
  inline void clear_alivetime();
  static const int kAliveTimeFieldNumber = 2;
  inline ::google::protobuf::uint64 alivetime() const;
  inline void set_alivetime(::google::protobuf::uint64 value);

  // optional .proto_ff.Vector3PB pos = 3;
  inline bool has_pos() const;
  inline void clear_pos();
  static const int kPosFieldNumber = 3;
  inline const ::proto_ff::Vector3PB& pos() const;
  inline ::proto_ff::Vector3PB* mutable_pos();
  inline ::proto_ff::Vector3PB* release_pos();
  inline void set_allocated_pos(::proto_ff::Vector3PB* pos);

  // optional uint64 cid = 4;
  inline bool has_cid() const;
  inline void clear_cid();
  static const int kCidFieldNumber = 4;
  inline ::google::protobuf::uint64 cid() const;
  inline void set_cid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.CorpseInfo)
 private:
  inline void set_has_cfgid();
  inline void clear_has_cfgid();
  inline void set_has_alivetime();
  inline void clear_has_alivetime();
  inline void set_has_pos();
  inline void clear_has_pos();
  inline void set_has_cid();
  inline void clear_has_cid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 cfgid_;
  ::google::protobuf::uint64 alivetime_;
  ::proto_ff::Vector3PB* pos_;
  ::google::protobuf::uint64 cid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_Scene_2eproto();
  friend void protobuf_AssignDesc_Scene_2eproto();
  friend void protobuf_ShutdownFile_Scene_2eproto();

  void InitAsDefaultInstance();
  static CorpseInfo* default_instance_;
};
// -------------------------------------------------------------------

class NotifySceneCorpseInfoRsp : public ::google::protobuf::Message {
 public:
  NotifySceneCorpseInfoRsp();
  virtual ~NotifySceneCorpseInfoRsp();

  NotifySceneCorpseInfoRsp(const NotifySceneCorpseInfoRsp& from);

  inline NotifySceneCorpseInfoRsp& operator=(const NotifySceneCorpseInfoRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NotifySceneCorpseInfoRsp& default_instance();

  void Swap(NotifySceneCorpseInfoRsp* other);

  // implements Message ----------------------------------------------

  NotifySceneCorpseInfoRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NotifySceneCorpseInfoRsp& from);
  void MergeFrom(const NotifySceneCorpseInfoRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // repeated .proto_ff.CorpseInfo infos = 2;
  inline int infos_size() const;
  inline void clear_infos();
  static const int kInfosFieldNumber = 2;
  inline const ::proto_ff::CorpseInfo& infos(int index) const;
  inline ::proto_ff::CorpseInfo* mutable_infos(int index);
  inline ::proto_ff::CorpseInfo* add_infos();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::CorpseInfo >&
      infos() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::CorpseInfo >*
      mutable_infos();

  // @@protoc_insertion_point(class_scope:proto_ff.NotifySceneCorpseInfoRsp)
 private:
  inline void set_has_type();
  inline void clear_has_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::CorpseInfo > infos_;
  ::google::protobuf::int32 type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Scene_2eproto();
  friend void protobuf_AssignDesc_Scene_2eproto();
  friend void protobuf_ShutdownFile_Scene_2eproto();

  void InitAsDefaultInstance();
  static NotifySceneCorpseInfoRsp* default_instance_;
};
// -------------------------------------------------------------------

class NotifySceneDriveRsp : public ::google::protobuf::Message {
 public:
  NotifySceneDriveRsp();
  virtual ~NotifySceneDriveRsp();

  NotifySceneDriveRsp(const NotifySceneDriveRsp& from);

  inline NotifySceneDriveRsp& operator=(const NotifySceneDriveRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NotifySceneDriveRsp& default_instance();

  void Swap(NotifySceneDriveRsp* other);

  // implements Message ----------------------------------------------

  NotifySceneDriveRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NotifySceneDriveRsp& from);
  void MergeFrom(const NotifySceneDriveRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 curDrive = 1;
  inline bool has_curdrive() const;
  inline void clear_curdrive();
  static const int kCurDriveFieldNumber = 1;
  inline ::google::protobuf::int32 curdrive() const;
  inline void set_curdrive(::google::protobuf::int32 value);

  // optional int32 maxDrive = 2;
  inline bool has_maxdrive() const;
  inline void clear_maxdrive();
  static const int kMaxDriveFieldNumber = 2;
  inline ::google::protobuf::int32 maxdrive() const;
  inline void set_maxdrive(::google::protobuf::int32 value);

  // optional uint64 driveTime = 3;
  inline bool has_drivetime() const;
  inline void clear_drivetime();
  static const int kDriveTimeFieldNumber = 3;
  inline ::google::protobuf::uint64 drivetime() const;
  inline void set_drivetime(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.NotifySceneDriveRsp)
 private:
  inline void set_has_curdrive();
  inline void clear_has_curdrive();
  inline void set_has_maxdrive();
  inline void clear_has_maxdrive();
  inline void set_has_drivetime();
  inline void clear_has_drivetime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 curdrive_;
  ::google::protobuf::int32 maxdrive_;
  ::google::protobuf::uint64 drivetime_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_Scene_2eproto();
  friend void protobuf_AssignDesc_Scene_2eproto();
  friend void protobuf_ShutdownFile_Scene_2eproto();

  void InitAsDefaultInstance();
  static NotifySceneDriveRsp* default_instance_;
};
// -------------------------------------------------------------------

class CenterCreateSceneReq : public ::google::protobuf::Message {
 public:
  CenterCreateSceneReq();
  virtual ~CenterCreateSceneReq();

  CenterCreateSceneReq(const CenterCreateSceneReq& from);

  inline CenterCreateSceneReq& operator=(const CenterCreateSceneReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CenterCreateSceneReq& default_instance();

  void Swap(CenterCreateSceneReq* other);

  // implements Message ----------------------------------------------

  CenterCreateSceneReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CenterCreateSceneReq& from);
  void MergeFrom(const CenterCreateSceneReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 sceneId = 1;
  inline bool has_sceneid() const;
  inline void clear_sceneid();
  static const int kSceneIdFieldNumber = 1;
  inline ::google::protobuf::uint64 sceneid() const;
  inline void set_sceneid(::google::protobuf::uint64 value);

  // required uint64 mapId = 2;
  inline bool has_mapid() const;
  inline void clear_mapid();
  static const int kMapIdFieldNumber = 2;
  inline ::google::protobuf::uint64 mapid() const;
  inline void set_mapid(::google::protobuf::uint64 value);

  // optional .proto_ff.CreateSceneParamProto param = 3;
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 3;
  inline const ::proto_ff::CreateSceneParamProto& param() const;
  inline ::proto_ff::CreateSceneParamProto* mutable_param();
  inline ::proto_ff::CreateSceneParamProto* release_param();
  inline void set_allocated_param(::proto_ff::CreateSceneParamProto* param);

  // @@protoc_insertion_point(class_scope:proto_ff.CenterCreateSceneReq)
 private:
  inline void set_has_sceneid();
  inline void clear_has_sceneid();
  inline void set_has_mapid();
  inline void clear_has_mapid();
  inline void set_has_param();
  inline void clear_has_param();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 sceneid_;
  ::google::protobuf::uint64 mapid_;
  ::proto_ff::CreateSceneParamProto* param_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_Scene_2eproto();
  friend void protobuf_AssignDesc_Scene_2eproto();
  friend void protobuf_ShutdownFile_Scene_2eproto();

  void InitAsDefaultInstance();
  static CenterCreateSceneReq* default_instance_;
};
// -------------------------------------------------------------------

class CenterCreateSceneRsp : public ::google::protobuf::Message {
 public:
  CenterCreateSceneRsp();
  virtual ~CenterCreateSceneRsp();

  CenterCreateSceneRsp(const CenterCreateSceneRsp& from);

  inline CenterCreateSceneRsp& operator=(const CenterCreateSceneRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CenterCreateSceneRsp& default_instance();

  void Swap(CenterCreateSceneRsp* other);

  // implements Message ----------------------------------------------

  CenterCreateSceneRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CenterCreateSceneRsp& from);
  void MergeFrom(const CenterCreateSceneRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 sceneId = 1;
  inline bool has_sceneid() const;
  inline void clear_sceneid();
  static const int kSceneIdFieldNumber = 1;
  inline ::google::protobuf::uint64 sceneid() const;
  inline void set_sceneid(::google::protobuf::uint64 value);

  // required uint64 mapId = 2;
  inline bool has_mapid() const;
  inline void clear_mapid();
  static const int kMapIdFieldNumber = 2;
  inline ::google::protobuf::uint64 mapid() const;
  inline void set_mapid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.CenterCreateSceneRsp)
 private:
  inline void set_has_sceneid();
  inline void clear_has_sceneid();
  inline void set_has_mapid();
  inline void clear_has_mapid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 sceneid_;
  ::google::protobuf::uint64 mapid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Scene_2eproto();
  friend void protobuf_AssignDesc_Scene_2eproto();
  friend void protobuf_ShutdownFile_Scene_2eproto();

  void InitAsDefaultInstance();
  static CenterCreateSceneRsp* default_instance_;
};
// -------------------------------------------------------------------

class SCAddNewScene : public ::google::protobuf::Message {
 public:
  SCAddNewScene();
  virtual ~SCAddNewScene();

  SCAddNewScene(const SCAddNewScene& from);

  inline SCAddNewScene& operator=(const SCAddNewScene& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SCAddNewScene& default_instance();

  void Swap(SCAddNewScene* other);

  // implements Message ----------------------------------------------

  SCAddNewScene* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SCAddNewScene& from);
  void MergeFrom(const SCAddNewScene& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 mapid = 1;
  inline bool has_mapid() const;
  inline void clear_mapid();
  static const int kMapidFieldNumber = 1;
  inline ::google::protobuf::uint64 mapid() const;
  inline void set_mapid(::google::protobuf::uint64 value);

  // required uint64 sceneid = 2;
  inline bool has_sceneid() const;
  inline void clear_sceneid();
  static const int kSceneidFieldNumber = 2;
  inline ::google::protobuf::uint64 sceneid() const;
  inline void set_sceneid(::google::protobuf::uint64 value);

  // required uint32 logicid = 3;
  inline bool has_logicid() const;
  inline void clear_logicid();
  static const int kLogicidFieldNumber = 3;
  inline ::google::protobuf::uint32 logicid() const;
  inline void set_logicid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.SCAddNewScene)
 private:
  inline void set_has_mapid();
  inline void clear_has_mapid();
  inline void set_has_sceneid();
  inline void clear_has_sceneid();
  inline void set_has_logicid();
  inline void clear_has_logicid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 mapid_;
  ::google::protobuf::uint64 sceneid_;
  ::google::protobuf::uint32 logicid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_Scene_2eproto();
  friend void protobuf_AssignDesc_Scene_2eproto();
  friend void protobuf_ShutdownFile_Scene_2eproto();

  void InitAsDefaultInstance();
  static SCAddNewScene* default_instance_;
};
// -------------------------------------------------------------------

class SCDelScene : public ::google::protobuf::Message {
 public:
  SCDelScene();
  virtual ~SCDelScene();

  SCDelScene(const SCDelScene& from);

  inline SCDelScene& operator=(const SCDelScene& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SCDelScene& default_instance();

  void Swap(SCDelScene* other);

  // implements Message ----------------------------------------------

  SCDelScene* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SCDelScene& from);
  void MergeFrom(const SCDelScene& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 sceneid = 1;
  inline bool has_sceneid() const;
  inline void clear_sceneid();
  static const int kSceneidFieldNumber = 1;
  inline ::google::protobuf::uint64 sceneid() const;
  inline void set_sceneid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.SCDelScene)
 private:
  inline void set_has_sceneid();
  inline void clear_has_sceneid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 sceneid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Scene_2eproto();
  friend void protobuf_AssignDesc_Scene_2eproto();
  friend void protobuf_ShutdownFile_Scene_2eproto();

  void InitAsDefaultInstance();
  static SCDelScene* default_instance_;
};
// -------------------------------------------------------------------

class NotifyLogicSceneClose : public ::google::protobuf::Message {
 public:
  NotifyLogicSceneClose();
  virtual ~NotifyLogicSceneClose();

  NotifyLogicSceneClose(const NotifyLogicSceneClose& from);

  inline NotifyLogicSceneClose& operator=(const NotifyLogicSceneClose& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NotifyLogicSceneClose& default_instance();

  void Swap(NotifyLogicSceneClose* other);

  // implements Message ----------------------------------------------

  NotifyLogicSceneClose* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NotifyLogicSceneClose& from);
  void MergeFrom(const NotifyLogicSceneClose& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 sceneId = 1;
  inline bool has_sceneid() const;
  inline void clear_sceneid();
  static const int kSceneIdFieldNumber = 1;
  inline ::google::protobuf::uint64 sceneid() const;
  inline void set_sceneid(::google::protobuf::uint64 value);

  // required uint64 mapId = 2;
  inline bool has_mapid() const;
  inline void clear_mapid();
  static const int kMapIdFieldNumber = 2;
  inline ::google::protobuf::uint64 mapid() const;
  inline void set_mapid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.NotifyLogicSceneClose)
 private:
  inline void set_has_sceneid();
  inline void clear_has_sceneid();
  inline void set_has_mapid();
  inline void clear_has_mapid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 sceneid_;
  ::google::protobuf::uint64 mapid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Scene_2eproto();
  friend void protobuf_AssignDesc_Scene_2eproto();
  friend void protobuf_ShutdownFile_Scene_2eproto();

  void InitAsDefaultInstance();
  static NotifyLogicSceneClose* default_instance_;
};
// -------------------------------------------------------------------

class LogicCreatureTransSceneReq : public ::google::protobuf::Message {
 public:
  LogicCreatureTransSceneReq();
  virtual ~LogicCreatureTransSceneReq();

  LogicCreatureTransSceneReq(const LogicCreatureTransSceneReq& from);

  inline LogicCreatureTransSceneReq& operator=(const LogicCreatureTransSceneReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LogicCreatureTransSceneReq& default_instance();

  void Swap(LogicCreatureTransSceneReq* other);

  // implements Message ----------------------------------------------

  LogicCreatureTransSceneReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LogicCreatureTransSceneReq& from);
  void MergeFrom(const LogicCreatureTransSceneReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 curSceneId = 1;
  inline bool has_cursceneid() const;
  inline void clear_cursceneid();
  static const int kCurSceneIdFieldNumber = 1;
  inline ::google::protobuf::uint64 cursceneid() const;
  inline void set_cursceneid(::google::protobuf::uint64 value);

  // required uint64 dstSceneId = 2;
  inline bool has_dstsceneid() const;
  inline void clear_dstsceneid();
  static const int kDstSceneIdFieldNumber = 2;
  inline ::google::protobuf::uint64 dstsceneid() const;
  inline void set_dstsceneid(::google::protobuf::uint64 value);

  // required .proto_ff.CreatureTransParam param = 3;
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 3;
  inline const ::proto_ff::CreatureTransParam& param() const;
  inline ::proto_ff::CreatureTransParam* mutable_param();
  inline ::proto_ff::CreatureTransParam* release_param();
  inline void set_allocated_param(::proto_ff::CreatureTransParam* param);

  // required uint32 srcLogicId = 4;
  inline bool has_srclogicid() const;
  inline void clear_srclogicid();
  static const int kSrcLogicIdFieldNumber = 4;
  inline ::google::protobuf::uint32 srclogicid() const;
  inline void set_srclogicid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.LogicCreatureTransSceneReq)
 private:
  inline void set_has_cursceneid();
  inline void clear_has_cursceneid();
  inline void set_has_dstsceneid();
  inline void clear_has_dstsceneid();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_srclogicid();
  inline void clear_has_srclogicid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 cursceneid_;
  ::google::protobuf::uint64 dstsceneid_;
  ::proto_ff::CreatureTransParam* param_;
  ::google::protobuf::uint32 srclogicid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_Scene_2eproto();
  friend void protobuf_AssignDesc_Scene_2eproto();
  friend void protobuf_ShutdownFile_Scene_2eproto();

  void InitAsDefaultInstance();
  static LogicCreatureTransSceneReq* default_instance_;
};
// -------------------------------------------------------------------

class CenterCreatureTransSceneResultRsp : public ::google::protobuf::Message {
 public:
  CenterCreatureTransSceneResultRsp();
  virtual ~CenterCreatureTransSceneResultRsp();

  CenterCreatureTransSceneResultRsp(const CenterCreatureTransSceneResultRsp& from);

  inline CenterCreatureTransSceneResultRsp& operator=(const CenterCreatureTransSceneResultRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CenterCreatureTransSceneResultRsp& default_instance();

  void Swap(CenterCreatureTransSceneResultRsp* other);

  // implements Message ----------------------------------------------

  CenterCreatureTransSceneResultRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CenterCreatureTransSceneResultRsp& from);
  void MergeFrom(const CenterCreatureTransSceneResultRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // required uint64 cur_sceneid = 2;
  inline bool has_cur_sceneid() const;
  inline void clear_cur_sceneid();
  static const int kCurSceneidFieldNumber = 2;
  inline ::google::protobuf::uint64 cur_sceneid() const;
  inline void set_cur_sceneid(::google::protobuf::uint64 value);

  // required uint64 dst_sceneid = 3;
  inline bool has_dst_sceneid() const;
  inline void clear_dst_sceneid();
  static const int kDstSceneidFieldNumber = 3;
  inline ::google::protobuf::uint64 dst_sceneid() const;
  inline void set_dst_sceneid(::google::protobuf::uint64 value);

  // required int32 kind = 4;
  inline bool has_kind() const;
  inline void clear_kind();
  static const int kKindFieldNumber = 4;
  inline ::google::protobuf::int32 kind() const;
  inline void set_kind(::google::protobuf::int32 value);

  // required uint64 cid = 5;
  inline bool has_cid() const;
  inline void clear_cid();
  static const int kCidFieldNumber = 5;
  inline ::google::protobuf::uint64 cid() const;
  inline void set_cid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.CenterCreatureTransSceneResultRsp)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_cur_sceneid();
  inline void clear_has_cur_sceneid();
  inline void set_has_dst_sceneid();
  inline void clear_has_dst_sceneid();
  inline void set_has_kind();
  inline void clear_has_kind();
  inline void set_has_cid();
  inline void clear_has_cid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 cur_sceneid_;
  ::google::protobuf::int32 result_;
  ::google::protobuf::int32 kind_;
  ::google::protobuf::uint64 dst_sceneid_;
  ::google::protobuf::uint64 cid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_Scene_2eproto();
  friend void protobuf_AssignDesc_Scene_2eproto();
  friend void protobuf_ShutdownFile_Scene_2eproto();

  void InitAsDefaultInstance();
  static CenterCreatureTransSceneResultRsp* default_instance_;
};
// -------------------------------------------------------------------

class CenterCreatureTransSceneSuccessRsp : public ::google::protobuf::Message {
 public:
  CenterCreatureTransSceneSuccessRsp();
  virtual ~CenterCreatureTransSceneSuccessRsp();

  CenterCreatureTransSceneSuccessRsp(const CenterCreatureTransSceneSuccessRsp& from);

  inline CenterCreatureTransSceneSuccessRsp& operator=(const CenterCreatureTransSceneSuccessRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CenterCreatureTransSceneSuccessRsp& default_instance();

  void Swap(CenterCreatureTransSceneSuccessRsp* other);

  // implements Message ----------------------------------------------

  CenterCreatureTransSceneSuccessRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CenterCreatureTransSceneSuccessRsp& from);
  void MergeFrom(const CenterCreatureTransSceneSuccessRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 dst_sceneid = 1;
  inline bool has_dst_sceneid() const;
  inline void clear_dst_sceneid();
  static const int kDstSceneidFieldNumber = 1;
  inline ::google::protobuf::uint64 dst_sceneid() const;
  inline void set_dst_sceneid(::google::protobuf::uint64 value);

  // required uint64 dst_mapid = 2;
  inline bool has_dst_mapid() const;
  inline void clear_dst_mapid();
  static const int kDstMapidFieldNumber = 2;
  inline ::google::protobuf::uint64 dst_mapid() const;
  inline void set_dst_mapid(::google::protobuf::uint64 value);

  // required .proto_ff.CreatureTransParam param = 3;
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 3;
  inline const ::proto_ff::CreatureTransParam& param() const;
  inline ::proto_ff::CreatureTransParam* mutable_param();
  inline ::proto_ff::CreatureTransParam* release_param();
  inline void set_allocated_param(::proto_ff::CreatureTransParam* param);

  // @@protoc_insertion_point(class_scope:proto_ff.CenterCreatureTransSceneSuccessRsp)
 private:
  inline void set_has_dst_sceneid();
  inline void clear_has_dst_sceneid();
  inline void set_has_dst_mapid();
  inline void clear_has_dst_mapid();
  inline void set_has_param();
  inline void clear_has_param();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 dst_sceneid_;
  ::google::protobuf::uint64 dst_mapid_;
  ::proto_ff::CreatureTransParam* param_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_Scene_2eproto();
  friend void protobuf_AssignDesc_Scene_2eproto();
  friend void protobuf_ShutdownFile_Scene_2eproto();

  void InitAsDefaultInstance();
  static CenterCreatureTransSceneSuccessRsp* default_instance_;
};
// -------------------------------------------------------------------

class NotifyRoleEnterScene : public ::google::protobuf::Message {
 public:
  NotifyRoleEnterScene();
  virtual ~NotifyRoleEnterScene();

  NotifyRoleEnterScene(const NotifyRoleEnterScene& from);

  inline NotifyRoleEnterScene& operator=(const NotifyRoleEnterScene& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NotifyRoleEnterScene& default_instance();

  void Swap(NotifyRoleEnterScene* other);

  // implements Message ----------------------------------------------

  NotifyRoleEnterScene* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NotifyRoleEnterScene& from);
  void MergeFrom(const NotifyRoleEnterScene& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 cid = 1;
  inline bool has_cid() const;
  inline void clear_cid();
  static const int kCidFieldNumber = 1;
  inline ::google::protobuf::uint64 cid() const;
  inline void set_cid(::google::protobuf::uint64 value);

  // required uint64 scene_id = 2;
  inline bool has_scene_id() const;
  inline void clear_scene_id();
  static const int kSceneIdFieldNumber = 2;
  inline ::google::protobuf::uint64 scene_id() const;
  inline void set_scene_id(::google::protobuf::uint64 value);

  // required uint64 map_id = 3;
  inline bool has_map_id() const;
  inline void clear_map_id();
  static const int kMapIdFieldNumber = 3;
  inline ::google::protobuf::uint64 map_id() const;
  inline void set_map_id(::google::protobuf::uint64 value);

  // optional .proto_ff.Vector3PB pos = 4;
  inline bool has_pos() const;
  inline void clear_pos();
  static const int kPosFieldNumber = 4;
  inline const ::proto_ff::Vector3PB& pos() const;
  inline ::proto_ff::Vector3PB* mutable_pos();
  inline ::proto_ff::Vector3PB* release_pos();
  inline void set_allocated_pos(::proto_ff::Vector3PB* pos);

  // @@protoc_insertion_point(class_scope:proto_ff.NotifyRoleEnterScene)
 private:
  inline void set_has_cid();
  inline void clear_has_cid();
  inline void set_has_scene_id();
  inline void clear_has_scene_id();
  inline void set_has_map_id();
  inline void clear_has_map_id();
  inline void set_has_pos();
  inline void clear_has_pos();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 cid_;
  ::google::protobuf::uint64 scene_id_;
  ::google::protobuf::uint64 map_id_;
  ::proto_ff::Vector3PB* pos_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_Scene_2eproto();
  friend void protobuf_AssignDesc_Scene_2eproto();
  friend void protobuf_ShutdownFile_Scene_2eproto();

  void InitAsDefaultInstance();
  static NotifyRoleEnterScene* default_instance_;
};
// -------------------------------------------------------------------

class NotifyRoleChgLogic : public ::google::protobuf::Message {
 public:
  NotifyRoleChgLogic();
  virtual ~NotifyRoleChgLogic();

  NotifyRoleChgLogic(const NotifyRoleChgLogic& from);

  inline NotifyRoleChgLogic& operator=(const NotifyRoleChgLogic& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NotifyRoleChgLogic& default_instance();

  void Swap(NotifyRoleChgLogic* other);

  // implements Message ----------------------------------------------

  NotifyRoleChgLogic* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NotifyRoleChgLogic& from);
  void MergeFrom(const NotifyRoleChgLogic& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 cid = 1;
  inline bool has_cid() const;
  inline void clear_cid();
  static const int kCidFieldNumber = 1;
  inline ::google::protobuf::uint64 cid() const;
  inline void set_cid(::google::protobuf::uint64 value);

  // required uint32 uid = 2;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 2;
  inline ::google::protobuf::uint32 uid() const;
  inline void set_uid(::google::protobuf::uint32 value);

  // required uint32 clientid = 3;
  inline bool has_clientid() const;
  inline void clear_clientid();
  static const int kClientidFieldNumber = 3;
  inline ::google::protobuf::uint32 clientid() const;
  inline void set_clientid(::google::protobuf::uint32 value);

  // required uint32 logicid = 4;
  inline bool has_logicid() const;
  inline void clear_logicid();
  static const int kLogicidFieldNumber = 4;
  inline ::google::protobuf::uint32 logicid() const;
  inline void set_logicid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.NotifyRoleChgLogic)
 private:
  inline void set_has_cid();
  inline void clear_has_cid();
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_clientid();
  inline void clear_has_clientid();
  inline void set_has_logicid();
  inline void clear_has_logicid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 cid_;
  ::google::protobuf::uint32 uid_;
  ::google::protobuf::uint32 clientid_;
  ::google::protobuf::uint32 logicid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_Scene_2eproto();
  friend void protobuf_AssignDesc_Scene_2eproto();
  friend void protobuf_ShutdownFile_Scene_2eproto();

  void InitAsDefaultInstance();
  static NotifyRoleChgLogic* default_instance_;
};
// ===================================================================


// ===================================================================

// CreateSceneParamProto

// required int32 param_type = 1;
inline bool CreateSceneParamProto::has_param_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CreateSceneParamProto::set_has_param_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CreateSceneParamProto::clear_has_param_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CreateSceneParamProto::clear_param_type() {
  param_type_ = 0;
  clear_has_param_type();
}
inline ::google::protobuf::int32 CreateSceneParamProto::param_type() const {
  return param_type_;
}
inline void CreateSceneParamProto::set_param_type(::google::protobuf::int32 value) {
  set_has_param_type();
  param_type_ = value;
}

// required uint32 zid = 2;
inline bool CreateSceneParamProto::has_zid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CreateSceneParamProto::set_has_zid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CreateSceneParamProto::clear_has_zid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CreateSceneParamProto::clear_zid() {
  zid_ = 0u;
  clear_has_zid();
}
inline ::google::protobuf::uint32 CreateSceneParamProto::zid() const {
  return zid_;
}
inline void CreateSceneParamProto::set_zid(::google::protobuf::uint32 value) {
  set_has_zid();
  zid_ = value;
}

// optional uint64 cid = 3;
inline bool CreateSceneParamProto::has_cid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CreateSceneParamProto::set_has_cid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CreateSceneParamProto::clear_has_cid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CreateSceneParamProto::clear_cid() {
  cid_ = GOOGLE_ULONGLONG(0);
  clear_has_cid();
}
inline ::google::protobuf::uint64 CreateSceneParamProto::cid() const {
  return cid_;
}
inline void CreateSceneParamProto::set_cid(::google::protobuf::uint64 value) {
  set_has_cid();
  cid_ = value;
}

// optional uint64 dup_id = 4;
inline bool CreateSceneParamProto::has_dup_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CreateSceneParamProto::set_has_dup_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CreateSceneParamProto::clear_has_dup_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CreateSceneParamProto::clear_dup_id() {
  dup_id_ = GOOGLE_ULONGLONG(0);
  clear_has_dup_id();
}
inline ::google::protobuf::uint64 CreateSceneParamProto::dup_id() const {
  return dup_id_;
}
inline void CreateSceneParamProto::set_dup_id(::google::protobuf::uint64 value) {
  set_has_dup_id();
  dup_id_ = value;
}

// optional int32 key_type = 5;
inline bool CreateSceneParamProto::has_key_type() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CreateSceneParamProto::set_has_key_type() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CreateSceneParamProto::clear_has_key_type() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CreateSceneParamProto::clear_key_type() {
  key_type_ = 0;
  clear_has_key_type();
}
inline ::google::protobuf::int32 CreateSceneParamProto::key_type() const {
  return key_type_;
}
inline void CreateSceneParamProto::set_key_type(::google::protobuf::int32 value) {
  set_has_key_type();
  key_type_ = value;
}

// optional uint64 key_value = 6;
inline bool CreateSceneParamProto::has_key_value() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CreateSceneParamProto::set_has_key_value() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CreateSceneParamProto::clear_has_key_value() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CreateSceneParamProto::clear_key_value() {
  key_value_ = GOOGLE_ULONGLONG(0);
  clear_has_key_value();
}
inline ::google::protobuf::uint64 CreateSceneParamProto::key_value() const {
  return key_value_;
}
inline void CreateSceneParamProto::set_key_value(::google::protobuf::uint64 value) {
  set_has_key_value();
  key_value_ = value;
}

// optional int32 alive_time_sec = 7;
inline bool CreateSceneParamProto::has_alive_time_sec() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CreateSceneParamProto::set_has_alive_time_sec() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CreateSceneParamProto::clear_has_alive_time_sec() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CreateSceneParamProto::clear_alive_time_sec() {
  alive_time_sec_ = 0;
  clear_has_alive_time_sec();
}
inline ::google::protobuf::int32 CreateSceneParamProto::alive_time_sec() const {
  return alive_time_sec_;
}
inline void CreateSceneParamProto::set_alive_time_sec(::google::protobuf::int32 value) {
  set_has_alive_time_sec();
  alive_time_sec_ = value;
}

// optional int32 mergenum = 8;
inline bool CreateSceneParamProto::has_mergenum() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CreateSceneParamProto::set_has_mergenum() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CreateSceneParamProto::clear_has_mergenum() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CreateSceneParamProto::clear_mergenum() {
  mergenum_ = 0;
  clear_has_mergenum();
}
inline ::google::protobuf::int32 CreateSceneParamProto::mergenum() const {
  return mergenum_;
}
inline void CreateSceneParamProto::set_mergenum(::google::protobuf::int32 value) {
  set_has_mergenum();
  mergenum_ = value;
}

// optional int32 teamid = 9;
inline bool CreateSceneParamProto::has_teamid() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CreateSceneParamProto::set_has_teamid() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CreateSceneParamProto::clear_has_teamid() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CreateSceneParamProto::clear_teamid() {
  teamid_ = 0;
  clear_has_teamid();
}
inline ::google::protobuf::int32 CreateSceneParamProto::teamid() const {
  return teamid_;
}
inline void CreateSceneParamProto::set_teamid(::google::protobuf::int32 value) {
  set_has_teamid();
  teamid_ = value;
}

// -------------------------------------------------------------------

// SceneTransParam

// optional uint64 src_map = 1;
inline bool SceneTransParam::has_src_map() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SceneTransParam::set_has_src_map() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SceneTransParam::clear_has_src_map() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SceneTransParam::clear_src_map() {
  src_map_ = GOOGLE_ULONGLONG(0);
  clear_has_src_map();
}
inline ::google::protobuf::uint64 SceneTransParam::src_map() const {
  return src_map_;
}
inline void SceneTransParam::set_src_map(::google::protobuf::uint64 value) {
  set_has_src_map();
  src_map_ = value;
}

// optional int32 trans_type = 2;
inline bool SceneTransParam::has_trans_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SceneTransParam::set_has_trans_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SceneTransParam::clear_has_trans_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SceneTransParam::clear_trans_type() {
  trans_type_ = 0;
  clear_has_trans_type();
}
inline ::google::protobuf::int32 SceneTransParam::trans_type() const {
  return trans_type_;
}
inline void SceneTransParam::set_trans_type(::google::protobuf::int32 value) {
  set_has_trans_type();
  trans_type_ = value;
}

// optional uint64 trans_val = 3;
inline bool SceneTransParam::has_trans_val() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SceneTransParam::set_has_trans_val() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SceneTransParam::clear_has_trans_val() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SceneTransParam::clear_trans_val() {
  trans_val_ = GOOGLE_ULONGLONG(0);
  clear_has_trans_val();
}
inline ::google::protobuf::uint64 SceneTransParam::trans_val() const {
  return trans_val_;
}
inline void SceneTransParam::set_trans_val(::google::protobuf::uint64 value) {
  set_has_trans_val();
  trans_val_ = value;
}

// -------------------------------------------------------------------

// PlayerTransParam

// required uint32 client_id = 1;
inline bool PlayerTransParam::has_client_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PlayerTransParam::set_has_client_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PlayerTransParam::clear_has_client_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PlayerTransParam::clear_client_id() {
  client_id_ = 0u;
  clear_has_client_id();
}
inline ::google::protobuf::uint32 PlayerTransParam::client_id() const {
  return client_id_;
}
inline void PlayerTransParam::set_client_id(::google::protobuf::uint32 value) {
  set_has_client_id();
  client_id_ = value;
}

// required uint64 enter_scene_id = 2;
inline bool PlayerTransParam::has_enter_scene_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PlayerTransParam::set_has_enter_scene_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PlayerTransParam::clear_has_enter_scene_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PlayerTransParam::clear_enter_scene_id() {
  enter_scene_id_ = GOOGLE_ULONGLONG(0);
  clear_has_enter_scene_id();
}
inline ::google::protobuf::uint64 PlayerTransParam::enter_scene_id() const {
  return enter_scene_id_;
}
inline void PlayerTransParam::set_enter_scene_id(::google::protobuf::uint64 value) {
  set_has_enter_scene_id();
  enter_scene_id_ = value;
}

// required uint64 enter_map_id = 3;
inline bool PlayerTransParam::has_enter_map_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PlayerTransParam::set_has_enter_map_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PlayerTransParam::clear_has_enter_map_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PlayerTransParam::clear_enter_map_id() {
  enter_map_id_ = GOOGLE_ULONGLONG(0);
  clear_has_enter_map_id();
}
inline ::google::protobuf::uint64 PlayerTransParam::enter_map_id() const {
  return enter_map_id_;
}
inline void PlayerTransParam::set_enter_map_id(::google::protobuf::uint64 value) {
  set_has_enter_map_id();
  enter_map_id_ = value;
}

// required float enterposx = 4;
inline bool PlayerTransParam::has_enterposx() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PlayerTransParam::set_has_enterposx() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PlayerTransParam::clear_has_enterposx() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PlayerTransParam::clear_enterposx() {
  enterposx_ = 0;
  clear_has_enterposx();
}
inline float PlayerTransParam::enterposx() const {
  return enterposx_;
}
inline void PlayerTransParam::set_enterposx(float value) {
  set_has_enterposx();
  enterposx_ = value;
}

// required float enterposy = 5;
inline bool PlayerTransParam::has_enterposy() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PlayerTransParam::set_has_enterposy() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PlayerTransParam::clear_has_enterposy() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PlayerTransParam::clear_enterposy() {
  enterposy_ = 0;
  clear_has_enterposy();
}
inline float PlayerTransParam::enterposy() const {
  return enterposy_;
}
inline void PlayerTransParam::set_enterposy(float value) {
  set_has_enterposy();
  enterposy_ = value;
}

// required float enterposz = 6;
inline bool PlayerTransParam::has_enterposz() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void PlayerTransParam::set_has_enterposz() {
  _has_bits_[0] |= 0x00000020u;
}
inline void PlayerTransParam::clear_has_enterposz() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void PlayerTransParam::clear_enterposz() {
  enterposz_ = 0;
  clear_has_enterposz();
}
inline float PlayerTransParam::enterposz() const {
  return enterposz_;
}
inline void PlayerTransParam::set_enterposz(float value) {
  set_has_enterposz();
  enterposz_ = value;
}

// required uint64 last_scene_id = 7;
inline bool PlayerTransParam::has_last_scene_id() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void PlayerTransParam::set_has_last_scene_id() {
  _has_bits_[0] |= 0x00000040u;
}
inline void PlayerTransParam::clear_has_last_scene_id() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void PlayerTransParam::clear_last_scene_id() {
  last_scene_id_ = GOOGLE_ULONGLONG(0);
  clear_has_last_scene_id();
}
inline ::google::protobuf::uint64 PlayerTransParam::last_scene_id() const {
  return last_scene_id_;
}
inline void PlayerTransParam::set_last_scene_id(::google::protobuf::uint64 value) {
  set_has_last_scene_id();
  last_scene_id_ = value;
}

// required uint64 last_map_id = 8;
inline bool PlayerTransParam::has_last_map_id() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void PlayerTransParam::set_has_last_map_id() {
  _has_bits_[0] |= 0x00000080u;
}
inline void PlayerTransParam::clear_has_last_map_id() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void PlayerTransParam::clear_last_map_id() {
  last_map_id_ = GOOGLE_ULONGLONG(0);
  clear_has_last_map_id();
}
inline ::google::protobuf::uint64 PlayerTransParam::last_map_id() const {
  return last_map_id_;
}
inline void PlayerTransParam::set_last_map_id(::google::protobuf::uint64 value) {
  set_has_last_map_id();
  last_map_id_ = value;
}

// required float lastposx = 9;
inline bool PlayerTransParam::has_lastposx() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void PlayerTransParam::set_has_lastposx() {
  _has_bits_[0] |= 0x00000100u;
}
inline void PlayerTransParam::clear_has_lastposx() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void PlayerTransParam::clear_lastposx() {
  lastposx_ = 0;
  clear_has_lastposx();
}
inline float PlayerTransParam::lastposx() const {
  return lastposx_;
}
inline void PlayerTransParam::set_lastposx(float value) {
  set_has_lastposx();
  lastposx_ = value;
}

// required float lastposy = 10;
inline bool PlayerTransParam::has_lastposy() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void PlayerTransParam::set_has_lastposy() {
  _has_bits_[0] |= 0x00000200u;
}
inline void PlayerTransParam::clear_has_lastposy() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void PlayerTransParam::clear_lastposy() {
  lastposy_ = 0;
  clear_has_lastposy();
}
inline float PlayerTransParam::lastposy() const {
  return lastposy_;
}
inline void PlayerTransParam::set_lastposy(float value) {
  set_has_lastposy();
  lastposy_ = value;
}

// required float lastposz = 11;
inline bool PlayerTransParam::has_lastposz() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void PlayerTransParam::set_has_lastposz() {
  _has_bits_[0] |= 0x00000400u;
}
inline void PlayerTransParam::clear_has_lastposz() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void PlayerTransParam::clear_lastposz() {
  lastposz_ = 0;
  clear_has_lastposz();
}
inline float PlayerTransParam::lastposz() const {
  return lastposz_;
}
inline void PlayerTransParam::set_lastposz(float value) {
  set_has_lastposz();
  lastposz_ = value;
}

// optional uint32 gateId = 12;
inline bool PlayerTransParam::has_gateid() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void PlayerTransParam::set_has_gateid() {
  _has_bits_[0] |= 0x00000800u;
}
inline void PlayerTransParam::clear_has_gateid() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void PlayerTransParam::clear_gateid() {
  gateid_ = 0u;
  clear_has_gateid();
}
inline ::google::protobuf::uint32 PlayerTransParam::gateid() const {
  return gateid_;
}
inline void PlayerTransParam::set_gateid(::google::protobuf::uint32 value) {
  set_has_gateid();
  gateid_ = value;
}

// optional uint32 channId = 13;
inline bool PlayerTransParam::has_channid() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void PlayerTransParam::set_has_channid() {
  _has_bits_[0] |= 0x00001000u;
}
inline void PlayerTransParam::clear_has_channid() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void PlayerTransParam::clear_channid() {
  channid_ = 0u;
  clear_has_channid();
}
inline ::google::protobuf::uint32 PlayerTransParam::channid() const {
  return channid_;
}
inline void PlayerTransParam::set_channid(::google::protobuf::uint32 value) {
  set_has_channid();
  channid_ = value;
}

// optional uint32 uid = 14;
inline bool PlayerTransParam::has_uid() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void PlayerTransParam::set_has_uid() {
  _has_bits_[0] |= 0x00002000u;
}
inline void PlayerTransParam::clear_has_uid() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void PlayerTransParam::clear_uid() {
  uid_ = 0u;
  clear_has_uid();
}
inline ::google::protobuf::uint32 PlayerTransParam::uid() const {
  return uid_;
}
inline void PlayerTransParam::set_uid(::google::protobuf::uint32 value) {
  set_has_uid();
  uid_ = value;
}

// optional uint32 zid = 15;
inline bool PlayerTransParam::has_zid() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void PlayerTransParam::set_has_zid() {
  _has_bits_[0] |= 0x00004000u;
}
inline void PlayerTransParam::clear_has_zid() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void PlayerTransParam::clear_zid() {
  zid_ = 0u;
  clear_has_zid();
}
inline ::google::protobuf::uint32 PlayerTransParam::zid() const {
  return zid_;
}
inline void PlayerTransParam::set_zid(::google::protobuf::uint32 value) {
  set_has_zid();
  zid_ = value;
}

// optional .proto_ff.LoginSyncProto sync = 16;
inline bool PlayerTransParam::has_sync() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void PlayerTransParam::set_has_sync() {
  _has_bits_[0] |= 0x00008000u;
}
inline void PlayerTransParam::clear_has_sync() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void PlayerTransParam::clear_sync() {
  if (sync_ != NULL) sync_->::proto_ff::LoginSyncProto::Clear();
  clear_has_sync();
}
inline const ::proto_ff::LoginSyncProto& PlayerTransParam::sync() const {
  return sync_ != NULL ? *sync_ : *default_instance_->sync_;
}
inline ::proto_ff::LoginSyncProto* PlayerTransParam::mutable_sync() {
  set_has_sync();
  if (sync_ == NULL) sync_ = new ::proto_ff::LoginSyncProto;
  return sync_;
}
inline ::proto_ff::LoginSyncProto* PlayerTransParam::release_sync() {
  clear_has_sync();
  ::proto_ff::LoginSyncProto* temp = sync_;
  sync_ = NULL;
  return temp;
}
inline void PlayerTransParam::set_allocated_sync(::proto_ff::LoginSyncProto* sync) {
  delete sync_;
  sync_ = sync;
  if (sync) {
    set_has_sync();
  } else {
    clear_has_sync();
  }
}

// optional int32 prof = 17;
inline bool PlayerTransParam::has_prof() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void PlayerTransParam::set_has_prof() {
  _has_bits_[0] |= 0x00010000u;
}
inline void PlayerTransParam::clear_has_prof() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void PlayerTransParam::clear_prof() {
  prof_ = 0;
  clear_has_prof();
}
inline ::google::protobuf::int32 PlayerTransParam::prof() const {
  return prof_;
}
inline void PlayerTransParam::set_prof(::google::protobuf::int32 value) {
  set_has_prof();
  prof_ = value;
}

// optional int32 last_state = 18;
inline bool PlayerTransParam::has_last_state() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void PlayerTransParam::set_has_last_state() {
  _has_bits_[0] |= 0x00020000u;
}
inline void PlayerTransParam::clear_has_last_state() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void PlayerTransParam::clear_last_state() {
  last_state_ = 0;
  clear_has_last_state();
}
inline ::google::protobuf::int32 PlayerTransParam::last_state() const {
  return last_state_;
}
inline void PlayerTransParam::set_last_state(::google::protobuf::int32 value) {
  set_has_last_state();
  last_state_ = value;
}

// optional int32 head_flag = 19;
inline bool PlayerTransParam::has_head_flag() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void PlayerTransParam::set_has_head_flag() {
  _has_bits_[0] |= 0x00040000u;
}
inline void PlayerTransParam::clear_has_head_flag() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void PlayerTransParam::clear_head_flag() {
  head_flag_ = 0;
  clear_has_head_flag();
}
inline ::google::protobuf::int32 PlayerTransParam::head_flag() const {
  return head_flag_;
}
inline void PlayerTransParam::set_head_flag(::google::protobuf::int32 value) {
  set_has_head_flag();
  head_flag_ = value;
}

// -------------------------------------------------------------------

// CreatureTransParam

// required int32 kind = 1;
inline bool CreatureTransParam::has_kind() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CreatureTransParam::set_has_kind() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CreatureTransParam::clear_has_kind() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CreatureTransParam::clear_kind() {
  kind_ = 0;
  clear_has_kind();
}
inline ::google::protobuf::int32 CreatureTransParam::kind() const {
  return kind_;
}
inline void CreatureTransParam::set_kind(::google::protobuf::int32 value) {
  set_has_kind();
  kind_ = value;
}

// required uint64 cid = 2;
inline bool CreatureTransParam::has_cid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CreatureTransParam::set_has_cid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CreatureTransParam::clear_has_cid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CreatureTransParam::clear_cid() {
  cid_ = GOOGLE_ULONGLONG(0);
  clear_has_cid();
}
inline ::google::protobuf::uint64 CreatureTransParam::cid() const {
  return cid_;
}
inline void CreatureTransParam::set_cid(::google::protobuf::uint64 value) {
  set_has_cid();
  cid_ = value;
}

// optional .proto_ff.PlayerTransParam player_param = 3;
inline bool CreatureTransParam::has_player_param() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CreatureTransParam::set_has_player_param() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CreatureTransParam::clear_has_player_param() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CreatureTransParam::clear_player_param() {
  if (player_param_ != NULL) player_param_->::proto_ff::PlayerTransParam::Clear();
  clear_has_player_param();
}
inline const ::proto_ff::PlayerTransParam& CreatureTransParam::player_param() const {
  return player_param_ != NULL ? *player_param_ : *default_instance_->player_param_;
}
inline ::proto_ff::PlayerTransParam* CreatureTransParam::mutable_player_param() {
  set_has_player_param();
  if (player_param_ == NULL) player_param_ = new ::proto_ff::PlayerTransParam;
  return player_param_;
}
inline ::proto_ff::PlayerTransParam* CreatureTransParam::release_player_param() {
  clear_has_player_param();
  ::proto_ff::PlayerTransParam* temp = player_param_;
  player_param_ = NULL;
  return temp;
}
inline void CreatureTransParam::set_allocated_player_param(::proto_ff::PlayerTransParam* player_param) {
  delete player_param_;
  player_param_ = player_param;
  if (player_param) {
    set_has_player_param();
  } else {
    clear_has_player_param();
  }
}

// optional .proto_ff.SceneTransParam trans_param = 4;
inline bool CreatureTransParam::has_trans_param() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CreatureTransParam::set_has_trans_param() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CreatureTransParam::clear_has_trans_param() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CreatureTransParam::clear_trans_param() {
  if (trans_param_ != NULL) trans_param_->::proto_ff::SceneTransParam::Clear();
  clear_has_trans_param();
}
inline const ::proto_ff::SceneTransParam& CreatureTransParam::trans_param() const {
  return trans_param_ != NULL ? *trans_param_ : *default_instance_->trans_param_;
}
inline ::proto_ff::SceneTransParam* CreatureTransParam::mutable_trans_param() {
  set_has_trans_param();
  if (trans_param_ == NULL) trans_param_ = new ::proto_ff::SceneTransParam;
  return trans_param_;
}
inline ::proto_ff::SceneTransParam* CreatureTransParam::release_trans_param() {
  clear_has_trans_param();
  ::proto_ff::SceneTransParam* temp = trans_param_;
  trans_param_ = NULL;
  return temp;
}
inline void CreatureTransParam::set_allocated_trans_param(::proto_ff::SceneTransParam* trans_param) {
  delete trans_param_;
  trans_param_ = trans_param;
  if (trans_param) {
    set_has_trans_param();
  } else {
    clear_has_trans_param();
  }
}

// -------------------------------------------------------------------

// NotifyLoadMap

// required uint64 mapid = 1;
inline bool NotifyLoadMap::has_mapid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NotifyLoadMap::set_has_mapid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NotifyLoadMap::clear_has_mapid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NotifyLoadMap::clear_mapid() {
  mapid_ = GOOGLE_ULONGLONG(0);
  clear_has_mapid();
}
inline ::google::protobuf::uint64 NotifyLoadMap::mapid() const {
  return mapid_;
}
inline void NotifyLoadMap::set_mapid(::google::protobuf::uint64 value) {
  set_has_mapid();
  mapid_ = value;
}

// required .proto_ff.Vector3PB pos = 2;
inline bool NotifyLoadMap::has_pos() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void NotifyLoadMap::set_has_pos() {
  _has_bits_[0] |= 0x00000002u;
}
inline void NotifyLoadMap::clear_has_pos() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void NotifyLoadMap::clear_pos() {
  if (pos_ != NULL) pos_->::proto_ff::Vector3PB::Clear();
  clear_has_pos();
}
inline const ::proto_ff::Vector3PB& NotifyLoadMap::pos() const {
  return pos_ != NULL ? *pos_ : *default_instance_->pos_;
}
inline ::proto_ff::Vector3PB* NotifyLoadMap::mutable_pos() {
  set_has_pos();
  if (pos_ == NULL) pos_ = new ::proto_ff::Vector3PB;
  return pos_;
}
inline ::proto_ff::Vector3PB* NotifyLoadMap::release_pos() {
  clear_has_pos();
  ::proto_ff::Vector3PB* temp = pos_;
  pos_ = NULL;
  return temp;
}
inline void NotifyLoadMap::set_allocated_pos(::proto_ff::Vector3PB* pos) {
  delete pos_;
  pos_ = pos;
  if (pos) {
    set_has_pos();
  } else {
    clear_has_pos();
  }
}

// -------------------------------------------------------------------

// TransSceneReq

// required uint64 dst_mapid = 1;
inline bool TransSceneReq::has_dst_mapid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TransSceneReq::set_has_dst_mapid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TransSceneReq::clear_has_dst_mapid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TransSceneReq::clear_dst_mapid() {
  dst_mapid_ = GOOGLE_ULONGLONG(0);
  clear_has_dst_mapid();
}
inline ::google::protobuf::uint64 TransSceneReq::dst_mapid() const {
  return dst_mapid_;
}
inline void TransSceneReq::set_dst_mapid(::google::protobuf::uint64 value) {
  set_has_dst_mapid();
  dst_mapid_ = value;
}

// optional int32 type = 2;
inline bool TransSceneReq::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TransSceneReq::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TransSceneReq::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TransSceneReq::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 TransSceneReq::type() const {
  return type_;
}
inline void TransSceneReq::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// optional uint64 id = 3;
inline bool TransSceneReq::has_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TransSceneReq::set_has_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TransSceneReq::clear_has_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TransSceneReq::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::uint64 TransSceneReq::id() const {
  return id_;
}
inline void TransSceneReq::set_id(::google::protobuf::uint64 value) {
  set_has_id();
  id_ = value;
}

// -------------------------------------------------------------------

// TransSceneRsp

// required int32 retcode = 1;
inline bool TransSceneRsp::has_retcode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TransSceneRsp::set_has_retcode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TransSceneRsp::clear_has_retcode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TransSceneRsp::clear_retcode() {
  retcode_ = 0;
  clear_has_retcode();
}
inline ::google::protobuf::int32 TransSceneRsp::retcode() const {
  return retcode_;
}
inline void TransSceneRsp::set_retcode(::google::protobuf::int32 value) {
  set_has_retcode();
  retcode_ = value;
}

// optional uint64 mapid = 2;
inline bool TransSceneRsp::has_mapid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TransSceneRsp::set_has_mapid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TransSceneRsp::clear_has_mapid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TransSceneRsp::clear_mapid() {
  mapid_ = GOOGLE_ULONGLONG(0);
  clear_has_mapid();
}
inline ::google::protobuf::uint64 TransSceneRsp::mapid() const {
  return mapid_;
}
inline void TransSceneRsp::set_mapid(::google::protobuf::uint64 value) {
  set_has_mapid();
  mapid_ = value;
}

// -------------------------------------------------------------------

// LoadMapFinishReq

// -------------------------------------------------------------------

// CorpseInfo

// optional uint64 cfgId = 1;
inline bool CorpseInfo::has_cfgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CorpseInfo::set_has_cfgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CorpseInfo::clear_has_cfgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CorpseInfo::clear_cfgid() {
  cfgid_ = GOOGLE_ULONGLONG(0);
  clear_has_cfgid();
}
inline ::google::protobuf::uint64 CorpseInfo::cfgid() const {
  return cfgid_;
}
inline void CorpseInfo::set_cfgid(::google::protobuf::uint64 value) {
  set_has_cfgid();
  cfgid_ = value;
}

// optional uint64 aliveTime = 2;
inline bool CorpseInfo::has_alivetime() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CorpseInfo::set_has_alivetime() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CorpseInfo::clear_has_alivetime() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CorpseInfo::clear_alivetime() {
  alivetime_ = GOOGLE_ULONGLONG(0);
  clear_has_alivetime();
}
inline ::google::protobuf::uint64 CorpseInfo::alivetime() const {
  return alivetime_;
}
inline void CorpseInfo::set_alivetime(::google::protobuf::uint64 value) {
  set_has_alivetime();
  alivetime_ = value;
}

// optional .proto_ff.Vector3PB pos = 3;
inline bool CorpseInfo::has_pos() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CorpseInfo::set_has_pos() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CorpseInfo::clear_has_pos() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CorpseInfo::clear_pos() {
  if (pos_ != NULL) pos_->::proto_ff::Vector3PB::Clear();
  clear_has_pos();
}
inline const ::proto_ff::Vector3PB& CorpseInfo::pos() const {
  return pos_ != NULL ? *pos_ : *default_instance_->pos_;
}
inline ::proto_ff::Vector3PB* CorpseInfo::mutable_pos() {
  set_has_pos();
  if (pos_ == NULL) pos_ = new ::proto_ff::Vector3PB;
  return pos_;
}
inline ::proto_ff::Vector3PB* CorpseInfo::release_pos() {
  clear_has_pos();
  ::proto_ff::Vector3PB* temp = pos_;
  pos_ = NULL;
  return temp;
}
inline void CorpseInfo::set_allocated_pos(::proto_ff::Vector3PB* pos) {
  delete pos_;
  pos_ = pos;
  if (pos) {
    set_has_pos();
  } else {
    clear_has_pos();
  }
}

// optional uint64 cid = 4;
inline bool CorpseInfo::has_cid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CorpseInfo::set_has_cid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CorpseInfo::clear_has_cid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CorpseInfo::clear_cid() {
  cid_ = GOOGLE_ULONGLONG(0);
  clear_has_cid();
}
inline ::google::protobuf::uint64 CorpseInfo::cid() const {
  return cid_;
}
inline void CorpseInfo::set_cid(::google::protobuf::uint64 value) {
  set_has_cid();
  cid_ = value;
}

// -------------------------------------------------------------------

// NotifySceneCorpseInfoRsp

// optional int32 type = 1;
inline bool NotifySceneCorpseInfoRsp::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NotifySceneCorpseInfoRsp::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NotifySceneCorpseInfoRsp::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NotifySceneCorpseInfoRsp::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 NotifySceneCorpseInfoRsp::type() const {
  return type_;
}
inline void NotifySceneCorpseInfoRsp::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// repeated .proto_ff.CorpseInfo infos = 2;
inline int NotifySceneCorpseInfoRsp::infos_size() const {
  return infos_.size();
}
inline void NotifySceneCorpseInfoRsp::clear_infos() {
  infos_.Clear();
}
inline const ::proto_ff::CorpseInfo& NotifySceneCorpseInfoRsp::infos(int index) const {
  return infos_.Get(index);
}
inline ::proto_ff::CorpseInfo* NotifySceneCorpseInfoRsp::mutable_infos(int index) {
  return infos_.Mutable(index);
}
inline ::proto_ff::CorpseInfo* NotifySceneCorpseInfoRsp::add_infos() {
  return infos_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::CorpseInfo >&
NotifySceneCorpseInfoRsp::infos() const {
  return infos_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::CorpseInfo >*
NotifySceneCorpseInfoRsp::mutable_infos() {
  return &infos_;
}

// -------------------------------------------------------------------

// NotifySceneDriveRsp

// optional int32 curDrive = 1;
inline bool NotifySceneDriveRsp::has_curdrive() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NotifySceneDriveRsp::set_has_curdrive() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NotifySceneDriveRsp::clear_has_curdrive() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NotifySceneDriveRsp::clear_curdrive() {
  curdrive_ = 0;
  clear_has_curdrive();
}
inline ::google::protobuf::int32 NotifySceneDriveRsp::curdrive() const {
  return curdrive_;
}
inline void NotifySceneDriveRsp::set_curdrive(::google::protobuf::int32 value) {
  set_has_curdrive();
  curdrive_ = value;
}

// optional int32 maxDrive = 2;
inline bool NotifySceneDriveRsp::has_maxdrive() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void NotifySceneDriveRsp::set_has_maxdrive() {
  _has_bits_[0] |= 0x00000002u;
}
inline void NotifySceneDriveRsp::clear_has_maxdrive() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void NotifySceneDriveRsp::clear_maxdrive() {
  maxdrive_ = 0;
  clear_has_maxdrive();
}
inline ::google::protobuf::int32 NotifySceneDriveRsp::maxdrive() const {
  return maxdrive_;
}
inline void NotifySceneDriveRsp::set_maxdrive(::google::protobuf::int32 value) {
  set_has_maxdrive();
  maxdrive_ = value;
}

// optional uint64 driveTime = 3;
inline bool NotifySceneDriveRsp::has_drivetime() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void NotifySceneDriveRsp::set_has_drivetime() {
  _has_bits_[0] |= 0x00000004u;
}
inline void NotifySceneDriveRsp::clear_has_drivetime() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void NotifySceneDriveRsp::clear_drivetime() {
  drivetime_ = GOOGLE_ULONGLONG(0);
  clear_has_drivetime();
}
inline ::google::protobuf::uint64 NotifySceneDriveRsp::drivetime() const {
  return drivetime_;
}
inline void NotifySceneDriveRsp::set_drivetime(::google::protobuf::uint64 value) {
  set_has_drivetime();
  drivetime_ = value;
}

// -------------------------------------------------------------------

// CenterCreateSceneReq

// required uint64 sceneId = 1;
inline bool CenterCreateSceneReq::has_sceneid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CenterCreateSceneReq::set_has_sceneid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CenterCreateSceneReq::clear_has_sceneid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CenterCreateSceneReq::clear_sceneid() {
  sceneid_ = GOOGLE_ULONGLONG(0);
  clear_has_sceneid();
}
inline ::google::protobuf::uint64 CenterCreateSceneReq::sceneid() const {
  return sceneid_;
}
inline void CenterCreateSceneReq::set_sceneid(::google::protobuf::uint64 value) {
  set_has_sceneid();
  sceneid_ = value;
}

// required uint64 mapId = 2;
inline bool CenterCreateSceneReq::has_mapid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CenterCreateSceneReq::set_has_mapid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CenterCreateSceneReq::clear_has_mapid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CenterCreateSceneReq::clear_mapid() {
  mapid_ = GOOGLE_ULONGLONG(0);
  clear_has_mapid();
}
inline ::google::protobuf::uint64 CenterCreateSceneReq::mapid() const {
  return mapid_;
}
inline void CenterCreateSceneReq::set_mapid(::google::protobuf::uint64 value) {
  set_has_mapid();
  mapid_ = value;
}

// optional .proto_ff.CreateSceneParamProto param = 3;
inline bool CenterCreateSceneReq::has_param() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CenterCreateSceneReq::set_has_param() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CenterCreateSceneReq::clear_has_param() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CenterCreateSceneReq::clear_param() {
  if (param_ != NULL) param_->::proto_ff::CreateSceneParamProto::Clear();
  clear_has_param();
}
inline const ::proto_ff::CreateSceneParamProto& CenterCreateSceneReq::param() const {
  return param_ != NULL ? *param_ : *default_instance_->param_;
}
inline ::proto_ff::CreateSceneParamProto* CenterCreateSceneReq::mutable_param() {
  set_has_param();
  if (param_ == NULL) param_ = new ::proto_ff::CreateSceneParamProto;
  return param_;
}
inline ::proto_ff::CreateSceneParamProto* CenterCreateSceneReq::release_param() {
  clear_has_param();
  ::proto_ff::CreateSceneParamProto* temp = param_;
  param_ = NULL;
  return temp;
}
inline void CenterCreateSceneReq::set_allocated_param(::proto_ff::CreateSceneParamProto* param) {
  delete param_;
  param_ = param;
  if (param) {
    set_has_param();
  } else {
    clear_has_param();
  }
}

// -------------------------------------------------------------------

// CenterCreateSceneRsp

// required uint64 sceneId = 1;
inline bool CenterCreateSceneRsp::has_sceneid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CenterCreateSceneRsp::set_has_sceneid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CenterCreateSceneRsp::clear_has_sceneid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CenterCreateSceneRsp::clear_sceneid() {
  sceneid_ = GOOGLE_ULONGLONG(0);
  clear_has_sceneid();
}
inline ::google::protobuf::uint64 CenterCreateSceneRsp::sceneid() const {
  return sceneid_;
}
inline void CenterCreateSceneRsp::set_sceneid(::google::protobuf::uint64 value) {
  set_has_sceneid();
  sceneid_ = value;
}

// required uint64 mapId = 2;
inline bool CenterCreateSceneRsp::has_mapid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CenterCreateSceneRsp::set_has_mapid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CenterCreateSceneRsp::clear_has_mapid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CenterCreateSceneRsp::clear_mapid() {
  mapid_ = GOOGLE_ULONGLONG(0);
  clear_has_mapid();
}
inline ::google::protobuf::uint64 CenterCreateSceneRsp::mapid() const {
  return mapid_;
}
inline void CenterCreateSceneRsp::set_mapid(::google::protobuf::uint64 value) {
  set_has_mapid();
  mapid_ = value;
}

// -------------------------------------------------------------------

// SCAddNewScene

// required uint64 mapid = 1;
inline bool SCAddNewScene::has_mapid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SCAddNewScene::set_has_mapid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SCAddNewScene::clear_has_mapid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SCAddNewScene::clear_mapid() {
  mapid_ = GOOGLE_ULONGLONG(0);
  clear_has_mapid();
}
inline ::google::protobuf::uint64 SCAddNewScene::mapid() const {
  return mapid_;
}
inline void SCAddNewScene::set_mapid(::google::protobuf::uint64 value) {
  set_has_mapid();
  mapid_ = value;
}

// required uint64 sceneid = 2;
inline bool SCAddNewScene::has_sceneid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SCAddNewScene::set_has_sceneid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SCAddNewScene::clear_has_sceneid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SCAddNewScene::clear_sceneid() {
  sceneid_ = GOOGLE_ULONGLONG(0);
  clear_has_sceneid();
}
inline ::google::protobuf::uint64 SCAddNewScene::sceneid() const {
  return sceneid_;
}
inline void SCAddNewScene::set_sceneid(::google::protobuf::uint64 value) {
  set_has_sceneid();
  sceneid_ = value;
}

// required uint32 logicid = 3;
inline bool SCAddNewScene::has_logicid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SCAddNewScene::set_has_logicid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SCAddNewScene::clear_has_logicid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SCAddNewScene::clear_logicid() {
  logicid_ = 0u;
  clear_has_logicid();
}
inline ::google::protobuf::uint32 SCAddNewScene::logicid() const {
  return logicid_;
}
inline void SCAddNewScene::set_logicid(::google::protobuf::uint32 value) {
  set_has_logicid();
  logicid_ = value;
}

// -------------------------------------------------------------------

// SCDelScene

// required uint64 sceneid = 1;
inline bool SCDelScene::has_sceneid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SCDelScene::set_has_sceneid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SCDelScene::clear_has_sceneid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SCDelScene::clear_sceneid() {
  sceneid_ = GOOGLE_ULONGLONG(0);
  clear_has_sceneid();
}
inline ::google::protobuf::uint64 SCDelScene::sceneid() const {
  return sceneid_;
}
inline void SCDelScene::set_sceneid(::google::protobuf::uint64 value) {
  set_has_sceneid();
  sceneid_ = value;
}

// -------------------------------------------------------------------

// NotifyLogicSceneClose

// required uint64 sceneId = 1;
inline bool NotifyLogicSceneClose::has_sceneid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NotifyLogicSceneClose::set_has_sceneid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NotifyLogicSceneClose::clear_has_sceneid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NotifyLogicSceneClose::clear_sceneid() {
  sceneid_ = GOOGLE_ULONGLONG(0);
  clear_has_sceneid();
}
inline ::google::protobuf::uint64 NotifyLogicSceneClose::sceneid() const {
  return sceneid_;
}
inline void NotifyLogicSceneClose::set_sceneid(::google::protobuf::uint64 value) {
  set_has_sceneid();
  sceneid_ = value;
}

// required uint64 mapId = 2;
inline bool NotifyLogicSceneClose::has_mapid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void NotifyLogicSceneClose::set_has_mapid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void NotifyLogicSceneClose::clear_has_mapid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void NotifyLogicSceneClose::clear_mapid() {
  mapid_ = GOOGLE_ULONGLONG(0);
  clear_has_mapid();
}
inline ::google::protobuf::uint64 NotifyLogicSceneClose::mapid() const {
  return mapid_;
}
inline void NotifyLogicSceneClose::set_mapid(::google::protobuf::uint64 value) {
  set_has_mapid();
  mapid_ = value;
}

// -------------------------------------------------------------------

// LogicCreatureTransSceneReq

// required uint64 curSceneId = 1;
inline bool LogicCreatureTransSceneReq::has_cursceneid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LogicCreatureTransSceneReq::set_has_cursceneid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LogicCreatureTransSceneReq::clear_has_cursceneid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LogicCreatureTransSceneReq::clear_cursceneid() {
  cursceneid_ = GOOGLE_ULONGLONG(0);
  clear_has_cursceneid();
}
inline ::google::protobuf::uint64 LogicCreatureTransSceneReq::cursceneid() const {
  return cursceneid_;
}
inline void LogicCreatureTransSceneReq::set_cursceneid(::google::protobuf::uint64 value) {
  set_has_cursceneid();
  cursceneid_ = value;
}

// required uint64 dstSceneId = 2;
inline bool LogicCreatureTransSceneReq::has_dstsceneid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LogicCreatureTransSceneReq::set_has_dstsceneid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LogicCreatureTransSceneReq::clear_has_dstsceneid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LogicCreatureTransSceneReq::clear_dstsceneid() {
  dstsceneid_ = GOOGLE_ULONGLONG(0);
  clear_has_dstsceneid();
}
inline ::google::protobuf::uint64 LogicCreatureTransSceneReq::dstsceneid() const {
  return dstsceneid_;
}
inline void LogicCreatureTransSceneReq::set_dstsceneid(::google::protobuf::uint64 value) {
  set_has_dstsceneid();
  dstsceneid_ = value;
}

// required .proto_ff.CreatureTransParam param = 3;
inline bool LogicCreatureTransSceneReq::has_param() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LogicCreatureTransSceneReq::set_has_param() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LogicCreatureTransSceneReq::clear_has_param() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LogicCreatureTransSceneReq::clear_param() {
  if (param_ != NULL) param_->::proto_ff::CreatureTransParam::Clear();
  clear_has_param();
}
inline const ::proto_ff::CreatureTransParam& LogicCreatureTransSceneReq::param() const {
  return param_ != NULL ? *param_ : *default_instance_->param_;
}
inline ::proto_ff::CreatureTransParam* LogicCreatureTransSceneReq::mutable_param() {
  set_has_param();
  if (param_ == NULL) param_ = new ::proto_ff::CreatureTransParam;
  return param_;
}
inline ::proto_ff::CreatureTransParam* LogicCreatureTransSceneReq::release_param() {
  clear_has_param();
  ::proto_ff::CreatureTransParam* temp = param_;
  param_ = NULL;
  return temp;
}
inline void LogicCreatureTransSceneReq::set_allocated_param(::proto_ff::CreatureTransParam* param) {
  delete param_;
  param_ = param;
  if (param) {
    set_has_param();
  } else {
    clear_has_param();
  }
}

// required uint32 srcLogicId = 4;
inline bool LogicCreatureTransSceneReq::has_srclogicid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void LogicCreatureTransSceneReq::set_has_srclogicid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void LogicCreatureTransSceneReq::clear_has_srclogicid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void LogicCreatureTransSceneReq::clear_srclogicid() {
  srclogicid_ = 0u;
  clear_has_srclogicid();
}
inline ::google::protobuf::uint32 LogicCreatureTransSceneReq::srclogicid() const {
  return srclogicid_;
}
inline void LogicCreatureTransSceneReq::set_srclogicid(::google::protobuf::uint32 value) {
  set_has_srclogicid();
  srclogicid_ = value;
}

// -------------------------------------------------------------------

// CenterCreatureTransSceneResultRsp

// required int32 result = 1;
inline bool CenterCreatureTransSceneResultRsp::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CenterCreatureTransSceneResultRsp::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CenterCreatureTransSceneResultRsp::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CenterCreatureTransSceneResultRsp::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 CenterCreatureTransSceneResultRsp::result() const {
  return result_;
}
inline void CenterCreatureTransSceneResultRsp::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// required uint64 cur_sceneid = 2;
inline bool CenterCreatureTransSceneResultRsp::has_cur_sceneid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CenterCreatureTransSceneResultRsp::set_has_cur_sceneid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CenterCreatureTransSceneResultRsp::clear_has_cur_sceneid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CenterCreatureTransSceneResultRsp::clear_cur_sceneid() {
  cur_sceneid_ = GOOGLE_ULONGLONG(0);
  clear_has_cur_sceneid();
}
inline ::google::protobuf::uint64 CenterCreatureTransSceneResultRsp::cur_sceneid() const {
  return cur_sceneid_;
}
inline void CenterCreatureTransSceneResultRsp::set_cur_sceneid(::google::protobuf::uint64 value) {
  set_has_cur_sceneid();
  cur_sceneid_ = value;
}

// required uint64 dst_sceneid = 3;
inline bool CenterCreatureTransSceneResultRsp::has_dst_sceneid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CenterCreatureTransSceneResultRsp::set_has_dst_sceneid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CenterCreatureTransSceneResultRsp::clear_has_dst_sceneid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CenterCreatureTransSceneResultRsp::clear_dst_sceneid() {
  dst_sceneid_ = GOOGLE_ULONGLONG(0);
  clear_has_dst_sceneid();
}
inline ::google::protobuf::uint64 CenterCreatureTransSceneResultRsp::dst_sceneid() const {
  return dst_sceneid_;
}
inline void CenterCreatureTransSceneResultRsp::set_dst_sceneid(::google::protobuf::uint64 value) {
  set_has_dst_sceneid();
  dst_sceneid_ = value;
}

// required int32 kind = 4;
inline bool CenterCreatureTransSceneResultRsp::has_kind() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CenterCreatureTransSceneResultRsp::set_has_kind() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CenterCreatureTransSceneResultRsp::clear_has_kind() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CenterCreatureTransSceneResultRsp::clear_kind() {
  kind_ = 0;
  clear_has_kind();
}
inline ::google::protobuf::int32 CenterCreatureTransSceneResultRsp::kind() const {
  return kind_;
}
inline void CenterCreatureTransSceneResultRsp::set_kind(::google::protobuf::int32 value) {
  set_has_kind();
  kind_ = value;
}

// required uint64 cid = 5;
inline bool CenterCreatureTransSceneResultRsp::has_cid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CenterCreatureTransSceneResultRsp::set_has_cid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CenterCreatureTransSceneResultRsp::clear_has_cid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CenterCreatureTransSceneResultRsp::clear_cid() {
  cid_ = GOOGLE_ULONGLONG(0);
  clear_has_cid();
}
inline ::google::protobuf::uint64 CenterCreatureTransSceneResultRsp::cid() const {
  return cid_;
}
inline void CenterCreatureTransSceneResultRsp::set_cid(::google::protobuf::uint64 value) {
  set_has_cid();
  cid_ = value;
}

// -------------------------------------------------------------------

// CenterCreatureTransSceneSuccessRsp

// required uint64 dst_sceneid = 1;
inline bool CenterCreatureTransSceneSuccessRsp::has_dst_sceneid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CenterCreatureTransSceneSuccessRsp::set_has_dst_sceneid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CenterCreatureTransSceneSuccessRsp::clear_has_dst_sceneid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CenterCreatureTransSceneSuccessRsp::clear_dst_sceneid() {
  dst_sceneid_ = GOOGLE_ULONGLONG(0);
  clear_has_dst_sceneid();
}
inline ::google::protobuf::uint64 CenterCreatureTransSceneSuccessRsp::dst_sceneid() const {
  return dst_sceneid_;
}
inline void CenterCreatureTransSceneSuccessRsp::set_dst_sceneid(::google::protobuf::uint64 value) {
  set_has_dst_sceneid();
  dst_sceneid_ = value;
}

// required uint64 dst_mapid = 2;
inline bool CenterCreatureTransSceneSuccessRsp::has_dst_mapid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CenterCreatureTransSceneSuccessRsp::set_has_dst_mapid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CenterCreatureTransSceneSuccessRsp::clear_has_dst_mapid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CenterCreatureTransSceneSuccessRsp::clear_dst_mapid() {
  dst_mapid_ = GOOGLE_ULONGLONG(0);
  clear_has_dst_mapid();
}
inline ::google::protobuf::uint64 CenterCreatureTransSceneSuccessRsp::dst_mapid() const {
  return dst_mapid_;
}
inline void CenterCreatureTransSceneSuccessRsp::set_dst_mapid(::google::protobuf::uint64 value) {
  set_has_dst_mapid();
  dst_mapid_ = value;
}

// required .proto_ff.CreatureTransParam param = 3;
inline bool CenterCreatureTransSceneSuccessRsp::has_param() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CenterCreatureTransSceneSuccessRsp::set_has_param() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CenterCreatureTransSceneSuccessRsp::clear_has_param() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CenterCreatureTransSceneSuccessRsp::clear_param() {
  if (param_ != NULL) param_->::proto_ff::CreatureTransParam::Clear();
  clear_has_param();
}
inline const ::proto_ff::CreatureTransParam& CenterCreatureTransSceneSuccessRsp::param() const {
  return param_ != NULL ? *param_ : *default_instance_->param_;
}
inline ::proto_ff::CreatureTransParam* CenterCreatureTransSceneSuccessRsp::mutable_param() {
  set_has_param();
  if (param_ == NULL) param_ = new ::proto_ff::CreatureTransParam;
  return param_;
}
inline ::proto_ff::CreatureTransParam* CenterCreatureTransSceneSuccessRsp::release_param() {
  clear_has_param();
  ::proto_ff::CreatureTransParam* temp = param_;
  param_ = NULL;
  return temp;
}
inline void CenterCreatureTransSceneSuccessRsp::set_allocated_param(::proto_ff::CreatureTransParam* param) {
  delete param_;
  param_ = param;
  if (param) {
    set_has_param();
  } else {
    clear_has_param();
  }
}

// -------------------------------------------------------------------

// NotifyRoleEnterScene

// required uint64 cid = 1;
inline bool NotifyRoleEnterScene::has_cid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NotifyRoleEnterScene::set_has_cid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NotifyRoleEnterScene::clear_has_cid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NotifyRoleEnterScene::clear_cid() {
  cid_ = GOOGLE_ULONGLONG(0);
  clear_has_cid();
}
inline ::google::protobuf::uint64 NotifyRoleEnterScene::cid() const {
  return cid_;
}
inline void NotifyRoleEnterScene::set_cid(::google::protobuf::uint64 value) {
  set_has_cid();
  cid_ = value;
}

// required uint64 scene_id = 2;
inline bool NotifyRoleEnterScene::has_scene_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void NotifyRoleEnterScene::set_has_scene_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void NotifyRoleEnterScene::clear_has_scene_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void NotifyRoleEnterScene::clear_scene_id() {
  scene_id_ = GOOGLE_ULONGLONG(0);
  clear_has_scene_id();
}
inline ::google::protobuf::uint64 NotifyRoleEnterScene::scene_id() const {
  return scene_id_;
}
inline void NotifyRoleEnterScene::set_scene_id(::google::protobuf::uint64 value) {
  set_has_scene_id();
  scene_id_ = value;
}

// required uint64 map_id = 3;
inline bool NotifyRoleEnterScene::has_map_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void NotifyRoleEnterScene::set_has_map_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void NotifyRoleEnterScene::clear_has_map_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void NotifyRoleEnterScene::clear_map_id() {
  map_id_ = GOOGLE_ULONGLONG(0);
  clear_has_map_id();
}
inline ::google::protobuf::uint64 NotifyRoleEnterScene::map_id() const {
  return map_id_;
}
inline void NotifyRoleEnterScene::set_map_id(::google::protobuf::uint64 value) {
  set_has_map_id();
  map_id_ = value;
}

// optional .proto_ff.Vector3PB pos = 4;
inline bool NotifyRoleEnterScene::has_pos() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void NotifyRoleEnterScene::set_has_pos() {
  _has_bits_[0] |= 0x00000008u;
}
inline void NotifyRoleEnterScene::clear_has_pos() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void NotifyRoleEnterScene::clear_pos() {
  if (pos_ != NULL) pos_->::proto_ff::Vector3PB::Clear();
  clear_has_pos();
}
inline const ::proto_ff::Vector3PB& NotifyRoleEnterScene::pos() const {
  return pos_ != NULL ? *pos_ : *default_instance_->pos_;
}
inline ::proto_ff::Vector3PB* NotifyRoleEnterScene::mutable_pos() {
  set_has_pos();
  if (pos_ == NULL) pos_ = new ::proto_ff::Vector3PB;
  return pos_;
}
inline ::proto_ff::Vector3PB* NotifyRoleEnterScene::release_pos() {
  clear_has_pos();
  ::proto_ff::Vector3PB* temp = pos_;
  pos_ = NULL;
  return temp;
}
inline void NotifyRoleEnterScene::set_allocated_pos(::proto_ff::Vector3PB* pos) {
  delete pos_;
  pos_ = pos;
  if (pos) {
    set_has_pos();
  } else {
    clear_has_pos();
  }
}

// -------------------------------------------------------------------

// NotifyRoleChgLogic

// required uint64 cid = 1;
inline bool NotifyRoleChgLogic::has_cid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NotifyRoleChgLogic::set_has_cid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NotifyRoleChgLogic::clear_has_cid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NotifyRoleChgLogic::clear_cid() {
  cid_ = GOOGLE_ULONGLONG(0);
  clear_has_cid();
}
inline ::google::protobuf::uint64 NotifyRoleChgLogic::cid() const {
  return cid_;
}
inline void NotifyRoleChgLogic::set_cid(::google::protobuf::uint64 value) {
  set_has_cid();
  cid_ = value;
}

// required uint32 uid = 2;
inline bool NotifyRoleChgLogic::has_uid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void NotifyRoleChgLogic::set_has_uid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void NotifyRoleChgLogic::clear_has_uid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void NotifyRoleChgLogic::clear_uid() {
  uid_ = 0u;
  clear_has_uid();
}
inline ::google::protobuf::uint32 NotifyRoleChgLogic::uid() const {
  return uid_;
}
inline void NotifyRoleChgLogic::set_uid(::google::protobuf::uint32 value) {
  set_has_uid();
  uid_ = value;
}

// required uint32 clientid = 3;
inline bool NotifyRoleChgLogic::has_clientid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void NotifyRoleChgLogic::set_has_clientid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void NotifyRoleChgLogic::clear_has_clientid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void NotifyRoleChgLogic::clear_clientid() {
  clientid_ = 0u;
  clear_has_clientid();
}
inline ::google::protobuf::uint32 NotifyRoleChgLogic::clientid() const {
  return clientid_;
}
inline void NotifyRoleChgLogic::set_clientid(::google::protobuf::uint32 value) {
  set_has_clientid();
  clientid_ = value;
}

// required uint32 logicid = 4;
inline bool NotifyRoleChgLogic::has_logicid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void NotifyRoleChgLogic::set_has_logicid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void NotifyRoleChgLogic::clear_has_logicid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void NotifyRoleChgLogic::clear_logicid() {
  logicid_ = 0u;
  clear_has_logicid();
}
inline ::google::protobuf::uint32 NotifyRoleChgLogic::logicid() const {
  return logicid_;
}
inline void NotifyRoleChgLogic::set_logicid(::google::protobuf::uint32 value) {
  set_has_logicid();
  logicid_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto_ff

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_Scene_2eproto__INCLUDED
