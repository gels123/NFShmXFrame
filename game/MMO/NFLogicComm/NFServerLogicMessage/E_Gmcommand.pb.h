// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: E_Gmcommand.proto

#ifndef PROTOBUF_E_5fGmcommand_2eproto__INCLUDED
#define PROTOBUF_E_5fGmcommand_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "yd_fieldoptions.pb.h"
// @@protoc_insertion_point(includes)

namespace proto_ff {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_E_5fGmcommand_2eproto();
void protobuf_AssignDesc_E_5fGmcommand_2eproto();
void protobuf_ShutdownFile_E_5fGmcommand_2eproto();

class E_GmcommandGmcommand;
class Sheet_GmcommandGmcommand;

// ===================================================================

class E_GmcommandGmcommand : public ::google::protobuf::Message {
 public:
  E_GmcommandGmcommand();
  virtual ~E_GmcommandGmcommand();

  E_GmcommandGmcommand(const E_GmcommandGmcommand& from);

  inline E_GmcommandGmcommand& operator=(const E_GmcommandGmcommand& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_GmcommandGmcommand& default_instance();

  void Swap(E_GmcommandGmcommand* other);

  // implements Message ----------------------------------------------

  E_GmcommandGmcommand* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_GmcommandGmcommand& from);
  void MergeFrom(const E_GmcommandGmcommand& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 m_id = 1;
  inline bool has_m_id() const;
  inline void clear_m_id();
  static const int kMIdFieldNumber = 1;
  inline ::google::protobuf::int32 m_id() const;
  inline void set_m_id(::google::protobuf::int32 value);

  // optional string m_key = 2;
  inline bool has_m_key() const;
  inline void clear_m_key();
  static const int kMKeyFieldNumber = 2;
  inline const ::std::string& m_key() const;
  inline void set_m_key(const ::std::string& value);
  inline void set_m_key(const char* value);
  inline void set_m_key(const char* value, size_t size);
  inline ::std::string* mutable_m_key();
  inline ::std::string* release_m_key();
  inline void set_allocated_m_key(::std::string* m_key);

  // optional int32 m_paramcount = 3;
  inline bool has_m_paramcount() const;
  inline void clear_m_paramcount();
  static const int kMParamcountFieldNumber = 3;
  inline ::google::protobuf::int32 m_paramcount() const;
  inline void set_m_paramcount(::google::protobuf::int32 value);

  // optional string m_des = 4;
  inline bool has_m_des() const;
  inline void clear_m_des();
  static const int kMDesFieldNumber = 4;
  inline const ::std::string& m_des() const;
  inline void set_m_des(const ::std::string& value);
  inline void set_m_des(const char* value);
  inline void set_m_des(const char* value, size_t size);
  inline ::std::string* mutable_m_des();
  inline ::std::string* release_m_des();
  inline void set_allocated_m_des(::std::string* m_des);

  // @@protoc_insertion_point(class_scope:proto_ff.E_GmcommandGmcommand)
 private:
  inline void set_has_m_id();
  inline void clear_has_m_id();
  inline void set_has_m_key();
  inline void clear_has_m_key();
  inline void set_has_m_paramcount();
  inline void clear_has_m_paramcount();
  inline void set_has_m_des();
  inline void clear_has_m_des();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* m_key_;
  ::google::protobuf::int32 m_id_;
  ::google::protobuf::int32 m_paramcount_;
  ::std::string* m_des_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fGmcommand_2eproto();
  friend void protobuf_AssignDesc_E_5fGmcommand_2eproto();
  friend void protobuf_ShutdownFile_E_5fGmcommand_2eproto();

  void InitAsDefaultInstance();
  static E_GmcommandGmcommand* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_GmcommandGmcommand : public ::google::protobuf::Message {
 public:
  Sheet_GmcommandGmcommand();
  virtual ~Sheet_GmcommandGmcommand();

  Sheet_GmcommandGmcommand(const Sheet_GmcommandGmcommand& from);

  inline Sheet_GmcommandGmcommand& operator=(const Sheet_GmcommandGmcommand& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_GmcommandGmcommand& default_instance();

  void Swap(Sheet_GmcommandGmcommand* other);

  // implements Message ----------------------------------------------

  Sheet_GmcommandGmcommand* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_GmcommandGmcommand& from);
  void MergeFrom(const Sheet_GmcommandGmcommand& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.E_GmcommandGmcommand E_GmcommandGmcommand_List = 1;
  inline int e_gmcommandgmcommand_list_size() const;
  inline void clear_e_gmcommandgmcommand_list();
  static const int kEGmcommandGmcommandListFieldNumber = 1;
  inline const ::proto_ff::E_GmcommandGmcommand& e_gmcommandgmcommand_list(int index) const;
  inline ::proto_ff::E_GmcommandGmcommand* mutable_e_gmcommandgmcommand_list(int index);
  inline ::proto_ff::E_GmcommandGmcommand* add_e_gmcommandgmcommand_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_GmcommandGmcommand >&
      e_gmcommandgmcommand_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_GmcommandGmcommand >*
      mutable_e_gmcommandgmcommand_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_GmcommandGmcommand)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_GmcommandGmcommand > e_gmcommandgmcommand_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fGmcommand_2eproto();
  friend void protobuf_AssignDesc_E_5fGmcommand_2eproto();
  friend void protobuf_ShutdownFile_E_5fGmcommand_2eproto();

  void InitAsDefaultInstance();
  static Sheet_GmcommandGmcommand* default_instance_;
};
// ===================================================================


// ===================================================================

// E_GmcommandGmcommand

// optional int32 m_id = 1;
inline bool E_GmcommandGmcommand::has_m_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_GmcommandGmcommand::set_has_m_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_GmcommandGmcommand::clear_has_m_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_GmcommandGmcommand::clear_m_id() {
  m_id_ = 0;
  clear_has_m_id();
}
inline ::google::protobuf::int32 E_GmcommandGmcommand::m_id() const {
  return m_id_;
}
inline void E_GmcommandGmcommand::set_m_id(::google::protobuf::int32 value) {
  set_has_m_id();
  m_id_ = value;
}

// optional string m_key = 2;
inline bool E_GmcommandGmcommand::has_m_key() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_GmcommandGmcommand::set_has_m_key() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_GmcommandGmcommand::clear_has_m_key() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_GmcommandGmcommand::clear_m_key() {
  if (m_key_ != &::google::protobuf::internal::kEmptyString) {
    m_key_->clear();
  }
  clear_has_m_key();
}
inline const ::std::string& E_GmcommandGmcommand::m_key() const {
  return *m_key_;
}
inline void E_GmcommandGmcommand::set_m_key(const ::std::string& value) {
  set_has_m_key();
  if (m_key_ == &::google::protobuf::internal::kEmptyString) {
    m_key_ = new ::std::string;
  }
  m_key_->assign(value);
}
inline void E_GmcommandGmcommand::set_m_key(const char* value) {
  set_has_m_key();
  if (m_key_ == &::google::protobuf::internal::kEmptyString) {
    m_key_ = new ::std::string;
  }
  m_key_->assign(value);
}
inline void E_GmcommandGmcommand::set_m_key(const char* value, size_t size) {
  set_has_m_key();
  if (m_key_ == &::google::protobuf::internal::kEmptyString) {
    m_key_ = new ::std::string;
  }
  m_key_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* E_GmcommandGmcommand::mutable_m_key() {
  set_has_m_key();
  if (m_key_ == &::google::protobuf::internal::kEmptyString) {
    m_key_ = new ::std::string;
  }
  return m_key_;
}
inline ::std::string* E_GmcommandGmcommand::release_m_key() {
  clear_has_m_key();
  if (m_key_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = m_key_;
    m_key_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void E_GmcommandGmcommand::set_allocated_m_key(::std::string* m_key) {
  if (m_key_ != &::google::protobuf::internal::kEmptyString) {
    delete m_key_;
  }
  if (m_key) {
    set_has_m_key();
    m_key_ = m_key;
  } else {
    clear_has_m_key();
    m_key_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 m_paramcount = 3;
inline bool E_GmcommandGmcommand::has_m_paramcount() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void E_GmcommandGmcommand::set_has_m_paramcount() {
  _has_bits_[0] |= 0x00000004u;
}
inline void E_GmcommandGmcommand::clear_has_m_paramcount() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void E_GmcommandGmcommand::clear_m_paramcount() {
  m_paramcount_ = 0;
  clear_has_m_paramcount();
}
inline ::google::protobuf::int32 E_GmcommandGmcommand::m_paramcount() const {
  return m_paramcount_;
}
inline void E_GmcommandGmcommand::set_m_paramcount(::google::protobuf::int32 value) {
  set_has_m_paramcount();
  m_paramcount_ = value;
}

// optional string m_des = 4;
inline bool E_GmcommandGmcommand::has_m_des() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void E_GmcommandGmcommand::set_has_m_des() {
  _has_bits_[0] |= 0x00000008u;
}
inline void E_GmcommandGmcommand::clear_has_m_des() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void E_GmcommandGmcommand::clear_m_des() {
  if (m_des_ != &::google::protobuf::internal::kEmptyString) {
    m_des_->clear();
  }
  clear_has_m_des();
}
inline const ::std::string& E_GmcommandGmcommand::m_des() const {
  return *m_des_;
}
inline void E_GmcommandGmcommand::set_m_des(const ::std::string& value) {
  set_has_m_des();
  if (m_des_ == &::google::protobuf::internal::kEmptyString) {
    m_des_ = new ::std::string;
  }
  m_des_->assign(value);
}
inline void E_GmcommandGmcommand::set_m_des(const char* value) {
  set_has_m_des();
  if (m_des_ == &::google::protobuf::internal::kEmptyString) {
    m_des_ = new ::std::string;
  }
  m_des_->assign(value);
}
inline void E_GmcommandGmcommand::set_m_des(const char* value, size_t size) {
  set_has_m_des();
  if (m_des_ == &::google::protobuf::internal::kEmptyString) {
    m_des_ = new ::std::string;
  }
  m_des_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* E_GmcommandGmcommand::mutable_m_des() {
  set_has_m_des();
  if (m_des_ == &::google::protobuf::internal::kEmptyString) {
    m_des_ = new ::std::string;
  }
  return m_des_;
}
inline ::std::string* E_GmcommandGmcommand::release_m_des() {
  clear_has_m_des();
  if (m_des_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = m_des_;
    m_des_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void E_GmcommandGmcommand::set_allocated_m_des(::std::string* m_des) {
  if (m_des_ != &::google::protobuf::internal::kEmptyString) {
    delete m_des_;
  }
  if (m_des) {
    set_has_m_des();
    m_des_ = m_des;
  } else {
    clear_has_m_des();
    m_des_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// Sheet_GmcommandGmcommand

// repeated .proto_ff.E_GmcommandGmcommand E_GmcommandGmcommand_List = 1;
inline int Sheet_GmcommandGmcommand::e_gmcommandgmcommand_list_size() const {
  return e_gmcommandgmcommand_list_.size();
}
inline void Sheet_GmcommandGmcommand::clear_e_gmcommandgmcommand_list() {
  e_gmcommandgmcommand_list_.Clear();
}
inline const ::proto_ff::E_GmcommandGmcommand& Sheet_GmcommandGmcommand::e_gmcommandgmcommand_list(int index) const {
  return e_gmcommandgmcommand_list_.Get(index);
}
inline ::proto_ff::E_GmcommandGmcommand* Sheet_GmcommandGmcommand::mutable_e_gmcommandgmcommand_list(int index) {
  return e_gmcommandgmcommand_list_.Mutable(index);
}
inline ::proto_ff::E_GmcommandGmcommand* Sheet_GmcommandGmcommand::add_e_gmcommandgmcommand_list() {
  return e_gmcommandgmcommand_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_GmcommandGmcommand >&
Sheet_GmcommandGmcommand::e_gmcommandgmcommand_list() const {
  return e_gmcommandgmcommand_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_GmcommandGmcommand >*
Sheet_GmcommandGmcommand::mutable_e_gmcommandgmcommand_list() {
  return &e_gmcommandgmcommand_list_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto_ff

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_E_5fGmcommand_2eproto__INCLUDED
