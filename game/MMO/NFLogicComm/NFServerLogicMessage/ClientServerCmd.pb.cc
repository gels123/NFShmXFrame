// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ClientServerCmd.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "ClientServerCmd.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace proto_ff {

namespace {

const ::google::protobuf::EnumDescriptor* ClientServerCmd_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_ClientServerCmd_2eproto() {
  protobuf_AddDesc_ClientServerCmd_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "ClientServerCmd.proto");
  GOOGLE_CHECK(file != NULL);
  ClientServerCmd_descriptor_ = file->enum_type(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_ClientServerCmd_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
}

}  // namespace

void protobuf_ShutdownFile_ClientServerCmd_2eproto() {
}

void protobuf_AddDesc_ClientServerCmd_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::yd_fieldoptions::protobuf_AddDesc_yd_5ffieldoptions_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\025ClientServerCmd.proto\022\010proto_ff\032\025yd_fi"
    "eldoptions.proto*\274W\n\017ClientServerCmd\022\024\n\020"
    "CLIENT_LOGIN_REQ\020\001\022\024\n\020CLIENT_LOGIN_RSP\020\002"
    "\022\032\n\026CLIENT_CREATE_ROLE_REQ\020\003\022\032\n\026CLIENT_C"
    "REATE_ROLE_RSP\020\004\022\030\n\024CLIENT_QUEUE_POS_REQ"
    "\020\005\022\030\n\024CLIENT_QUEUE_POS_RSP\020\006\022\033\n\027CLIENT_Q"
    "UEUE_CANCEL_REQ\020\007\022\033\n\027CLIENT_QUEUE_CANCEL"
    "_RSP\020\010\022\030\n\024CLIENT_RECONNECT_REQ\020\t\022\030\n\024CLIE"
    "NT_RECONNECT_RSP\020\n\022\031\n\025CLIENT_ENTER_GAME_"
    "REQ\020\013\022\031\n\025CLIENT_ENTER_GAME_RSP\020\014\022\034\n\030CLIE"
    "NT_RET_ROLE_LIST_REQ\020\r\022\034\n\030CLIENT_RET_ROL"
    "E_LIST_RSP\020\016\022\023\n\017CLIENT_PING_REQ\020\017\022\023\n\017CLI"
    "ENT_PING_RSP\020\020\022!\n\035NOTIFY_CLIENT_CREATURE"
    "_CREATE\020e\022\"\n\036NOTIFY_CLIENT_CREATURE_DEST"
    "ORY\020f\022\022\n\016BROAD_CHG_NAME\020g\022\033\n\026NOTIFY_CLIE"
    "NT_LOAD_MAP\020\227\001\022\"\n\035NOTIFY_CLIENT_TRANS_SC"
    "ENE_RSP\020\230\001\022\033\n\026CLIENT_LOAD_MAP_FINISH\020\231\001\022"
    "\033\n\026CLIENT_SCENE_TRANS_REQ\020\232\001\022!\n\034NOTIFY_S"
    "CENE_CORPSE_INFO_RSP\020\233\001\022\033\n\026NOTIFY_SCENE_"
    "DRIVE_RSP\020\234\001\022\034\n\027CLIENT_PACKAGE_INFO_REQ\020"
    "\310\001\022\034\n\027CLIENT_PACKAGE_INFO_RSP\020\311\001\022\034\n\027CLIE"
    "NT_PACKAGE_SORT_REQ\020\312\001\022\034\n\027CLIENT_PACKAGE"
    "_SORT_RSP\020\313\001\022\037\n\032CLIENT_STORAGE_OPERATE_R"
    "EQ\020\314\001\022\037\n\032CLIENT_STORAGE_OPERATE_RSP\020\315\001\022\032"
    "\n\025NOTIFY_PACKAGE_UPDATE\020\316\001\022 \n\033CLIENT_TO_"
    "LOGIC_PACKAGE_USE\020\317\001\022 \n\033LOGIC_TO_CLIENT_"
    "PACKAGE_USE\020\320\001\022\033\n\026CLIENT_PLAYER_INFO_RSP"
    "\020\373\001\022\026\n\021CREATURE_ATTR_SYN\020\374\001\022\030\n\023CREATURE_"
    "ATTR_BROAD\020\375\001\022\031\n\024CLIENT_SHOW_INFO_RSP\020\376\001"
    "\022\033\n\026NOTIFY_FACADE_CAST_RSP\020\377\001\022\030\n\023CLIENT_"
    "CHG_NAME_REQ\020\200\002\022\030\n\023CLIENT_CHG_NAME_RSP\020\201"
    "\002\022\031\n\024CREATURE_STATE_BROAD\020\202\002\022$\n\037CLIENT_T"
    "O_LOGIC_PLAYER_SEAT_REQ\020\203\002\022\035\n\030LOGIC_TO_C"
    "LIENT_SEAT_RSP\020\204\002\022!\n\034LOGIC_TO_CLIENT_SEA"
    "T_EXP_RSP\020\205\002\022*\n%CLIENT_TO_LOGIC_LOGIN_HA"
    "NGUP_DATA_REQ\020\206\002\022*\n%LOGIC_TO_CLIENT_LOGI"
    "N_HANGUP_DATA_RSP\020\207\002\022*\n%CLIENT_TO_LOGIC_"
    "GET_HANGUP_REWARD_REQ\020\210\002\022*\n%LOGIC_TO_CLI"
    "ENT_GET_HANGUP_REWARD_RSP\020\211\002\022\022\n\rCLIENT_G"
    "M_REQ\020\216\002\022\022\n\rCLIENT_GM_RSP\020\217\002\022\024\n\017NOTIFY_G"
    "ROW_RSP\020\231\002\022\031\n\024CLIENT_GROW_LVUP_REQ\020\232\002\022\031\n"
    "\024CLIENT_GROW_LVUP_RSP\020\233\002\022!\n\034CLIENT_GROW_"
    "FACADE_DRESS_REQ\020\234\002\022!\n\034CLIENT_GROW_FACAD"
    "E_DRESS_RSP\020\235\002\022#\n\036CLIENT_GROW_FACADE_UND"
    "RESS_REQ\020\236\002\022#\n\036CLIENT_GROW_FACADE_UNDRES"
    "S_RSP\020\237\002\022\033\n\026CLIENT_EQUIP_DRESS_REQ\020\254\002\022\033\n"
    "\026CLIENT_EQUIP_DRESS_RSP\020\255\002\022\035\n\030CLIENT_EQU"
    "IP_UNDRESS_REQ\020\256\002\022\035\n\030CLIENT_EQUIP_UNDRES"
    "S_RSP\020\257\002\022\032\n\025NOTIFY_EQUIP_INFO_RSP\020\260\002\022#\n\036"
    "CLIENT_TO_SERVER_MISSION_BEGIN\020\336\002\022&\n!CLI"
    "ENT_TO_LOGIC_QUERY_MiSSIONLIST\020\337\002\022&\n!LOG"
    "IC_TO_CLIENT_QUERY_MiSSIONLIST\020\340\002\022\"\n\035CLI"
    "ENT_TO_LOGIC_ACCEPTMISSION\020\341\002\022\"\n\035LOGIC_T"
    "O_CLIENT_ACCEPTMISSION\020\342\002\022#\n\036CLIENT_TO_L"
    "OGIC_ABANDONMISSION\020\343\002\022#\n\036LOGIC_TO_CLIEN"
    "T_ABANDONMISSION\020\344\002\022\"\n\035CLIENT_TO_LOGIC_S"
    "UBMITMISSION\020\345\002\022\"\n\035LOGIC_TO_CLIENT_SUBMI"
    "TMISSION\020\346\002\022 \n\033CLIENT_TO_LOGIC_TALKWITHN"
    "PC\020\347\002\022\'\n\"CLIENT_TO_LOGIC_SUBMITMISSIONGO"
    "ODS\020\351\002\022\'\n\"LOGIC_TO_CLIENT_SUBMITMISSIONG"
    "OODS\020\352\002\022&\n!CLIENT_TO_LOGIC_NPC_ACCEPTMIS"
    "SION\020\353\002\022&\n!LOGIC_TO_CLIENT_NPC_ACCEPTMIS"
    "SION\020\354\002\022*\n%CLIENT_TO_LOGIC_MISSION_ONEKE"
    "Y_FINISH\020\355\002\022*\n%LOGIC_TO_CLIENT_MISSION_O"
    "NEKEY_FINISH\020\356\002\022(\n#CLIENT_TO_LOGIC_MISSI"
    "ON_ONCE_FINISH\020\357\002\022(\n#LOGIC_TO_CLIENT_MIS"
    "SION_ONCE_FINISH\020\360\002\022.\n)LOGIC_TO_CLIENT_U"
    "PDATEMISSIONSTATUSNOTIFY\020\362\002\022*\n%LOGIC_TO_"
    "CLIENT_UPDDATE_DY_ACCEPT_NUM\020\363\002\022)\n$LOGIC"
    "_TO_CLIENT_RECEIVEMISSIONNOTIFY\020\364\002\022*\n%LO"
    "GIC_TO_CLIENT_GCDELETEMISSIONNOTIFY\020\365\002\022!"
    "\n\034CLIENT_TO_SERVER_MISSION_END\020\220\003\022\035\n\030CLI"
    "ENT_SERVER_CHAT_BEGIN\020\256\003\022!\n\034CLIENT_TO_LO"
    "GIC_CHAT_MSG_REQ\020\257\003\022!\n\034LOGIC_TO_CLIENT_C"
    "HAT_MSG_RSP\020\260\003\022)\n$CLIENT_TO_CENTER_ASK_O"
    "FFLINE_MSG_REQ\020\261\003\022)\n$CENTER_TO_CLIENT_AS"
    "K_OFFLINE_MSG_RSP\020\262\003\0221\n,CLIENT_TO_CENTER"
    "_INTRVAL_ASK_OFFLINE_MSG_REQ\020\263\003\0221\n,CENTE"
    "R_TO_CLIENT_INTRVAL_ASK_OFFLINE_MSG_RSP\020"
    "\264\003\022+\n&LOGIC_TO_CLIENT_SYSTEM_CHAT_MSG_NO"
    "TIFY\020\265\003\022)\n$SERVER_TO_CLIENT_SHOW_MESSAGE"
    "_NOTIFY\020\266\003\022\033\n\026CLIENT_SERVER_CHAT_END\020\302\003\022"
    "\"\n\035CLIENT_TO_SERVER_FRIEND_BEGIN\020\314\003\022\'\n\"C"
    "LIENT_TO_CENTER_RELATION_DATA_REQ\020\315\003\022\'\n\""
    "CENTER_TO_CLIENT_RELATION_DATA_RSP\020\316\003\022&\n"
    "!CLIENT_TO_CENTER_FRIEND_APPLY_REQ\020\317\003\022&\n"
    "!CENTER_TO_CLIENT_FRIEND_APPLY_RSP\020\320\003\022%\n"
    " CLIENT_TO_CENTER_AGREE_APPLY_REQ\020\321\003\022%\n "
    "CENTER_TO_CLIENT_AGREE_APPLY_RSP\020\322\003\022*\n%C"
    "ENTER_TO_CLIENT_SYNC_RELATION_NOTIFY\020\323\003\022"
    ",\n\'CENTER_TO_CLIENT_RELATION_ONLINE_NOTI"
    "FY\020\324\003\022#\n\036CLIENT_TO_CENTER_ADD_BLACK_REQ\020"
    "\325\003\022#\n\036CENTER_TO_CLIENT_ADD_BLACK_RSP\020\326\003\022"
    ")\n$CLIENT_TO_CENTER_DELETE_RELATION_REQ\020"
    "\327\003\022)\n$CENTER_TO_CLIENT_DELETE_RELATION_R"
    "SP\020\330\003\022-\n(CENTER_TO_CLIENT_SYNC_DELRELATI"
    "ON_NOTIFY\020\331\003\022*\n%CLIENT_TO_CENTER_RECOMME"
    "ND_FRIEND_REQ\020\332\003\022*\n%CENTER_TO_CLIENT_REC"
    "OMMEND_FRIEND_RSP\020\333\003\022-\n(CLIENT_TO_CENTER"
    "_ADD_SHIELD_RELATION_REQ\020\334\003\022-\n(CENTER_TO"
    "_CLIENT_ADD_SHIELD_RELATION_RSP\020\335\003\022,\n\'CL"
    "IENT_TO_CENTER_GIFT_GIVING_RECORD_REQ\020\352\003"
    "\022,\n\'CENTER_TO_CLIENT_GIFT_GIVING_RECORD_"
    "RSP\020\353\003\022%\n CLIENT_TO_CENTER_GIVING_GIFT_R"
    "EQ\020\354\003\022%\n CENTER_TO_CLIENT_GIVING_GIFT_RS"
    "P\020\355\003\022(\n#CENTER_TO_CLIENT_GIVING_GIFT_NOT"
    "ICE\020\356\003\022(\n#CLIENT_TO_CENTER_THANKS_GIVING"
    "_GIFT\020\357\003\022 \n\033CLIENT_TO_SERVER_FRIEND_END\020"
    "\364\003\022!\n\034CLIENT_TO_CENTER_QUERY_BEGIN\020\365\003\022+\n"
    "&CLIENT_TO_CENTER_CHARACTER_DETAIL_DATA\020"
    "\366\003\022+\n&CENTER_TO_CLIENT_CHARACTER_DETAIL_"
    "DATA\020\367\003\022)\n$CLIENT_TO_CENTER_CHARACTER_MI"
    "NI_DATA\020\370\003\022)\n$CENTER_TO_CLIENT_CHARACTER"
    "_MINI_DATA\020\371\003\022*\n%CLIENT_TO_CENTER_CHAR_F"
    "UNC_FIGHT_DATA\020\372\003\022*\n%CENTER_TO_CLIENT_CH"
    "AR_FUNC_FIGHT_DATA\020\373\003\022\037\n\032CLIENT_TO_CENTE"
    "R_QUERY_END\020\376\003\022\035\n\030CLIENT_SERVER_MAIL_BEG"
    "IN\020\260\004\022)\n$CLIENT_TO_CENTER_GETMAILITEMLIS"
    "T_REQ\020\261\004\022)\n$SERVER_TO_CLIENT_GETMAILITEM"
    "LIST_RSP\020\262\004\022!\n\034CLIENT_TO_CENTER_ASKMAIL_"
    "REQ\020\263\004\022!\n\034SERVER_TO_CLIENT_ASKMAIL_RSP\020\264"
    "\004\022$\n\037CLIENT_TO_CENTER_DELETEMAIL_REQ\020\265\004\022"
    "$\n\037SERVER_TO_CLIENT_DELETEMAIL_RSP\020\266\004\022.\n"
    ")CLIENT_TO_CENTER_GETALLMAILATTACHMENT_R"
    "EQ\020\267\004\022.\n)SERVER_TO_CLIENT_GETALLMAILATTA"
    "CHMENT_RSP\020\270\004\022+\n&CLIENT_TO_CENTER_GETMAI"
    "LATTACHMENT_REQ\020\272\004\022+\n&SERVER_TO_CLIENT_G"
    "ETMAILATTACHMENT_RSP\020\271\004\022\'\n\"SERVER_TO_CLI"
    "ENT_UNREADMAIL_NOTIFY\020\273\004\022$\n\037SERVER_TO_CL"
    "IENT_NEWMAIL_NOTIFY\020\274\004\022\033\n\026CLIENT_SERVER_"
    "MAIL_END\020\303\004\022+\n&SERVER_TO_CLIENT_FUNCTION"
    "UNLOCK_NOTIFY\020\304\004\022)\n$SERVER_TO_CLIENT_FUN"
    "CTIONUNLOCK_INFO\020\305\004\0223\n.CLIENT_TO_SERVER_"
    "FUNCTIONUNLOCK_GET_REWARD_REQ\020\306\004\0223\n.SERV"
    "ER_TO_CLIENT_FUNCTIONUNLOCK_GET_REWARD_R"
    "SP\020\307\004\022\024\n\017CLIENT_MOVE_REQ\020\331\004\022\023\n\016MOVE_BROA"
    "D_RSP\020\332\004\022\026\n\021MOVE_TELEPORT_RSP\020\333\004\022\031\n\024PLAY"
    "ER_RELIVE_NOTIFY\020\213\005\022\026\n\021PLAYER_RELIVE_REQ"
    "\020\214\005\022\026\n\021PLAYER_RELIVE_RSP\020\215\005\022\022\n\rSKILL_USE"
    "_REQ\020\275\005\022\032\n\025SKILL_TARGET_SYNC_REQ\020\276\005\022\033\n\026S"
    "KILL_USE_RESULT_BROAD\020\277\005\022\030\n\023SKILL_USE_BR"
    "OAD_RSP\020\300\005\022\031\n\024SKILL_WARN_BROAD_RSP\020\301\005\022\031\n"
    "\024SKILL_CANCEL_USE_REQ\020\302\005\022\037\n\032SKILL_CANCEL"
    "_USE_BROAD_RSP\020\303\005\022\033\n\026SKILL_GROUP_UPDATE_"
    "RSP\020\304\005\022\023\n\016SKILL_INFO_REQ\020\305\005\022\023\n\016SKILL_INF"
    "O_RSP\020\306\005\022\032\n\025SKILL_INFO_UPDATE_RSP\020\307\005\022\030\n\023"
    "SKILL_GROUP_CHG_REQ\020\310\005\022\030\n\023SKILL_GROUP_CH"
    "G_RSP\020\311\005\022\027\n\022SKILL_INFO_DEL_RSP\020\312\005\022\026\n\021SKI"
    "LL_WAKE_UP_REQ\020\313\005\022\026\n\021SKILL_WAKE_UP_RSP\020\314"
    "\005\022\026\n\021SKILL_CHG_POS_REQ\020\315\005\022\026\n\021SKILL_CHG_P"
    "OS_RSP\020\316\005\022\022\n\rBUFF_LIST_REQ\020\357\005\022\022\n\rBUFF_LI"
    "ST_RSP\020\360\005\022\024\n\017BUFF_UPDATE_RSP\020\361\005\022\021\n\014BUFF_"
    "DEL_RSP\020\362\005\022\032\n\025BUFF_EFFECT_BROAD_RSP\020\363\005\022\033"
    "\n\026NOTIFY_BOSS_SIMPLE_RSP\020\322\006\022\022\n\rBOSS_DATA"
    "_REQ\020\323\006\022\022\n\rBOSS_DATA_RSP\020\324\006\022\037\n\032NOTIFY_SC"
    "ENE_BOSS_DATA_RSP\020\325\006\022!\n\034NOTIFY_SCENE_BOS"
    "S_UPDATE_RSP\020\326\006\022\031\n\024NOTIFY_BOSS_INFO_RSP\020"
    "\327\006\022\027\n\022ENTER_BOSS_MAP_REQ\020\330\006\022\027\n\022ENTER_BOS"
    "S_MAP_RSP\020\331\006\022\024\n\017ATTENT_BOSS_REQ\020\332\006\022\024\n\017AT"
    "TENT_BOSS_RSP\020\333\006\022\022\n\rBOSS_DROP_REQ\020\334\006\022\022\n\r"
    "BOSS_DROP_RSP\020\335\006\022\033\n\026NOTIFY_BOSS_RESULT_R"
    "SP\020\336\006\022\022\n\rBOSS_KILL_REQ\020\337\006\022\022\n\rBOSS_KILL_R"
    "SP\020\340\006\022!\n\034CLIENT_TO_LOGIC_FACADE_BEGIN\020\204\007"
    "\022$\n\037CLIENT_TO_LOGIC_FACADE_INFO_REQ\020\205\007\022$"
    "\n\037LOGIC_TO_CLIENT_FACADE_INFO_RSP\020\206\007\022%\n "
    "CLIENT_TO_LOGIC_FACADE_LEVUP_REQ\020\207\007\022%\n L"
    "OGIC_TO_CLIENT_FACADE_LEVUP_RSP\020\210\007\022%\n CL"
    "IENT_TO_LOGIC_FACADE_DRESS_REQ\020\211\007\022%\n LOG"
    "IC_TO_CLIENT_FACADE_DRESS_RSP\020\212\007\022\'\n\"CLIE"
    "NT_TO_LOGIC_FACADE_UNDRESS_REQ\020\217\007\022\'\n\"LOG"
    "IC_TO_CLIENT_FACADE_UNDRESS_RSP\020\220\007\022,\n\'CL"
    "IENT_TO_LOGIC_FACADE_FRAGEMNT_USE_REQ\020\221\007"
    "\022,\n\'LOGIC_TO_CLIENT_FACADE_FRAGEMNT_USE_"
    "RSP\020\222\007\022/\n*CLIENT_TO_LOGIC_FACADE_SKILL_U"
    "NLOCK_NOTIFY\020\223\007\022)\n$CLIENT_TO_LOGIC_FACAD"
    "E_SKILL_LEV_REQ\020\224\007\022)\n$LOGIC_TO_CLIENT_FA"
    "CADE_SKILL_LEV_RSP\020\225\007\022,\n\'CLIENT_TO_LOGIC"
    "_FACADE_FANTASY_INFO_REQ\020\230\007\022,\n\'LOGIC_TO_"
    "CLIENT_FACADE_FANTASY_INFO_RSP\020\231\007\022.\n)CLI"
    "ENT_TO_LOGIC_FACADE_FANTASY_ACTIVE_REQ\020\232"
    "\007\022.\n)LOGIC_TO_CLIENT_FACADE_FANTASY_ACTI"
    "VE_RSP\020\233\007\022/\n*CLIENT_TO_LOGIC_FACADE_FANT"
    "ASY_LEVELUP_REQ\020\234\007\022/\n*LOGIC_TO_CLIENT_FA"
    "CADE_FANTASY_LEVELUP_RSP\020\235\007\022-\n(CLIENT_TO"
    "_LOGIC_FACADE_FANTASY_DRESS_REQ\020\236\007\022-\n(LO"
    "GIC_TO_CLIENT_FACADE_FANTASY_DRESS_RSP\020\237"
    "\007\022/\n*CLIENT_TO_LOGIC_FACADE_FANTASY_UNDR"
    "ESS_REQ\020\240\007\022/\n*LOGIC_TO_CLIENT_FACADE_FAN"
    "TASY_UNDRESS_RSP\020\241\007\022\037\n\032CLIENT_TO_LOGIC_F"
    "ACADE_END\020\266\007\022(\n#CLIENT_TO_LOGIC_MINI_ACT"
    "IVITY_BEGIN\020\267\007\022,\n\'CLIENT_TO_LOGIC_GET_GO"
    "D_RELICS_INFO_REQ\020\270\007\022,\n\'LOGIC_TO_CLIENT_"
    "GET_GOD_RELICS_INFO_RSP\020\271\007\022-\n(LOGIC_TO_C"
    "LIENT_UPDATE_GOD_RELICS_NOTIFY\020\272\007\0223\n.CLI"
    "ENT_TO_LOGIC_GET_GOD_RELICS_TASK_REWARD_"
    "REQ\020\273\007\0223\n.LOGIC_TO_CLIENT_GET_GOD_RELICS"
    "_TASK_REWARD_RSP\020\274\007\0229\n4CLIENT_TO_LOGIC_G"
    "ET_GOD_RELICS_GROUP_TASK_REWARD_REQ\020\275\007\0229"
    "\n4LOGIC_TO_CLIENT_GET_GOD_RELICS_GROUP_T"
    "ASK_REWARD_RSP\020\276\007\022,\n\'CLIENT_TO_LOGIC_GET"
    "_DAILY_TASK_DATA_REQ\020\300\007\022,\n\'LOGIC_TO_CLIE"
    "NT_GET_DAILY_TASK_DATA_RSP\020\301\007\022-\n(LOGIC_T"
    "O_CLIENT_UPDATE_DAILY_TASK_NOTIFY\020\302\007\022.\n)"
    "CLIENT_TO_LOGIC_GET_DAILY_TASK_REWARD_RE"
    "Q\020\304\007\022.\n)LOGIC_TO_CLIENT_GET_DAILY_TASK_R"
    "EWARD_RSP\020\305\007\022+\n&CLIENT_TO_LOGIC_DAILY_TA"
    "SK_LEVELUP_REQ\020\306\007\022+\n&LOGIC_TO_CLIENT_DAI"
    "LY_TASK_LEVELUP_RSP\020\307\007\0223\n.CLIENT_TO_LOGI"
    "C_DAILY_LIMIT_TASK_ADD_READY_REQ\020\310\007\0223\n.L"
    "OGIC_TO_CLIENT_DAILY_LIMIT_TASK_ADD_READ"
    "Y_RSP\020\311\007\022-\n(CLIENT_TO_LOGIC_DAILY_BACK_T"
    "ASK_BACK_REQ\020\312\007\022-\n(LOGIC_TO_CLIENT_DAILY"
    "_BACK_TASK_BACK_RSP\020\313\007\0227\n2CLIENT_TO_LOGI"
    "C_DAILY_LIMIT_TASK_ADD_ALL_READY_REQ\020\314\007\022"
    "7\n2LOGIC_TO_CLIENT_DAILY_LIMIT_TASK_ADD_"
    "ALL_READY_RSP\020\315\007\0221\n,CLIENT_TO_LOGIC_DAIL"
    "Y_BACK_ALL_TASK_BACK_REQ\020\316\007\0221\n,LOGIC_TO_"
    "CLIENT_DAILY_BACK_ALL_TASK_BACK_RSP\020\317\007\022&"
    "\n!CLIENT_TO_LOGIC_MINI_ACTIVITY_END\020\347\007\022\022"
    "\n\rENTER_DUP_REQ\020\350\007\022\022\n\rENTER_DUP_RSP\020\351\007\022\023"
    "\n\016DUP_RESULT_REQ\020\352\007\022\023\n\016DUP_RESULT_RSP\020\353\007"
    "\022\022\n\rDUP_LEAVE_REQ\020\354\007\022\022\n\rDUP_LEAVE_RSP\020\355\007"
    "\022\027\n\022NOTIFY_DUP_END_RSP\020\356\007\022\023\n\016NOTIFY_DUP_"
    "RSP\020\357\007\022\027\n\022NOTIFY_DUP_RUN_RSP\020\360\007\022\034\n\027NOTIF"
    "Y_DUP_BEGIN_CD_RSP\020\361\007\022\027\n\022RECV_TOWER_DUP_"
    "REQ\020\362\007\022\027\n\022RECV_TOWER_DUP_RSP\020\363\007\022\024\n\017BUY_D"
    "UP_NUM_REQ\020\364\007\022\024\n\017BUY_DUP_NUM_RSP\020\365\007\022\031\n\024D"
    "UP_TOWER_RECORD_REQ\020\366\007\022\031\n\024DUP_TOWER_RECO"
    "RD_RSP\020\367\007\022\021\n\014ACT_LIST_REQ\020\261\t\022\021\n\014ACT_LIST"
    "_RSP\020\262\t\022 \n\033CLIENT_TO_SERVER_TEAM_BEGIN\020\224"
    "\n\022!\n\034CLIENT_TO_CENTER_CREATE_TEAM\020\225\n\022%\n "
    "CLIENT_TO_CENTER_APPLY_JOIN_TEAM\020\226\n\022%\n C"
    "LIENT_TO_CENTER_REPLY_JOIN_TEAM\020\227\n\022\037\n\032CL"
    "IENT_TO_CENTER_QUIT_TEAM\020\230\n\022&\n!CLIENT_TO"
    "_CENTER_INVITE_JOIN_TEAM\020\231\n\022,\n\'CLIENT_TO"
    "_CENTER_REPLY_INVITE_JOIN_TEAM\020\232\n\022&\n!CLI"
    "ENT_TO_CENTER_KICK_TEAM_MEMBER\020\233\n\022%\n CLI"
    "ENT_TO_CENTER_TEAM_APPLY_LIST\020\234\n\022&\n!CLIE"
    "NT_TO_CENTER_CLEAR_APPLY_LIST\020\235\n\022%\n CLIE"
    "NT_TO_CENTER_TEAM_SET_TARGET\020\236\n\022)\n$CLIEN"
    "T_TO_CENTER_TEAM_PROMOTE_LEADER\020\237\n\022%\n CL"
    "IENT_TO_CENTER_TEAM_AUTO_MATCH\020\240\n\022\036\n\031CLI"
    "ENT_TO_SERVER_TEAM_END\020\250\n\022 \n\033SERVER_TO_C"
    "LIENT_TEAM_BEGIN\020\262\n\022!\n\034CENTER_TO_CLIENT_"
    "CREATE_TEAM\020\263\n\022%\n CENTER_TO_CLIENT_APPLY"
    "_JOIN_TEAM\020\264\n\022%\n CENTER_TO_CLIENT_REPLY_"
    "JOIN_TEAM\020\265\n\022\037\n\032CENTER_TO_CLIENT_QUIT_TE"
    "AM\020\266\n\022&\n!CENTER_TO_CLIENT_INVITE_JOIN_TE"
    "AM\020\267\n\022,\n\'CENTER_TO_CLIENT_REPLY_INVITE_J"
    "OIN_TEAM\020\270\n\022&\n!CENTER_TO_CLIENT_KICK_TEA"
    "M_MEMBER\020\271\n\022%\n CENTER_TO_CLIENT_TEAM_APP"
    "LY_LIST\020\272\n\022&\n!CENTER_TO_CLIENT_CLEAR_APP"
    "LY_LIST\020\273\n\022%\n CENTER_TO_CLIENT_TEAM_SET_"
    "TARGET\020\274\n\022)\n$CENTER_TO_CLIENT_TEAM_PROMO"
    "TE_LEADER\020\275\n\022%\n CENTER_TO_CLIENT_TEAM_AU"
    "TO_MATCH\020\276\n\022\'\n\"CENTER_TO_CLIENT_UPDATE_T"
    "EAM_APPLY\020\277\n\022%\n CENTER_TO_CLIENT_UPDATE_"
    "TEAM_MEM\020\300\n\022,\n\'CENTER_TO_CLIENT_UPDATE_T"
    "EAM_MEM_SIMPLE\020\301\n\022(\n#CENTER_TO_CLIENT_IN"
    "VITE_TEAM_NOTIFY\020\302\n\022&\n!CENTER_TO_CLIENT_"
    "UPDATE_TEAM_INFO\020\303\n\022(\n#CENTER_TO_CLIENT_"
    "UPDATE_TEAM_SIMPLE\020\304\n\022(\n#CENTER_TO_CLIEN"
    "T_TEAM_REFUSE_NOTIFY\020\305\n\022\036\n\031SERVER_TO_CLI"
    "ENT_TEAM_END\020\306\n\022!\n\034SOCIAL_TO_CENTER_CREA"
    "TE_TEAM\020\320\n\022$\n\037SOCIAL_TO_CENTER_CHAR_JOIN"
    "_TEAM\020\321\n\022$\n\037SOCIAL_TO_CENTER_CHAR_QUIT_T"
    "EAM\020\322\n\022!\n\034SOCIAL_TO_CENTER_TEAM_LEADER\020\323"
    "\n\022\"\n\035SOCIAL_TO_CENTER_TEAM_DISMISS\020\324\n\022$\n"
    "\037SOCIAL_TO_CENTER_TEAM_DUP_BEGIN\020\325\n\022\"\n\035S"
    "OCIAL_TO_CENTER_TEAM_DUP_END\020\326\n\022%\n SOCIA"
    "L_TO_CENTER_TEAM_MEM_UPDATE\020\327\n\022\'\n\"CENTER"
    "_TO_LOGIC_UPDATE_TEAM_NOTIFY\020\330\n\022(\n#CENTE"
    "R_TO_LOGIC_DISMISS_TEAM_NOTIFY\020\331\n\022/\n*CEN"
    "TER_TO_LOGIC_UPDATE_TEAM_CLONESS_NOTIFY\020"
    "\332\n\022%\n CENTER_TO_LOGIC_TEAM_INFO_NOTIFY\020\333"
    "\n\022\'\n\"LOGIC_TO_SOCIAL_TEAM_ROBOT_HP_SYNC\020"
    "\334\n\0221\n,LOGIC_TO_SOCIAL_TEAM_ENTER_NEXT_PA"
    "LACE_LAYER\020\335\n\022+\n&LOGIC_TO_CLIENT_DUPLICA"
    "TE_CANCEL_STATE\020\337\n\022\022\n\rDROP_PICK_REQ\020\252\013\022\022"
    "\n\rDROP_PICK_RSP\020\253\013\022\025\n\020DROP_HEAD_NOTIFY\020\254"
    "\013\022\030\n\023NOTIFY_VIP_DATA_RSP\020\310\013\022\032\n\025CLIENT_SE"
    "RVER_MAX_CMD\020\210\'", 11255);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "ClientServerCmd.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_ClientServerCmd_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_ClientServerCmd_2eproto {
  StaticDescriptorInitializer_ClientServerCmd_2eproto() {
    protobuf_AddDesc_ClientServerCmd_2eproto();
  }
} static_descriptor_initializer_ClientServerCmd_2eproto_;
const ::google::protobuf::EnumDescriptor* ClientServerCmd_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ClientServerCmd_descriptor_;
}
bool ClientServerCmd_IsValid(int value) {
  switch(value) {
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 101:
    case 102:
    case 103:
    case 151:
    case 152:
    case 153:
    case 154:
    case 155:
    case 156:
    case 200:
    case 201:
    case 202:
    case 203:
    case 204:
    case 205:
    case 206:
    case 207:
    case 208:
    case 251:
    case 252:
    case 253:
    case 254:
    case 255:
    case 256:
    case 257:
    case 258:
    case 259:
    case 260:
    case 261:
    case 262:
    case 263:
    case 264:
    case 265:
    case 270:
    case 271:
    case 281:
    case 282:
    case 283:
    case 284:
    case 285:
    case 286:
    case 287:
    case 300:
    case 301:
    case 302:
    case 303:
    case 304:
    case 350:
    case 351:
    case 352:
    case 353:
    case 354:
    case 355:
    case 356:
    case 357:
    case 358:
    case 359:
    case 361:
    case 362:
    case 363:
    case 364:
    case 365:
    case 366:
    case 367:
    case 368:
    case 370:
    case 371:
    case 372:
    case 373:
    case 400:
    case 430:
    case 431:
    case 432:
    case 433:
    case 434:
    case 435:
    case 436:
    case 437:
    case 438:
    case 450:
    case 460:
    case 461:
    case 462:
    case 463:
    case 464:
    case 465:
    case 466:
    case 467:
    case 468:
    case 469:
    case 470:
    case 471:
    case 472:
    case 473:
    case 474:
    case 475:
    case 476:
    case 477:
    case 490:
    case 491:
    case 492:
    case 493:
    case 494:
    case 495:
    case 500:
    case 501:
    case 502:
    case 503:
    case 504:
    case 505:
    case 506:
    case 507:
    case 510:
    case 560:
    case 561:
    case 562:
    case 563:
    case 564:
    case 565:
    case 566:
    case 567:
    case 568:
    case 569:
    case 570:
    case 571:
    case 572:
    case 579:
    case 580:
    case 581:
    case 582:
    case 583:
    case 601:
    case 602:
    case 603:
    case 651:
    case 652:
    case 653:
    case 701:
    case 702:
    case 703:
    case 704:
    case 705:
    case 706:
    case 707:
    case 708:
    case 709:
    case 710:
    case 711:
    case 712:
    case 713:
    case 714:
    case 715:
    case 716:
    case 717:
    case 718:
    case 751:
    case 752:
    case 753:
    case 754:
    case 755:
    case 850:
    case 851:
    case 852:
    case 853:
    case 854:
    case 855:
    case 856:
    case 857:
    case 858:
    case 859:
    case 860:
    case 861:
    case 862:
    case 863:
    case 864:
    case 900:
    case 901:
    case 902:
    case 903:
    case 904:
    case 905:
    case 906:
    case 911:
    case 912:
    case 913:
    case 914:
    case 915:
    case 916:
    case 917:
    case 920:
    case 921:
    case 922:
    case 923:
    case 924:
    case 925:
    case 926:
    case 927:
    case 928:
    case 929:
    case 950:
    case 951:
    case 952:
    case 953:
    case 954:
    case 955:
    case 956:
    case 957:
    case 958:
    case 960:
    case 961:
    case 962:
    case 964:
    case 965:
    case 966:
    case 967:
    case 968:
    case 969:
    case 970:
    case 971:
    case 972:
    case 973:
    case 974:
    case 975:
    case 999:
    case 1000:
    case 1001:
    case 1002:
    case 1003:
    case 1004:
    case 1005:
    case 1006:
    case 1007:
    case 1008:
    case 1009:
    case 1010:
    case 1011:
    case 1012:
    case 1013:
    case 1014:
    case 1015:
    case 1201:
    case 1202:
    case 1300:
    case 1301:
    case 1302:
    case 1303:
    case 1304:
    case 1305:
    case 1306:
    case 1307:
    case 1308:
    case 1309:
    case 1310:
    case 1311:
    case 1312:
    case 1320:
    case 1330:
    case 1331:
    case 1332:
    case 1333:
    case 1334:
    case 1335:
    case 1336:
    case 1337:
    case 1338:
    case 1339:
    case 1340:
    case 1341:
    case 1342:
    case 1343:
    case 1344:
    case 1345:
    case 1346:
    case 1347:
    case 1348:
    case 1349:
    case 1350:
    case 1360:
    case 1361:
    case 1362:
    case 1363:
    case 1364:
    case 1365:
    case 1366:
    case 1367:
    case 1368:
    case 1369:
    case 1370:
    case 1371:
    case 1372:
    case 1373:
    case 1375:
    case 1450:
    case 1451:
    case 1452:
    case 1480:
    case 5000:
      return true;
    default:
      return false;
  }
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto_ff

// @@protoc_insertion_point(global_scope)
