// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: E_Escort.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "E_Escort.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace proto_ff {

namespace {

const ::google::protobuf::Descriptor* E_EscortEscort_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_EscortEscort_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_EscortEscort_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_EscortEscort_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_EscortChanceEscortDesc_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_EscortChanceEscortDesc_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_EscortChance_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_EscortChance_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_EscortChance_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_EscortChance_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_EscortRewardRewardDesc_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_EscortRewardRewardDesc_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_EscortReward_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_EscortReward_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_EscortReward_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_EscortReward_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_EscortConst_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_EscortConst_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_EscortConst_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_EscortConst_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_E_5fEscort_2eproto() {
  protobuf_AddDesc_E_5fEscort_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "E_Escort.proto");
  GOOGLE_CHECK(file != NULL);
  E_EscortEscort_descriptor_ = file->message_type(0);
  static const int E_EscortEscort_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EscortEscort, m_convoyid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EscortEscort, m_convoyname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EscortEscort, m_monsterid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EscortEscort, m_scalle_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EscortEscort, m_convoylevel_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EscortEscort, m_chance_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EscortEscort, m_rewardlvmultiply_),
  };
  E_EscortEscort_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_EscortEscort_descriptor_,
      E_EscortEscort::default_instance_,
      E_EscortEscort_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EscortEscort, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EscortEscort, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_EscortEscort));
  Sheet_EscortEscort_descriptor_ = file->message_type(1);
  static const int Sheet_EscortEscort_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_EscortEscort, e_escortescort_list_),
  };
  Sheet_EscortEscort_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_EscortEscort_descriptor_,
      Sheet_EscortEscort::default_instance_,
      Sheet_EscortEscort_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_EscortEscort, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_EscortEscort, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_EscortEscort));
  E_EscortChanceEscortDesc_descriptor_ = file->message_type(2);
  static const int E_EscortChanceEscortDesc_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EscortChanceEscortDesc, m_chance_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EscortChanceEscortDesc, m_id_),
  };
  E_EscortChanceEscortDesc_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_EscortChanceEscortDesc_descriptor_,
      E_EscortChanceEscortDesc::default_instance_,
      E_EscortChanceEscortDesc_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EscortChanceEscortDesc, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EscortChanceEscortDesc, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_EscortChanceEscortDesc));
  E_EscortChance_descriptor_ = file->message_type(3);
  static const int E_EscortChance_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EscortChance, m_convoyid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EscortChance, m_escort_),
  };
  E_EscortChance_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_EscortChance_descriptor_,
      E_EscortChance::default_instance_,
      E_EscortChance_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EscortChance, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EscortChance, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_EscortChance));
  Sheet_EscortChance_descriptor_ = file->message_type(4);
  static const int Sheet_EscortChance_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_EscortChance, e_escortchance_list_),
  };
  Sheet_EscortChance_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_EscortChance_descriptor_,
      Sheet_EscortChance::default_instance_,
      Sheet_EscortChance_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_EscortChance, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_EscortChance, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_EscortChance));
  E_EscortRewardRewardDesc_descriptor_ = file->message_type(5);
  static const int E_EscortRewardRewardDesc_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EscortRewardRewardDesc, m_num_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EscortRewardRewardDesc, m_item_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EscortRewardRewardDesc, m_id_),
  };
  E_EscortRewardRewardDesc_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_EscortRewardRewardDesc_descriptor_,
      E_EscortRewardRewardDesc::default_instance_,
      E_EscortRewardRewardDesc_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EscortRewardRewardDesc, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EscortRewardRewardDesc, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_EscortRewardRewardDesc));
  E_EscortReward_descriptor_ = file->message_type(6);
  static const int E_EscortReward_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EscortReward, m_lv_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EscortReward, m_exp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EscortReward, m_reward_),
  };
  E_EscortReward_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_EscortReward_descriptor_,
      E_EscortReward::default_instance_,
      E_EscortReward_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EscortReward, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EscortReward, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_EscortReward));
  Sheet_EscortReward_descriptor_ = file->message_type(7);
  static const int Sheet_EscortReward_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_EscortReward, e_escortreward_list_),
  };
  Sheet_EscortReward_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_EscortReward_descriptor_,
      Sheet_EscortReward::default_instance_,
      Sheet_EscortReward_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_EscortReward, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_EscortReward, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_EscortReward));
  E_EscortConst_descriptor_ = file->message_type(8);
  static const int E_EscortConst_offsets_[15] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EscortConst, m_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EscortConst, m_tokenid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EscortConst, m_tokennumber_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EscortConst, m_daytime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EscortConst, m_freenum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EscortConst, m_mapid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EscortConst, m_startnpcid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EscortConst, m_startnpcpointid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EscortConst, m_overnpcid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EscortConst, m_activityid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EscortConst, m_taskid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EscortConst, m_distancea_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EscortConst, m_distanceb_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EscortConst, m_distancec_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EscortConst, m_timelimit_),
  };
  E_EscortConst_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_EscortConst_descriptor_,
      E_EscortConst::default_instance_,
      E_EscortConst_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EscortConst, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_EscortConst, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_EscortConst));
  Sheet_EscortConst_descriptor_ = file->message_type(9);
  static const int Sheet_EscortConst_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_EscortConst, e_escortconst_list_),
  };
  Sheet_EscortConst_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_EscortConst_descriptor_,
      Sheet_EscortConst::default_instance_,
      Sheet_EscortConst_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_EscortConst, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_EscortConst, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_EscortConst));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_E_5fEscort_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_EscortEscort_descriptor_, &E_EscortEscort::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_EscortEscort_descriptor_, &Sheet_EscortEscort::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_EscortChanceEscortDesc_descriptor_, &E_EscortChanceEscortDesc::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_EscortChance_descriptor_, &E_EscortChance::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_EscortChance_descriptor_, &Sheet_EscortChance::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_EscortRewardRewardDesc_descriptor_, &E_EscortRewardRewardDesc::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_EscortReward_descriptor_, &E_EscortReward::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_EscortReward_descriptor_, &Sheet_EscortReward::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_EscortConst_descriptor_, &E_EscortConst::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_EscortConst_descriptor_, &Sheet_EscortConst::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_E_5fEscort_2eproto() {
  delete E_EscortEscort::default_instance_;
  delete E_EscortEscort_reflection_;
  delete Sheet_EscortEscort::default_instance_;
  delete Sheet_EscortEscort_reflection_;
  delete E_EscortChanceEscortDesc::default_instance_;
  delete E_EscortChanceEscortDesc_reflection_;
  delete E_EscortChance::default_instance_;
  delete E_EscortChance_reflection_;
  delete Sheet_EscortChance::default_instance_;
  delete Sheet_EscortChance_reflection_;
  delete E_EscortRewardRewardDesc::default_instance_;
  delete E_EscortRewardRewardDesc_reflection_;
  delete E_EscortReward::default_instance_;
  delete E_EscortReward_reflection_;
  delete Sheet_EscortReward::default_instance_;
  delete Sheet_EscortReward_reflection_;
  delete E_EscortConst::default_instance_;
  delete E_EscortConst_reflection_;
  delete Sheet_EscortConst::default_instance_;
  delete Sheet_EscortConst_reflection_;
}

void protobuf_AddDesc_E_5fEscort_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::yd_fieldoptions::protobuf_AddDesc_yd_5ffieldoptions_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\016E_Escort.proto\022\010proto_ff\032\025yd_fieldopti"
    "ons.proto\"\275\002\n\016E_EscortEscort\022 \n\nm_convoy"
    "id\030\001 \001(\005B\014\302\377\024\010\351\225\226\350\275\246ID\022-\n\014m_convoyname\030\002"
    " \001(\tB\027\302\377\024\017\347\211\251\350\265\204\350\275\246\345\220\215\347\247\260\220\301\024@\022$\n\013m_monst"
    "erid\030\003 \001(\005B\017\302\377\024\013\347\211\251\350\265\204\350\275\246ID\022-\n\010m_scalle\030"
    "\004 \001(\tB\033\302\377\024\023\345\244\247\345\260\217\344\270\216y\350\275\264\346\234\235\345\220\221\220\301\024@\022\'\n\rm_"
    "convoylevel\030\005 \001(\005B\020\302\377\024\014\351\225\226\350\275\246\347\255\211\347\272\247\022(\n\010m"
    "_chance\030\006 \001(\005B\026\302\377\024\022\351\273\230\350\256\244\350\216\267\345\276\227\346\235\203\351\207\215\0222\n"
    "\022m_rewardlvmultiply\030\007 \001(\005B\026\302\377\024\022\345\237\272\347\241\200\347\273\217"
    "\351\252\214\345\200\215\347\216\207\"Q\n\022Sheet_EscortEscort\022;\n\023E_Esc"
    "ortEscort_List\030\001 \003(\0132\030.proto_ff.E_Escort"
    "EscortB\004\210\301\024\010\"N\n\030E_EscortChanceEscortDesc"
    "\022\034\n\010m_chance\030\001 \001(\005B\n\302\377\024\006\346\235\203\351\207\215\022\024\n\004m_id\030\002"
    " \001(\005B\006\302\377\024\002ID\"x\n\016E_EscortChance\022 \n\nm_conv"
    "oyid\030\001 \001(\005B\014\302\377\024\010\351\225\226\350\275\246ID\022D\n\010m_escort\030\002 \003"
    "(\0132\".proto_ff.E_EscortChanceEscortDescB\016"
    "\302\377\024\006\351\225\226\350\275\246\210\301\024\004\"Q\n\022Sheet_EscortChance\022;\n\023"
    "E_EscortChance_List\030\001 \003(\0132\030.proto_ff.E_E"
    "scortChanceB\004\210\301\024\004\"g\n\030E_EscortRewardRewar"
    "dDesc\022\031\n\005m_num\030\001 \001(\005B\n\302\377\024\006\346\225\260\351\207\217\022\032\n\006m_it"
    "em\030\002 \001(\005B\n\302\377\024\006\347\211\251\345\223\201\022\024\n\004m_id\030\003 \001(\005B\006\302\377\024\002"
    "ID\"\246\001\n\016E_EscortReward\022\036\n\004m_lv\030\001 \001(\005B\020\302\377\024"
    "\014\350\247\222\350\211\262\347\255\211\347\272\247\022(\n\005m_exp\030\002 \001(\003B\031\302\377\024\025\347\211\251\350\265\204"
    "\350\275\246\345\245\226\345\212\261\347\273\217\351\252\214\022J\n\010m_reward\030\003 \003(\0132\".prot"
    "o_ff.E_EscortRewardRewardDescB\024\302\377\024\014\351\225\226\350\275"
    "\246\345\245\226\345\212\261\210\301\024\014\"R\n\022Sheet_EscortReward\022<\n\023E_E"
    "scortReward_List\030\001 \003(\0132\030.proto_ff.E_Esco"
    "rtRewardB\005\210\301\024\200\020\"\345\004\n\rE_EscortConst\022\024\n\004m_i"
    "d\030\001 \001(\005B\006\302\377\024\002id\022(\n\tm_tokenid\030\002 \001(\005B\025\302\377\024\021"
    "\346\212\244\351\200\201\344\273\244\345\225\206\345\223\201id\022-\n\rm_tokennumber\030\003 \001(\005"
    "B\026\302\377\024\022\347\211\251\350\265\204\345\215\267\350\275\264\346\225\260\351\207\217\022#\n\tm_daytime\030\004 "
    "\001(\005B\020\302\377\024\014\346\257\217\346\227\245\346\254\241\346\225\260\022#\n\tm_freenum\030\005 \001(\005"
    "B\020\302\377\024\014\345\205\215\350\264\271\346\254\241\346\225\260\022\035\n\007m_mapid\030\006 \001(\005B\014\302\377\024"
    "\010\345\234\260\345\233\276ID\022+\n\014m_startnpcid\030\007 \001(\005B\025\302\377\024\021\345\274\200"
    "\345\247\213\344\273\273\345\212\241npcID\0227\n\021m_startnpcpointid\030\010 \001("
    "\005B\034\302\377\024\030\345\274\200\345\247\213\344\273\273\345\212\241npc\345\235\220\346\240\207\347\202\271\022*\n\013m_ove"
    "rnpcid\030\t \001(\005B\025\302\377\024\021\345\256\214\346\210\220\344\273\273\345\212\241npcID\022(\n\014m"
    "_activityid\030\n \001(\005B\022\302\377\024\016\346\264\273\345\212\250\344\277\241\346\201\257id\022\036\n"
    "\010m_taskid\030\013 \001(\005B\014\302\377\024\010\344\273\273\345\212\241id\022%\n\013m_dista"
    "ncea\030\014 \001(\005B\020\302\377\024\014\346\234\200\345\244\247\350\267\235\347\246\273\022%\n\013m_distan"
    "ceb\030\r \001(\005B\020\302\377\024\014\350\267\237\350\277\233\350\267\235\347\246\273\022%\n\013m_distanc"
    "ec\030\016 \001(\005B\020\302\377\024\014\346\234\200\350\277\221\350\267\235\347\246\273\022+\n\013m_timelimi"
    "t\030\017 \001(\005B\026\302\377\024\022\344\273\273\345\212\241\346\227\266\351\227\264\351\231\220\345\210\266\"N\n\021Sheet"
    "_EscortConst\0229\n\022E_EscortConst_List\030\001 \003(\013"
    "2\027.proto_ff.E_EscortConstB\004\210\301\024\010", 1791);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "E_Escort.proto", &protobuf_RegisterTypes);
  E_EscortEscort::default_instance_ = new E_EscortEscort();
  Sheet_EscortEscort::default_instance_ = new Sheet_EscortEscort();
  E_EscortChanceEscortDesc::default_instance_ = new E_EscortChanceEscortDesc();
  E_EscortChance::default_instance_ = new E_EscortChance();
  Sheet_EscortChance::default_instance_ = new Sheet_EscortChance();
  E_EscortRewardRewardDesc::default_instance_ = new E_EscortRewardRewardDesc();
  E_EscortReward::default_instance_ = new E_EscortReward();
  Sheet_EscortReward::default_instance_ = new Sheet_EscortReward();
  E_EscortConst::default_instance_ = new E_EscortConst();
  Sheet_EscortConst::default_instance_ = new Sheet_EscortConst();
  E_EscortEscort::default_instance_->InitAsDefaultInstance();
  Sheet_EscortEscort::default_instance_->InitAsDefaultInstance();
  E_EscortChanceEscortDesc::default_instance_->InitAsDefaultInstance();
  E_EscortChance::default_instance_->InitAsDefaultInstance();
  Sheet_EscortChance::default_instance_->InitAsDefaultInstance();
  E_EscortRewardRewardDesc::default_instance_->InitAsDefaultInstance();
  E_EscortReward::default_instance_->InitAsDefaultInstance();
  Sheet_EscortReward::default_instance_->InitAsDefaultInstance();
  E_EscortConst::default_instance_->InitAsDefaultInstance();
  Sheet_EscortConst::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_E_5fEscort_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_E_5fEscort_2eproto {
  StaticDescriptorInitializer_E_5fEscort_2eproto() {
    protobuf_AddDesc_E_5fEscort_2eproto();
  }
} static_descriptor_initializer_E_5fEscort_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int E_EscortEscort::kMConvoyidFieldNumber;
const int E_EscortEscort::kMConvoynameFieldNumber;
const int E_EscortEscort::kMMonsteridFieldNumber;
const int E_EscortEscort::kMScalleFieldNumber;
const int E_EscortEscort::kMConvoylevelFieldNumber;
const int E_EscortEscort::kMChanceFieldNumber;
const int E_EscortEscort::kMRewardlvmultiplyFieldNumber;
#endif  // !_MSC_VER

E_EscortEscort::E_EscortEscort()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_EscortEscort::InitAsDefaultInstance() {
}

E_EscortEscort::E_EscortEscort(const E_EscortEscort& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_EscortEscort::SharedCtor() {
  _cached_size_ = 0;
  m_convoyid_ = 0;
  m_convoyname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  m_monsterid_ = 0;
  m_scalle_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  m_convoylevel_ = 0;
  m_chance_ = 0;
  m_rewardlvmultiply_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_EscortEscort::~E_EscortEscort() {
  SharedDtor();
}

void E_EscortEscort::SharedDtor() {
  if (m_convoyname_ != &::google::protobuf::internal::kEmptyString) {
    delete m_convoyname_;
  }
  if (m_scalle_ != &::google::protobuf::internal::kEmptyString) {
    delete m_scalle_;
  }
  if (this != default_instance_) {
  }
}

void E_EscortEscort::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_EscortEscort::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_EscortEscort_descriptor_;
}

const E_EscortEscort& E_EscortEscort::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fEscort_2eproto();
  return *default_instance_;
}

E_EscortEscort* E_EscortEscort::default_instance_ = NULL;

E_EscortEscort* E_EscortEscort::New() const {
  return new E_EscortEscort;
}

void E_EscortEscort::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_convoyid_ = 0;
    if (has_m_convoyname()) {
      if (m_convoyname_ != &::google::protobuf::internal::kEmptyString) {
        m_convoyname_->clear();
      }
    }
    m_monsterid_ = 0;
    if (has_m_scalle()) {
      if (m_scalle_ != &::google::protobuf::internal::kEmptyString) {
        m_scalle_->clear();
      }
    }
    m_convoylevel_ = 0;
    m_chance_ = 0;
    m_rewardlvmultiply_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_EscortEscort::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_convoyid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_convoyid_)));
          set_has_m_convoyid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_m_convoyname;
        break;
      }

      // optional string m_convoyname = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_convoyname:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_m_convoyname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->m_convoyname().data(), this->m_convoyname().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_m_monsterid;
        break;
      }

      // optional int32 m_monsterid = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_monsterid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_monsterid_)));
          set_has_m_monsterid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_m_scalle;
        break;
      }

      // optional string m_scalle = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_scalle:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_m_scalle()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->m_scalle().data(), this->m_scalle().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_m_convoylevel;
        break;
      }

      // optional int32 m_convoylevel = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_convoylevel:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_convoylevel_)));
          set_has_m_convoylevel();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_m_chance;
        break;
      }

      // optional int32 m_chance = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_chance:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_chance_)));
          set_has_m_chance();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_m_rewardlvmultiply;
        break;
      }

      // optional int32 m_rewardlvmultiply = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_rewardlvmultiply:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_rewardlvmultiply_)));
          set_has_m_rewardlvmultiply();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_EscortEscort::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_convoyid = 1;
  if (has_m_convoyid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_convoyid(), output);
  }

  // optional string m_convoyname = 2;
  if (has_m_convoyname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_convoyname().data(), this->m_convoyname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->m_convoyname(), output);
  }

  // optional int32 m_monsterid = 3;
  if (has_m_monsterid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->m_monsterid(), output);
  }

  // optional string m_scalle = 4;
  if (has_m_scalle()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_scalle().data(), this->m_scalle().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->m_scalle(), output);
  }

  // optional int32 m_convoylevel = 5;
  if (has_m_convoylevel()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->m_convoylevel(), output);
  }

  // optional int32 m_chance = 6;
  if (has_m_chance()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->m_chance(), output);
  }

  // optional int32 m_rewardlvmultiply = 7;
  if (has_m_rewardlvmultiply()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->m_rewardlvmultiply(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_EscortEscort::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_convoyid = 1;
  if (has_m_convoyid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_convoyid(), target);
  }

  // optional string m_convoyname = 2;
  if (has_m_convoyname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_convoyname().data(), this->m_convoyname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->m_convoyname(), target);
  }

  // optional int32 m_monsterid = 3;
  if (has_m_monsterid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->m_monsterid(), target);
  }

  // optional string m_scalle = 4;
  if (has_m_scalle()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_scalle().data(), this->m_scalle().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->m_scalle(), target);
  }

  // optional int32 m_convoylevel = 5;
  if (has_m_convoylevel()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->m_convoylevel(), target);
  }

  // optional int32 m_chance = 6;
  if (has_m_chance()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->m_chance(), target);
  }

  // optional int32 m_rewardlvmultiply = 7;
  if (has_m_rewardlvmultiply()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->m_rewardlvmultiply(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_EscortEscort::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_convoyid = 1;
    if (has_m_convoyid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_convoyid());
    }

    // optional string m_convoyname = 2;
    if (has_m_convoyname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->m_convoyname());
    }

    // optional int32 m_monsterid = 3;
    if (has_m_monsterid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_monsterid());
    }

    // optional string m_scalle = 4;
    if (has_m_scalle()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->m_scalle());
    }

    // optional int32 m_convoylevel = 5;
    if (has_m_convoylevel()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_convoylevel());
    }

    // optional int32 m_chance = 6;
    if (has_m_chance()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_chance());
    }

    // optional int32 m_rewardlvmultiply = 7;
    if (has_m_rewardlvmultiply()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_rewardlvmultiply());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_EscortEscort::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_EscortEscort* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_EscortEscort*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_EscortEscort::MergeFrom(const E_EscortEscort& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_convoyid()) {
      set_m_convoyid(from.m_convoyid());
    }
    if (from.has_m_convoyname()) {
      set_m_convoyname(from.m_convoyname());
    }
    if (from.has_m_monsterid()) {
      set_m_monsterid(from.m_monsterid());
    }
    if (from.has_m_scalle()) {
      set_m_scalle(from.m_scalle());
    }
    if (from.has_m_convoylevel()) {
      set_m_convoylevel(from.m_convoylevel());
    }
    if (from.has_m_chance()) {
      set_m_chance(from.m_chance());
    }
    if (from.has_m_rewardlvmultiply()) {
      set_m_rewardlvmultiply(from.m_rewardlvmultiply());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_EscortEscort::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_EscortEscort::CopyFrom(const E_EscortEscort& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_EscortEscort::IsInitialized() const {

  return true;
}

void E_EscortEscort::Swap(E_EscortEscort* other) {
  if (other != this) {
    std::swap(m_convoyid_, other->m_convoyid_);
    std::swap(m_convoyname_, other->m_convoyname_);
    std::swap(m_monsterid_, other->m_monsterid_);
    std::swap(m_scalle_, other->m_scalle_);
    std::swap(m_convoylevel_, other->m_convoylevel_);
    std::swap(m_chance_, other->m_chance_);
    std::swap(m_rewardlvmultiply_, other->m_rewardlvmultiply_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_EscortEscort::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_EscortEscort_descriptor_;
  metadata.reflection = E_EscortEscort_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_EscortEscort::kEEscortEscortListFieldNumber;
#endif  // !_MSC_VER

Sheet_EscortEscort::Sheet_EscortEscort()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_EscortEscort::InitAsDefaultInstance() {
}

Sheet_EscortEscort::Sheet_EscortEscort(const Sheet_EscortEscort& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_EscortEscort::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_EscortEscort::~Sheet_EscortEscort() {
  SharedDtor();
}

void Sheet_EscortEscort::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_EscortEscort::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_EscortEscort::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_EscortEscort_descriptor_;
}

const Sheet_EscortEscort& Sheet_EscortEscort::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fEscort_2eproto();
  return *default_instance_;
}

Sheet_EscortEscort* Sheet_EscortEscort::default_instance_ = NULL;

Sheet_EscortEscort* Sheet_EscortEscort::New() const {
  return new Sheet_EscortEscort;
}

void Sheet_EscortEscort::Clear() {
  e_escortescort_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_EscortEscort::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.E_EscortEscort E_EscortEscort_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_E_EscortEscort_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_e_escortescort_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_E_EscortEscort_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_EscortEscort::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.E_EscortEscort E_EscortEscort_List = 1;
  for (int i = 0; i < this->e_escortescort_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->e_escortescort_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_EscortEscort::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.E_EscortEscort E_EscortEscort_List = 1;
  for (int i = 0; i < this->e_escortescort_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->e_escortescort_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_EscortEscort::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.E_EscortEscort E_EscortEscort_List = 1;
  total_size += 1 * this->e_escortescort_list_size();
  for (int i = 0; i < this->e_escortescort_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->e_escortescort_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_EscortEscort::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_EscortEscort* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_EscortEscort*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_EscortEscort::MergeFrom(const Sheet_EscortEscort& from) {
  GOOGLE_CHECK_NE(&from, this);
  e_escortescort_list_.MergeFrom(from.e_escortescort_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_EscortEscort::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_EscortEscort::CopyFrom(const Sheet_EscortEscort& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_EscortEscort::IsInitialized() const {

  return true;
}

void Sheet_EscortEscort::Swap(Sheet_EscortEscort* other) {
  if (other != this) {
    e_escortescort_list_.Swap(&other->e_escortescort_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_EscortEscort::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_EscortEscort_descriptor_;
  metadata.reflection = Sheet_EscortEscort_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_EscortChanceEscortDesc::kMChanceFieldNumber;
const int E_EscortChanceEscortDesc::kMIdFieldNumber;
#endif  // !_MSC_VER

E_EscortChanceEscortDesc::E_EscortChanceEscortDesc()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_EscortChanceEscortDesc::InitAsDefaultInstance() {
}

E_EscortChanceEscortDesc::E_EscortChanceEscortDesc(const E_EscortChanceEscortDesc& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_EscortChanceEscortDesc::SharedCtor() {
  _cached_size_ = 0;
  m_chance_ = 0;
  m_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_EscortChanceEscortDesc::~E_EscortChanceEscortDesc() {
  SharedDtor();
}

void E_EscortChanceEscortDesc::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_EscortChanceEscortDesc::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_EscortChanceEscortDesc::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_EscortChanceEscortDesc_descriptor_;
}

const E_EscortChanceEscortDesc& E_EscortChanceEscortDesc::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fEscort_2eproto();
  return *default_instance_;
}

E_EscortChanceEscortDesc* E_EscortChanceEscortDesc::default_instance_ = NULL;

E_EscortChanceEscortDesc* E_EscortChanceEscortDesc::New() const {
  return new E_EscortChanceEscortDesc;
}

void E_EscortChanceEscortDesc::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_chance_ = 0;
    m_id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_EscortChanceEscortDesc::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_chance = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_chance_)));
          set_has_m_chance();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_id;
        break;
      }

      // optional int32 m_id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_id_)));
          set_has_m_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_EscortChanceEscortDesc::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_chance = 1;
  if (has_m_chance()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_chance(), output);
  }

  // optional int32 m_id = 2;
  if (has_m_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_EscortChanceEscortDesc::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_chance = 1;
  if (has_m_chance()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_chance(), target);
  }

  // optional int32 m_id = 2;
  if (has_m_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_EscortChanceEscortDesc::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_chance = 1;
    if (has_m_chance()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_chance());
    }

    // optional int32 m_id = 2;
    if (has_m_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_id());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_EscortChanceEscortDesc::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_EscortChanceEscortDesc* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_EscortChanceEscortDesc*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_EscortChanceEscortDesc::MergeFrom(const E_EscortChanceEscortDesc& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_chance()) {
      set_m_chance(from.m_chance());
    }
    if (from.has_m_id()) {
      set_m_id(from.m_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_EscortChanceEscortDesc::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_EscortChanceEscortDesc::CopyFrom(const E_EscortChanceEscortDesc& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_EscortChanceEscortDesc::IsInitialized() const {

  return true;
}

void E_EscortChanceEscortDesc::Swap(E_EscortChanceEscortDesc* other) {
  if (other != this) {
    std::swap(m_chance_, other->m_chance_);
    std::swap(m_id_, other->m_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_EscortChanceEscortDesc::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_EscortChanceEscortDesc_descriptor_;
  metadata.reflection = E_EscortChanceEscortDesc_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_EscortChance::kMConvoyidFieldNumber;
const int E_EscortChance::kMEscortFieldNumber;
#endif  // !_MSC_VER

E_EscortChance::E_EscortChance()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_EscortChance::InitAsDefaultInstance() {
}

E_EscortChance::E_EscortChance(const E_EscortChance& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_EscortChance::SharedCtor() {
  _cached_size_ = 0;
  m_convoyid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_EscortChance::~E_EscortChance() {
  SharedDtor();
}

void E_EscortChance::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_EscortChance::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_EscortChance::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_EscortChance_descriptor_;
}

const E_EscortChance& E_EscortChance::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fEscort_2eproto();
  return *default_instance_;
}

E_EscortChance* E_EscortChance::default_instance_ = NULL;

E_EscortChance* E_EscortChance::New() const {
  return new E_EscortChance;
}

void E_EscortChance::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_convoyid_ = 0;
  }
  m_escort_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_EscortChance::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_convoyid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_convoyid_)));
          set_has_m_convoyid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_m_escort;
        break;
      }

      // repeated .proto_ff.E_EscortChanceEscortDesc m_escort = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_escort:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_m_escort()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_m_escort;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_EscortChance::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_convoyid = 1;
  if (has_m_convoyid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_convoyid(), output);
  }

  // repeated .proto_ff.E_EscortChanceEscortDesc m_escort = 2;
  for (int i = 0; i < this->m_escort_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->m_escort(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_EscortChance::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_convoyid = 1;
  if (has_m_convoyid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_convoyid(), target);
  }

  // repeated .proto_ff.E_EscortChanceEscortDesc m_escort = 2;
  for (int i = 0; i < this->m_escort_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->m_escort(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_EscortChance::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_convoyid = 1;
    if (has_m_convoyid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_convoyid());
    }

  }
  // repeated .proto_ff.E_EscortChanceEscortDesc m_escort = 2;
  total_size += 1 * this->m_escort_size();
  for (int i = 0; i < this->m_escort_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->m_escort(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_EscortChance::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_EscortChance* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_EscortChance*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_EscortChance::MergeFrom(const E_EscortChance& from) {
  GOOGLE_CHECK_NE(&from, this);
  m_escort_.MergeFrom(from.m_escort_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_convoyid()) {
      set_m_convoyid(from.m_convoyid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_EscortChance::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_EscortChance::CopyFrom(const E_EscortChance& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_EscortChance::IsInitialized() const {

  return true;
}

void E_EscortChance::Swap(E_EscortChance* other) {
  if (other != this) {
    std::swap(m_convoyid_, other->m_convoyid_);
    m_escort_.Swap(&other->m_escort_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_EscortChance::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_EscortChance_descriptor_;
  metadata.reflection = E_EscortChance_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_EscortChance::kEEscortChanceListFieldNumber;
#endif  // !_MSC_VER

Sheet_EscortChance::Sheet_EscortChance()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_EscortChance::InitAsDefaultInstance() {
}

Sheet_EscortChance::Sheet_EscortChance(const Sheet_EscortChance& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_EscortChance::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_EscortChance::~Sheet_EscortChance() {
  SharedDtor();
}

void Sheet_EscortChance::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_EscortChance::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_EscortChance::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_EscortChance_descriptor_;
}

const Sheet_EscortChance& Sheet_EscortChance::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fEscort_2eproto();
  return *default_instance_;
}

Sheet_EscortChance* Sheet_EscortChance::default_instance_ = NULL;

Sheet_EscortChance* Sheet_EscortChance::New() const {
  return new Sheet_EscortChance;
}

void Sheet_EscortChance::Clear() {
  e_escortchance_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_EscortChance::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.E_EscortChance E_EscortChance_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_E_EscortChance_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_e_escortchance_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_E_EscortChance_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_EscortChance::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.E_EscortChance E_EscortChance_List = 1;
  for (int i = 0; i < this->e_escortchance_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->e_escortchance_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_EscortChance::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.E_EscortChance E_EscortChance_List = 1;
  for (int i = 0; i < this->e_escortchance_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->e_escortchance_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_EscortChance::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.E_EscortChance E_EscortChance_List = 1;
  total_size += 1 * this->e_escortchance_list_size();
  for (int i = 0; i < this->e_escortchance_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->e_escortchance_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_EscortChance::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_EscortChance* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_EscortChance*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_EscortChance::MergeFrom(const Sheet_EscortChance& from) {
  GOOGLE_CHECK_NE(&from, this);
  e_escortchance_list_.MergeFrom(from.e_escortchance_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_EscortChance::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_EscortChance::CopyFrom(const Sheet_EscortChance& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_EscortChance::IsInitialized() const {

  return true;
}

void Sheet_EscortChance::Swap(Sheet_EscortChance* other) {
  if (other != this) {
    e_escortchance_list_.Swap(&other->e_escortchance_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_EscortChance::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_EscortChance_descriptor_;
  metadata.reflection = Sheet_EscortChance_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_EscortRewardRewardDesc::kMNumFieldNumber;
const int E_EscortRewardRewardDesc::kMItemFieldNumber;
const int E_EscortRewardRewardDesc::kMIdFieldNumber;
#endif  // !_MSC_VER

E_EscortRewardRewardDesc::E_EscortRewardRewardDesc()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_EscortRewardRewardDesc::InitAsDefaultInstance() {
}

E_EscortRewardRewardDesc::E_EscortRewardRewardDesc(const E_EscortRewardRewardDesc& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_EscortRewardRewardDesc::SharedCtor() {
  _cached_size_ = 0;
  m_num_ = 0;
  m_item_ = 0;
  m_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_EscortRewardRewardDesc::~E_EscortRewardRewardDesc() {
  SharedDtor();
}

void E_EscortRewardRewardDesc::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_EscortRewardRewardDesc::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_EscortRewardRewardDesc::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_EscortRewardRewardDesc_descriptor_;
}

const E_EscortRewardRewardDesc& E_EscortRewardRewardDesc::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fEscort_2eproto();
  return *default_instance_;
}

E_EscortRewardRewardDesc* E_EscortRewardRewardDesc::default_instance_ = NULL;

E_EscortRewardRewardDesc* E_EscortRewardRewardDesc::New() const {
  return new E_EscortRewardRewardDesc;
}

void E_EscortRewardRewardDesc::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_num_ = 0;
    m_item_ = 0;
    m_id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_EscortRewardRewardDesc::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_num = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_num_)));
          set_has_m_num();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_item;
        break;
      }

      // optional int32 m_item = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_item:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_item_)));
          set_has_m_item();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_m_id;
        break;
      }

      // optional int32 m_id = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_id_)));
          set_has_m_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_EscortRewardRewardDesc::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_num = 1;
  if (has_m_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_num(), output);
  }

  // optional int32 m_item = 2;
  if (has_m_item()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_item(), output);
  }

  // optional int32 m_id = 3;
  if (has_m_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->m_id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_EscortRewardRewardDesc::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_num = 1;
  if (has_m_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_num(), target);
  }

  // optional int32 m_item = 2;
  if (has_m_item()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_item(), target);
  }

  // optional int32 m_id = 3;
  if (has_m_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->m_id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_EscortRewardRewardDesc::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_num = 1;
    if (has_m_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_num());
    }

    // optional int32 m_item = 2;
    if (has_m_item()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_item());
    }

    // optional int32 m_id = 3;
    if (has_m_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_id());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_EscortRewardRewardDesc::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_EscortRewardRewardDesc* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_EscortRewardRewardDesc*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_EscortRewardRewardDesc::MergeFrom(const E_EscortRewardRewardDesc& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_num()) {
      set_m_num(from.m_num());
    }
    if (from.has_m_item()) {
      set_m_item(from.m_item());
    }
    if (from.has_m_id()) {
      set_m_id(from.m_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_EscortRewardRewardDesc::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_EscortRewardRewardDesc::CopyFrom(const E_EscortRewardRewardDesc& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_EscortRewardRewardDesc::IsInitialized() const {

  return true;
}

void E_EscortRewardRewardDesc::Swap(E_EscortRewardRewardDesc* other) {
  if (other != this) {
    std::swap(m_num_, other->m_num_);
    std::swap(m_item_, other->m_item_);
    std::swap(m_id_, other->m_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_EscortRewardRewardDesc::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_EscortRewardRewardDesc_descriptor_;
  metadata.reflection = E_EscortRewardRewardDesc_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_EscortReward::kMLvFieldNumber;
const int E_EscortReward::kMExpFieldNumber;
const int E_EscortReward::kMRewardFieldNumber;
#endif  // !_MSC_VER

E_EscortReward::E_EscortReward()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_EscortReward::InitAsDefaultInstance() {
}

E_EscortReward::E_EscortReward(const E_EscortReward& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_EscortReward::SharedCtor() {
  _cached_size_ = 0;
  m_lv_ = 0;
  m_exp_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_EscortReward::~E_EscortReward() {
  SharedDtor();
}

void E_EscortReward::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_EscortReward::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_EscortReward::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_EscortReward_descriptor_;
}

const E_EscortReward& E_EscortReward::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fEscort_2eproto();
  return *default_instance_;
}

E_EscortReward* E_EscortReward::default_instance_ = NULL;

E_EscortReward* E_EscortReward::New() const {
  return new E_EscortReward;
}

void E_EscortReward::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_lv_ = 0;
    m_exp_ = GOOGLE_LONGLONG(0);
  }
  m_reward_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_EscortReward::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_lv = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_lv_)));
          set_has_m_lv();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_exp;
        break;
      }

      // optional int64 m_exp = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_exp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &m_exp_)));
          set_has_m_exp();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_m_reward;
        break;
      }

      // repeated .proto_ff.E_EscortRewardRewardDesc m_reward = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_reward:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_m_reward()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_m_reward;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_EscortReward::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_lv = 1;
  if (has_m_lv()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_lv(), output);
  }

  // optional int64 m_exp = 2;
  if (has_m_exp()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->m_exp(), output);
  }

  // repeated .proto_ff.E_EscortRewardRewardDesc m_reward = 3;
  for (int i = 0; i < this->m_reward_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->m_reward(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_EscortReward::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_lv = 1;
  if (has_m_lv()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_lv(), target);
  }

  // optional int64 m_exp = 2;
  if (has_m_exp()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->m_exp(), target);
  }

  // repeated .proto_ff.E_EscortRewardRewardDesc m_reward = 3;
  for (int i = 0; i < this->m_reward_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->m_reward(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_EscortReward::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_lv = 1;
    if (has_m_lv()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_lv());
    }

    // optional int64 m_exp = 2;
    if (has_m_exp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->m_exp());
    }

  }
  // repeated .proto_ff.E_EscortRewardRewardDesc m_reward = 3;
  total_size += 1 * this->m_reward_size();
  for (int i = 0; i < this->m_reward_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->m_reward(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_EscortReward::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_EscortReward* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_EscortReward*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_EscortReward::MergeFrom(const E_EscortReward& from) {
  GOOGLE_CHECK_NE(&from, this);
  m_reward_.MergeFrom(from.m_reward_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_lv()) {
      set_m_lv(from.m_lv());
    }
    if (from.has_m_exp()) {
      set_m_exp(from.m_exp());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_EscortReward::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_EscortReward::CopyFrom(const E_EscortReward& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_EscortReward::IsInitialized() const {

  return true;
}

void E_EscortReward::Swap(E_EscortReward* other) {
  if (other != this) {
    std::swap(m_lv_, other->m_lv_);
    std::swap(m_exp_, other->m_exp_);
    m_reward_.Swap(&other->m_reward_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_EscortReward::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_EscortReward_descriptor_;
  metadata.reflection = E_EscortReward_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_EscortReward::kEEscortRewardListFieldNumber;
#endif  // !_MSC_VER

Sheet_EscortReward::Sheet_EscortReward()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_EscortReward::InitAsDefaultInstance() {
}

Sheet_EscortReward::Sheet_EscortReward(const Sheet_EscortReward& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_EscortReward::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_EscortReward::~Sheet_EscortReward() {
  SharedDtor();
}

void Sheet_EscortReward::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_EscortReward::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_EscortReward::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_EscortReward_descriptor_;
}

const Sheet_EscortReward& Sheet_EscortReward::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fEscort_2eproto();
  return *default_instance_;
}

Sheet_EscortReward* Sheet_EscortReward::default_instance_ = NULL;

Sheet_EscortReward* Sheet_EscortReward::New() const {
  return new Sheet_EscortReward;
}

void Sheet_EscortReward::Clear() {
  e_escortreward_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_EscortReward::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.E_EscortReward E_EscortReward_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_E_EscortReward_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_e_escortreward_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_E_EscortReward_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_EscortReward::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.E_EscortReward E_EscortReward_List = 1;
  for (int i = 0; i < this->e_escortreward_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->e_escortreward_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_EscortReward::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.E_EscortReward E_EscortReward_List = 1;
  for (int i = 0; i < this->e_escortreward_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->e_escortreward_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_EscortReward::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.E_EscortReward E_EscortReward_List = 1;
  total_size += 1 * this->e_escortreward_list_size();
  for (int i = 0; i < this->e_escortreward_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->e_escortreward_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_EscortReward::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_EscortReward* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_EscortReward*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_EscortReward::MergeFrom(const Sheet_EscortReward& from) {
  GOOGLE_CHECK_NE(&from, this);
  e_escortreward_list_.MergeFrom(from.e_escortreward_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_EscortReward::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_EscortReward::CopyFrom(const Sheet_EscortReward& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_EscortReward::IsInitialized() const {

  return true;
}

void Sheet_EscortReward::Swap(Sheet_EscortReward* other) {
  if (other != this) {
    e_escortreward_list_.Swap(&other->e_escortreward_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_EscortReward::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_EscortReward_descriptor_;
  metadata.reflection = Sheet_EscortReward_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_EscortConst::kMIdFieldNumber;
const int E_EscortConst::kMTokenidFieldNumber;
const int E_EscortConst::kMTokennumberFieldNumber;
const int E_EscortConst::kMDaytimeFieldNumber;
const int E_EscortConst::kMFreenumFieldNumber;
const int E_EscortConst::kMMapidFieldNumber;
const int E_EscortConst::kMStartnpcidFieldNumber;
const int E_EscortConst::kMStartnpcpointidFieldNumber;
const int E_EscortConst::kMOvernpcidFieldNumber;
const int E_EscortConst::kMActivityidFieldNumber;
const int E_EscortConst::kMTaskidFieldNumber;
const int E_EscortConst::kMDistanceaFieldNumber;
const int E_EscortConst::kMDistancebFieldNumber;
const int E_EscortConst::kMDistancecFieldNumber;
const int E_EscortConst::kMTimelimitFieldNumber;
#endif  // !_MSC_VER

E_EscortConst::E_EscortConst()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_EscortConst::InitAsDefaultInstance() {
}

E_EscortConst::E_EscortConst(const E_EscortConst& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_EscortConst::SharedCtor() {
  _cached_size_ = 0;
  m_id_ = 0;
  m_tokenid_ = 0;
  m_tokennumber_ = 0;
  m_daytime_ = 0;
  m_freenum_ = 0;
  m_mapid_ = 0;
  m_startnpcid_ = 0;
  m_startnpcpointid_ = 0;
  m_overnpcid_ = 0;
  m_activityid_ = 0;
  m_taskid_ = 0;
  m_distancea_ = 0;
  m_distanceb_ = 0;
  m_distancec_ = 0;
  m_timelimit_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_EscortConst::~E_EscortConst() {
  SharedDtor();
}

void E_EscortConst::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_EscortConst::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_EscortConst::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_EscortConst_descriptor_;
}

const E_EscortConst& E_EscortConst::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fEscort_2eproto();
  return *default_instance_;
}

E_EscortConst* E_EscortConst::default_instance_ = NULL;

E_EscortConst* E_EscortConst::New() const {
  return new E_EscortConst;
}

void E_EscortConst::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_id_ = 0;
    m_tokenid_ = 0;
    m_tokennumber_ = 0;
    m_daytime_ = 0;
    m_freenum_ = 0;
    m_mapid_ = 0;
    m_startnpcid_ = 0;
    m_startnpcpointid_ = 0;
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    m_overnpcid_ = 0;
    m_activityid_ = 0;
    m_taskid_ = 0;
    m_distancea_ = 0;
    m_distanceb_ = 0;
    m_distancec_ = 0;
    m_timelimit_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_EscortConst::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_id_)));
          set_has_m_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_tokenid;
        break;
      }

      // optional int32 m_tokenid = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_tokenid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_tokenid_)));
          set_has_m_tokenid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_m_tokennumber;
        break;
      }

      // optional int32 m_tokennumber = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_tokennumber:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_tokennumber_)));
          set_has_m_tokennumber();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_m_daytime;
        break;
      }

      // optional int32 m_daytime = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_daytime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_daytime_)));
          set_has_m_daytime();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_m_freenum;
        break;
      }

      // optional int32 m_freenum = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_freenum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_freenum_)));
          set_has_m_freenum();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_m_mapid;
        break;
      }

      // optional int32 m_mapid = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_mapid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_mapid_)));
          set_has_m_mapid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_m_startnpcid;
        break;
      }

      // optional int32 m_startnpcid = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_startnpcid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_startnpcid_)));
          set_has_m_startnpcid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(64)) goto parse_m_startnpcpointid;
        break;
      }

      // optional int32 m_startnpcpointid = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_startnpcpointid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_startnpcpointid_)));
          set_has_m_startnpcpointid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(72)) goto parse_m_overnpcid;
        break;
      }

      // optional int32 m_overnpcid = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_overnpcid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_overnpcid_)));
          set_has_m_overnpcid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(80)) goto parse_m_activityid;
        break;
      }

      // optional int32 m_activityid = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_activityid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_activityid_)));
          set_has_m_activityid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(88)) goto parse_m_taskid;
        break;
      }

      // optional int32 m_taskid = 11;
      case 11: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_taskid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_taskid_)));
          set_has_m_taskid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(96)) goto parse_m_distancea;
        break;
      }

      // optional int32 m_distancea = 12;
      case 12: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_distancea:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_distancea_)));
          set_has_m_distancea();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(104)) goto parse_m_distanceb;
        break;
      }

      // optional int32 m_distanceb = 13;
      case 13: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_distanceb:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_distanceb_)));
          set_has_m_distanceb();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(112)) goto parse_m_distancec;
        break;
      }

      // optional int32 m_distancec = 14;
      case 14: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_distancec:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_distancec_)));
          set_has_m_distancec();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(120)) goto parse_m_timelimit;
        break;
      }

      // optional int32 m_timelimit = 15;
      case 15: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_timelimit:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_timelimit_)));
          set_has_m_timelimit();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_EscortConst::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_id(), output);
  }

  // optional int32 m_tokenid = 2;
  if (has_m_tokenid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_tokenid(), output);
  }

  // optional int32 m_tokennumber = 3;
  if (has_m_tokennumber()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->m_tokennumber(), output);
  }

  // optional int32 m_daytime = 4;
  if (has_m_daytime()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->m_daytime(), output);
  }

  // optional int32 m_freenum = 5;
  if (has_m_freenum()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->m_freenum(), output);
  }

  // optional int32 m_mapid = 6;
  if (has_m_mapid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->m_mapid(), output);
  }

  // optional int32 m_startnpcid = 7;
  if (has_m_startnpcid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->m_startnpcid(), output);
  }

  // optional int32 m_startnpcpointid = 8;
  if (has_m_startnpcpointid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->m_startnpcpointid(), output);
  }

  // optional int32 m_overnpcid = 9;
  if (has_m_overnpcid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->m_overnpcid(), output);
  }

  // optional int32 m_activityid = 10;
  if (has_m_activityid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->m_activityid(), output);
  }

  // optional int32 m_taskid = 11;
  if (has_m_taskid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->m_taskid(), output);
  }

  // optional int32 m_distancea = 12;
  if (has_m_distancea()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(12, this->m_distancea(), output);
  }

  // optional int32 m_distanceb = 13;
  if (has_m_distanceb()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(13, this->m_distanceb(), output);
  }

  // optional int32 m_distancec = 14;
  if (has_m_distancec()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(14, this->m_distancec(), output);
  }

  // optional int32 m_timelimit = 15;
  if (has_m_timelimit()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(15, this->m_timelimit(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_EscortConst::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_id(), target);
  }

  // optional int32 m_tokenid = 2;
  if (has_m_tokenid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_tokenid(), target);
  }

  // optional int32 m_tokennumber = 3;
  if (has_m_tokennumber()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->m_tokennumber(), target);
  }

  // optional int32 m_daytime = 4;
  if (has_m_daytime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->m_daytime(), target);
  }

  // optional int32 m_freenum = 5;
  if (has_m_freenum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->m_freenum(), target);
  }

  // optional int32 m_mapid = 6;
  if (has_m_mapid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->m_mapid(), target);
  }

  // optional int32 m_startnpcid = 7;
  if (has_m_startnpcid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->m_startnpcid(), target);
  }

  // optional int32 m_startnpcpointid = 8;
  if (has_m_startnpcpointid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->m_startnpcpointid(), target);
  }

  // optional int32 m_overnpcid = 9;
  if (has_m_overnpcid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->m_overnpcid(), target);
  }

  // optional int32 m_activityid = 10;
  if (has_m_activityid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->m_activityid(), target);
  }

  // optional int32 m_taskid = 11;
  if (has_m_taskid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->m_taskid(), target);
  }

  // optional int32 m_distancea = 12;
  if (has_m_distancea()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(12, this->m_distancea(), target);
  }

  // optional int32 m_distanceb = 13;
  if (has_m_distanceb()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(13, this->m_distanceb(), target);
  }

  // optional int32 m_distancec = 14;
  if (has_m_distancec()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(14, this->m_distancec(), target);
  }

  // optional int32 m_timelimit = 15;
  if (has_m_timelimit()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(15, this->m_timelimit(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_EscortConst::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_id = 1;
    if (has_m_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_id());
    }

    // optional int32 m_tokenid = 2;
    if (has_m_tokenid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_tokenid());
    }

    // optional int32 m_tokennumber = 3;
    if (has_m_tokennumber()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_tokennumber());
    }

    // optional int32 m_daytime = 4;
    if (has_m_daytime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_daytime());
    }

    // optional int32 m_freenum = 5;
    if (has_m_freenum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_freenum());
    }

    // optional int32 m_mapid = 6;
    if (has_m_mapid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_mapid());
    }

    // optional int32 m_startnpcid = 7;
    if (has_m_startnpcid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_startnpcid());
    }

    // optional int32 m_startnpcpointid = 8;
    if (has_m_startnpcpointid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_startnpcpointid());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional int32 m_overnpcid = 9;
    if (has_m_overnpcid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_overnpcid());
    }

    // optional int32 m_activityid = 10;
    if (has_m_activityid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_activityid());
    }

    // optional int32 m_taskid = 11;
    if (has_m_taskid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_taskid());
    }

    // optional int32 m_distancea = 12;
    if (has_m_distancea()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_distancea());
    }

    // optional int32 m_distanceb = 13;
    if (has_m_distanceb()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_distanceb());
    }

    // optional int32 m_distancec = 14;
    if (has_m_distancec()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_distancec());
    }

    // optional int32 m_timelimit = 15;
    if (has_m_timelimit()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_timelimit());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_EscortConst::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_EscortConst* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_EscortConst*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_EscortConst::MergeFrom(const E_EscortConst& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_id()) {
      set_m_id(from.m_id());
    }
    if (from.has_m_tokenid()) {
      set_m_tokenid(from.m_tokenid());
    }
    if (from.has_m_tokennumber()) {
      set_m_tokennumber(from.m_tokennumber());
    }
    if (from.has_m_daytime()) {
      set_m_daytime(from.m_daytime());
    }
    if (from.has_m_freenum()) {
      set_m_freenum(from.m_freenum());
    }
    if (from.has_m_mapid()) {
      set_m_mapid(from.m_mapid());
    }
    if (from.has_m_startnpcid()) {
      set_m_startnpcid(from.m_startnpcid());
    }
    if (from.has_m_startnpcpointid()) {
      set_m_startnpcpointid(from.m_startnpcpointid());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_m_overnpcid()) {
      set_m_overnpcid(from.m_overnpcid());
    }
    if (from.has_m_activityid()) {
      set_m_activityid(from.m_activityid());
    }
    if (from.has_m_taskid()) {
      set_m_taskid(from.m_taskid());
    }
    if (from.has_m_distancea()) {
      set_m_distancea(from.m_distancea());
    }
    if (from.has_m_distanceb()) {
      set_m_distanceb(from.m_distanceb());
    }
    if (from.has_m_distancec()) {
      set_m_distancec(from.m_distancec());
    }
    if (from.has_m_timelimit()) {
      set_m_timelimit(from.m_timelimit());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_EscortConst::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_EscortConst::CopyFrom(const E_EscortConst& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_EscortConst::IsInitialized() const {

  return true;
}

void E_EscortConst::Swap(E_EscortConst* other) {
  if (other != this) {
    std::swap(m_id_, other->m_id_);
    std::swap(m_tokenid_, other->m_tokenid_);
    std::swap(m_tokennumber_, other->m_tokennumber_);
    std::swap(m_daytime_, other->m_daytime_);
    std::swap(m_freenum_, other->m_freenum_);
    std::swap(m_mapid_, other->m_mapid_);
    std::swap(m_startnpcid_, other->m_startnpcid_);
    std::swap(m_startnpcpointid_, other->m_startnpcpointid_);
    std::swap(m_overnpcid_, other->m_overnpcid_);
    std::swap(m_activityid_, other->m_activityid_);
    std::swap(m_taskid_, other->m_taskid_);
    std::swap(m_distancea_, other->m_distancea_);
    std::swap(m_distanceb_, other->m_distanceb_);
    std::swap(m_distancec_, other->m_distancec_);
    std::swap(m_timelimit_, other->m_timelimit_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_EscortConst::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_EscortConst_descriptor_;
  metadata.reflection = E_EscortConst_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_EscortConst::kEEscortConstListFieldNumber;
#endif  // !_MSC_VER

Sheet_EscortConst::Sheet_EscortConst()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_EscortConst::InitAsDefaultInstance() {
}

Sheet_EscortConst::Sheet_EscortConst(const Sheet_EscortConst& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_EscortConst::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_EscortConst::~Sheet_EscortConst() {
  SharedDtor();
}

void Sheet_EscortConst::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_EscortConst::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_EscortConst::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_EscortConst_descriptor_;
}

const Sheet_EscortConst& Sheet_EscortConst::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fEscort_2eproto();
  return *default_instance_;
}

Sheet_EscortConst* Sheet_EscortConst::default_instance_ = NULL;

Sheet_EscortConst* Sheet_EscortConst::New() const {
  return new Sheet_EscortConst;
}

void Sheet_EscortConst::Clear() {
  e_escortconst_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_EscortConst::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.E_EscortConst E_EscortConst_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_E_EscortConst_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_e_escortconst_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_E_EscortConst_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_EscortConst::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.E_EscortConst E_EscortConst_List = 1;
  for (int i = 0; i < this->e_escortconst_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->e_escortconst_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_EscortConst::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.E_EscortConst E_EscortConst_List = 1;
  for (int i = 0; i < this->e_escortconst_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->e_escortconst_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_EscortConst::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.E_EscortConst E_EscortConst_List = 1;
  total_size += 1 * this->e_escortconst_list_size();
  for (int i = 0; i < this->e_escortconst_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->e_escortconst_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_EscortConst::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_EscortConst* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_EscortConst*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_EscortConst::MergeFrom(const Sheet_EscortConst& from) {
  GOOGLE_CHECK_NE(&from, this);
  e_escortconst_list_.MergeFrom(from.e_escortconst_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_EscortConst::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_EscortConst::CopyFrom(const Sheet_EscortConst& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_EscortConst::IsInitialized() const {

  return true;
}

void Sheet_EscortConst::Swap(Sheet_EscortConst* other) {
  if (other != this) {
    e_escortconst_list_.Swap(&other->e_escortconst_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_EscortConst::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_EscortConst_descriptor_;
  metadata.reflection = Sheet_EscortConst_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto_ff

// @@protoc_insertion_point(global_scope)
