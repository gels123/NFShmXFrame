// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: E_Gift.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "E_Gift.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace proto_ff {

namespace {

const ::google::protobuf::Descriptor* E_GiftFree_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_GiftFree_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_GiftFree_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_GiftFree_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_GiftCondition_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_GiftCondition_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_GiftCondition_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_GiftCondition_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_GiftMust_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_GiftMust_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_GiftMust_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_GiftMust_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_E_5fGift_2eproto() {
  protobuf_AddDesc_E_5fGift_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "E_Gift.proto");
  GOOGLE_CHECK(file != NULL);
  E_GiftFree_descriptor_ = file->message_type(0);
  static const int E_GiftFree_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_GiftFree, m_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_GiftFree, m_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_GiftFree, m_costid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_GiftFree, m_price_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_GiftFree, m_freeday_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_GiftFree, m_boxid_),
  };
  E_GiftFree_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_GiftFree_descriptor_,
      E_GiftFree::default_instance_,
      E_GiftFree_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_GiftFree, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_GiftFree, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_GiftFree));
  Sheet_GiftFree_descriptor_ = file->message_type(1);
  static const int Sheet_GiftFree_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_GiftFree, e_giftfree_list_),
  };
  Sheet_GiftFree_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_GiftFree_descriptor_,
      Sheet_GiftFree::default_instance_,
      Sheet_GiftFree_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_GiftFree, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_GiftFree, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_GiftFree));
  E_GiftCondition_descriptor_ = file->message_type(2);
  static const int E_GiftCondition_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_GiftCondition, m_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_GiftCondition, m_conditiontype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_GiftCondition, m_arg_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_GiftCondition, m_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_GiftCondition, m_pricetype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_GiftCondition, m_price_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_GiftCondition, m_boxid_),
  };
  E_GiftCondition_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_GiftCondition_descriptor_,
      E_GiftCondition::default_instance_,
      E_GiftCondition_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_GiftCondition, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_GiftCondition, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_GiftCondition));
  Sheet_GiftCondition_descriptor_ = file->message_type(3);
  static const int Sheet_GiftCondition_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_GiftCondition, e_giftcondition_list_),
  };
  Sheet_GiftCondition_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_GiftCondition_descriptor_,
      Sheet_GiftCondition::default_instance_,
      Sheet_GiftCondition_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_GiftCondition, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_GiftCondition, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_GiftCondition));
  E_GiftMust_descriptor_ = file->message_type(4);
  static const int E_GiftMust_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_GiftMust, m_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_GiftMust, m_boxid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_GiftMust, m_original_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_GiftMust, m_pricetype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_GiftMust, m_price_),
  };
  E_GiftMust_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_GiftMust_descriptor_,
      E_GiftMust::default_instance_,
      E_GiftMust_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_GiftMust, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_GiftMust, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_GiftMust));
  Sheet_GiftMust_descriptor_ = file->message_type(5);
  static const int Sheet_GiftMust_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_GiftMust, e_giftmust_list_),
  };
  Sheet_GiftMust_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_GiftMust_descriptor_,
      Sheet_GiftMust::default_instance_,
      Sheet_GiftMust_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_GiftMust, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_GiftMust, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_GiftMust));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_E_5fGift_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_GiftFree_descriptor_, &E_GiftFree::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_GiftFree_descriptor_, &Sheet_GiftFree::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_GiftCondition_descriptor_, &E_GiftCondition::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_GiftCondition_descriptor_, &Sheet_GiftCondition::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_GiftMust_descriptor_, &E_GiftMust::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_GiftMust_descriptor_, &Sheet_GiftMust::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_E_5fGift_2eproto() {
  delete E_GiftFree::default_instance_;
  delete E_GiftFree_reflection_;
  delete Sheet_GiftFree::default_instance_;
  delete Sheet_GiftFree_reflection_;
  delete E_GiftCondition::default_instance_;
  delete E_GiftCondition_reflection_;
  delete Sheet_GiftCondition::default_instance_;
  delete Sheet_GiftCondition_reflection_;
  delete E_GiftMust::default_instance_;
  delete E_GiftMust_reflection_;
  delete Sheet_GiftMust::default_instance_;
  delete Sheet_GiftMust_reflection_;
}

void protobuf_AddDesc_E_5fGift_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::yd_fieldoptions::protobuf_AddDesc_yd_5ffieldoptions_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\014E_Gift.proto\022\010proto_ff\032\025yd_fieldoption"
    "s.proto\"\317\001\n\nE_GiftFree\022\024\n\004m_id\030\001 \001(\005B\006\302\377"
    "\024\002id\022\032\n\006m_type\030\002 \001(\005B\n\302\377\024\006\347\261\273\345\236\213\022\036\n\010m_co"
    "stid\030\003 \001(\005B\014\302\377\024\010\350\264\247\345\270\201id\022\033\n\007m_price\030\004 \001("
    "\005B\n\302\377\024\006\344\273\267\346\240\274\022,\n\tm_freeDay\030\005 \001(\005B\031\302\377\024\025\350\277"
    "\224\350\277\230\346\234\215\345\212\241\345\231\250\345\244\251\346\225\260\022$\n\007m_boxID\030\006 \001(\005B\023\302\377"
    "\024\017\347\244\274\345\214\205\345\206\205\345\256\271box\"E\n\016Sheet_GiftFree\0223\n\017E"
    "_GiftFree_List\030\001 \003(\0132\024.proto_ff.E_GiftFr"
    "eeB\004\210\301\024\020\"\371\001\n\017E_GiftCondition\022\024\n\004m_id\030\001 \001"
    "(\005B\006\302\377\024\002id\022#\n\017m_conditionType\030\002 \001(\005B\n\302\377\024"
    "\006\347\261\273\345\236\213\022\031\n\005m_arg\030\003 \001(\005B\n\302\377\024\006\345\217\202\346\225\260\022&\n\006m_"
    "time\030\004 \001(\005B\026\302\377\024\022\347\244\274\345\214\205\346\214\201\347\273\255\346\227\266\351\227\264\022%\n\013m_"
    "priceType\030\005 \001(\005B\020\302\377\024\014\344\273\267\346\240\274\347\261\273\345\236\213\022\033\n\007m_p"
    "rice\030\006 \001(\005B\n\302\377\024\006\344\273\267\346\240\274\022$\n\007m_boxID\030\007 \001(\005B"
    "\023\302\377\024\017\347\244\274\345\214\205\345\206\205\345\256\271box\"T\n\023Sheet_GiftCondit"
    "ion\022=\n\024E_GiftCondition_List\030\001 \003(\0132\031.prot"
    "o_ff.E_GiftConditionB\004\210\301\024\002\"\242\001\n\nE_GiftMus"
    "t\022\024\n\004m_id\030\001 \001(\005B\006\302\377\024\002id\022\032\n\007m_boxid\030\002 \001(\005"
    "B\t\302\377\024\005boxid\022\036\n\nm_original\030\003 \001(\005B\n\302\377\024\006\345\216\237"
    "\344\273\267\022%\n\013m_priceType\030\004 \001(\005B\020\302\377\024\014\344\273\267\346\240\274\347\261\273\345"
    "\236\213\022\033\n\007m_price\030\005 \001(\005B\n\302\377\024\006\347\216\260\344\273\267\"E\n\016Sheet"
    "_GiftMust\0223\n\017E_GiftMust_List\030\001 \003(\0132\024.pro"
    "to_ff.E_GiftMustB\004\210\301\024 ", 902);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "E_Gift.proto", &protobuf_RegisterTypes);
  E_GiftFree::default_instance_ = new E_GiftFree();
  Sheet_GiftFree::default_instance_ = new Sheet_GiftFree();
  E_GiftCondition::default_instance_ = new E_GiftCondition();
  Sheet_GiftCondition::default_instance_ = new Sheet_GiftCondition();
  E_GiftMust::default_instance_ = new E_GiftMust();
  Sheet_GiftMust::default_instance_ = new Sheet_GiftMust();
  E_GiftFree::default_instance_->InitAsDefaultInstance();
  Sheet_GiftFree::default_instance_->InitAsDefaultInstance();
  E_GiftCondition::default_instance_->InitAsDefaultInstance();
  Sheet_GiftCondition::default_instance_->InitAsDefaultInstance();
  E_GiftMust::default_instance_->InitAsDefaultInstance();
  Sheet_GiftMust::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_E_5fGift_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_E_5fGift_2eproto {
  StaticDescriptorInitializer_E_5fGift_2eproto() {
    protobuf_AddDesc_E_5fGift_2eproto();
  }
} static_descriptor_initializer_E_5fGift_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int E_GiftFree::kMIdFieldNumber;
const int E_GiftFree::kMTypeFieldNumber;
const int E_GiftFree::kMCostidFieldNumber;
const int E_GiftFree::kMPriceFieldNumber;
const int E_GiftFree::kMFreeDayFieldNumber;
const int E_GiftFree::kMBoxIDFieldNumber;
#endif  // !_MSC_VER

E_GiftFree::E_GiftFree()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_GiftFree::InitAsDefaultInstance() {
}

E_GiftFree::E_GiftFree(const E_GiftFree& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_GiftFree::SharedCtor() {
  _cached_size_ = 0;
  m_id_ = 0;
  m_type_ = 0;
  m_costid_ = 0;
  m_price_ = 0;
  m_freeday_ = 0;
  m_boxid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_GiftFree::~E_GiftFree() {
  SharedDtor();
}

void E_GiftFree::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_GiftFree::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_GiftFree::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_GiftFree_descriptor_;
}

const E_GiftFree& E_GiftFree::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fGift_2eproto();
  return *default_instance_;
}

E_GiftFree* E_GiftFree::default_instance_ = NULL;

E_GiftFree* E_GiftFree::New() const {
  return new E_GiftFree;
}

void E_GiftFree::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_id_ = 0;
    m_type_ = 0;
    m_costid_ = 0;
    m_price_ = 0;
    m_freeday_ = 0;
    m_boxid_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_GiftFree::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_id_)));
          set_has_m_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_type;
        break;
      }

      // optional int32 m_type = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_type_)));
          set_has_m_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_m_costid;
        break;
      }

      // optional int32 m_costid = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_costid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_costid_)));
          set_has_m_costid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_m_price;
        break;
      }

      // optional int32 m_price = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_price:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_price_)));
          set_has_m_price();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_m_freeDay;
        break;
      }

      // optional int32 m_freeDay = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_freeDay:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_freeday_)));
          set_has_m_freeday();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_m_boxID;
        break;
      }

      // optional int32 m_boxID = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_boxID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_boxid_)));
          set_has_m_boxid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_GiftFree::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_id(), output);
  }

  // optional int32 m_type = 2;
  if (has_m_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_type(), output);
  }

  // optional int32 m_costid = 3;
  if (has_m_costid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->m_costid(), output);
  }

  // optional int32 m_price = 4;
  if (has_m_price()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->m_price(), output);
  }

  // optional int32 m_freeDay = 5;
  if (has_m_freeday()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->m_freeday(), output);
  }

  // optional int32 m_boxID = 6;
  if (has_m_boxid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->m_boxid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_GiftFree::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_id(), target);
  }

  // optional int32 m_type = 2;
  if (has_m_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_type(), target);
  }

  // optional int32 m_costid = 3;
  if (has_m_costid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->m_costid(), target);
  }

  // optional int32 m_price = 4;
  if (has_m_price()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->m_price(), target);
  }

  // optional int32 m_freeDay = 5;
  if (has_m_freeday()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->m_freeday(), target);
  }

  // optional int32 m_boxID = 6;
  if (has_m_boxid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->m_boxid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_GiftFree::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_id = 1;
    if (has_m_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_id());
    }

    // optional int32 m_type = 2;
    if (has_m_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_type());
    }

    // optional int32 m_costid = 3;
    if (has_m_costid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_costid());
    }

    // optional int32 m_price = 4;
    if (has_m_price()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_price());
    }

    // optional int32 m_freeDay = 5;
    if (has_m_freeday()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_freeday());
    }

    // optional int32 m_boxID = 6;
    if (has_m_boxid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_boxid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_GiftFree::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_GiftFree* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_GiftFree*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_GiftFree::MergeFrom(const E_GiftFree& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_id()) {
      set_m_id(from.m_id());
    }
    if (from.has_m_type()) {
      set_m_type(from.m_type());
    }
    if (from.has_m_costid()) {
      set_m_costid(from.m_costid());
    }
    if (from.has_m_price()) {
      set_m_price(from.m_price());
    }
    if (from.has_m_freeday()) {
      set_m_freeday(from.m_freeday());
    }
    if (from.has_m_boxid()) {
      set_m_boxid(from.m_boxid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_GiftFree::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_GiftFree::CopyFrom(const E_GiftFree& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_GiftFree::IsInitialized() const {

  return true;
}

void E_GiftFree::Swap(E_GiftFree* other) {
  if (other != this) {
    std::swap(m_id_, other->m_id_);
    std::swap(m_type_, other->m_type_);
    std::swap(m_costid_, other->m_costid_);
    std::swap(m_price_, other->m_price_);
    std::swap(m_freeday_, other->m_freeday_);
    std::swap(m_boxid_, other->m_boxid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_GiftFree::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_GiftFree_descriptor_;
  metadata.reflection = E_GiftFree_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_GiftFree::kEGiftFreeListFieldNumber;
#endif  // !_MSC_VER

Sheet_GiftFree::Sheet_GiftFree()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_GiftFree::InitAsDefaultInstance() {
}

Sheet_GiftFree::Sheet_GiftFree(const Sheet_GiftFree& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_GiftFree::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_GiftFree::~Sheet_GiftFree() {
  SharedDtor();
}

void Sheet_GiftFree::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_GiftFree::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_GiftFree::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_GiftFree_descriptor_;
}

const Sheet_GiftFree& Sheet_GiftFree::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fGift_2eproto();
  return *default_instance_;
}

Sheet_GiftFree* Sheet_GiftFree::default_instance_ = NULL;

Sheet_GiftFree* Sheet_GiftFree::New() const {
  return new Sheet_GiftFree;
}

void Sheet_GiftFree::Clear() {
  e_giftfree_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_GiftFree::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.E_GiftFree E_GiftFree_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_E_GiftFree_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_e_giftfree_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_E_GiftFree_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_GiftFree::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.E_GiftFree E_GiftFree_List = 1;
  for (int i = 0; i < this->e_giftfree_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->e_giftfree_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_GiftFree::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.E_GiftFree E_GiftFree_List = 1;
  for (int i = 0; i < this->e_giftfree_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->e_giftfree_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_GiftFree::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.E_GiftFree E_GiftFree_List = 1;
  total_size += 1 * this->e_giftfree_list_size();
  for (int i = 0; i < this->e_giftfree_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->e_giftfree_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_GiftFree::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_GiftFree* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_GiftFree*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_GiftFree::MergeFrom(const Sheet_GiftFree& from) {
  GOOGLE_CHECK_NE(&from, this);
  e_giftfree_list_.MergeFrom(from.e_giftfree_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_GiftFree::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_GiftFree::CopyFrom(const Sheet_GiftFree& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_GiftFree::IsInitialized() const {

  return true;
}

void Sheet_GiftFree::Swap(Sheet_GiftFree* other) {
  if (other != this) {
    e_giftfree_list_.Swap(&other->e_giftfree_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_GiftFree::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_GiftFree_descriptor_;
  metadata.reflection = Sheet_GiftFree_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_GiftCondition::kMIdFieldNumber;
const int E_GiftCondition::kMConditionTypeFieldNumber;
const int E_GiftCondition::kMArgFieldNumber;
const int E_GiftCondition::kMTimeFieldNumber;
const int E_GiftCondition::kMPriceTypeFieldNumber;
const int E_GiftCondition::kMPriceFieldNumber;
const int E_GiftCondition::kMBoxIDFieldNumber;
#endif  // !_MSC_VER

E_GiftCondition::E_GiftCondition()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_GiftCondition::InitAsDefaultInstance() {
}

E_GiftCondition::E_GiftCondition(const E_GiftCondition& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_GiftCondition::SharedCtor() {
  _cached_size_ = 0;
  m_id_ = 0;
  m_conditiontype_ = 0;
  m_arg_ = 0;
  m_time_ = 0;
  m_pricetype_ = 0;
  m_price_ = 0;
  m_boxid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_GiftCondition::~E_GiftCondition() {
  SharedDtor();
}

void E_GiftCondition::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_GiftCondition::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_GiftCondition::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_GiftCondition_descriptor_;
}

const E_GiftCondition& E_GiftCondition::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fGift_2eproto();
  return *default_instance_;
}

E_GiftCondition* E_GiftCondition::default_instance_ = NULL;

E_GiftCondition* E_GiftCondition::New() const {
  return new E_GiftCondition;
}

void E_GiftCondition::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_id_ = 0;
    m_conditiontype_ = 0;
    m_arg_ = 0;
    m_time_ = 0;
    m_pricetype_ = 0;
    m_price_ = 0;
    m_boxid_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_GiftCondition::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_id_)));
          set_has_m_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_conditionType;
        break;
      }

      // optional int32 m_conditionType = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_conditionType:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_conditiontype_)));
          set_has_m_conditiontype();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_m_arg;
        break;
      }

      // optional int32 m_arg = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_arg:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_arg_)));
          set_has_m_arg();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_m_time;
        break;
      }

      // optional int32 m_time = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_time_)));
          set_has_m_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_m_priceType;
        break;
      }

      // optional int32 m_priceType = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_priceType:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_pricetype_)));
          set_has_m_pricetype();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_m_price;
        break;
      }

      // optional int32 m_price = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_price:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_price_)));
          set_has_m_price();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_m_boxID;
        break;
      }

      // optional int32 m_boxID = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_boxID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_boxid_)));
          set_has_m_boxid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_GiftCondition::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_id(), output);
  }

  // optional int32 m_conditionType = 2;
  if (has_m_conditiontype()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_conditiontype(), output);
  }

  // optional int32 m_arg = 3;
  if (has_m_arg()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->m_arg(), output);
  }

  // optional int32 m_time = 4;
  if (has_m_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->m_time(), output);
  }

  // optional int32 m_priceType = 5;
  if (has_m_pricetype()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->m_pricetype(), output);
  }

  // optional int32 m_price = 6;
  if (has_m_price()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->m_price(), output);
  }

  // optional int32 m_boxID = 7;
  if (has_m_boxid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->m_boxid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_GiftCondition::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_id(), target);
  }

  // optional int32 m_conditionType = 2;
  if (has_m_conditiontype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_conditiontype(), target);
  }

  // optional int32 m_arg = 3;
  if (has_m_arg()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->m_arg(), target);
  }

  // optional int32 m_time = 4;
  if (has_m_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->m_time(), target);
  }

  // optional int32 m_priceType = 5;
  if (has_m_pricetype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->m_pricetype(), target);
  }

  // optional int32 m_price = 6;
  if (has_m_price()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->m_price(), target);
  }

  // optional int32 m_boxID = 7;
  if (has_m_boxid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->m_boxid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_GiftCondition::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_id = 1;
    if (has_m_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_id());
    }

    // optional int32 m_conditionType = 2;
    if (has_m_conditiontype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_conditiontype());
    }

    // optional int32 m_arg = 3;
    if (has_m_arg()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_arg());
    }

    // optional int32 m_time = 4;
    if (has_m_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_time());
    }

    // optional int32 m_priceType = 5;
    if (has_m_pricetype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_pricetype());
    }

    // optional int32 m_price = 6;
    if (has_m_price()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_price());
    }

    // optional int32 m_boxID = 7;
    if (has_m_boxid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_boxid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_GiftCondition::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_GiftCondition* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_GiftCondition*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_GiftCondition::MergeFrom(const E_GiftCondition& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_id()) {
      set_m_id(from.m_id());
    }
    if (from.has_m_conditiontype()) {
      set_m_conditiontype(from.m_conditiontype());
    }
    if (from.has_m_arg()) {
      set_m_arg(from.m_arg());
    }
    if (from.has_m_time()) {
      set_m_time(from.m_time());
    }
    if (from.has_m_pricetype()) {
      set_m_pricetype(from.m_pricetype());
    }
    if (from.has_m_price()) {
      set_m_price(from.m_price());
    }
    if (from.has_m_boxid()) {
      set_m_boxid(from.m_boxid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_GiftCondition::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_GiftCondition::CopyFrom(const E_GiftCondition& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_GiftCondition::IsInitialized() const {

  return true;
}

void E_GiftCondition::Swap(E_GiftCondition* other) {
  if (other != this) {
    std::swap(m_id_, other->m_id_);
    std::swap(m_conditiontype_, other->m_conditiontype_);
    std::swap(m_arg_, other->m_arg_);
    std::swap(m_time_, other->m_time_);
    std::swap(m_pricetype_, other->m_pricetype_);
    std::swap(m_price_, other->m_price_);
    std::swap(m_boxid_, other->m_boxid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_GiftCondition::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_GiftCondition_descriptor_;
  metadata.reflection = E_GiftCondition_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_GiftCondition::kEGiftConditionListFieldNumber;
#endif  // !_MSC_VER

Sheet_GiftCondition::Sheet_GiftCondition()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_GiftCondition::InitAsDefaultInstance() {
}

Sheet_GiftCondition::Sheet_GiftCondition(const Sheet_GiftCondition& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_GiftCondition::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_GiftCondition::~Sheet_GiftCondition() {
  SharedDtor();
}

void Sheet_GiftCondition::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_GiftCondition::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_GiftCondition::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_GiftCondition_descriptor_;
}

const Sheet_GiftCondition& Sheet_GiftCondition::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fGift_2eproto();
  return *default_instance_;
}

Sheet_GiftCondition* Sheet_GiftCondition::default_instance_ = NULL;

Sheet_GiftCondition* Sheet_GiftCondition::New() const {
  return new Sheet_GiftCondition;
}

void Sheet_GiftCondition::Clear() {
  e_giftcondition_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_GiftCondition::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.E_GiftCondition E_GiftCondition_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_E_GiftCondition_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_e_giftcondition_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_E_GiftCondition_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_GiftCondition::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.E_GiftCondition E_GiftCondition_List = 1;
  for (int i = 0; i < this->e_giftcondition_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->e_giftcondition_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_GiftCondition::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.E_GiftCondition E_GiftCondition_List = 1;
  for (int i = 0; i < this->e_giftcondition_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->e_giftcondition_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_GiftCondition::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.E_GiftCondition E_GiftCondition_List = 1;
  total_size += 1 * this->e_giftcondition_list_size();
  for (int i = 0; i < this->e_giftcondition_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->e_giftcondition_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_GiftCondition::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_GiftCondition* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_GiftCondition*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_GiftCondition::MergeFrom(const Sheet_GiftCondition& from) {
  GOOGLE_CHECK_NE(&from, this);
  e_giftcondition_list_.MergeFrom(from.e_giftcondition_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_GiftCondition::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_GiftCondition::CopyFrom(const Sheet_GiftCondition& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_GiftCondition::IsInitialized() const {

  return true;
}

void Sheet_GiftCondition::Swap(Sheet_GiftCondition* other) {
  if (other != this) {
    e_giftcondition_list_.Swap(&other->e_giftcondition_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_GiftCondition::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_GiftCondition_descriptor_;
  metadata.reflection = Sheet_GiftCondition_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_GiftMust::kMIdFieldNumber;
const int E_GiftMust::kMBoxidFieldNumber;
const int E_GiftMust::kMOriginalFieldNumber;
const int E_GiftMust::kMPriceTypeFieldNumber;
const int E_GiftMust::kMPriceFieldNumber;
#endif  // !_MSC_VER

E_GiftMust::E_GiftMust()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_GiftMust::InitAsDefaultInstance() {
}

E_GiftMust::E_GiftMust(const E_GiftMust& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_GiftMust::SharedCtor() {
  _cached_size_ = 0;
  m_id_ = 0;
  m_boxid_ = 0;
  m_original_ = 0;
  m_pricetype_ = 0;
  m_price_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_GiftMust::~E_GiftMust() {
  SharedDtor();
}

void E_GiftMust::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_GiftMust::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_GiftMust::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_GiftMust_descriptor_;
}

const E_GiftMust& E_GiftMust::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fGift_2eproto();
  return *default_instance_;
}

E_GiftMust* E_GiftMust::default_instance_ = NULL;

E_GiftMust* E_GiftMust::New() const {
  return new E_GiftMust;
}

void E_GiftMust::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_id_ = 0;
    m_boxid_ = 0;
    m_original_ = 0;
    m_pricetype_ = 0;
    m_price_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_GiftMust::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_id_)));
          set_has_m_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_boxid;
        break;
      }

      // optional int32 m_boxid = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_boxid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_boxid_)));
          set_has_m_boxid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_m_original;
        break;
      }

      // optional int32 m_original = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_original:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_original_)));
          set_has_m_original();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_m_priceType;
        break;
      }

      // optional int32 m_priceType = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_priceType:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_pricetype_)));
          set_has_m_pricetype();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_m_price;
        break;
      }

      // optional int32 m_price = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_price:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_price_)));
          set_has_m_price();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_GiftMust::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_id(), output);
  }

  // optional int32 m_boxid = 2;
  if (has_m_boxid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_boxid(), output);
  }

  // optional int32 m_original = 3;
  if (has_m_original()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->m_original(), output);
  }

  // optional int32 m_priceType = 4;
  if (has_m_pricetype()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->m_pricetype(), output);
  }

  // optional int32 m_price = 5;
  if (has_m_price()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->m_price(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_GiftMust::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_id(), target);
  }

  // optional int32 m_boxid = 2;
  if (has_m_boxid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_boxid(), target);
  }

  // optional int32 m_original = 3;
  if (has_m_original()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->m_original(), target);
  }

  // optional int32 m_priceType = 4;
  if (has_m_pricetype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->m_pricetype(), target);
  }

  // optional int32 m_price = 5;
  if (has_m_price()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->m_price(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_GiftMust::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_id = 1;
    if (has_m_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_id());
    }

    // optional int32 m_boxid = 2;
    if (has_m_boxid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_boxid());
    }

    // optional int32 m_original = 3;
    if (has_m_original()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_original());
    }

    // optional int32 m_priceType = 4;
    if (has_m_pricetype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_pricetype());
    }

    // optional int32 m_price = 5;
    if (has_m_price()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_price());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_GiftMust::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_GiftMust* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_GiftMust*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_GiftMust::MergeFrom(const E_GiftMust& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_id()) {
      set_m_id(from.m_id());
    }
    if (from.has_m_boxid()) {
      set_m_boxid(from.m_boxid());
    }
    if (from.has_m_original()) {
      set_m_original(from.m_original());
    }
    if (from.has_m_pricetype()) {
      set_m_pricetype(from.m_pricetype());
    }
    if (from.has_m_price()) {
      set_m_price(from.m_price());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_GiftMust::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_GiftMust::CopyFrom(const E_GiftMust& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_GiftMust::IsInitialized() const {

  return true;
}

void E_GiftMust::Swap(E_GiftMust* other) {
  if (other != this) {
    std::swap(m_id_, other->m_id_);
    std::swap(m_boxid_, other->m_boxid_);
    std::swap(m_original_, other->m_original_);
    std::swap(m_pricetype_, other->m_pricetype_);
    std::swap(m_price_, other->m_price_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_GiftMust::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_GiftMust_descriptor_;
  metadata.reflection = E_GiftMust_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_GiftMust::kEGiftMustListFieldNumber;
#endif  // !_MSC_VER

Sheet_GiftMust::Sheet_GiftMust()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_GiftMust::InitAsDefaultInstance() {
}

Sheet_GiftMust::Sheet_GiftMust(const Sheet_GiftMust& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_GiftMust::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_GiftMust::~Sheet_GiftMust() {
  SharedDtor();
}

void Sheet_GiftMust::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_GiftMust::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_GiftMust::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_GiftMust_descriptor_;
}

const Sheet_GiftMust& Sheet_GiftMust::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fGift_2eproto();
  return *default_instance_;
}

Sheet_GiftMust* Sheet_GiftMust::default_instance_ = NULL;

Sheet_GiftMust* Sheet_GiftMust::New() const {
  return new Sheet_GiftMust;
}

void Sheet_GiftMust::Clear() {
  e_giftmust_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_GiftMust::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.E_GiftMust E_GiftMust_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_E_GiftMust_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_e_giftmust_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_E_GiftMust_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_GiftMust::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.E_GiftMust E_GiftMust_List = 1;
  for (int i = 0; i < this->e_giftmust_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->e_giftmust_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_GiftMust::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.E_GiftMust E_GiftMust_List = 1;
  for (int i = 0; i < this->e_giftmust_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->e_giftmust_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_GiftMust::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.E_GiftMust E_GiftMust_List = 1;
  total_size += 1 * this->e_giftmust_list_size();
  for (int i = 0; i < this->e_giftmust_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->e_giftmust_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_GiftMust::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_GiftMust* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_GiftMust*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_GiftMust::MergeFrom(const Sheet_GiftMust& from) {
  GOOGLE_CHECK_NE(&from, this);
  e_giftmust_list_.MergeFrom(from.e_giftmust_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_GiftMust::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_GiftMust::CopyFrom(const Sheet_GiftMust& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_GiftMust::IsInitialized() const {

  return true;
}

void Sheet_GiftMust::Swap(Sheet_GiftMust* other) {
  if (other != this) {
    e_giftmust_list_.Swap(&other->e_giftmust_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_GiftMust::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_GiftMust_descriptor_;
  metadata.reflection = Sheet_GiftMust_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto_ff

// @@protoc_insertion_point(global_scope)
