// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: occupation.proto

#ifndef PROTOBUF_occupation_2eproto__INCLUDED
#define PROTOBUF_occupation_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "yd_fieldoptions.pb.h"
// @@protoc_insertion_point(includes)

namespace proto_ff {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_occupation_2eproto();
void protobuf_AssignDesc_occupation_2eproto();
void protobuf_ShutdownFile_occupation_2eproto();

class occupationoccupationattributeDesc;
class occupationoccupationdelSkillDesc;
class occupationoccupationskillDesc;
class occupationoccupation;
class Sheet_occupationoccupation;
class occupationaptitudeattributeDesc;
class occupationaptitude;
class Sheet_occupationaptitude;
class occupationconditionList;
class Sheet_occupationconditionList;

// ===================================================================

class occupationoccupationattributeDesc : public ::google::protobuf::Message {
 public:
  occupationoccupationattributeDesc();
  virtual ~occupationoccupationattributeDesc();

  occupationoccupationattributeDesc(const occupationoccupationattributeDesc& from);

  inline occupationoccupationattributeDesc& operator=(const occupationoccupationattributeDesc& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const occupationoccupationattributeDesc& default_instance();

  void Swap(occupationoccupationattributeDesc* other);

  // implements Message ----------------------------------------------

  occupationoccupationattributeDesc* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const occupationoccupationattributeDesc& from);
  void MergeFrom(const occupationoccupationattributeDesc& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.occupationoccupationattributeDesc)
 private:
  inline void set_has_type();
  inline void clear_has_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_occupation_2eproto();
  friend void protobuf_AssignDesc_occupation_2eproto();
  friend void protobuf_ShutdownFile_occupation_2eproto();

  void InitAsDefaultInstance();
  static occupationoccupationattributeDesc* default_instance_;
};
// -------------------------------------------------------------------

class occupationoccupationdelSkillDesc : public ::google::protobuf::Message {
 public:
  occupationoccupationdelSkillDesc();
  virtual ~occupationoccupationdelSkillDesc();

  occupationoccupationdelSkillDesc(const occupationoccupationdelSkillDesc& from);

  inline occupationoccupationdelSkillDesc& operator=(const occupationoccupationdelSkillDesc& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const occupationoccupationdelSkillDesc& default_instance();

  void Swap(occupationoccupationdelSkillDesc* other);

  // implements Message ----------------------------------------------

  occupationoccupationdelSkillDesc* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const occupationoccupationdelSkillDesc& from);
  void MergeFrom(const occupationoccupationdelSkillDesc& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int64 id() const;
  inline void set_id(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.occupationoccupationdelSkillDesc)
 private:
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_occupation_2eproto();
  friend void protobuf_AssignDesc_occupation_2eproto();
  friend void protobuf_ShutdownFile_occupation_2eproto();

  void InitAsDefaultInstance();
  static occupationoccupationdelSkillDesc* default_instance_;
};
// -------------------------------------------------------------------

class occupationoccupationskillDesc : public ::google::protobuf::Message {
 public:
  occupationoccupationskillDesc();
  virtual ~occupationoccupationskillDesc();

  occupationoccupationskillDesc(const occupationoccupationskillDesc& from);

  inline occupationoccupationskillDesc& operator=(const occupationoccupationskillDesc& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const occupationoccupationskillDesc& default_instance();

  void Swap(occupationoccupationskillDesc* other);

  // implements Message ----------------------------------------------

  occupationoccupationskillDesc* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const occupationoccupationskillDesc& from);
  void MergeFrom(const occupationoccupationskillDesc& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int64 id() const;
  inline void set_id(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.occupationoccupationskillDesc)
 private:
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_occupation_2eproto();
  friend void protobuf_AssignDesc_occupation_2eproto();
  friend void protobuf_ShutdownFile_occupation_2eproto();

  void InitAsDefaultInstance();
  static occupationoccupationskillDesc* default_instance_;
};
// -------------------------------------------------------------------

class occupationoccupation : public ::google::protobuf::Message {
 public:
  occupationoccupation();
  virtual ~occupationoccupation();

  occupationoccupation(const occupationoccupation& from);

  inline occupationoccupation& operator=(const occupationoccupation& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const occupationoccupation& default_instance();

  void Swap(occupationoccupation* other);

  // implements Message ----------------------------------------------

  occupationoccupation* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const occupationoccupation& from);
  void MergeFrom(const occupationoccupation& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 occupationID = 1;
  inline bool has_occupationid() const;
  inline void clear_occupationid();
  static const int kOccupationIDFieldNumber = 1;
  inline ::google::protobuf::int64 occupationid() const;
  inline void set_occupationid(::google::protobuf::int64 value);

  // optional int32 id = 2;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 2;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // optional int32 grade = 3;
  inline bool has_grade() const;
  inline void clear_grade();
  static const int kGradeFieldNumber = 3;
  inline ::google::protobuf::int32 grade() const;
  inline void set_grade(::google::protobuf::int32 value);

  // optional string activeDesc = 4;
  inline bool has_activedesc() const;
  inline void clear_activedesc();
  static const int kActiveDescFieldNumber = 4;
  inline const ::std::string& activedesc() const;
  inline void set_activedesc(const ::std::string& value);
  inline void set_activedesc(const char* value);
  inline void set_activedesc(const char* value, size_t size);
  inline ::std::string* mutable_activedesc();
  inline ::std::string* release_activedesc();
  inline void set_allocated_activedesc(::std::string* activedesc);

  // optional int32 level = 5;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 5;
  inline ::google::protobuf::int32 level() const;
  inline void set_level(::google::protobuf::int32 value);

  // optional int64 aptitude = 6;
  inline bool has_aptitude() const;
  inline void clear_aptitude();
  static const int kAptitudeFieldNumber = 6;
  inline ::google::protobuf::int64 aptitude() const;
  inline void set_aptitude(::google::protobuf::int64 value);

  // optional string taskID = 7;
  inline bool has_taskid() const;
  inline void clear_taskid();
  static const int kTaskIDFieldNumber = 7;
  inline const ::std::string& taskid() const;
  inline void set_taskid(const ::std::string& value);
  inline void set_taskid(const char* value);
  inline void set_taskid(const char* value, size_t size);
  inline ::std::string* mutable_taskid();
  inline ::std::string* release_taskid();
  inline void set_allocated_taskid(::std::string* taskid);

  // optional string equip = 8;
  inline bool has_equip() const;
  inline void clear_equip();
  static const int kEquipFieldNumber = 8;
  inline const ::std::string& equip() const;
  inline void set_equip(const ::std::string& value);
  inline void set_equip(const char* value);
  inline void set_equip(const char* value, size_t size);
  inline ::std::string* mutable_equip();
  inline ::std::string* release_equip();
  inline void set_allocated_equip(::std::string* equip);

  // optional string modelID = 9;
  inline bool has_modelid() const;
  inline void clear_modelid();
  static const int kModelIDFieldNumber = 9;
  inline const ::std::string& modelid() const;
  inline void set_modelid(const ::std::string& value);
  inline void set_modelid(const char* value);
  inline void set_modelid(const char* value, size_t size);
  inline ::std::string* mutable_modelid();
  inline ::std::string* release_modelid();
  inline void set_allocated_modelid(::std::string* modelid);

  // repeated .proto_ff.occupationoccupationattributeDesc attribute = 10;
  inline int attribute_size() const;
  inline void clear_attribute();
  static const int kAttributeFieldNumber = 10;
  inline const ::proto_ff::occupationoccupationattributeDesc& attribute(int index) const;
  inline ::proto_ff::occupationoccupationattributeDesc* mutable_attribute(int index);
  inline ::proto_ff::occupationoccupationattributeDesc* add_attribute();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::occupationoccupationattributeDesc >&
      attribute() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::occupationoccupationattributeDesc >*
      mutable_attribute();

  // repeated .proto_ff.occupationoccupationdelSkillDesc delSkill = 11;
  inline int delskill_size() const;
  inline void clear_delskill();
  static const int kDelSkillFieldNumber = 11;
  inline const ::proto_ff::occupationoccupationdelSkillDesc& delskill(int index) const;
  inline ::proto_ff::occupationoccupationdelSkillDesc* mutable_delskill(int index);
  inline ::proto_ff::occupationoccupationdelSkillDesc* add_delskill();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::occupationoccupationdelSkillDesc >&
      delskill() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::occupationoccupationdelSkillDesc >*
      mutable_delskill();

  // repeated .proto_ff.occupationoccupationskillDesc skill = 12;
  inline int skill_size() const;
  inline void clear_skill();
  static const int kSkillFieldNumber = 12;
  inline const ::proto_ff::occupationoccupationskillDesc& skill(int index) const;
  inline ::proto_ff::occupationoccupationskillDesc* mutable_skill(int index);
  inline ::proto_ff::occupationoccupationskillDesc* add_skill();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::occupationoccupationskillDesc >&
      skill() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::occupationoccupationskillDesc >*
      mutable_skill();

  // @@protoc_insertion_point(class_scope:proto_ff.occupationoccupation)
 private:
  inline void set_has_occupationid();
  inline void clear_has_occupationid();
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_grade();
  inline void clear_has_grade();
  inline void set_has_activedesc();
  inline void clear_has_activedesc();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_aptitude();
  inline void clear_has_aptitude();
  inline void set_has_taskid();
  inline void clear_has_taskid();
  inline void set_has_equip();
  inline void clear_has_equip();
  inline void set_has_modelid();
  inline void clear_has_modelid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 occupationid_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 grade_;
  ::std::string* activedesc_;
  ::google::protobuf::int64 aptitude_;
  ::std::string* taskid_;
  ::std::string* equip_;
  ::std::string* modelid_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::occupationoccupationattributeDesc > attribute_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::occupationoccupationdelSkillDesc > delskill_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::occupationoccupationskillDesc > skill_;
  ::google::protobuf::int32 level_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(12 + 31) / 32];

  friend void  protobuf_AddDesc_occupation_2eproto();
  friend void protobuf_AssignDesc_occupation_2eproto();
  friend void protobuf_ShutdownFile_occupation_2eproto();

  void InitAsDefaultInstance();
  static occupationoccupation* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_occupationoccupation : public ::google::protobuf::Message {
 public:
  Sheet_occupationoccupation();
  virtual ~Sheet_occupationoccupation();

  Sheet_occupationoccupation(const Sheet_occupationoccupation& from);

  inline Sheet_occupationoccupation& operator=(const Sheet_occupationoccupation& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_occupationoccupation& default_instance();

  void Swap(Sheet_occupationoccupation* other);

  // implements Message ----------------------------------------------

  Sheet_occupationoccupation* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_occupationoccupation& from);
  void MergeFrom(const Sheet_occupationoccupation& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.occupationoccupation occupationoccupation_List = 1;
  inline int occupationoccupation_list_size() const;
  inline void clear_occupationoccupation_list();
  static const int kOccupationoccupationListFieldNumber = 1;
  inline const ::proto_ff::occupationoccupation& occupationoccupation_list(int index) const;
  inline ::proto_ff::occupationoccupation* mutable_occupationoccupation_list(int index);
  inline ::proto_ff::occupationoccupation* add_occupationoccupation_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::occupationoccupation >&
      occupationoccupation_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::occupationoccupation >*
      mutable_occupationoccupation_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_occupationoccupation)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::occupationoccupation > occupationoccupation_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_occupation_2eproto();
  friend void protobuf_AssignDesc_occupation_2eproto();
  friend void protobuf_ShutdownFile_occupation_2eproto();

  void InitAsDefaultInstance();
  static Sheet_occupationoccupation* default_instance_;
};
// -------------------------------------------------------------------

class occupationaptitudeattributeDesc : public ::google::protobuf::Message {
 public:
  occupationaptitudeattributeDesc();
  virtual ~occupationaptitudeattributeDesc();

  occupationaptitudeattributeDesc(const occupationaptitudeattributeDesc& from);

  inline occupationaptitudeattributeDesc& operator=(const occupationaptitudeattributeDesc& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const occupationaptitudeattributeDesc& default_instance();

  void Swap(occupationaptitudeattributeDesc* other);

  // implements Message ----------------------------------------------

  occupationaptitudeattributeDesc* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const occupationaptitudeattributeDesc& from);
  void MergeFrom(const occupationaptitudeattributeDesc& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.occupationaptitudeattributeDesc)
 private:
  inline void set_has_type();
  inline void clear_has_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_occupation_2eproto();
  friend void protobuf_AssignDesc_occupation_2eproto();
  friend void protobuf_ShutdownFile_occupation_2eproto();

  void InitAsDefaultInstance();
  static occupationaptitudeattributeDesc* default_instance_;
};
// -------------------------------------------------------------------

class occupationaptitude : public ::google::protobuf::Message {
 public:
  occupationaptitude();
  virtual ~occupationaptitude();

  occupationaptitude(const occupationaptitude& from);

  inline occupationaptitude& operator=(const occupationaptitude& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const occupationaptitude& default_instance();

  void Swap(occupationaptitude* other);

  // implements Message ----------------------------------------------

  occupationaptitude* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const occupationaptitude& from);
  void MergeFrom(const occupationaptitude& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int64 id() const;
  inline void set_id(::google::protobuf::int64 value);

  // optional int32 grade = 2;
  inline bool has_grade() const;
  inline void clear_grade();
  static const int kGradeFieldNumber = 2;
  inline ::google::protobuf::int32 grade() const;
  inline void set_grade(::google::protobuf::int32 value);

  // optional int32 level = 3;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 3;
  inline ::google::protobuf::int32 level() const;
  inline void set_level(::google::protobuf::int32 value);

  // optional int64 requirement = 4;
  inline bool has_requirement() const;
  inline void clear_requirement();
  static const int kRequirementFieldNumber = 4;
  inline ::google::protobuf::int64 requirement() const;
  inline void set_requirement(::google::protobuf::int64 value);

  // optional int64 material = 5;
  inline bool has_material() const;
  inline void clear_material();
  static const int kMaterialFieldNumber = 5;
  inline ::google::protobuf::int64 material() const;
  inline void set_material(::google::protobuf::int64 value);

  // optional int32 num = 6;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 6;
  inline ::google::protobuf::int32 num() const;
  inline void set_num(::google::protobuf::int32 value);

  // optional string conditionId = 7;
  inline bool has_conditionid() const;
  inline void clear_conditionid();
  static const int kConditionIdFieldNumber = 7;
  inline const ::std::string& conditionid() const;
  inline void set_conditionid(const ::std::string& value);
  inline void set_conditionid(const char* value);
  inline void set_conditionid(const char* value, size_t size);
  inline ::std::string* mutable_conditionid();
  inline ::std::string* release_conditionid();
  inline void set_allocated_conditionid(::std::string* conditionid);

  // repeated .proto_ff.occupationaptitudeattributeDesc attribute = 8;
  inline int attribute_size() const;
  inline void clear_attribute();
  static const int kAttributeFieldNumber = 8;
  inline const ::proto_ff::occupationaptitudeattributeDesc& attribute(int index) const;
  inline ::proto_ff::occupationaptitudeattributeDesc* mutable_attribute(int index);
  inline ::proto_ff::occupationaptitudeattributeDesc* add_attribute();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::occupationaptitudeattributeDesc >&
      attribute() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::occupationaptitudeattributeDesc >*
      mutable_attribute();

  // @@protoc_insertion_point(class_scope:proto_ff.occupationaptitude)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_grade();
  inline void clear_has_grade();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_requirement();
  inline void clear_has_requirement();
  inline void set_has_material();
  inline void clear_has_material();
  inline void set_has_num();
  inline void clear_has_num();
  inline void set_has_conditionid();
  inline void clear_has_conditionid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 id_;
  ::google::protobuf::int32 grade_;
  ::google::protobuf::int32 level_;
  ::google::protobuf::int64 requirement_;
  ::google::protobuf::int64 material_;
  ::std::string* conditionid_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::occupationaptitudeattributeDesc > attribute_;
  ::google::protobuf::int32 num_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];

  friend void  protobuf_AddDesc_occupation_2eproto();
  friend void protobuf_AssignDesc_occupation_2eproto();
  friend void protobuf_ShutdownFile_occupation_2eproto();

  void InitAsDefaultInstance();
  static occupationaptitude* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_occupationaptitude : public ::google::protobuf::Message {
 public:
  Sheet_occupationaptitude();
  virtual ~Sheet_occupationaptitude();

  Sheet_occupationaptitude(const Sheet_occupationaptitude& from);

  inline Sheet_occupationaptitude& operator=(const Sheet_occupationaptitude& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_occupationaptitude& default_instance();

  void Swap(Sheet_occupationaptitude* other);

  // implements Message ----------------------------------------------

  Sheet_occupationaptitude* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_occupationaptitude& from);
  void MergeFrom(const Sheet_occupationaptitude& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.occupationaptitude occupationaptitude_List = 1;
  inline int occupationaptitude_list_size() const;
  inline void clear_occupationaptitude_list();
  static const int kOccupationaptitudeListFieldNumber = 1;
  inline const ::proto_ff::occupationaptitude& occupationaptitude_list(int index) const;
  inline ::proto_ff::occupationaptitude* mutable_occupationaptitude_list(int index);
  inline ::proto_ff::occupationaptitude* add_occupationaptitude_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::occupationaptitude >&
      occupationaptitude_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::occupationaptitude >*
      mutable_occupationaptitude_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_occupationaptitude)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::occupationaptitude > occupationaptitude_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_occupation_2eproto();
  friend void protobuf_AssignDesc_occupation_2eproto();
  friend void protobuf_ShutdownFile_occupation_2eproto();

  void InitAsDefaultInstance();
  static Sheet_occupationaptitude* default_instance_;
};
// -------------------------------------------------------------------

class occupationconditionList : public ::google::protobuf::Message {
 public:
  occupationconditionList();
  virtual ~occupationconditionList();

  occupationconditionList(const occupationconditionList& from);

  inline occupationconditionList& operator=(const occupationconditionList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const occupationconditionList& default_instance();

  void Swap(occupationconditionList* other);

  // implements Message ----------------------------------------------

  occupationconditionList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const occupationconditionList& from);
  void MergeFrom(const occupationconditionList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 ID = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIDFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // optional int32 type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // optional int64 conditionValue = 3;
  inline bool has_conditionvalue() const;
  inline void clear_conditionvalue();
  static const int kConditionValueFieldNumber = 3;
  inline ::google::protobuf::int64 conditionvalue() const;
  inline void set_conditionvalue(::google::protobuf::int64 value);

  // optional int32 conditionNum = 4;
  inline bool has_conditionnum() const;
  inline void clear_conditionnum();
  static const int kConditionNumFieldNumber = 4;
  inline ::google::protobuf::int32 conditionnum() const;
  inline void set_conditionnum(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.occupationconditionList)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_conditionvalue();
  inline void clear_has_conditionvalue();
  inline void set_has_conditionnum();
  inline void clear_has_conditionnum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int64 conditionvalue_;
  ::google::protobuf::int32 conditionnum_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_occupation_2eproto();
  friend void protobuf_AssignDesc_occupation_2eproto();
  friend void protobuf_ShutdownFile_occupation_2eproto();

  void InitAsDefaultInstance();
  static occupationconditionList* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_occupationconditionList : public ::google::protobuf::Message {
 public:
  Sheet_occupationconditionList();
  virtual ~Sheet_occupationconditionList();

  Sheet_occupationconditionList(const Sheet_occupationconditionList& from);

  inline Sheet_occupationconditionList& operator=(const Sheet_occupationconditionList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_occupationconditionList& default_instance();

  void Swap(Sheet_occupationconditionList* other);

  // implements Message ----------------------------------------------

  Sheet_occupationconditionList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_occupationconditionList& from);
  void MergeFrom(const Sheet_occupationconditionList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.occupationconditionList occupationconditionList_List = 1;
  inline int occupationconditionlist_list_size() const;
  inline void clear_occupationconditionlist_list();
  static const int kOccupationconditionListListFieldNumber = 1;
  inline const ::proto_ff::occupationconditionList& occupationconditionlist_list(int index) const;
  inline ::proto_ff::occupationconditionList* mutable_occupationconditionlist_list(int index);
  inline ::proto_ff::occupationconditionList* add_occupationconditionlist_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::occupationconditionList >&
      occupationconditionlist_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::occupationconditionList >*
      mutable_occupationconditionlist_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_occupationconditionList)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::occupationconditionList > occupationconditionlist_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_occupation_2eproto();
  friend void protobuf_AssignDesc_occupation_2eproto();
  friend void protobuf_ShutdownFile_occupation_2eproto();

  void InitAsDefaultInstance();
  static Sheet_occupationconditionList* default_instance_;
};
// ===================================================================


// ===================================================================

// occupationoccupationattributeDesc

// optional int32 type = 1;
inline bool occupationoccupationattributeDesc::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void occupationoccupationattributeDesc::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void occupationoccupationattributeDesc::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void occupationoccupationattributeDesc::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 occupationoccupationattributeDesc::type() const {
  return type_;
}
inline void occupationoccupationattributeDesc::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// -------------------------------------------------------------------

// occupationoccupationdelSkillDesc

// optional int64 id = 1;
inline bool occupationoccupationdelSkillDesc::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void occupationoccupationdelSkillDesc::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void occupationoccupationdelSkillDesc::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void occupationoccupationdelSkillDesc::clear_id() {
  id_ = GOOGLE_LONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::int64 occupationoccupationdelSkillDesc::id() const {
  return id_;
}
inline void occupationoccupationdelSkillDesc::set_id(::google::protobuf::int64 value) {
  set_has_id();
  id_ = value;
}

// -------------------------------------------------------------------

// occupationoccupationskillDesc

// optional int64 id = 1;
inline bool occupationoccupationskillDesc::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void occupationoccupationskillDesc::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void occupationoccupationskillDesc::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void occupationoccupationskillDesc::clear_id() {
  id_ = GOOGLE_LONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::int64 occupationoccupationskillDesc::id() const {
  return id_;
}
inline void occupationoccupationskillDesc::set_id(::google::protobuf::int64 value) {
  set_has_id();
  id_ = value;
}

// -------------------------------------------------------------------

// occupationoccupation

// optional int64 occupationID = 1;
inline bool occupationoccupation::has_occupationid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void occupationoccupation::set_has_occupationid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void occupationoccupation::clear_has_occupationid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void occupationoccupation::clear_occupationid() {
  occupationid_ = GOOGLE_LONGLONG(0);
  clear_has_occupationid();
}
inline ::google::protobuf::int64 occupationoccupation::occupationid() const {
  return occupationid_;
}
inline void occupationoccupation::set_occupationid(::google::protobuf::int64 value) {
  set_has_occupationid();
  occupationid_ = value;
}

// optional int32 id = 2;
inline bool occupationoccupation::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void occupationoccupation::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void occupationoccupation::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void occupationoccupation::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 occupationoccupation::id() const {
  return id_;
}
inline void occupationoccupation::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// optional int32 grade = 3;
inline bool occupationoccupation::has_grade() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void occupationoccupation::set_has_grade() {
  _has_bits_[0] |= 0x00000004u;
}
inline void occupationoccupation::clear_has_grade() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void occupationoccupation::clear_grade() {
  grade_ = 0;
  clear_has_grade();
}
inline ::google::protobuf::int32 occupationoccupation::grade() const {
  return grade_;
}
inline void occupationoccupation::set_grade(::google::protobuf::int32 value) {
  set_has_grade();
  grade_ = value;
}

// optional string activeDesc = 4;
inline bool occupationoccupation::has_activedesc() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void occupationoccupation::set_has_activedesc() {
  _has_bits_[0] |= 0x00000008u;
}
inline void occupationoccupation::clear_has_activedesc() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void occupationoccupation::clear_activedesc() {
  if (activedesc_ != &::google::protobuf::internal::kEmptyString) {
    activedesc_->clear();
  }
  clear_has_activedesc();
}
inline const ::std::string& occupationoccupation::activedesc() const {
  return *activedesc_;
}
inline void occupationoccupation::set_activedesc(const ::std::string& value) {
  set_has_activedesc();
  if (activedesc_ == &::google::protobuf::internal::kEmptyString) {
    activedesc_ = new ::std::string;
  }
  activedesc_->assign(value);
}
inline void occupationoccupation::set_activedesc(const char* value) {
  set_has_activedesc();
  if (activedesc_ == &::google::protobuf::internal::kEmptyString) {
    activedesc_ = new ::std::string;
  }
  activedesc_->assign(value);
}
inline void occupationoccupation::set_activedesc(const char* value, size_t size) {
  set_has_activedesc();
  if (activedesc_ == &::google::protobuf::internal::kEmptyString) {
    activedesc_ = new ::std::string;
  }
  activedesc_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* occupationoccupation::mutable_activedesc() {
  set_has_activedesc();
  if (activedesc_ == &::google::protobuf::internal::kEmptyString) {
    activedesc_ = new ::std::string;
  }
  return activedesc_;
}
inline ::std::string* occupationoccupation::release_activedesc() {
  clear_has_activedesc();
  if (activedesc_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = activedesc_;
    activedesc_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void occupationoccupation::set_allocated_activedesc(::std::string* activedesc) {
  if (activedesc_ != &::google::protobuf::internal::kEmptyString) {
    delete activedesc_;
  }
  if (activedesc) {
    set_has_activedesc();
    activedesc_ = activedesc;
  } else {
    clear_has_activedesc();
    activedesc_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 level = 5;
inline bool occupationoccupation::has_level() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void occupationoccupation::set_has_level() {
  _has_bits_[0] |= 0x00000010u;
}
inline void occupationoccupation::clear_has_level() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void occupationoccupation::clear_level() {
  level_ = 0;
  clear_has_level();
}
inline ::google::protobuf::int32 occupationoccupation::level() const {
  return level_;
}
inline void occupationoccupation::set_level(::google::protobuf::int32 value) {
  set_has_level();
  level_ = value;
}

// optional int64 aptitude = 6;
inline bool occupationoccupation::has_aptitude() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void occupationoccupation::set_has_aptitude() {
  _has_bits_[0] |= 0x00000020u;
}
inline void occupationoccupation::clear_has_aptitude() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void occupationoccupation::clear_aptitude() {
  aptitude_ = GOOGLE_LONGLONG(0);
  clear_has_aptitude();
}
inline ::google::protobuf::int64 occupationoccupation::aptitude() const {
  return aptitude_;
}
inline void occupationoccupation::set_aptitude(::google::protobuf::int64 value) {
  set_has_aptitude();
  aptitude_ = value;
}

// optional string taskID = 7;
inline bool occupationoccupation::has_taskid() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void occupationoccupation::set_has_taskid() {
  _has_bits_[0] |= 0x00000040u;
}
inline void occupationoccupation::clear_has_taskid() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void occupationoccupation::clear_taskid() {
  if (taskid_ != &::google::protobuf::internal::kEmptyString) {
    taskid_->clear();
  }
  clear_has_taskid();
}
inline const ::std::string& occupationoccupation::taskid() const {
  return *taskid_;
}
inline void occupationoccupation::set_taskid(const ::std::string& value) {
  set_has_taskid();
  if (taskid_ == &::google::protobuf::internal::kEmptyString) {
    taskid_ = new ::std::string;
  }
  taskid_->assign(value);
}
inline void occupationoccupation::set_taskid(const char* value) {
  set_has_taskid();
  if (taskid_ == &::google::protobuf::internal::kEmptyString) {
    taskid_ = new ::std::string;
  }
  taskid_->assign(value);
}
inline void occupationoccupation::set_taskid(const char* value, size_t size) {
  set_has_taskid();
  if (taskid_ == &::google::protobuf::internal::kEmptyString) {
    taskid_ = new ::std::string;
  }
  taskid_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* occupationoccupation::mutable_taskid() {
  set_has_taskid();
  if (taskid_ == &::google::protobuf::internal::kEmptyString) {
    taskid_ = new ::std::string;
  }
  return taskid_;
}
inline ::std::string* occupationoccupation::release_taskid() {
  clear_has_taskid();
  if (taskid_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = taskid_;
    taskid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void occupationoccupation::set_allocated_taskid(::std::string* taskid) {
  if (taskid_ != &::google::protobuf::internal::kEmptyString) {
    delete taskid_;
  }
  if (taskid) {
    set_has_taskid();
    taskid_ = taskid;
  } else {
    clear_has_taskid();
    taskid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string equip = 8;
inline bool occupationoccupation::has_equip() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void occupationoccupation::set_has_equip() {
  _has_bits_[0] |= 0x00000080u;
}
inline void occupationoccupation::clear_has_equip() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void occupationoccupation::clear_equip() {
  if (equip_ != &::google::protobuf::internal::kEmptyString) {
    equip_->clear();
  }
  clear_has_equip();
}
inline const ::std::string& occupationoccupation::equip() const {
  return *equip_;
}
inline void occupationoccupation::set_equip(const ::std::string& value) {
  set_has_equip();
  if (equip_ == &::google::protobuf::internal::kEmptyString) {
    equip_ = new ::std::string;
  }
  equip_->assign(value);
}
inline void occupationoccupation::set_equip(const char* value) {
  set_has_equip();
  if (equip_ == &::google::protobuf::internal::kEmptyString) {
    equip_ = new ::std::string;
  }
  equip_->assign(value);
}
inline void occupationoccupation::set_equip(const char* value, size_t size) {
  set_has_equip();
  if (equip_ == &::google::protobuf::internal::kEmptyString) {
    equip_ = new ::std::string;
  }
  equip_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* occupationoccupation::mutable_equip() {
  set_has_equip();
  if (equip_ == &::google::protobuf::internal::kEmptyString) {
    equip_ = new ::std::string;
  }
  return equip_;
}
inline ::std::string* occupationoccupation::release_equip() {
  clear_has_equip();
  if (equip_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = equip_;
    equip_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void occupationoccupation::set_allocated_equip(::std::string* equip) {
  if (equip_ != &::google::protobuf::internal::kEmptyString) {
    delete equip_;
  }
  if (equip) {
    set_has_equip();
    equip_ = equip;
  } else {
    clear_has_equip();
    equip_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string modelID = 9;
inline bool occupationoccupation::has_modelid() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void occupationoccupation::set_has_modelid() {
  _has_bits_[0] |= 0x00000100u;
}
inline void occupationoccupation::clear_has_modelid() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void occupationoccupation::clear_modelid() {
  if (modelid_ != &::google::protobuf::internal::kEmptyString) {
    modelid_->clear();
  }
  clear_has_modelid();
}
inline const ::std::string& occupationoccupation::modelid() const {
  return *modelid_;
}
inline void occupationoccupation::set_modelid(const ::std::string& value) {
  set_has_modelid();
  if (modelid_ == &::google::protobuf::internal::kEmptyString) {
    modelid_ = new ::std::string;
  }
  modelid_->assign(value);
}
inline void occupationoccupation::set_modelid(const char* value) {
  set_has_modelid();
  if (modelid_ == &::google::protobuf::internal::kEmptyString) {
    modelid_ = new ::std::string;
  }
  modelid_->assign(value);
}
inline void occupationoccupation::set_modelid(const char* value, size_t size) {
  set_has_modelid();
  if (modelid_ == &::google::protobuf::internal::kEmptyString) {
    modelid_ = new ::std::string;
  }
  modelid_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* occupationoccupation::mutable_modelid() {
  set_has_modelid();
  if (modelid_ == &::google::protobuf::internal::kEmptyString) {
    modelid_ = new ::std::string;
  }
  return modelid_;
}
inline ::std::string* occupationoccupation::release_modelid() {
  clear_has_modelid();
  if (modelid_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = modelid_;
    modelid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void occupationoccupation::set_allocated_modelid(::std::string* modelid) {
  if (modelid_ != &::google::protobuf::internal::kEmptyString) {
    delete modelid_;
  }
  if (modelid) {
    set_has_modelid();
    modelid_ = modelid;
  } else {
    clear_has_modelid();
    modelid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// repeated .proto_ff.occupationoccupationattributeDesc attribute = 10;
inline int occupationoccupation::attribute_size() const {
  return attribute_.size();
}
inline void occupationoccupation::clear_attribute() {
  attribute_.Clear();
}
inline const ::proto_ff::occupationoccupationattributeDesc& occupationoccupation::attribute(int index) const {
  return attribute_.Get(index);
}
inline ::proto_ff::occupationoccupationattributeDesc* occupationoccupation::mutable_attribute(int index) {
  return attribute_.Mutable(index);
}
inline ::proto_ff::occupationoccupationattributeDesc* occupationoccupation::add_attribute() {
  return attribute_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::occupationoccupationattributeDesc >&
occupationoccupation::attribute() const {
  return attribute_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::occupationoccupationattributeDesc >*
occupationoccupation::mutable_attribute() {
  return &attribute_;
}

// repeated .proto_ff.occupationoccupationdelSkillDesc delSkill = 11;
inline int occupationoccupation::delskill_size() const {
  return delskill_.size();
}
inline void occupationoccupation::clear_delskill() {
  delskill_.Clear();
}
inline const ::proto_ff::occupationoccupationdelSkillDesc& occupationoccupation::delskill(int index) const {
  return delskill_.Get(index);
}
inline ::proto_ff::occupationoccupationdelSkillDesc* occupationoccupation::mutable_delskill(int index) {
  return delskill_.Mutable(index);
}
inline ::proto_ff::occupationoccupationdelSkillDesc* occupationoccupation::add_delskill() {
  return delskill_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::occupationoccupationdelSkillDesc >&
occupationoccupation::delskill() const {
  return delskill_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::occupationoccupationdelSkillDesc >*
occupationoccupation::mutable_delskill() {
  return &delskill_;
}

// repeated .proto_ff.occupationoccupationskillDesc skill = 12;
inline int occupationoccupation::skill_size() const {
  return skill_.size();
}
inline void occupationoccupation::clear_skill() {
  skill_.Clear();
}
inline const ::proto_ff::occupationoccupationskillDesc& occupationoccupation::skill(int index) const {
  return skill_.Get(index);
}
inline ::proto_ff::occupationoccupationskillDesc* occupationoccupation::mutable_skill(int index) {
  return skill_.Mutable(index);
}
inline ::proto_ff::occupationoccupationskillDesc* occupationoccupation::add_skill() {
  return skill_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::occupationoccupationskillDesc >&
occupationoccupation::skill() const {
  return skill_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::occupationoccupationskillDesc >*
occupationoccupation::mutable_skill() {
  return &skill_;
}

// -------------------------------------------------------------------

// Sheet_occupationoccupation

// repeated .proto_ff.occupationoccupation occupationoccupation_List = 1;
inline int Sheet_occupationoccupation::occupationoccupation_list_size() const {
  return occupationoccupation_list_.size();
}
inline void Sheet_occupationoccupation::clear_occupationoccupation_list() {
  occupationoccupation_list_.Clear();
}
inline const ::proto_ff::occupationoccupation& Sheet_occupationoccupation::occupationoccupation_list(int index) const {
  return occupationoccupation_list_.Get(index);
}
inline ::proto_ff::occupationoccupation* Sheet_occupationoccupation::mutable_occupationoccupation_list(int index) {
  return occupationoccupation_list_.Mutable(index);
}
inline ::proto_ff::occupationoccupation* Sheet_occupationoccupation::add_occupationoccupation_list() {
  return occupationoccupation_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::occupationoccupation >&
Sheet_occupationoccupation::occupationoccupation_list() const {
  return occupationoccupation_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::occupationoccupation >*
Sheet_occupationoccupation::mutable_occupationoccupation_list() {
  return &occupationoccupation_list_;
}

// -------------------------------------------------------------------

// occupationaptitudeattributeDesc

// optional int32 type = 1;
inline bool occupationaptitudeattributeDesc::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void occupationaptitudeattributeDesc::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void occupationaptitudeattributeDesc::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void occupationaptitudeattributeDesc::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 occupationaptitudeattributeDesc::type() const {
  return type_;
}
inline void occupationaptitudeattributeDesc::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// -------------------------------------------------------------------

// occupationaptitude

// optional int64 id = 1;
inline bool occupationaptitude::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void occupationaptitude::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void occupationaptitude::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void occupationaptitude::clear_id() {
  id_ = GOOGLE_LONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::int64 occupationaptitude::id() const {
  return id_;
}
inline void occupationaptitude::set_id(::google::protobuf::int64 value) {
  set_has_id();
  id_ = value;
}

// optional int32 grade = 2;
inline bool occupationaptitude::has_grade() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void occupationaptitude::set_has_grade() {
  _has_bits_[0] |= 0x00000002u;
}
inline void occupationaptitude::clear_has_grade() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void occupationaptitude::clear_grade() {
  grade_ = 0;
  clear_has_grade();
}
inline ::google::protobuf::int32 occupationaptitude::grade() const {
  return grade_;
}
inline void occupationaptitude::set_grade(::google::protobuf::int32 value) {
  set_has_grade();
  grade_ = value;
}

// optional int32 level = 3;
inline bool occupationaptitude::has_level() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void occupationaptitude::set_has_level() {
  _has_bits_[0] |= 0x00000004u;
}
inline void occupationaptitude::clear_has_level() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void occupationaptitude::clear_level() {
  level_ = 0;
  clear_has_level();
}
inline ::google::protobuf::int32 occupationaptitude::level() const {
  return level_;
}
inline void occupationaptitude::set_level(::google::protobuf::int32 value) {
  set_has_level();
  level_ = value;
}

// optional int64 requirement = 4;
inline bool occupationaptitude::has_requirement() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void occupationaptitude::set_has_requirement() {
  _has_bits_[0] |= 0x00000008u;
}
inline void occupationaptitude::clear_has_requirement() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void occupationaptitude::clear_requirement() {
  requirement_ = GOOGLE_LONGLONG(0);
  clear_has_requirement();
}
inline ::google::protobuf::int64 occupationaptitude::requirement() const {
  return requirement_;
}
inline void occupationaptitude::set_requirement(::google::protobuf::int64 value) {
  set_has_requirement();
  requirement_ = value;
}

// optional int64 material = 5;
inline bool occupationaptitude::has_material() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void occupationaptitude::set_has_material() {
  _has_bits_[0] |= 0x00000010u;
}
inline void occupationaptitude::clear_has_material() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void occupationaptitude::clear_material() {
  material_ = GOOGLE_LONGLONG(0);
  clear_has_material();
}
inline ::google::protobuf::int64 occupationaptitude::material() const {
  return material_;
}
inline void occupationaptitude::set_material(::google::protobuf::int64 value) {
  set_has_material();
  material_ = value;
}

// optional int32 num = 6;
inline bool occupationaptitude::has_num() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void occupationaptitude::set_has_num() {
  _has_bits_[0] |= 0x00000020u;
}
inline void occupationaptitude::clear_has_num() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void occupationaptitude::clear_num() {
  num_ = 0;
  clear_has_num();
}
inline ::google::protobuf::int32 occupationaptitude::num() const {
  return num_;
}
inline void occupationaptitude::set_num(::google::protobuf::int32 value) {
  set_has_num();
  num_ = value;
}

// optional string conditionId = 7;
inline bool occupationaptitude::has_conditionid() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void occupationaptitude::set_has_conditionid() {
  _has_bits_[0] |= 0x00000040u;
}
inline void occupationaptitude::clear_has_conditionid() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void occupationaptitude::clear_conditionid() {
  if (conditionid_ != &::google::protobuf::internal::kEmptyString) {
    conditionid_->clear();
  }
  clear_has_conditionid();
}
inline const ::std::string& occupationaptitude::conditionid() const {
  return *conditionid_;
}
inline void occupationaptitude::set_conditionid(const ::std::string& value) {
  set_has_conditionid();
  if (conditionid_ == &::google::protobuf::internal::kEmptyString) {
    conditionid_ = new ::std::string;
  }
  conditionid_->assign(value);
}
inline void occupationaptitude::set_conditionid(const char* value) {
  set_has_conditionid();
  if (conditionid_ == &::google::protobuf::internal::kEmptyString) {
    conditionid_ = new ::std::string;
  }
  conditionid_->assign(value);
}
inline void occupationaptitude::set_conditionid(const char* value, size_t size) {
  set_has_conditionid();
  if (conditionid_ == &::google::protobuf::internal::kEmptyString) {
    conditionid_ = new ::std::string;
  }
  conditionid_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* occupationaptitude::mutable_conditionid() {
  set_has_conditionid();
  if (conditionid_ == &::google::protobuf::internal::kEmptyString) {
    conditionid_ = new ::std::string;
  }
  return conditionid_;
}
inline ::std::string* occupationaptitude::release_conditionid() {
  clear_has_conditionid();
  if (conditionid_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = conditionid_;
    conditionid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void occupationaptitude::set_allocated_conditionid(::std::string* conditionid) {
  if (conditionid_ != &::google::protobuf::internal::kEmptyString) {
    delete conditionid_;
  }
  if (conditionid) {
    set_has_conditionid();
    conditionid_ = conditionid;
  } else {
    clear_has_conditionid();
    conditionid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// repeated .proto_ff.occupationaptitudeattributeDesc attribute = 8;
inline int occupationaptitude::attribute_size() const {
  return attribute_.size();
}
inline void occupationaptitude::clear_attribute() {
  attribute_.Clear();
}
inline const ::proto_ff::occupationaptitudeattributeDesc& occupationaptitude::attribute(int index) const {
  return attribute_.Get(index);
}
inline ::proto_ff::occupationaptitudeattributeDesc* occupationaptitude::mutable_attribute(int index) {
  return attribute_.Mutable(index);
}
inline ::proto_ff::occupationaptitudeattributeDesc* occupationaptitude::add_attribute() {
  return attribute_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::occupationaptitudeattributeDesc >&
occupationaptitude::attribute() const {
  return attribute_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::occupationaptitudeattributeDesc >*
occupationaptitude::mutable_attribute() {
  return &attribute_;
}

// -------------------------------------------------------------------

// Sheet_occupationaptitude

// repeated .proto_ff.occupationaptitude occupationaptitude_List = 1;
inline int Sheet_occupationaptitude::occupationaptitude_list_size() const {
  return occupationaptitude_list_.size();
}
inline void Sheet_occupationaptitude::clear_occupationaptitude_list() {
  occupationaptitude_list_.Clear();
}
inline const ::proto_ff::occupationaptitude& Sheet_occupationaptitude::occupationaptitude_list(int index) const {
  return occupationaptitude_list_.Get(index);
}
inline ::proto_ff::occupationaptitude* Sheet_occupationaptitude::mutable_occupationaptitude_list(int index) {
  return occupationaptitude_list_.Mutable(index);
}
inline ::proto_ff::occupationaptitude* Sheet_occupationaptitude::add_occupationaptitude_list() {
  return occupationaptitude_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::occupationaptitude >&
Sheet_occupationaptitude::occupationaptitude_list() const {
  return occupationaptitude_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::occupationaptitude >*
Sheet_occupationaptitude::mutable_occupationaptitude_list() {
  return &occupationaptitude_list_;
}

// -------------------------------------------------------------------

// occupationconditionList

// optional int32 ID = 1;
inline bool occupationconditionList::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void occupationconditionList::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void occupationconditionList::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void occupationconditionList::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 occupationconditionList::id() const {
  return id_;
}
inline void occupationconditionList::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// optional int32 type = 2;
inline bool occupationconditionList::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void occupationconditionList::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void occupationconditionList::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void occupationconditionList::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 occupationconditionList::type() const {
  return type_;
}
inline void occupationconditionList::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// optional int64 conditionValue = 3;
inline bool occupationconditionList::has_conditionvalue() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void occupationconditionList::set_has_conditionvalue() {
  _has_bits_[0] |= 0x00000004u;
}
inline void occupationconditionList::clear_has_conditionvalue() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void occupationconditionList::clear_conditionvalue() {
  conditionvalue_ = GOOGLE_LONGLONG(0);
  clear_has_conditionvalue();
}
inline ::google::protobuf::int64 occupationconditionList::conditionvalue() const {
  return conditionvalue_;
}
inline void occupationconditionList::set_conditionvalue(::google::protobuf::int64 value) {
  set_has_conditionvalue();
  conditionvalue_ = value;
}

// optional int32 conditionNum = 4;
inline bool occupationconditionList::has_conditionnum() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void occupationconditionList::set_has_conditionnum() {
  _has_bits_[0] |= 0x00000008u;
}
inline void occupationconditionList::clear_has_conditionnum() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void occupationconditionList::clear_conditionnum() {
  conditionnum_ = 0;
  clear_has_conditionnum();
}
inline ::google::protobuf::int32 occupationconditionList::conditionnum() const {
  return conditionnum_;
}
inline void occupationconditionList::set_conditionnum(::google::protobuf::int32 value) {
  set_has_conditionnum();
  conditionnum_ = value;
}

// -------------------------------------------------------------------

// Sheet_occupationconditionList

// repeated .proto_ff.occupationconditionList occupationconditionList_List = 1;
inline int Sheet_occupationconditionList::occupationconditionlist_list_size() const {
  return occupationconditionlist_list_.size();
}
inline void Sheet_occupationconditionList::clear_occupationconditionlist_list() {
  occupationconditionlist_list_.Clear();
}
inline const ::proto_ff::occupationconditionList& Sheet_occupationconditionList::occupationconditionlist_list(int index) const {
  return occupationconditionlist_list_.Get(index);
}
inline ::proto_ff::occupationconditionList* Sheet_occupationconditionList::mutable_occupationconditionlist_list(int index) {
  return occupationconditionlist_list_.Mutable(index);
}
inline ::proto_ff::occupationconditionList* Sheet_occupationconditionList::add_occupationconditionlist_list() {
  return occupationconditionlist_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::occupationconditionList >&
Sheet_occupationconditionList::occupationconditionlist_list() const {
  return occupationconditionlist_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::occupationconditionList >*
Sheet_occupationconditionList::mutable_occupationconditionlist_list() {
  return &occupationconditionlist_list_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto_ff

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_occupation_2eproto__INCLUDED
