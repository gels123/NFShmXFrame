// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: E_Mall.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "E_Mall.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace proto_ff {

namespace {

const ::google::protobuf::Descriptor* E_MallMall_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_MallMall_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_MallMall_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_MallMall_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_MallMalltype_tab_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_MallMalltype_tab_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_MallMalltype_tab_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_MallMalltype_tab_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_MallMalltype_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_MallMalltype_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_MallMalltype_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_MallMalltype_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_MallHolybeast_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_MallHolybeast_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_MallHolybeast_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_MallHolybeast_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_E_5fMall_2eproto() {
  protobuf_AddDesc_E_5fMall_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "E_Mall.proto");
  GOOGLE_CHECK(file != NULL);
  E_MallMall_descriptor_ = file->message_type(0);
  static const int E_MallMall_offsets_[17] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MallMall, m_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MallMall, m_itemid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MallMall, m_malltype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MallMall, m_priority_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MallMall, m_moneytype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MallMall, m_moneyitem_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MallMall, m_price_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MallMall, m_secondarymoneytype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MallMall, m_discount_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MallMall, m_buylimittype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MallMall, m_buyamount_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MallMall, m_viplimit_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MallMall, m_lvlimit_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MallMall, m_vipunlock_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MallMall, m_isclose_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MallMall, m_cantbuy_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MallMall, m_ismarkbind_),
  };
  E_MallMall_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_MallMall_descriptor_,
      E_MallMall::default_instance_,
      E_MallMall_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MallMall, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MallMall, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_MallMall));
  Sheet_MallMall_descriptor_ = file->message_type(1);
  static const int Sheet_MallMall_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_MallMall, e_mallmall_list_),
  };
  Sheet_MallMall_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_MallMall_descriptor_,
      Sheet_MallMall::default_instance_,
      Sheet_MallMall_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_MallMall, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_MallMall, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_MallMall));
  E_MallMalltype_tab_descriptor_ = file->message_type(2);
  static const int E_MallMalltype_tab_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MallMalltype_tab, m_priority_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MallMalltype_tab, m_functionunlock_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MallMalltype_tab, m_entrance_),
  };
  E_MallMalltype_tab_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_MallMalltype_tab_descriptor_,
      E_MallMalltype_tab::default_instance_,
      E_MallMalltype_tab_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MallMalltype_tab, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MallMalltype_tab, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_MallMalltype_tab));
  Sheet_MallMalltype_tab_descriptor_ = file->message_type(3);
  static const int Sheet_MallMalltype_tab_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_MallMalltype_tab, e_mallmalltype_tab_list_),
  };
  Sheet_MallMalltype_tab_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_MallMalltype_tab_descriptor_,
      Sheet_MallMalltype_tab::default_instance_,
      Sheet_MallMalltype_tab_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_MallMalltype_tab, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_MallMalltype_tab, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_MallMalltype_tab));
  E_MallMalltype_descriptor_ = file->message_type(4);
  static const int E_MallMalltype_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MallMalltype, m_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MallMalltype, m_title_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MallMalltype, m_grouptype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MallMalltype, m_priority_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MallMalltype, m_functionunlock_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MallMalltype, m_profession_),
  };
  E_MallMalltype_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_MallMalltype_descriptor_,
      E_MallMalltype::default_instance_,
      E_MallMalltype_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MallMalltype, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MallMalltype, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_MallMalltype));
  Sheet_MallMalltype_descriptor_ = file->message_type(5);
  static const int Sheet_MallMalltype_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_MallMalltype, e_mallmalltype_list_),
  };
  Sheet_MallMalltype_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_MallMalltype_descriptor_,
      Sheet_MallMalltype::default_instance_,
      Sheet_MallMalltype_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_MallMalltype, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_MallMalltype, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_MallMalltype));
  E_MallHolybeast_descriptor_ = file->message_type(6);
  static const int E_MallHolybeast_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MallHolybeast, m_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MallHolybeast, m_mountid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MallHolybeast, m_itemid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MallHolybeast, m_costid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MallHolybeast, m_costnum_),
  };
  E_MallHolybeast_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_MallHolybeast_descriptor_,
      E_MallHolybeast::default_instance_,
      E_MallHolybeast_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MallHolybeast, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MallHolybeast, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_MallHolybeast));
  Sheet_MallHolybeast_descriptor_ = file->message_type(7);
  static const int Sheet_MallHolybeast_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_MallHolybeast, e_mallholybeast_list_),
  };
  Sheet_MallHolybeast_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_MallHolybeast_descriptor_,
      Sheet_MallHolybeast::default_instance_,
      Sheet_MallHolybeast_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_MallHolybeast, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_MallHolybeast, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_MallHolybeast));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_E_5fMall_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_MallMall_descriptor_, &E_MallMall::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_MallMall_descriptor_, &Sheet_MallMall::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_MallMalltype_tab_descriptor_, &E_MallMalltype_tab::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_MallMalltype_tab_descriptor_, &Sheet_MallMalltype_tab::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_MallMalltype_descriptor_, &E_MallMalltype::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_MallMalltype_descriptor_, &Sheet_MallMalltype::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_MallHolybeast_descriptor_, &E_MallHolybeast::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_MallHolybeast_descriptor_, &Sheet_MallHolybeast::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_E_5fMall_2eproto() {
  delete E_MallMall::default_instance_;
  delete E_MallMall_reflection_;
  delete Sheet_MallMall::default_instance_;
  delete Sheet_MallMall_reflection_;
  delete E_MallMalltype_tab::default_instance_;
  delete E_MallMalltype_tab_reflection_;
  delete Sheet_MallMalltype_tab::default_instance_;
  delete Sheet_MallMalltype_tab_reflection_;
  delete E_MallMalltype::default_instance_;
  delete E_MallMalltype_reflection_;
  delete Sheet_MallMalltype::default_instance_;
  delete Sheet_MallMalltype_reflection_;
  delete E_MallHolybeast::default_instance_;
  delete E_MallHolybeast_reflection_;
  delete Sheet_MallHolybeast::default_instance_;
  delete Sheet_MallHolybeast_reflection_;
}

void protobuf_AddDesc_E_5fMall_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::yd_fieldoptions::protobuf_AddDesc_yd_5ffieldoptions_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\014E_Mall.proto\022\010proto_ff\032\025yd_fieldoption"
    "s.proto\"\260\005\n\nE_MallMall\022\032\n\004m_id\030\001 \001(\005B\014\302\377"
    "\024\010\345\225\206\345\223\201ID\022\036\n\010m_itemid\030\002 \001(\005B\014\302\377\024\010\347\211\251\345\223\201"
    "ID\022$\n\nm_malltype\030\003 \001(\005B\020\302\377\024\014\345\225\206\345\237\216\345\210\206\347\261\273"
    "\022!\n\nm_priority\030\004 \001(\005B\r\302\377\024\t\344\274\230\345\205\210\347\272\247\022%\n\013m"
    "_moneytype\030\005 \001(\005B\020\302\377\024\014\350\264\247\345\270\201\347\261\273\345\236\213\022\'\n\013m_"
    "moneyitem\030\006 \001(\005B\022\302\377\024\016\350\264\247\345\270\201\351\201\223\345\205\267id\022\033\n\007m"
    "_price\030\007 \001(\005B\n\302\377\024\006\344\273\267\346\240\274\022.\n\024m_secondarym"
    "oneytype\030\010 \001(\005B\020\302\377\024\014\346\254\241\347\272\247\350\264\247\345\270\201\022\036\n\nm_di"
    "scount\030\t \001(\005B\n\302\377\024\006\346\212\230\346\211\243\022.\n\016m_buylimitty"
    "pe\030\n \001(\005B\026\302\377\024\022\351\231\220\345\210\266\350\264\255\344\271\260\347\261\273\345\236\213\022%\n\013m_bu"
    "yamount\030\013 \001(\005B\020\302\377\024\014\350\264\255\344\271\260\346\225\260\351\207\217\022\'\n\nm_vip"
    "limit\030\014 \001(\005B\023\302\377\024\017VIP\347\255\211\347\272\247\350\247\243\351\224\201\022#\n\tm_lv"
    "limit\030\r \001(\005B\020\302\377\024\014\347\255\211\347\272\247\351\231\220\345\210\266\022+\n\013m_vipun"
    "lock\030\016 \001(\005B\026\302\377\024\022vip\346\210\226\347\255\211\347\272\247\350\247\243\351\224\201\022#\n\tm_"
    "isclose\030\017 \001(\005B\020\302\377\024\014\346\230\257\345\220\246\344\270\213\346\236\266\0225\n\tm_can"
    "tbuy\030\020 \001(\005B\"\302\377\024\036\344\270\213\346\236\266\346\203\205\345\206\265\344\270\213\346\230\257\345\220\246\350\203\275"
    "\350\264\255\344\271\260\0222\n\014m_ismarkbind\030\021 \001(\005B\034\302\377\024\030\346\230\257\345\220\246"
    "\346\240\207\350\256\260\344\270\272\345\267\262\347\273\221\345\256\232\"F\n\016Sheet_MallMall\0224\n\017"
    "E_MallMall_List\030\001 \003(\0132\024.proto_ff.E_MallM"
    "allB\005\210\301\024\200\004\"\211\001\n\022E_MallMalltype_tab\022!\n\nm_p"
    "riority\030\001 \001(\005B\r\302\377\024\t\344\274\230\345\205\210\347\272\247\022*\n\020m_functi"
    "onunlock\030\002 \001(\005B\020\302\377\024\014\345\274\200\345\220\257\346\235\241\344\273\266\022$\n\nm_en"
    "trance\030\003 \001(\005B\020\302\377\024\014\345\205\245\345\217\243\344\275\215\347\275\256\"]\n\026Sheet_"
    "MallMalltype_tab\022C\n\027E_MallMalltype_tab_L"
    "ist\030\001 \003(\0132\034.proto_ff.E_MallMalltype_tabB"
    "\004\210\301\024\020\"\354\001\n\016E_MallMalltype\022\027\n\004m_id\030\001 \001(\003B\t"
    "\302\377\024\005\347\273\204ID\022\"\n\007m_title\030\002 \001(\tB\021\302\377\024\t\345\225\206\345\272\227\345\220"
    "\215\220\301\024@\022\"\n\013m_grouptype\030\003 \001(\005B\r\302\377\024\t\347\273\204\347\261\273\345\236"
    "\213\022!\n\nm_priority\030\004 \001(\005B\r\302\377\024\t\344\274\230\345\205\210\347\272\247\022*\n\020"
    "m_functionunlock\030\005 \001(\005B\020\302\377\024\014\345\274\200\345\220\257\346\235\241\344\273\266"
    "\022*\n\014m_profession\030\006 \001(\tB\024\302\377\024\014\350\201\214\344\270\232\347\261\273\345\236\213"
    "\220\301\024@\"Q\n\022Sheet_MallMalltype\022;\n\023E_MallMall"
    "type_List\030\001 \003(\0132\030.proto_ff.E_MallMalltyp"
    "eB\004\210\301\024@\"\261\001\n\017E_MallHolybeast\022\024\n\004m_id\030\001 \001("
    "\005B\006\302\377\024\002id\022\037\n\tm_mountid\030\002 \001(\005B\014\302\377\024\010\345\235\220\351\252\221"
    "id\022\036\n\010m_itemid\030\003 \001(\005B\014\302\377\024\010\345\225\206\345\223\201id\022\"\n\010m_"
    "costid\030\004 \001(\005B\020\302\377\024\014\345\205\221\346\215\242\351\201\223\345\205\267\022#\n\tm_cost"
    "num\030\005 \001(\005B\020\302\377\024\014\351\201\223\345\205\267\346\225\260\351\207\217\"T\n\023Sheet_Mal"
    "lHolybeast\022=\n\024E_MallHolybeast_List\030\001 \003(\013"
    "2\031.proto_ff.E_MallHolybeastB\004\210\301\024 ", 1633);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "E_Mall.proto", &protobuf_RegisterTypes);
  E_MallMall::default_instance_ = new E_MallMall();
  Sheet_MallMall::default_instance_ = new Sheet_MallMall();
  E_MallMalltype_tab::default_instance_ = new E_MallMalltype_tab();
  Sheet_MallMalltype_tab::default_instance_ = new Sheet_MallMalltype_tab();
  E_MallMalltype::default_instance_ = new E_MallMalltype();
  Sheet_MallMalltype::default_instance_ = new Sheet_MallMalltype();
  E_MallHolybeast::default_instance_ = new E_MallHolybeast();
  Sheet_MallHolybeast::default_instance_ = new Sheet_MallHolybeast();
  E_MallMall::default_instance_->InitAsDefaultInstance();
  Sheet_MallMall::default_instance_->InitAsDefaultInstance();
  E_MallMalltype_tab::default_instance_->InitAsDefaultInstance();
  Sheet_MallMalltype_tab::default_instance_->InitAsDefaultInstance();
  E_MallMalltype::default_instance_->InitAsDefaultInstance();
  Sheet_MallMalltype::default_instance_->InitAsDefaultInstance();
  E_MallHolybeast::default_instance_->InitAsDefaultInstance();
  Sheet_MallHolybeast::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_E_5fMall_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_E_5fMall_2eproto {
  StaticDescriptorInitializer_E_5fMall_2eproto() {
    protobuf_AddDesc_E_5fMall_2eproto();
  }
} static_descriptor_initializer_E_5fMall_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int E_MallMall::kMIdFieldNumber;
const int E_MallMall::kMItemidFieldNumber;
const int E_MallMall::kMMalltypeFieldNumber;
const int E_MallMall::kMPriorityFieldNumber;
const int E_MallMall::kMMoneytypeFieldNumber;
const int E_MallMall::kMMoneyitemFieldNumber;
const int E_MallMall::kMPriceFieldNumber;
const int E_MallMall::kMSecondarymoneytypeFieldNumber;
const int E_MallMall::kMDiscountFieldNumber;
const int E_MallMall::kMBuylimittypeFieldNumber;
const int E_MallMall::kMBuyamountFieldNumber;
const int E_MallMall::kMViplimitFieldNumber;
const int E_MallMall::kMLvlimitFieldNumber;
const int E_MallMall::kMVipunlockFieldNumber;
const int E_MallMall::kMIscloseFieldNumber;
const int E_MallMall::kMCantbuyFieldNumber;
const int E_MallMall::kMIsmarkbindFieldNumber;
#endif  // !_MSC_VER

E_MallMall::E_MallMall()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_MallMall::InitAsDefaultInstance() {
}

E_MallMall::E_MallMall(const E_MallMall& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_MallMall::SharedCtor() {
  _cached_size_ = 0;
  m_id_ = 0;
  m_itemid_ = 0;
  m_malltype_ = 0;
  m_priority_ = 0;
  m_moneytype_ = 0;
  m_moneyitem_ = 0;
  m_price_ = 0;
  m_secondarymoneytype_ = 0;
  m_discount_ = 0;
  m_buylimittype_ = 0;
  m_buyamount_ = 0;
  m_viplimit_ = 0;
  m_lvlimit_ = 0;
  m_vipunlock_ = 0;
  m_isclose_ = 0;
  m_cantbuy_ = 0;
  m_ismarkbind_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_MallMall::~E_MallMall() {
  SharedDtor();
}

void E_MallMall::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_MallMall::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_MallMall::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_MallMall_descriptor_;
}

const E_MallMall& E_MallMall::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fMall_2eproto();
  return *default_instance_;
}

E_MallMall* E_MallMall::default_instance_ = NULL;

E_MallMall* E_MallMall::New() const {
  return new E_MallMall;
}

void E_MallMall::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_id_ = 0;
    m_itemid_ = 0;
    m_malltype_ = 0;
    m_priority_ = 0;
    m_moneytype_ = 0;
    m_moneyitem_ = 0;
    m_price_ = 0;
    m_secondarymoneytype_ = 0;
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    m_discount_ = 0;
    m_buylimittype_ = 0;
    m_buyamount_ = 0;
    m_viplimit_ = 0;
    m_lvlimit_ = 0;
    m_vipunlock_ = 0;
    m_isclose_ = 0;
    m_cantbuy_ = 0;
  }
  if (_has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    m_ismarkbind_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_MallMall::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_id_)));
          set_has_m_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_itemid;
        break;
      }

      // optional int32 m_itemid = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_itemid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_itemid_)));
          set_has_m_itemid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_m_malltype;
        break;
      }

      // optional int32 m_malltype = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_malltype:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_malltype_)));
          set_has_m_malltype();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_m_priority;
        break;
      }

      // optional int32 m_priority = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_priority:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_priority_)));
          set_has_m_priority();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_m_moneytype;
        break;
      }

      // optional int32 m_moneytype = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_moneytype:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_moneytype_)));
          set_has_m_moneytype();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_m_moneyitem;
        break;
      }

      // optional int32 m_moneyitem = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_moneyitem:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_moneyitem_)));
          set_has_m_moneyitem();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_m_price;
        break;
      }

      // optional int32 m_price = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_price:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_price_)));
          set_has_m_price();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(64)) goto parse_m_secondarymoneytype;
        break;
      }

      // optional int32 m_secondarymoneytype = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_secondarymoneytype:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_secondarymoneytype_)));
          set_has_m_secondarymoneytype();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(72)) goto parse_m_discount;
        break;
      }

      // optional int32 m_discount = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_discount:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_discount_)));
          set_has_m_discount();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(80)) goto parse_m_buylimittype;
        break;
      }

      // optional int32 m_buylimittype = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_buylimittype:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_buylimittype_)));
          set_has_m_buylimittype();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(88)) goto parse_m_buyamount;
        break;
      }

      // optional int32 m_buyamount = 11;
      case 11: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_buyamount:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_buyamount_)));
          set_has_m_buyamount();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(96)) goto parse_m_viplimit;
        break;
      }

      // optional int32 m_viplimit = 12;
      case 12: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_viplimit:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_viplimit_)));
          set_has_m_viplimit();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(104)) goto parse_m_lvlimit;
        break;
      }

      // optional int32 m_lvlimit = 13;
      case 13: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_lvlimit:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_lvlimit_)));
          set_has_m_lvlimit();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(112)) goto parse_m_vipunlock;
        break;
      }

      // optional int32 m_vipunlock = 14;
      case 14: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_vipunlock:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_vipunlock_)));
          set_has_m_vipunlock();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(120)) goto parse_m_isclose;
        break;
      }

      // optional int32 m_isclose = 15;
      case 15: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_isclose:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_isclose_)));
          set_has_m_isclose();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(128)) goto parse_m_cantbuy;
        break;
      }

      // optional int32 m_cantbuy = 16;
      case 16: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_cantbuy:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_cantbuy_)));
          set_has_m_cantbuy();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(136)) goto parse_m_ismarkbind;
        break;
      }

      // optional int32 m_ismarkbind = 17;
      case 17: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_ismarkbind:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_ismarkbind_)));
          set_has_m_ismarkbind();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_MallMall::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_id(), output);
  }

  // optional int32 m_itemid = 2;
  if (has_m_itemid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_itemid(), output);
  }

  // optional int32 m_malltype = 3;
  if (has_m_malltype()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->m_malltype(), output);
  }

  // optional int32 m_priority = 4;
  if (has_m_priority()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->m_priority(), output);
  }

  // optional int32 m_moneytype = 5;
  if (has_m_moneytype()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->m_moneytype(), output);
  }

  // optional int32 m_moneyitem = 6;
  if (has_m_moneyitem()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->m_moneyitem(), output);
  }

  // optional int32 m_price = 7;
  if (has_m_price()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->m_price(), output);
  }

  // optional int32 m_secondarymoneytype = 8;
  if (has_m_secondarymoneytype()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->m_secondarymoneytype(), output);
  }

  // optional int32 m_discount = 9;
  if (has_m_discount()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->m_discount(), output);
  }

  // optional int32 m_buylimittype = 10;
  if (has_m_buylimittype()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->m_buylimittype(), output);
  }

  // optional int32 m_buyamount = 11;
  if (has_m_buyamount()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->m_buyamount(), output);
  }

  // optional int32 m_viplimit = 12;
  if (has_m_viplimit()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(12, this->m_viplimit(), output);
  }

  // optional int32 m_lvlimit = 13;
  if (has_m_lvlimit()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(13, this->m_lvlimit(), output);
  }

  // optional int32 m_vipunlock = 14;
  if (has_m_vipunlock()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(14, this->m_vipunlock(), output);
  }

  // optional int32 m_isclose = 15;
  if (has_m_isclose()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(15, this->m_isclose(), output);
  }

  // optional int32 m_cantbuy = 16;
  if (has_m_cantbuy()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(16, this->m_cantbuy(), output);
  }

  // optional int32 m_ismarkbind = 17;
  if (has_m_ismarkbind()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(17, this->m_ismarkbind(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_MallMall::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_id(), target);
  }

  // optional int32 m_itemid = 2;
  if (has_m_itemid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_itemid(), target);
  }

  // optional int32 m_malltype = 3;
  if (has_m_malltype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->m_malltype(), target);
  }

  // optional int32 m_priority = 4;
  if (has_m_priority()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->m_priority(), target);
  }

  // optional int32 m_moneytype = 5;
  if (has_m_moneytype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->m_moneytype(), target);
  }

  // optional int32 m_moneyitem = 6;
  if (has_m_moneyitem()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->m_moneyitem(), target);
  }

  // optional int32 m_price = 7;
  if (has_m_price()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->m_price(), target);
  }

  // optional int32 m_secondarymoneytype = 8;
  if (has_m_secondarymoneytype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->m_secondarymoneytype(), target);
  }

  // optional int32 m_discount = 9;
  if (has_m_discount()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->m_discount(), target);
  }

  // optional int32 m_buylimittype = 10;
  if (has_m_buylimittype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->m_buylimittype(), target);
  }

  // optional int32 m_buyamount = 11;
  if (has_m_buyamount()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->m_buyamount(), target);
  }

  // optional int32 m_viplimit = 12;
  if (has_m_viplimit()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(12, this->m_viplimit(), target);
  }

  // optional int32 m_lvlimit = 13;
  if (has_m_lvlimit()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(13, this->m_lvlimit(), target);
  }

  // optional int32 m_vipunlock = 14;
  if (has_m_vipunlock()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(14, this->m_vipunlock(), target);
  }

  // optional int32 m_isclose = 15;
  if (has_m_isclose()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(15, this->m_isclose(), target);
  }

  // optional int32 m_cantbuy = 16;
  if (has_m_cantbuy()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(16, this->m_cantbuy(), target);
  }

  // optional int32 m_ismarkbind = 17;
  if (has_m_ismarkbind()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(17, this->m_ismarkbind(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_MallMall::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_id = 1;
    if (has_m_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_id());
    }

    // optional int32 m_itemid = 2;
    if (has_m_itemid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_itemid());
    }

    // optional int32 m_malltype = 3;
    if (has_m_malltype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_malltype());
    }

    // optional int32 m_priority = 4;
    if (has_m_priority()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_priority());
    }

    // optional int32 m_moneytype = 5;
    if (has_m_moneytype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_moneytype());
    }

    // optional int32 m_moneyitem = 6;
    if (has_m_moneyitem()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_moneyitem());
    }

    // optional int32 m_price = 7;
    if (has_m_price()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_price());
    }

    // optional int32 m_secondarymoneytype = 8;
    if (has_m_secondarymoneytype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_secondarymoneytype());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional int32 m_discount = 9;
    if (has_m_discount()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_discount());
    }

    // optional int32 m_buylimittype = 10;
    if (has_m_buylimittype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_buylimittype());
    }

    // optional int32 m_buyamount = 11;
    if (has_m_buyamount()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_buyamount());
    }

    // optional int32 m_viplimit = 12;
    if (has_m_viplimit()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_viplimit());
    }

    // optional int32 m_lvlimit = 13;
    if (has_m_lvlimit()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_lvlimit());
    }

    // optional int32 m_vipunlock = 14;
    if (has_m_vipunlock()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_vipunlock());
    }

    // optional int32 m_isclose = 15;
    if (has_m_isclose()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_isclose());
    }

    // optional int32 m_cantbuy = 16;
    if (has_m_cantbuy()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_cantbuy());
    }

  }
  if (_has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    // optional int32 m_ismarkbind = 17;
    if (has_m_ismarkbind()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_ismarkbind());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_MallMall::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_MallMall* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_MallMall*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_MallMall::MergeFrom(const E_MallMall& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_id()) {
      set_m_id(from.m_id());
    }
    if (from.has_m_itemid()) {
      set_m_itemid(from.m_itemid());
    }
    if (from.has_m_malltype()) {
      set_m_malltype(from.m_malltype());
    }
    if (from.has_m_priority()) {
      set_m_priority(from.m_priority());
    }
    if (from.has_m_moneytype()) {
      set_m_moneytype(from.m_moneytype());
    }
    if (from.has_m_moneyitem()) {
      set_m_moneyitem(from.m_moneyitem());
    }
    if (from.has_m_price()) {
      set_m_price(from.m_price());
    }
    if (from.has_m_secondarymoneytype()) {
      set_m_secondarymoneytype(from.m_secondarymoneytype());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_m_discount()) {
      set_m_discount(from.m_discount());
    }
    if (from.has_m_buylimittype()) {
      set_m_buylimittype(from.m_buylimittype());
    }
    if (from.has_m_buyamount()) {
      set_m_buyamount(from.m_buyamount());
    }
    if (from.has_m_viplimit()) {
      set_m_viplimit(from.m_viplimit());
    }
    if (from.has_m_lvlimit()) {
      set_m_lvlimit(from.m_lvlimit());
    }
    if (from.has_m_vipunlock()) {
      set_m_vipunlock(from.m_vipunlock());
    }
    if (from.has_m_isclose()) {
      set_m_isclose(from.m_isclose());
    }
    if (from.has_m_cantbuy()) {
      set_m_cantbuy(from.m_cantbuy());
    }
  }
  if (from._has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    if (from.has_m_ismarkbind()) {
      set_m_ismarkbind(from.m_ismarkbind());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_MallMall::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_MallMall::CopyFrom(const E_MallMall& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_MallMall::IsInitialized() const {

  return true;
}

void E_MallMall::Swap(E_MallMall* other) {
  if (other != this) {
    std::swap(m_id_, other->m_id_);
    std::swap(m_itemid_, other->m_itemid_);
    std::swap(m_malltype_, other->m_malltype_);
    std::swap(m_priority_, other->m_priority_);
    std::swap(m_moneytype_, other->m_moneytype_);
    std::swap(m_moneyitem_, other->m_moneyitem_);
    std::swap(m_price_, other->m_price_);
    std::swap(m_secondarymoneytype_, other->m_secondarymoneytype_);
    std::swap(m_discount_, other->m_discount_);
    std::swap(m_buylimittype_, other->m_buylimittype_);
    std::swap(m_buyamount_, other->m_buyamount_);
    std::swap(m_viplimit_, other->m_viplimit_);
    std::swap(m_lvlimit_, other->m_lvlimit_);
    std::swap(m_vipunlock_, other->m_vipunlock_);
    std::swap(m_isclose_, other->m_isclose_);
    std::swap(m_cantbuy_, other->m_cantbuy_);
    std::swap(m_ismarkbind_, other->m_ismarkbind_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_MallMall::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_MallMall_descriptor_;
  metadata.reflection = E_MallMall_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_MallMall::kEMallMallListFieldNumber;
#endif  // !_MSC_VER

Sheet_MallMall::Sheet_MallMall()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_MallMall::InitAsDefaultInstance() {
}

Sheet_MallMall::Sheet_MallMall(const Sheet_MallMall& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_MallMall::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_MallMall::~Sheet_MallMall() {
  SharedDtor();
}

void Sheet_MallMall::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_MallMall::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_MallMall::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_MallMall_descriptor_;
}

const Sheet_MallMall& Sheet_MallMall::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fMall_2eproto();
  return *default_instance_;
}

Sheet_MallMall* Sheet_MallMall::default_instance_ = NULL;

Sheet_MallMall* Sheet_MallMall::New() const {
  return new Sheet_MallMall;
}

void Sheet_MallMall::Clear() {
  e_mallmall_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_MallMall::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.E_MallMall E_MallMall_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_E_MallMall_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_e_mallmall_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_E_MallMall_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_MallMall::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.E_MallMall E_MallMall_List = 1;
  for (int i = 0; i < this->e_mallmall_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->e_mallmall_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_MallMall::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.E_MallMall E_MallMall_List = 1;
  for (int i = 0; i < this->e_mallmall_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->e_mallmall_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_MallMall::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.E_MallMall E_MallMall_List = 1;
  total_size += 1 * this->e_mallmall_list_size();
  for (int i = 0; i < this->e_mallmall_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->e_mallmall_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_MallMall::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_MallMall* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_MallMall*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_MallMall::MergeFrom(const Sheet_MallMall& from) {
  GOOGLE_CHECK_NE(&from, this);
  e_mallmall_list_.MergeFrom(from.e_mallmall_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_MallMall::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_MallMall::CopyFrom(const Sheet_MallMall& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_MallMall::IsInitialized() const {

  return true;
}

void Sheet_MallMall::Swap(Sheet_MallMall* other) {
  if (other != this) {
    e_mallmall_list_.Swap(&other->e_mallmall_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_MallMall::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_MallMall_descriptor_;
  metadata.reflection = Sheet_MallMall_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_MallMalltype_tab::kMPriorityFieldNumber;
const int E_MallMalltype_tab::kMFunctionunlockFieldNumber;
const int E_MallMalltype_tab::kMEntranceFieldNumber;
#endif  // !_MSC_VER

E_MallMalltype_tab::E_MallMalltype_tab()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_MallMalltype_tab::InitAsDefaultInstance() {
}

E_MallMalltype_tab::E_MallMalltype_tab(const E_MallMalltype_tab& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_MallMalltype_tab::SharedCtor() {
  _cached_size_ = 0;
  m_priority_ = 0;
  m_functionunlock_ = 0;
  m_entrance_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_MallMalltype_tab::~E_MallMalltype_tab() {
  SharedDtor();
}

void E_MallMalltype_tab::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_MallMalltype_tab::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_MallMalltype_tab::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_MallMalltype_tab_descriptor_;
}

const E_MallMalltype_tab& E_MallMalltype_tab::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fMall_2eproto();
  return *default_instance_;
}

E_MallMalltype_tab* E_MallMalltype_tab::default_instance_ = NULL;

E_MallMalltype_tab* E_MallMalltype_tab::New() const {
  return new E_MallMalltype_tab;
}

void E_MallMalltype_tab::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_priority_ = 0;
    m_functionunlock_ = 0;
    m_entrance_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_MallMalltype_tab::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_priority = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_priority_)));
          set_has_m_priority();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_functionunlock;
        break;
      }

      // optional int32 m_functionunlock = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_functionunlock:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_functionunlock_)));
          set_has_m_functionunlock();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_m_entrance;
        break;
      }

      // optional int32 m_entrance = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_entrance:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_entrance_)));
          set_has_m_entrance();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_MallMalltype_tab::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_priority = 1;
  if (has_m_priority()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_priority(), output);
  }

  // optional int32 m_functionunlock = 2;
  if (has_m_functionunlock()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_functionunlock(), output);
  }

  // optional int32 m_entrance = 3;
  if (has_m_entrance()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->m_entrance(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_MallMalltype_tab::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_priority = 1;
  if (has_m_priority()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_priority(), target);
  }

  // optional int32 m_functionunlock = 2;
  if (has_m_functionunlock()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_functionunlock(), target);
  }

  // optional int32 m_entrance = 3;
  if (has_m_entrance()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->m_entrance(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_MallMalltype_tab::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_priority = 1;
    if (has_m_priority()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_priority());
    }

    // optional int32 m_functionunlock = 2;
    if (has_m_functionunlock()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_functionunlock());
    }

    // optional int32 m_entrance = 3;
    if (has_m_entrance()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_entrance());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_MallMalltype_tab::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_MallMalltype_tab* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_MallMalltype_tab*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_MallMalltype_tab::MergeFrom(const E_MallMalltype_tab& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_priority()) {
      set_m_priority(from.m_priority());
    }
    if (from.has_m_functionunlock()) {
      set_m_functionunlock(from.m_functionunlock());
    }
    if (from.has_m_entrance()) {
      set_m_entrance(from.m_entrance());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_MallMalltype_tab::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_MallMalltype_tab::CopyFrom(const E_MallMalltype_tab& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_MallMalltype_tab::IsInitialized() const {

  return true;
}

void E_MallMalltype_tab::Swap(E_MallMalltype_tab* other) {
  if (other != this) {
    std::swap(m_priority_, other->m_priority_);
    std::swap(m_functionunlock_, other->m_functionunlock_);
    std::swap(m_entrance_, other->m_entrance_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_MallMalltype_tab::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_MallMalltype_tab_descriptor_;
  metadata.reflection = E_MallMalltype_tab_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_MallMalltype_tab::kEMallMalltypeTabListFieldNumber;
#endif  // !_MSC_VER

Sheet_MallMalltype_tab::Sheet_MallMalltype_tab()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_MallMalltype_tab::InitAsDefaultInstance() {
}

Sheet_MallMalltype_tab::Sheet_MallMalltype_tab(const Sheet_MallMalltype_tab& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_MallMalltype_tab::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_MallMalltype_tab::~Sheet_MallMalltype_tab() {
  SharedDtor();
}

void Sheet_MallMalltype_tab::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_MallMalltype_tab::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_MallMalltype_tab::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_MallMalltype_tab_descriptor_;
}

const Sheet_MallMalltype_tab& Sheet_MallMalltype_tab::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fMall_2eproto();
  return *default_instance_;
}

Sheet_MallMalltype_tab* Sheet_MallMalltype_tab::default_instance_ = NULL;

Sheet_MallMalltype_tab* Sheet_MallMalltype_tab::New() const {
  return new Sheet_MallMalltype_tab;
}

void Sheet_MallMalltype_tab::Clear() {
  e_mallmalltype_tab_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_MallMalltype_tab::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.E_MallMalltype_tab E_MallMalltype_tab_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_E_MallMalltype_tab_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_e_mallmalltype_tab_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_E_MallMalltype_tab_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_MallMalltype_tab::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.E_MallMalltype_tab E_MallMalltype_tab_List = 1;
  for (int i = 0; i < this->e_mallmalltype_tab_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->e_mallmalltype_tab_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_MallMalltype_tab::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.E_MallMalltype_tab E_MallMalltype_tab_List = 1;
  for (int i = 0; i < this->e_mallmalltype_tab_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->e_mallmalltype_tab_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_MallMalltype_tab::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.E_MallMalltype_tab E_MallMalltype_tab_List = 1;
  total_size += 1 * this->e_mallmalltype_tab_list_size();
  for (int i = 0; i < this->e_mallmalltype_tab_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->e_mallmalltype_tab_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_MallMalltype_tab::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_MallMalltype_tab* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_MallMalltype_tab*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_MallMalltype_tab::MergeFrom(const Sheet_MallMalltype_tab& from) {
  GOOGLE_CHECK_NE(&from, this);
  e_mallmalltype_tab_list_.MergeFrom(from.e_mallmalltype_tab_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_MallMalltype_tab::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_MallMalltype_tab::CopyFrom(const Sheet_MallMalltype_tab& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_MallMalltype_tab::IsInitialized() const {

  return true;
}

void Sheet_MallMalltype_tab::Swap(Sheet_MallMalltype_tab* other) {
  if (other != this) {
    e_mallmalltype_tab_list_.Swap(&other->e_mallmalltype_tab_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_MallMalltype_tab::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_MallMalltype_tab_descriptor_;
  metadata.reflection = Sheet_MallMalltype_tab_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_MallMalltype::kMIdFieldNumber;
const int E_MallMalltype::kMTitleFieldNumber;
const int E_MallMalltype::kMGrouptypeFieldNumber;
const int E_MallMalltype::kMPriorityFieldNumber;
const int E_MallMalltype::kMFunctionunlockFieldNumber;
const int E_MallMalltype::kMProfessionFieldNumber;
#endif  // !_MSC_VER

E_MallMalltype::E_MallMalltype()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_MallMalltype::InitAsDefaultInstance() {
}

E_MallMalltype::E_MallMalltype(const E_MallMalltype& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_MallMalltype::SharedCtor() {
  _cached_size_ = 0;
  m_id_ = GOOGLE_LONGLONG(0);
  m_title_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  m_grouptype_ = 0;
  m_priority_ = 0;
  m_functionunlock_ = 0;
  m_profession_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_MallMalltype::~E_MallMalltype() {
  SharedDtor();
}

void E_MallMalltype::SharedDtor() {
  if (m_title_ != &::google::protobuf::internal::kEmptyString) {
    delete m_title_;
  }
  if (m_profession_ != &::google::protobuf::internal::kEmptyString) {
    delete m_profession_;
  }
  if (this != default_instance_) {
  }
}

void E_MallMalltype::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_MallMalltype::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_MallMalltype_descriptor_;
}

const E_MallMalltype& E_MallMalltype::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fMall_2eproto();
  return *default_instance_;
}

E_MallMalltype* E_MallMalltype::default_instance_ = NULL;

E_MallMalltype* E_MallMalltype::New() const {
  return new E_MallMalltype;
}

void E_MallMalltype::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_id_ = GOOGLE_LONGLONG(0);
    if (has_m_title()) {
      if (m_title_ != &::google::protobuf::internal::kEmptyString) {
        m_title_->clear();
      }
    }
    m_grouptype_ = 0;
    m_priority_ = 0;
    m_functionunlock_ = 0;
    if (has_m_profession()) {
      if (m_profession_ != &::google::protobuf::internal::kEmptyString) {
        m_profession_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_MallMalltype::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 m_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &m_id_)));
          set_has_m_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_m_title;
        break;
      }

      // optional string m_title = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_title:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_m_title()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->m_title().data(), this->m_title().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_m_grouptype;
        break;
      }

      // optional int32 m_grouptype = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_grouptype:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_grouptype_)));
          set_has_m_grouptype();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_m_priority;
        break;
      }

      // optional int32 m_priority = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_priority:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_priority_)));
          set_has_m_priority();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_m_functionunlock;
        break;
      }

      // optional int32 m_functionunlock = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_functionunlock:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_functionunlock_)));
          set_has_m_functionunlock();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_m_profession;
        break;
      }

      // optional string m_profession = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_profession:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_m_profession()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->m_profession().data(), this->m_profession().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_MallMalltype::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 m_id = 1;
  if (has_m_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->m_id(), output);
  }

  // optional string m_title = 2;
  if (has_m_title()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_title().data(), this->m_title().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->m_title(), output);
  }

  // optional int32 m_grouptype = 3;
  if (has_m_grouptype()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->m_grouptype(), output);
  }

  // optional int32 m_priority = 4;
  if (has_m_priority()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->m_priority(), output);
  }

  // optional int32 m_functionunlock = 5;
  if (has_m_functionunlock()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->m_functionunlock(), output);
  }

  // optional string m_profession = 6;
  if (has_m_profession()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_profession().data(), this->m_profession().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      6, this->m_profession(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_MallMalltype::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 m_id = 1;
  if (has_m_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->m_id(), target);
  }

  // optional string m_title = 2;
  if (has_m_title()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_title().data(), this->m_title().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->m_title(), target);
  }

  // optional int32 m_grouptype = 3;
  if (has_m_grouptype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->m_grouptype(), target);
  }

  // optional int32 m_priority = 4;
  if (has_m_priority()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->m_priority(), target);
  }

  // optional int32 m_functionunlock = 5;
  if (has_m_functionunlock()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->m_functionunlock(), target);
  }

  // optional string m_profession = 6;
  if (has_m_profession()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_profession().data(), this->m_profession().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->m_profession(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_MallMalltype::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 m_id = 1;
    if (has_m_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->m_id());
    }

    // optional string m_title = 2;
    if (has_m_title()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->m_title());
    }

    // optional int32 m_grouptype = 3;
    if (has_m_grouptype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_grouptype());
    }

    // optional int32 m_priority = 4;
    if (has_m_priority()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_priority());
    }

    // optional int32 m_functionunlock = 5;
    if (has_m_functionunlock()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_functionunlock());
    }

    // optional string m_profession = 6;
    if (has_m_profession()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->m_profession());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_MallMalltype::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_MallMalltype* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_MallMalltype*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_MallMalltype::MergeFrom(const E_MallMalltype& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_id()) {
      set_m_id(from.m_id());
    }
    if (from.has_m_title()) {
      set_m_title(from.m_title());
    }
    if (from.has_m_grouptype()) {
      set_m_grouptype(from.m_grouptype());
    }
    if (from.has_m_priority()) {
      set_m_priority(from.m_priority());
    }
    if (from.has_m_functionunlock()) {
      set_m_functionunlock(from.m_functionunlock());
    }
    if (from.has_m_profession()) {
      set_m_profession(from.m_profession());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_MallMalltype::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_MallMalltype::CopyFrom(const E_MallMalltype& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_MallMalltype::IsInitialized() const {

  return true;
}

void E_MallMalltype::Swap(E_MallMalltype* other) {
  if (other != this) {
    std::swap(m_id_, other->m_id_);
    std::swap(m_title_, other->m_title_);
    std::swap(m_grouptype_, other->m_grouptype_);
    std::swap(m_priority_, other->m_priority_);
    std::swap(m_functionunlock_, other->m_functionunlock_);
    std::swap(m_profession_, other->m_profession_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_MallMalltype::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_MallMalltype_descriptor_;
  metadata.reflection = E_MallMalltype_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_MallMalltype::kEMallMalltypeListFieldNumber;
#endif  // !_MSC_VER

Sheet_MallMalltype::Sheet_MallMalltype()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_MallMalltype::InitAsDefaultInstance() {
}

Sheet_MallMalltype::Sheet_MallMalltype(const Sheet_MallMalltype& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_MallMalltype::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_MallMalltype::~Sheet_MallMalltype() {
  SharedDtor();
}

void Sheet_MallMalltype::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_MallMalltype::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_MallMalltype::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_MallMalltype_descriptor_;
}

const Sheet_MallMalltype& Sheet_MallMalltype::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fMall_2eproto();
  return *default_instance_;
}

Sheet_MallMalltype* Sheet_MallMalltype::default_instance_ = NULL;

Sheet_MallMalltype* Sheet_MallMalltype::New() const {
  return new Sheet_MallMalltype;
}

void Sheet_MallMalltype::Clear() {
  e_mallmalltype_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_MallMalltype::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.E_MallMalltype E_MallMalltype_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_E_MallMalltype_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_e_mallmalltype_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_E_MallMalltype_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_MallMalltype::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.E_MallMalltype E_MallMalltype_List = 1;
  for (int i = 0; i < this->e_mallmalltype_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->e_mallmalltype_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_MallMalltype::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.E_MallMalltype E_MallMalltype_List = 1;
  for (int i = 0; i < this->e_mallmalltype_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->e_mallmalltype_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_MallMalltype::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.E_MallMalltype E_MallMalltype_List = 1;
  total_size += 1 * this->e_mallmalltype_list_size();
  for (int i = 0; i < this->e_mallmalltype_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->e_mallmalltype_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_MallMalltype::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_MallMalltype* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_MallMalltype*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_MallMalltype::MergeFrom(const Sheet_MallMalltype& from) {
  GOOGLE_CHECK_NE(&from, this);
  e_mallmalltype_list_.MergeFrom(from.e_mallmalltype_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_MallMalltype::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_MallMalltype::CopyFrom(const Sheet_MallMalltype& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_MallMalltype::IsInitialized() const {

  return true;
}

void Sheet_MallMalltype::Swap(Sheet_MallMalltype* other) {
  if (other != this) {
    e_mallmalltype_list_.Swap(&other->e_mallmalltype_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_MallMalltype::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_MallMalltype_descriptor_;
  metadata.reflection = Sheet_MallMalltype_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_MallHolybeast::kMIdFieldNumber;
const int E_MallHolybeast::kMMountidFieldNumber;
const int E_MallHolybeast::kMItemidFieldNumber;
const int E_MallHolybeast::kMCostidFieldNumber;
const int E_MallHolybeast::kMCostnumFieldNumber;
#endif  // !_MSC_VER

E_MallHolybeast::E_MallHolybeast()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_MallHolybeast::InitAsDefaultInstance() {
}

E_MallHolybeast::E_MallHolybeast(const E_MallHolybeast& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_MallHolybeast::SharedCtor() {
  _cached_size_ = 0;
  m_id_ = 0;
  m_mountid_ = 0;
  m_itemid_ = 0;
  m_costid_ = 0;
  m_costnum_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_MallHolybeast::~E_MallHolybeast() {
  SharedDtor();
}

void E_MallHolybeast::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_MallHolybeast::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_MallHolybeast::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_MallHolybeast_descriptor_;
}

const E_MallHolybeast& E_MallHolybeast::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fMall_2eproto();
  return *default_instance_;
}

E_MallHolybeast* E_MallHolybeast::default_instance_ = NULL;

E_MallHolybeast* E_MallHolybeast::New() const {
  return new E_MallHolybeast;
}

void E_MallHolybeast::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_id_ = 0;
    m_mountid_ = 0;
    m_itemid_ = 0;
    m_costid_ = 0;
    m_costnum_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_MallHolybeast::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_id_)));
          set_has_m_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_mountid;
        break;
      }

      // optional int32 m_mountid = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_mountid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_mountid_)));
          set_has_m_mountid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_m_itemid;
        break;
      }

      // optional int32 m_itemid = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_itemid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_itemid_)));
          set_has_m_itemid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_m_costid;
        break;
      }

      // optional int32 m_costid = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_costid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_costid_)));
          set_has_m_costid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_m_costnum;
        break;
      }

      // optional int32 m_costnum = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_costnum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_costnum_)));
          set_has_m_costnum();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_MallHolybeast::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_id(), output);
  }

  // optional int32 m_mountid = 2;
  if (has_m_mountid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_mountid(), output);
  }

  // optional int32 m_itemid = 3;
  if (has_m_itemid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->m_itemid(), output);
  }

  // optional int32 m_costid = 4;
  if (has_m_costid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->m_costid(), output);
  }

  // optional int32 m_costnum = 5;
  if (has_m_costnum()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->m_costnum(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_MallHolybeast::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_id(), target);
  }

  // optional int32 m_mountid = 2;
  if (has_m_mountid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_mountid(), target);
  }

  // optional int32 m_itemid = 3;
  if (has_m_itemid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->m_itemid(), target);
  }

  // optional int32 m_costid = 4;
  if (has_m_costid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->m_costid(), target);
  }

  // optional int32 m_costnum = 5;
  if (has_m_costnum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->m_costnum(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_MallHolybeast::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_id = 1;
    if (has_m_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_id());
    }

    // optional int32 m_mountid = 2;
    if (has_m_mountid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_mountid());
    }

    // optional int32 m_itemid = 3;
    if (has_m_itemid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_itemid());
    }

    // optional int32 m_costid = 4;
    if (has_m_costid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_costid());
    }

    // optional int32 m_costnum = 5;
    if (has_m_costnum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_costnum());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_MallHolybeast::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_MallHolybeast* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_MallHolybeast*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_MallHolybeast::MergeFrom(const E_MallHolybeast& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_id()) {
      set_m_id(from.m_id());
    }
    if (from.has_m_mountid()) {
      set_m_mountid(from.m_mountid());
    }
    if (from.has_m_itemid()) {
      set_m_itemid(from.m_itemid());
    }
    if (from.has_m_costid()) {
      set_m_costid(from.m_costid());
    }
    if (from.has_m_costnum()) {
      set_m_costnum(from.m_costnum());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_MallHolybeast::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_MallHolybeast::CopyFrom(const E_MallHolybeast& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_MallHolybeast::IsInitialized() const {

  return true;
}

void E_MallHolybeast::Swap(E_MallHolybeast* other) {
  if (other != this) {
    std::swap(m_id_, other->m_id_);
    std::swap(m_mountid_, other->m_mountid_);
    std::swap(m_itemid_, other->m_itemid_);
    std::swap(m_costid_, other->m_costid_);
    std::swap(m_costnum_, other->m_costnum_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_MallHolybeast::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_MallHolybeast_descriptor_;
  metadata.reflection = E_MallHolybeast_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_MallHolybeast::kEMallHolybeastListFieldNumber;
#endif  // !_MSC_VER

Sheet_MallHolybeast::Sheet_MallHolybeast()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_MallHolybeast::InitAsDefaultInstance() {
}

Sheet_MallHolybeast::Sheet_MallHolybeast(const Sheet_MallHolybeast& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_MallHolybeast::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_MallHolybeast::~Sheet_MallHolybeast() {
  SharedDtor();
}

void Sheet_MallHolybeast::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_MallHolybeast::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_MallHolybeast::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_MallHolybeast_descriptor_;
}

const Sheet_MallHolybeast& Sheet_MallHolybeast::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fMall_2eproto();
  return *default_instance_;
}

Sheet_MallHolybeast* Sheet_MallHolybeast::default_instance_ = NULL;

Sheet_MallHolybeast* Sheet_MallHolybeast::New() const {
  return new Sheet_MallHolybeast;
}

void Sheet_MallHolybeast::Clear() {
  e_mallholybeast_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_MallHolybeast::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.E_MallHolybeast E_MallHolybeast_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_E_MallHolybeast_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_e_mallholybeast_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_E_MallHolybeast_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_MallHolybeast::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.E_MallHolybeast E_MallHolybeast_List = 1;
  for (int i = 0; i < this->e_mallholybeast_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->e_mallholybeast_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_MallHolybeast::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.E_MallHolybeast E_MallHolybeast_List = 1;
  for (int i = 0; i < this->e_mallholybeast_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->e_mallholybeast_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_MallHolybeast::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.E_MallHolybeast E_MallHolybeast_List = 1;
  total_size += 1 * this->e_mallholybeast_list_size();
  for (int i = 0; i < this->e_mallholybeast_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->e_mallholybeast_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_MallHolybeast::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_MallHolybeast* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_MallHolybeast*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_MallHolybeast::MergeFrom(const Sheet_MallHolybeast& from) {
  GOOGLE_CHECK_NE(&from, this);
  e_mallholybeast_list_.MergeFrom(from.e_mallholybeast_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_MallHolybeast::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_MallHolybeast::CopyFrom(const Sheet_MallHolybeast& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_MallHolybeast::IsInitialized() const {

  return true;
}

void Sheet_MallHolybeast::Swap(Sheet_MallHolybeast* other) {
  if (other != this) {
    e_mallholybeast_list_.Swap(&other->e_mallholybeast_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_MallHolybeast::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_MallHolybeast_descriptor_;
  metadata.reflection = Sheet_MallHolybeast_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto_ff

// @@protoc_insertion_point(global_scope)
