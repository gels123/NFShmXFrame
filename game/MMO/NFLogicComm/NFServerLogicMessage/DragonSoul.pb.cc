// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: DragonSoul.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "DragonSoul.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace proto_ff {

namespace {

const ::google::protobuf::Descriptor* DragonSoulInfoReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DragonSoulInfoReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* DragonSoulInfoRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DragonSoulInfoRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* DragonSoulActiveHoleReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DragonSoulActiveHoleReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* DragonSoulActiveHoleRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DragonSoulActiveHoleRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* DragonSoulDressReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DragonSoulDressReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* DragonSoulDressRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DragonSoulDressRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* DragonSoulUnDressReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DragonSoulUnDressReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* DragonSoulUnDressRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DragonSoulUnDressRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* DragonSoulEquipStrongReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DragonSoulEquipStrongReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* DragonSoulEquipStrongRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DragonSoulEquipStrongRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* DragonSoulEquipStrongQualityReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DragonSoulEquipStrongQualityReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* DragonSoulEquipStrongQualityRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DragonSoulEquipStrongQualityRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* DragonSoulEquipWakeLvReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DragonSoulEquipWakeLvReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* DragonSoulEquipWakeLvRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DragonSoulEquipWakeLvRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* DragonSoulEquipStarInfoReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DragonSoulEquipStarInfoReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* DragonSoulEquipStarInfoRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DragonSoulEquipStarInfoRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* DragonSoulEquipStarActiveReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DragonSoulEquipStarActiveReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* DragonSoulEquipStarActiveRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DragonSoulEquipStarActiveRsp_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_DragonSoul_2eproto() {
  protobuf_AddDesc_DragonSoul_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "DragonSoul.proto");
  GOOGLE_CHECK(file != NULL);
  DragonSoulInfoReq_descriptor_ = file->message_type(0);
  static const int DragonSoulInfoReq_offsets_[1] = {
  };
  DragonSoulInfoReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DragonSoulInfoReq_descriptor_,
      DragonSoulInfoReq::default_instance_,
      DragonSoulInfoReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DragonSoulInfoReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DragonSoulInfoReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(DragonSoulInfoReq));
  DragonSoulInfoRsp_descriptor_ = file->message_type(1);
  static const int DragonSoulInfoRsp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DragonSoulInfoRsp, hole_data_),
  };
  DragonSoulInfoRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DragonSoulInfoRsp_descriptor_,
      DragonSoulInfoRsp::default_instance_,
      DragonSoulInfoRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DragonSoulInfoRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DragonSoulInfoRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(DragonSoulInfoRsp));
  DragonSoulActiveHoleReq_descriptor_ = file->message_type(2);
  static const int DragonSoulActiveHoleReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DragonSoulActiveHoleReq, pos_),
  };
  DragonSoulActiveHoleReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DragonSoulActiveHoleReq_descriptor_,
      DragonSoulActiveHoleReq::default_instance_,
      DragonSoulActiveHoleReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DragonSoulActiveHoleReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DragonSoulActiveHoleReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(DragonSoulActiveHoleReq));
  DragonSoulActiveHoleRsp_descriptor_ = file->message_type(3);
  static const int DragonSoulActiveHoleRsp_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DragonSoulActiveHoleRsp, ret_code_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DragonSoulActiveHoleRsp, data_),
  };
  DragonSoulActiveHoleRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DragonSoulActiveHoleRsp_descriptor_,
      DragonSoulActiveHoleRsp::default_instance_,
      DragonSoulActiveHoleRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DragonSoulActiveHoleRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DragonSoulActiveHoleRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(DragonSoulActiveHoleRsp));
  DragonSoulDressReq_descriptor_ = file->message_type(4);
  static const int DragonSoulDressReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DragonSoulDressReq, hole_pos_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DragonSoulDressReq, bag_pos_),
  };
  DragonSoulDressReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DragonSoulDressReq_descriptor_,
      DragonSoulDressReq::default_instance_,
      DragonSoulDressReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DragonSoulDressReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DragonSoulDressReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(DragonSoulDressReq));
  DragonSoulDressRsp_descriptor_ = file->message_type(5);
  static const int DragonSoulDressRsp_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DragonSoulDressRsp, ret_code_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DragonSoulDressRsp, hole_pos_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DragonSoulDressRsp, bag_pos_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DragonSoulDressRsp, data_),
  };
  DragonSoulDressRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DragonSoulDressRsp_descriptor_,
      DragonSoulDressRsp::default_instance_,
      DragonSoulDressRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DragonSoulDressRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DragonSoulDressRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(DragonSoulDressRsp));
  DragonSoulUnDressReq_descriptor_ = file->message_type(6);
  static const int DragonSoulUnDressReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DragonSoulUnDressReq, hole_pos_),
  };
  DragonSoulUnDressReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DragonSoulUnDressReq_descriptor_,
      DragonSoulUnDressReq::default_instance_,
      DragonSoulUnDressReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DragonSoulUnDressReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DragonSoulUnDressReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(DragonSoulUnDressReq));
  DragonSoulUnDressRsp_descriptor_ = file->message_type(7);
  static const int DragonSoulUnDressRsp_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DragonSoulUnDressRsp, ret_code_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DragonSoulUnDressRsp, hole_pos_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DragonSoulUnDressRsp, data_),
  };
  DragonSoulUnDressRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DragonSoulUnDressRsp_descriptor_,
      DragonSoulUnDressRsp::default_instance_,
      DragonSoulUnDressRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DragonSoulUnDressRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DragonSoulUnDressRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(DragonSoulUnDressRsp));
  DragonSoulEquipStrongReq_descriptor_ = file->message_type(8);
  static const int DragonSoulEquipStrongReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DragonSoulEquipStrongReq, hole_pos_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DragonSoulEquipStrongReq, gridlist_),
  };
  DragonSoulEquipStrongReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DragonSoulEquipStrongReq_descriptor_,
      DragonSoulEquipStrongReq::default_instance_,
      DragonSoulEquipStrongReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DragonSoulEquipStrongReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DragonSoulEquipStrongReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(DragonSoulEquipStrongReq));
  DragonSoulEquipStrongRsp_descriptor_ = file->message_type(9);
  static const int DragonSoulEquipStrongRsp_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DragonSoulEquipStrongRsp, hole_pos_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DragonSoulEquipStrongRsp, ret_code_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DragonSoulEquipStrongRsp, data_),
  };
  DragonSoulEquipStrongRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DragonSoulEquipStrongRsp_descriptor_,
      DragonSoulEquipStrongRsp::default_instance_,
      DragonSoulEquipStrongRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DragonSoulEquipStrongRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DragonSoulEquipStrongRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(DragonSoulEquipStrongRsp));
  DragonSoulEquipStrongQualityReq_descriptor_ = file->message_type(10);
  static const int DragonSoulEquipStrongQualityReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DragonSoulEquipStrongQualityReq, hole_pos_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DragonSoulEquipStrongQualityReq, gridlist_),
  };
  DragonSoulEquipStrongQualityReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DragonSoulEquipStrongQualityReq_descriptor_,
      DragonSoulEquipStrongQualityReq::default_instance_,
      DragonSoulEquipStrongQualityReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DragonSoulEquipStrongQualityReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DragonSoulEquipStrongQualityReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(DragonSoulEquipStrongQualityReq));
  DragonSoulEquipStrongQualityRsp_descriptor_ = file->message_type(11);
  static const int DragonSoulEquipStrongQualityRsp_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DragonSoulEquipStrongQualityRsp, hole_pos_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DragonSoulEquipStrongQualityRsp, ret_code_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DragonSoulEquipStrongQualityRsp, data_),
  };
  DragonSoulEquipStrongQualityRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DragonSoulEquipStrongQualityRsp_descriptor_,
      DragonSoulEquipStrongQualityRsp::default_instance_,
      DragonSoulEquipStrongQualityRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DragonSoulEquipStrongQualityRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DragonSoulEquipStrongQualityRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(DragonSoulEquipStrongQualityRsp));
  DragonSoulEquipWakeLvReq_descriptor_ = file->message_type(12);
  static const int DragonSoulEquipWakeLvReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DragonSoulEquipWakeLvReq, hole_pos_),
  };
  DragonSoulEquipWakeLvReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DragonSoulEquipWakeLvReq_descriptor_,
      DragonSoulEquipWakeLvReq::default_instance_,
      DragonSoulEquipWakeLvReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DragonSoulEquipWakeLvReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DragonSoulEquipWakeLvReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(DragonSoulEquipWakeLvReq));
  DragonSoulEquipWakeLvRsp_descriptor_ = file->message_type(13);
  static const int DragonSoulEquipWakeLvRsp_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DragonSoulEquipWakeLvRsp, hole_pos_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DragonSoulEquipWakeLvRsp, ret_code_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DragonSoulEquipWakeLvRsp, data_),
  };
  DragonSoulEquipWakeLvRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DragonSoulEquipWakeLvRsp_descriptor_,
      DragonSoulEquipWakeLvRsp::default_instance_,
      DragonSoulEquipWakeLvRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DragonSoulEquipWakeLvRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DragonSoulEquipWakeLvRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(DragonSoulEquipWakeLvRsp));
  DragonSoulEquipStarInfoReq_descriptor_ = file->message_type(14);
  static const int DragonSoulEquipStarInfoReq_offsets_[1] = {
  };
  DragonSoulEquipStarInfoReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DragonSoulEquipStarInfoReq_descriptor_,
      DragonSoulEquipStarInfoReq::default_instance_,
      DragonSoulEquipStarInfoReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DragonSoulEquipStarInfoReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DragonSoulEquipStarInfoReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(DragonSoulEquipStarInfoReq));
  DragonSoulEquipStarInfoRsp_descriptor_ = file->message_type(15);
  static const int DragonSoulEquipStarInfoRsp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DragonSoulEquipStarInfoRsp, star_),
  };
  DragonSoulEquipStarInfoRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DragonSoulEquipStarInfoRsp_descriptor_,
      DragonSoulEquipStarInfoRsp::default_instance_,
      DragonSoulEquipStarInfoRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DragonSoulEquipStarInfoRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DragonSoulEquipStarInfoRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(DragonSoulEquipStarInfoRsp));
  DragonSoulEquipStarActiveReq_descriptor_ = file->message_type(16);
  static const int DragonSoulEquipStarActiveReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DragonSoulEquipStarActiveReq, id_),
  };
  DragonSoulEquipStarActiveReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DragonSoulEquipStarActiveReq_descriptor_,
      DragonSoulEquipStarActiveReq::default_instance_,
      DragonSoulEquipStarActiveReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DragonSoulEquipStarActiveReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DragonSoulEquipStarActiveReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(DragonSoulEquipStarActiveReq));
  DragonSoulEquipStarActiveRsp_descriptor_ = file->message_type(17);
  static const int DragonSoulEquipStarActiveRsp_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DragonSoulEquipStarActiveRsp, ret_code_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DragonSoulEquipStarActiveRsp, id_),
  };
  DragonSoulEquipStarActiveRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DragonSoulEquipStarActiveRsp_descriptor_,
      DragonSoulEquipStarActiveRsp::default_instance_,
      DragonSoulEquipStarActiveRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DragonSoulEquipStarActiveRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DragonSoulEquipStarActiveRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(DragonSoulEquipStarActiveRsp));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_DragonSoul_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DragonSoulInfoReq_descriptor_, &DragonSoulInfoReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DragonSoulInfoRsp_descriptor_, &DragonSoulInfoRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DragonSoulActiveHoleReq_descriptor_, &DragonSoulActiveHoleReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DragonSoulActiveHoleRsp_descriptor_, &DragonSoulActiveHoleRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DragonSoulDressReq_descriptor_, &DragonSoulDressReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DragonSoulDressRsp_descriptor_, &DragonSoulDressRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DragonSoulUnDressReq_descriptor_, &DragonSoulUnDressReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DragonSoulUnDressRsp_descriptor_, &DragonSoulUnDressRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DragonSoulEquipStrongReq_descriptor_, &DragonSoulEquipStrongReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DragonSoulEquipStrongRsp_descriptor_, &DragonSoulEquipStrongRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DragonSoulEquipStrongQualityReq_descriptor_, &DragonSoulEquipStrongQualityReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DragonSoulEquipStrongQualityRsp_descriptor_, &DragonSoulEquipStrongQualityRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DragonSoulEquipWakeLvReq_descriptor_, &DragonSoulEquipWakeLvReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DragonSoulEquipWakeLvRsp_descriptor_, &DragonSoulEquipWakeLvRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DragonSoulEquipStarInfoReq_descriptor_, &DragonSoulEquipStarInfoReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DragonSoulEquipStarInfoRsp_descriptor_, &DragonSoulEquipStarInfoRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DragonSoulEquipStarActiveReq_descriptor_, &DragonSoulEquipStarActiveReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DragonSoulEquipStarActiveRsp_descriptor_, &DragonSoulEquipStarActiveRsp::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_DragonSoul_2eproto() {
  delete DragonSoulInfoReq::default_instance_;
  delete DragonSoulInfoReq_reflection_;
  delete DragonSoulInfoRsp::default_instance_;
  delete DragonSoulInfoRsp_reflection_;
  delete DragonSoulActiveHoleReq::default_instance_;
  delete DragonSoulActiveHoleReq_reflection_;
  delete DragonSoulActiveHoleRsp::default_instance_;
  delete DragonSoulActiveHoleRsp_reflection_;
  delete DragonSoulDressReq::default_instance_;
  delete DragonSoulDressReq_reflection_;
  delete DragonSoulDressRsp::default_instance_;
  delete DragonSoulDressRsp_reflection_;
  delete DragonSoulUnDressReq::default_instance_;
  delete DragonSoulUnDressReq_reflection_;
  delete DragonSoulUnDressRsp::default_instance_;
  delete DragonSoulUnDressRsp_reflection_;
  delete DragonSoulEquipStrongReq::default_instance_;
  delete DragonSoulEquipStrongReq_reflection_;
  delete DragonSoulEquipStrongRsp::default_instance_;
  delete DragonSoulEquipStrongRsp_reflection_;
  delete DragonSoulEquipStrongQualityReq::default_instance_;
  delete DragonSoulEquipStrongQualityReq_reflection_;
  delete DragonSoulEquipStrongQualityRsp::default_instance_;
  delete DragonSoulEquipStrongQualityRsp_reflection_;
  delete DragonSoulEquipWakeLvReq::default_instance_;
  delete DragonSoulEquipWakeLvReq_reflection_;
  delete DragonSoulEquipWakeLvRsp::default_instance_;
  delete DragonSoulEquipWakeLvRsp_reflection_;
  delete DragonSoulEquipStarInfoReq::default_instance_;
  delete DragonSoulEquipStarInfoReq_reflection_;
  delete DragonSoulEquipStarInfoRsp::default_instance_;
  delete DragonSoulEquipStarInfoRsp_reflection_;
  delete DragonSoulEquipStarActiveReq::default_instance_;
  delete DragonSoulEquipStarActiveReq_reflection_;
  delete DragonSoulEquipStarActiveRsp::default_instance_;
  delete DragonSoulEquipStarActiveRsp_reflection_;
}

void protobuf_AddDesc_DragonSoul_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::proto_ff::protobuf_AddDesc_Com_2eproto();
  ::proto_ff::protobuf_AddDesc_ComDefine_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\020DragonSoul.proto\022\010proto_ff\032\tCom.proto\032"
    "\017ComDefine.proto\"\023\n\021DragonSoulInfoReq\"D\n"
    "\021DragonSoulInfoRsp\022/\n\thole_data\030\001 \003(\0132\034."
    "proto_ff.DragonSoulHoleData\"&\n\027DragonSou"
    "lActiveHoleReq\022\013\n\003pos\030\001 \001(\005\"W\n\027DragonSou"
    "lActiveHoleRsp\022\020\n\010ret_code\030\001 \001(\005\022*\n\004data"
    "\030\002 \001(\0132\034.proto_ff.DragonSoulHoleData\"7\n\022"
    "DragonSoulDressReq\022\020\n\010hole_pos\030\001 \001(\005\022\017\n\007"
    "bag_pos\030\002 \001(\005\"u\n\022DragonSoulDressRsp\022\020\n\010r"
    "et_code\030\001 \001(\005\022\020\n\010hole_pos\030\002 \001(\005\022\017\n\007bag_p"
    "os\030\003 \001(\005\022*\n\004data\030\004 \001(\0132\034.proto_ff.Dragon"
    "SoulHoleData\"(\n\024DragonSoulUnDressReq\022\020\n\010"
    "hole_pos\030\001 \001(\005\"f\n\024DragonSoulUnDressRsp\022\020"
    "\n\010ret_code\030\001 \001(\005\022\020\n\010hole_pos\030\002 \001(\005\022*\n\004da"
    "ta\030\004 \001(\0132\034.proto_ff.DragonSoulHoleData\">"
    "\n\030DragonSoulEquipStrongReq\022\020\n\010hole_pos\030\001"
    " \001(\005\022\020\n\010gridlist\030\002 \003(\r\"j\n\030DragonSoulEqui"
    "pStrongRsp\022\020\n\010hole_pos\030\001 \001(\005\022\020\n\010ret_code"
    "\030\002 \001(\005\022*\n\004data\030\003 \001(\0132\034.proto_ff.DragonSo"
    "ulHoleData\"E\n\037DragonSoulEquipStrongQuali"
    "tyReq\022\020\n\010hole_pos\030\001 \001(\005\022\020\n\010gridlist\030\002 \003("
    "\r\"q\n\037DragonSoulEquipStrongQualityRsp\022\020\n\010"
    "hole_pos\030\001 \001(\005\022\020\n\010ret_code\030\002 \001(\005\022*\n\004data"
    "\030\003 \001(\0132\034.proto_ff.DragonSoulHoleData\",\n\030"
    "DragonSoulEquipWakeLvReq\022\020\n\010hole_pos\030\001 \001"
    "(\005\"j\n\030DragonSoulEquipWakeLvRsp\022\020\n\010hole_p"
    "os\030\001 \001(\005\022\020\n\010ret_code\030\002 \001(\005\022*\n\004data\030\003 \001(\013"
    "2\034.proto_ff.DragonSoulHoleData\"\034\n\032Dragon"
    "SoulEquipStarInfoReq\"D\n\032DragonSoulEquipS"
    "tarInfoRsp\022&\n\004star\030\001 \003(\0132\030.proto_ff.Drag"
    "onSoulStar\"*\n\034DragonSoulEquipStarActiveR"
    "eq\022\n\n\002id\030\001 \001(\005\"<\n\034DragonSoulEquipStarAct"
    "iveRsp\022\020\n\010ret_code\030\001 \001(\005\022\n\n\002id\030\002 \001(\005", 1316);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "DragonSoul.proto", &protobuf_RegisterTypes);
  DragonSoulInfoReq::default_instance_ = new DragonSoulInfoReq();
  DragonSoulInfoRsp::default_instance_ = new DragonSoulInfoRsp();
  DragonSoulActiveHoleReq::default_instance_ = new DragonSoulActiveHoleReq();
  DragonSoulActiveHoleRsp::default_instance_ = new DragonSoulActiveHoleRsp();
  DragonSoulDressReq::default_instance_ = new DragonSoulDressReq();
  DragonSoulDressRsp::default_instance_ = new DragonSoulDressRsp();
  DragonSoulUnDressReq::default_instance_ = new DragonSoulUnDressReq();
  DragonSoulUnDressRsp::default_instance_ = new DragonSoulUnDressRsp();
  DragonSoulEquipStrongReq::default_instance_ = new DragonSoulEquipStrongReq();
  DragonSoulEquipStrongRsp::default_instance_ = new DragonSoulEquipStrongRsp();
  DragonSoulEquipStrongQualityReq::default_instance_ = new DragonSoulEquipStrongQualityReq();
  DragonSoulEquipStrongQualityRsp::default_instance_ = new DragonSoulEquipStrongQualityRsp();
  DragonSoulEquipWakeLvReq::default_instance_ = new DragonSoulEquipWakeLvReq();
  DragonSoulEquipWakeLvRsp::default_instance_ = new DragonSoulEquipWakeLvRsp();
  DragonSoulEquipStarInfoReq::default_instance_ = new DragonSoulEquipStarInfoReq();
  DragonSoulEquipStarInfoRsp::default_instance_ = new DragonSoulEquipStarInfoRsp();
  DragonSoulEquipStarActiveReq::default_instance_ = new DragonSoulEquipStarActiveReq();
  DragonSoulEquipStarActiveRsp::default_instance_ = new DragonSoulEquipStarActiveRsp();
  DragonSoulInfoReq::default_instance_->InitAsDefaultInstance();
  DragonSoulInfoRsp::default_instance_->InitAsDefaultInstance();
  DragonSoulActiveHoleReq::default_instance_->InitAsDefaultInstance();
  DragonSoulActiveHoleRsp::default_instance_->InitAsDefaultInstance();
  DragonSoulDressReq::default_instance_->InitAsDefaultInstance();
  DragonSoulDressRsp::default_instance_->InitAsDefaultInstance();
  DragonSoulUnDressReq::default_instance_->InitAsDefaultInstance();
  DragonSoulUnDressRsp::default_instance_->InitAsDefaultInstance();
  DragonSoulEquipStrongReq::default_instance_->InitAsDefaultInstance();
  DragonSoulEquipStrongRsp::default_instance_->InitAsDefaultInstance();
  DragonSoulEquipStrongQualityReq::default_instance_->InitAsDefaultInstance();
  DragonSoulEquipStrongQualityRsp::default_instance_->InitAsDefaultInstance();
  DragonSoulEquipWakeLvReq::default_instance_->InitAsDefaultInstance();
  DragonSoulEquipWakeLvRsp::default_instance_->InitAsDefaultInstance();
  DragonSoulEquipStarInfoReq::default_instance_->InitAsDefaultInstance();
  DragonSoulEquipStarInfoRsp::default_instance_->InitAsDefaultInstance();
  DragonSoulEquipStarActiveReq::default_instance_->InitAsDefaultInstance();
  DragonSoulEquipStarActiveRsp::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_DragonSoul_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_DragonSoul_2eproto {
  StaticDescriptorInitializer_DragonSoul_2eproto() {
    protobuf_AddDesc_DragonSoul_2eproto();
  }
} static_descriptor_initializer_DragonSoul_2eproto_;

// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

DragonSoulInfoReq::DragonSoulInfoReq()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void DragonSoulInfoReq::InitAsDefaultInstance() {
}

DragonSoulInfoReq::DragonSoulInfoReq(const DragonSoulInfoReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void DragonSoulInfoReq::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DragonSoulInfoReq::~DragonSoulInfoReq() {
  SharedDtor();
}

void DragonSoulInfoReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void DragonSoulInfoReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DragonSoulInfoReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DragonSoulInfoReq_descriptor_;
}

const DragonSoulInfoReq& DragonSoulInfoReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_DragonSoul_2eproto();
  return *default_instance_;
}

DragonSoulInfoReq* DragonSoulInfoReq::default_instance_ = NULL;

DragonSoulInfoReq* DragonSoulInfoReq::New() const {
  return new DragonSoulInfoReq;
}

void DragonSoulInfoReq::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool DragonSoulInfoReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void DragonSoulInfoReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* DragonSoulInfoReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int DragonSoulInfoReq::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DragonSoulInfoReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const DragonSoulInfoReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const DragonSoulInfoReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void DragonSoulInfoReq::MergeFrom(const DragonSoulInfoReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void DragonSoulInfoReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DragonSoulInfoReq::CopyFrom(const DragonSoulInfoReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DragonSoulInfoReq::IsInitialized() const {

  return true;
}

void DragonSoulInfoReq::Swap(DragonSoulInfoReq* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata DragonSoulInfoReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DragonSoulInfoReq_descriptor_;
  metadata.reflection = DragonSoulInfoReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int DragonSoulInfoRsp::kHoleDataFieldNumber;
#endif  // !_MSC_VER

DragonSoulInfoRsp::DragonSoulInfoRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void DragonSoulInfoRsp::InitAsDefaultInstance() {
}

DragonSoulInfoRsp::DragonSoulInfoRsp(const DragonSoulInfoRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void DragonSoulInfoRsp::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DragonSoulInfoRsp::~DragonSoulInfoRsp() {
  SharedDtor();
}

void DragonSoulInfoRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void DragonSoulInfoRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DragonSoulInfoRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DragonSoulInfoRsp_descriptor_;
}

const DragonSoulInfoRsp& DragonSoulInfoRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_DragonSoul_2eproto();
  return *default_instance_;
}

DragonSoulInfoRsp* DragonSoulInfoRsp::default_instance_ = NULL;

DragonSoulInfoRsp* DragonSoulInfoRsp::New() const {
  return new DragonSoulInfoRsp;
}

void DragonSoulInfoRsp::Clear() {
  hole_data_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool DragonSoulInfoRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.DragonSoulHoleData hole_data = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_hole_data:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_hole_data()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_hole_data;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void DragonSoulInfoRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.DragonSoulHoleData hole_data = 1;
  for (int i = 0; i < this->hole_data_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->hole_data(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* DragonSoulInfoRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.DragonSoulHoleData hole_data = 1;
  for (int i = 0; i < this->hole_data_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->hole_data(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int DragonSoulInfoRsp::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.DragonSoulHoleData hole_data = 1;
  total_size += 1 * this->hole_data_size();
  for (int i = 0; i < this->hole_data_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->hole_data(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DragonSoulInfoRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const DragonSoulInfoRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const DragonSoulInfoRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void DragonSoulInfoRsp::MergeFrom(const DragonSoulInfoRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  hole_data_.MergeFrom(from.hole_data_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void DragonSoulInfoRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DragonSoulInfoRsp::CopyFrom(const DragonSoulInfoRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DragonSoulInfoRsp::IsInitialized() const {

  for (int i = 0; i < hole_data_size(); i++) {
    if (!this->hole_data(i).IsInitialized()) return false;
  }
  return true;
}

void DragonSoulInfoRsp::Swap(DragonSoulInfoRsp* other) {
  if (other != this) {
    hole_data_.Swap(&other->hole_data_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata DragonSoulInfoRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DragonSoulInfoRsp_descriptor_;
  metadata.reflection = DragonSoulInfoRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int DragonSoulActiveHoleReq::kPosFieldNumber;
#endif  // !_MSC_VER

DragonSoulActiveHoleReq::DragonSoulActiveHoleReq()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void DragonSoulActiveHoleReq::InitAsDefaultInstance() {
}

DragonSoulActiveHoleReq::DragonSoulActiveHoleReq(const DragonSoulActiveHoleReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void DragonSoulActiveHoleReq::SharedCtor() {
  _cached_size_ = 0;
  pos_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DragonSoulActiveHoleReq::~DragonSoulActiveHoleReq() {
  SharedDtor();
}

void DragonSoulActiveHoleReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void DragonSoulActiveHoleReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DragonSoulActiveHoleReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DragonSoulActiveHoleReq_descriptor_;
}

const DragonSoulActiveHoleReq& DragonSoulActiveHoleReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_DragonSoul_2eproto();
  return *default_instance_;
}

DragonSoulActiveHoleReq* DragonSoulActiveHoleReq::default_instance_ = NULL;

DragonSoulActiveHoleReq* DragonSoulActiveHoleReq::New() const {
  return new DragonSoulActiveHoleReq;
}

void DragonSoulActiveHoleReq::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    pos_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool DragonSoulActiveHoleReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 pos = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pos_)));
          set_has_pos();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void DragonSoulActiveHoleReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 pos = 1;
  if (has_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->pos(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* DragonSoulActiveHoleReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 pos = 1;
  if (has_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->pos(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int DragonSoulActiveHoleReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 pos = 1;
    if (has_pos()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pos());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DragonSoulActiveHoleReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const DragonSoulActiveHoleReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const DragonSoulActiveHoleReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void DragonSoulActiveHoleReq::MergeFrom(const DragonSoulActiveHoleReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_pos()) {
      set_pos(from.pos());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void DragonSoulActiveHoleReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DragonSoulActiveHoleReq::CopyFrom(const DragonSoulActiveHoleReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DragonSoulActiveHoleReq::IsInitialized() const {

  return true;
}

void DragonSoulActiveHoleReq::Swap(DragonSoulActiveHoleReq* other) {
  if (other != this) {
    std::swap(pos_, other->pos_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata DragonSoulActiveHoleReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DragonSoulActiveHoleReq_descriptor_;
  metadata.reflection = DragonSoulActiveHoleReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int DragonSoulActiveHoleRsp::kRetCodeFieldNumber;
const int DragonSoulActiveHoleRsp::kDataFieldNumber;
#endif  // !_MSC_VER

DragonSoulActiveHoleRsp::DragonSoulActiveHoleRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void DragonSoulActiveHoleRsp::InitAsDefaultInstance() {
  data_ = const_cast< ::proto_ff::DragonSoulHoleData*>(&::proto_ff::DragonSoulHoleData::default_instance());
}

DragonSoulActiveHoleRsp::DragonSoulActiveHoleRsp(const DragonSoulActiveHoleRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void DragonSoulActiveHoleRsp::SharedCtor() {
  _cached_size_ = 0;
  ret_code_ = 0;
  data_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DragonSoulActiveHoleRsp::~DragonSoulActiveHoleRsp() {
  SharedDtor();
}

void DragonSoulActiveHoleRsp::SharedDtor() {
  if (this != default_instance_) {
    delete data_;
  }
}

void DragonSoulActiveHoleRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DragonSoulActiveHoleRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DragonSoulActiveHoleRsp_descriptor_;
}

const DragonSoulActiveHoleRsp& DragonSoulActiveHoleRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_DragonSoul_2eproto();
  return *default_instance_;
}

DragonSoulActiveHoleRsp* DragonSoulActiveHoleRsp::default_instance_ = NULL;

DragonSoulActiveHoleRsp* DragonSoulActiveHoleRsp::New() const {
  return new DragonSoulActiveHoleRsp;
}

void DragonSoulActiveHoleRsp::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    ret_code_ = 0;
    if (has_data()) {
      if (data_ != NULL) data_->::proto_ff::DragonSoulHoleData::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool DragonSoulActiveHoleRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 ret_code = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ret_code_)));
          set_has_ret_code();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_data;
        break;
      }

      // optional .proto_ff.DragonSoulHoleData data = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_data:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_data()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void DragonSoulActiveHoleRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 ret_code = 1;
  if (has_ret_code()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->ret_code(), output);
  }

  // optional .proto_ff.DragonSoulHoleData data = 2;
  if (has_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->data(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* DragonSoulActiveHoleRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 ret_code = 1;
  if (has_ret_code()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->ret_code(), target);
  }

  // optional .proto_ff.DragonSoulHoleData data = 2;
  if (has_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->data(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int DragonSoulActiveHoleRsp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 ret_code = 1;
    if (has_ret_code()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->ret_code());
    }

    // optional .proto_ff.DragonSoulHoleData data = 2;
    if (has_data()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->data());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DragonSoulActiveHoleRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const DragonSoulActiveHoleRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const DragonSoulActiveHoleRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void DragonSoulActiveHoleRsp::MergeFrom(const DragonSoulActiveHoleRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_ret_code()) {
      set_ret_code(from.ret_code());
    }
    if (from.has_data()) {
      mutable_data()->::proto_ff::DragonSoulHoleData::MergeFrom(from.data());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void DragonSoulActiveHoleRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DragonSoulActiveHoleRsp::CopyFrom(const DragonSoulActiveHoleRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DragonSoulActiveHoleRsp::IsInitialized() const {

  if (has_data()) {
    if (!this->data().IsInitialized()) return false;
  }
  return true;
}

void DragonSoulActiveHoleRsp::Swap(DragonSoulActiveHoleRsp* other) {
  if (other != this) {
    std::swap(ret_code_, other->ret_code_);
    std::swap(data_, other->data_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata DragonSoulActiveHoleRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DragonSoulActiveHoleRsp_descriptor_;
  metadata.reflection = DragonSoulActiveHoleRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int DragonSoulDressReq::kHolePosFieldNumber;
const int DragonSoulDressReq::kBagPosFieldNumber;
#endif  // !_MSC_VER

DragonSoulDressReq::DragonSoulDressReq()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void DragonSoulDressReq::InitAsDefaultInstance() {
}

DragonSoulDressReq::DragonSoulDressReq(const DragonSoulDressReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void DragonSoulDressReq::SharedCtor() {
  _cached_size_ = 0;
  hole_pos_ = 0;
  bag_pos_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DragonSoulDressReq::~DragonSoulDressReq() {
  SharedDtor();
}

void DragonSoulDressReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void DragonSoulDressReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DragonSoulDressReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DragonSoulDressReq_descriptor_;
}

const DragonSoulDressReq& DragonSoulDressReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_DragonSoul_2eproto();
  return *default_instance_;
}

DragonSoulDressReq* DragonSoulDressReq::default_instance_ = NULL;

DragonSoulDressReq* DragonSoulDressReq::New() const {
  return new DragonSoulDressReq;
}

void DragonSoulDressReq::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    hole_pos_ = 0;
    bag_pos_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool DragonSoulDressReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 hole_pos = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &hole_pos_)));
          set_has_hole_pos();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_bag_pos;
        break;
      }

      // optional int32 bag_pos = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_bag_pos:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &bag_pos_)));
          set_has_bag_pos();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void DragonSoulDressReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 hole_pos = 1;
  if (has_hole_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->hole_pos(), output);
  }

  // optional int32 bag_pos = 2;
  if (has_bag_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->bag_pos(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* DragonSoulDressReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 hole_pos = 1;
  if (has_hole_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->hole_pos(), target);
  }

  // optional int32 bag_pos = 2;
  if (has_bag_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->bag_pos(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int DragonSoulDressReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 hole_pos = 1;
    if (has_hole_pos()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->hole_pos());
    }

    // optional int32 bag_pos = 2;
    if (has_bag_pos()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->bag_pos());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DragonSoulDressReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const DragonSoulDressReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const DragonSoulDressReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void DragonSoulDressReq::MergeFrom(const DragonSoulDressReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_hole_pos()) {
      set_hole_pos(from.hole_pos());
    }
    if (from.has_bag_pos()) {
      set_bag_pos(from.bag_pos());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void DragonSoulDressReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DragonSoulDressReq::CopyFrom(const DragonSoulDressReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DragonSoulDressReq::IsInitialized() const {

  return true;
}

void DragonSoulDressReq::Swap(DragonSoulDressReq* other) {
  if (other != this) {
    std::swap(hole_pos_, other->hole_pos_);
    std::swap(bag_pos_, other->bag_pos_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata DragonSoulDressReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DragonSoulDressReq_descriptor_;
  metadata.reflection = DragonSoulDressReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int DragonSoulDressRsp::kRetCodeFieldNumber;
const int DragonSoulDressRsp::kHolePosFieldNumber;
const int DragonSoulDressRsp::kBagPosFieldNumber;
const int DragonSoulDressRsp::kDataFieldNumber;
#endif  // !_MSC_VER

DragonSoulDressRsp::DragonSoulDressRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void DragonSoulDressRsp::InitAsDefaultInstance() {
  data_ = const_cast< ::proto_ff::DragonSoulHoleData*>(&::proto_ff::DragonSoulHoleData::default_instance());
}

DragonSoulDressRsp::DragonSoulDressRsp(const DragonSoulDressRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void DragonSoulDressRsp::SharedCtor() {
  _cached_size_ = 0;
  ret_code_ = 0;
  hole_pos_ = 0;
  bag_pos_ = 0;
  data_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DragonSoulDressRsp::~DragonSoulDressRsp() {
  SharedDtor();
}

void DragonSoulDressRsp::SharedDtor() {
  if (this != default_instance_) {
    delete data_;
  }
}

void DragonSoulDressRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DragonSoulDressRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DragonSoulDressRsp_descriptor_;
}

const DragonSoulDressRsp& DragonSoulDressRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_DragonSoul_2eproto();
  return *default_instance_;
}

DragonSoulDressRsp* DragonSoulDressRsp::default_instance_ = NULL;

DragonSoulDressRsp* DragonSoulDressRsp::New() const {
  return new DragonSoulDressRsp;
}

void DragonSoulDressRsp::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    ret_code_ = 0;
    hole_pos_ = 0;
    bag_pos_ = 0;
    if (has_data()) {
      if (data_ != NULL) data_->::proto_ff::DragonSoulHoleData::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool DragonSoulDressRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 ret_code = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ret_code_)));
          set_has_ret_code();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_hole_pos;
        break;
      }

      // optional int32 hole_pos = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_hole_pos:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &hole_pos_)));
          set_has_hole_pos();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_bag_pos;
        break;
      }

      // optional int32 bag_pos = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_bag_pos:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &bag_pos_)));
          set_has_bag_pos();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_data;
        break;
      }

      // optional .proto_ff.DragonSoulHoleData data = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_data:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_data()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void DragonSoulDressRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 ret_code = 1;
  if (has_ret_code()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->ret_code(), output);
  }

  // optional int32 hole_pos = 2;
  if (has_hole_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->hole_pos(), output);
  }

  // optional int32 bag_pos = 3;
  if (has_bag_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->bag_pos(), output);
  }

  // optional .proto_ff.DragonSoulHoleData data = 4;
  if (has_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->data(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* DragonSoulDressRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 ret_code = 1;
  if (has_ret_code()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->ret_code(), target);
  }

  // optional int32 hole_pos = 2;
  if (has_hole_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->hole_pos(), target);
  }

  // optional int32 bag_pos = 3;
  if (has_bag_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->bag_pos(), target);
  }

  // optional .proto_ff.DragonSoulHoleData data = 4;
  if (has_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->data(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int DragonSoulDressRsp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 ret_code = 1;
    if (has_ret_code()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->ret_code());
    }

    // optional int32 hole_pos = 2;
    if (has_hole_pos()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->hole_pos());
    }

    // optional int32 bag_pos = 3;
    if (has_bag_pos()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->bag_pos());
    }

    // optional .proto_ff.DragonSoulHoleData data = 4;
    if (has_data()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->data());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DragonSoulDressRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const DragonSoulDressRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const DragonSoulDressRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void DragonSoulDressRsp::MergeFrom(const DragonSoulDressRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_ret_code()) {
      set_ret_code(from.ret_code());
    }
    if (from.has_hole_pos()) {
      set_hole_pos(from.hole_pos());
    }
    if (from.has_bag_pos()) {
      set_bag_pos(from.bag_pos());
    }
    if (from.has_data()) {
      mutable_data()->::proto_ff::DragonSoulHoleData::MergeFrom(from.data());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void DragonSoulDressRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DragonSoulDressRsp::CopyFrom(const DragonSoulDressRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DragonSoulDressRsp::IsInitialized() const {

  if (has_data()) {
    if (!this->data().IsInitialized()) return false;
  }
  return true;
}

void DragonSoulDressRsp::Swap(DragonSoulDressRsp* other) {
  if (other != this) {
    std::swap(ret_code_, other->ret_code_);
    std::swap(hole_pos_, other->hole_pos_);
    std::swap(bag_pos_, other->bag_pos_);
    std::swap(data_, other->data_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata DragonSoulDressRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DragonSoulDressRsp_descriptor_;
  metadata.reflection = DragonSoulDressRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int DragonSoulUnDressReq::kHolePosFieldNumber;
#endif  // !_MSC_VER

DragonSoulUnDressReq::DragonSoulUnDressReq()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void DragonSoulUnDressReq::InitAsDefaultInstance() {
}

DragonSoulUnDressReq::DragonSoulUnDressReq(const DragonSoulUnDressReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void DragonSoulUnDressReq::SharedCtor() {
  _cached_size_ = 0;
  hole_pos_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DragonSoulUnDressReq::~DragonSoulUnDressReq() {
  SharedDtor();
}

void DragonSoulUnDressReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void DragonSoulUnDressReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DragonSoulUnDressReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DragonSoulUnDressReq_descriptor_;
}

const DragonSoulUnDressReq& DragonSoulUnDressReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_DragonSoul_2eproto();
  return *default_instance_;
}

DragonSoulUnDressReq* DragonSoulUnDressReq::default_instance_ = NULL;

DragonSoulUnDressReq* DragonSoulUnDressReq::New() const {
  return new DragonSoulUnDressReq;
}

void DragonSoulUnDressReq::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    hole_pos_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool DragonSoulUnDressReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 hole_pos = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &hole_pos_)));
          set_has_hole_pos();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void DragonSoulUnDressReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 hole_pos = 1;
  if (has_hole_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->hole_pos(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* DragonSoulUnDressReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 hole_pos = 1;
  if (has_hole_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->hole_pos(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int DragonSoulUnDressReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 hole_pos = 1;
    if (has_hole_pos()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->hole_pos());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DragonSoulUnDressReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const DragonSoulUnDressReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const DragonSoulUnDressReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void DragonSoulUnDressReq::MergeFrom(const DragonSoulUnDressReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_hole_pos()) {
      set_hole_pos(from.hole_pos());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void DragonSoulUnDressReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DragonSoulUnDressReq::CopyFrom(const DragonSoulUnDressReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DragonSoulUnDressReq::IsInitialized() const {

  return true;
}

void DragonSoulUnDressReq::Swap(DragonSoulUnDressReq* other) {
  if (other != this) {
    std::swap(hole_pos_, other->hole_pos_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata DragonSoulUnDressReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DragonSoulUnDressReq_descriptor_;
  metadata.reflection = DragonSoulUnDressReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int DragonSoulUnDressRsp::kRetCodeFieldNumber;
const int DragonSoulUnDressRsp::kHolePosFieldNumber;
const int DragonSoulUnDressRsp::kDataFieldNumber;
#endif  // !_MSC_VER

DragonSoulUnDressRsp::DragonSoulUnDressRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void DragonSoulUnDressRsp::InitAsDefaultInstance() {
  data_ = const_cast< ::proto_ff::DragonSoulHoleData*>(&::proto_ff::DragonSoulHoleData::default_instance());
}

DragonSoulUnDressRsp::DragonSoulUnDressRsp(const DragonSoulUnDressRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void DragonSoulUnDressRsp::SharedCtor() {
  _cached_size_ = 0;
  ret_code_ = 0;
  hole_pos_ = 0;
  data_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DragonSoulUnDressRsp::~DragonSoulUnDressRsp() {
  SharedDtor();
}

void DragonSoulUnDressRsp::SharedDtor() {
  if (this != default_instance_) {
    delete data_;
  }
}

void DragonSoulUnDressRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DragonSoulUnDressRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DragonSoulUnDressRsp_descriptor_;
}

const DragonSoulUnDressRsp& DragonSoulUnDressRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_DragonSoul_2eproto();
  return *default_instance_;
}

DragonSoulUnDressRsp* DragonSoulUnDressRsp::default_instance_ = NULL;

DragonSoulUnDressRsp* DragonSoulUnDressRsp::New() const {
  return new DragonSoulUnDressRsp;
}

void DragonSoulUnDressRsp::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    ret_code_ = 0;
    hole_pos_ = 0;
    if (has_data()) {
      if (data_ != NULL) data_->::proto_ff::DragonSoulHoleData::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool DragonSoulUnDressRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 ret_code = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ret_code_)));
          set_has_ret_code();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_hole_pos;
        break;
      }

      // optional int32 hole_pos = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_hole_pos:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &hole_pos_)));
          set_has_hole_pos();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_data;
        break;
      }

      // optional .proto_ff.DragonSoulHoleData data = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_data:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_data()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void DragonSoulUnDressRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 ret_code = 1;
  if (has_ret_code()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->ret_code(), output);
  }

  // optional int32 hole_pos = 2;
  if (has_hole_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->hole_pos(), output);
  }

  // optional .proto_ff.DragonSoulHoleData data = 4;
  if (has_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->data(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* DragonSoulUnDressRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 ret_code = 1;
  if (has_ret_code()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->ret_code(), target);
  }

  // optional int32 hole_pos = 2;
  if (has_hole_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->hole_pos(), target);
  }

  // optional .proto_ff.DragonSoulHoleData data = 4;
  if (has_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->data(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int DragonSoulUnDressRsp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 ret_code = 1;
    if (has_ret_code()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->ret_code());
    }

    // optional int32 hole_pos = 2;
    if (has_hole_pos()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->hole_pos());
    }

    // optional .proto_ff.DragonSoulHoleData data = 4;
    if (has_data()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->data());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DragonSoulUnDressRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const DragonSoulUnDressRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const DragonSoulUnDressRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void DragonSoulUnDressRsp::MergeFrom(const DragonSoulUnDressRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_ret_code()) {
      set_ret_code(from.ret_code());
    }
    if (from.has_hole_pos()) {
      set_hole_pos(from.hole_pos());
    }
    if (from.has_data()) {
      mutable_data()->::proto_ff::DragonSoulHoleData::MergeFrom(from.data());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void DragonSoulUnDressRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DragonSoulUnDressRsp::CopyFrom(const DragonSoulUnDressRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DragonSoulUnDressRsp::IsInitialized() const {

  if (has_data()) {
    if (!this->data().IsInitialized()) return false;
  }
  return true;
}

void DragonSoulUnDressRsp::Swap(DragonSoulUnDressRsp* other) {
  if (other != this) {
    std::swap(ret_code_, other->ret_code_);
    std::swap(hole_pos_, other->hole_pos_);
    std::swap(data_, other->data_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata DragonSoulUnDressRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DragonSoulUnDressRsp_descriptor_;
  metadata.reflection = DragonSoulUnDressRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int DragonSoulEquipStrongReq::kHolePosFieldNumber;
const int DragonSoulEquipStrongReq::kGridlistFieldNumber;
#endif  // !_MSC_VER

DragonSoulEquipStrongReq::DragonSoulEquipStrongReq()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void DragonSoulEquipStrongReq::InitAsDefaultInstance() {
}

DragonSoulEquipStrongReq::DragonSoulEquipStrongReq(const DragonSoulEquipStrongReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void DragonSoulEquipStrongReq::SharedCtor() {
  _cached_size_ = 0;
  hole_pos_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DragonSoulEquipStrongReq::~DragonSoulEquipStrongReq() {
  SharedDtor();
}

void DragonSoulEquipStrongReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void DragonSoulEquipStrongReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DragonSoulEquipStrongReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DragonSoulEquipStrongReq_descriptor_;
}

const DragonSoulEquipStrongReq& DragonSoulEquipStrongReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_DragonSoul_2eproto();
  return *default_instance_;
}

DragonSoulEquipStrongReq* DragonSoulEquipStrongReq::default_instance_ = NULL;

DragonSoulEquipStrongReq* DragonSoulEquipStrongReq::New() const {
  return new DragonSoulEquipStrongReq;
}

void DragonSoulEquipStrongReq::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    hole_pos_ = 0;
  }
  gridlist_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool DragonSoulEquipStrongReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 hole_pos = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &hole_pos_)));
          set_has_hole_pos();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_gridlist;
        break;
      }

      // repeated uint32 gridlist = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_gridlist:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 16, input, this->mutable_gridlist())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_gridlist())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_gridlist;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void DragonSoulEquipStrongReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 hole_pos = 1;
  if (has_hole_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->hole_pos(), output);
  }

  // repeated uint32 gridlist = 2;
  for (int i = 0; i < this->gridlist_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      2, this->gridlist(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* DragonSoulEquipStrongReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 hole_pos = 1;
  if (has_hole_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->hole_pos(), target);
  }

  // repeated uint32 gridlist = 2;
  for (int i = 0; i < this->gridlist_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(2, this->gridlist(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int DragonSoulEquipStrongReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 hole_pos = 1;
    if (has_hole_pos()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->hole_pos());
    }

  }
  // repeated uint32 gridlist = 2;
  {
    int data_size = 0;
    for (int i = 0; i < this->gridlist_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->gridlist(i));
    }
    total_size += 1 * this->gridlist_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DragonSoulEquipStrongReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const DragonSoulEquipStrongReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const DragonSoulEquipStrongReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void DragonSoulEquipStrongReq::MergeFrom(const DragonSoulEquipStrongReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  gridlist_.MergeFrom(from.gridlist_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_hole_pos()) {
      set_hole_pos(from.hole_pos());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void DragonSoulEquipStrongReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DragonSoulEquipStrongReq::CopyFrom(const DragonSoulEquipStrongReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DragonSoulEquipStrongReq::IsInitialized() const {

  return true;
}

void DragonSoulEquipStrongReq::Swap(DragonSoulEquipStrongReq* other) {
  if (other != this) {
    std::swap(hole_pos_, other->hole_pos_);
    gridlist_.Swap(&other->gridlist_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata DragonSoulEquipStrongReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DragonSoulEquipStrongReq_descriptor_;
  metadata.reflection = DragonSoulEquipStrongReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int DragonSoulEquipStrongRsp::kHolePosFieldNumber;
const int DragonSoulEquipStrongRsp::kRetCodeFieldNumber;
const int DragonSoulEquipStrongRsp::kDataFieldNumber;
#endif  // !_MSC_VER

DragonSoulEquipStrongRsp::DragonSoulEquipStrongRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void DragonSoulEquipStrongRsp::InitAsDefaultInstance() {
  data_ = const_cast< ::proto_ff::DragonSoulHoleData*>(&::proto_ff::DragonSoulHoleData::default_instance());
}

DragonSoulEquipStrongRsp::DragonSoulEquipStrongRsp(const DragonSoulEquipStrongRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void DragonSoulEquipStrongRsp::SharedCtor() {
  _cached_size_ = 0;
  hole_pos_ = 0;
  ret_code_ = 0;
  data_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DragonSoulEquipStrongRsp::~DragonSoulEquipStrongRsp() {
  SharedDtor();
}

void DragonSoulEquipStrongRsp::SharedDtor() {
  if (this != default_instance_) {
    delete data_;
  }
}

void DragonSoulEquipStrongRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DragonSoulEquipStrongRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DragonSoulEquipStrongRsp_descriptor_;
}

const DragonSoulEquipStrongRsp& DragonSoulEquipStrongRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_DragonSoul_2eproto();
  return *default_instance_;
}

DragonSoulEquipStrongRsp* DragonSoulEquipStrongRsp::default_instance_ = NULL;

DragonSoulEquipStrongRsp* DragonSoulEquipStrongRsp::New() const {
  return new DragonSoulEquipStrongRsp;
}

void DragonSoulEquipStrongRsp::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    hole_pos_ = 0;
    ret_code_ = 0;
    if (has_data()) {
      if (data_ != NULL) data_->::proto_ff::DragonSoulHoleData::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool DragonSoulEquipStrongRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 hole_pos = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &hole_pos_)));
          set_has_hole_pos();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_ret_code;
        break;
      }

      // optional int32 ret_code = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_ret_code:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ret_code_)));
          set_has_ret_code();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_data;
        break;
      }

      // optional .proto_ff.DragonSoulHoleData data = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_data:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_data()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void DragonSoulEquipStrongRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 hole_pos = 1;
  if (has_hole_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->hole_pos(), output);
  }

  // optional int32 ret_code = 2;
  if (has_ret_code()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->ret_code(), output);
  }

  // optional .proto_ff.DragonSoulHoleData data = 3;
  if (has_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->data(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* DragonSoulEquipStrongRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 hole_pos = 1;
  if (has_hole_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->hole_pos(), target);
  }

  // optional int32 ret_code = 2;
  if (has_ret_code()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->ret_code(), target);
  }

  // optional .proto_ff.DragonSoulHoleData data = 3;
  if (has_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->data(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int DragonSoulEquipStrongRsp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 hole_pos = 1;
    if (has_hole_pos()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->hole_pos());
    }

    // optional int32 ret_code = 2;
    if (has_ret_code()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->ret_code());
    }

    // optional .proto_ff.DragonSoulHoleData data = 3;
    if (has_data()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->data());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DragonSoulEquipStrongRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const DragonSoulEquipStrongRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const DragonSoulEquipStrongRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void DragonSoulEquipStrongRsp::MergeFrom(const DragonSoulEquipStrongRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_hole_pos()) {
      set_hole_pos(from.hole_pos());
    }
    if (from.has_ret_code()) {
      set_ret_code(from.ret_code());
    }
    if (from.has_data()) {
      mutable_data()->::proto_ff::DragonSoulHoleData::MergeFrom(from.data());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void DragonSoulEquipStrongRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DragonSoulEquipStrongRsp::CopyFrom(const DragonSoulEquipStrongRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DragonSoulEquipStrongRsp::IsInitialized() const {

  if (has_data()) {
    if (!this->data().IsInitialized()) return false;
  }
  return true;
}

void DragonSoulEquipStrongRsp::Swap(DragonSoulEquipStrongRsp* other) {
  if (other != this) {
    std::swap(hole_pos_, other->hole_pos_);
    std::swap(ret_code_, other->ret_code_);
    std::swap(data_, other->data_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata DragonSoulEquipStrongRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DragonSoulEquipStrongRsp_descriptor_;
  metadata.reflection = DragonSoulEquipStrongRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int DragonSoulEquipStrongQualityReq::kHolePosFieldNumber;
const int DragonSoulEquipStrongQualityReq::kGridlistFieldNumber;
#endif  // !_MSC_VER

DragonSoulEquipStrongQualityReq::DragonSoulEquipStrongQualityReq()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void DragonSoulEquipStrongQualityReq::InitAsDefaultInstance() {
}

DragonSoulEquipStrongQualityReq::DragonSoulEquipStrongQualityReq(const DragonSoulEquipStrongQualityReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void DragonSoulEquipStrongQualityReq::SharedCtor() {
  _cached_size_ = 0;
  hole_pos_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DragonSoulEquipStrongQualityReq::~DragonSoulEquipStrongQualityReq() {
  SharedDtor();
}

void DragonSoulEquipStrongQualityReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void DragonSoulEquipStrongQualityReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DragonSoulEquipStrongQualityReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DragonSoulEquipStrongQualityReq_descriptor_;
}

const DragonSoulEquipStrongQualityReq& DragonSoulEquipStrongQualityReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_DragonSoul_2eproto();
  return *default_instance_;
}

DragonSoulEquipStrongQualityReq* DragonSoulEquipStrongQualityReq::default_instance_ = NULL;

DragonSoulEquipStrongQualityReq* DragonSoulEquipStrongQualityReq::New() const {
  return new DragonSoulEquipStrongQualityReq;
}

void DragonSoulEquipStrongQualityReq::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    hole_pos_ = 0;
  }
  gridlist_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool DragonSoulEquipStrongQualityReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 hole_pos = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &hole_pos_)));
          set_has_hole_pos();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_gridlist;
        break;
      }

      // repeated uint32 gridlist = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_gridlist:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 16, input, this->mutable_gridlist())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_gridlist())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_gridlist;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void DragonSoulEquipStrongQualityReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 hole_pos = 1;
  if (has_hole_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->hole_pos(), output);
  }

  // repeated uint32 gridlist = 2;
  for (int i = 0; i < this->gridlist_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      2, this->gridlist(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* DragonSoulEquipStrongQualityReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 hole_pos = 1;
  if (has_hole_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->hole_pos(), target);
  }

  // repeated uint32 gridlist = 2;
  for (int i = 0; i < this->gridlist_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(2, this->gridlist(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int DragonSoulEquipStrongQualityReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 hole_pos = 1;
    if (has_hole_pos()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->hole_pos());
    }

  }
  // repeated uint32 gridlist = 2;
  {
    int data_size = 0;
    for (int i = 0; i < this->gridlist_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->gridlist(i));
    }
    total_size += 1 * this->gridlist_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DragonSoulEquipStrongQualityReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const DragonSoulEquipStrongQualityReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const DragonSoulEquipStrongQualityReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void DragonSoulEquipStrongQualityReq::MergeFrom(const DragonSoulEquipStrongQualityReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  gridlist_.MergeFrom(from.gridlist_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_hole_pos()) {
      set_hole_pos(from.hole_pos());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void DragonSoulEquipStrongQualityReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DragonSoulEquipStrongQualityReq::CopyFrom(const DragonSoulEquipStrongQualityReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DragonSoulEquipStrongQualityReq::IsInitialized() const {

  return true;
}

void DragonSoulEquipStrongQualityReq::Swap(DragonSoulEquipStrongQualityReq* other) {
  if (other != this) {
    std::swap(hole_pos_, other->hole_pos_);
    gridlist_.Swap(&other->gridlist_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata DragonSoulEquipStrongQualityReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DragonSoulEquipStrongQualityReq_descriptor_;
  metadata.reflection = DragonSoulEquipStrongQualityReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int DragonSoulEquipStrongQualityRsp::kHolePosFieldNumber;
const int DragonSoulEquipStrongQualityRsp::kRetCodeFieldNumber;
const int DragonSoulEquipStrongQualityRsp::kDataFieldNumber;
#endif  // !_MSC_VER

DragonSoulEquipStrongQualityRsp::DragonSoulEquipStrongQualityRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void DragonSoulEquipStrongQualityRsp::InitAsDefaultInstance() {
  data_ = const_cast< ::proto_ff::DragonSoulHoleData*>(&::proto_ff::DragonSoulHoleData::default_instance());
}

DragonSoulEquipStrongQualityRsp::DragonSoulEquipStrongQualityRsp(const DragonSoulEquipStrongQualityRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void DragonSoulEquipStrongQualityRsp::SharedCtor() {
  _cached_size_ = 0;
  hole_pos_ = 0;
  ret_code_ = 0;
  data_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DragonSoulEquipStrongQualityRsp::~DragonSoulEquipStrongQualityRsp() {
  SharedDtor();
}

void DragonSoulEquipStrongQualityRsp::SharedDtor() {
  if (this != default_instance_) {
    delete data_;
  }
}

void DragonSoulEquipStrongQualityRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DragonSoulEquipStrongQualityRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DragonSoulEquipStrongQualityRsp_descriptor_;
}

const DragonSoulEquipStrongQualityRsp& DragonSoulEquipStrongQualityRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_DragonSoul_2eproto();
  return *default_instance_;
}

DragonSoulEquipStrongQualityRsp* DragonSoulEquipStrongQualityRsp::default_instance_ = NULL;

DragonSoulEquipStrongQualityRsp* DragonSoulEquipStrongQualityRsp::New() const {
  return new DragonSoulEquipStrongQualityRsp;
}

void DragonSoulEquipStrongQualityRsp::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    hole_pos_ = 0;
    ret_code_ = 0;
    if (has_data()) {
      if (data_ != NULL) data_->::proto_ff::DragonSoulHoleData::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool DragonSoulEquipStrongQualityRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 hole_pos = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &hole_pos_)));
          set_has_hole_pos();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_ret_code;
        break;
      }

      // optional int32 ret_code = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_ret_code:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ret_code_)));
          set_has_ret_code();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_data;
        break;
      }

      // optional .proto_ff.DragonSoulHoleData data = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_data:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_data()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void DragonSoulEquipStrongQualityRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 hole_pos = 1;
  if (has_hole_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->hole_pos(), output);
  }

  // optional int32 ret_code = 2;
  if (has_ret_code()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->ret_code(), output);
  }

  // optional .proto_ff.DragonSoulHoleData data = 3;
  if (has_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->data(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* DragonSoulEquipStrongQualityRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 hole_pos = 1;
  if (has_hole_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->hole_pos(), target);
  }

  // optional int32 ret_code = 2;
  if (has_ret_code()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->ret_code(), target);
  }

  // optional .proto_ff.DragonSoulHoleData data = 3;
  if (has_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->data(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int DragonSoulEquipStrongQualityRsp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 hole_pos = 1;
    if (has_hole_pos()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->hole_pos());
    }

    // optional int32 ret_code = 2;
    if (has_ret_code()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->ret_code());
    }

    // optional .proto_ff.DragonSoulHoleData data = 3;
    if (has_data()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->data());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DragonSoulEquipStrongQualityRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const DragonSoulEquipStrongQualityRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const DragonSoulEquipStrongQualityRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void DragonSoulEquipStrongQualityRsp::MergeFrom(const DragonSoulEquipStrongQualityRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_hole_pos()) {
      set_hole_pos(from.hole_pos());
    }
    if (from.has_ret_code()) {
      set_ret_code(from.ret_code());
    }
    if (from.has_data()) {
      mutable_data()->::proto_ff::DragonSoulHoleData::MergeFrom(from.data());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void DragonSoulEquipStrongQualityRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DragonSoulEquipStrongQualityRsp::CopyFrom(const DragonSoulEquipStrongQualityRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DragonSoulEquipStrongQualityRsp::IsInitialized() const {

  if (has_data()) {
    if (!this->data().IsInitialized()) return false;
  }
  return true;
}

void DragonSoulEquipStrongQualityRsp::Swap(DragonSoulEquipStrongQualityRsp* other) {
  if (other != this) {
    std::swap(hole_pos_, other->hole_pos_);
    std::swap(ret_code_, other->ret_code_);
    std::swap(data_, other->data_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata DragonSoulEquipStrongQualityRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DragonSoulEquipStrongQualityRsp_descriptor_;
  metadata.reflection = DragonSoulEquipStrongQualityRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int DragonSoulEquipWakeLvReq::kHolePosFieldNumber;
#endif  // !_MSC_VER

DragonSoulEquipWakeLvReq::DragonSoulEquipWakeLvReq()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void DragonSoulEquipWakeLvReq::InitAsDefaultInstance() {
}

DragonSoulEquipWakeLvReq::DragonSoulEquipWakeLvReq(const DragonSoulEquipWakeLvReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void DragonSoulEquipWakeLvReq::SharedCtor() {
  _cached_size_ = 0;
  hole_pos_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DragonSoulEquipWakeLvReq::~DragonSoulEquipWakeLvReq() {
  SharedDtor();
}

void DragonSoulEquipWakeLvReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void DragonSoulEquipWakeLvReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DragonSoulEquipWakeLvReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DragonSoulEquipWakeLvReq_descriptor_;
}

const DragonSoulEquipWakeLvReq& DragonSoulEquipWakeLvReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_DragonSoul_2eproto();
  return *default_instance_;
}

DragonSoulEquipWakeLvReq* DragonSoulEquipWakeLvReq::default_instance_ = NULL;

DragonSoulEquipWakeLvReq* DragonSoulEquipWakeLvReq::New() const {
  return new DragonSoulEquipWakeLvReq;
}

void DragonSoulEquipWakeLvReq::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    hole_pos_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool DragonSoulEquipWakeLvReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 hole_pos = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &hole_pos_)));
          set_has_hole_pos();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void DragonSoulEquipWakeLvReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 hole_pos = 1;
  if (has_hole_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->hole_pos(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* DragonSoulEquipWakeLvReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 hole_pos = 1;
  if (has_hole_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->hole_pos(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int DragonSoulEquipWakeLvReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 hole_pos = 1;
    if (has_hole_pos()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->hole_pos());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DragonSoulEquipWakeLvReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const DragonSoulEquipWakeLvReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const DragonSoulEquipWakeLvReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void DragonSoulEquipWakeLvReq::MergeFrom(const DragonSoulEquipWakeLvReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_hole_pos()) {
      set_hole_pos(from.hole_pos());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void DragonSoulEquipWakeLvReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DragonSoulEquipWakeLvReq::CopyFrom(const DragonSoulEquipWakeLvReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DragonSoulEquipWakeLvReq::IsInitialized() const {

  return true;
}

void DragonSoulEquipWakeLvReq::Swap(DragonSoulEquipWakeLvReq* other) {
  if (other != this) {
    std::swap(hole_pos_, other->hole_pos_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata DragonSoulEquipWakeLvReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DragonSoulEquipWakeLvReq_descriptor_;
  metadata.reflection = DragonSoulEquipWakeLvReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int DragonSoulEquipWakeLvRsp::kHolePosFieldNumber;
const int DragonSoulEquipWakeLvRsp::kRetCodeFieldNumber;
const int DragonSoulEquipWakeLvRsp::kDataFieldNumber;
#endif  // !_MSC_VER

DragonSoulEquipWakeLvRsp::DragonSoulEquipWakeLvRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void DragonSoulEquipWakeLvRsp::InitAsDefaultInstance() {
  data_ = const_cast< ::proto_ff::DragonSoulHoleData*>(&::proto_ff::DragonSoulHoleData::default_instance());
}

DragonSoulEquipWakeLvRsp::DragonSoulEquipWakeLvRsp(const DragonSoulEquipWakeLvRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void DragonSoulEquipWakeLvRsp::SharedCtor() {
  _cached_size_ = 0;
  hole_pos_ = 0;
  ret_code_ = 0;
  data_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DragonSoulEquipWakeLvRsp::~DragonSoulEquipWakeLvRsp() {
  SharedDtor();
}

void DragonSoulEquipWakeLvRsp::SharedDtor() {
  if (this != default_instance_) {
    delete data_;
  }
}

void DragonSoulEquipWakeLvRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DragonSoulEquipWakeLvRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DragonSoulEquipWakeLvRsp_descriptor_;
}

const DragonSoulEquipWakeLvRsp& DragonSoulEquipWakeLvRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_DragonSoul_2eproto();
  return *default_instance_;
}

DragonSoulEquipWakeLvRsp* DragonSoulEquipWakeLvRsp::default_instance_ = NULL;

DragonSoulEquipWakeLvRsp* DragonSoulEquipWakeLvRsp::New() const {
  return new DragonSoulEquipWakeLvRsp;
}

void DragonSoulEquipWakeLvRsp::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    hole_pos_ = 0;
    ret_code_ = 0;
    if (has_data()) {
      if (data_ != NULL) data_->::proto_ff::DragonSoulHoleData::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool DragonSoulEquipWakeLvRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 hole_pos = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &hole_pos_)));
          set_has_hole_pos();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_ret_code;
        break;
      }

      // optional int32 ret_code = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_ret_code:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ret_code_)));
          set_has_ret_code();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_data;
        break;
      }

      // optional .proto_ff.DragonSoulHoleData data = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_data:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_data()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void DragonSoulEquipWakeLvRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 hole_pos = 1;
  if (has_hole_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->hole_pos(), output);
  }

  // optional int32 ret_code = 2;
  if (has_ret_code()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->ret_code(), output);
  }

  // optional .proto_ff.DragonSoulHoleData data = 3;
  if (has_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->data(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* DragonSoulEquipWakeLvRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 hole_pos = 1;
  if (has_hole_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->hole_pos(), target);
  }

  // optional int32 ret_code = 2;
  if (has_ret_code()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->ret_code(), target);
  }

  // optional .proto_ff.DragonSoulHoleData data = 3;
  if (has_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->data(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int DragonSoulEquipWakeLvRsp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 hole_pos = 1;
    if (has_hole_pos()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->hole_pos());
    }

    // optional int32 ret_code = 2;
    if (has_ret_code()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->ret_code());
    }

    // optional .proto_ff.DragonSoulHoleData data = 3;
    if (has_data()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->data());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DragonSoulEquipWakeLvRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const DragonSoulEquipWakeLvRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const DragonSoulEquipWakeLvRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void DragonSoulEquipWakeLvRsp::MergeFrom(const DragonSoulEquipWakeLvRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_hole_pos()) {
      set_hole_pos(from.hole_pos());
    }
    if (from.has_ret_code()) {
      set_ret_code(from.ret_code());
    }
    if (from.has_data()) {
      mutable_data()->::proto_ff::DragonSoulHoleData::MergeFrom(from.data());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void DragonSoulEquipWakeLvRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DragonSoulEquipWakeLvRsp::CopyFrom(const DragonSoulEquipWakeLvRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DragonSoulEquipWakeLvRsp::IsInitialized() const {

  if (has_data()) {
    if (!this->data().IsInitialized()) return false;
  }
  return true;
}

void DragonSoulEquipWakeLvRsp::Swap(DragonSoulEquipWakeLvRsp* other) {
  if (other != this) {
    std::swap(hole_pos_, other->hole_pos_);
    std::swap(ret_code_, other->ret_code_);
    std::swap(data_, other->data_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata DragonSoulEquipWakeLvRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DragonSoulEquipWakeLvRsp_descriptor_;
  metadata.reflection = DragonSoulEquipWakeLvRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

DragonSoulEquipStarInfoReq::DragonSoulEquipStarInfoReq()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void DragonSoulEquipStarInfoReq::InitAsDefaultInstance() {
}

DragonSoulEquipStarInfoReq::DragonSoulEquipStarInfoReq(const DragonSoulEquipStarInfoReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void DragonSoulEquipStarInfoReq::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DragonSoulEquipStarInfoReq::~DragonSoulEquipStarInfoReq() {
  SharedDtor();
}

void DragonSoulEquipStarInfoReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void DragonSoulEquipStarInfoReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DragonSoulEquipStarInfoReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DragonSoulEquipStarInfoReq_descriptor_;
}

const DragonSoulEquipStarInfoReq& DragonSoulEquipStarInfoReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_DragonSoul_2eproto();
  return *default_instance_;
}

DragonSoulEquipStarInfoReq* DragonSoulEquipStarInfoReq::default_instance_ = NULL;

DragonSoulEquipStarInfoReq* DragonSoulEquipStarInfoReq::New() const {
  return new DragonSoulEquipStarInfoReq;
}

void DragonSoulEquipStarInfoReq::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool DragonSoulEquipStarInfoReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void DragonSoulEquipStarInfoReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* DragonSoulEquipStarInfoReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int DragonSoulEquipStarInfoReq::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DragonSoulEquipStarInfoReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const DragonSoulEquipStarInfoReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const DragonSoulEquipStarInfoReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void DragonSoulEquipStarInfoReq::MergeFrom(const DragonSoulEquipStarInfoReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void DragonSoulEquipStarInfoReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DragonSoulEquipStarInfoReq::CopyFrom(const DragonSoulEquipStarInfoReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DragonSoulEquipStarInfoReq::IsInitialized() const {

  return true;
}

void DragonSoulEquipStarInfoReq::Swap(DragonSoulEquipStarInfoReq* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata DragonSoulEquipStarInfoReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DragonSoulEquipStarInfoReq_descriptor_;
  metadata.reflection = DragonSoulEquipStarInfoReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int DragonSoulEquipStarInfoRsp::kStarFieldNumber;
#endif  // !_MSC_VER

DragonSoulEquipStarInfoRsp::DragonSoulEquipStarInfoRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void DragonSoulEquipStarInfoRsp::InitAsDefaultInstance() {
}

DragonSoulEquipStarInfoRsp::DragonSoulEquipStarInfoRsp(const DragonSoulEquipStarInfoRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void DragonSoulEquipStarInfoRsp::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DragonSoulEquipStarInfoRsp::~DragonSoulEquipStarInfoRsp() {
  SharedDtor();
}

void DragonSoulEquipStarInfoRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void DragonSoulEquipStarInfoRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DragonSoulEquipStarInfoRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DragonSoulEquipStarInfoRsp_descriptor_;
}

const DragonSoulEquipStarInfoRsp& DragonSoulEquipStarInfoRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_DragonSoul_2eproto();
  return *default_instance_;
}

DragonSoulEquipStarInfoRsp* DragonSoulEquipStarInfoRsp::default_instance_ = NULL;

DragonSoulEquipStarInfoRsp* DragonSoulEquipStarInfoRsp::New() const {
  return new DragonSoulEquipStarInfoRsp;
}

void DragonSoulEquipStarInfoRsp::Clear() {
  star_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool DragonSoulEquipStarInfoRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.DragonSoulStar star = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_star:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_star()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_star;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void DragonSoulEquipStarInfoRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.DragonSoulStar star = 1;
  for (int i = 0; i < this->star_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->star(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* DragonSoulEquipStarInfoRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.DragonSoulStar star = 1;
  for (int i = 0; i < this->star_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->star(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int DragonSoulEquipStarInfoRsp::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.DragonSoulStar star = 1;
  total_size += 1 * this->star_size();
  for (int i = 0; i < this->star_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->star(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DragonSoulEquipStarInfoRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const DragonSoulEquipStarInfoRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const DragonSoulEquipStarInfoRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void DragonSoulEquipStarInfoRsp::MergeFrom(const DragonSoulEquipStarInfoRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  star_.MergeFrom(from.star_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void DragonSoulEquipStarInfoRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DragonSoulEquipStarInfoRsp::CopyFrom(const DragonSoulEquipStarInfoRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DragonSoulEquipStarInfoRsp::IsInitialized() const {

  return true;
}

void DragonSoulEquipStarInfoRsp::Swap(DragonSoulEquipStarInfoRsp* other) {
  if (other != this) {
    star_.Swap(&other->star_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata DragonSoulEquipStarInfoRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DragonSoulEquipStarInfoRsp_descriptor_;
  metadata.reflection = DragonSoulEquipStarInfoRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int DragonSoulEquipStarActiveReq::kIdFieldNumber;
#endif  // !_MSC_VER

DragonSoulEquipStarActiveReq::DragonSoulEquipStarActiveReq()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void DragonSoulEquipStarActiveReq::InitAsDefaultInstance() {
}

DragonSoulEquipStarActiveReq::DragonSoulEquipStarActiveReq(const DragonSoulEquipStarActiveReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void DragonSoulEquipStarActiveReq::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DragonSoulEquipStarActiveReq::~DragonSoulEquipStarActiveReq() {
  SharedDtor();
}

void DragonSoulEquipStarActiveReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void DragonSoulEquipStarActiveReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DragonSoulEquipStarActiveReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DragonSoulEquipStarActiveReq_descriptor_;
}

const DragonSoulEquipStarActiveReq& DragonSoulEquipStarActiveReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_DragonSoul_2eproto();
  return *default_instance_;
}

DragonSoulEquipStarActiveReq* DragonSoulEquipStarActiveReq::default_instance_ = NULL;

DragonSoulEquipStarActiveReq* DragonSoulEquipStarActiveReq::New() const {
  return new DragonSoulEquipStarActiveReq;
}

void DragonSoulEquipStarActiveReq::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool DragonSoulEquipStarActiveReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void DragonSoulEquipStarActiveReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* DragonSoulEquipStarActiveReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int DragonSoulEquipStarActiveReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->id());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DragonSoulEquipStarActiveReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const DragonSoulEquipStarActiveReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const DragonSoulEquipStarActiveReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void DragonSoulEquipStarActiveReq::MergeFrom(const DragonSoulEquipStarActiveReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void DragonSoulEquipStarActiveReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DragonSoulEquipStarActiveReq::CopyFrom(const DragonSoulEquipStarActiveReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DragonSoulEquipStarActiveReq::IsInitialized() const {

  return true;
}

void DragonSoulEquipStarActiveReq::Swap(DragonSoulEquipStarActiveReq* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata DragonSoulEquipStarActiveReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DragonSoulEquipStarActiveReq_descriptor_;
  metadata.reflection = DragonSoulEquipStarActiveReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int DragonSoulEquipStarActiveRsp::kRetCodeFieldNumber;
const int DragonSoulEquipStarActiveRsp::kIdFieldNumber;
#endif  // !_MSC_VER

DragonSoulEquipStarActiveRsp::DragonSoulEquipStarActiveRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void DragonSoulEquipStarActiveRsp::InitAsDefaultInstance() {
}

DragonSoulEquipStarActiveRsp::DragonSoulEquipStarActiveRsp(const DragonSoulEquipStarActiveRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void DragonSoulEquipStarActiveRsp::SharedCtor() {
  _cached_size_ = 0;
  ret_code_ = 0;
  id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DragonSoulEquipStarActiveRsp::~DragonSoulEquipStarActiveRsp() {
  SharedDtor();
}

void DragonSoulEquipStarActiveRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void DragonSoulEquipStarActiveRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DragonSoulEquipStarActiveRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DragonSoulEquipStarActiveRsp_descriptor_;
}

const DragonSoulEquipStarActiveRsp& DragonSoulEquipStarActiveRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_DragonSoul_2eproto();
  return *default_instance_;
}

DragonSoulEquipStarActiveRsp* DragonSoulEquipStarActiveRsp::default_instance_ = NULL;

DragonSoulEquipStarActiveRsp* DragonSoulEquipStarActiveRsp::New() const {
  return new DragonSoulEquipStarActiveRsp;
}

void DragonSoulEquipStarActiveRsp::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    ret_code_ = 0;
    id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool DragonSoulEquipStarActiveRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 ret_code = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ret_code_)));
          set_has_ret_code();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_id;
        break;
      }

      // optional int32 id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void DragonSoulEquipStarActiveRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 ret_code = 1;
  if (has_ret_code()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->ret_code(), output);
  }

  // optional int32 id = 2;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* DragonSoulEquipStarActiveRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 ret_code = 1;
  if (has_ret_code()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->ret_code(), target);
  }

  // optional int32 id = 2;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int DragonSoulEquipStarActiveRsp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 ret_code = 1;
    if (has_ret_code()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->ret_code());
    }

    // optional int32 id = 2;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->id());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DragonSoulEquipStarActiveRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const DragonSoulEquipStarActiveRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const DragonSoulEquipStarActiveRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void DragonSoulEquipStarActiveRsp::MergeFrom(const DragonSoulEquipStarActiveRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_ret_code()) {
      set_ret_code(from.ret_code());
    }
    if (from.has_id()) {
      set_id(from.id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void DragonSoulEquipStarActiveRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DragonSoulEquipStarActiveRsp::CopyFrom(const DragonSoulEquipStarActiveRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DragonSoulEquipStarActiveRsp::IsInitialized() const {

  return true;
}

void DragonSoulEquipStarActiveRsp::Swap(DragonSoulEquipStarActiveRsp* other) {
  if (other != this) {
    std::swap(ret_code_, other->ret_code_);
    std::swap(id_, other->id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata DragonSoulEquipStarActiveRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DragonSoulEquipStarActiveRsp_descriptor_;
  metadata.reflection = DragonSoulEquipStarActiveRsp_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto_ff

// @@protoc_insertion_point(global_scope)
