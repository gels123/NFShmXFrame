// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: E_Boss.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "E_Boss.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace proto_ff {

namespace {

const ::google::protobuf::Descriptor* E_BossRareitem_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_BossRareitem_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_BossRareitem_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_BossRareitem_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_BossBoss_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_BossBoss_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_BossBoss_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_BossBoss_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_BossBosstypeGroupDesc_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_BossBosstypeGroupDesc_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_BossBosstype_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_BossBosstype_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_BossBosstype_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_BossBosstype_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_BossLayer_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_BossLayer_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_BossLayer_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_BossLayer_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_E_5fBoss_2eproto() {
  protobuf_AddDesc_E_5fBoss_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "E_Boss.proto");
  GOOGLE_CHECK(file != NULL);
  E_BossRareitem_descriptor_ = file->message_type(0);
  static const int E_BossRareitem_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_BossRareitem, m_itemid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_BossRareitem, m_top_),
  };
  E_BossRareitem_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_BossRareitem_descriptor_,
      E_BossRareitem::default_instance_,
      E_BossRareitem_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_BossRareitem, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_BossRareitem, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_BossRareitem));
  Sheet_BossRareitem_descriptor_ = file->message_type(1);
  static const int Sheet_BossRareitem_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_BossRareitem, e_bossrareitem_list_),
  };
  Sheet_BossRareitem_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_BossRareitem_descriptor_,
      Sheet_BossRareitem::default_instance_,
      Sheet_BossRareitem_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_BossRareitem, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_BossRareitem, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_BossRareitem));
  E_BossBoss_descriptor_ = file->message_type(2);
  static const int E_BossBoss_offsets_[16] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_BossBoss, m_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_BossBoss, m_bosstype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_BossBoss, m_monsterid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_BossBoss, m_classorder_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_BossBoss, m_sceneorder_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_BossBoss, m_duplicateid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_BossBoss, m_peacemask_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_BossBoss, m_pointid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_BossBoss, m_flashnum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_BossBoss, m_group_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_BossBoss, m_ishide_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_BossBoss, m_triggerpro_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_BossBoss, m_flashtime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_BossBoss, m_retrievegiftid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_BossBoss, m_notimes_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_BossBoss, m_assistprestige_),
  };
  E_BossBoss_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_BossBoss_descriptor_,
      E_BossBoss::default_instance_,
      E_BossBoss_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_BossBoss, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_BossBoss, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_BossBoss));
  Sheet_BossBoss_descriptor_ = file->message_type(3);
  static const int Sheet_BossBoss_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_BossBoss, e_bossboss_list_),
  };
  Sheet_BossBoss_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_BossBoss_descriptor_,
      Sheet_BossBoss::default_instance_,
      Sheet_BossBoss_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_BossBoss, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_BossBoss, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_BossBoss));
  E_BossBosstypeGroupDesc_descriptor_ = file->message_type(4);
  static const int E_BossBosstypeGroupDesc_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_BossBosstypeGroupDesc, m_times_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_BossBosstypeGroupDesc, m_type_),
  };
  E_BossBosstypeGroupDesc_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_BossBosstypeGroupDesc_descriptor_,
      E_BossBosstypeGroupDesc::default_instance_,
      E_BossBosstypeGroupDesc_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_BossBosstypeGroupDesc, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_BossBosstypeGroupDesc, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_BossBosstypeGroupDesc));
  E_BossBosstype_descriptor_ = file->message_type(5);
  static const int E_BossBosstype_offsets_[16] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_BossBosstype, m_bosstype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_BossBosstype, m_maptype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_BossBosstype, m_functionid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_BossBosstype, m_duplicategroupid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_BossBosstype, m_privilegetype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_BossBosstype, m_callingcardid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_BossBosstype, m_entertimes_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_BossBosstype, m_costitem_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_BossBosstype, m_costnum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_BossBosstype, m_bosstimes_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_BossBosstype, m_additemid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_BossBosstype, m_canhelp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_BossBosstype, m_qkill_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_BossBosstype, m_retrieveddays_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_BossBosstype, m_skill_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_BossBosstype, m_group_),
  };
  E_BossBosstype_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_BossBosstype_descriptor_,
      E_BossBosstype::default_instance_,
      E_BossBosstype_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_BossBosstype, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_BossBosstype, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_BossBosstype));
  Sheet_BossBosstype_descriptor_ = file->message_type(6);
  static const int Sheet_BossBosstype_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_BossBosstype, e_bossbosstype_list_),
  };
  Sheet_BossBosstype_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_BossBosstype_descriptor_,
      Sheet_BossBosstype::default_instance_,
      Sheet_BossBosstype_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_BossBosstype, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_BossBosstype, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_BossBosstype));
  E_BossLayer_descriptor_ = file->message_type(7);
  static const int E_BossLayer_offsets_[9] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_BossLayer, m_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_BossLayer, m_bosstype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_BossLayer, m_order_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_BossLayer, m_subtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_BossLayer, m_entercondition_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_BossLayer, m_unlockcondition_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_BossLayer, m_mapid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_BossLayer, m_maxlv_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_BossLayer, m_unlimit_),
  };
  E_BossLayer_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_BossLayer_descriptor_,
      E_BossLayer::default_instance_,
      E_BossLayer_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_BossLayer, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_BossLayer, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_BossLayer));
  Sheet_BossLayer_descriptor_ = file->message_type(8);
  static const int Sheet_BossLayer_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_BossLayer, e_bosslayer_list_),
  };
  Sheet_BossLayer_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_BossLayer_descriptor_,
      Sheet_BossLayer::default_instance_,
      Sheet_BossLayer_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_BossLayer, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_BossLayer, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_BossLayer));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_E_5fBoss_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_BossRareitem_descriptor_, &E_BossRareitem::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_BossRareitem_descriptor_, &Sheet_BossRareitem::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_BossBoss_descriptor_, &E_BossBoss::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_BossBoss_descriptor_, &Sheet_BossBoss::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_BossBosstypeGroupDesc_descriptor_, &E_BossBosstypeGroupDesc::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_BossBosstype_descriptor_, &E_BossBosstype::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_BossBosstype_descriptor_, &Sheet_BossBosstype::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_BossLayer_descriptor_, &E_BossLayer::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_BossLayer_descriptor_, &Sheet_BossLayer::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_E_5fBoss_2eproto() {
  delete E_BossRareitem::default_instance_;
  delete E_BossRareitem_reflection_;
  delete Sheet_BossRareitem::default_instance_;
  delete Sheet_BossRareitem_reflection_;
  delete E_BossBoss::default_instance_;
  delete E_BossBoss_reflection_;
  delete Sheet_BossBoss::default_instance_;
  delete Sheet_BossBoss_reflection_;
  delete E_BossBosstypeGroupDesc::default_instance_;
  delete E_BossBosstypeGroupDesc_reflection_;
  delete E_BossBosstype::default_instance_;
  delete E_BossBosstype_reflection_;
  delete Sheet_BossBosstype::default_instance_;
  delete Sheet_BossBosstype_reflection_;
  delete E_BossLayer::default_instance_;
  delete E_BossLayer_reflection_;
  delete Sheet_BossLayer::default_instance_;
  delete Sheet_BossLayer_reflection_;
}

void protobuf_AddDesc_E_5fBoss_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::yd_fieldoptions::protobuf_AddDesc_yd_5ffieldoptions_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\014E_Boss.proto\022\010proto_ff\032\025yd_fieldoption"
    "s.proto\"Q\n\016E_BossRareitem\022\036\n\010m_itemID\030\001 "
    "\001(\003B\014\302\377\024\010\347\211\251\345\223\201ID\022\037\n\005m_top\030\002 \001(\005B\020\302\377\024\014\346\230"
    "\257\345\220\246\347\275\256\351\241\266\"R\n\022Sheet_BossRareitem\022<\n\023E_Bo"
    "ssRareitem_List\030\001 \003(\0132\030.proto_ff.E_BossR"
    "areitemB\005\210\301\024\200\010\"\212\005\n\nE_BossBoss\022\030\n\004m_id\030\001 "
    "\001(\005B\n\302\377\024\006bossID\022\"\n\nm_bossType\030\002 \001(\005B\016\302\377\024"
    "\nBOSS\347\261\273\345\236\213\022!\n\013m_monsterID\030\003 \001(\005B\014\302\377\024\010\346\200"
    "\252\347\211\251ID\022 \n\014m_classOrder\030\004 \001(\005B\n\302\377\024\006\351\230\266\346\254\241"
    "\022&\n\014m_sceneOrder\030\005 \001(\005B\020\302\377\024\014\346\211\200\345\261\236\345\261\202\347\272\247"
    "\022#\n\rm_duplicateID\030\006 \001(\005B\014\302\377\024\010\345\211\257\346\234\254ID\022%\n"
    "\013m_peaceMask\030\007 \001(\005B\020\302\377\024\014\345\222\214\345\271\263\346\240\207\350\256\260\022 \n\t"
    "m_pointID\030\010 \001(\005B\r\302\377\024\t\344\275\215\347\275\256\347\202\271\022$\n\nm_flas"
    "hNum\030\t \001(\005B\020\302\377\024\014\345\210\267\346\226\260\346\225\260\351\207\217\022#\n\014m_group_"
    "type\030\n \001(\005B\r\302\377\024\t\347\273\204\347\261\273\345\236\213\022)\n\010m_ishide\030\013 "
    "\001(\005B\027\302\377\024\023\346\230\257\345\220\246\346\230\257\351\232\220\350\227\217boss\022/\n\014m_trigge"
    "rPro\030\014 \001(\005B\031\302\377\024\025\350\247\246\345\217\221\351\232\220\350\227\217\347\232\204\346\246\202\347\216\207\022%\n"
    "\013m_flashTime\030\r \001(\005B\020\302\377\024\014\345\210\267\346\226\260\351\227\264\351\232\224\022,\n\020"
    "m_retrieveGiftID\030\016 \001(\005B\022\302\377\024\016\346\211\276\345\233\236\347\244\274\345\214\205"
    "id\022,\n\tm_noTimes\030\017 \001(\005B\031\302\377\024\025\346\230\257\345\220\246\344\270\215\346\266\210\350"
    "\200\227\346\254\241\346\225\260\0229\n\020m_assistPrestige\030\020 \001(\005B\037\302\377\024\033"
    "\345\215\217\345\212\251\345\207\273\346\235\200\345\245\226\345\212\261\347\232\204\345\243\260\346\234\233\"F\n\016Sheet_Bos"
    "sBoss\0224\n\017E_BossBoss_List\030\001 \003(\0132\024.proto_f"
    "f.E_BossBossB\005\210\301\024\200\010\"R\n\027E_BossBosstypeGro"
    "upDesc\022\033\n\007m_times\030\001 \001(\005B\n\302\377\024\006\346\254\241\346\225\260\022\032\n\006m"
    "_type\030\002 \001(\005B\n\302\377\024\006\347\261\273\345\236\213\"\324\005\n\016E_BossBossty"
    "pe\022!\n\nm_bossType\030\001 \001(\005B\r\302\377\024\t\346\200\273\347\261\273\345\236\213\022#\n"
    "\tm_mapType\030\002 \001(\005B\020\302\377\024\014\345\234\260\345\233\276\347\261\273\345\236\213\022(\n\014m_"
    "functionId\030\003 \001(\005B\022\302\377\024\016\345\212\237\350\203\275\350\247\243\351\224\201ID\022+\n\022"
    "m_duplicateGroupID\030\004 \001(\005B\017\302\377\024\013\345\211\257\346\234\254\347\273\204I"
    "D\022)\n\017m_privilegeType\030\005 \001(\005B\020\302\377\024\014\347\211\271\346\235\203\347\261"
    "\273\345\236\213\022(\n\017m_callingCardId\030\006 \001(\003B\017\302\377\024\013\345\217\254\345\224"
    "\244\345\215\241id\022&\n\014m_enterTimes\030\007 \001(\005B\020\302\377\024\014\350\277\233\345\205\245"
    "\346\254\241\346\225\260\022*\n\nm_costitem\030\010 \001(\005B\026\302\377\024\022\350\277\233\345\205\245\346\266"
    "\210\350\200\227\347\211\251\345\223\201\0223\n\tm_costnum\030\t \001(\tB \302\377\024\030\350\277\233\345\205"
    "\245\346\266\210\350\200\227\347\211\251\345\223\201\346\225\260\351\207\217\220\301\024@\022#\n\013m_bossTimes\030\n"
    " \001(\005B\016\302\377\024\nboss\346\254\241\346\225\260\022-\n\013m_addItemID\030\013 \001("
    "\005B\030\302\377\024\024\345\242\236\345\212\240\346\254\241\346\225\260\347\211\251\345\223\201ID\022)\n\tm_canhelp"
    "\030\014 \001(\005B\026\302\377\024\022\346\230\257\345\220\246\345\217\257\344\273\245\346\217\264\345\212\251\022-\n\007m_qkil"
    "l\030\r \001(\005B\034\302\377\024\030\346\230\257\345\220\246\346\224\257\346\214\201\345\277\253\351\200\237\345\207\273\346\235\200\022)\n"
    "\017m_retrievedDays\030\016 \001(\005B\020\302\377\024\014\346\211\276\345\233\236\345\244\251\346\225\260"
    "\022\'\n\007m_skill\030\017 \001(\005B\026\302\377\024\022\347\272\263\345\205\245\345\205\250\346\234\215\351\246\226\346\235"
    "\200\022C\n\007m_group\030\020 \003(\0132!.proto_ff.E_BossBoss"
    "typeGroupDescB\017\302\377\024\007Boss\347\273\204\210\301\024\003\"Q\n\022Sheet_"
    "BossBosstype\022;\n\023E_BossBosstype_List\030\001 \003("
    "\0132\030.proto_ff.E_BossBosstypeB\004\210\301\024\020\"\323\002\n\013E_"
    "BossLayer\022\024\n\004m_ID\030\001 \001(\005B\006\302\377\024\002id\022\036\n\nm_bos"
    "sType\030\002 \001(\005B\n\302\377\024\006\347\261\273\345\236\213\022\033\n\007m_order\030\003 \001(\005"
    "B\n\302\377\024\006\346\216\222\345\272\217\022\035\n\tm_subType\030\004 \001(\005B\n\302\377\024\006\347\261\273"
    "\345\236\213\022.\n\020m_enterCondition\030\005 \001(\tB\024\302\377\024\014\350\277\233\345\205"
    "\245\346\235\241\344\273\266\220\301\024@\022/\n\021m_unlockCondition\030\006 \001(\tB\024"
    "\302\377\024\014\350\247\243\351\224\201\346\235\241\344\273\266\220\301\024@\022\035\n\007m_mapID\030\007 \001(\005B\014\302"
    "\377\024\010\345\234\260\345\233\276ID\022\'\n\007m_maxlv\030\010 \001(\005B\026\302\377\024\022\346\234\200\345\244\247"
    "\350\277\233\345\205\245\347\255\211\347\272\247\022)\n\tm_unLimit\030\t \001(\005B\026\302\377\024\022\346\230\257"
    "\345\220\246\346\227\240\351\231\220\346\254\241\346\225\260\"H\n\017Sheet_BossLayer\0225\n\020E_"
    "BossLayer_List\030\001 \003(\0132\025.proto_ff.E_BossLa"
    "yerB\004\210\301\024@", 2249);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "E_Boss.proto", &protobuf_RegisterTypes);
  E_BossRareitem::default_instance_ = new E_BossRareitem();
  Sheet_BossRareitem::default_instance_ = new Sheet_BossRareitem();
  E_BossBoss::default_instance_ = new E_BossBoss();
  Sheet_BossBoss::default_instance_ = new Sheet_BossBoss();
  E_BossBosstypeGroupDesc::default_instance_ = new E_BossBosstypeGroupDesc();
  E_BossBosstype::default_instance_ = new E_BossBosstype();
  Sheet_BossBosstype::default_instance_ = new Sheet_BossBosstype();
  E_BossLayer::default_instance_ = new E_BossLayer();
  Sheet_BossLayer::default_instance_ = new Sheet_BossLayer();
  E_BossRareitem::default_instance_->InitAsDefaultInstance();
  Sheet_BossRareitem::default_instance_->InitAsDefaultInstance();
  E_BossBoss::default_instance_->InitAsDefaultInstance();
  Sheet_BossBoss::default_instance_->InitAsDefaultInstance();
  E_BossBosstypeGroupDesc::default_instance_->InitAsDefaultInstance();
  E_BossBosstype::default_instance_->InitAsDefaultInstance();
  Sheet_BossBosstype::default_instance_->InitAsDefaultInstance();
  E_BossLayer::default_instance_->InitAsDefaultInstance();
  Sheet_BossLayer::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_E_5fBoss_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_E_5fBoss_2eproto {
  StaticDescriptorInitializer_E_5fBoss_2eproto() {
    protobuf_AddDesc_E_5fBoss_2eproto();
  }
} static_descriptor_initializer_E_5fBoss_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int E_BossRareitem::kMItemIDFieldNumber;
const int E_BossRareitem::kMTopFieldNumber;
#endif  // !_MSC_VER

E_BossRareitem::E_BossRareitem()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_BossRareitem::InitAsDefaultInstance() {
}

E_BossRareitem::E_BossRareitem(const E_BossRareitem& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_BossRareitem::SharedCtor() {
  _cached_size_ = 0;
  m_itemid_ = GOOGLE_LONGLONG(0);
  m_top_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_BossRareitem::~E_BossRareitem() {
  SharedDtor();
}

void E_BossRareitem::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_BossRareitem::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_BossRareitem::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_BossRareitem_descriptor_;
}

const E_BossRareitem& E_BossRareitem::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fBoss_2eproto();
  return *default_instance_;
}

E_BossRareitem* E_BossRareitem::default_instance_ = NULL;

E_BossRareitem* E_BossRareitem::New() const {
  return new E_BossRareitem;
}

void E_BossRareitem::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_itemid_ = GOOGLE_LONGLONG(0);
    m_top_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_BossRareitem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 m_itemID = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &m_itemid_)));
          set_has_m_itemid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_top;
        break;
      }

      // optional int32 m_top = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_top:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_top_)));
          set_has_m_top();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_BossRareitem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 m_itemID = 1;
  if (has_m_itemid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->m_itemid(), output);
  }

  // optional int32 m_top = 2;
  if (has_m_top()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_top(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_BossRareitem::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 m_itemID = 1;
  if (has_m_itemid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->m_itemid(), target);
  }

  // optional int32 m_top = 2;
  if (has_m_top()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_top(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_BossRareitem::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 m_itemID = 1;
    if (has_m_itemid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->m_itemid());
    }

    // optional int32 m_top = 2;
    if (has_m_top()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_top());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_BossRareitem::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_BossRareitem* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_BossRareitem*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_BossRareitem::MergeFrom(const E_BossRareitem& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_itemid()) {
      set_m_itemid(from.m_itemid());
    }
    if (from.has_m_top()) {
      set_m_top(from.m_top());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_BossRareitem::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_BossRareitem::CopyFrom(const E_BossRareitem& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_BossRareitem::IsInitialized() const {

  return true;
}

void E_BossRareitem::Swap(E_BossRareitem* other) {
  if (other != this) {
    std::swap(m_itemid_, other->m_itemid_);
    std::swap(m_top_, other->m_top_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_BossRareitem::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_BossRareitem_descriptor_;
  metadata.reflection = E_BossRareitem_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_BossRareitem::kEBossRareitemListFieldNumber;
#endif  // !_MSC_VER

Sheet_BossRareitem::Sheet_BossRareitem()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_BossRareitem::InitAsDefaultInstance() {
}

Sheet_BossRareitem::Sheet_BossRareitem(const Sheet_BossRareitem& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_BossRareitem::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_BossRareitem::~Sheet_BossRareitem() {
  SharedDtor();
}

void Sheet_BossRareitem::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_BossRareitem::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_BossRareitem::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_BossRareitem_descriptor_;
}

const Sheet_BossRareitem& Sheet_BossRareitem::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fBoss_2eproto();
  return *default_instance_;
}

Sheet_BossRareitem* Sheet_BossRareitem::default_instance_ = NULL;

Sheet_BossRareitem* Sheet_BossRareitem::New() const {
  return new Sheet_BossRareitem;
}

void Sheet_BossRareitem::Clear() {
  e_bossrareitem_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_BossRareitem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.E_BossRareitem E_BossRareitem_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_E_BossRareitem_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_e_bossrareitem_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_E_BossRareitem_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_BossRareitem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.E_BossRareitem E_BossRareitem_List = 1;
  for (int i = 0; i < this->e_bossrareitem_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->e_bossrareitem_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_BossRareitem::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.E_BossRareitem E_BossRareitem_List = 1;
  for (int i = 0; i < this->e_bossrareitem_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->e_bossrareitem_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_BossRareitem::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.E_BossRareitem E_BossRareitem_List = 1;
  total_size += 1 * this->e_bossrareitem_list_size();
  for (int i = 0; i < this->e_bossrareitem_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->e_bossrareitem_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_BossRareitem::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_BossRareitem* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_BossRareitem*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_BossRareitem::MergeFrom(const Sheet_BossRareitem& from) {
  GOOGLE_CHECK_NE(&from, this);
  e_bossrareitem_list_.MergeFrom(from.e_bossrareitem_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_BossRareitem::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_BossRareitem::CopyFrom(const Sheet_BossRareitem& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_BossRareitem::IsInitialized() const {

  return true;
}

void Sheet_BossRareitem::Swap(Sheet_BossRareitem* other) {
  if (other != this) {
    e_bossrareitem_list_.Swap(&other->e_bossrareitem_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_BossRareitem::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_BossRareitem_descriptor_;
  metadata.reflection = Sheet_BossRareitem_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_BossBoss::kMIdFieldNumber;
const int E_BossBoss::kMBossTypeFieldNumber;
const int E_BossBoss::kMMonsterIDFieldNumber;
const int E_BossBoss::kMClassOrderFieldNumber;
const int E_BossBoss::kMSceneOrderFieldNumber;
const int E_BossBoss::kMDuplicateIDFieldNumber;
const int E_BossBoss::kMPeaceMaskFieldNumber;
const int E_BossBoss::kMPointIDFieldNumber;
const int E_BossBoss::kMFlashNumFieldNumber;
const int E_BossBoss::kMGroupTypeFieldNumber;
const int E_BossBoss::kMIshideFieldNumber;
const int E_BossBoss::kMTriggerProFieldNumber;
const int E_BossBoss::kMFlashTimeFieldNumber;
const int E_BossBoss::kMRetrieveGiftIDFieldNumber;
const int E_BossBoss::kMNoTimesFieldNumber;
const int E_BossBoss::kMAssistPrestigeFieldNumber;
#endif  // !_MSC_VER

E_BossBoss::E_BossBoss()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_BossBoss::InitAsDefaultInstance() {
}

E_BossBoss::E_BossBoss(const E_BossBoss& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_BossBoss::SharedCtor() {
  _cached_size_ = 0;
  m_id_ = 0;
  m_bosstype_ = 0;
  m_monsterid_ = 0;
  m_classorder_ = 0;
  m_sceneorder_ = 0;
  m_duplicateid_ = 0;
  m_peacemask_ = 0;
  m_pointid_ = 0;
  m_flashnum_ = 0;
  m_group_type_ = 0;
  m_ishide_ = 0;
  m_triggerpro_ = 0;
  m_flashtime_ = 0;
  m_retrievegiftid_ = 0;
  m_notimes_ = 0;
  m_assistprestige_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_BossBoss::~E_BossBoss() {
  SharedDtor();
}

void E_BossBoss::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_BossBoss::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_BossBoss::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_BossBoss_descriptor_;
}

const E_BossBoss& E_BossBoss::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fBoss_2eproto();
  return *default_instance_;
}

E_BossBoss* E_BossBoss::default_instance_ = NULL;

E_BossBoss* E_BossBoss::New() const {
  return new E_BossBoss;
}

void E_BossBoss::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_id_ = 0;
    m_bosstype_ = 0;
    m_monsterid_ = 0;
    m_classorder_ = 0;
    m_sceneorder_ = 0;
    m_duplicateid_ = 0;
    m_peacemask_ = 0;
    m_pointid_ = 0;
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    m_flashnum_ = 0;
    m_group_type_ = 0;
    m_ishide_ = 0;
    m_triggerpro_ = 0;
    m_flashtime_ = 0;
    m_retrievegiftid_ = 0;
    m_notimes_ = 0;
    m_assistprestige_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_BossBoss::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_id_)));
          set_has_m_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_bossType;
        break;
      }

      // optional int32 m_bossType = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_bossType:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_bosstype_)));
          set_has_m_bosstype();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_m_monsterID;
        break;
      }

      // optional int32 m_monsterID = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_monsterID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_monsterid_)));
          set_has_m_monsterid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_m_classOrder;
        break;
      }

      // optional int32 m_classOrder = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_classOrder:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_classorder_)));
          set_has_m_classorder();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_m_sceneOrder;
        break;
      }

      // optional int32 m_sceneOrder = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_sceneOrder:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_sceneorder_)));
          set_has_m_sceneorder();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_m_duplicateID;
        break;
      }

      // optional int32 m_duplicateID = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_duplicateID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_duplicateid_)));
          set_has_m_duplicateid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_m_peaceMask;
        break;
      }

      // optional int32 m_peaceMask = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_peaceMask:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_peacemask_)));
          set_has_m_peacemask();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(64)) goto parse_m_pointID;
        break;
      }

      // optional int32 m_pointID = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_pointID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_pointid_)));
          set_has_m_pointid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(72)) goto parse_m_flashNum;
        break;
      }

      // optional int32 m_flashNum = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_flashNum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_flashnum_)));
          set_has_m_flashnum();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(80)) goto parse_m_group_type;
        break;
      }

      // optional int32 m_group_type = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_group_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_group_type_)));
          set_has_m_group_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(88)) goto parse_m_ishide;
        break;
      }

      // optional int32 m_ishide = 11;
      case 11: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_ishide:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_ishide_)));
          set_has_m_ishide();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(96)) goto parse_m_triggerPro;
        break;
      }

      // optional int32 m_triggerPro = 12;
      case 12: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_triggerPro:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_triggerpro_)));
          set_has_m_triggerpro();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(104)) goto parse_m_flashTime;
        break;
      }

      // optional int32 m_flashTime = 13;
      case 13: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_flashTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_flashtime_)));
          set_has_m_flashtime();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(112)) goto parse_m_retrieveGiftID;
        break;
      }

      // optional int32 m_retrieveGiftID = 14;
      case 14: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_retrieveGiftID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_retrievegiftid_)));
          set_has_m_retrievegiftid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(120)) goto parse_m_noTimes;
        break;
      }

      // optional int32 m_noTimes = 15;
      case 15: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_noTimes:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_notimes_)));
          set_has_m_notimes();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(128)) goto parse_m_assistPrestige;
        break;
      }

      // optional int32 m_assistPrestige = 16;
      case 16: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_assistPrestige:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_assistprestige_)));
          set_has_m_assistprestige();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_BossBoss::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_id(), output);
  }

  // optional int32 m_bossType = 2;
  if (has_m_bosstype()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_bosstype(), output);
  }

  // optional int32 m_monsterID = 3;
  if (has_m_monsterid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->m_monsterid(), output);
  }

  // optional int32 m_classOrder = 4;
  if (has_m_classorder()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->m_classorder(), output);
  }

  // optional int32 m_sceneOrder = 5;
  if (has_m_sceneorder()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->m_sceneorder(), output);
  }

  // optional int32 m_duplicateID = 6;
  if (has_m_duplicateid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->m_duplicateid(), output);
  }

  // optional int32 m_peaceMask = 7;
  if (has_m_peacemask()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->m_peacemask(), output);
  }

  // optional int32 m_pointID = 8;
  if (has_m_pointid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->m_pointid(), output);
  }

  // optional int32 m_flashNum = 9;
  if (has_m_flashnum()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->m_flashnum(), output);
  }

  // optional int32 m_group_type = 10;
  if (has_m_group_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->m_group_type(), output);
  }

  // optional int32 m_ishide = 11;
  if (has_m_ishide()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->m_ishide(), output);
  }

  // optional int32 m_triggerPro = 12;
  if (has_m_triggerpro()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(12, this->m_triggerpro(), output);
  }

  // optional int32 m_flashTime = 13;
  if (has_m_flashtime()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(13, this->m_flashtime(), output);
  }

  // optional int32 m_retrieveGiftID = 14;
  if (has_m_retrievegiftid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(14, this->m_retrievegiftid(), output);
  }

  // optional int32 m_noTimes = 15;
  if (has_m_notimes()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(15, this->m_notimes(), output);
  }

  // optional int32 m_assistPrestige = 16;
  if (has_m_assistprestige()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(16, this->m_assistprestige(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_BossBoss::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_id(), target);
  }

  // optional int32 m_bossType = 2;
  if (has_m_bosstype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_bosstype(), target);
  }

  // optional int32 m_monsterID = 3;
  if (has_m_monsterid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->m_monsterid(), target);
  }

  // optional int32 m_classOrder = 4;
  if (has_m_classorder()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->m_classorder(), target);
  }

  // optional int32 m_sceneOrder = 5;
  if (has_m_sceneorder()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->m_sceneorder(), target);
  }

  // optional int32 m_duplicateID = 6;
  if (has_m_duplicateid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->m_duplicateid(), target);
  }

  // optional int32 m_peaceMask = 7;
  if (has_m_peacemask()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->m_peacemask(), target);
  }

  // optional int32 m_pointID = 8;
  if (has_m_pointid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->m_pointid(), target);
  }

  // optional int32 m_flashNum = 9;
  if (has_m_flashnum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->m_flashnum(), target);
  }

  // optional int32 m_group_type = 10;
  if (has_m_group_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->m_group_type(), target);
  }

  // optional int32 m_ishide = 11;
  if (has_m_ishide()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->m_ishide(), target);
  }

  // optional int32 m_triggerPro = 12;
  if (has_m_triggerpro()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(12, this->m_triggerpro(), target);
  }

  // optional int32 m_flashTime = 13;
  if (has_m_flashtime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(13, this->m_flashtime(), target);
  }

  // optional int32 m_retrieveGiftID = 14;
  if (has_m_retrievegiftid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(14, this->m_retrievegiftid(), target);
  }

  // optional int32 m_noTimes = 15;
  if (has_m_notimes()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(15, this->m_notimes(), target);
  }

  // optional int32 m_assistPrestige = 16;
  if (has_m_assistprestige()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(16, this->m_assistprestige(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_BossBoss::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_id = 1;
    if (has_m_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_id());
    }

    // optional int32 m_bossType = 2;
    if (has_m_bosstype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_bosstype());
    }

    // optional int32 m_monsterID = 3;
    if (has_m_monsterid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_monsterid());
    }

    // optional int32 m_classOrder = 4;
    if (has_m_classorder()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_classorder());
    }

    // optional int32 m_sceneOrder = 5;
    if (has_m_sceneorder()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_sceneorder());
    }

    // optional int32 m_duplicateID = 6;
    if (has_m_duplicateid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_duplicateid());
    }

    // optional int32 m_peaceMask = 7;
    if (has_m_peacemask()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_peacemask());
    }

    // optional int32 m_pointID = 8;
    if (has_m_pointid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_pointid());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional int32 m_flashNum = 9;
    if (has_m_flashnum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_flashnum());
    }

    // optional int32 m_group_type = 10;
    if (has_m_group_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_group_type());
    }

    // optional int32 m_ishide = 11;
    if (has_m_ishide()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_ishide());
    }

    // optional int32 m_triggerPro = 12;
    if (has_m_triggerpro()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_triggerpro());
    }

    // optional int32 m_flashTime = 13;
    if (has_m_flashtime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_flashtime());
    }

    // optional int32 m_retrieveGiftID = 14;
    if (has_m_retrievegiftid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_retrievegiftid());
    }

    // optional int32 m_noTimes = 15;
    if (has_m_notimes()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_notimes());
    }

    // optional int32 m_assistPrestige = 16;
    if (has_m_assistprestige()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_assistprestige());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_BossBoss::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_BossBoss* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_BossBoss*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_BossBoss::MergeFrom(const E_BossBoss& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_id()) {
      set_m_id(from.m_id());
    }
    if (from.has_m_bosstype()) {
      set_m_bosstype(from.m_bosstype());
    }
    if (from.has_m_monsterid()) {
      set_m_monsterid(from.m_monsterid());
    }
    if (from.has_m_classorder()) {
      set_m_classorder(from.m_classorder());
    }
    if (from.has_m_sceneorder()) {
      set_m_sceneorder(from.m_sceneorder());
    }
    if (from.has_m_duplicateid()) {
      set_m_duplicateid(from.m_duplicateid());
    }
    if (from.has_m_peacemask()) {
      set_m_peacemask(from.m_peacemask());
    }
    if (from.has_m_pointid()) {
      set_m_pointid(from.m_pointid());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_m_flashnum()) {
      set_m_flashnum(from.m_flashnum());
    }
    if (from.has_m_group_type()) {
      set_m_group_type(from.m_group_type());
    }
    if (from.has_m_ishide()) {
      set_m_ishide(from.m_ishide());
    }
    if (from.has_m_triggerpro()) {
      set_m_triggerpro(from.m_triggerpro());
    }
    if (from.has_m_flashtime()) {
      set_m_flashtime(from.m_flashtime());
    }
    if (from.has_m_retrievegiftid()) {
      set_m_retrievegiftid(from.m_retrievegiftid());
    }
    if (from.has_m_notimes()) {
      set_m_notimes(from.m_notimes());
    }
    if (from.has_m_assistprestige()) {
      set_m_assistprestige(from.m_assistprestige());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_BossBoss::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_BossBoss::CopyFrom(const E_BossBoss& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_BossBoss::IsInitialized() const {

  return true;
}

void E_BossBoss::Swap(E_BossBoss* other) {
  if (other != this) {
    std::swap(m_id_, other->m_id_);
    std::swap(m_bosstype_, other->m_bosstype_);
    std::swap(m_monsterid_, other->m_monsterid_);
    std::swap(m_classorder_, other->m_classorder_);
    std::swap(m_sceneorder_, other->m_sceneorder_);
    std::swap(m_duplicateid_, other->m_duplicateid_);
    std::swap(m_peacemask_, other->m_peacemask_);
    std::swap(m_pointid_, other->m_pointid_);
    std::swap(m_flashnum_, other->m_flashnum_);
    std::swap(m_group_type_, other->m_group_type_);
    std::swap(m_ishide_, other->m_ishide_);
    std::swap(m_triggerpro_, other->m_triggerpro_);
    std::swap(m_flashtime_, other->m_flashtime_);
    std::swap(m_retrievegiftid_, other->m_retrievegiftid_);
    std::swap(m_notimes_, other->m_notimes_);
    std::swap(m_assistprestige_, other->m_assistprestige_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_BossBoss::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_BossBoss_descriptor_;
  metadata.reflection = E_BossBoss_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_BossBoss::kEBossBossListFieldNumber;
#endif  // !_MSC_VER

Sheet_BossBoss::Sheet_BossBoss()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_BossBoss::InitAsDefaultInstance() {
}

Sheet_BossBoss::Sheet_BossBoss(const Sheet_BossBoss& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_BossBoss::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_BossBoss::~Sheet_BossBoss() {
  SharedDtor();
}

void Sheet_BossBoss::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_BossBoss::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_BossBoss::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_BossBoss_descriptor_;
}

const Sheet_BossBoss& Sheet_BossBoss::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fBoss_2eproto();
  return *default_instance_;
}

Sheet_BossBoss* Sheet_BossBoss::default_instance_ = NULL;

Sheet_BossBoss* Sheet_BossBoss::New() const {
  return new Sheet_BossBoss;
}

void Sheet_BossBoss::Clear() {
  e_bossboss_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_BossBoss::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.E_BossBoss E_BossBoss_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_E_BossBoss_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_e_bossboss_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_E_BossBoss_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_BossBoss::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.E_BossBoss E_BossBoss_List = 1;
  for (int i = 0; i < this->e_bossboss_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->e_bossboss_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_BossBoss::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.E_BossBoss E_BossBoss_List = 1;
  for (int i = 0; i < this->e_bossboss_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->e_bossboss_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_BossBoss::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.E_BossBoss E_BossBoss_List = 1;
  total_size += 1 * this->e_bossboss_list_size();
  for (int i = 0; i < this->e_bossboss_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->e_bossboss_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_BossBoss::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_BossBoss* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_BossBoss*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_BossBoss::MergeFrom(const Sheet_BossBoss& from) {
  GOOGLE_CHECK_NE(&from, this);
  e_bossboss_list_.MergeFrom(from.e_bossboss_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_BossBoss::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_BossBoss::CopyFrom(const Sheet_BossBoss& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_BossBoss::IsInitialized() const {

  return true;
}

void Sheet_BossBoss::Swap(Sheet_BossBoss* other) {
  if (other != this) {
    e_bossboss_list_.Swap(&other->e_bossboss_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_BossBoss::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_BossBoss_descriptor_;
  metadata.reflection = Sheet_BossBoss_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_BossBosstypeGroupDesc::kMTimesFieldNumber;
const int E_BossBosstypeGroupDesc::kMTypeFieldNumber;
#endif  // !_MSC_VER

E_BossBosstypeGroupDesc::E_BossBosstypeGroupDesc()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_BossBosstypeGroupDesc::InitAsDefaultInstance() {
}

E_BossBosstypeGroupDesc::E_BossBosstypeGroupDesc(const E_BossBosstypeGroupDesc& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_BossBosstypeGroupDesc::SharedCtor() {
  _cached_size_ = 0;
  m_times_ = 0;
  m_type_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_BossBosstypeGroupDesc::~E_BossBosstypeGroupDesc() {
  SharedDtor();
}

void E_BossBosstypeGroupDesc::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_BossBosstypeGroupDesc::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_BossBosstypeGroupDesc::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_BossBosstypeGroupDesc_descriptor_;
}

const E_BossBosstypeGroupDesc& E_BossBosstypeGroupDesc::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fBoss_2eproto();
  return *default_instance_;
}

E_BossBosstypeGroupDesc* E_BossBosstypeGroupDesc::default_instance_ = NULL;

E_BossBosstypeGroupDesc* E_BossBosstypeGroupDesc::New() const {
  return new E_BossBosstypeGroupDesc;
}

void E_BossBosstypeGroupDesc::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_times_ = 0;
    m_type_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_BossBosstypeGroupDesc::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_times = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_times_)));
          set_has_m_times();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_type;
        break;
      }

      // optional int32 m_type = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_type_)));
          set_has_m_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_BossBosstypeGroupDesc::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_times = 1;
  if (has_m_times()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_times(), output);
  }

  // optional int32 m_type = 2;
  if (has_m_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_type(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_BossBosstypeGroupDesc::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_times = 1;
  if (has_m_times()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_times(), target);
  }

  // optional int32 m_type = 2;
  if (has_m_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_type(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_BossBosstypeGroupDesc::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_times = 1;
    if (has_m_times()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_times());
    }

    // optional int32 m_type = 2;
    if (has_m_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_type());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_BossBosstypeGroupDesc::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_BossBosstypeGroupDesc* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_BossBosstypeGroupDesc*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_BossBosstypeGroupDesc::MergeFrom(const E_BossBosstypeGroupDesc& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_times()) {
      set_m_times(from.m_times());
    }
    if (from.has_m_type()) {
      set_m_type(from.m_type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_BossBosstypeGroupDesc::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_BossBosstypeGroupDesc::CopyFrom(const E_BossBosstypeGroupDesc& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_BossBosstypeGroupDesc::IsInitialized() const {

  return true;
}

void E_BossBosstypeGroupDesc::Swap(E_BossBosstypeGroupDesc* other) {
  if (other != this) {
    std::swap(m_times_, other->m_times_);
    std::swap(m_type_, other->m_type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_BossBosstypeGroupDesc::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_BossBosstypeGroupDesc_descriptor_;
  metadata.reflection = E_BossBosstypeGroupDesc_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_BossBosstype::kMBossTypeFieldNumber;
const int E_BossBosstype::kMMapTypeFieldNumber;
const int E_BossBosstype::kMFunctionIdFieldNumber;
const int E_BossBosstype::kMDuplicateGroupIDFieldNumber;
const int E_BossBosstype::kMPrivilegeTypeFieldNumber;
const int E_BossBosstype::kMCallingCardIdFieldNumber;
const int E_BossBosstype::kMEnterTimesFieldNumber;
const int E_BossBosstype::kMCostitemFieldNumber;
const int E_BossBosstype::kMCostnumFieldNumber;
const int E_BossBosstype::kMBossTimesFieldNumber;
const int E_BossBosstype::kMAddItemIDFieldNumber;
const int E_BossBosstype::kMCanhelpFieldNumber;
const int E_BossBosstype::kMQkillFieldNumber;
const int E_BossBosstype::kMRetrievedDaysFieldNumber;
const int E_BossBosstype::kMSkillFieldNumber;
const int E_BossBosstype::kMGroupFieldNumber;
#endif  // !_MSC_VER

E_BossBosstype::E_BossBosstype()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_BossBosstype::InitAsDefaultInstance() {
}

E_BossBosstype::E_BossBosstype(const E_BossBosstype& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_BossBosstype::SharedCtor() {
  _cached_size_ = 0;
  m_bosstype_ = 0;
  m_maptype_ = 0;
  m_functionid_ = 0;
  m_duplicategroupid_ = 0;
  m_privilegetype_ = 0;
  m_callingcardid_ = GOOGLE_LONGLONG(0);
  m_entertimes_ = 0;
  m_costitem_ = 0;
  m_costnum_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  m_bosstimes_ = 0;
  m_additemid_ = 0;
  m_canhelp_ = 0;
  m_qkill_ = 0;
  m_retrieveddays_ = 0;
  m_skill_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_BossBosstype::~E_BossBosstype() {
  SharedDtor();
}

void E_BossBosstype::SharedDtor() {
  if (m_costnum_ != &::google::protobuf::internal::kEmptyString) {
    delete m_costnum_;
  }
  if (this != default_instance_) {
  }
}

void E_BossBosstype::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_BossBosstype::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_BossBosstype_descriptor_;
}

const E_BossBosstype& E_BossBosstype::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fBoss_2eproto();
  return *default_instance_;
}

E_BossBosstype* E_BossBosstype::default_instance_ = NULL;

E_BossBosstype* E_BossBosstype::New() const {
  return new E_BossBosstype;
}

void E_BossBosstype::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_bosstype_ = 0;
    m_maptype_ = 0;
    m_functionid_ = 0;
    m_duplicategroupid_ = 0;
    m_privilegetype_ = 0;
    m_callingcardid_ = GOOGLE_LONGLONG(0);
    m_entertimes_ = 0;
    m_costitem_ = 0;
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (has_m_costnum()) {
      if (m_costnum_ != &::google::protobuf::internal::kEmptyString) {
        m_costnum_->clear();
      }
    }
    m_bosstimes_ = 0;
    m_additemid_ = 0;
    m_canhelp_ = 0;
    m_qkill_ = 0;
    m_retrieveddays_ = 0;
    m_skill_ = 0;
  }
  m_group_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_BossBosstype::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_bossType = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_bosstype_)));
          set_has_m_bosstype();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_mapType;
        break;
      }

      // optional int32 m_mapType = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_mapType:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_maptype_)));
          set_has_m_maptype();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_m_functionId;
        break;
      }

      // optional int32 m_functionId = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_functionId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_functionid_)));
          set_has_m_functionid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_m_duplicateGroupID;
        break;
      }

      // optional int32 m_duplicateGroupID = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_duplicateGroupID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_duplicategroupid_)));
          set_has_m_duplicategroupid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_m_privilegeType;
        break;
      }

      // optional int32 m_privilegeType = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_privilegeType:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_privilegetype_)));
          set_has_m_privilegetype();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_m_callingCardId;
        break;
      }

      // optional int64 m_callingCardId = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_callingCardId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &m_callingcardid_)));
          set_has_m_callingcardid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_m_enterTimes;
        break;
      }

      // optional int32 m_enterTimes = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_enterTimes:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_entertimes_)));
          set_has_m_entertimes();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(64)) goto parse_m_costitem;
        break;
      }

      // optional int32 m_costitem = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_costitem:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_costitem_)));
          set_has_m_costitem();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(74)) goto parse_m_costnum;
        break;
      }

      // optional string m_costnum = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_costnum:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_m_costnum()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->m_costnum().data(), this->m_costnum().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(80)) goto parse_m_bossTimes;
        break;
      }

      // optional int32 m_bossTimes = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_bossTimes:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_bosstimes_)));
          set_has_m_bosstimes();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(88)) goto parse_m_addItemID;
        break;
      }

      // optional int32 m_addItemID = 11;
      case 11: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_addItemID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_additemid_)));
          set_has_m_additemid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(96)) goto parse_m_canhelp;
        break;
      }

      // optional int32 m_canhelp = 12;
      case 12: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_canhelp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_canhelp_)));
          set_has_m_canhelp();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(104)) goto parse_m_qkill;
        break;
      }

      // optional int32 m_qkill = 13;
      case 13: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_qkill:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_qkill_)));
          set_has_m_qkill();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(112)) goto parse_m_retrievedDays;
        break;
      }

      // optional int32 m_retrievedDays = 14;
      case 14: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_retrievedDays:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_retrieveddays_)));
          set_has_m_retrieveddays();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(120)) goto parse_m_skill;
        break;
      }

      // optional int32 m_skill = 15;
      case 15: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_skill:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_skill_)));
          set_has_m_skill();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(130)) goto parse_m_group;
        break;
      }

      // repeated .proto_ff.E_BossBosstypeGroupDesc m_group = 16;
      case 16: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_group:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_m_group()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(130)) goto parse_m_group;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_BossBosstype::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_bossType = 1;
  if (has_m_bosstype()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_bosstype(), output);
  }

  // optional int32 m_mapType = 2;
  if (has_m_maptype()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_maptype(), output);
  }

  // optional int32 m_functionId = 3;
  if (has_m_functionid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->m_functionid(), output);
  }

  // optional int32 m_duplicateGroupID = 4;
  if (has_m_duplicategroupid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->m_duplicategroupid(), output);
  }

  // optional int32 m_privilegeType = 5;
  if (has_m_privilegetype()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->m_privilegetype(), output);
  }

  // optional int64 m_callingCardId = 6;
  if (has_m_callingcardid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(6, this->m_callingcardid(), output);
  }

  // optional int32 m_enterTimes = 7;
  if (has_m_entertimes()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->m_entertimes(), output);
  }

  // optional int32 m_costitem = 8;
  if (has_m_costitem()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->m_costitem(), output);
  }

  // optional string m_costnum = 9;
  if (has_m_costnum()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_costnum().data(), this->m_costnum().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      9, this->m_costnum(), output);
  }

  // optional int32 m_bossTimes = 10;
  if (has_m_bosstimes()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->m_bosstimes(), output);
  }

  // optional int32 m_addItemID = 11;
  if (has_m_additemid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->m_additemid(), output);
  }

  // optional int32 m_canhelp = 12;
  if (has_m_canhelp()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(12, this->m_canhelp(), output);
  }

  // optional int32 m_qkill = 13;
  if (has_m_qkill()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(13, this->m_qkill(), output);
  }

  // optional int32 m_retrievedDays = 14;
  if (has_m_retrieveddays()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(14, this->m_retrieveddays(), output);
  }

  // optional int32 m_skill = 15;
  if (has_m_skill()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(15, this->m_skill(), output);
  }

  // repeated .proto_ff.E_BossBosstypeGroupDesc m_group = 16;
  for (int i = 0; i < this->m_group_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      16, this->m_group(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_BossBosstype::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_bossType = 1;
  if (has_m_bosstype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_bosstype(), target);
  }

  // optional int32 m_mapType = 2;
  if (has_m_maptype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_maptype(), target);
  }

  // optional int32 m_functionId = 3;
  if (has_m_functionid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->m_functionid(), target);
  }

  // optional int32 m_duplicateGroupID = 4;
  if (has_m_duplicategroupid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->m_duplicategroupid(), target);
  }

  // optional int32 m_privilegeType = 5;
  if (has_m_privilegetype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->m_privilegetype(), target);
  }

  // optional int64 m_callingCardId = 6;
  if (has_m_callingcardid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(6, this->m_callingcardid(), target);
  }

  // optional int32 m_enterTimes = 7;
  if (has_m_entertimes()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->m_entertimes(), target);
  }

  // optional int32 m_costitem = 8;
  if (has_m_costitem()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->m_costitem(), target);
  }

  // optional string m_costnum = 9;
  if (has_m_costnum()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_costnum().data(), this->m_costnum().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->m_costnum(), target);
  }

  // optional int32 m_bossTimes = 10;
  if (has_m_bosstimes()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->m_bosstimes(), target);
  }

  // optional int32 m_addItemID = 11;
  if (has_m_additemid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->m_additemid(), target);
  }

  // optional int32 m_canhelp = 12;
  if (has_m_canhelp()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(12, this->m_canhelp(), target);
  }

  // optional int32 m_qkill = 13;
  if (has_m_qkill()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(13, this->m_qkill(), target);
  }

  // optional int32 m_retrievedDays = 14;
  if (has_m_retrieveddays()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(14, this->m_retrieveddays(), target);
  }

  // optional int32 m_skill = 15;
  if (has_m_skill()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(15, this->m_skill(), target);
  }

  // repeated .proto_ff.E_BossBosstypeGroupDesc m_group = 16;
  for (int i = 0; i < this->m_group_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        16, this->m_group(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_BossBosstype::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_bossType = 1;
    if (has_m_bosstype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_bosstype());
    }

    // optional int32 m_mapType = 2;
    if (has_m_maptype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_maptype());
    }

    // optional int32 m_functionId = 3;
    if (has_m_functionid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_functionid());
    }

    // optional int32 m_duplicateGroupID = 4;
    if (has_m_duplicategroupid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_duplicategroupid());
    }

    // optional int32 m_privilegeType = 5;
    if (has_m_privilegetype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_privilegetype());
    }

    // optional int64 m_callingCardId = 6;
    if (has_m_callingcardid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->m_callingcardid());
    }

    // optional int32 m_enterTimes = 7;
    if (has_m_entertimes()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_entertimes());
    }

    // optional int32 m_costitem = 8;
    if (has_m_costitem()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_costitem());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional string m_costnum = 9;
    if (has_m_costnum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->m_costnum());
    }

    // optional int32 m_bossTimes = 10;
    if (has_m_bosstimes()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_bosstimes());
    }

    // optional int32 m_addItemID = 11;
    if (has_m_additemid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_additemid());
    }

    // optional int32 m_canhelp = 12;
    if (has_m_canhelp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_canhelp());
    }

    // optional int32 m_qkill = 13;
    if (has_m_qkill()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_qkill());
    }

    // optional int32 m_retrievedDays = 14;
    if (has_m_retrieveddays()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_retrieveddays());
    }

    // optional int32 m_skill = 15;
    if (has_m_skill()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_skill());
    }

  }
  // repeated .proto_ff.E_BossBosstypeGroupDesc m_group = 16;
  total_size += 2 * this->m_group_size();
  for (int i = 0; i < this->m_group_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->m_group(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_BossBosstype::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_BossBosstype* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_BossBosstype*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_BossBosstype::MergeFrom(const E_BossBosstype& from) {
  GOOGLE_CHECK_NE(&from, this);
  m_group_.MergeFrom(from.m_group_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_bosstype()) {
      set_m_bosstype(from.m_bosstype());
    }
    if (from.has_m_maptype()) {
      set_m_maptype(from.m_maptype());
    }
    if (from.has_m_functionid()) {
      set_m_functionid(from.m_functionid());
    }
    if (from.has_m_duplicategroupid()) {
      set_m_duplicategroupid(from.m_duplicategroupid());
    }
    if (from.has_m_privilegetype()) {
      set_m_privilegetype(from.m_privilegetype());
    }
    if (from.has_m_callingcardid()) {
      set_m_callingcardid(from.m_callingcardid());
    }
    if (from.has_m_entertimes()) {
      set_m_entertimes(from.m_entertimes());
    }
    if (from.has_m_costitem()) {
      set_m_costitem(from.m_costitem());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_m_costnum()) {
      set_m_costnum(from.m_costnum());
    }
    if (from.has_m_bosstimes()) {
      set_m_bosstimes(from.m_bosstimes());
    }
    if (from.has_m_additemid()) {
      set_m_additemid(from.m_additemid());
    }
    if (from.has_m_canhelp()) {
      set_m_canhelp(from.m_canhelp());
    }
    if (from.has_m_qkill()) {
      set_m_qkill(from.m_qkill());
    }
    if (from.has_m_retrieveddays()) {
      set_m_retrieveddays(from.m_retrieveddays());
    }
    if (from.has_m_skill()) {
      set_m_skill(from.m_skill());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_BossBosstype::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_BossBosstype::CopyFrom(const E_BossBosstype& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_BossBosstype::IsInitialized() const {

  return true;
}

void E_BossBosstype::Swap(E_BossBosstype* other) {
  if (other != this) {
    std::swap(m_bosstype_, other->m_bosstype_);
    std::swap(m_maptype_, other->m_maptype_);
    std::swap(m_functionid_, other->m_functionid_);
    std::swap(m_duplicategroupid_, other->m_duplicategroupid_);
    std::swap(m_privilegetype_, other->m_privilegetype_);
    std::swap(m_callingcardid_, other->m_callingcardid_);
    std::swap(m_entertimes_, other->m_entertimes_);
    std::swap(m_costitem_, other->m_costitem_);
    std::swap(m_costnum_, other->m_costnum_);
    std::swap(m_bosstimes_, other->m_bosstimes_);
    std::swap(m_additemid_, other->m_additemid_);
    std::swap(m_canhelp_, other->m_canhelp_);
    std::swap(m_qkill_, other->m_qkill_);
    std::swap(m_retrieveddays_, other->m_retrieveddays_);
    std::swap(m_skill_, other->m_skill_);
    m_group_.Swap(&other->m_group_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_BossBosstype::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_BossBosstype_descriptor_;
  metadata.reflection = E_BossBosstype_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_BossBosstype::kEBossBosstypeListFieldNumber;
#endif  // !_MSC_VER

Sheet_BossBosstype::Sheet_BossBosstype()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_BossBosstype::InitAsDefaultInstance() {
}

Sheet_BossBosstype::Sheet_BossBosstype(const Sheet_BossBosstype& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_BossBosstype::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_BossBosstype::~Sheet_BossBosstype() {
  SharedDtor();
}

void Sheet_BossBosstype::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_BossBosstype::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_BossBosstype::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_BossBosstype_descriptor_;
}

const Sheet_BossBosstype& Sheet_BossBosstype::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fBoss_2eproto();
  return *default_instance_;
}

Sheet_BossBosstype* Sheet_BossBosstype::default_instance_ = NULL;

Sheet_BossBosstype* Sheet_BossBosstype::New() const {
  return new Sheet_BossBosstype;
}

void Sheet_BossBosstype::Clear() {
  e_bossbosstype_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_BossBosstype::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.E_BossBosstype E_BossBosstype_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_E_BossBosstype_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_e_bossbosstype_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_E_BossBosstype_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_BossBosstype::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.E_BossBosstype E_BossBosstype_List = 1;
  for (int i = 0; i < this->e_bossbosstype_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->e_bossbosstype_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_BossBosstype::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.E_BossBosstype E_BossBosstype_List = 1;
  for (int i = 0; i < this->e_bossbosstype_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->e_bossbosstype_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_BossBosstype::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.E_BossBosstype E_BossBosstype_List = 1;
  total_size += 1 * this->e_bossbosstype_list_size();
  for (int i = 0; i < this->e_bossbosstype_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->e_bossbosstype_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_BossBosstype::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_BossBosstype* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_BossBosstype*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_BossBosstype::MergeFrom(const Sheet_BossBosstype& from) {
  GOOGLE_CHECK_NE(&from, this);
  e_bossbosstype_list_.MergeFrom(from.e_bossbosstype_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_BossBosstype::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_BossBosstype::CopyFrom(const Sheet_BossBosstype& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_BossBosstype::IsInitialized() const {

  return true;
}

void Sheet_BossBosstype::Swap(Sheet_BossBosstype* other) {
  if (other != this) {
    e_bossbosstype_list_.Swap(&other->e_bossbosstype_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_BossBosstype::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_BossBosstype_descriptor_;
  metadata.reflection = Sheet_BossBosstype_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_BossLayer::kMIDFieldNumber;
const int E_BossLayer::kMBossTypeFieldNumber;
const int E_BossLayer::kMOrderFieldNumber;
const int E_BossLayer::kMSubTypeFieldNumber;
const int E_BossLayer::kMEnterConditionFieldNumber;
const int E_BossLayer::kMUnlockConditionFieldNumber;
const int E_BossLayer::kMMapIDFieldNumber;
const int E_BossLayer::kMMaxlvFieldNumber;
const int E_BossLayer::kMUnLimitFieldNumber;
#endif  // !_MSC_VER

E_BossLayer::E_BossLayer()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_BossLayer::InitAsDefaultInstance() {
}

E_BossLayer::E_BossLayer(const E_BossLayer& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_BossLayer::SharedCtor() {
  _cached_size_ = 0;
  m_id_ = 0;
  m_bosstype_ = 0;
  m_order_ = 0;
  m_subtype_ = 0;
  m_entercondition_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  m_unlockcondition_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  m_mapid_ = 0;
  m_maxlv_ = 0;
  m_unlimit_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_BossLayer::~E_BossLayer() {
  SharedDtor();
}

void E_BossLayer::SharedDtor() {
  if (m_entercondition_ != &::google::protobuf::internal::kEmptyString) {
    delete m_entercondition_;
  }
  if (m_unlockcondition_ != &::google::protobuf::internal::kEmptyString) {
    delete m_unlockcondition_;
  }
  if (this != default_instance_) {
  }
}

void E_BossLayer::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_BossLayer::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_BossLayer_descriptor_;
}

const E_BossLayer& E_BossLayer::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fBoss_2eproto();
  return *default_instance_;
}

E_BossLayer* E_BossLayer::default_instance_ = NULL;

E_BossLayer* E_BossLayer::New() const {
  return new E_BossLayer;
}

void E_BossLayer::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_id_ = 0;
    m_bosstype_ = 0;
    m_order_ = 0;
    m_subtype_ = 0;
    if (has_m_entercondition()) {
      if (m_entercondition_ != &::google::protobuf::internal::kEmptyString) {
        m_entercondition_->clear();
      }
    }
    if (has_m_unlockcondition()) {
      if (m_unlockcondition_ != &::google::protobuf::internal::kEmptyString) {
        m_unlockcondition_->clear();
      }
    }
    m_mapid_ = 0;
    m_maxlv_ = 0;
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    m_unlimit_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_BossLayer::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_ID = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_id_)));
          set_has_m_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_bossType;
        break;
      }

      // optional int32 m_bossType = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_bossType:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_bosstype_)));
          set_has_m_bosstype();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_m_order;
        break;
      }

      // optional int32 m_order = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_order:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_order_)));
          set_has_m_order();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_m_subType;
        break;
      }

      // optional int32 m_subType = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_subType:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_subtype_)));
          set_has_m_subtype();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_m_enterCondition;
        break;
      }

      // optional string m_enterCondition = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_enterCondition:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_m_entercondition()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->m_entercondition().data(), this->m_entercondition().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_m_unlockCondition;
        break;
      }

      // optional string m_unlockCondition = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_unlockCondition:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_m_unlockcondition()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->m_unlockcondition().data(), this->m_unlockcondition().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_m_mapID;
        break;
      }

      // optional int32 m_mapID = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_mapID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_mapid_)));
          set_has_m_mapid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(64)) goto parse_m_maxlv;
        break;
      }

      // optional int32 m_maxlv = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_maxlv:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_maxlv_)));
          set_has_m_maxlv();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(72)) goto parse_m_unLimit;
        break;
      }

      // optional int32 m_unLimit = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_unLimit:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_unlimit_)));
          set_has_m_unlimit();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_BossLayer::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_ID = 1;
  if (has_m_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_id(), output);
  }

  // optional int32 m_bossType = 2;
  if (has_m_bosstype()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_bosstype(), output);
  }

  // optional int32 m_order = 3;
  if (has_m_order()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->m_order(), output);
  }

  // optional int32 m_subType = 4;
  if (has_m_subtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->m_subtype(), output);
  }

  // optional string m_enterCondition = 5;
  if (has_m_entercondition()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_entercondition().data(), this->m_entercondition().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->m_entercondition(), output);
  }

  // optional string m_unlockCondition = 6;
  if (has_m_unlockcondition()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_unlockcondition().data(), this->m_unlockcondition().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      6, this->m_unlockcondition(), output);
  }

  // optional int32 m_mapID = 7;
  if (has_m_mapid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->m_mapid(), output);
  }

  // optional int32 m_maxlv = 8;
  if (has_m_maxlv()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->m_maxlv(), output);
  }

  // optional int32 m_unLimit = 9;
  if (has_m_unlimit()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->m_unlimit(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_BossLayer::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_ID = 1;
  if (has_m_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_id(), target);
  }

  // optional int32 m_bossType = 2;
  if (has_m_bosstype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_bosstype(), target);
  }

  // optional int32 m_order = 3;
  if (has_m_order()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->m_order(), target);
  }

  // optional int32 m_subType = 4;
  if (has_m_subtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->m_subtype(), target);
  }

  // optional string m_enterCondition = 5;
  if (has_m_entercondition()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_entercondition().data(), this->m_entercondition().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->m_entercondition(), target);
  }

  // optional string m_unlockCondition = 6;
  if (has_m_unlockcondition()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_unlockcondition().data(), this->m_unlockcondition().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->m_unlockcondition(), target);
  }

  // optional int32 m_mapID = 7;
  if (has_m_mapid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->m_mapid(), target);
  }

  // optional int32 m_maxlv = 8;
  if (has_m_maxlv()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->m_maxlv(), target);
  }

  // optional int32 m_unLimit = 9;
  if (has_m_unlimit()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->m_unlimit(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_BossLayer::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_ID = 1;
    if (has_m_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_id());
    }

    // optional int32 m_bossType = 2;
    if (has_m_bosstype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_bosstype());
    }

    // optional int32 m_order = 3;
    if (has_m_order()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_order());
    }

    // optional int32 m_subType = 4;
    if (has_m_subtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_subtype());
    }

    // optional string m_enterCondition = 5;
    if (has_m_entercondition()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->m_entercondition());
    }

    // optional string m_unlockCondition = 6;
    if (has_m_unlockcondition()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->m_unlockcondition());
    }

    // optional int32 m_mapID = 7;
    if (has_m_mapid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_mapid());
    }

    // optional int32 m_maxlv = 8;
    if (has_m_maxlv()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_maxlv());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional int32 m_unLimit = 9;
    if (has_m_unlimit()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_unlimit());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_BossLayer::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_BossLayer* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_BossLayer*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_BossLayer::MergeFrom(const E_BossLayer& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_id()) {
      set_m_id(from.m_id());
    }
    if (from.has_m_bosstype()) {
      set_m_bosstype(from.m_bosstype());
    }
    if (from.has_m_order()) {
      set_m_order(from.m_order());
    }
    if (from.has_m_subtype()) {
      set_m_subtype(from.m_subtype());
    }
    if (from.has_m_entercondition()) {
      set_m_entercondition(from.m_entercondition());
    }
    if (from.has_m_unlockcondition()) {
      set_m_unlockcondition(from.m_unlockcondition());
    }
    if (from.has_m_mapid()) {
      set_m_mapid(from.m_mapid());
    }
    if (from.has_m_maxlv()) {
      set_m_maxlv(from.m_maxlv());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_m_unlimit()) {
      set_m_unlimit(from.m_unlimit());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_BossLayer::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_BossLayer::CopyFrom(const E_BossLayer& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_BossLayer::IsInitialized() const {

  return true;
}

void E_BossLayer::Swap(E_BossLayer* other) {
  if (other != this) {
    std::swap(m_id_, other->m_id_);
    std::swap(m_bosstype_, other->m_bosstype_);
    std::swap(m_order_, other->m_order_);
    std::swap(m_subtype_, other->m_subtype_);
    std::swap(m_entercondition_, other->m_entercondition_);
    std::swap(m_unlockcondition_, other->m_unlockcondition_);
    std::swap(m_mapid_, other->m_mapid_);
    std::swap(m_maxlv_, other->m_maxlv_);
    std::swap(m_unlimit_, other->m_unlimit_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_BossLayer::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_BossLayer_descriptor_;
  metadata.reflection = E_BossLayer_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_BossLayer::kEBossLayerListFieldNumber;
#endif  // !_MSC_VER

Sheet_BossLayer::Sheet_BossLayer()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_BossLayer::InitAsDefaultInstance() {
}

Sheet_BossLayer::Sheet_BossLayer(const Sheet_BossLayer& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_BossLayer::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_BossLayer::~Sheet_BossLayer() {
  SharedDtor();
}

void Sheet_BossLayer::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_BossLayer::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_BossLayer::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_BossLayer_descriptor_;
}

const Sheet_BossLayer& Sheet_BossLayer::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fBoss_2eproto();
  return *default_instance_;
}

Sheet_BossLayer* Sheet_BossLayer::default_instance_ = NULL;

Sheet_BossLayer* Sheet_BossLayer::New() const {
  return new Sheet_BossLayer;
}

void Sheet_BossLayer::Clear() {
  e_bosslayer_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_BossLayer::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.E_BossLayer E_BossLayer_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_E_BossLayer_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_e_bosslayer_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_E_BossLayer_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_BossLayer::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.E_BossLayer E_BossLayer_List = 1;
  for (int i = 0; i < this->e_bosslayer_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->e_bosslayer_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_BossLayer::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.E_BossLayer E_BossLayer_List = 1;
  for (int i = 0; i < this->e_bosslayer_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->e_bosslayer_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_BossLayer::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.E_BossLayer E_BossLayer_List = 1;
  total_size += 1 * this->e_bosslayer_list_size();
  for (int i = 0; i < this->e_bosslayer_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->e_bosslayer_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_BossLayer::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_BossLayer* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_BossLayer*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_BossLayer::MergeFrom(const Sheet_BossLayer& from) {
  GOOGLE_CHECK_NE(&from, this);
  e_bosslayer_list_.MergeFrom(from.e_bosslayer_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_BossLayer::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_BossLayer::CopyFrom(const Sheet_BossLayer& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_BossLayer::IsInitialized() const {

  return true;
}

void Sheet_BossLayer::Swap(Sheet_BossLayer* other) {
  if (other != this) {
    e_bosslayer_list_.Swap(&other->e_bosslayer_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_BossLayer::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_BossLayer_descriptor_;
  metadata.reflection = Sheet_BossLayer_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto_ff

// @@protoc_insertion_point(global_scope)
