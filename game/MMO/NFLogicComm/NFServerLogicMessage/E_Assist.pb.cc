// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: E_Assist.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "E_Assist.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace proto_ff {

namespace {

const ::google::protobuf::Descriptor* E_AssistBox_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_AssistBox_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_AssistBox_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_AssistBox_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_AssistThank_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_AssistThank_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_AssistThank_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_AssistThank_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_AssistConst_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_AssistConst_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_AssistConst_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_AssistConst_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_E_5fAssist_2eproto() {
  protobuf_AddDesc_E_5fAssist_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "E_Assist.proto");
  GOOGLE_CHECK(file != NULL);
  E_AssistBox_descriptor_ = file->message_type(0);
  static const int E_AssistBox_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_AssistBox, m_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_AssistBox, m_times_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_AssistBox, m_itemid_),
  };
  E_AssistBox_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_AssistBox_descriptor_,
      E_AssistBox::default_instance_,
      E_AssistBox_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_AssistBox, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_AssistBox, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_AssistBox));
  Sheet_AssistBox_descriptor_ = file->message_type(1);
  static const int Sheet_AssistBox_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_AssistBox, e_assistbox_list_),
  };
  Sheet_AssistBox_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_AssistBox_descriptor_,
      Sheet_AssistBox::default_instance_,
      Sheet_AssistBox_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_AssistBox, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_AssistBox, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_AssistBox));
  E_AssistThank_descriptor_ = file->message_type(2);
  static const int E_AssistThank_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_AssistThank, m_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_AssistThank, m_msg_),
  };
  E_AssistThank_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_AssistThank_descriptor_,
      E_AssistThank::default_instance_,
      E_AssistThank_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_AssistThank, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_AssistThank, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_AssistThank));
  Sheet_AssistThank_descriptor_ = file->message_type(3);
  static const int Sheet_AssistThank_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_AssistThank, e_assistthank_list_),
  };
  Sheet_AssistThank_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_AssistThank_descriptor_,
      Sheet_AssistThank::default_instance_,
      Sheet_AssistThank_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_AssistThank, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_AssistThank, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_AssistThank));
  E_AssistConst_descriptor_ = file->message_type(4);
  static const int E_AssistConst_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_AssistConst, m_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_AssistConst, m_sendergift_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_AssistConst, m_sendergiftnum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_AssistConst, m_helpergift_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_AssistConst, m_helpergiftnum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_AssistConst, m_prestigedaylimit_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_AssistConst, m_prestigedaybosslimit_),
  };
  E_AssistConst_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_AssistConst_descriptor_,
      E_AssistConst::default_instance_,
      E_AssistConst_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_AssistConst, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_AssistConst, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_AssistConst));
  Sheet_AssistConst_descriptor_ = file->message_type(5);
  static const int Sheet_AssistConst_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_AssistConst, e_assistconst_list_),
  };
  Sheet_AssistConst_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_AssistConst_descriptor_,
      Sheet_AssistConst::default_instance_,
      Sheet_AssistConst_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_AssistConst, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_AssistConst, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_AssistConst));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_E_5fAssist_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_AssistBox_descriptor_, &E_AssistBox::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_AssistBox_descriptor_, &Sheet_AssistBox::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_AssistThank_descriptor_, &E_AssistThank::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_AssistThank_descriptor_, &Sheet_AssistThank::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_AssistConst_descriptor_, &E_AssistConst::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_AssistConst_descriptor_, &Sheet_AssistConst::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_E_5fAssist_2eproto() {
  delete E_AssistBox::default_instance_;
  delete E_AssistBox_reflection_;
  delete Sheet_AssistBox::default_instance_;
  delete Sheet_AssistBox_reflection_;
  delete E_AssistThank::default_instance_;
  delete E_AssistThank_reflection_;
  delete Sheet_AssistThank::default_instance_;
  delete Sheet_AssistThank_reflection_;
  delete E_AssistConst::default_instance_;
  delete E_AssistConst_reflection_;
  delete Sheet_AssistConst::default_instance_;
  delete Sheet_AssistConst_reflection_;
}

void protobuf_AddDesc_E_5fAssist_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::yd_fieldoptions::protobuf_AddDesc_yd_5ffieldoptions_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\016E_Assist.proto\022\010proto_ff\032\025yd_fieldopti"
    "ons.proto\"r\n\013E_AssistBox\022\024\n\004m_id\030\001 \001(\005B\006"
    "\302\377\024\002id\022\'\n\007m_times\030\002 \001(\005B\026\302\377\024\022\351\234\200\350\246\201\345\215\217\345\212"
    "\251\346\254\241\346\225\260\022$\n\010m_itemid\030\003 \001(\005B\022\302\377\024\016\347\244\274\345\214\205\347\211\251"
    "\345\223\201id\"H\n\017Sheet_AssistBox\0225\n\020E_AssistBox_"
    "List\030\001 \003(\0132\025.proto_ff.E_AssistBoxB\004\210\301\024\010\""
    "D\n\rE_AssistThank\022\024\n\004m_id\030\001 \001(\005B\006\302\377\024\002id\022\035"
    "\n\005m_msg\030\002 \001(\tB\016\302\377\024\006\346\266\210\346\201\257\220\301\024@\"N\n\021Sheet_A"
    "ssistThank\0229\n\022E_AssistThank_List\030\001 \003(\0132\027"
    ".proto_ff.E_AssistThankB\004\210\301\024\020\"\373\002\n\rE_Assi"
    "stConst\022\024\n\004m_id\030\001 \001(\005B\006\302\377\024\002id\022+\n\014m_sende"
    "rGift\030\002 \001(\005B\025\302\377\024\021\346\261\202\345\212\251\350\200\205\347\244\274\345\214\205id\0228\n\017m_"
    "senderGiftNum\030\003 \001(\005B\037\302\377\024\033\346\261\202\345\212\251\350\200\205\347\244\274\345\214\205"
    "\346\257\217\346\227\245\346\225\260\351\207\217\022+\n\014m_helperGift\030\004 \001(\005B\025\302\377\024\021"
    "\345\215\217\345\212\251\350\200\205\347\244\274\345\214\205id\0228\n\017m_helperGiftNum\030\005 \001"
    "(\005B\037\302\377\024\033\345\215\217\345\212\251\350\200\205\347\244\274\345\214\205\346\257\217\346\227\245\346\225\260\351\207\217\022>\n\022m"
    "_prestigeDaylimit\030\006 \001(\005B\"\302\377\024\036\346\257\217\346\227\245\346\227\245\345\270"
    "\270\345\243\260\346\234\233\350\216\267\345\217\226\344\270\212\351\231\220\022F\n\026m_prestigeDayBoss"
    "limit\030\007 \001(\005B&\302\377\024\"\346\257\217\346\227\245boss\345\215\217\345\212\251\345\243\260\346\234\233\350"
    "\216\267\345\217\226\344\270\212\351\231\220\"N\n\021Sheet_AssistConst\0229\n\022E_As"
    "sistConst_List\030\001 \003(\0132\027.proto_ff.E_Assist"
    "ConstB\004\210\301\024\002", 851);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "E_Assist.proto", &protobuf_RegisterTypes);
  E_AssistBox::default_instance_ = new E_AssistBox();
  Sheet_AssistBox::default_instance_ = new Sheet_AssistBox();
  E_AssistThank::default_instance_ = new E_AssistThank();
  Sheet_AssistThank::default_instance_ = new Sheet_AssistThank();
  E_AssistConst::default_instance_ = new E_AssistConst();
  Sheet_AssistConst::default_instance_ = new Sheet_AssistConst();
  E_AssistBox::default_instance_->InitAsDefaultInstance();
  Sheet_AssistBox::default_instance_->InitAsDefaultInstance();
  E_AssistThank::default_instance_->InitAsDefaultInstance();
  Sheet_AssistThank::default_instance_->InitAsDefaultInstance();
  E_AssistConst::default_instance_->InitAsDefaultInstance();
  Sheet_AssistConst::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_E_5fAssist_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_E_5fAssist_2eproto {
  StaticDescriptorInitializer_E_5fAssist_2eproto() {
    protobuf_AddDesc_E_5fAssist_2eproto();
  }
} static_descriptor_initializer_E_5fAssist_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int E_AssistBox::kMIdFieldNumber;
const int E_AssistBox::kMTimesFieldNumber;
const int E_AssistBox::kMItemidFieldNumber;
#endif  // !_MSC_VER

E_AssistBox::E_AssistBox()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_AssistBox::InitAsDefaultInstance() {
}

E_AssistBox::E_AssistBox(const E_AssistBox& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_AssistBox::SharedCtor() {
  _cached_size_ = 0;
  m_id_ = 0;
  m_times_ = 0;
  m_itemid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_AssistBox::~E_AssistBox() {
  SharedDtor();
}

void E_AssistBox::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_AssistBox::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_AssistBox::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_AssistBox_descriptor_;
}

const E_AssistBox& E_AssistBox::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fAssist_2eproto();
  return *default_instance_;
}

E_AssistBox* E_AssistBox::default_instance_ = NULL;

E_AssistBox* E_AssistBox::New() const {
  return new E_AssistBox;
}

void E_AssistBox::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_id_ = 0;
    m_times_ = 0;
    m_itemid_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_AssistBox::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_id_)));
          set_has_m_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_times;
        break;
      }

      // optional int32 m_times = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_times:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_times_)));
          set_has_m_times();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_m_itemid;
        break;
      }

      // optional int32 m_itemid = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_itemid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_itemid_)));
          set_has_m_itemid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_AssistBox::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_id(), output);
  }

  // optional int32 m_times = 2;
  if (has_m_times()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_times(), output);
  }

  // optional int32 m_itemid = 3;
  if (has_m_itemid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->m_itemid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_AssistBox::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_id(), target);
  }

  // optional int32 m_times = 2;
  if (has_m_times()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_times(), target);
  }

  // optional int32 m_itemid = 3;
  if (has_m_itemid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->m_itemid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_AssistBox::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_id = 1;
    if (has_m_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_id());
    }

    // optional int32 m_times = 2;
    if (has_m_times()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_times());
    }

    // optional int32 m_itemid = 3;
    if (has_m_itemid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_itemid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_AssistBox::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_AssistBox* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_AssistBox*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_AssistBox::MergeFrom(const E_AssistBox& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_id()) {
      set_m_id(from.m_id());
    }
    if (from.has_m_times()) {
      set_m_times(from.m_times());
    }
    if (from.has_m_itemid()) {
      set_m_itemid(from.m_itemid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_AssistBox::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_AssistBox::CopyFrom(const E_AssistBox& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_AssistBox::IsInitialized() const {

  return true;
}

void E_AssistBox::Swap(E_AssistBox* other) {
  if (other != this) {
    std::swap(m_id_, other->m_id_);
    std::swap(m_times_, other->m_times_);
    std::swap(m_itemid_, other->m_itemid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_AssistBox::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_AssistBox_descriptor_;
  metadata.reflection = E_AssistBox_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_AssistBox::kEAssistBoxListFieldNumber;
#endif  // !_MSC_VER

Sheet_AssistBox::Sheet_AssistBox()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_AssistBox::InitAsDefaultInstance() {
}

Sheet_AssistBox::Sheet_AssistBox(const Sheet_AssistBox& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_AssistBox::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_AssistBox::~Sheet_AssistBox() {
  SharedDtor();
}

void Sheet_AssistBox::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_AssistBox::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_AssistBox::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_AssistBox_descriptor_;
}

const Sheet_AssistBox& Sheet_AssistBox::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fAssist_2eproto();
  return *default_instance_;
}

Sheet_AssistBox* Sheet_AssistBox::default_instance_ = NULL;

Sheet_AssistBox* Sheet_AssistBox::New() const {
  return new Sheet_AssistBox;
}

void Sheet_AssistBox::Clear() {
  e_assistbox_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_AssistBox::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.E_AssistBox E_AssistBox_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_E_AssistBox_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_e_assistbox_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_E_AssistBox_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_AssistBox::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.E_AssistBox E_AssistBox_List = 1;
  for (int i = 0; i < this->e_assistbox_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->e_assistbox_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_AssistBox::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.E_AssistBox E_AssistBox_List = 1;
  for (int i = 0; i < this->e_assistbox_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->e_assistbox_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_AssistBox::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.E_AssistBox E_AssistBox_List = 1;
  total_size += 1 * this->e_assistbox_list_size();
  for (int i = 0; i < this->e_assistbox_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->e_assistbox_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_AssistBox::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_AssistBox* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_AssistBox*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_AssistBox::MergeFrom(const Sheet_AssistBox& from) {
  GOOGLE_CHECK_NE(&from, this);
  e_assistbox_list_.MergeFrom(from.e_assistbox_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_AssistBox::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_AssistBox::CopyFrom(const Sheet_AssistBox& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_AssistBox::IsInitialized() const {

  return true;
}

void Sheet_AssistBox::Swap(Sheet_AssistBox* other) {
  if (other != this) {
    e_assistbox_list_.Swap(&other->e_assistbox_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_AssistBox::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_AssistBox_descriptor_;
  metadata.reflection = Sheet_AssistBox_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_AssistThank::kMIdFieldNumber;
const int E_AssistThank::kMMsgFieldNumber;
#endif  // !_MSC_VER

E_AssistThank::E_AssistThank()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_AssistThank::InitAsDefaultInstance() {
}

E_AssistThank::E_AssistThank(const E_AssistThank& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_AssistThank::SharedCtor() {
  _cached_size_ = 0;
  m_id_ = 0;
  m_msg_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_AssistThank::~E_AssistThank() {
  SharedDtor();
}

void E_AssistThank::SharedDtor() {
  if (m_msg_ != &::google::protobuf::internal::kEmptyString) {
    delete m_msg_;
  }
  if (this != default_instance_) {
  }
}

void E_AssistThank::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_AssistThank::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_AssistThank_descriptor_;
}

const E_AssistThank& E_AssistThank::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fAssist_2eproto();
  return *default_instance_;
}

E_AssistThank* E_AssistThank::default_instance_ = NULL;

E_AssistThank* E_AssistThank::New() const {
  return new E_AssistThank;
}

void E_AssistThank::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_id_ = 0;
    if (has_m_msg()) {
      if (m_msg_ != &::google::protobuf::internal::kEmptyString) {
        m_msg_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_AssistThank::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_id_)));
          set_has_m_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_m_msg;
        break;
      }

      // optional string m_msg = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_msg:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_m_msg()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->m_msg().data(), this->m_msg().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_AssistThank::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_id(), output);
  }

  // optional string m_msg = 2;
  if (has_m_msg()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_msg().data(), this->m_msg().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->m_msg(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_AssistThank::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_id(), target);
  }

  // optional string m_msg = 2;
  if (has_m_msg()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_msg().data(), this->m_msg().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->m_msg(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_AssistThank::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_id = 1;
    if (has_m_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_id());
    }

    // optional string m_msg = 2;
    if (has_m_msg()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->m_msg());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_AssistThank::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_AssistThank* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_AssistThank*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_AssistThank::MergeFrom(const E_AssistThank& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_id()) {
      set_m_id(from.m_id());
    }
    if (from.has_m_msg()) {
      set_m_msg(from.m_msg());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_AssistThank::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_AssistThank::CopyFrom(const E_AssistThank& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_AssistThank::IsInitialized() const {

  return true;
}

void E_AssistThank::Swap(E_AssistThank* other) {
  if (other != this) {
    std::swap(m_id_, other->m_id_);
    std::swap(m_msg_, other->m_msg_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_AssistThank::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_AssistThank_descriptor_;
  metadata.reflection = E_AssistThank_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_AssistThank::kEAssistThankListFieldNumber;
#endif  // !_MSC_VER

Sheet_AssistThank::Sheet_AssistThank()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_AssistThank::InitAsDefaultInstance() {
}

Sheet_AssistThank::Sheet_AssistThank(const Sheet_AssistThank& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_AssistThank::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_AssistThank::~Sheet_AssistThank() {
  SharedDtor();
}

void Sheet_AssistThank::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_AssistThank::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_AssistThank::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_AssistThank_descriptor_;
}

const Sheet_AssistThank& Sheet_AssistThank::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fAssist_2eproto();
  return *default_instance_;
}

Sheet_AssistThank* Sheet_AssistThank::default_instance_ = NULL;

Sheet_AssistThank* Sheet_AssistThank::New() const {
  return new Sheet_AssistThank;
}

void Sheet_AssistThank::Clear() {
  e_assistthank_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_AssistThank::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.E_AssistThank E_AssistThank_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_E_AssistThank_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_e_assistthank_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_E_AssistThank_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_AssistThank::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.E_AssistThank E_AssistThank_List = 1;
  for (int i = 0; i < this->e_assistthank_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->e_assistthank_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_AssistThank::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.E_AssistThank E_AssistThank_List = 1;
  for (int i = 0; i < this->e_assistthank_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->e_assistthank_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_AssistThank::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.E_AssistThank E_AssistThank_List = 1;
  total_size += 1 * this->e_assistthank_list_size();
  for (int i = 0; i < this->e_assistthank_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->e_assistthank_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_AssistThank::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_AssistThank* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_AssistThank*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_AssistThank::MergeFrom(const Sheet_AssistThank& from) {
  GOOGLE_CHECK_NE(&from, this);
  e_assistthank_list_.MergeFrom(from.e_assistthank_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_AssistThank::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_AssistThank::CopyFrom(const Sheet_AssistThank& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_AssistThank::IsInitialized() const {

  return true;
}

void Sheet_AssistThank::Swap(Sheet_AssistThank* other) {
  if (other != this) {
    e_assistthank_list_.Swap(&other->e_assistthank_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_AssistThank::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_AssistThank_descriptor_;
  metadata.reflection = Sheet_AssistThank_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_AssistConst::kMIdFieldNumber;
const int E_AssistConst::kMSenderGiftFieldNumber;
const int E_AssistConst::kMSenderGiftNumFieldNumber;
const int E_AssistConst::kMHelperGiftFieldNumber;
const int E_AssistConst::kMHelperGiftNumFieldNumber;
const int E_AssistConst::kMPrestigeDaylimitFieldNumber;
const int E_AssistConst::kMPrestigeDayBosslimitFieldNumber;
#endif  // !_MSC_VER

E_AssistConst::E_AssistConst()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_AssistConst::InitAsDefaultInstance() {
}

E_AssistConst::E_AssistConst(const E_AssistConst& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_AssistConst::SharedCtor() {
  _cached_size_ = 0;
  m_id_ = 0;
  m_sendergift_ = 0;
  m_sendergiftnum_ = 0;
  m_helpergift_ = 0;
  m_helpergiftnum_ = 0;
  m_prestigedaylimit_ = 0;
  m_prestigedaybosslimit_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_AssistConst::~E_AssistConst() {
  SharedDtor();
}

void E_AssistConst::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_AssistConst::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_AssistConst::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_AssistConst_descriptor_;
}

const E_AssistConst& E_AssistConst::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fAssist_2eproto();
  return *default_instance_;
}

E_AssistConst* E_AssistConst::default_instance_ = NULL;

E_AssistConst* E_AssistConst::New() const {
  return new E_AssistConst;
}

void E_AssistConst::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_id_ = 0;
    m_sendergift_ = 0;
    m_sendergiftnum_ = 0;
    m_helpergift_ = 0;
    m_helpergiftnum_ = 0;
    m_prestigedaylimit_ = 0;
    m_prestigedaybosslimit_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_AssistConst::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_id_)));
          set_has_m_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_senderGift;
        break;
      }

      // optional int32 m_senderGift = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_senderGift:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_sendergift_)));
          set_has_m_sendergift();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_m_senderGiftNum;
        break;
      }

      // optional int32 m_senderGiftNum = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_senderGiftNum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_sendergiftnum_)));
          set_has_m_sendergiftnum();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_m_helperGift;
        break;
      }

      // optional int32 m_helperGift = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_helperGift:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_helpergift_)));
          set_has_m_helpergift();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_m_helperGiftNum;
        break;
      }

      // optional int32 m_helperGiftNum = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_helperGiftNum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_helpergiftnum_)));
          set_has_m_helpergiftnum();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_m_prestigeDaylimit;
        break;
      }

      // optional int32 m_prestigeDaylimit = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_prestigeDaylimit:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_prestigedaylimit_)));
          set_has_m_prestigedaylimit();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_m_prestigeDayBosslimit;
        break;
      }

      // optional int32 m_prestigeDayBosslimit = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_prestigeDayBosslimit:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_prestigedaybosslimit_)));
          set_has_m_prestigedaybosslimit();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_AssistConst::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_id(), output);
  }

  // optional int32 m_senderGift = 2;
  if (has_m_sendergift()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_sendergift(), output);
  }

  // optional int32 m_senderGiftNum = 3;
  if (has_m_sendergiftnum()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->m_sendergiftnum(), output);
  }

  // optional int32 m_helperGift = 4;
  if (has_m_helpergift()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->m_helpergift(), output);
  }

  // optional int32 m_helperGiftNum = 5;
  if (has_m_helpergiftnum()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->m_helpergiftnum(), output);
  }

  // optional int32 m_prestigeDaylimit = 6;
  if (has_m_prestigedaylimit()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->m_prestigedaylimit(), output);
  }

  // optional int32 m_prestigeDayBosslimit = 7;
  if (has_m_prestigedaybosslimit()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->m_prestigedaybosslimit(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_AssistConst::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_id(), target);
  }

  // optional int32 m_senderGift = 2;
  if (has_m_sendergift()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_sendergift(), target);
  }

  // optional int32 m_senderGiftNum = 3;
  if (has_m_sendergiftnum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->m_sendergiftnum(), target);
  }

  // optional int32 m_helperGift = 4;
  if (has_m_helpergift()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->m_helpergift(), target);
  }

  // optional int32 m_helperGiftNum = 5;
  if (has_m_helpergiftnum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->m_helpergiftnum(), target);
  }

  // optional int32 m_prestigeDaylimit = 6;
  if (has_m_prestigedaylimit()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->m_prestigedaylimit(), target);
  }

  // optional int32 m_prestigeDayBosslimit = 7;
  if (has_m_prestigedaybosslimit()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->m_prestigedaybosslimit(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_AssistConst::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_id = 1;
    if (has_m_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_id());
    }

    // optional int32 m_senderGift = 2;
    if (has_m_sendergift()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_sendergift());
    }

    // optional int32 m_senderGiftNum = 3;
    if (has_m_sendergiftnum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_sendergiftnum());
    }

    // optional int32 m_helperGift = 4;
    if (has_m_helpergift()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_helpergift());
    }

    // optional int32 m_helperGiftNum = 5;
    if (has_m_helpergiftnum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_helpergiftnum());
    }

    // optional int32 m_prestigeDaylimit = 6;
    if (has_m_prestigedaylimit()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_prestigedaylimit());
    }

    // optional int32 m_prestigeDayBosslimit = 7;
    if (has_m_prestigedaybosslimit()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_prestigedaybosslimit());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_AssistConst::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_AssistConst* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_AssistConst*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_AssistConst::MergeFrom(const E_AssistConst& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_id()) {
      set_m_id(from.m_id());
    }
    if (from.has_m_sendergift()) {
      set_m_sendergift(from.m_sendergift());
    }
    if (from.has_m_sendergiftnum()) {
      set_m_sendergiftnum(from.m_sendergiftnum());
    }
    if (from.has_m_helpergift()) {
      set_m_helpergift(from.m_helpergift());
    }
    if (from.has_m_helpergiftnum()) {
      set_m_helpergiftnum(from.m_helpergiftnum());
    }
    if (from.has_m_prestigedaylimit()) {
      set_m_prestigedaylimit(from.m_prestigedaylimit());
    }
    if (from.has_m_prestigedaybosslimit()) {
      set_m_prestigedaybosslimit(from.m_prestigedaybosslimit());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_AssistConst::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_AssistConst::CopyFrom(const E_AssistConst& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_AssistConst::IsInitialized() const {

  return true;
}

void E_AssistConst::Swap(E_AssistConst* other) {
  if (other != this) {
    std::swap(m_id_, other->m_id_);
    std::swap(m_sendergift_, other->m_sendergift_);
    std::swap(m_sendergiftnum_, other->m_sendergiftnum_);
    std::swap(m_helpergift_, other->m_helpergift_);
    std::swap(m_helpergiftnum_, other->m_helpergiftnum_);
    std::swap(m_prestigedaylimit_, other->m_prestigedaylimit_);
    std::swap(m_prestigedaybosslimit_, other->m_prestigedaybosslimit_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_AssistConst::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_AssistConst_descriptor_;
  metadata.reflection = E_AssistConst_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_AssistConst::kEAssistConstListFieldNumber;
#endif  // !_MSC_VER

Sheet_AssistConst::Sheet_AssistConst()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_AssistConst::InitAsDefaultInstance() {
}

Sheet_AssistConst::Sheet_AssistConst(const Sheet_AssistConst& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_AssistConst::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_AssistConst::~Sheet_AssistConst() {
  SharedDtor();
}

void Sheet_AssistConst::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_AssistConst::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_AssistConst::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_AssistConst_descriptor_;
}

const Sheet_AssistConst& Sheet_AssistConst::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fAssist_2eproto();
  return *default_instance_;
}

Sheet_AssistConst* Sheet_AssistConst::default_instance_ = NULL;

Sheet_AssistConst* Sheet_AssistConst::New() const {
  return new Sheet_AssistConst;
}

void Sheet_AssistConst::Clear() {
  e_assistconst_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_AssistConst::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.E_AssistConst E_AssistConst_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_E_AssistConst_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_e_assistconst_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_E_AssistConst_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_AssistConst::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.E_AssistConst E_AssistConst_List = 1;
  for (int i = 0; i < this->e_assistconst_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->e_assistconst_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_AssistConst::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.E_AssistConst E_AssistConst_List = 1;
  for (int i = 0; i < this->e_assistconst_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->e_assistconst_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_AssistConst::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.E_AssistConst E_AssistConst_List = 1;
  total_size += 1 * this->e_assistconst_list_size();
  for (int i = 0; i < this->e_assistconst_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->e_assistconst_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_AssistConst::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_AssistConst* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_AssistConst*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_AssistConst::MergeFrom(const Sheet_AssistConst& from) {
  GOOGLE_CHECK_NE(&from, this);
  e_assistconst_list_.MergeFrom(from.e_assistconst_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_AssistConst::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_AssistConst::CopyFrom(const Sheet_AssistConst& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_AssistConst::IsInitialized() const {

  return true;
}

void Sheet_AssistConst::Swap(Sheet_AssistConst* other) {
  if (other != this) {
    e_assistconst_list_.Swap(&other->e_assistconst_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_AssistConst::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_AssistConst_descriptor_;
  metadata.reflection = Sheet_AssistConst_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto_ff

// @@protoc_insertion_point(global_scope)
