// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: huoyuedu.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "huoyuedu.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace proto_ff {

namespace {

const ::google::protobuf::Descriptor* huoyuedureward_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  huoyuedureward_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_huoyuedureward_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_huoyuedureward_reflection_ = NULL;
const ::google::protobuf::Descriptor* huoyueduactive_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  huoyueduactive_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_huoyueduactive_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_huoyueduactive_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_huoyuedu_2eproto() {
  protobuf_AddDesc_huoyuedu_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "huoyuedu.proto");
  GOOGLE_CHECK(file != NULL);
  huoyuedureward_descriptor_ = file->message_type(0);
  static const int huoyuedureward_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(huoyuedureward, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(huoyuedureward, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(huoyuedureward, activescore_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(huoyuedureward, rewardid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(huoyuedureward, rewardnum_),
  };
  huoyuedureward_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      huoyuedureward_descriptor_,
      huoyuedureward::default_instance_,
      huoyuedureward_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(huoyuedureward, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(huoyuedureward, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(huoyuedureward));
  Sheet_huoyuedureward_descriptor_ = file->message_type(1);
  static const int Sheet_huoyuedureward_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_huoyuedureward, huoyuedureward_list_),
  };
  Sheet_huoyuedureward_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_huoyuedureward_descriptor_,
      Sheet_huoyuedureward::default_instance_,
      Sheet_huoyuedureward_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_huoyuedureward, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_huoyuedureward, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_huoyuedureward));
  huoyueduactive_descriptor_ = file->message_type(2);
  static const int huoyueduactive_offsets_[13] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(huoyueduactive, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(huoyueduactive, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(huoyueduactive, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(huoyueduactive, args_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(huoyueduactive, funciontid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(huoyueduactive, countrule_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(huoyueduactive, countparam_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(huoyueduactive, number_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(huoyueduactive, viptype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(huoyueduactive, othernum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(huoyueduactive, eachscore_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(huoyueduactive, activitynum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(huoyueduactive, cycle_),
  };
  huoyueduactive_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      huoyueduactive_descriptor_,
      huoyueduactive::default_instance_,
      huoyueduactive_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(huoyueduactive, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(huoyueduactive, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(huoyueduactive));
  Sheet_huoyueduactive_descriptor_ = file->message_type(3);
  static const int Sheet_huoyueduactive_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_huoyueduactive, huoyueduactive_list_),
  };
  Sheet_huoyueduactive_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_huoyueduactive_descriptor_,
      Sheet_huoyueduactive::default_instance_,
      Sheet_huoyueduactive_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_huoyueduactive, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_huoyueduactive, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_huoyueduactive));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_huoyuedu_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    huoyuedureward_descriptor_, &huoyuedureward::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_huoyuedureward_descriptor_, &Sheet_huoyuedureward::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    huoyueduactive_descriptor_, &huoyueduactive::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_huoyueduactive_descriptor_, &Sheet_huoyueduactive::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_huoyuedu_2eproto() {
  delete huoyuedureward::default_instance_;
  delete huoyuedureward_reflection_;
  delete Sheet_huoyuedureward::default_instance_;
  delete Sheet_huoyuedureward_reflection_;
  delete huoyueduactive::default_instance_;
  delete huoyueduactive_reflection_;
  delete Sheet_huoyueduactive::default_instance_;
  delete Sheet_huoyueduactive_reflection_;
}

void protobuf_AddDesc_huoyuedu_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::yd_fieldoptions::protobuf_AddDesc_yd_5ffieldoptions_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\016huoyuedu.proto\022\010proto_ff\032\025yd_fieldopti"
    "ons.proto\"\256\001\n\016huoyuedureward\022\026\n\002id\030\001 \001(\005"
    "B\n\302\377\024\006\347\264\242\345\274\225\022\030\n\004type\030\002 \001(\005B\n\302\377\024\006\347\261\273\345\236\213\022%"
    "\n\013activeScore\030\003 \001(\005B\020\302\377\024\014\346\264\273\350\267\203\345\272\246\345\200\274\022\036\n"
    "\010rewardId\030\004 \001(\003B\014\302\377\024\010\345\245\226\345\212\261ID\022#\n\trewardN"
    "um\030\005 \001(\005B\020\302\377\024\014\345\245\226\345\212\261\346\225\260\351\207\217\"S\n\024Sheet_huoy"
    "uedureward\022;\n\023huoyuedureward_List\030\001 \003(\0132"
    "\030.proto_ff.huoyuedurewardB\004\210\301\024\024\"\326\003\n\016huoy"
    "ueduactive\022\030\n\002id\030\001 \001(\003B\014\302\377\024\010\347\261\273\345\236\213ID\022\"\n\004"
    "name\030\002 \001(\tB\024\302\377\024\014\346\230\276\347\244\272\345\220\215\347\247\260\220\301\024<\022\036\n\004type"
    "\030\003 \001(\005B\020\302\377\024\014\346\264\273\345\212\250\347\261\273\345\236\213\022\034\n\004args\030\004 \001(\tB\016"
    "\302\377\024\006\345\217\202\346\225\260\220\301\024<\022 \n\nfunciontID\030\005 \001(\003B\014\302\377\024\010"
    "\345\212\237\350\203\275ID\022#\n\tcountRule\030\006 \001(\005B\020\302\377\024\014\350\256\241\346\254\241\350"
    "\247\204\345\210\231\022(\n\ncountParam\030\007 \001(\tB\024\302\377\024\014\350\256\241\346\254\241\345\217\202"
    "\346\225\260\220\301\024<\022\032\n\006number\030\010 \001(\005B\n\302\377\024\006\346\254\241\346\225\260\022\036\n\007v"
    "iptype\030\t \001(\005B\r\302\377\024\tVIP\347\261\273\345\236\213\022+\n\010otherNum\030"
    "\n \001(\005B\031\302\377\024\025\345\205\266\344\275\231\345\217\257\350\264\255\344\271\260\346\254\241\346\225\260\022&\n\teach"
    "Score\030\013 \001(\005B\023\302\377\024\017\346\257\217\346\254\241\346\264\273\350\267\203\345\200\274\022%\n\013acti"
    "vityNum\030\014 \001(\005B\020\302\377\024\014\350\277\275\350\270\252\346\254\241\346\225\260\022\037\n\005cycle"
    "\030\r \001(\005B\020\302\377\024\014\351\207\215\347\275\256\345\221\250\346\234\237\"S\n\024Sheet_huoyue"
    "duactive\022;\n\023huoyueduactive_List\030\001 \003(\0132\030."
    "proto_ff.huoyueduactiveB\004\210\301\024P", 869);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "huoyuedu.proto", &protobuf_RegisterTypes);
  huoyuedureward::default_instance_ = new huoyuedureward();
  Sheet_huoyuedureward::default_instance_ = new Sheet_huoyuedureward();
  huoyueduactive::default_instance_ = new huoyueduactive();
  Sheet_huoyueduactive::default_instance_ = new Sheet_huoyueduactive();
  huoyuedureward::default_instance_->InitAsDefaultInstance();
  Sheet_huoyuedureward::default_instance_->InitAsDefaultInstance();
  huoyueduactive::default_instance_->InitAsDefaultInstance();
  Sheet_huoyueduactive::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_huoyuedu_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_huoyuedu_2eproto {
  StaticDescriptorInitializer_huoyuedu_2eproto() {
    protobuf_AddDesc_huoyuedu_2eproto();
  }
} static_descriptor_initializer_huoyuedu_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int huoyuedureward::kIdFieldNumber;
const int huoyuedureward::kTypeFieldNumber;
const int huoyuedureward::kActiveScoreFieldNumber;
const int huoyuedureward::kRewardIdFieldNumber;
const int huoyuedureward::kRewardNumFieldNumber;
#endif  // !_MSC_VER

huoyuedureward::huoyuedureward()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void huoyuedureward::InitAsDefaultInstance() {
}

huoyuedureward::huoyuedureward(const huoyuedureward& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void huoyuedureward::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0;
  type_ = 0;
  activescore_ = 0;
  rewardid_ = GOOGLE_LONGLONG(0);
  rewardnum_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

huoyuedureward::~huoyuedureward() {
  SharedDtor();
}

void huoyuedureward::SharedDtor() {
  if (this != default_instance_) {
  }
}

void huoyuedureward::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* huoyuedureward::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return huoyuedureward_descriptor_;
}

const huoyuedureward& huoyuedureward::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_huoyuedu_2eproto();
  return *default_instance_;
}

huoyuedureward* huoyuedureward::default_instance_ = NULL;

huoyuedureward* huoyuedureward::New() const {
  return new huoyuedureward;
}

void huoyuedureward::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    id_ = 0;
    type_ = 0;
    activescore_ = 0;
    rewardid_ = GOOGLE_LONGLONG(0);
    rewardnum_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool huoyuedureward::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_type;
        break;
      }

      // optional int32 type = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_activeScore;
        break;
      }

      // optional int32 activeScore = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_activeScore:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &activescore_)));
          set_has_activescore();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_rewardId;
        break;
      }

      // optional int64 rewardId = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_rewardId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &rewardid_)));
          set_has_rewardid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_rewardNum;
        break;
      }

      // optional int32 rewardNum = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_rewardNum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &rewardnum_)));
          set_has_rewardnum();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void huoyuedureward::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // optional int32 type = 2;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->type(), output);
  }

  // optional int32 activeScore = 3;
  if (has_activescore()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->activescore(), output);
  }

  // optional int64 rewardId = 4;
  if (has_rewardid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->rewardid(), output);
  }

  // optional int32 rewardNum = 5;
  if (has_rewardnum()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->rewardnum(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* huoyuedureward::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // optional int32 type = 2;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->type(), target);
  }

  // optional int32 activeScore = 3;
  if (has_activescore()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->activescore(), target);
  }

  // optional int64 rewardId = 4;
  if (has_rewardid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->rewardid(), target);
  }

  // optional int32 rewardNum = 5;
  if (has_rewardnum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->rewardnum(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int huoyuedureward::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->id());
    }

    // optional int32 type = 2;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type());
    }

    // optional int32 activeScore = 3;
    if (has_activescore()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->activescore());
    }

    // optional int64 rewardId = 4;
    if (has_rewardid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->rewardid());
    }

    // optional int32 rewardNum = 5;
    if (has_rewardnum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->rewardnum());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void huoyuedureward::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const huoyuedureward* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const huoyuedureward*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void huoyuedureward::MergeFrom(const huoyuedureward& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_activescore()) {
      set_activescore(from.activescore());
    }
    if (from.has_rewardid()) {
      set_rewardid(from.rewardid());
    }
    if (from.has_rewardnum()) {
      set_rewardnum(from.rewardnum());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void huoyuedureward::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void huoyuedureward::CopyFrom(const huoyuedureward& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool huoyuedureward::IsInitialized() const {

  return true;
}

void huoyuedureward::Swap(huoyuedureward* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(type_, other->type_);
    std::swap(activescore_, other->activescore_);
    std::swap(rewardid_, other->rewardid_);
    std::swap(rewardnum_, other->rewardnum_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata huoyuedureward::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = huoyuedureward_descriptor_;
  metadata.reflection = huoyuedureward_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_huoyuedureward::kHuoyuedurewardListFieldNumber;
#endif  // !_MSC_VER

Sheet_huoyuedureward::Sheet_huoyuedureward()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_huoyuedureward::InitAsDefaultInstance() {
}

Sheet_huoyuedureward::Sheet_huoyuedureward(const Sheet_huoyuedureward& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_huoyuedureward::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_huoyuedureward::~Sheet_huoyuedureward() {
  SharedDtor();
}

void Sheet_huoyuedureward::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_huoyuedureward::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_huoyuedureward::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_huoyuedureward_descriptor_;
}

const Sheet_huoyuedureward& Sheet_huoyuedureward::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_huoyuedu_2eproto();
  return *default_instance_;
}

Sheet_huoyuedureward* Sheet_huoyuedureward::default_instance_ = NULL;

Sheet_huoyuedureward* Sheet_huoyuedureward::New() const {
  return new Sheet_huoyuedureward;
}

void Sheet_huoyuedureward::Clear() {
  huoyuedureward_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_huoyuedureward::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.huoyuedureward huoyuedureward_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_huoyuedureward_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_huoyuedureward_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_huoyuedureward_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_huoyuedureward::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.huoyuedureward huoyuedureward_List = 1;
  for (int i = 0; i < this->huoyuedureward_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->huoyuedureward_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_huoyuedureward::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.huoyuedureward huoyuedureward_List = 1;
  for (int i = 0; i < this->huoyuedureward_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->huoyuedureward_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_huoyuedureward::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.huoyuedureward huoyuedureward_List = 1;
  total_size += 1 * this->huoyuedureward_list_size();
  for (int i = 0; i < this->huoyuedureward_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->huoyuedureward_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_huoyuedureward::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_huoyuedureward* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_huoyuedureward*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_huoyuedureward::MergeFrom(const Sheet_huoyuedureward& from) {
  GOOGLE_CHECK_NE(&from, this);
  huoyuedureward_list_.MergeFrom(from.huoyuedureward_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_huoyuedureward::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_huoyuedureward::CopyFrom(const Sheet_huoyuedureward& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_huoyuedureward::IsInitialized() const {

  return true;
}

void Sheet_huoyuedureward::Swap(Sheet_huoyuedureward* other) {
  if (other != this) {
    huoyuedureward_list_.Swap(&other->huoyuedureward_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_huoyuedureward::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_huoyuedureward_descriptor_;
  metadata.reflection = Sheet_huoyuedureward_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int huoyueduactive::kIdFieldNumber;
const int huoyueduactive::kNameFieldNumber;
const int huoyueduactive::kTypeFieldNumber;
const int huoyueduactive::kArgsFieldNumber;
const int huoyueduactive::kFunciontIDFieldNumber;
const int huoyueduactive::kCountRuleFieldNumber;
const int huoyueduactive::kCountParamFieldNumber;
const int huoyueduactive::kNumberFieldNumber;
const int huoyueduactive::kViptypeFieldNumber;
const int huoyueduactive::kOtherNumFieldNumber;
const int huoyueduactive::kEachScoreFieldNumber;
const int huoyueduactive::kActivityNumFieldNumber;
const int huoyueduactive::kCycleFieldNumber;
#endif  // !_MSC_VER

huoyueduactive::huoyueduactive()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void huoyueduactive::InitAsDefaultInstance() {
}

huoyueduactive::huoyueduactive(const huoyueduactive& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void huoyueduactive::SharedCtor() {
  _cached_size_ = 0;
  id_ = GOOGLE_LONGLONG(0);
  name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  type_ = 0;
  args_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  funciontid_ = GOOGLE_LONGLONG(0);
  countrule_ = 0;
  countparam_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  number_ = 0;
  viptype_ = 0;
  othernum_ = 0;
  eachscore_ = 0;
  activitynum_ = 0;
  cycle_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

huoyueduactive::~huoyueduactive() {
  SharedDtor();
}

void huoyueduactive::SharedDtor() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (args_ != &::google::protobuf::internal::kEmptyString) {
    delete args_;
  }
  if (countparam_ != &::google::protobuf::internal::kEmptyString) {
    delete countparam_;
  }
  if (this != default_instance_) {
  }
}

void huoyueduactive::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* huoyueduactive::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return huoyueduactive_descriptor_;
}

const huoyueduactive& huoyueduactive::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_huoyuedu_2eproto();
  return *default_instance_;
}

huoyueduactive* huoyueduactive::default_instance_ = NULL;

huoyueduactive* huoyueduactive::New() const {
  return new huoyueduactive;
}

void huoyueduactive::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    id_ = GOOGLE_LONGLONG(0);
    if (has_name()) {
      if (name_ != &::google::protobuf::internal::kEmptyString) {
        name_->clear();
      }
    }
    type_ = 0;
    if (has_args()) {
      if (args_ != &::google::protobuf::internal::kEmptyString) {
        args_->clear();
      }
    }
    funciontid_ = GOOGLE_LONGLONG(0);
    countrule_ = 0;
    if (has_countparam()) {
      if (countparam_ != &::google::protobuf::internal::kEmptyString) {
        countparam_->clear();
      }
    }
    number_ = 0;
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    viptype_ = 0;
    othernum_ = 0;
    eachscore_ = 0;
    activitynum_ = 0;
    cycle_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool huoyueduactive::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_name;
        break;
      }

      // optional string name = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_type;
        break;
      }

      // optional int32 type = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_args;
        break;
      }

      // optional string args = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_args:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_args()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->args().data(), this->args().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_funciontID;
        break;
      }

      // optional int64 funciontID = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_funciontID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &funciontid_)));
          set_has_funciontid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_countRule;
        break;
      }

      // optional int32 countRule = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_countRule:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &countrule_)));
          set_has_countrule();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(58)) goto parse_countParam;
        break;
      }

      // optional string countParam = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_countParam:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_countparam()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->countparam().data(), this->countparam().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(64)) goto parse_number;
        break;
      }

      // optional int32 number = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_number:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &number_)));
          set_has_number();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(72)) goto parse_viptype;
        break;
      }

      // optional int32 viptype = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_viptype:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &viptype_)));
          set_has_viptype();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(80)) goto parse_otherNum;
        break;
      }

      // optional int32 otherNum = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_otherNum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &othernum_)));
          set_has_othernum();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(88)) goto parse_eachScore;
        break;
      }

      // optional int32 eachScore = 11;
      case 11: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_eachScore:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &eachscore_)));
          set_has_eachscore();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(96)) goto parse_activityNum;
        break;
      }

      // optional int32 activityNum = 12;
      case 12: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_activityNum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &activitynum_)));
          set_has_activitynum();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(104)) goto parse_cycle;
        break;
      }

      // optional int32 cycle = 13;
      case 13: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_cycle:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cycle_)));
          set_has_cycle();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void huoyueduactive::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->id(), output);
  }

  // optional string name = 2;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->name(), output);
  }

  // optional int32 type = 3;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->type(), output);
  }

  // optional string args = 4;
  if (has_args()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->args().data(), this->args().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->args(), output);
  }

  // optional int64 funciontID = 5;
  if (has_funciontid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->funciontid(), output);
  }

  // optional int32 countRule = 6;
  if (has_countrule()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->countrule(), output);
  }

  // optional string countParam = 7;
  if (has_countparam()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->countparam().data(), this->countparam().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      7, this->countparam(), output);
  }

  // optional int32 number = 8;
  if (has_number()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->number(), output);
  }

  // optional int32 viptype = 9;
  if (has_viptype()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->viptype(), output);
  }

  // optional int32 otherNum = 10;
  if (has_othernum()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->othernum(), output);
  }

  // optional int32 eachScore = 11;
  if (has_eachscore()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->eachscore(), output);
  }

  // optional int32 activityNum = 12;
  if (has_activitynum()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(12, this->activitynum(), output);
  }

  // optional int32 cycle = 13;
  if (has_cycle()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(13, this->cycle(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* huoyueduactive::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->id(), target);
  }

  // optional string name = 2;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // optional int32 type = 3;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->type(), target);
  }

  // optional string args = 4;
  if (has_args()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->args().data(), this->args().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->args(), target);
  }

  // optional int64 funciontID = 5;
  if (has_funciontid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(5, this->funciontid(), target);
  }

  // optional int32 countRule = 6;
  if (has_countrule()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->countrule(), target);
  }

  // optional string countParam = 7;
  if (has_countparam()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->countparam().data(), this->countparam().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->countparam(), target);
  }

  // optional int32 number = 8;
  if (has_number()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->number(), target);
  }

  // optional int32 viptype = 9;
  if (has_viptype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->viptype(), target);
  }

  // optional int32 otherNum = 10;
  if (has_othernum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->othernum(), target);
  }

  // optional int32 eachScore = 11;
  if (has_eachscore()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->eachscore(), target);
  }

  // optional int32 activityNum = 12;
  if (has_activitynum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(12, this->activitynum(), target);
  }

  // optional int32 cycle = 13;
  if (has_cycle()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(13, this->cycle(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int huoyueduactive::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->id());
    }

    // optional string name = 2;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional int32 type = 3;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type());
    }

    // optional string args = 4;
    if (has_args()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->args());
    }

    // optional int64 funciontID = 5;
    if (has_funciontid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->funciontid());
    }

    // optional int32 countRule = 6;
    if (has_countrule()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->countrule());
    }

    // optional string countParam = 7;
    if (has_countparam()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->countparam());
    }

    // optional int32 number = 8;
    if (has_number()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->number());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional int32 viptype = 9;
    if (has_viptype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->viptype());
    }

    // optional int32 otherNum = 10;
    if (has_othernum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->othernum());
    }

    // optional int32 eachScore = 11;
    if (has_eachscore()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->eachscore());
    }

    // optional int32 activityNum = 12;
    if (has_activitynum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->activitynum());
    }

    // optional int32 cycle = 13;
    if (has_cycle()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->cycle());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void huoyueduactive::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const huoyueduactive* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const huoyueduactive*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void huoyueduactive::MergeFrom(const huoyueduactive& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_name()) {
      set_name(from.name());
    }
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_args()) {
      set_args(from.args());
    }
    if (from.has_funciontid()) {
      set_funciontid(from.funciontid());
    }
    if (from.has_countrule()) {
      set_countrule(from.countrule());
    }
    if (from.has_countparam()) {
      set_countparam(from.countparam());
    }
    if (from.has_number()) {
      set_number(from.number());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_viptype()) {
      set_viptype(from.viptype());
    }
    if (from.has_othernum()) {
      set_othernum(from.othernum());
    }
    if (from.has_eachscore()) {
      set_eachscore(from.eachscore());
    }
    if (from.has_activitynum()) {
      set_activitynum(from.activitynum());
    }
    if (from.has_cycle()) {
      set_cycle(from.cycle());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void huoyueduactive::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void huoyueduactive::CopyFrom(const huoyueduactive& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool huoyueduactive::IsInitialized() const {

  return true;
}

void huoyueduactive::Swap(huoyueduactive* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(name_, other->name_);
    std::swap(type_, other->type_);
    std::swap(args_, other->args_);
    std::swap(funciontid_, other->funciontid_);
    std::swap(countrule_, other->countrule_);
    std::swap(countparam_, other->countparam_);
    std::swap(number_, other->number_);
    std::swap(viptype_, other->viptype_);
    std::swap(othernum_, other->othernum_);
    std::swap(eachscore_, other->eachscore_);
    std::swap(activitynum_, other->activitynum_);
    std::swap(cycle_, other->cycle_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata huoyueduactive::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = huoyueduactive_descriptor_;
  metadata.reflection = huoyueduactive_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_huoyueduactive::kHuoyueduactiveListFieldNumber;
#endif  // !_MSC_VER

Sheet_huoyueduactive::Sheet_huoyueduactive()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_huoyueduactive::InitAsDefaultInstance() {
}

Sheet_huoyueduactive::Sheet_huoyueduactive(const Sheet_huoyueduactive& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_huoyueduactive::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_huoyueduactive::~Sheet_huoyueduactive() {
  SharedDtor();
}

void Sheet_huoyueduactive::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_huoyueduactive::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_huoyueduactive::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_huoyueduactive_descriptor_;
}

const Sheet_huoyueduactive& Sheet_huoyueduactive::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_huoyuedu_2eproto();
  return *default_instance_;
}

Sheet_huoyueduactive* Sheet_huoyueduactive::default_instance_ = NULL;

Sheet_huoyueduactive* Sheet_huoyueduactive::New() const {
  return new Sheet_huoyueduactive;
}

void Sheet_huoyueduactive::Clear() {
  huoyueduactive_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_huoyueduactive::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.huoyueduactive huoyueduactive_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_huoyueduactive_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_huoyueduactive_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_huoyueduactive_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_huoyueduactive::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.huoyueduactive huoyueduactive_List = 1;
  for (int i = 0; i < this->huoyueduactive_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->huoyueduactive_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_huoyueduactive::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.huoyueduactive huoyueduactive_List = 1;
  for (int i = 0; i < this->huoyueduactive_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->huoyueduactive_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_huoyueduactive::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.huoyueduactive huoyueduactive_List = 1;
  total_size += 1 * this->huoyueduactive_list_size();
  for (int i = 0; i < this->huoyueduactive_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->huoyueduactive_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_huoyueduactive::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_huoyueduactive* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_huoyueduactive*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_huoyueduactive::MergeFrom(const Sheet_huoyueduactive& from) {
  GOOGLE_CHECK_NE(&from, this);
  huoyueduactive_list_.MergeFrom(from.huoyueduactive_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_huoyueduactive::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_huoyueduactive::CopyFrom(const Sheet_huoyueduactive& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_huoyueduactive::IsInitialized() const {

  return true;
}

void Sheet_huoyueduactive::Swap(Sheet_huoyueduactive* other) {
  if (other != this) {
    huoyueduactive_list_.Swap(&other->huoyueduactive_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_huoyueduactive::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_huoyueduactive_descriptor_;
  metadata.reflection = Sheet_huoyueduactive_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto_ff

// @@protoc_insertion_point(global_scope)
