// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: E_Taskreward.proto

#ifndef PROTOBUF_E_5fTaskreward_2eproto__INCLUDED
#define PROTOBUF_E_5fTaskreward_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "yd_fieldoptions.pb.h"
// @@protoc_insertion_point(includes)

namespace proto_ff {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_E_5fTaskreward_2eproto();
void protobuf_AssignDesc_E_5fTaskreward_2eproto();
void protobuf_ShutdownFile_E_5fTaskreward_2eproto();

class E_TaskrewardTaskrewardAttrDesc;
class E_TaskrewardTaskrewardItemDesc;
class E_TaskrewardTaskreward;
class Sheet_TaskrewardTaskreward;
class E_TaskrewardTasktype;
class Sheet_TaskrewardTasktype;

// ===================================================================

class E_TaskrewardTaskrewardAttrDesc : public ::google::protobuf::Message {
 public:
  E_TaskrewardTaskrewardAttrDesc();
  virtual ~E_TaskrewardTaskrewardAttrDesc();

  E_TaskrewardTaskrewardAttrDesc(const E_TaskrewardTaskrewardAttrDesc& from);

  inline E_TaskrewardTaskrewardAttrDesc& operator=(const E_TaskrewardTaskrewardAttrDesc& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_TaskrewardTaskrewardAttrDesc& default_instance();

  void Swap(E_TaskrewardTaskrewardAttrDesc* other);

  // implements Message ----------------------------------------------

  E_TaskrewardTaskrewardAttrDesc* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_TaskrewardTaskrewardAttrDesc& from);
  void MergeFrom(const E_TaskrewardTaskrewardAttrDesc& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 m_val = 1;
  inline bool has_m_val() const;
  inline void clear_m_val();
  static const int kMValFieldNumber = 1;
  inline ::google::protobuf::int64 m_val() const;
  inline void set_m_val(::google::protobuf::int64 value);

  // optional int64 m_id = 2;
  inline bool has_m_id() const;
  inline void clear_m_id();
  static const int kMIdFieldNumber = 2;
  inline ::google::protobuf::int64 m_id() const;
  inline void set_m_id(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.E_TaskrewardTaskrewardAttrDesc)
 private:
  inline void set_has_m_val();
  inline void clear_has_m_val();
  inline void set_has_m_id();
  inline void clear_has_m_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 m_val_;
  ::google::protobuf::int64 m_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fTaskreward_2eproto();
  friend void protobuf_AssignDesc_E_5fTaskreward_2eproto();
  friend void protobuf_ShutdownFile_E_5fTaskreward_2eproto();

  void InitAsDefaultInstance();
  static E_TaskrewardTaskrewardAttrDesc* default_instance_;
};
// -------------------------------------------------------------------

class E_TaskrewardTaskrewardItemDesc : public ::google::protobuf::Message {
 public:
  E_TaskrewardTaskrewardItemDesc();
  virtual ~E_TaskrewardTaskrewardItemDesc();

  E_TaskrewardTaskrewardItemDesc(const E_TaskrewardTaskrewardItemDesc& from);

  inline E_TaskrewardTaskrewardItemDesc& operator=(const E_TaskrewardTaskrewardItemDesc& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_TaskrewardTaskrewardItemDesc& default_instance();

  void Swap(E_TaskrewardTaskrewardItemDesc* other);

  // implements Message ----------------------------------------------

  E_TaskrewardTaskrewardItemDesc* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_TaskrewardTaskrewardItemDesc& from);
  void MergeFrom(const E_TaskrewardTaskrewardItemDesc& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 m_prof = 1;
  inline bool has_m_prof() const;
  inline void clear_m_prof();
  static const int kMProfFieldNumber = 1;
  inline ::google::protobuf::int32 m_prof() const;
  inline void set_m_prof(::google::protobuf::int32 value);

  // optional int32 m_bind = 2;
  inline bool has_m_bind() const;
  inline void clear_m_bind();
  static const int kMBindFieldNumber = 2;
  inline ::google::protobuf::int32 m_bind() const;
  inline void set_m_bind(::google::protobuf::int32 value);

  // optional int32 m_val = 3;
  inline bool has_m_val() const;
  inline void clear_m_val();
  static const int kMValFieldNumber = 3;
  inline ::google::protobuf::int32 m_val() const;
  inline void set_m_val(::google::protobuf::int32 value);

  // optional int64 m_id = 4;
  inline bool has_m_id() const;
  inline void clear_m_id();
  static const int kMIdFieldNumber = 4;
  inline ::google::protobuf::int64 m_id() const;
  inline void set_m_id(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.E_TaskrewardTaskrewardItemDesc)
 private:
  inline void set_has_m_prof();
  inline void clear_has_m_prof();
  inline void set_has_m_bind();
  inline void clear_has_m_bind();
  inline void set_has_m_val();
  inline void clear_has_m_val();
  inline void set_has_m_id();
  inline void clear_has_m_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_prof_;
  ::google::protobuf::int32 m_bind_;
  ::google::protobuf::int64 m_id_;
  ::google::protobuf::int32 m_val_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fTaskreward_2eproto();
  friend void protobuf_AssignDesc_E_5fTaskreward_2eproto();
  friend void protobuf_ShutdownFile_E_5fTaskreward_2eproto();

  void InitAsDefaultInstance();
  static E_TaskrewardTaskrewardItemDesc* default_instance_;
};
// -------------------------------------------------------------------

class E_TaskrewardTaskreward : public ::google::protobuf::Message {
 public:
  E_TaskrewardTaskreward();
  virtual ~E_TaskrewardTaskreward();

  E_TaskrewardTaskreward(const E_TaskrewardTaskreward& from);

  inline E_TaskrewardTaskreward& operator=(const E_TaskrewardTaskreward& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_TaskrewardTaskreward& default_instance();

  void Swap(E_TaskrewardTaskreward* other);

  // implements Message ----------------------------------------------

  E_TaskrewardTaskreward* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_TaskrewardTaskreward& from);
  void MergeFrom(const E_TaskrewardTaskreward& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 m_id = 1;
  inline bool has_m_id() const;
  inline void clear_m_id();
  static const int kMIdFieldNumber = 1;
  inline ::google::protobuf::int64 m_id() const;
  inline void set_m_id(::google::protobuf::int64 value);

  // optional int32 m_tasktype = 2;
  inline bool has_m_tasktype() const;
  inline void clear_m_tasktype();
  static const int kMTasktypeFieldNumber = 2;
  inline ::google::protobuf::int32 m_tasktype() const;
  inline void set_m_tasktype(::google::protobuf::int32 value);

  // optional int32 m_lv = 3;
  inline bool has_m_lv() const;
  inline void clear_m_lv();
  static const int kMLvFieldNumber = 3;
  inline ::google::protobuf::int32 m_lv() const;
  inline void set_m_lv(::google::protobuf::int32 value);

  // optional int32 m_guildexp = 4;
  inline bool has_m_guildexp() const;
  inline void clear_m_guildexp();
  static const int kMGuildexpFieldNumber = 4;
  inline ::google::protobuf::int32 m_guildexp() const;
  inline void set_m_guildexp(::google::protobuf::int32 value);

  // optional int32 m_guildpoint = 5;
  inline bool has_m_guildpoint() const;
  inline void clear_m_guildpoint();
  static const int kMGuildpointFieldNumber = 5;
  inline ::google::protobuf::int32 m_guildpoint() const;
  inline void set_m_guildpoint(::google::protobuf::int32 value);

  // optional int32 m_skillid = 6;
  inline bool has_m_skillid() const;
  inline void clear_m_skillid();
  static const int kMSkillidFieldNumber = 6;
  inline ::google::protobuf::int32 m_skillid() const;
  inline void set_m_skillid(::google::protobuf::int32 value);

  // repeated .proto_ff.E_TaskrewardTaskrewardAttrDesc m_attr = 7;
  inline int m_attr_size() const;
  inline void clear_m_attr();
  static const int kMAttrFieldNumber = 7;
  inline const ::proto_ff::E_TaskrewardTaskrewardAttrDesc& m_attr(int index) const;
  inline ::proto_ff::E_TaskrewardTaskrewardAttrDesc* mutable_m_attr(int index);
  inline ::proto_ff::E_TaskrewardTaskrewardAttrDesc* add_m_attr();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_TaskrewardTaskrewardAttrDesc >&
      m_attr() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_TaskrewardTaskrewardAttrDesc >*
      mutable_m_attr();

  // repeated .proto_ff.E_TaskrewardTaskrewardItemDesc m_item = 8;
  inline int m_item_size() const;
  inline void clear_m_item();
  static const int kMItemFieldNumber = 8;
  inline const ::proto_ff::E_TaskrewardTaskrewardItemDesc& m_item(int index) const;
  inline ::proto_ff::E_TaskrewardTaskrewardItemDesc* mutable_m_item(int index);
  inline ::proto_ff::E_TaskrewardTaskrewardItemDesc* add_m_item();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_TaskrewardTaskrewardItemDesc >&
      m_item() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_TaskrewardTaskrewardItemDesc >*
      mutable_m_item();

  // @@protoc_insertion_point(class_scope:proto_ff.E_TaskrewardTaskreward)
 private:
  inline void set_has_m_id();
  inline void clear_has_m_id();
  inline void set_has_m_tasktype();
  inline void clear_has_m_tasktype();
  inline void set_has_m_lv();
  inline void clear_has_m_lv();
  inline void set_has_m_guildexp();
  inline void clear_has_m_guildexp();
  inline void set_has_m_guildpoint();
  inline void clear_has_m_guildpoint();
  inline void set_has_m_skillid();
  inline void clear_has_m_skillid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 m_id_;
  ::google::protobuf::int32 m_tasktype_;
  ::google::protobuf::int32 m_lv_;
  ::google::protobuf::int32 m_guildexp_;
  ::google::protobuf::int32 m_guildpoint_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_TaskrewardTaskrewardAttrDesc > m_attr_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_TaskrewardTaskrewardItemDesc > m_item_;
  ::google::protobuf::int32 m_skillid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fTaskreward_2eproto();
  friend void protobuf_AssignDesc_E_5fTaskreward_2eproto();
  friend void protobuf_ShutdownFile_E_5fTaskreward_2eproto();

  void InitAsDefaultInstance();
  static E_TaskrewardTaskreward* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_TaskrewardTaskreward : public ::google::protobuf::Message {
 public:
  Sheet_TaskrewardTaskreward();
  virtual ~Sheet_TaskrewardTaskreward();

  Sheet_TaskrewardTaskreward(const Sheet_TaskrewardTaskreward& from);

  inline Sheet_TaskrewardTaskreward& operator=(const Sheet_TaskrewardTaskreward& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_TaskrewardTaskreward& default_instance();

  void Swap(Sheet_TaskrewardTaskreward* other);

  // implements Message ----------------------------------------------

  Sheet_TaskrewardTaskreward* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_TaskrewardTaskreward& from);
  void MergeFrom(const Sheet_TaskrewardTaskreward& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.E_TaskrewardTaskreward E_TaskrewardTaskreward_List = 1;
  inline int e_taskrewardtaskreward_list_size() const;
  inline void clear_e_taskrewardtaskreward_list();
  static const int kETaskrewardTaskrewardListFieldNumber = 1;
  inline const ::proto_ff::E_TaskrewardTaskreward& e_taskrewardtaskreward_list(int index) const;
  inline ::proto_ff::E_TaskrewardTaskreward* mutable_e_taskrewardtaskreward_list(int index);
  inline ::proto_ff::E_TaskrewardTaskreward* add_e_taskrewardtaskreward_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_TaskrewardTaskreward >&
      e_taskrewardtaskreward_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_TaskrewardTaskreward >*
      mutable_e_taskrewardtaskreward_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_TaskrewardTaskreward)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_TaskrewardTaskreward > e_taskrewardtaskreward_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fTaskreward_2eproto();
  friend void protobuf_AssignDesc_E_5fTaskreward_2eproto();
  friend void protobuf_ShutdownFile_E_5fTaskreward_2eproto();

  void InitAsDefaultInstance();
  static Sheet_TaskrewardTaskreward* default_instance_;
};
// -------------------------------------------------------------------

class E_TaskrewardTasktype : public ::google::protobuf::Message {
 public:
  E_TaskrewardTasktype();
  virtual ~E_TaskrewardTasktype();

  E_TaskrewardTasktype(const E_TaskrewardTasktype& from);

  inline E_TaskrewardTasktype& operator=(const E_TaskrewardTasktype& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_TaskrewardTasktype& default_instance();

  void Swap(E_TaskrewardTasktype* other);

  // implements Message ----------------------------------------------

  E_TaskrewardTasktype* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_TaskrewardTasktype& from);
  void MergeFrom(const E_TaskrewardTasktype& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 m_tasktype = 1;
  inline bool has_m_tasktype() const;
  inline void clear_m_tasktype();
  static const int kMTasktypeFieldNumber = 1;
  inline ::google::protobuf::int32 m_tasktype() const;
  inline void set_m_tasktype(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.E_TaskrewardTasktype)
 private:
  inline void set_has_m_tasktype();
  inline void clear_has_m_tasktype();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_tasktype_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fTaskreward_2eproto();
  friend void protobuf_AssignDesc_E_5fTaskreward_2eproto();
  friend void protobuf_ShutdownFile_E_5fTaskreward_2eproto();

  void InitAsDefaultInstance();
  static E_TaskrewardTasktype* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_TaskrewardTasktype : public ::google::protobuf::Message {
 public:
  Sheet_TaskrewardTasktype();
  virtual ~Sheet_TaskrewardTasktype();

  Sheet_TaskrewardTasktype(const Sheet_TaskrewardTasktype& from);

  inline Sheet_TaskrewardTasktype& operator=(const Sheet_TaskrewardTasktype& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_TaskrewardTasktype& default_instance();

  void Swap(Sheet_TaskrewardTasktype* other);

  // implements Message ----------------------------------------------

  Sheet_TaskrewardTasktype* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_TaskrewardTasktype& from);
  void MergeFrom(const Sheet_TaskrewardTasktype& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.E_TaskrewardTasktype E_TaskrewardTasktype_List = 1;
  inline int e_taskrewardtasktype_list_size() const;
  inline void clear_e_taskrewardtasktype_list();
  static const int kETaskrewardTasktypeListFieldNumber = 1;
  inline const ::proto_ff::E_TaskrewardTasktype& e_taskrewardtasktype_list(int index) const;
  inline ::proto_ff::E_TaskrewardTasktype* mutable_e_taskrewardtasktype_list(int index);
  inline ::proto_ff::E_TaskrewardTasktype* add_e_taskrewardtasktype_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_TaskrewardTasktype >&
      e_taskrewardtasktype_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_TaskrewardTasktype >*
      mutable_e_taskrewardtasktype_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_TaskrewardTasktype)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_TaskrewardTasktype > e_taskrewardtasktype_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_E_5fTaskreward_2eproto();
  friend void protobuf_AssignDesc_E_5fTaskreward_2eproto();
  friend void protobuf_ShutdownFile_E_5fTaskreward_2eproto();

  void InitAsDefaultInstance();
  static Sheet_TaskrewardTasktype* default_instance_;
};
// ===================================================================


// ===================================================================

// E_TaskrewardTaskrewardAttrDesc

// optional int64 m_val = 1;
inline bool E_TaskrewardTaskrewardAttrDesc::has_m_val() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_TaskrewardTaskrewardAttrDesc::set_has_m_val() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_TaskrewardTaskrewardAttrDesc::clear_has_m_val() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_TaskrewardTaskrewardAttrDesc::clear_m_val() {
  m_val_ = GOOGLE_LONGLONG(0);
  clear_has_m_val();
}
inline ::google::protobuf::int64 E_TaskrewardTaskrewardAttrDesc::m_val() const {
  return m_val_;
}
inline void E_TaskrewardTaskrewardAttrDesc::set_m_val(::google::protobuf::int64 value) {
  set_has_m_val();
  m_val_ = value;
}

// optional int64 m_id = 2;
inline bool E_TaskrewardTaskrewardAttrDesc::has_m_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_TaskrewardTaskrewardAttrDesc::set_has_m_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_TaskrewardTaskrewardAttrDesc::clear_has_m_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_TaskrewardTaskrewardAttrDesc::clear_m_id() {
  m_id_ = GOOGLE_LONGLONG(0);
  clear_has_m_id();
}
inline ::google::protobuf::int64 E_TaskrewardTaskrewardAttrDesc::m_id() const {
  return m_id_;
}
inline void E_TaskrewardTaskrewardAttrDesc::set_m_id(::google::protobuf::int64 value) {
  set_has_m_id();
  m_id_ = value;
}

// -------------------------------------------------------------------

// E_TaskrewardTaskrewardItemDesc

// optional int32 m_prof = 1;
inline bool E_TaskrewardTaskrewardItemDesc::has_m_prof() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_TaskrewardTaskrewardItemDesc::set_has_m_prof() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_TaskrewardTaskrewardItemDesc::clear_has_m_prof() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_TaskrewardTaskrewardItemDesc::clear_m_prof() {
  m_prof_ = 0;
  clear_has_m_prof();
}
inline ::google::protobuf::int32 E_TaskrewardTaskrewardItemDesc::m_prof() const {
  return m_prof_;
}
inline void E_TaskrewardTaskrewardItemDesc::set_m_prof(::google::protobuf::int32 value) {
  set_has_m_prof();
  m_prof_ = value;
}

// optional int32 m_bind = 2;
inline bool E_TaskrewardTaskrewardItemDesc::has_m_bind() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_TaskrewardTaskrewardItemDesc::set_has_m_bind() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_TaskrewardTaskrewardItemDesc::clear_has_m_bind() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_TaskrewardTaskrewardItemDesc::clear_m_bind() {
  m_bind_ = 0;
  clear_has_m_bind();
}
inline ::google::protobuf::int32 E_TaskrewardTaskrewardItemDesc::m_bind() const {
  return m_bind_;
}
inline void E_TaskrewardTaskrewardItemDesc::set_m_bind(::google::protobuf::int32 value) {
  set_has_m_bind();
  m_bind_ = value;
}

// optional int32 m_val = 3;
inline bool E_TaskrewardTaskrewardItemDesc::has_m_val() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void E_TaskrewardTaskrewardItemDesc::set_has_m_val() {
  _has_bits_[0] |= 0x00000004u;
}
inline void E_TaskrewardTaskrewardItemDesc::clear_has_m_val() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void E_TaskrewardTaskrewardItemDesc::clear_m_val() {
  m_val_ = 0;
  clear_has_m_val();
}
inline ::google::protobuf::int32 E_TaskrewardTaskrewardItemDesc::m_val() const {
  return m_val_;
}
inline void E_TaskrewardTaskrewardItemDesc::set_m_val(::google::protobuf::int32 value) {
  set_has_m_val();
  m_val_ = value;
}

// optional int64 m_id = 4;
inline bool E_TaskrewardTaskrewardItemDesc::has_m_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void E_TaskrewardTaskrewardItemDesc::set_has_m_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void E_TaskrewardTaskrewardItemDesc::clear_has_m_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void E_TaskrewardTaskrewardItemDesc::clear_m_id() {
  m_id_ = GOOGLE_LONGLONG(0);
  clear_has_m_id();
}
inline ::google::protobuf::int64 E_TaskrewardTaskrewardItemDesc::m_id() const {
  return m_id_;
}
inline void E_TaskrewardTaskrewardItemDesc::set_m_id(::google::protobuf::int64 value) {
  set_has_m_id();
  m_id_ = value;
}

// -------------------------------------------------------------------

// E_TaskrewardTaskreward

// optional int64 m_id = 1;
inline bool E_TaskrewardTaskreward::has_m_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_TaskrewardTaskreward::set_has_m_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_TaskrewardTaskreward::clear_has_m_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_TaskrewardTaskreward::clear_m_id() {
  m_id_ = GOOGLE_LONGLONG(0);
  clear_has_m_id();
}
inline ::google::protobuf::int64 E_TaskrewardTaskreward::m_id() const {
  return m_id_;
}
inline void E_TaskrewardTaskreward::set_m_id(::google::protobuf::int64 value) {
  set_has_m_id();
  m_id_ = value;
}

// optional int32 m_tasktype = 2;
inline bool E_TaskrewardTaskreward::has_m_tasktype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_TaskrewardTaskreward::set_has_m_tasktype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_TaskrewardTaskreward::clear_has_m_tasktype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_TaskrewardTaskreward::clear_m_tasktype() {
  m_tasktype_ = 0;
  clear_has_m_tasktype();
}
inline ::google::protobuf::int32 E_TaskrewardTaskreward::m_tasktype() const {
  return m_tasktype_;
}
inline void E_TaskrewardTaskreward::set_m_tasktype(::google::protobuf::int32 value) {
  set_has_m_tasktype();
  m_tasktype_ = value;
}

// optional int32 m_lv = 3;
inline bool E_TaskrewardTaskreward::has_m_lv() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void E_TaskrewardTaskreward::set_has_m_lv() {
  _has_bits_[0] |= 0x00000004u;
}
inline void E_TaskrewardTaskreward::clear_has_m_lv() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void E_TaskrewardTaskreward::clear_m_lv() {
  m_lv_ = 0;
  clear_has_m_lv();
}
inline ::google::protobuf::int32 E_TaskrewardTaskreward::m_lv() const {
  return m_lv_;
}
inline void E_TaskrewardTaskreward::set_m_lv(::google::protobuf::int32 value) {
  set_has_m_lv();
  m_lv_ = value;
}

// optional int32 m_guildexp = 4;
inline bool E_TaskrewardTaskreward::has_m_guildexp() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void E_TaskrewardTaskreward::set_has_m_guildexp() {
  _has_bits_[0] |= 0x00000008u;
}
inline void E_TaskrewardTaskreward::clear_has_m_guildexp() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void E_TaskrewardTaskreward::clear_m_guildexp() {
  m_guildexp_ = 0;
  clear_has_m_guildexp();
}
inline ::google::protobuf::int32 E_TaskrewardTaskreward::m_guildexp() const {
  return m_guildexp_;
}
inline void E_TaskrewardTaskreward::set_m_guildexp(::google::protobuf::int32 value) {
  set_has_m_guildexp();
  m_guildexp_ = value;
}

// optional int32 m_guildpoint = 5;
inline bool E_TaskrewardTaskreward::has_m_guildpoint() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void E_TaskrewardTaskreward::set_has_m_guildpoint() {
  _has_bits_[0] |= 0x00000010u;
}
inline void E_TaskrewardTaskreward::clear_has_m_guildpoint() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void E_TaskrewardTaskreward::clear_m_guildpoint() {
  m_guildpoint_ = 0;
  clear_has_m_guildpoint();
}
inline ::google::protobuf::int32 E_TaskrewardTaskreward::m_guildpoint() const {
  return m_guildpoint_;
}
inline void E_TaskrewardTaskreward::set_m_guildpoint(::google::protobuf::int32 value) {
  set_has_m_guildpoint();
  m_guildpoint_ = value;
}

// optional int32 m_skillid = 6;
inline bool E_TaskrewardTaskreward::has_m_skillid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void E_TaskrewardTaskreward::set_has_m_skillid() {
  _has_bits_[0] |= 0x00000020u;
}
inline void E_TaskrewardTaskreward::clear_has_m_skillid() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void E_TaskrewardTaskreward::clear_m_skillid() {
  m_skillid_ = 0;
  clear_has_m_skillid();
}
inline ::google::protobuf::int32 E_TaskrewardTaskreward::m_skillid() const {
  return m_skillid_;
}
inline void E_TaskrewardTaskreward::set_m_skillid(::google::protobuf::int32 value) {
  set_has_m_skillid();
  m_skillid_ = value;
}

// repeated .proto_ff.E_TaskrewardTaskrewardAttrDesc m_attr = 7;
inline int E_TaskrewardTaskreward::m_attr_size() const {
  return m_attr_.size();
}
inline void E_TaskrewardTaskreward::clear_m_attr() {
  m_attr_.Clear();
}
inline const ::proto_ff::E_TaskrewardTaskrewardAttrDesc& E_TaskrewardTaskreward::m_attr(int index) const {
  return m_attr_.Get(index);
}
inline ::proto_ff::E_TaskrewardTaskrewardAttrDesc* E_TaskrewardTaskreward::mutable_m_attr(int index) {
  return m_attr_.Mutable(index);
}
inline ::proto_ff::E_TaskrewardTaskrewardAttrDesc* E_TaskrewardTaskreward::add_m_attr() {
  return m_attr_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_TaskrewardTaskrewardAttrDesc >&
E_TaskrewardTaskreward::m_attr() const {
  return m_attr_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_TaskrewardTaskrewardAttrDesc >*
E_TaskrewardTaskreward::mutable_m_attr() {
  return &m_attr_;
}

// repeated .proto_ff.E_TaskrewardTaskrewardItemDesc m_item = 8;
inline int E_TaskrewardTaskreward::m_item_size() const {
  return m_item_.size();
}
inline void E_TaskrewardTaskreward::clear_m_item() {
  m_item_.Clear();
}
inline const ::proto_ff::E_TaskrewardTaskrewardItemDesc& E_TaskrewardTaskreward::m_item(int index) const {
  return m_item_.Get(index);
}
inline ::proto_ff::E_TaskrewardTaskrewardItemDesc* E_TaskrewardTaskreward::mutable_m_item(int index) {
  return m_item_.Mutable(index);
}
inline ::proto_ff::E_TaskrewardTaskrewardItemDesc* E_TaskrewardTaskreward::add_m_item() {
  return m_item_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_TaskrewardTaskrewardItemDesc >&
E_TaskrewardTaskreward::m_item() const {
  return m_item_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_TaskrewardTaskrewardItemDesc >*
E_TaskrewardTaskreward::mutable_m_item() {
  return &m_item_;
}

// -------------------------------------------------------------------

// Sheet_TaskrewardTaskreward

// repeated .proto_ff.E_TaskrewardTaskreward E_TaskrewardTaskreward_List = 1;
inline int Sheet_TaskrewardTaskreward::e_taskrewardtaskreward_list_size() const {
  return e_taskrewardtaskreward_list_.size();
}
inline void Sheet_TaskrewardTaskreward::clear_e_taskrewardtaskreward_list() {
  e_taskrewardtaskreward_list_.Clear();
}
inline const ::proto_ff::E_TaskrewardTaskreward& Sheet_TaskrewardTaskreward::e_taskrewardtaskreward_list(int index) const {
  return e_taskrewardtaskreward_list_.Get(index);
}
inline ::proto_ff::E_TaskrewardTaskreward* Sheet_TaskrewardTaskreward::mutable_e_taskrewardtaskreward_list(int index) {
  return e_taskrewardtaskreward_list_.Mutable(index);
}
inline ::proto_ff::E_TaskrewardTaskreward* Sheet_TaskrewardTaskreward::add_e_taskrewardtaskreward_list() {
  return e_taskrewardtaskreward_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_TaskrewardTaskreward >&
Sheet_TaskrewardTaskreward::e_taskrewardtaskreward_list() const {
  return e_taskrewardtaskreward_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_TaskrewardTaskreward >*
Sheet_TaskrewardTaskreward::mutable_e_taskrewardtaskreward_list() {
  return &e_taskrewardtaskreward_list_;
}

// -------------------------------------------------------------------

// E_TaskrewardTasktype

// optional int32 m_tasktype = 1;
inline bool E_TaskrewardTasktype::has_m_tasktype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_TaskrewardTasktype::set_has_m_tasktype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_TaskrewardTasktype::clear_has_m_tasktype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_TaskrewardTasktype::clear_m_tasktype() {
  m_tasktype_ = 0;
  clear_has_m_tasktype();
}
inline ::google::protobuf::int32 E_TaskrewardTasktype::m_tasktype() const {
  return m_tasktype_;
}
inline void E_TaskrewardTasktype::set_m_tasktype(::google::protobuf::int32 value) {
  set_has_m_tasktype();
  m_tasktype_ = value;
}

// -------------------------------------------------------------------

// Sheet_TaskrewardTasktype

// repeated .proto_ff.E_TaskrewardTasktype E_TaskrewardTasktype_List = 1;
inline int Sheet_TaskrewardTasktype::e_taskrewardtasktype_list_size() const {
  return e_taskrewardtasktype_list_.size();
}
inline void Sheet_TaskrewardTasktype::clear_e_taskrewardtasktype_list() {
  e_taskrewardtasktype_list_.Clear();
}
inline const ::proto_ff::E_TaskrewardTasktype& Sheet_TaskrewardTasktype::e_taskrewardtasktype_list(int index) const {
  return e_taskrewardtasktype_list_.Get(index);
}
inline ::proto_ff::E_TaskrewardTasktype* Sheet_TaskrewardTasktype::mutable_e_taskrewardtasktype_list(int index) {
  return e_taskrewardtasktype_list_.Mutable(index);
}
inline ::proto_ff::E_TaskrewardTasktype* Sheet_TaskrewardTasktype::add_e_taskrewardtasktype_list() {
  return e_taskrewardtasktype_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_TaskrewardTasktype >&
Sheet_TaskrewardTasktype::e_taskrewardtasktype_list() const {
  return e_taskrewardtasktype_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_TaskrewardTasktype >*
Sheet_TaskrewardTasktype::mutable_e_taskrewardtasktype_list() {
  return &e_taskrewardtasktype_list_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto_ff

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_E_5fTaskreward_2eproto__INCLUDED
