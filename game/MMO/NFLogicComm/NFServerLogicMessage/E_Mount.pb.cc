// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: E_Mount.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "E_Mount.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace proto_ff {

namespace {

const ::google::protobuf::Descriptor* E_MountFragmentAttributeDesc_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_MountFragmentAttributeDesc_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_MountFragment_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_MountFragment_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_MountFragment_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_MountFragment_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_MountValueAttributeDesc_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_MountValueAttributeDesc_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_MountValue_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_MountValue_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_MountValue_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_MountValue_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_MountDisplayMaterialDesc_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_MountDisplayMaterialDesc_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_MountDisplay_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_MountDisplay_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_MountDisplay_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_MountDisplay_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_MountUnlock_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_MountUnlock_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_MountUnlock_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_MountUnlock_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_MountChangeMaterialDesc_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_MountChangeMaterialDesc_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_MountChangeAttributeDesc_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_MountChangeAttributeDesc_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_MountChange_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_MountChange_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_MountChange_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_MountChange_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_MountAdvanceUpattributeDesc_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_MountAdvanceUpattributeDesc_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_MountAdvance_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_MountAdvance_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_MountAdvance_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_MountAdvance_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_MountBaby_egg_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_MountBaby_egg_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_MountBaby_egg_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_MountBaby_egg_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_MountHuakunUplvDesc_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_MountHuakunUplvDesc_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_MountHuakunMaterialDesc_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_MountHuakunMaterialDesc_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_MountHuakunAdvanceDesc_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_MountHuakunAdvanceDesc_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_MountHuakunAttributeDesc_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_MountHuakunAttributeDesc_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_MountHuakun_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_MountHuakun_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_MountHuakun_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_MountHuakun_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_MountHuakun_valueAttributeDesc_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_MountHuakun_valueAttributeDesc_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_MountHuakun_value_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_MountHuakun_value_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_MountHuakun_value_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_MountHuakun_value_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_MountHuakun_advancevalueItemDesc_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_MountHuakun_advancevalueItemDesc_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_MountHuakun_advancevalue_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_MountHuakun_advancevalue_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_MountHuakun_advancevalue_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_MountHuakun_advancevalue_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_MountHuakun_changeAttributeDesc_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_MountHuakun_changeAttributeDesc_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_MountHuakun_change_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_MountHuakun_change_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_MountHuakun_change_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_MountHuakun_change_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_MountHuakun_advanceUpattributeDesc_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_MountHuakun_advanceUpattributeDesc_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_MountHuakun_advance_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_MountHuakun_advance_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_MountHuakun_advance_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_MountHuakun_advance_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_MountBloodAttributeDesc_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_MountBloodAttributeDesc_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_MountBlood_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_MountBlood_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_MountBlood_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_MountBlood_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_MountHuakun_equip_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_MountHuakun_equip_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_MountHuakun_equip_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_MountHuakun_equip_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_MountEquip_valueAttributeDesc_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_MountEquip_valueAttributeDesc_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_MountEquip_value_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_MountEquip_value_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_MountEquip_value_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_MountEquip_value_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_MountEquipsuitAttributeDesc_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_MountEquipsuitAttributeDesc_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_MountEquipsuit_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_MountEquipsuit_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_MountEquipsuit_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_MountEquipsuit_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_MountEquiptopTopDesc_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_MountEquiptopTopDesc_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_MountEquiptopPercentDesc_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_MountEquiptopPercentDesc_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_MountEquiptop_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_MountEquiptop_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_MountEquiptop_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_MountEquiptop_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_MountEquiptopvalue_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_MountEquiptopvalue_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_MountEquiptopvalue_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_MountEquiptopvalue_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_MountEquippart_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_MountEquippart_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_MountEquippart_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_MountEquippart_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_MountEmpowermenttour_debris_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_MountEmpowermenttour_debris_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_MountEmpowermenttour_debris_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_MountEmpowermenttour_debris_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_MountEmpowermentTourDesc_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_MountEmpowermentTourDesc_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_MountEmpowerment_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_MountEmpowerment_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_MountEmpowerment_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_MountEmpowerment_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_MountEmpowerment_position_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_MountEmpowerment_position_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_MountEmpowerment_position_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_MountEmpowerment_position_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_MountEmpowerment_slot_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_MountEmpowerment_slot_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_MountEmpowerment_slot_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_MountEmpowerment_slot_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_MountEmpowerment_event_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_MountEmpowerment_event_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_MountEmpowerment_event_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_MountEmpowerment_event_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_E_5fMount_2eproto() {
  protobuf_AddDesc_E_5fMount_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "E_Mount.proto");
  GOOGLE_CHECK(file != NULL);
  E_MountFragmentAttributeDesc_descriptor_ = file->message_type(0);
  static const int E_MountFragmentAttributeDesc_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountFragmentAttributeDesc, m_value_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountFragmentAttributeDesc, m_type_),
  };
  E_MountFragmentAttributeDesc_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_MountFragmentAttributeDesc_descriptor_,
      E_MountFragmentAttributeDesc::default_instance_,
      E_MountFragmentAttributeDesc_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountFragmentAttributeDesc, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountFragmentAttributeDesc, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_MountFragmentAttributeDesc));
  E_MountFragment_descriptor_ = file->message_type(1);
  static const int E_MountFragment_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountFragment, m_fragmentid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountFragment, m_item_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountFragment, m_itemnum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountFragment, m_attribute_),
  };
  E_MountFragment_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_MountFragment_descriptor_,
      E_MountFragment::default_instance_,
      E_MountFragment_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountFragment, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountFragment, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_MountFragment));
  Sheet_MountFragment_descriptor_ = file->message_type(2);
  static const int Sheet_MountFragment_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_MountFragment, e_mountfragment_list_),
  };
  Sheet_MountFragment_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_MountFragment_descriptor_,
      Sheet_MountFragment::default_instance_,
      Sheet_MountFragment_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_MountFragment, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_MountFragment, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_MountFragment));
  E_MountValueAttributeDesc_descriptor_ = file->message_type(3);
  static const int E_MountValueAttributeDesc_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountValueAttributeDesc, m_value_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountValueAttributeDesc, m_type_),
  };
  E_MountValueAttributeDesc_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_MountValueAttributeDesc_descriptor_,
      E_MountValueAttributeDesc::default_instance_,
      E_MountValueAttributeDesc_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountValueAttributeDesc, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountValueAttributeDesc, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_MountValueAttributeDesc));
  E_MountValue_descriptor_ = file->message_type(4);
  static const int E_MountValue_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountValue, m_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountValue, m_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountValue, m_lv_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountValue, m_exp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountValue, m_speed_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountValue, m_attribute_),
  };
  E_MountValue_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_MountValue_descriptor_,
      E_MountValue::default_instance_,
      E_MountValue_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountValue, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountValue, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_MountValue));
  Sheet_MountValue_descriptor_ = file->message_type(5);
  static const int Sheet_MountValue_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_MountValue, e_mountvalue_list_),
  };
  Sheet_MountValue_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_MountValue_descriptor_,
      Sheet_MountValue::default_instance_,
      Sheet_MountValue_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_MountValue, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_MountValue, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_MountValue));
  E_MountDisplayMaterialDesc_descriptor_ = file->message_type(6);
  static const int E_MountDisplayMaterialDesc_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountDisplayMaterialDesc, m_exp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountDisplayMaterialDesc, m_id_),
  };
  E_MountDisplayMaterialDesc_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_MountDisplayMaterialDesc_descriptor_,
      E_MountDisplayMaterialDesc::default_instance_,
      E_MountDisplayMaterialDesc_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountDisplayMaterialDesc, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountDisplayMaterialDesc, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_MountDisplayMaterialDesc));
  E_MountDisplay_descriptor_ = file->message_type(7);
  static const int E_MountDisplay_offsets_[9] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountDisplay, m_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountDisplay, m_speed_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountDisplay, m_uplvtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountDisplay, m_skillid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountDisplay, m_fxid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountDisplay, m_starup_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountDisplay, m_lvmax_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountDisplay, m_material_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountDisplay, m_fragmentid_),
  };
  E_MountDisplay_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_MountDisplay_descriptor_,
      E_MountDisplay::default_instance_,
      E_MountDisplay_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountDisplay, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountDisplay, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_MountDisplay));
  Sheet_MountDisplay_descriptor_ = file->message_type(8);
  static const int Sheet_MountDisplay_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_MountDisplay, e_mountdisplay_list_),
  };
  Sheet_MountDisplay_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_MountDisplay_descriptor_,
      Sheet_MountDisplay::default_instance_,
      Sheet_MountDisplay_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_MountDisplay, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_MountDisplay, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_MountDisplay));
  E_MountUnlock_descriptor_ = file->message_type(9);
  static const int E_MountUnlock_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountUnlock, m_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountUnlock, m_lv_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountUnlock, m_modelid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountUnlock, m_name_),
  };
  E_MountUnlock_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_MountUnlock_descriptor_,
      E_MountUnlock::default_instance_,
      E_MountUnlock_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountUnlock, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountUnlock, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_MountUnlock));
  Sheet_MountUnlock_descriptor_ = file->message_type(10);
  static const int Sheet_MountUnlock_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_MountUnlock, e_mountunlock_list_),
  };
  Sheet_MountUnlock_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_MountUnlock_descriptor_,
      Sheet_MountUnlock::default_instance_,
      Sheet_MountUnlock_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_MountUnlock, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_MountUnlock, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_MountUnlock));
  E_MountChangeMaterialDesc_descriptor_ = file->message_type(11);
  static const int E_MountChangeMaterialDesc_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountChangeMaterialDesc, m_exp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountChangeMaterialDesc, m_id_),
  };
  E_MountChangeMaterialDesc_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_MountChangeMaterialDesc_descriptor_,
      E_MountChangeMaterialDesc::default_instance_,
      E_MountChangeMaterialDesc_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountChangeMaterialDesc, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountChangeMaterialDesc, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_MountChangeMaterialDesc));
  E_MountChangeAttributeDesc_descriptor_ = file->message_type(12);
  static const int E_MountChangeAttributeDesc_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountChangeAttributeDesc, m_upvalue_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountChangeAttributeDesc, m_upber_),
  };
  E_MountChangeAttributeDesc_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_MountChangeAttributeDesc_descriptor_,
      E_MountChangeAttributeDesc::default_instance_,
      E_MountChangeAttributeDesc_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountChangeAttributeDesc, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountChangeAttributeDesc, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_MountChangeAttributeDesc));
  E_MountChange_descriptor_ = file->message_type(13);
  static const int E_MountChange_offsets_[19] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountChange, m_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountChange, m_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountChange, m_advancename_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountChange, m_speed_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountChange, m_uplvtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountChange, m_activeskill_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountChange, m_skillid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountChange, m_fxid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountChange, m_starmax_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountChange, m_lvmax_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountChange, m_modelid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountChange, m_activationitem_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountChange, m_activationnum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountChange, m_starid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountChange, m_starnum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountChange, m_starber_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountChange, m_upattributeid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountChange, m_material_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountChange, m_attribute_),
  };
  E_MountChange_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_MountChange_descriptor_,
      E_MountChange::default_instance_,
      E_MountChange_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountChange, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountChange, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_MountChange));
  Sheet_MountChange_descriptor_ = file->message_type(14);
  static const int Sheet_MountChange_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_MountChange, e_mountchange_list_),
  };
  Sheet_MountChange_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_MountChange_descriptor_,
      Sheet_MountChange::default_instance_,
      Sheet_MountChange_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_MountChange, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_MountChange, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_MountChange));
  E_MountAdvanceUpattributeDesc_descriptor_ = file->message_type(15);
  static const int E_MountAdvanceUpattributeDesc_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountAdvanceUpattributeDesc, m_value_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountAdvanceUpattributeDesc, m_type_),
  };
  E_MountAdvanceUpattributeDesc_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_MountAdvanceUpattributeDesc_descriptor_,
      E_MountAdvanceUpattributeDesc::default_instance_,
      E_MountAdvanceUpattributeDesc_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountAdvanceUpattributeDesc, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountAdvanceUpattributeDesc, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_MountAdvanceUpattributeDesc));
  E_MountAdvance_descriptor_ = file->message_type(16);
  static const int E_MountAdvance_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountAdvance, m_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountAdvance, m_upattributeid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountAdvance, m_starid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountAdvance, m_skillid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountAdvance, m_upattribute_),
  };
  E_MountAdvance_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_MountAdvance_descriptor_,
      E_MountAdvance::default_instance_,
      E_MountAdvance_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountAdvance, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountAdvance, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_MountAdvance));
  Sheet_MountAdvance_descriptor_ = file->message_type(17);
  static const int Sheet_MountAdvance_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_MountAdvance, e_mountadvance_list_),
  };
  Sheet_MountAdvance_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_MountAdvance_descriptor_,
      Sheet_MountAdvance::default_instance_,
      Sheet_MountAdvance_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_MountAdvance, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_MountAdvance, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_MountAdvance));
  E_MountBaby_egg_descriptor_ = file->message_type(18);
  static const int E_MountBaby_egg_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountBaby_egg, m_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountBaby_egg, m_item_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountBaby_egg, m_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountBaby_egg, m_itembox_),
  };
  E_MountBaby_egg_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_MountBaby_egg_descriptor_,
      E_MountBaby_egg::default_instance_,
      E_MountBaby_egg_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountBaby_egg, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountBaby_egg, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_MountBaby_egg));
  Sheet_MountBaby_egg_descriptor_ = file->message_type(19);
  static const int Sheet_MountBaby_egg_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_MountBaby_egg, e_mountbaby_egg_list_),
  };
  Sheet_MountBaby_egg_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_MountBaby_egg_descriptor_,
      Sheet_MountBaby_egg::default_instance_,
      Sheet_MountBaby_egg_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_MountBaby_egg, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_MountBaby_egg, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_MountBaby_egg));
  E_MountHuakunUplvDesc_descriptor_ = file->message_type(20);
  static const int E_MountHuakunUplvDesc_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountHuakunUplvDesc, m_upvalue_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountHuakunUplvDesc, m_upber_),
  };
  E_MountHuakunUplvDesc_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_MountHuakunUplvDesc_descriptor_,
      E_MountHuakunUplvDesc::default_instance_,
      E_MountHuakunUplvDesc_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountHuakunUplvDesc, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountHuakunUplvDesc, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_MountHuakunUplvDesc));
  E_MountHuakunMaterialDesc_descriptor_ = file->message_type(21);
  static const int E_MountHuakunMaterialDesc_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountHuakunMaterialDesc, m_exp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountHuakunMaterialDesc, m_id_),
  };
  E_MountHuakunMaterialDesc_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_MountHuakunMaterialDesc_descriptor_,
      E_MountHuakunMaterialDesc::default_instance_,
      E_MountHuakunMaterialDesc_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountHuakunMaterialDesc, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountHuakunMaterialDesc, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_MountHuakunMaterialDesc));
  E_MountHuakunAdvanceDesc_descriptor_ = file->message_type(22);
  static const int E_MountHuakunAdvanceDesc_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountHuakunAdvanceDesc, m_upvalue_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountHuakunAdvanceDesc, m_upber_),
  };
  E_MountHuakunAdvanceDesc_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_MountHuakunAdvanceDesc_descriptor_,
      E_MountHuakunAdvanceDesc::default_instance_,
      E_MountHuakunAdvanceDesc_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountHuakunAdvanceDesc, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountHuakunAdvanceDesc, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_MountHuakunAdvanceDesc));
  E_MountHuakunAttributeDesc_descriptor_ = file->message_type(23);
  static const int E_MountHuakunAttributeDesc_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountHuakunAttributeDesc, m_upvalue_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountHuakunAttributeDesc, m_upber_),
  };
  E_MountHuakunAttributeDesc_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_MountHuakunAttributeDesc_descriptor_,
      E_MountHuakunAttributeDesc::default_instance_,
      E_MountHuakunAttributeDesc_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountHuakunAttributeDesc, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountHuakunAttributeDesc, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_MountHuakunAttributeDesc));
  E_MountHuakun_descriptor_ = file->message_type(24);
  static const int E_MountHuakun_offsets_[31] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountHuakun, m_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountHuakun, m_modelid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountHuakun, m_quality_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountHuakun, m_speed_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountHuakun, m_uplvtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountHuakun, m_activateitem_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountHuakun, m_activateitemnum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountHuakun, m_advancetype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountHuakun, m_starvancetype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountHuakun, m_starlimit_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountHuakun, m_starber_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountHuakun, m_skill_lg_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountHuakun, m_skill_bd_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountHuakun, m_soaringattributeid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountHuakun, m_comprehend_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountHuakun, m_exclusive_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountHuakun, m_comprehendskill_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountHuakun, m_potential_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountHuakun, m_comprehendupitem_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountHuakun, m_comprehendtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountHuakun, m_ratio_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountHuakun, m_ratiopercentage_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountHuakun, m_equipsuit_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountHuakun, m_qualitymax_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountHuakun, m_lilianchangeitem_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountHuakun, m_uplv_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountHuakun, m_material_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountHuakun, m_advance_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountHuakun, m_upstaritem_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountHuakun, m_upstarnum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountHuakun, m_attribute_),
  };
  E_MountHuakun_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_MountHuakun_descriptor_,
      E_MountHuakun::default_instance_,
      E_MountHuakun_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountHuakun, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountHuakun, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_MountHuakun));
  Sheet_MountHuakun_descriptor_ = file->message_type(25);
  static const int Sheet_MountHuakun_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_MountHuakun, e_mounthuakun_list_),
  };
  Sheet_MountHuakun_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_MountHuakun_descriptor_,
      Sheet_MountHuakun::default_instance_,
      Sheet_MountHuakun_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_MountHuakun, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_MountHuakun, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_MountHuakun));
  E_MountHuakun_valueAttributeDesc_descriptor_ = file->message_type(26);
  static const int E_MountHuakun_valueAttributeDesc_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountHuakun_valueAttributeDesc, m_value_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountHuakun_valueAttributeDesc, m_type_),
  };
  E_MountHuakun_valueAttributeDesc_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_MountHuakun_valueAttributeDesc_descriptor_,
      E_MountHuakun_valueAttributeDesc::default_instance_,
      E_MountHuakun_valueAttributeDesc_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountHuakun_valueAttributeDesc, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountHuakun_valueAttributeDesc, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_MountHuakun_valueAttributeDesc));
  E_MountHuakun_value_descriptor_ = file->message_type(27);
  static const int E_MountHuakun_value_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountHuakun_value, m_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountHuakun_value, m_huakuntype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountHuakun_value, m_huakunlv_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountHuakun_value, m_huakunexp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountHuakun_value, m_attribute_),
  };
  E_MountHuakun_value_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_MountHuakun_value_descriptor_,
      E_MountHuakun_value::default_instance_,
      E_MountHuakun_value_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountHuakun_value, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountHuakun_value, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_MountHuakun_value));
  Sheet_MountHuakun_value_descriptor_ = file->message_type(28);
  static const int Sheet_MountHuakun_value_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_MountHuakun_value, e_mounthuakun_value_list_),
  };
  Sheet_MountHuakun_value_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_MountHuakun_value_descriptor_,
      Sheet_MountHuakun_value::default_instance_,
      Sheet_MountHuakun_value_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_MountHuakun_value, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_MountHuakun_value, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_MountHuakun_value));
  E_MountHuakun_advancevalueItemDesc_descriptor_ = file->message_type(29);
  static const int E_MountHuakun_advancevalueItemDesc_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountHuakun_advancevalueItemDesc, m_num_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountHuakun_advancevalueItemDesc, m_id_),
  };
  E_MountHuakun_advancevalueItemDesc_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_MountHuakun_advancevalueItemDesc_descriptor_,
      E_MountHuakun_advancevalueItemDesc::default_instance_,
      E_MountHuakun_advancevalueItemDesc_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountHuakun_advancevalueItemDesc, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountHuakun_advancevalueItemDesc, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_MountHuakun_advancevalueItemDesc));
  E_MountHuakun_advancevalue_descriptor_ = file->message_type(30);
  static const int E_MountHuakun_advancevalue_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountHuakun_advancevalue, m_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountHuakun_advancevalue, m_lv_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountHuakun_advancevalue, m_advancetype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountHuakun_advancevalue, m_winprob_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountHuakun_advancevalue, m_faillv_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountHuakun_advancevalue, m_item_),
  };
  E_MountHuakun_advancevalue_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_MountHuakun_advancevalue_descriptor_,
      E_MountHuakun_advancevalue::default_instance_,
      E_MountHuakun_advancevalue_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountHuakun_advancevalue, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountHuakun_advancevalue, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_MountHuakun_advancevalue));
  Sheet_MountHuakun_advancevalue_descriptor_ = file->message_type(31);
  static const int Sheet_MountHuakun_advancevalue_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_MountHuakun_advancevalue, e_mounthuakun_advancevalue_list_),
  };
  Sheet_MountHuakun_advancevalue_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_MountHuakun_advancevalue_descriptor_,
      Sheet_MountHuakun_advancevalue::default_instance_,
      Sheet_MountHuakun_advancevalue_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_MountHuakun_advancevalue, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_MountHuakun_advancevalue, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_MountHuakun_advancevalue));
  E_MountHuakun_changeAttributeDesc_descriptor_ = file->message_type(32);
  static const int E_MountHuakun_changeAttributeDesc_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountHuakun_changeAttributeDesc, m_upvalue_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountHuakun_changeAttributeDesc, m_upber_),
  };
  E_MountHuakun_changeAttributeDesc_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_MountHuakun_changeAttributeDesc_descriptor_,
      E_MountHuakun_changeAttributeDesc::default_instance_,
      E_MountHuakun_changeAttributeDesc_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountHuakun_changeAttributeDesc, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountHuakun_changeAttributeDesc, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_MountHuakun_changeAttributeDesc));
  E_MountHuakun_change_descriptor_ = file->message_type(33);
  static const int E_MountHuakun_change_offsets_[14] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountHuakun_change, m_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountHuakun_change, m_huakunid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountHuakun_change, m_speed_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountHuakun_change, m_fxid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountHuakun_change, m_modelid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountHuakun_change, m_activationitem_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountHuakun_change, m_activationnum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountHuakun_change, m_starattributeid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountHuakun_change, m_starmax_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountHuakun_change, m_starid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountHuakun_change, m_starnum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountHuakun_change, m_starber_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountHuakun_change, m_changeattributeid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountHuakun_change, m_attribute_),
  };
  E_MountHuakun_change_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_MountHuakun_change_descriptor_,
      E_MountHuakun_change::default_instance_,
      E_MountHuakun_change_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountHuakun_change, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountHuakun_change, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_MountHuakun_change));
  Sheet_MountHuakun_change_descriptor_ = file->message_type(34);
  static const int Sheet_MountHuakun_change_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_MountHuakun_change, e_mounthuakun_change_list_),
  };
  Sheet_MountHuakun_change_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_MountHuakun_change_descriptor_,
      Sheet_MountHuakun_change::default_instance_,
      Sheet_MountHuakun_change_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_MountHuakun_change, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_MountHuakun_change, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_MountHuakun_change));
  E_MountHuakun_advanceUpattributeDesc_descriptor_ = file->message_type(35);
  static const int E_MountHuakun_advanceUpattributeDesc_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountHuakun_advanceUpattributeDesc, m_value_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountHuakun_advanceUpattributeDesc, m_type_),
  };
  E_MountHuakun_advanceUpattributeDesc_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_MountHuakun_advanceUpattributeDesc_descriptor_,
      E_MountHuakun_advanceUpattributeDesc::default_instance_,
      E_MountHuakun_advanceUpattributeDesc_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountHuakun_advanceUpattributeDesc, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountHuakun_advanceUpattributeDesc, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_MountHuakun_advanceUpattributeDesc));
  E_MountHuakun_advance_descriptor_ = file->message_type(36);
  static const int E_MountHuakun_advance_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountHuakun_advance, m_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountHuakun_advance, m_upattributeid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountHuakun_advance, m_starid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountHuakun_advance, m_skillid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountHuakun_advance, m_upattribute_),
  };
  E_MountHuakun_advance_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_MountHuakun_advance_descriptor_,
      E_MountHuakun_advance::default_instance_,
      E_MountHuakun_advance_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountHuakun_advance, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountHuakun_advance, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_MountHuakun_advance));
  Sheet_MountHuakun_advance_descriptor_ = file->message_type(37);
  static const int Sheet_MountHuakun_advance_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_MountHuakun_advance, e_mounthuakun_advance_list_),
  };
  Sheet_MountHuakun_advance_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_MountHuakun_advance_descriptor_,
      Sheet_MountHuakun_advance::default_instance_,
      Sheet_MountHuakun_advance_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_MountHuakun_advance, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_MountHuakun_advance, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_MountHuakun_advance));
  E_MountBloodAttributeDesc_descriptor_ = file->message_type(38);
  static const int E_MountBloodAttributeDesc_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountBloodAttributeDesc, m_value_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountBloodAttributeDesc, m_type_),
  };
  E_MountBloodAttributeDesc_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_MountBloodAttributeDesc_descriptor_,
      E_MountBloodAttributeDesc::default_instance_,
      E_MountBloodAttributeDesc_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountBloodAttributeDesc, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountBloodAttributeDesc, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_MountBloodAttributeDesc));
  E_MountBlood_descriptor_ = file->message_type(39);
  static const int E_MountBlood_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountBlood, m_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountBlood, m_attribute_),
  };
  E_MountBlood_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_MountBlood_descriptor_,
      E_MountBlood::default_instance_,
      E_MountBlood_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountBlood, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountBlood, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_MountBlood));
  Sheet_MountBlood_descriptor_ = file->message_type(40);
  static const int Sheet_MountBlood_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_MountBlood, e_mountblood_list_),
  };
  Sheet_MountBlood_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_MountBlood_descriptor_,
      Sheet_MountBlood::default_instance_,
      Sheet_MountBlood_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_MountBlood, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_MountBlood, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_MountBlood));
  E_MountHuakun_equip_descriptor_ = file->message_type(41);
  static const int E_MountHuakun_equip_offsets_[9] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountHuakun_equip, m_equipid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountHuakun_equip, m_part_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountHuakun_equip, m_quality_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountHuakun_equip, m_equipintensify_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountHuakun_equip, m_srtongup_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountHuakun_equip, m_advanceintensify_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountHuakun_equip, m_equipttop_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountHuakun_equip, m_resolve_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountHuakun_equip, m_resolvemun_),
  };
  E_MountHuakun_equip_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_MountHuakun_equip_descriptor_,
      E_MountHuakun_equip::default_instance_,
      E_MountHuakun_equip_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountHuakun_equip, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountHuakun_equip, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_MountHuakun_equip));
  Sheet_MountHuakun_equip_descriptor_ = file->message_type(42);
  static const int Sheet_MountHuakun_equip_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_MountHuakun_equip, e_mounthuakun_equip_list_),
  };
  Sheet_MountHuakun_equip_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_MountHuakun_equip_descriptor_,
      Sheet_MountHuakun_equip::default_instance_,
      Sheet_MountHuakun_equip_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_MountHuakun_equip, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_MountHuakun_equip, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_MountHuakun_equip));
  E_MountEquip_valueAttributeDesc_descriptor_ = file->message_type(43);
  static const int E_MountEquip_valueAttributeDesc_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountEquip_valueAttributeDesc, m_value_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountEquip_valueAttributeDesc, m_type_),
  };
  E_MountEquip_valueAttributeDesc_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_MountEquip_valueAttributeDesc_descriptor_,
      E_MountEquip_valueAttributeDesc::default_instance_,
      E_MountEquip_valueAttributeDesc_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountEquip_valueAttributeDesc, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountEquip_valueAttributeDesc, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_MountEquip_valueAttributeDesc));
  E_MountEquip_value_descriptor_ = file->message_type(44);
  static const int E_MountEquip_value_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountEquip_value, m_equipintensify_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountEquip_value, m_equipvalue_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountEquip_value, m_equiplv_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountEquip_value, m_equipitem_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountEquip_value, m_equipmun_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountEquip_value, m_attribute_),
  };
  E_MountEquip_value_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_MountEquip_value_descriptor_,
      E_MountEquip_value::default_instance_,
      E_MountEquip_value_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountEquip_value, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountEquip_value, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_MountEquip_value));
  Sheet_MountEquip_value_descriptor_ = file->message_type(45);
  static const int Sheet_MountEquip_value_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_MountEquip_value, e_mountequip_value_list_),
  };
  Sheet_MountEquip_value_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_MountEquip_value_descriptor_,
      Sheet_MountEquip_value::default_instance_,
      Sheet_MountEquip_value_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_MountEquip_value, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_MountEquip_value, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_MountEquip_value));
  E_MountEquipsuitAttributeDesc_descriptor_ = file->message_type(46);
  static const int E_MountEquipsuitAttributeDesc_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountEquipsuitAttributeDesc, m_value_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountEquipsuitAttributeDesc, m_type_),
  };
  E_MountEquipsuitAttributeDesc_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_MountEquipsuitAttributeDesc_descriptor_,
      E_MountEquipsuitAttributeDesc::default_instance_,
      E_MountEquipsuitAttributeDesc_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountEquipsuitAttributeDesc, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountEquipsuitAttributeDesc, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_MountEquipsuitAttributeDesc));
  E_MountEquipsuit_descriptor_ = file->message_type(47);
  static const int E_MountEquipsuit_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountEquipsuit, m_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountEquipsuit, m_quality_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountEquipsuit, m_piece_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountEquipsuit, m_attribute_),
  };
  E_MountEquipsuit_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_MountEquipsuit_descriptor_,
      E_MountEquipsuit::default_instance_,
      E_MountEquipsuit_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountEquipsuit, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountEquipsuit, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_MountEquipsuit));
  Sheet_MountEquipsuit_descriptor_ = file->message_type(48);
  static const int Sheet_MountEquipsuit_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_MountEquipsuit, e_mountequipsuit_list_),
  };
  Sheet_MountEquipsuit_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_MountEquipsuit_descriptor_,
      Sheet_MountEquipsuit::default_instance_,
      Sheet_MountEquipsuit_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_MountEquipsuit, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_MountEquipsuit, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_MountEquipsuit));
  E_MountEquiptopTopDesc_descriptor_ = file->message_type(49);
  static const int E_MountEquiptopTopDesc_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountEquiptopTopDesc, m_value_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountEquiptopTopDesc, m_type_),
  };
  E_MountEquiptopTopDesc_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_MountEquiptopTopDesc_descriptor_,
      E_MountEquiptopTopDesc::default_instance_,
      E_MountEquiptopTopDesc_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountEquiptopTopDesc, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountEquiptopTopDesc, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_MountEquiptopTopDesc));
  E_MountEquiptopPercentDesc_descriptor_ = file->message_type(50);
  static const int E_MountEquiptopPercentDesc_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountEquiptopPercentDesc, m_value_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountEquiptopPercentDesc, m_type_),
  };
  E_MountEquiptopPercentDesc_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_MountEquiptopPercentDesc_descriptor_,
      E_MountEquiptopPercentDesc::default_instance_,
      E_MountEquiptopPercentDesc_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountEquiptopPercentDesc, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountEquiptopPercentDesc, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_MountEquiptopPercentDesc));
  E_MountEquiptop_descriptor_ = file->message_type(51);
  static const int E_MountEquiptop_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountEquiptop, m_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountEquiptop, m_positionid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountEquiptop, m_equipttop_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountEquiptop, m_quality_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountEquiptop, m_top_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountEquiptop, m_percent_),
  };
  E_MountEquiptop_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_MountEquiptop_descriptor_,
      E_MountEquiptop::default_instance_,
      E_MountEquiptop_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountEquiptop, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountEquiptop, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_MountEquiptop));
  Sheet_MountEquiptop_descriptor_ = file->message_type(52);
  static const int Sheet_MountEquiptop_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_MountEquiptop, e_mountequiptop_list_),
  };
  Sheet_MountEquiptop_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_MountEquiptop_descriptor_,
      Sheet_MountEquiptop::default_instance_,
      Sheet_MountEquiptop_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_MountEquiptop, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_MountEquiptop, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_MountEquiptop));
  E_MountEquiptopvalue_descriptor_ = file->message_type(53);
  static const int E_MountEquiptopvalue_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountEquiptopvalue, m_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountEquiptopvalue, m_quality_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountEquiptopvalue, m_top_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountEquiptopvalue, m_value_),
  };
  E_MountEquiptopvalue_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_MountEquiptopvalue_descriptor_,
      E_MountEquiptopvalue::default_instance_,
      E_MountEquiptopvalue_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountEquiptopvalue, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountEquiptopvalue, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_MountEquiptopvalue));
  Sheet_MountEquiptopvalue_descriptor_ = file->message_type(54);
  static const int Sheet_MountEquiptopvalue_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_MountEquiptopvalue, e_mountequiptopvalue_list_),
  };
  Sheet_MountEquiptopvalue_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_MountEquiptopvalue_descriptor_,
      Sheet_MountEquiptopvalue::default_instance_,
      Sheet_MountEquiptopvalue_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_MountEquiptopvalue, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_MountEquiptopvalue, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_MountEquiptopvalue));
  E_MountEquippart_descriptor_ = file->message_type(55);
  static const int E_MountEquippart_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountEquippart, m_part_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountEquippart, m_quality_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountEquippart, m_honeopen_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountEquippart, m_item_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountEquippart, m_num_),
  };
  E_MountEquippart_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_MountEquippart_descriptor_,
      E_MountEquippart::default_instance_,
      E_MountEquippart_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountEquippart, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountEquippart, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_MountEquippart));
  Sheet_MountEquippart_descriptor_ = file->message_type(56);
  static const int Sheet_MountEquippart_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_MountEquippart, e_mountequippart_list_),
  };
  Sheet_MountEquippart_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_MountEquippart_descriptor_,
      Sheet_MountEquippart::default_instance_,
      Sheet_MountEquippart_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_MountEquippart, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_MountEquippart, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_MountEquippart));
  E_MountEmpowermenttour_debris_descriptor_ = file->message_type(57);
  static const int E_MountEmpowermenttour_debris_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountEmpowermenttour_debris, m_fairylandid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountEmpowermenttour_debris, m_fairylandnextid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountEmpowermenttour_debris, m_fairylandskin_),
  };
  E_MountEmpowermenttour_debris_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_MountEmpowermenttour_debris_descriptor_,
      E_MountEmpowermenttour_debris::default_instance_,
      E_MountEmpowermenttour_debris_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountEmpowermenttour_debris, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountEmpowermenttour_debris, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_MountEmpowermenttour_debris));
  Sheet_MountEmpowermenttour_debris_descriptor_ = file->message_type(58);
  static const int Sheet_MountEmpowermenttour_debris_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_MountEmpowermenttour_debris, e_mountempowermenttour_debris_list_),
  };
  Sheet_MountEmpowermenttour_debris_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_MountEmpowermenttour_debris_descriptor_,
      Sheet_MountEmpowermenttour_debris::default_instance_,
      Sheet_MountEmpowermenttour_debris_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_MountEmpowermenttour_debris, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_MountEmpowermenttour_debris, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_MountEmpowermenttour_debris));
  E_MountEmpowermentTourDesc_descriptor_ = file->message_type(59);
  static const int E_MountEmpowermentTourDesc_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountEmpowermentTourDesc, m_value_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountEmpowermentTourDesc, m_type_),
  };
  E_MountEmpowermentTourDesc_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_MountEmpowermentTourDesc_descriptor_,
      E_MountEmpowermentTourDesc::default_instance_,
      E_MountEmpowermentTourDesc_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountEmpowermentTourDesc, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountEmpowermentTourDesc, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_MountEmpowermentTourDesc));
  E_MountEmpowerment_descriptor_ = file->message_type(60);
  static const int E_MountEmpowerment_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountEmpowerment, m_tourid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountEmpowerment, m_fairylandid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountEmpowerment, m_touritem_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountEmpowerment, m_tourdebris_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountEmpowerment, m_tour_),
  };
  E_MountEmpowerment_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_MountEmpowerment_descriptor_,
      E_MountEmpowerment::default_instance_,
      E_MountEmpowerment_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountEmpowerment, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountEmpowerment, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_MountEmpowerment));
  Sheet_MountEmpowerment_descriptor_ = file->message_type(61);
  static const int Sheet_MountEmpowerment_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_MountEmpowerment, e_mountempowerment_list_),
  };
  Sheet_MountEmpowerment_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_MountEmpowerment_descriptor_,
      Sheet_MountEmpowerment::default_instance_,
      Sheet_MountEmpowerment_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_MountEmpowerment, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_MountEmpowerment, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_MountEmpowerment));
  E_MountEmpowerment_position_descriptor_ = file->message_type(62);
  static const int E_MountEmpowerment_position_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountEmpowerment_position, m_empowermentslot_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountEmpowerment_position, m_unlocktime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountEmpowerment_position, m_unlocknum_),
  };
  E_MountEmpowerment_position_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_MountEmpowerment_position_descriptor_,
      E_MountEmpowerment_position::default_instance_,
      E_MountEmpowerment_position_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountEmpowerment_position, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountEmpowerment_position, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_MountEmpowerment_position));
  Sheet_MountEmpowerment_position_descriptor_ = file->message_type(63);
  static const int Sheet_MountEmpowerment_position_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_MountEmpowerment_position, e_mountempowerment_position_list_),
  };
  Sheet_MountEmpowerment_position_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_MountEmpowerment_position_descriptor_,
      Sheet_MountEmpowerment_position::default_instance_,
      Sheet_MountEmpowerment_position_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_MountEmpowerment_position, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_MountEmpowerment_position, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_MountEmpowerment_position));
  E_MountEmpowerment_slot_descriptor_ = file->message_type(64);
  static const int E_MountEmpowerment_slot_offsets_[8] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountEmpowerment_slot, m_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountEmpowerment_slot, m_dissociatelevel_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountEmpowerment_slot, m_dissociatetime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountEmpowerment_slot, m_dissociatehour_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountEmpowerment_slot, m_dissociateitem_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountEmpowerment_slot, m_dissociatenum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountEmpowerment_slot, m_eventtime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountEmpowerment_slot, m_dissociatebox_),
  };
  E_MountEmpowerment_slot_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_MountEmpowerment_slot_descriptor_,
      E_MountEmpowerment_slot::default_instance_,
      E_MountEmpowerment_slot_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountEmpowerment_slot, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountEmpowerment_slot, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_MountEmpowerment_slot));
  Sheet_MountEmpowerment_slot_descriptor_ = file->message_type(65);
  static const int Sheet_MountEmpowerment_slot_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_MountEmpowerment_slot, e_mountempowerment_slot_list_),
  };
  Sheet_MountEmpowerment_slot_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_MountEmpowerment_slot_descriptor_,
      Sheet_MountEmpowerment_slot::default_instance_,
      Sheet_MountEmpowerment_slot_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_MountEmpowerment_slot, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_MountEmpowerment_slot, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_MountEmpowerment_slot));
  E_MountEmpowerment_event_descriptor_ = file->message_type(66);
  static const int E_MountEmpowerment_event_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountEmpowerment_event, m_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountEmpowerment_event, m_eventtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountEmpowerment_event, m_weight_),
  };
  E_MountEmpowerment_event_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_MountEmpowerment_event_descriptor_,
      E_MountEmpowerment_event::default_instance_,
      E_MountEmpowerment_event_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountEmpowerment_event, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_MountEmpowerment_event, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_MountEmpowerment_event));
  Sheet_MountEmpowerment_event_descriptor_ = file->message_type(67);
  static const int Sheet_MountEmpowerment_event_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_MountEmpowerment_event, e_mountempowerment_event_list_),
  };
  Sheet_MountEmpowerment_event_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_MountEmpowerment_event_descriptor_,
      Sheet_MountEmpowerment_event::default_instance_,
      Sheet_MountEmpowerment_event_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_MountEmpowerment_event, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_MountEmpowerment_event, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_MountEmpowerment_event));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_E_5fMount_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_MountFragmentAttributeDesc_descriptor_, &E_MountFragmentAttributeDesc::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_MountFragment_descriptor_, &E_MountFragment::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_MountFragment_descriptor_, &Sheet_MountFragment::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_MountValueAttributeDesc_descriptor_, &E_MountValueAttributeDesc::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_MountValue_descriptor_, &E_MountValue::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_MountValue_descriptor_, &Sheet_MountValue::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_MountDisplayMaterialDesc_descriptor_, &E_MountDisplayMaterialDesc::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_MountDisplay_descriptor_, &E_MountDisplay::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_MountDisplay_descriptor_, &Sheet_MountDisplay::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_MountUnlock_descriptor_, &E_MountUnlock::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_MountUnlock_descriptor_, &Sheet_MountUnlock::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_MountChangeMaterialDesc_descriptor_, &E_MountChangeMaterialDesc::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_MountChangeAttributeDesc_descriptor_, &E_MountChangeAttributeDesc::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_MountChange_descriptor_, &E_MountChange::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_MountChange_descriptor_, &Sheet_MountChange::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_MountAdvanceUpattributeDesc_descriptor_, &E_MountAdvanceUpattributeDesc::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_MountAdvance_descriptor_, &E_MountAdvance::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_MountAdvance_descriptor_, &Sheet_MountAdvance::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_MountBaby_egg_descriptor_, &E_MountBaby_egg::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_MountBaby_egg_descriptor_, &Sheet_MountBaby_egg::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_MountHuakunUplvDesc_descriptor_, &E_MountHuakunUplvDesc::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_MountHuakunMaterialDesc_descriptor_, &E_MountHuakunMaterialDesc::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_MountHuakunAdvanceDesc_descriptor_, &E_MountHuakunAdvanceDesc::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_MountHuakunAttributeDesc_descriptor_, &E_MountHuakunAttributeDesc::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_MountHuakun_descriptor_, &E_MountHuakun::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_MountHuakun_descriptor_, &Sheet_MountHuakun::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_MountHuakun_valueAttributeDesc_descriptor_, &E_MountHuakun_valueAttributeDesc::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_MountHuakun_value_descriptor_, &E_MountHuakun_value::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_MountHuakun_value_descriptor_, &Sheet_MountHuakun_value::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_MountHuakun_advancevalueItemDesc_descriptor_, &E_MountHuakun_advancevalueItemDesc::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_MountHuakun_advancevalue_descriptor_, &E_MountHuakun_advancevalue::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_MountHuakun_advancevalue_descriptor_, &Sheet_MountHuakun_advancevalue::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_MountHuakun_changeAttributeDesc_descriptor_, &E_MountHuakun_changeAttributeDesc::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_MountHuakun_change_descriptor_, &E_MountHuakun_change::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_MountHuakun_change_descriptor_, &Sheet_MountHuakun_change::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_MountHuakun_advanceUpattributeDesc_descriptor_, &E_MountHuakun_advanceUpattributeDesc::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_MountHuakun_advance_descriptor_, &E_MountHuakun_advance::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_MountHuakun_advance_descriptor_, &Sheet_MountHuakun_advance::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_MountBloodAttributeDesc_descriptor_, &E_MountBloodAttributeDesc::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_MountBlood_descriptor_, &E_MountBlood::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_MountBlood_descriptor_, &Sheet_MountBlood::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_MountHuakun_equip_descriptor_, &E_MountHuakun_equip::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_MountHuakun_equip_descriptor_, &Sheet_MountHuakun_equip::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_MountEquip_valueAttributeDesc_descriptor_, &E_MountEquip_valueAttributeDesc::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_MountEquip_value_descriptor_, &E_MountEquip_value::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_MountEquip_value_descriptor_, &Sheet_MountEquip_value::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_MountEquipsuitAttributeDesc_descriptor_, &E_MountEquipsuitAttributeDesc::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_MountEquipsuit_descriptor_, &E_MountEquipsuit::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_MountEquipsuit_descriptor_, &Sheet_MountEquipsuit::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_MountEquiptopTopDesc_descriptor_, &E_MountEquiptopTopDesc::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_MountEquiptopPercentDesc_descriptor_, &E_MountEquiptopPercentDesc::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_MountEquiptop_descriptor_, &E_MountEquiptop::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_MountEquiptop_descriptor_, &Sheet_MountEquiptop::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_MountEquiptopvalue_descriptor_, &E_MountEquiptopvalue::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_MountEquiptopvalue_descriptor_, &Sheet_MountEquiptopvalue::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_MountEquippart_descriptor_, &E_MountEquippart::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_MountEquippart_descriptor_, &Sheet_MountEquippart::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_MountEmpowermenttour_debris_descriptor_, &E_MountEmpowermenttour_debris::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_MountEmpowermenttour_debris_descriptor_, &Sheet_MountEmpowermenttour_debris::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_MountEmpowermentTourDesc_descriptor_, &E_MountEmpowermentTourDesc::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_MountEmpowerment_descriptor_, &E_MountEmpowerment::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_MountEmpowerment_descriptor_, &Sheet_MountEmpowerment::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_MountEmpowerment_position_descriptor_, &E_MountEmpowerment_position::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_MountEmpowerment_position_descriptor_, &Sheet_MountEmpowerment_position::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_MountEmpowerment_slot_descriptor_, &E_MountEmpowerment_slot::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_MountEmpowerment_slot_descriptor_, &Sheet_MountEmpowerment_slot::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_MountEmpowerment_event_descriptor_, &E_MountEmpowerment_event::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_MountEmpowerment_event_descriptor_, &Sheet_MountEmpowerment_event::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_E_5fMount_2eproto() {
  delete E_MountFragmentAttributeDesc::default_instance_;
  delete E_MountFragmentAttributeDesc_reflection_;
  delete E_MountFragment::default_instance_;
  delete E_MountFragment_reflection_;
  delete Sheet_MountFragment::default_instance_;
  delete Sheet_MountFragment_reflection_;
  delete E_MountValueAttributeDesc::default_instance_;
  delete E_MountValueAttributeDesc_reflection_;
  delete E_MountValue::default_instance_;
  delete E_MountValue_reflection_;
  delete Sheet_MountValue::default_instance_;
  delete Sheet_MountValue_reflection_;
  delete E_MountDisplayMaterialDesc::default_instance_;
  delete E_MountDisplayMaterialDesc_reflection_;
  delete E_MountDisplay::default_instance_;
  delete E_MountDisplay_reflection_;
  delete Sheet_MountDisplay::default_instance_;
  delete Sheet_MountDisplay_reflection_;
  delete E_MountUnlock::default_instance_;
  delete E_MountUnlock_reflection_;
  delete Sheet_MountUnlock::default_instance_;
  delete Sheet_MountUnlock_reflection_;
  delete E_MountChangeMaterialDesc::default_instance_;
  delete E_MountChangeMaterialDesc_reflection_;
  delete E_MountChangeAttributeDesc::default_instance_;
  delete E_MountChangeAttributeDesc_reflection_;
  delete E_MountChange::default_instance_;
  delete E_MountChange_reflection_;
  delete Sheet_MountChange::default_instance_;
  delete Sheet_MountChange_reflection_;
  delete E_MountAdvanceUpattributeDesc::default_instance_;
  delete E_MountAdvanceUpattributeDesc_reflection_;
  delete E_MountAdvance::default_instance_;
  delete E_MountAdvance_reflection_;
  delete Sheet_MountAdvance::default_instance_;
  delete Sheet_MountAdvance_reflection_;
  delete E_MountBaby_egg::default_instance_;
  delete E_MountBaby_egg_reflection_;
  delete Sheet_MountBaby_egg::default_instance_;
  delete Sheet_MountBaby_egg_reflection_;
  delete E_MountHuakunUplvDesc::default_instance_;
  delete E_MountHuakunUplvDesc_reflection_;
  delete E_MountHuakunMaterialDesc::default_instance_;
  delete E_MountHuakunMaterialDesc_reflection_;
  delete E_MountHuakunAdvanceDesc::default_instance_;
  delete E_MountHuakunAdvanceDesc_reflection_;
  delete E_MountHuakunAttributeDesc::default_instance_;
  delete E_MountHuakunAttributeDesc_reflection_;
  delete E_MountHuakun::default_instance_;
  delete E_MountHuakun_reflection_;
  delete Sheet_MountHuakun::default_instance_;
  delete Sheet_MountHuakun_reflection_;
  delete E_MountHuakun_valueAttributeDesc::default_instance_;
  delete E_MountHuakun_valueAttributeDesc_reflection_;
  delete E_MountHuakun_value::default_instance_;
  delete E_MountHuakun_value_reflection_;
  delete Sheet_MountHuakun_value::default_instance_;
  delete Sheet_MountHuakun_value_reflection_;
  delete E_MountHuakun_advancevalueItemDesc::default_instance_;
  delete E_MountHuakun_advancevalueItemDesc_reflection_;
  delete E_MountHuakun_advancevalue::default_instance_;
  delete E_MountHuakun_advancevalue_reflection_;
  delete Sheet_MountHuakun_advancevalue::default_instance_;
  delete Sheet_MountHuakun_advancevalue_reflection_;
  delete E_MountHuakun_changeAttributeDesc::default_instance_;
  delete E_MountHuakun_changeAttributeDesc_reflection_;
  delete E_MountHuakun_change::default_instance_;
  delete E_MountHuakun_change_reflection_;
  delete Sheet_MountHuakun_change::default_instance_;
  delete Sheet_MountHuakun_change_reflection_;
  delete E_MountHuakun_advanceUpattributeDesc::default_instance_;
  delete E_MountHuakun_advanceUpattributeDesc_reflection_;
  delete E_MountHuakun_advance::default_instance_;
  delete E_MountHuakun_advance_reflection_;
  delete Sheet_MountHuakun_advance::default_instance_;
  delete Sheet_MountHuakun_advance_reflection_;
  delete E_MountBloodAttributeDesc::default_instance_;
  delete E_MountBloodAttributeDesc_reflection_;
  delete E_MountBlood::default_instance_;
  delete E_MountBlood_reflection_;
  delete Sheet_MountBlood::default_instance_;
  delete Sheet_MountBlood_reflection_;
  delete E_MountHuakun_equip::default_instance_;
  delete E_MountHuakun_equip_reflection_;
  delete Sheet_MountHuakun_equip::default_instance_;
  delete Sheet_MountHuakun_equip_reflection_;
  delete E_MountEquip_valueAttributeDesc::default_instance_;
  delete E_MountEquip_valueAttributeDesc_reflection_;
  delete E_MountEquip_value::default_instance_;
  delete E_MountEquip_value_reflection_;
  delete Sheet_MountEquip_value::default_instance_;
  delete Sheet_MountEquip_value_reflection_;
  delete E_MountEquipsuitAttributeDesc::default_instance_;
  delete E_MountEquipsuitAttributeDesc_reflection_;
  delete E_MountEquipsuit::default_instance_;
  delete E_MountEquipsuit_reflection_;
  delete Sheet_MountEquipsuit::default_instance_;
  delete Sheet_MountEquipsuit_reflection_;
  delete E_MountEquiptopTopDesc::default_instance_;
  delete E_MountEquiptopTopDesc_reflection_;
  delete E_MountEquiptopPercentDesc::default_instance_;
  delete E_MountEquiptopPercentDesc_reflection_;
  delete E_MountEquiptop::default_instance_;
  delete E_MountEquiptop_reflection_;
  delete Sheet_MountEquiptop::default_instance_;
  delete Sheet_MountEquiptop_reflection_;
  delete E_MountEquiptopvalue::default_instance_;
  delete E_MountEquiptopvalue_reflection_;
  delete Sheet_MountEquiptopvalue::default_instance_;
  delete Sheet_MountEquiptopvalue_reflection_;
  delete E_MountEquippart::default_instance_;
  delete E_MountEquippart_reflection_;
  delete Sheet_MountEquippart::default_instance_;
  delete Sheet_MountEquippart_reflection_;
  delete E_MountEmpowermenttour_debris::default_instance_;
  delete E_MountEmpowermenttour_debris_reflection_;
  delete Sheet_MountEmpowermenttour_debris::default_instance_;
  delete Sheet_MountEmpowermenttour_debris_reflection_;
  delete E_MountEmpowermentTourDesc::default_instance_;
  delete E_MountEmpowermentTourDesc_reflection_;
  delete E_MountEmpowerment::default_instance_;
  delete E_MountEmpowerment_reflection_;
  delete Sheet_MountEmpowerment::default_instance_;
  delete Sheet_MountEmpowerment_reflection_;
  delete E_MountEmpowerment_position::default_instance_;
  delete E_MountEmpowerment_position_reflection_;
  delete Sheet_MountEmpowerment_position::default_instance_;
  delete Sheet_MountEmpowerment_position_reflection_;
  delete E_MountEmpowerment_slot::default_instance_;
  delete E_MountEmpowerment_slot_reflection_;
  delete Sheet_MountEmpowerment_slot::default_instance_;
  delete Sheet_MountEmpowerment_slot_reflection_;
  delete E_MountEmpowerment_event::default_instance_;
  delete E_MountEmpowerment_event_reflection_;
  delete Sheet_MountEmpowerment_event::default_instance_;
  delete Sheet_MountEmpowerment_event_reflection_;
}

void protobuf_AddDesc_E_5fMount_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::yd_fieldoptions::protobuf_AddDesc_yd_5ffieldoptions_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\rE_Mount.proto\022\010proto_ff\032\025yd_fieldoptio"
    "ns.proto\"P\n\034E_MountFragmentAttributeDesc"
    "\022\030\n\007m_value\030\001 \001(\005B\007\302\377\024\003\345\200\274\022\026\n\006m_type\030\002 \001"
    "(\005B\006\302\377\024\002ID\"\321\001\n\017E_MountFragment\022\"\n\014m_frag"
    "mentid\030\001 \001(\003B\014\302\377\024\010\347\242\216\347\211\207ID\022\034\n\006m_item\030\002 \001"
    "(\003B\014\302\377\024\010\347\211\251\345\223\201ID\022)\n\tm_itemnum\030\003 \001(\005B\026\302\377\024"
    "\022\347\242\216\347\211\207\344\275\277\347\224\250\344\270\212\351\231\220\022Q\n\013m_attribute\030\004 \003(\013"
    "2&.proto_ff.E_MountFragmentAttributeDesc"
    "B\024\302\377\024\014\345\237\272\347\241\200\345\261\236\346\200\247\210\301\024\005\"T\n\023Sheet_MountFra"
    "gment\022=\n\024E_MountFragment_List\030\001 \003(\0132\031.pr"
    "oto_ff.E_MountFragmentB\004\210\301\024\020\"K\n\031E_MountV"
    "alueAttributeDesc\022\030\n\007m_value\030\001 \001(\005B\007\302\377\024\003"
    "\345\200\274\022\024\n\006m_type\030\002 \001(\005B\004\302\377\024\000\"\367\001\n\014E_MountVal"
    "ue\022\024\n\004m_id\030\001 \001(\005B\006\302\377\024\002id\022\032\n\006m_type\030\002 \001(\005"
    "B\n\302\377\024\006\347\261\273\345\236\213\022\030\n\004m_lv\030\003 \001(\005B\n\302\377\024\006\347\255\211\347\272\247\022%"
    "\n\005m_exp\030\004 \001(\005B\026\302\377\024\022\345\215\207\347\272\247\351\234\200\350\246\201\347\273\217\351\252\214\022*\n"
    "\007m_speed\030\005 \001(\005B\031\302\377\024\025\351\273\230\350\256\244\344\271\230\351\252\221\351\200\237\345\272\246\345\200"
    "\274\022H\n\013m_attribute\030\006 \003(\0132#.proto_ff.E_Moun"
    "tValueAttributeDescB\016\302\377\024\006\345\261\236\346\200\247\210\301\024\t\"L\n\020S"
    "heet_MountValue\0228\n\021E_MountValue_List\030\001 \003"
    "(\0132\026.proto_ff.E_MountValueB\005\210\301\024\200\020\"P\n\032E_M"
    "ountDisplayMaterialDesc\022\034\n\005m_exp\030\001 \001(\005B\r"
    "\302\377\024\t\347\273\217\351\252\214\345\200\274\022\024\n\004m_id\030\002 \001(\005B\006\302\377\024\002ID\"\225\003\n\016"
    "E_MountDisplay\022\024\n\004m_id\030\001 \001(\005B\006\302\377\024\002id\022*\n\007"
    "m_speed\030\002 \001(\005B\031\302\377\024\025\351\273\230\350\256\244\344\271\230\351\252\221\351\200\237\345\272\246\345\200\274"
    "\022*\n\nm_uplvtype\030\003 \001(\005B\026\302\377\024\022\345\215\207\347\272\247\345\217\202\350\200\203\347\261"
    "\273\345\236\213\022*\n\tm_skillid\030\004 \001(\tB\027\302\377\024\017\350\247\243\351\224\201\346\212\200\350\203"
    "\275\347\273\204\220\301\024@\022$\n\006m_fxid\030\005 \001(\tB\024\302\377\024\014\345\271\273\345\214\226\347\211\271\346"
    "\225\210\220\301\024@\022\"\n\010m_starup\030\006 \001(\005B\020\302\377\024\014\346\230\237\346\230\237\344\270\212\351"
    "\231\220\022!\n\007m_lvmax\030\007 \001(\005B\020\302\377\024\014\347\255\211\347\272\247\344\270\212\351\231\220\022N\n"
    "\nm_material\030\010 \003(\0132$.proto_ff.E_MountDisp"
    "layMaterialDescB\024\302\377\024\014\345\215\207\347\272\247\346\235\220\346\226\231\210\301\024\002\022,\n"
    "\014m_fragmentid\030\t \003(\003B\026\302\377\024\016\345\205\263\350\201\224\347\242\216\347\211\207ID\210"
    "\301\024\003\"Q\n\022Sheet_MountDisplay\022;\n\023E_MountDisp"
    "lay_List\030\001 \003(\0132\030.proto_ff.E_MountDisplay"
    "B\004\210\301\024 \"\200\001\n\rE_MountUnlock\022\024\n\004m_id\030\001 \001(\005B\006"
    "\302\377\024\002id\022\030\n\004m_lv\030\002 \001(\005B\n\302\377\024\006\347\255\211\347\272\247\022\037\n\tm_mo"
    "delid\030\003 \001(\005B\014\302\377\024\010\346\250\241\345\236\213id\022\036\n\006m_name\030\004 \001("
    "\tB\016\302\377\024\006\345\220\215\347\247\260\220\301\024@\"N\n\021Sheet_MountUnlock\0229"
    "\n\022E_MountUnlock_List\030\001 \003(\0132\027.proto_ff.E_"
    "MountUnlockB\004\210\301\024\010\"O\n\031E_MountChangeMateri"
    "alDesc\022\034\n\005m_exp\030\001 \001(\005B\r\302\377\024\t\347\273\217\351\252\214\345\200\274\022\024\n\004"
    "m_id\030\002 \001(\005B\006\302\377\024\002ID\"O\n\032E_MountChangeAttri"
    "buteDesc\022\032\n\tm_upvalue\030\001 \001(\005B\007\302\377\024\003\345\200\274\022\025\n\007"
    "m_upber\030\002 \001(\005B\004\302\377\024\000\"\201\007\n\rE_MountChange\022\024\n"
    "\004m_id\030\001 \001(\005B\006\302\377\024\002id\022\036\n\006m_name\030\002 \001(\tB\016\302\377\024"
    "\006\345\220\215\347\247\260\220\301\024@\022.\n\rm_advancename\030\003 \001(\tB\027\302\377\024\017"
    "\350\277\233\351\230\266\345\220\216\345\220\215\345\255\227\220\301\024@\022*\n\007m_speed\030\004 \001(\005B\031\302\377"
    "\024\025\351\273\230\350\256\244\344\271\230\351\252\221\351\200\237\345\272\246\345\200\274\022*\n\nm_uplvtype\030\005 "
    "\001(\005B\026\302\377\024\022\345\215\207\347\272\247\345\217\202\350\200\203\347\261\273\345\236\213\022-\n\rm_actives"
    "kill\030\006 \001(\005B\026\302\377\024\022\346\277\200\346\264\273\350\216\267\345\276\227\346\212\200\350\203\275\022*\n\tm_"
    "skillid\030\007 \001(\tB\027\302\377\024\017\350\247\243\351\224\201\346\212\200\350\203\275\347\273\204\220\301\024@\022$"
    "\n\006m_fxid\030\010 \001(\tB\024\302\377\024\014\345\271\273\345\214\226\347\211\271\346\225\210\220\301\024@\022#\n\t"
    "m_starmax\030\t \001(\005B\020\302\377\024\014\346\230\237\346\230\237\344\270\212\351\231\220\022!\n\007m_l"
    "vmax\030\n \001(\005B\020\302\377\024\014\347\255\211\347\272\247\344\270\212\351\231\220\022\037\n\tm_modeli"
    "d\030\013 \001(\005B\014\302\377\024\010\346\250\241\345\236\213id\0223\n\020m_activationite"
    "m\030\014 \001(\005B\031\302\377\024\025\346\277\200\346\264\273\351\234\200\350\246\201\347\232\204\351\201\223\345\205\267\0228\n\017m_"
    "activationnum\030\r \001(\005B\037\302\377\024\033\346\277\200\346\264\273\351\234\200\350\246\201\347\232\204"
    "\351\201\223\345\205\267\346\225\260\351\207\217\022*\n\010m_starid\030\016 \001(\005B\030\302\377\024\024\345\215\207\346"
    "\230\237\351\234\200\350\246\201\351\201\223\345\205\267ID\022.\n\tm_starnum\030\017 \001(\tB\033\302\377\024"
    "\022\345\215\207\346\230\237\351\234\200\350\246\201\346\225\260\351\207\217\220\301\024\200\002\022/\n\tm_starber\030\020 "
    "\001(\005B\034\302\377\024\030\346\257\217\346\230\237\347\272\247\346\217\220\345\215\207\347\231\276\345\210\206\346\257\224\022)\n\017m_u"
    "pattributeid\030\021 \001(\005B\020\302\377\024\014\350\277\233\351\230\266\347\261\273\345\236\213\022M\n\n"
    "m_material\030\022 \003(\0132#.proto_ff.E_MountChang"
    "eMaterialDescB\024\302\377\024\014\345\215\207\347\272\247\346\235\220\346\226\231\210\301\024\002\022R\n\013m"
    "_attribute\030\023 \003(\0132$.proto_ff.E_MountChang"
    "eAttributeDescB\027\302\377\024\017\347\231\276\345\210\206\346\257\224\345\261\236\346\200\247\210\301\024\004\""
    "N\n\021Sheet_MountChange\0229\n\022E_MountChange_Li"
    "st\030\001 \003(\0132\027.proto_ff.E_MountChangeB\004\210\301\024 \""
    "Q\n\035E_MountAdvanceUpattributeDesc\022\030\n\007m_va"
    "lue\030\001 \001(\005B\007\302\377\024\003\345\200\274\022\026\n\006m_type\030\002 \001(\005B\006\302\377\024\002"
    "ID\"\210\002\n\016E_MountAdvance\022\024\n\004m_id\030\001 \001(\005B\006\302\377\024"
    "\002id\022)\n\017m_upattributeid\030\002 \001(\005B\020\302\377\024\014\350\277\233\351\230\266"
    "\347\261\273\345\236\213\0224\n\010m_starid\030\003 \001(\005B\"\302\377\024\036\350\277\233\351\230\266\344\270\223\345"
    "\261\236\351\234\200\346\261\202\346\230\237\346\230\237\346\225\260\351\207\217\022)\n\tm_skillid\030\004 \001(\005B"
    "\026\302\377\024\022\350\277\233\351\230\266\344\270\223\345\261\236\346\212\200\350\203\275\022T\n\rm_upattribute"
    "\030\005 \003(\0132\'.proto_ff.E_MountAdvanceUpattrib"
    "uteDescB\024\302\377\024\014\346\277\200\346\264\273\345\261\236\346\200\247\210\301\024\005\"Q\n\022Sheet_M"
    "ountAdvance\022;\n\023E_MountAdvance_List\030\001 \003(\013"
    "2\030.proto_ff.E_MountAdvanceB\004\210\301\024@\"\227\001\n\017E_M"
    "ountBaby_egg\022\035\n\004m_id\030\001 \001(\005B\017\302\377\024\013\350\233\213\351\201\223\345\205"
    "\267id\022\034\n\006m_item\030\002 \001(\005B\014\302\377\024\010\351\201\223\345\205\267id\022#\n\006m_t"
    "ime\030\003 \001(\005B\023\302\377\024\017\350\233\213\347\224\237\346\210\220\346\227\266\351\227\264\022\"\n\tm_item"
    "box\030\004 \001(\005B\017\302\377\024\013\345\245\226\345\212\261\347\233\222id\"T\n\023Sheet_Moun"
    "tBaby_egg\022=\n\024E_MountBaby_egg_List\030\001 \003(\0132"
    "\031.proto_ff.E_MountBaby_eggB\004\210\301\024\010\"J\n\025E_Mo"
    "untHuakunUplvDesc\022\032\n\tm_upvalue\030\001 \001(\005B\007\302\377"
    "\024\003\345\200\274\022\025\n\007m_upber\030\002 \001(\005B\004\302\377\024\000\"O\n\031E_MountH"
    "uakunMaterialDesc\022\034\n\005m_exp\030\001 \001(\005B\r\302\377\024\t\347\273"
    "\217\351\252\214\345\200\274\022\024\n\004m_id\030\002 \001(\005B\006\302\377\024\002ID\"M\n\030E_Mount"
    "HuakunAdvanceDesc\022\032\n\tm_upvalue\030\001 \001(\005B\007\302\377"
    "\024\003\345\200\274\022\025\n\007m_upber\030\002 \001(\005B\004\302\377\024\000\"O\n\032E_MountH"
    "uakunAttributeDesc\022\032\n\tm_upvalue\030\001 \001(\005B\007\302"
    "\377\024\003\345\200\274\022\025\n\007m_upber\030\002 \001(\005B\004\302\377\024\000\"\224\014\n\rE_Moun"
    "tHuakun\022\024\n\004m_id\030\001 \001(\005B\006\302\377\024\002id\022\035\n\tm_model"
    "id\030\002 \001(\005B\n\302\377\024\006\346\250\241\345\236\213\022#\n\tm_quality\030\003 \001(\005B"
    "\020\302\377\024\014\345\235\220\351\252\221\345\223\201\350\264\250\022*\n\007m_speed\030\004 \001(\005B\031\302\377\024\025"
    "\351\273\230\350\256\244\344\271\230\351\252\221\351\200\237\345\272\246\345\200\274\022*\n\nm_uplvtype\030\005 \001("
    "\005B\026\302\377\024\022\345\215\207\347\272\247\345\217\202\350\200\203\347\261\273\345\236\213\022(\n\016m_activatei"
    "tem\030\006 \001(\005B\020\302\377\024\014\346\277\200\346\264\273\346\235\220\346\226\231\0227\n\021m_activat"
    "eitemnum\030\007 \001(\005B\034\302\377\024\030\346\277\200\346\264\273\346\235\220\346\226\231\351\234\200\350\246\201\346\225"
    "\260\351\207\217\022\'\n\rm_advancetype\030\010 \001(\005B\020\302\377\024\014\350\277\233\351\230\266\347"
    "\261\273\345\236\213\022)\n\017m_starvancetype\030\t \001(\005B\020\302\377\024\014\346\230\237\347"
    "\272\247\347\261\273\345\236\213\022%\n\013m_starlimit\030\n \001(\005B\020\302\377\024\014\346\230\237\347\272"
    "\247\344\270\212\351\231\220\022/\n\tm_starber\030\013 \001(\005B\034\302\377\024\030\346\257\217\346\230\237\347\272"
    "\247\346\217\220\345\215\207\347\231\276\345\210\206\346\257\224\022(\n\nm_skill_lg\030\014 \001(\tB\024\302\377"
    "\024\014\347\201\265\346\240\271\346\212\200\350\203\275\220\301\024@\022\"\n\nm_skill_bd\030\r \001(\tB\016"
    "\302\377\024\006\350\242\253\345\212\250\220\301\024@\022.\n\024m_soaringattributeid\030\016"
    " \001(\005B\020\302\377\024\014\351\243\236\345\215\207\347\261\273\345\236\213\022&\n\014m_comprehend\030\017"
    " \001(\005B\020\302\377\024\014\346\217\220\346\202\237\347\261\273\345\236\213\022)\n\013m_exclusive\030\020 "
    "\001(\tB\024\302\377\024\014\346\217\220\346\202\237\344\270\223\345\261\236\220\301\024@\022/\n\021m_comprehen"
    "dskill\030\021 \001(\tB\024\302\377\024\014\346\217\220\346\202\237\346\212\200\350\203\275\220\301\024@\022#\n\013m_"
    "potential\030\022 \001(\tB\016\302\377\024\006\346\275\234\350\203\275\220\301\024@\0222\n\022m_com"
    "prehendupitem\030\023 \001(\005B\026\302\377\024\022\346\217\220\346\202\237\345\215\207\345\223\201\346\230\276"
    "\347\244\272\0220\n\020m_comprehendtype\030\024 \001(\005B\026\302\377\024\022\346\217\220\346\202"
    "\237\345\261\236\346\200\247\347\261\273\345\236\213\0223\n\007m_ratio\030\025 \001(\005B\"\302\377\024\036\346\217\220\346"
    "\202\237\351\235\236\347\231\276\345\210\206\346\257\224\345\261\236\346\200\247\346\257\224\344\276\213\022:\n\021m_ratioper"
    "centage\030\026 \001(\005B\037\302\377\024\033\346\217\220\346\202\237\347\231\276\345\210\206\346\257\224\345\261\236\346\200\247"
    "\346\257\224\344\276\213\022)\n\013m_equipsuit\030\027 \001(\tB\024\302\377\024\014\351\262\262\347\201\265\345"
    "\245\227\350\243\205\220\301\024@\0222\n\014m_qualitymax\030\030 \001(\005B\034\302\377\024\030\351\262\262"
    "\347\201\265\347\251\277\346\210\264\346\234\200\345\244\247\345\223\201\350\264\250\0229\n\022m_lilianchangei"
    "tem\030\031 \001(\tB\035\302\377\024\025\345\216\206\347\273\203\345\274\202\345\214\226\351\262\262\346\216\211\350\220\275\220\301\024@"
    "\022H\n\006m_uplv\030\032 \003(\0132\037.proto_ff.E_MountHuaku"
    "nUplvDescB\027\302\377\024\017\347\231\276\345\210\206\346\257\224\345\261\236\346\200\247\210\301\024\004\022M\n\nm_"
    "material\030\033 \003(\0132#.proto_ff.E_MountHuakunM"
    "aterialDescB\024\302\377\024\014\345\215\207\347\272\247\346\235\220\346\226\231\210\301\024\003\022N\n\tm_a"
    "dvance\030\034 \003(\0132\".proto_ff.E_MountHuakunAdv"
    "anceDescB\027\302\377\024\017\347\231\276\345\210\206\346\257\224\345\261\236\346\200\247\210\301\024\004\0222\n\014m_u"
    "pstaritem\030\035 \003(\005B\034\302\377\024\024\345\215\207\346\230\237\351\234\200\350\246\201\351\201\223\345\205\267I"
    "D\210\301\024\002\0229\n\013m_upstarnum\030\036 \003(\tB$\302\377\024\030\345\215\207\346\230\237\346\200"
    "\273\345\205\261\351\234\200\350\246\201\346\225\260\351\207\217\210\301\024\002\220\301\024@\022R\n\013m_attribute\030"
    "\037 \003(\0132$.proto_ff.E_MountHuakunAttributeD"
    "escB\027\302\377\024\017\347\231\276\345\210\206\346\257\224\345\261\236\346\200\247\210\301\024\004\"N\n\021Sheet_Mo"
    "untHuakun\0229\n\022E_MountHuakun_List\030\001 \003(\0132\027."
    "proto_ff.E_MountHuakunB\004\210\301\024\010\"T\n E_MountH"
    "uakun_valueAttributeDesc\022\030\n\007m_value\030\001 \001("
    "\005B\007\302\377\024\003\345\200\274\022\026\n\006m_type\030\002 \001(\005B\006\302\377\024\002ID\"\367\001\n\023E"
    "_MountHuakun_value\022\024\n\004m_id\030\001 \001(\003B\006\302\377\024\002id"
    "\022&\n\014m_huakuntype\030\002 \001(\005B\020\302\377\024\014\345\261\236\346\200\247\347\261\273\345\236\213"
    "\022\036\n\nm_huakunlv\030\003 \001(\005B\n\302\377\024\006\347\255\211\347\272\247\022+\n\013m_hu"
    "akunexp\030\004 \001(\005B\026\302\377\024\022\345\215\207\347\272\247\346\211\200\351\234\200\347\273\217\351\252\214\022U\n"
    "\013m_attribute\030\005 \003(\0132*.proto_ff.E_MountHua"
    "kun_valueAttributeDescB\024\302\377\024\014\345\237\272\347\241\200\345\261\236\346\200\247"
    "\210\301\024\006\"a\n\027Sheet_MountHuakun_value\022F\n\030E_Mou"
    "ntHuakun_value_List\030\001 \003(\0132\035.proto_ff.E_M"
    "ountHuakun_valueB\005\210\301\024\200\004\"S\n\"E_MountHuakun"
    "_advancevalueItemDesc\022\031\n\005m_num\030\001 \001(\005B\n\302\377"
    "\024\006\346\225\260\351\207\217\022\022\n\004m_id\030\002 \001(\005B\004\302\377\024\000\"\236\002\n\032E_Mount"
    "Huakun_advancevalue\022\024\n\004m_id\030\001 \001(\005B\006\302\377\024\002i"
    "d\022\030\n\004m_lv\030\002 \001(\005B\n\302\377\024\006\347\255\211\347\272\247\022\'\n\rm_advance"
    "type\030\003 \001(\005B\020\302\377\024\014\350\277\233\351\230\266\347\261\273\345\236\213\022)\n\tm_winpro"
    "b\030\004 \001(\005B\026\302\377\024\022\350\277\233\351\230\266\346\210\220\345\212\237\346\246\202\347\216\207\022(\n\010m_fai"
    "llv\030\005 \001(\005B\026\302\377\024\022\350\277\233\351\230\266\345\244\261\350\264\245\346\216\211\347\272\247\022R\n\006m_i"
    "tem\030\006 \003(\0132,.proto_ff.E_MountHuakun_advan"
    "cevalueItemDescB\024\302\377\024\014\351\234\200\346\261\202\351\201\223\345\205\267\210\301\024\003\"v\n"
    "\036Sheet_MountHuakun_advancevalue\022T\n\037E_Mou"
    "ntHuakun_advancevalue_List\030\001 \003(\0132$.proto"
    "_ff.E_MountHuakun_advancevalueB\005\210\301\024\200\001\"V\n"
    "!E_MountHuakun_changeAttributeDesc\022\032\n\tm_"
    "upvalue\030\001 \001(\005B\007\302\377\024\003\345\200\274\022\025\n\007m_upber\030\002 \001(\005B"
    "\004\302\377\024\000\"\234\005\n\024E_MountHuakun_change\022\024\n\004m_id\030\001"
    " \001(\005B\006\302\377\024\002id\022\036\n\nm_huakunid\030\002 \001(\005B\n\302\377\024\006\345\220"
    "\215\347\247\260\022*\n\007m_speed\030\003 \001(\005B\031\302\377\024\025\351\273\230\350\256\244\344\271\230\351\252\221\351"
    "\200\237\345\272\246\345\200\274\022$\n\006m_fxid\030\004 \001(\tB\024\302\377\024\014\345\271\273\345\214\226\347\211\271\346"
    "\225\210\220\301\024@\022\037\n\tm_modelid\030\005 \001(\005B\014\302\377\024\010\346\250\241\345\236\213id\022"
    "3\n\020m_activationitem\030\006 \001(\005B\031\302\377\024\025\346\277\200\346\264\273\351\234\200"
    "\350\246\201\347\232\204\351\201\223\345\205\267\0228\n\017m_activationnum\030\007 \001(\005B\037\302"
    "\377\024\033\346\277\200\346\264\273\351\234\200\350\246\201\347\232\204\351\201\223\345\205\267\346\225\260\351\207\217\022+\n\021m_star"
    "attributeid\030\010 \001(\005B\020\302\377\024\014\345\215\207\346\230\237\347\261\273\345\236\213\022#\n\tm"
    "_starmax\030\t \001(\005B\020\302\377\024\014\346\230\237\346\230\237\344\270\212\351\231\220\022*\n\010m_st"
    "arid\030\n \001(\005B\030\302\377\024\024\345\215\207\346\230\237\351\234\200\350\246\201\351\201\223\345\205\267ID\022-\n\t"
    "m_starnum\030\013 \001(\tB\032\302\377\024\022\345\215\207\346\230\237\351\234\200\350\246\201\346\225\260\351\207\217\220"
    "\301\024@\022/\n\tm_starber\030\014 \001(\005B\034\302\377\024\030\346\257\217\346\230\237\347\272\247\346\217\220"
    "\345\215\207\347\231\276\345\210\206\346\257\224\0223\n\023m_changeattributeid\030\r \001("
    "\005B\026\302\377\024\022\345\274\202\345\214\226\351\243\236\345\215\207\347\261\273\345\236\213\022Y\n\013m_attribute"
    "\030\016 \003(\0132+.proto_ff.E_MountHuakun_changeAt"
    "tributeDescB\027\302\377\024\017\347\231\276\345\210\206\346\257\224\345\261\236\346\200\247\210\301\024\004\"c\n\030"
    "Sheet_MountHuakun_change\022G\n\031E_MountHuaku"
    "n_change_List\030\001 \003(\0132\036.proto_ff.E_MountHu"
    "akun_changeB\004\210\301\024\010\"X\n$E_MountHuakun_advan"
    "ceUpattributeDesc\022\030\n\007m_value\030\001 \001(\005B\007\302\377\024\003"
    "\345\200\274\022\026\n\006m_type\030\002 \001(\005B\006\302\377\024\002ID\"\226\002\n\025E_MountH"
    "uakun_advance\022\024\n\004m_id\030\001 \001(\005B\006\302\377\024\002id\022)\n\017m"
    "_upattributeid\030\002 \001(\005B\020\302\377\024\014\350\277\233\351\230\266\347\261\273\345\236\213\0224"
    "\n\010m_starid\030\003 \001(\005B\"\302\377\024\036\350\277\233\351\230\266\344\270\223\345\261\236\351\234\200\346\261\202"
    "\346\230\237\346\230\237\346\225\260\351\207\217\022)\n\tm_skillid\030\004 \001(\005B\026\302\377\024\022\350\277\233"
    "\351\230\266\344\270\223\345\261\236\346\212\200\350\203\275\022[\n\rm_upattribute\030\005 \003(\0132."
    ".proto_ff.E_MountHuakun_advanceUpattribu"
    "teDescB\024\302\377\024\014\346\277\200\346\264\273\345\261\236\346\200\247\210\301\024\005\"g\n\031Sheet_Mo"
    "untHuakun_advance\022J\n\032E_MountHuakun_advan"
    "ce_List\030\001 \003(\0132\037.proto_ff.E_MountHuakun_a"
    "dvanceB\005\210\301\024\200\001\"N\n\031E_MountBloodAttributeDe"
    "sc\022\033\n\007m_value\030\001 \001(\005B\n\302\377\024\006\346\225\260\345\200\274\022\024\n\006m_typ"
    "e\030\002 \001(\005B\004\302\377\024\000\"x\n\014E_MountBlood\022\030\n\004m_id\030\001 "
    "\001(\005B\n\302\377\024\006\346\230\237\346\225\260\022N\n\013m_attribute\030\002 \003(\0132#.p"
    "roto_ff.E_MountBloodAttributeDescB\024\302\377\024\014\345"
    "\237\272\347\241\200\345\261\236\346\200\247\210\301\024\002\"K\n\020Sheet_MountBlood\0227\n\021E"
    "_MountBlood_List\030\001 \003(\0132\026.proto_ff.E_Moun"
    "tBloodB\004\210\301\024 \"\345\002\n\023E_MountHuakun_equip\022\031\n\t"
    "m_equipid\030\001 \001(\005B\006\302\377\024\002id\022\032\n\006m_part\030\002 \001(\005B"
    "\n\302\377\024\006\351\203\250\344\275\215\022\035\n\tm_quality\030\003 \001(\005B\n\302\377\024\006\345\223\201\350"
    "\264\250\022*\n\020m_equipintensify\030\004 \001(\005B\020\302\377\024\014\345\274\272\345\214\226"
    "\347\261\273\345\236\213\022$\n\nm_srtongup\030\005 \001(\005B\020\302\377\024\014\345\274\272\345\214\226\344\270"
    "\212\351\231\220\022,\n\022m_advanceintensify\030\006 \001(\005B\020\302\377\024\014\350\277"
    "\233\351\230\266\347\261\273\345\236\213\022%\n\013m_equipttop\030\007 \001(\005B\020\302\377\024\014\347\252\201"
    "\347\240\264\347\261\273\345\236\213\022)\n\tm_resolve\030\010 \001(\005B\026\302\377\024\022\351\262\262\347\201\265"
    "\345\210\206\350\247\243\346\235\220\346\226\231\022&\n\014m_resolvemun\030\t \001(\005B\020\302\377\024\014"
    "\345\210\206\350\247\243\346\225\260\351\207\217\"`\n\027Sheet_MountHuakun_equip\022"
    "E\n\030E_MountHuakun_equip_List\030\001 \003(\0132\035.prot"
    "o_ff.E_MountHuakun_equipB\004\210\301\024@\"Q\n\037E_Moun"
    "tEquip_valueAttributeDesc\022\030\n\007m_value\030\001 \001"
    "(\005B\007\302\377\024\003\345\200\274\022\024\n\006m_type\030\002 \001(\005B\004\302\377\024\000\"\232\002\n\022E_"
    "MountEquip_value\022 \n\020m_equipintensify\030\001 \001"
    "(\005B\006\302\377\024\002id\022&\n\014m_equipvalue\030\002 \001(\005B\020\302\377\024\014\345\261"
    "\236\346\200\247\347\261\273\345\236\213\022\035\n\tm_equiplv\030\003 \001(\005B\n\302\377\024\006\347\255\211\347\272"
    "\247\022%\n\013m_equipitem\030\004 \001(\005B\020\302\377\024\014\351\201\223\345\205\267\346\266\210\350\200\227"
    "\022$\n\nm_equipmun\030\005 \001(\005B\020\302\377\024\014\346\266\210\350\200\227\346\225\260\351\207\217\022N"
    "\n\013m_attribute\030\006 \003(\0132).proto_ff.E_MountEq"
    "uip_valueAttributeDescB\016\302\377\024\006\345\261\236\346\200\247\210\301\024\004\"^"
    "\n\026Sheet_MountEquip_value\022D\n\027E_MountEquip"
    "_value_List\030\001 \003(\0132\034.proto_ff.E_MountEqui"
    "p_valueB\005\210\301\024\200 \"O\n\035E_MountEquipsuitAttrib"
    "uteDesc\022\030\n\007m_value\030\001 \001(\005B\007\302\377\024\003\345\200\274\022\024\n\006m_t"
    "ype\030\002 \001(\005B\004\302\377\024\000\"\276\001\n\020E_MountEquipsuit\022\024\n\004"
    "m_id\030\001 \001(\005B\006\302\377\024\002id\022#\n\tm_quality\030\002 \001(\005B\020\302"
    "\377\024\014\350\246\201\346\261\202\345\223\201\350\264\250\022!\n\007m_piece\030\003 \001(\005B\020\302\377\024\014\345\245"
    "\227\350\243\205\344\273\266\346\225\260\022L\n\013m_attribute\030\004 \003(\0132\'.proto_"
    "ff.E_MountEquipsuitAttributeDescB\016\302\377\024\006\345\261"
    "\236\346\200\247\210\301\024\003\"W\n\024Sheet_MountEquipsuit\022\?\n\025E_Mo"
    "untEquipsuit_List\030\001 \003(\0132\032.proto_ff.E_Mou"
    "ntEquipsuitB\004\210\301\024 \"N\n\026E_MountEquiptopTopD"
    "esc\022\030\n\007m_value\030\001 \001(\005B\007\302\377\024\003\345\200\274\022\032\n\006m_type\030"
    "\002 \001(\005B\n\302\377\024\006\345\261\236\346\200\247\"R\n\032E_MountEquiptopPerc"
    "entDesc\022\030\n\007m_value\030\001 \001(\005B\007\302\377\024\003\345\200\274\022\032\n\006m_t"
    "ype\030\002 \001(\005B\n\302\377\024\006\345\261\236\346\200\247\"\252\002\n\017E_MountEquipto"
    "p\022\024\n\004m_id\030\001 \001(\005B\006\302\377\024\002id\022(\n\014m_positionid\030"
    "\002 \001(\005B\022\302\377\024\016\350\243\205\345\244\207\351\203\250\344\275\215id\022%\n\013m_equipttop"
    "\030\003 \001(\005B\020\302\377\024\014\347\252\201\347\240\264\347\261\273\345\236\213\022\035\n\tm_quality\030\004 "
    "\001(\005B\n\302\377\024\006\345\223\201\350\264\250\022E\n\005m_top\030\005 \003(\0132 .proto_f"
    "f.E_MountEquiptopTopDescB\024\302\377\024\014\351\235\236\347\231\276\345\210\206\346"
    "\257\224\210\301\024\010\022J\n\tm_percent\030\006 \003(\0132$.proto_ff.E_M"
    "ountEquiptopPercentDescB\021\302\377\024\t\347\231\276\345\210\206\346\257\224\210\301"
    "\024\010\"T\n\023Sheet_MountEquiptop\022=\n\024E_MountEqui"
    "ptop_List\030\001 \003(\0132\031.proto_ff.E_MountEquipt"
    "opB\004\210\301\024\020\"\230\001\n\024E_MountEquiptopvalue\022\024\n\004m_i"
    "d\030\001 \001(\005B\006\302\377\024\002id\022#\n\tm_quality\030\002 \001(\005B\020\302\377\024\014"
    "\351\262\262\347\201\265\345\223\201\350\264\250\022\037\n\005m_top\030\003 \001(\005B\020\302\377\024\014\351\262\262\347\201\265\347"
    "\252\201\347\240\264\022$\n\007m_value\030\004 \001(\005B\023\302\377\024\017\345\210\235\345\247\213\350\277\233\345\272\246"
    "\345\200\274\"d\n\030Sheet_MountEquiptopvalue\022H\n\031E_Mou"
    "ntEquiptopvalue_List\030\001 \003(\0132\036.proto_ff.E_"
    "MountEquiptopvalueB\005\210\301\024\200\001\"\274\001\n\020E_MountEqu"
    "ippart\022\032\n\006m_part\030\001 \001(\005B\n\302\377\024\006\351\203\250\344\275\215\022#\n\tm_"
    "quality\030\002 \001(\005B\020\302\377\024\014\345\214\226\351\262\262\345\223\201\350\264\250\022*\n\nm_hon"
    "eopen\030\003 \001(\005B\026\302\377\024\022\351\203\250\344\275\215\350\247\243\351\224\201\347\261\273\345\236\213\022 \n\006m"
    "_item\030\004 \001(\005B\020\302\377\024\014\346\211\200\351\234\200\347\211\251\345\223\201\022\031\n\005m_num\030\005"
    " \001(\005B\n\302\377\024\006\346\225\260\351\207\217\"W\n\024Sheet_MountEquippart"
    "\022\?\n\025E_MountEquippart_List\030\001 \003(\0132\032.proto_"
    "ff.E_MountEquippartB\004\210\301\024\020\"\261\001\n\035E_MountEmp"
    "owermenttour_debris\022#\n\rm_fairylandid\030\001 \001"
    "(\005B\014\302\377\024\010\344\273\231\345\242\203id\0220\n\021m_fairylandnextid\030\002 "
    "\001(\005B\025\302\377\024\021\344\270\213\344\270\200\344\270\252\344\273\231\345\242\203id\0229\n\017m_fairylan"
    "dskin\030\003 \001(\tB \302\377\024\030\344\273\231\345\242\203\350\216\267\345\217\226\347\232\256\350\202\244\351\242\204\350\247"
    "\210\220\301\024@\"~\n!Sheet_MountEmpowermenttour_debr"
    "is\022Y\n\"E_MountEmpowermenttour_debris_List"
    "\030\001 \003(\0132\'.proto_ff.E_MountEmpowermenttour"
    "_debrisB\004\210\301\024\020\"U\n\032E_MountEmpowermentTourD"
    "esc\022\033\n\007m_value\030\001 \001(\005B\n\302\377\024\006\346\225\260\345\200\274\022\032\n\006m_ty"
    "pe\030\002 \001(\005B\n\302\377\024\006\347\261\273\345\236\213\"\362\001\n\022E_MountEmpowerm"
    "ent\022\036\n\010m_tourid\030\001 \001(\005B\014\302\377\024\010\346\270\270\350\256\260id\022#\n\rm"
    "_fairylandid\030\002 \001(\005B\014\302\377\024\010\344\273\231\345\242\203id\022 \n\nm_to"
    "uritem\030\003 \001(\005B\014\302\377\024\010\347\242\216\347\211\207id\022)\n\014m_tourdebr"
    "is\030\004 \001(\005B\023\302\377\024\017\346\270\270\350\256\260\346\200\273\347\242\216\347\211\207\022J\n\006m_tour\030"
    "\005 \003(\0132$.proto_ff.E_MountEmpowermentTourD"
    "escB\024\302\377\024\014\346\270\270\350\256\260\345\261\236\346\200\247\210\301\024\002\"^\n\026Sheet_Mount"
    "Empowerment\022D\n\027E_MountEmpowerment_List\030\001"
    " \003(\0132\034.proto_ff.E_MountEmpowermentB\005\210\301\024\200"
    "\001\"\231\001\n\033E_MountEmpowerment_position\022+\n\021m_e"
    "mpowermentslot\030\001 \001(\005B\020\302\377\024\014\345\216\206\347\273\203\346\247\275\344\275\215\022&"
    "\n\014m_unlocktime\030\002 \001(\005B\020\302\377\024\014\350\247\243\351\224\201\346\235\241\344\273\266\022%"
    "\n\013m_unlocknum\030\003 \001(\005B\020\302\377\024\014\350\247\243\351\224\201\346\225\260\351\207\217\"x\n"
    "\037Sheet_MountEmpowerment_position\022U\n E_Mo"
    "untEmpowerment_position_List\030\001 \003(\0132%.pro"
    "to_ff.E_MountEmpowerment_positionB\004\210\301\024\010\""
    "\366\002\n\027E_MountEmpowerment_slot\022\024\n\004m_id\030\001 \001("
    "\005B\006\302\377\024\002id\022+\n\021m_dissociatelevel\030\002 \001(\005B\020\302\377"
    "\024\014\346\270\270\345\216\206\347\272\247\345\210\253\022*\n\020m_dissociatetime\030\003 \001(\005"
    "B\020\302\377\024\014\346\227\266\351\227\264\346\241\243\344\275\215\022$\n\020m_dissociatehour\030\004"
    " \001(\005B\n\302\377\024\006\346\227\266\351\225\277\0220\n\020m_dissociateitem\030\005 \001"
    "(\005B\026\302\377\024\022\346\270\270\347\246\273\347\272\247\345\210\253\346\266\210\350\200\227\022)\n\017m_dissocia"
    "tenum\030\006 \001(\005B\020\302\377\024\014\346\266\210\350\200\227\346\225\260\351\207\217\022;\n\013m_event"
    "time\030\007 \001(\tB&\302\377\024\036\346\222\255\346\224\276\344\272\213\344\273\266\346\227\266\351\227\264\351\227\264\351\232\224"
    "\350\214\203\345\233\264\220\301\024@\022,\n\017m_dissociatebox\030\010 \001(\005B\023\302\377\024"
    "\017\346\234\215\345\212\241\345\231\250\345\245\226\345\212\261\"l\n\033Sheet_MountEmpowerme"
    "nt_slot\022M\n\034E_MountEmpowerment_slot_List\030"
    "\001 \003(\0132!.proto_ff.E_MountEmpowerment_slot"
    "B\004\210\301\024\020\"o\n\030E_MountEmpowerment_event\022\024\n\004m_"
    "id\030\001 \001(\005B\006\302\377\024\002id\022\037\n\013m_eventtype\030\002 \001(\005B\n\302"
    "\377\024\006\347\261\273\345\236\213\022\034\n\010m_weight\030\003 \001(\005B\n\302\377\024\006\346\235\203\351\207\215\""
    "o\n\034Sheet_MountEmpowerment_event\022O\n\035E_Mou"
    "ntEmpowerment_event_List\030\001 \003(\0132\".proto_f"
    "f.E_MountEmpowerment_eventB\004\210\301\024\020", 12032);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "E_Mount.proto", &protobuf_RegisterTypes);
  E_MountFragmentAttributeDesc::default_instance_ = new E_MountFragmentAttributeDesc();
  E_MountFragment::default_instance_ = new E_MountFragment();
  Sheet_MountFragment::default_instance_ = new Sheet_MountFragment();
  E_MountValueAttributeDesc::default_instance_ = new E_MountValueAttributeDesc();
  E_MountValue::default_instance_ = new E_MountValue();
  Sheet_MountValue::default_instance_ = new Sheet_MountValue();
  E_MountDisplayMaterialDesc::default_instance_ = new E_MountDisplayMaterialDesc();
  E_MountDisplay::default_instance_ = new E_MountDisplay();
  Sheet_MountDisplay::default_instance_ = new Sheet_MountDisplay();
  E_MountUnlock::default_instance_ = new E_MountUnlock();
  Sheet_MountUnlock::default_instance_ = new Sheet_MountUnlock();
  E_MountChangeMaterialDesc::default_instance_ = new E_MountChangeMaterialDesc();
  E_MountChangeAttributeDesc::default_instance_ = new E_MountChangeAttributeDesc();
  E_MountChange::default_instance_ = new E_MountChange();
  Sheet_MountChange::default_instance_ = new Sheet_MountChange();
  E_MountAdvanceUpattributeDesc::default_instance_ = new E_MountAdvanceUpattributeDesc();
  E_MountAdvance::default_instance_ = new E_MountAdvance();
  Sheet_MountAdvance::default_instance_ = new Sheet_MountAdvance();
  E_MountBaby_egg::default_instance_ = new E_MountBaby_egg();
  Sheet_MountBaby_egg::default_instance_ = new Sheet_MountBaby_egg();
  E_MountHuakunUplvDesc::default_instance_ = new E_MountHuakunUplvDesc();
  E_MountHuakunMaterialDesc::default_instance_ = new E_MountHuakunMaterialDesc();
  E_MountHuakunAdvanceDesc::default_instance_ = new E_MountHuakunAdvanceDesc();
  E_MountHuakunAttributeDesc::default_instance_ = new E_MountHuakunAttributeDesc();
  E_MountHuakun::default_instance_ = new E_MountHuakun();
  Sheet_MountHuakun::default_instance_ = new Sheet_MountHuakun();
  E_MountHuakun_valueAttributeDesc::default_instance_ = new E_MountHuakun_valueAttributeDesc();
  E_MountHuakun_value::default_instance_ = new E_MountHuakun_value();
  Sheet_MountHuakun_value::default_instance_ = new Sheet_MountHuakun_value();
  E_MountHuakun_advancevalueItemDesc::default_instance_ = new E_MountHuakun_advancevalueItemDesc();
  E_MountHuakun_advancevalue::default_instance_ = new E_MountHuakun_advancevalue();
  Sheet_MountHuakun_advancevalue::default_instance_ = new Sheet_MountHuakun_advancevalue();
  E_MountHuakun_changeAttributeDesc::default_instance_ = new E_MountHuakun_changeAttributeDesc();
  E_MountHuakun_change::default_instance_ = new E_MountHuakun_change();
  Sheet_MountHuakun_change::default_instance_ = new Sheet_MountHuakun_change();
  E_MountHuakun_advanceUpattributeDesc::default_instance_ = new E_MountHuakun_advanceUpattributeDesc();
  E_MountHuakun_advance::default_instance_ = new E_MountHuakun_advance();
  Sheet_MountHuakun_advance::default_instance_ = new Sheet_MountHuakun_advance();
  E_MountBloodAttributeDesc::default_instance_ = new E_MountBloodAttributeDesc();
  E_MountBlood::default_instance_ = new E_MountBlood();
  Sheet_MountBlood::default_instance_ = new Sheet_MountBlood();
  E_MountHuakun_equip::default_instance_ = new E_MountHuakun_equip();
  Sheet_MountHuakun_equip::default_instance_ = new Sheet_MountHuakun_equip();
  E_MountEquip_valueAttributeDesc::default_instance_ = new E_MountEquip_valueAttributeDesc();
  E_MountEquip_value::default_instance_ = new E_MountEquip_value();
  Sheet_MountEquip_value::default_instance_ = new Sheet_MountEquip_value();
  E_MountEquipsuitAttributeDesc::default_instance_ = new E_MountEquipsuitAttributeDesc();
  E_MountEquipsuit::default_instance_ = new E_MountEquipsuit();
  Sheet_MountEquipsuit::default_instance_ = new Sheet_MountEquipsuit();
  E_MountEquiptopTopDesc::default_instance_ = new E_MountEquiptopTopDesc();
  E_MountEquiptopPercentDesc::default_instance_ = new E_MountEquiptopPercentDesc();
  E_MountEquiptop::default_instance_ = new E_MountEquiptop();
  Sheet_MountEquiptop::default_instance_ = new Sheet_MountEquiptop();
  E_MountEquiptopvalue::default_instance_ = new E_MountEquiptopvalue();
  Sheet_MountEquiptopvalue::default_instance_ = new Sheet_MountEquiptopvalue();
  E_MountEquippart::default_instance_ = new E_MountEquippart();
  Sheet_MountEquippart::default_instance_ = new Sheet_MountEquippart();
  E_MountEmpowermenttour_debris::default_instance_ = new E_MountEmpowermenttour_debris();
  Sheet_MountEmpowermenttour_debris::default_instance_ = new Sheet_MountEmpowermenttour_debris();
  E_MountEmpowermentTourDesc::default_instance_ = new E_MountEmpowermentTourDesc();
  E_MountEmpowerment::default_instance_ = new E_MountEmpowerment();
  Sheet_MountEmpowerment::default_instance_ = new Sheet_MountEmpowerment();
  E_MountEmpowerment_position::default_instance_ = new E_MountEmpowerment_position();
  Sheet_MountEmpowerment_position::default_instance_ = new Sheet_MountEmpowerment_position();
  E_MountEmpowerment_slot::default_instance_ = new E_MountEmpowerment_slot();
  Sheet_MountEmpowerment_slot::default_instance_ = new Sheet_MountEmpowerment_slot();
  E_MountEmpowerment_event::default_instance_ = new E_MountEmpowerment_event();
  Sheet_MountEmpowerment_event::default_instance_ = new Sheet_MountEmpowerment_event();
  E_MountFragmentAttributeDesc::default_instance_->InitAsDefaultInstance();
  E_MountFragment::default_instance_->InitAsDefaultInstance();
  Sheet_MountFragment::default_instance_->InitAsDefaultInstance();
  E_MountValueAttributeDesc::default_instance_->InitAsDefaultInstance();
  E_MountValue::default_instance_->InitAsDefaultInstance();
  Sheet_MountValue::default_instance_->InitAsDefaultInstance();
  E_MountDisplayMaterialDesc::default_instance_->InitAsDefaultInstance();
  E_MountDisplay::default_instance_->InitAsDefaultInstance();
  Sheet_MountDisplay::default_instance_->InitAsDefaultInstance();
  E_MountUnlock::default_instance_->InitAsDefaultInstance();
  Sheet_MountUnlock::default_instance_->InitAsDefaultInstance();
  E_MountChangeMaterialDesc::default_instance_->InitAsDefaultInstance();
  E_MountChangeAttributeDesc::default_instance_->InitAsDefaultInstance();
  E_MountChange::default_instance_->InitAsDefaultInstance();
  Sheet_MountChange::default_instance_->InitAsDefaultInstance();
  E_MountAdvanceUpattributeDesc::default_instance_->InitAsDefaultInstance();
  E_MountAdvance::default_instance_->InitAsDefaultInstance();
  Sheet_MountAdvance::default_instance_->InitAsDefaultInstance();
  E_MountBaby_egg::default_instance_->InitAsDefaultInstance();
  Sheet_MountBaby_egg::default_instance_->InitAsDefaultInstance();
  E_MountHuakunUplvDesc::default_instance_->InitAsDefaultInstance();
  E_MountHuakunMaterialDesc::default_instance_->InitAsDefaultInstance();
  E_MountHuakunAdvanceDesc::default_instance_->InitAsDefaultInstance();
  E_MountHuakunAttributeDesc::default_instance_->InitAsDefaultInstance();
  E_MountHuakun::default_instance_->InitAsDefaultInstance();
  Sheet_MountHuakun::default_instance_->InitAsDefaultInstance();
  E_MountHuakun_valueAttributeDesc::default_instance_->InitAsDefaultInstance();
  E_MountHuakun_value::default_instance_->InitAsDefaultInstance();
  Sheet_MountHuakun_value::default_instance_->InitAsDefaultInstance();
  E_MountHuakun_advancevalueItemDesc::default_instance_->InitAsDefaultInstance();
  E_MountHuakun_advancevalue::default_instance_->InitAsDefaultInstance();
  Sheet_MountHuakun_advancevalue::default_instance_->InitAsDefaultInstance();
  E_MountHuakun_changeAttributeDesc::default_instance_->InitAsDefaultInstance();
  E_MountHuakun_change::default_instance_->InitAsDefaultInstance();
  Sheet_MountHuakun_change::default_instance_->InitAsDefaultInstance();
  E_MountHuakun_advanceUpattributeDesc::default_instance_->InitAsDefaultInstance();
  E_MountHuakun_advance::default_instance_->InitAsDefaultInstance();
  Sheet_MountHuakun_advance::default_instance_->InitAsDefaultInstance();
  E_MountBloodAttributeDesc::default_instance_->InitAsDefaultInstance();
  E_MountBlood::default_instance_->InitAsDefaultInstance();
  Sheet_MountBlood::default_instance_->InitAsDefaultInstance();
  E_MountHuakun_equip::default_instance_->InitAsDefaultInstance();
  Sheet_MountHuakun_equip::default_instance_->InitAsDefaultInstance();
  E_MountEquip_valueAttributeDesc::default_instance_->InitAsDefaultInstance();
  E_MountEquip_value::default_instance_->InitAsDefaultInstance();
  Sheet_MountEquip_value::default_instance_->InitAsDefaultInstance();
  E_MountEquipsuitAttributeDesc::default_instance_->InitAsDefaultInstance();
  E_MountEquipsuit::default_instance_->InitAsDefaultInstance();
  Sheet_MountEquipsuit::default_instance_->InitAsDefaultInstance();
  E_MountEquiptopTopDesc::default_instance_->InitAsDefaultInstance();
  E_MountEquiptopPercentDesc::default_instance_->InitAsDefaultInstance();
  E_MountEquiptop::default_instance_->InitAsDefaultInstance();
  Sheet_MountEquiptop::default_instance_->InitAsDefaultInstance();
  E_MountEquiptopvalue::default_instance_->InitAsDefaultInstance();
  Sheet_MountEquiptopvalue::default_instance_->InitAsDefaultInstance();
  E_MountEquippart::default_instance_->InitAsDefaultInstance();
  Sheet_MountEquippart::default_instance_->InitAsDefaultInstance();
  E_MountEmpowermenttour_debris::default_instance_->InitAsDefaultInstance();
  Sheet_MountEmpowermenttour_debris::default_instance_->InitAsDefaultInstance();
  E_MountEmpowermentTourDesc::default_instance_->InitAsDefaultInstance();
  E_MountEmpowerment::default_instance_->InitAsDefaultInstance();
  Sheet_MountEmpowerment::default_instance_->InitAsDefaultInstance();
  E_MountEmpowerment_position::default_instance_->InitAsDefaultInstance();
  Sheet_MountEmpowerment_position::default_instance_->InitAsDefaultInstance();
  E_MountEmpowerment_slot::default_instance_->InitAsDefaultInstance();
  Sheet_MountEmpowerment_slot::default_instance_->InitAsDefaultInstance();
  E_MountEmpowerment_event::default_instance_->InitAsDefaultInstance();
  Sheet_MountEmpowerment_event::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_E_5fMount_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_E_5fMount_2eproto {
  StaticDescriptorInitializer_E_5fMount_2eproto() {
    protobuf_AddDesc_E_5fMount_2eproto();
  }
} static_descriptor_initializer_E_5fMount_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int E_MountFragmentAttributeDesc::kMValueFieldNumber;
const int E_MountFragmentAttributeDesc::kMTypeFieldNumber;
#endif  // !_MSC_VER

E_MountFragmentAttributeDesc::E_MountFragmentAttributeDesc()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_MountFragmentAttributeDesc::InitAsDefaultInstance() {
}

E_MountFragmentAttributeDesc::E_MountFragmentAttributeDesc(const E_MountFragmentAttributeDesc& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_MountFragmentAttributeDesc::SharedCtor() {
  _cached_size_ = 0;
  m_value_ = 0;
  m_type_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_MountFragmentAttributeDesc::~E_MountFragmentAttributeDesc() {
  SharedDtor();
}

void E_MountFragmentAttributeDesc::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_MountFragmentAttributeDesc::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_MountFragmentAttributeDesc::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_MountFragmentAttributeDesc_descriptor_;
}

const E_MountFragmentAttributeDesc& E_MountFragmentAttributeDesc::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fMount_2eproto();
  return *default_instance_;
}

E_MountFragmentAttributeDesc* E_MountFragmentAttributeDesc::default_instance_ = NULL;

E_MountFragmentAttributeDesc* E_MountFragmentAttributeDesc::New() const {
  return new E_MountFragmentAttributeDesc;
}

void E_MountFragmentAttributeDesc::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_value_ = 0;
    m_type_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_MountFragmentAttributeDesc::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_value = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_value_)));
          set_has_m_value();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_type;
        break;
      }

      // optional int32 m_type = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_type_)));
          set_has_m_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_MountFragmentAttributeDesc::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_value = 1;
  if (has_m_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_value(), output);
  }

  // optional int32 m_type = 2;
  if (has_m_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_type(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_MountFragmentAttributeDesc::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_value = 1;
  if (has_m_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_value(), target);
  }

  // optional int32 m_type = 2;
  if (has_m_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_type(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_MountFragmentAttributeDesc::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_value = 1;
    if (has_m_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_value());
    }

    // optional int32 m_type = 2;
    if (has_m_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_type());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_MountFragmentAttributeDesc::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_MountFragmentAttributeDesc* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_MountFragmentAttributeDesc*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_MountFragmentAttributeDesc::MergeFrom(const E_MountFragmentAttributeDesc& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_value()) {
      set_m_value(from.m_value());
    }
    if (from.has_m_type()) {
      set_m_type(from.m_type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_MountFragmentAttributeDesc::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_MountFragmentAttributeDesc::CopyFrom(const E_MountFragmentAttributeDesc& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_MountFragmentAttributeDesc::IsInitialized() const {

  return true;
}

void E_MountFragmentAttributeDesc::Swap(E_MountFragmentAttributeDesc* other) {
  if (other != this) {
    std::swap(m_value_, other->m_value_);
    std::swap(m_type_, other->m_type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_MountFragmentAttributeDesc::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_MountFragmentAttributeDesc_descriptor_;
  metadata.reflection = E_MountFragmentAttributeDesc_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_MountFragment::kMFragmentidFieldNumber;
const int E_MountFragment::kMItemFieldNumber;
const int E_MountFragment::kMItemnumFieldNumber;
const int E_MountFragment::kMAttributeFieldNumber;
#endif  // !_MSC_VER

E_MountFragment::E_MountFragment()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_MountFragment::InitAsDefaultInstance() {
}

E_MountFragment::E_MountFragment(const E_MountFragment& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_MountFragment::SharedCtor() {
  _cached_size_ = 0;
  m_fragmentid_ = GOOGLE_LONGLONG(0);
  m_item_ = GOOGLE_LONGLONG(0);
  m_itemnum_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_MountFragment::~E_MountFragment() {
  SharedDtor();
}

void E_MountFragment::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_MountFragment::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_MountFragment::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_MountFragment_descriptor_;
}

const E_MountFragment& E_MountFragment::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fMount_2eproto();
  return *default_instance_;
}

E_MountFragment* E_MountFragment::default_instance_ = NULL;

E_MountFragment* E_MountFragment::New() const {
  return new E_MountFragment;
}

void E_MountFragment::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_fragmentid_ = GOOGLE_LONGLONG(0);
    m_item_ = GOOGLE_LONGLONG(0);
    m_itemnum_ = 0;
  }
  m_attribute_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_MountFragment::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 m_fragmentid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &m_fragmentid_)));
          set_has_m_fragmentid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_item;
        break;
      }

      // optional int64 m_item = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_item:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &m_item_)));
          set_has_m_item();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_m_itemnum;
        break;
      }

      // optional int32 m_itemnum = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_itemnum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_itemnum_)));
          set_has_m_itemnum();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_m_attribute;
        break;
      }

      // repeated .proto_ff.E_MountFragmentAttributeDesc m_attribute = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_attribute:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_m_attribute()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_m_attribute;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_MountFragment::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 m_fragmentid = 1;
  if (has_m_fragmentid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->m_fragmentid(), output);
  }

  // optional int64 m_item = 2;
  if (has_m_item()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->m_item(), output);
  }

  // optional int32 m_itemnum = 3;
  if (has_m_itemnum()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->m_itemnum(), output);
  }

  // repeated .proto_ff.E_MountFragmentAttributeDesc m_attribute = 4;
  for (int i = 0; i < this->m_attribute_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->m_attribute(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_MountFragment::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 m_fragmentid = 1;
  if (has_m_fragmentid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->m_fragmentid(), target);
  }

  // optional int64 m_item = 2;
  if (has_m_item()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->m_item(), target);
  }

  // optional int32 m_itemnum = 3;
  if (has_m_itemnum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->m_itemnum(), target);
  }

  // repeated .proto_ff.E_MountFragmentAttributeDesc m_attribute = 4;
  for (int i = 0; i < this->m_attribute_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->m_attribute(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_MountFragment::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 m_fragmentid = 1;
    if (has_m_fragmentid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->m_fragmentid());
    }

    // optional int64 m_item = 2;
    if (has_m_item()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->m_item());
    }

    // optional int32 m_itemnum = 3;
    if (has_m_itemnum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_itemnum());
    }

  }
  // repeated .proto_ff.E_MountFragmentAttributeDesc m_attribute = 4;
  total_size += 1 * this->m_attribute_size();
  for (int i = 0; i < this->m_attribute_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->m_attribute(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_MountFragment::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_MountFragment* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_MountFragment*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_MountFragment::MergeFrom(const E_MountFragment& from) {
  GOOGLE_CHECK_NE(&from, this);
  m_attribute_.MergeFrom(from.m_attribute_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_fragmentid()) {
      set_m_fragmentid(from.m_fragmentid());
    }
    if (from.has_m_item()) {
      set_m_item(from.m_item());
    }
    if (from.has_m_itemnum()) {
      set_m_itemnum(from.m_itemnum());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_MountFragment::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_MountFragment::CopyFrom(const E_MountFragment& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_MountFragment::IsInitialized() const {

  return true;
}

void E_MountFragment::Swap(E_MountFragment* other) {
  if (other != this) {
    std::swap(m_fragmentid_, other->m_fragmentid_);
    std::swap(m_item_, other->m_item_);
    std::swap(m_itemnum_, other->m_itemnum_);
    m_attribute_.Swap(&other->m_attribute_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_MountFragment::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_MountFragment_descriptor_;
  metadata.reflection = E_MountFragment_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_MountFragment::kEMountFragmentListFieldNumber;
#endif  // !_MSC_VER

Sheet_MountFragment::Sheet_MountFragment()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_MountFragment::InitAsDefaultInstance() {
}

Sheet_MountFragment::Sheet_MountFragment(const Sheet_MountFragment& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_MountFragment::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_MountFragment::~Sheet_MountFragment() {
  SharedDtor();
}

void Sheet_MountFragment::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_MountFragment::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_MountFragment::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_MountFragment_descriptor_;
}

const Sheet_MountFragment& Sheet_MountFragment::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fMount_2eproto();
  return *default_instance_;
}

Sheet_MountFragment* Sheet_MountFragment::default_instance_ = NULL;

Sheet_MountFragment* Sheet_MountFragment::New() const {
  return new Sheet_MountFragment;
}

void Sheet_MountFragment::Clear() {
  e_mountfragment_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_MountFragment::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.E_MountFragment E_MountFragment_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_E_MountFragment_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_e_mountfragment_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_E_MountFragment_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_MountFragment::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.E_MountFragment E_MountFragment_List = 1;
  for (int i = 0; i < this->e_mountfragment_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->e_mountfragment_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_MountFragment::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.E_MountFragment E_MountFragment_List = 1;
  for (int i = 0; i < this->e_mountfragment_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->e_mountfragment_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_MountFragment::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.E_MountFragment E_MountFragment_List = 1;
  total_size += 1 * this->e_mountfragment_list_size();
  for (int i = 0; i < this->e_mountfragment_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->e_mountfragment_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_MountFragment::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_MountFragment* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_MountFragment*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_MountFragment::MergeFrom(const Sheet_MountFragment& from) {
  GOOGLE_CHECK_NE(&from, this);
  e_mountfragment_list_.MergeFrom(from.e_mountfragment_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_MountFragment::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_MountFragment::CopyFrom(const Sheet_MountFragment& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_MountFragment::IsInitialized() const {

  return true;
}

void Sheet_MountFragment::Swap(Sheet_MountFragment* other) {
  if (other != this) {
    e_mountfragment_list_.Swap(&other->e_mountfragment_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_MountFragment::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_MountFragment_descriptor_;
  metadata.reflection = Sheet_MountFragment_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_MountValueAttributeDesc::kMValueFieldNumber;
const int E_MountValueAttributeDesc::kMTypeFieldNumber;
#endif  // !_MSC_VER

E_MountValueAttributeDesc::E_MountValueAttributeDesc()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_MountValueAttributeDesc::InitAsDefaultInstance() {
}

E_MountValueAttributeDesc::E_MountValueAttributeDesc(const E_MountValueAttributeDesc& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_MountValueAttributeDesc::SharedCtor() {
  _cached_size_ = 0;
  m_value_ = 0;
  m_type_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_MountValueAttributeDesc::~E_MountValueAttributeDesc() {
  SharedDtor();
}

void E_MountValueAttributeDesc::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_MountValueAttributeDesc::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_MountValueAttributeDesc::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_MountValueAttributeDesc_descriptor_;
}

const E_MountValueAttributeDesc& E_MountValueAttributeDesc::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fMount_2eproto();
  return *default_instance_;
}

E_MountValueAttributeDesc* E_MountValueAttributeDesc::default_instance_ = NULL;

E_MountValueAttributeDesc* E_MountValueAttributeDesc::New() const {
  return new E_MountValueAttributeDesc;
}

void E_MountValueAttributeDesc::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_value_ = 0;
    m_type_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_MountValueAttributeDesc::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_value = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_value_)));
          set_has_m_value();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_type;
        break;
      }

      // optional int32 m_type = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_type_)));
          set_has_m_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_MountValueAttributeDesc::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_value = 1;
  if (has_m_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_value(), output);
  }

  // optional int32 m_type = 2;
  if (has_m_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_type(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_MountValueAttributeDesc::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_value = 1;
  if (has_m_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_value(), target);
  }

  // optional int32 m_type = 2;
  if (has_m_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_type(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_MountValueAttributeDesc::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_value = 1;
    if (has_m_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_value());
    }

    // optional int32 m_type = 2;
    if (has_m_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_type());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_MountValueAttributeDesc::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_MountValueAttributeDesc* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_MountValueAttributeDesc*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_MountValueAttributeDesc::MergeFrom(const E_MountValueAttributeDesc& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_value()) {
      set_m_value(from.m_value());
    }
    if (from.has_m_type()) {
      set_m_type(from.m_type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_MountValueAttributeDesc::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_MountValueAttributeDesc::CopyFrom(const E_MountValueAttributeDesc& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_MountValueAttributeDesc::IsInitialized() const {

  return true;
}

void E_MountValueAttributeDesc::Swap(E_MountValueAttributeDesc* other) {
  if (other != this) {
    std::swap(m_value_, other->m_value_);
    std::swap(m_type_, other->m_type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_MountValueAttributeDesc::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_MountValueAttributeDesc_descriptor_;
  metadata.reflection = E_MountValueAttributeDesc_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_MountValue::kMIdFieldNumber;
const int E_MountValue::kMTypeFieldNumber;
const int E_MountValue::kMLvFieldNumber;
const int E_MountValue::kMExpFieldNumber;
const int E_MountValue::kMSpeedFieldNumber;
const int E_MountValue::kMAttributeFieldNumber;
#endif  // !_MSC_VER

E_MountValue::E_MountValue()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_MountValue::InitAsDefaultInstance() {
}

E_MountValue::E_MountValue(const E_MountValue& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_MountValue::SharedCtor() {
  _cached_size_ = 0;
  m_id_ = 0;
  m_type_ = 0;
  m_lv_ = 0;
  m_exp_ = 0;
  m_speed_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_MountValue::~E_MountValue() {
  SharedDtor();
}

void E_MountValue::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_MountValue::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_MountValue::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_MountValue_descriptor_;
}

const E_MountValue& E_MountValue::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fMount_2eproto();
  return *default_instance_;
}

E_MountValue* E_MountValue::default_instance_ = NULL;

E_MountValue* E_MountValue::New() const {
  return new E_MountValue;
}

void E_MountValue::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_id_ = 0;
    m_type_ = 0;
    m_lv_ = 0;
    m_exp_ = 0;
    m_speed_ = 0;
  }
  m_attribute_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_MountValue::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_id_)));
          set_has_m_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_type;
        break;
      }

      // optional int32 m_type = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_type_)));
          set_has_m_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_m_lv;
        break;
      }

      // optional int32 m_lv = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_lv:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_lv_)));
          set_has_m_lv();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_m_exp;
        break;
      }

      // optional int32 m_exp = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_exp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_exp_)));
          set_has_m_exp();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_m_speed;
        break;
      }

      // optional int32 m_speed = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_speed:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_speed_)));
          set_has_m_speed();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_m_attribute;
        break;
      }

      // repeated .proto_ff.E_MountValueAttributeDesc m_attribute = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_attribute:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_m_attribute()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_m_attribute;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_MountValue::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_id(), output);
  }

  // optional int32 m_type = 2;
  if (has_m_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_type(), output);
  }

  // optional int32 m_lv = 3;
  if (has_m_lv()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->m_lv(), output);
  }

  // optional int32 m_exp = 4;
  if (has_m_exp()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->m_exp(), output);
  }

  // optional int32 m_speed = 5;
  if (has_m_speed()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->m_speed(), output);
  }

  // repeated .proto_ff.E_MountValueAttributeDesc m_attribute = 6;
  for (int i = 0; i < this->m_attribute_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->m_attribute(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_MountValue::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_id(), target);
  }

  // optional int32 m_type = 2;
  if (has_m_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_type(), target);
  }

  // optional int32 m_lv = 3;
  if (has_m_lv()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->m_lv(), target);
  }

  // optional int32 m_exp = 4;
  if (has_m_exp()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->m_exp(), target);
  }

  // optional int32 m_speed = 5;
  if (has_m_speed()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->m_speed(), target);
  }

  // repeated .proto_ff.E_MountValueAttributeDesc m_attribute = 6;
  for (int i = 0; i < this->m_attribute_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        6, this->m_attribute(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_MountValue::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_id = 1;
    if (has_m_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_id());
    }

    // optional int32 m_type = 2;
    if (has_m_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_type());
    }

    // optional int32 m_lv = 3;
    if (has_m_lv()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_lv());
    }

    // optional int32 m_exp = 4;
    if (has_m_exp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_exp());
    }

    // optional int32 m_speed = 5;
    if (has_m_speed()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_speed());
    }

  }
  // repeated .proto_ff.E_MountValueAttributeDesc m_attribute = 6;
  total_size += 1 * this->m_attribute_size();
  for (int i = 0; i < this->m_attribute_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->m_attribute(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_MountValue::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_MountValue* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_MountValue*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_MountValue::MergeFrom(const E_MountValue& from) {
  GOOGLE_CHECK_NE(&from, this);
  m_attribute_.MergeFrom(from.m_attribute_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_id()) {
      set_m_id(from.m_id());
    }
    if (from.has_m_type()) {
      set_m_type(from.m_type());
    }
    if (from.has_m_lv()) {
      set_m_lv(from.m_lv());
    }
    if (from.has_m_exp()) {
      set_m_exp(from.m_exp());
    }
    if (from.has_m_speed()) {
      set_m_speed(from.m_speed());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_MountValue::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_MountValue::CopyFrom(const E_MountValue& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_MountValue::IsInitialized() const {

  return true;
}

void E_MountValue::Swap(E_MountValue* other) {
  if (other != this) {
    std::swap(m_id_, other->m_id_);
    std::swap(m_type_, other->m_type_);
    std::swap(m_lv_, other->m_lv_);
    std::swap(m_exp_, other->m_exp_);
    std::swap(m_speed_, other->m_speed_);
    m_attribute_.Swap(&other->m_attribute_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_MountValue::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_MountValue_descriptor_;
  metadata.reflection = E_MountValue_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_MountValue::kEMountValueListFieldNumber;
#endif  // !_MSC_VER

Sheet_MountValue::Sheet_MountValue()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_MountValue::InitAsDefaultInstance() {
}

Sheet_MountValue::Sheet_MountValue(const Sheet_MountValue& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_MountValue::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_MountValue::~Sheet_MountValue() {
  SharedDtor();
}

void Sheet_MountValue::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_MountValue::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_MountValue::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_MountValue_descriptor_;
}

const Sheet_MountValue& Sheet_MountValue::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fMount_2eproto();
  return *default_instance_;
}

Sheet_MountValue* Sheet_MountValue::default_instance_ = NULL;

Sheet_MountValue* Sheet_MountValue::New() const {
  return new Sheet_MountValue;
}

void Sheet_MountValue::Clear() {
  e_mountvalue_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_MountValue::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.E_MountValue E_MountValue_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_E_MountValue_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_e_mountvalue_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_E_MountValue_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_MountValue::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.E_MountValue E_MountValue_List = 1;
  for (int i = 0; i < this->e_mountvalue_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->e_mountvalue_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_MountValue::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.E_MountValue E_MountValue_List = 1;
  for (int i = 0; i < this->e_mountvalue_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->e_mountvalue_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_MountValue::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.E_MountValue E_MountValue_List = 1;
  total_size += 1 * this->e_mountvalue_list_size();
  for (int i = 0; i < this->e_mountvalue_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->e_mountvalue_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_MountValue::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_MountValue* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_MountValue*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_MountValue::MergeFrom(const Sheet_MountValue& from) {
  GOOGLE_CHECK_NE(&from, this);
  e_mountvalue_list_.MergeFrom(from.e_mountvalue_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_MountValue::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_MountValue::CopyFrom(const Sheet_MountValue& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_MountValue::IsInitialized() const {

  return true;
}

void Sheet_MountValue::Swap(Sheet_MountValue* other) {
  if (other != this) {
    e_mountvalue_list_.Swap(&other->e_mountvalue_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_MountValue::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_MountValue_descriptor_;
  metadata.reflection = Sheet_MountValue_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_MountDisplayMaterialDesc::kMExpFieldNumber;
const int E_MountDisplayMaterialDesc::kMIdFieldNumber;
#endif  // !_MSC_VER

E_MountDisplayMaterialDesc::E_MountDisplayMaterialDesc()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_MountDisplayMaterialDesc::InitAsDefaultInstance() {
}

E_MountDisplayMaterialDesc::E_MountDisplayMaterialDesc(const E_MountDisplayMaterialDesc& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_MountDisplayMaterialDesc::SharedCtor() {
  _cached_size_ = 0;
  m_exp_ = 0;
  m_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_MountDisplayMaterialDesc::~E_MountDisplayMaterialDesc() {
  SharedDtor();
}

void E_MountDisplayMaterialDesc::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_MountDisplayMaterialDesc::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_MountDisplayMaterialDesc::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_MountDisplayMaterialDesc_descriptor_;
}

const E_MountDisplayMaterialDesc& E_MountDisplayMaterialDesc::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fMount_2eproto();
  return *default_instance_;
}

E_MountDisplayMaterialDesc* E_MountDisplayMaterialDesc::default_instance_ = NULL;

E_MountDisplayMaterialDesc* E_MountDisplayMaterialDesc::New() const {
  return new E_MountDisplayMaterialDesc;
}

void E_MountDisplayMaterialDesc::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_exp_ = 0;
    m_id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_MountDisplayMaterialDesc::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_exp = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_exp_)));
          set_has_m_exp();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_id;
        break;
      }

      // optional int32 m_id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_id_)));
          set_has_m_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_MountDisplayMaterialDesc::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_exp = 1;
  if (has_m_exp()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_exp(), output);
  }

  // optional int32 m_id = 2;
  if (has_m_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_MountDisplayMaterialDesc::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_exp = 1;
  if (has_m_exp()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_exp(), target);
  }

  // optional int32 m_id = 2;
  if (has_m_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_MountDisplayMaterialDesc::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_exp = 1;
    if (has_m_exp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_exp());
    }

    // optional int32 m_id = 2;
    if (has_m_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_id());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_MountDisplayMaterialDesc::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_MountDisplayMaterialDesc* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_MountDisplayMaterialDesc*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_MountDisplayMaterialDesc::MergeFrom(const E_MountDisplayMaterialDesc& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_exp()) {
      set_m_exp(from.m_exp());
    }
    if (from.has_m_id()) {
      set_m_id(from.m_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_MountDisplayMaterialDesc::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_MountDisplayMaterialDesc::CopyFrom(const E_MountDisplayMaterialDesc& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_MountDisplayMaterialDesc::IsInitialized() const {

  return true;
}

void E_MountDisplayMaterialDesc::Swap(E_MountDisplayMaterialDesc* other) {
  if (other != this) {
    std::swap(m_exp_, other->m_exp_);
    std::swap(m_id_, other->m_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_MountDisplayMaterialDesc::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_MountDisplayMaterialDesc_descriptor_;
  metadata.reflection = E_MountDisplayMaterialDesc_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_MountDisplay::kMIdFieldNumber;
const int E_MountDisplay::kMSpeedFieldNumber;
const int E_MountDisplay::kMUplvtypeFieldNumber;
const int E_MountDisplay::kMSkillidFieldNumber;
const int E_MountDisplay::kMFxidFieldNumber;
const int E_MountDisplay::kMStarupFieldNumber;
const int E_MountDisplay::kMLvmaxFieldNumber;
const int E_MountDisplay::kMMaterialFieldNumber;
const int E_MountDisplay::kMFragmentidFieldNumber;
#endif  // !_MSC_VER

E_MountDisplay::E_MountDisplay()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_MountDisplay::InitAsDefaultInstance() {
}

E_MountDisplay::E_MountDisplay(const E_MountDisplay& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_MountDisplay::SharedCtor() {
  _cached_size_ = 0;
  m_id_ = 0;
  m_speed_ = 0;
  m_uplvtype_ = 0;
  m_skillid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  m_fxid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  m_starup_ = 0;
  m_lvmax_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_MountDisplay::~E_MountDisplay() {
  SharedDtor();
}

void E_MountDisplay::SharedDtor() {
  if (m_skillid_ != &::google::protobuf::internal::kEmptyString) {
    delete m_skillid_;
  }
  if (m_fxid_ != &::google::protobuf::internal::kEmptyString) {
    delete m_fxid_;
  }
  if (this != default_instance_) {
  }
}

void E_MountDisplay::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_MountDisplay::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_MountDisplay_descriptor_;
}

const E_MountDisplay& E_MountDisplay::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fMount_2eproto();
  return *default_instance_;
}

E_MountDisplay* E_MountDisplay::default_instance_ = NULL;

E_MountDisplay* E_MountDisplay::New() const {
  return new E_MountDisplay;
}

void E_MountDisplay::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_id_ = 0;
    m_speed_ = 0;
    m_uplvtype_ = 0;
    if (has_m_skillid()) {
      if (m_skillid_ != &::google::protobuf::internal::kEmptyString) {
        m_skillid_->clear();
      }
    }
    if (has_m_fxid()) {
      if (m_fxid_ != &::google::protobuf::internal::kEmptyString) {
        m_fxid_->clear();
      }
    }
    m_starup_ = 0;
    m_lvmax_ = 0;
  }
  m_material_.Clear();
  m_fragmentid_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_MountDisplay::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_id_)));
          set_has_m_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_speed;
        break;
      }

      // optional int32 m_speed = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_speed:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_speed_)));
          set_has_m_speed();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_m_uplvtype;
        break;
      }

      // optional int32 m_uplvtype = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_uplvtype:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_uplvtype_)));
          set_has_m_uplvtype();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_m_skillid;
        break;
      }

      // optional string m_skillid = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_skillid:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_m_skillid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->m_skillid().data(), this->m_skillid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_m_fxid;
        break;
      }

      // optional string m_fxid = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_fxid:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_m_fxid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->m_fxid().data(), this->m_fxid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_m_starup;
        break;
      }

      // optional int32 m_starup = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_starup:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_starup_)));
          set_has_m_starup();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_m_lvmax;
        break;
      }

      // optional int32 m_lvmax = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_lvmax:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_lvmax_)));
          set_has_m_lvmax();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(66)) goto parse_m_material;
        break;
      }

      // repeated .proto_ff.E_MountDisplayMaterialDesc m_material = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_material:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_m_material()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(66)) goto parse_m_material;
        if (input->ExpectTag(72)) goto parse_m_fragmentid;
        break;
      }

      // repeated int64 m_fragmentid = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_fragmentid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 72, input, this->mutable_m_fragmentid())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_m_fragmentid())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(72)) goto parse_m_fragmentid;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_MountDisplay::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_id(), output);
  }

  // optional int32 m_speed = 2;
  if (has_m_speed()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_speed(), output);
  }

  // optional int32 m_uplvtype = 3;
  if (has_m_uplvtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->m_uplvtype(), output);
  }

  // optional string m_skillid = 4;
  if (has_m_skillid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_skillid().data(), this->m_skillid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->m_skillid(), output);
  }

  // optional string m_fxid = 5;
  if (has_m_fxid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_fxid().data(), this->m_fxid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->m_fxid(), output);
  }

  // optional int32 m_starup = 6;
  if (has_m_starup()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->m_starup(), output);
  }

  // optional int32 m_lvmax = 7;
  if (has_m_lvmax()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->m_lvmax(), output);
  }

  // repeated .proto_ff.E_MountDisplayMaterialDesc m_material = 8;
  for (int i = 0; i < this->m_material_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->m_material(i), output);
  }

  // repeated int64 m_fragmentid = 9;
  for (int i = 0; i < this->m_fragmentid_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(
      9, this->m_fragmentid(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_MountDisplay::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_id(), target);
  }

  // optional int32 m_speed = 2;
  if (has_m_speed()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_speed(), target);
  }

  // optional int32 m_uplvtype = 3;
  if (has_m_uplvtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->m_uplvtype(), target);
  }

  // optional string m_skillid = 4;
  if (has_m_skillid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_skillid().data(), this->m_skillid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->m_skillid(), target);
  }

  // optional string m_fxid = 5;
  if (has_m_fxid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_fxid().data(), this->m_fxid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->m_fxid(), target);
  }

  // optional int32 m_starup = 6;
  if (has_m_starup()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->m_starup(), target);
  }

  // optional int32 m_lvmax = 7;
  if (has_m_lvmax()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->m_lvmax(), target);
  }

  // repeated .proto_ff.E_MountDisplayMaterialDesc m_material = 8;
  for (int i = 0; i < this->m_material_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        8, this->m_material(i), target);
  }

  // repeated int64 m_fragmentid = 9;
  for (int i = 0; i < this->m_fragmentid_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64ToArray(9, this->m_fragmentid(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_MountDisplay::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_id = 1;
    if (has_m_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_id());
    }

    // optional int32 m_speed = 2;
    if (has_m_speed()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_speed());
    }

    // optional int32 m_uplvtype = 3;
    if (has_m_uplvtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_uplvtype());
    }

    // optional string m_skillid = 4;
    if (has_m_skillid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->m_skillid());
    }

    // optional string m_fxid = 5;
    if (has_m_fxid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->m_fxid());
    }

    // optional int32 m_starup = 6;
    if (has_m_starup()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_starup());
    }

    // optional int32 m_lvmax = 7;
    if (has_m_lvmax()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_lvmax());
    }

  }
  // repeated .proto_ff.E_MountDisplayMaterialDesc m_material = 8;
  total_size += 1 * this->m_material_size();
  for (int i = 0; i < this->m_material_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->m_material(i));
  }

  // repeated int64 m_fragmentid = 9;
  {
    int data_size = 0;
    for (int i = 0; i < this->m_fragmentid_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int64Size(this->m_fragmentid(i));
    }
    total_size += 1 * this->m_fragmentid_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_MountDisplay::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_MountDisplay* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_MountDisplay*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_MountDisplay::MergeFrom(const E_MountDisplay& from) {
  GOOGLE_CHECK_NE(&from, this);
  m_material_.MergeFrom(from.m_material_);
  m_fragmentid_.MergeFrom(from.m_fragmentid_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_id()) {
      set_m_id(from.m_id());
    }
    if (from.has_m_speed()) {
      set_m_speed(from.m_speed());
    }
    if (from.has_m_uplvtype()) {
      set_m_uplvtype(from.m_uplvtype());
    }
    if (from.has_m_skillid()) {
      set_m_skillid(from.m_skillid());
    }
    if (from.has_m_fxid()) {
      set_m_fxid(from.m_fxid());
    }
    if (from.has_m_starup()) {
      set_m_starup(from.m_starup());
    }
    if (from.has_m_lvmax()) {
      set_m_lvmax(from.m_lvmax());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_MountDisplay::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_MountDisplay::CopyFrom(const E_MountDisplay& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_MountDisplay::IsInitialized() const {

  return true;
}

void E_MountDisplay::Swap(E_MountDisplay* other) {
  if (other != this) {
    std::swap(m_id_, other->m_id_);
    std::swap(m_speed_, other->m_speed_);
    std::swap(m_uplvtype_, other->m_uplvtype_);
    std::swap(m_skillid_, other->m_skillid_);
    std::swap(m_fxid_, other->m_fxid_);
    std::swap(m_starup_, other->m_starup_);
    std::swap(m_lvmax_, other->m_lvmax_);
    m_material_.Swap(&other->m_material_);
    m_fragmentid_.Swap(&other->m_fragmentid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_MountDisplay::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_MountDisplay_descriptor_;
  metadata.reflection = E_MountDisplay_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_MountDisplay::kEMountDisplayListFieldNumber;
#endif  // !_MSC_VER

Sheet_MountDisplay::Sheet_MountDisplay()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_MountDisplay::InitAsDefaultInstance() {
}

Sheet_MountDisplay::Sheet_MountDisplay(const Sheet_MountDisplay& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_MountDisplay::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_MountDisplay::~Sheet_MountDisplay() {
  SharedDtor();
}

void Sheet_MountDisplay::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_MountDisplay::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_MountDisplay::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_MountDisplay_descriptor_;
}

const Sheet_MountDisplay& Sheet_MountDisplay::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fMount_2eproto();
  return *default_instance_;
}

Sheet_MountDisplay* Sheet_MountDisplay::default_instance_ = NULL;

Sheet_MountDisplay* Sheet_MountDisplay::New() const {
  return new Sheet_MountDisplay;
}

void Sheet_MountDisplay::Clear() {
  e_mountdisplay_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_MountDisplay::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.E_MountDisplay E_MountDisplay_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_E_MountDisplay_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_e_mountdisplay_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_E_MountDisplay_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_MountDisplay::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.E_MountDisplay E_MountDisplay_List = 1;
  for (int i = 0; i < this->e_mountdisplay_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->e_mountdisplay_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_MountDisplay::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.E_MountDisplay E_MountDisplay_List = 1;
  for (int i = 0; i < this->e_mountdisplay_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->e_mountdisplay_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_MountDisplay::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.E_MountDisplay E_MountDisplay_List = 1;
  total_size += 1 * this->e_mountdisplay_list_size();
  for (int i = 0; i < this->e_mountdisplay_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->e_mountdisplay_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_MountDisplay::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_MountDisplay* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_MountDisplay*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_MountDisplay::MergeFrom(const Sheet_MountDisplay& from) {
  GOOGLE_CHECK_NE(&from, this);
  e_mountdisplay_list_.MergeFrom(from.e_mountdisplay_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_MountDisplay::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_MountDisplay::CopyFrom(const Sheet_MountDisplay& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_MountDisplay::IsInitialized() const {

  return true;
}

void Sheet_MountDisplay::Swap(Sheet_MountDisplay* other) {
  if (other != this) {
    e_mountdisplay_list_.Swap(&other->e_mountdisplay_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_MountDisplay::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_MountDisplay_descriptor_;
  metadata.reflection = Sheet_MountDisplay_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_MountUnlock::kMIdFieldNumber;
const int E_MountUnlock::kMLvFieldNumber;
const int E_MountUnlock::kMModelidFieldNumber;
const int E_MountUnlock::kMNameFieldNumber;
#endif  // !_MSC_VER

E_MountUnlock::E_MountUnlock()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_MountUnlock::InitAsDefaultInstance() {
}

E_MountUnlock::E_MountUnlock(const E_MountUnlock& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_MountUnlock::SharedCtor() {
  _cached_size_ = 0;
  m_id_ = 0;
  m_lv_ = 0;
  m_modelid_ = 0;
  m_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_MountUnlock::~E_MountUnlock() {
  SharedDtor();
}

void E_MountUnlock::SharedDtor() {
  if (m_name_ != &::google::protobuf::internal::kEmptyString) {
    delete m_name_;
  }
  if (this != default_instance_) {
  }
}

void E_MountUnlock::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_MountUnlock::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_MountUnlock_descriptor_;
}

const E_MountUnlock& E_MountUnlock::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fMount_2eproto();
  return *default_instance_;
}

E_MountUnlock* E_MountUnlock::default_instance_ = NULL;

E_MountUnlock* E_MountUnlock::New() const {
  return new E_MountUnlock;
}

void E_MountUnlock::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_id_ = 0;
    m_lv_ = 0;
    m_modelid_ = 0;
    if (has_m_name()) {
      if (m_name_ != &::google::protobuf::internal::kEmptyString) {
        m_name_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_MountUnlock::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_id_)));
          set_has_m_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_lv;
        break;
      }

      // optional int32 m_lv = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_lv:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_lv_)));
          set_has_m_lv();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_m_modelid;
        break;
      }

      // optional int32 m_modelid = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_modelid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_modelid_)));
          set_has_m_modelid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_m_name;
        break;
      }

      // optional string m_name = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_m_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->m_name().data(), this->m_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_MountUnlock::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_id(), output);
  }

  // optional int32 m_lv = 2;
  if (has_m_lv()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_lv(), output);
  }

  // optional int32 m_modelid = 3;
  if (has_m_modelid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->m_modelid(), output);
  }

  // optional string m_name = 4;
  if (has_m_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_name().data(), this->m_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->m_name(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_MountUnlock::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_id(), target);
  }

  // optional int32 m_lv = 2;
  if (has_m_lv()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_lv(), target);
  }

  // optional int32 m_modelid = 3;
  if (has_m_modelid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->m_modelid(), target);
  }

  // optional string m_name = 4;
  if (has_m_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_name().data(), this->m_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->m_name(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_MountUnlock::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_id = 1;
    if (has_m_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_id());
    }

    // optional int32 m_lv = 2;
    if (has_m_lv()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_lv());
    }

    // optional int32 m_modelid = 3;
    if (has_m_modelid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_modelid());
    }

    // optional string m_name = 4;
    if (has_m_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->m_name());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_MountUnlock::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_MountUnlock* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_MountUnlock*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_MountUnlock::MergeFrom(const E_MountUnlock& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_id()) {
      set_m_id(from.m_id());
    }
    if (from.has_m_lv()) {
      set_m_lv(from.m_lv());
    }
    if (from.has_m_modelid()) {
      set_m_modelid(from.m_modelid());
    }
    if (from.has_m_name()) {
      set_m_name(from.m_name());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_MountUnlock::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_MountUnlock::CopyFrom(const E_MountUnlock& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_MountUnlock::IsInitialized() const {

  return true;
}

void E_MountUnlock::Swap(E_MountUnlock* other) {
  if (other != this) {
    std::swap(m_id_, other->m_id_);
    std::swap(m_lv_, other->m_lv_);
    std::swap(m_modelid_, other->m_modelid_);
    std::swap(m_name_, other->m_name_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_MountUnlock::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_MountUnlock_descriptor_;
  metadata.reflection = E_MountUnlock_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_MountUnlock::kEMountUnlockListFieldNumber;
#endif  // !_MSC_VER

Sheet_MountUnlock::Sheet_MountUnlock()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_MountUnlock::InitAsDefaultInstance() {
}

Sheet_MountUnlock::Sheet_MountUnlock(const Sheet_MountUnlock& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_MountUnlock::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_MountUnlock::~Sheet_MountUnlock() {
  SharedDtor();
}

void Sheet_MountUnlock::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_MountUnlock::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_MountUnlock::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_MountUnlock_descriptor_;
}

const Sheet_MountUnlock& Sheet_MountUnlock::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fMount_2eproto();
  return *default_instance_;
}

Sheet_MountUnlock* Sheet_MountUnlock::default_instance_ = NULL;

Sheet_MountUnlock* Sheet_MountUnlock::New() const {
  return new Sheet_MountUnlock;
}

void Sheet_MountUnlock::Clear() {
  e_mountunlock_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_MountUnlock::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.E_MountUnlock E_MountUnlock_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_E_MountUnlock_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_e_mountunlock_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_E_MountUnlock_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_MountUnlock::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.E_MountUnlock E_MountUnlock_List = 1;
  for (int i = 0; i < this->e_mountunlock_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->e_mountunlock_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_MountUnlock::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.E_MountUnlock E_MountUnlock_List = 1;
  for (int i = 0; i < this->e_mountunlock_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->e_mountunlock_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_MountUnlock::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.E_MountUnlock E_MountUnlock_List = 1;
  total_size += 1 * this->e_mountunlock_list_size();
  for (int i = 0; i < this->e_mountunlock_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->e_mountunlock_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_MountUnlock::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_MountUnlock* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_MountUnlock*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_MountUnlock::MergeFrom(const Sheet_MountUnlock& from) {
  GOOGLE_CHECK_NE(&from, this);
  e_mountunlock_list_.MergeFrom(from.e_mountunlock_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_MountUnlock::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_MountUnlock::CopyFrom(const Sheet_MountUnlock& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_MountUnlock::IsInitialized() const {

  return true;
}

void Sheet_MountUnlock::Swap(Sheet_MountUnlock* other) {
  if (other != this) {
    e_mountunlock_list_.Swap(&other->e_mountunlock_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_MountUnlock::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_MountUnlock_descriptor_;
  metadata.reflection = Sheet_MountUnlock_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_MountChangeMaterialDesc::kMExpFieldNumber;
const int E_MountChangeMaterialDesc::kMIdFieldNumber;
#endif  // !_MSC_VER

E_MountChangeMaterialDesc::E_MountChangeMaterialDesc()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_MountChangeMaterialDesc::InitAsDefaultInstance() {
}

E_MountChangeMaterialDesc::E_MountChangeMaterialDesc(const E_MountChangeMaterialDesc& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_MountChangeMaterialDesc::SharedCtor() {
  _cached_size_ = 0;
  m_exp_ = 0;
  m_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_MountChangeMaterialDesc::~E_MountChangeMaterialDesc() {
  SharedDtor();
}

void E_MountChangeMaterialDesc::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_MountChangeMaterialDesc::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_MountChangeMaterialDesc::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_MountChangeMaterialDesc_descriptor_;
}

const E_MountChangeMaterialDesc& E_MountChangeMaterialDesc::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fMount_2eproto();
  return *default_instance_;
}

E_MountChangeMaterialDesc* E_MountChangeMaterialDesc::default_instance_ = NULL;

E_MountChangeMaterialDesc* E_MountChangeMaterialDesc::New() const {
  return new E_MountChangeMaterialDesc;
}

void E_MountChangeMaterialDesc::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_exp_ = 0;
    m_id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_MountChangeMaterialDesc::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_exp = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_exp_)));
          set_has_m_exp();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_id;
        break;
      }

      // optional int32 m_id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_id_)));
          set_has_m_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_MountChangeMaterialDesc::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_exp = 1;
  if (has_m_exp()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_exp(), output);
  }

  // optional int32 m_id = 2;
  if (has_m_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_MountChangeMaterialDesc::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_exp = 1;
  if (has_m_exp()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_exp(), target);
  }

  // optional int32 m_id = 2;
  if (has_m_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_MountChangeMaterialDesc::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_exp = 1;
    if (has_m_exp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_exp());
    }

    // optional int32 m_id = 2;
    if (has_m_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_id());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_MountChangeMaterialDesc::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_MountChangeMaterialDesc* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_MountChangeMaterialDesc*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_MountChangeMaterialDesc::MergeFrom(const E_MountChangeMaterialDesc& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_exp()) {
      set_m_exp(from.m_exp());
    }
    if (from.has_m_id()) {
      set_m_id(from.m_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_MountChangeMaterialDesc::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_MountChangeMaterialDesc::CopyFrom(const E_MountChangeMaterialDesc& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_MountChangeMaterialDesc::IsInitialized() const {

  return true;
}

void E_MountChangeMaterialDesc::Swap(E_MountChangeMaterialDesc* other) {
  if (other != this) {
    std::swap(m_exp_, other->m_exp_);
    std::swap(m_id_, other->m_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_MountChangeMaterialDesc::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_MountChangeMaterialDesc_descriptor_;
  metadata.reflection = E_MountChangeMaterialDesc_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_MountChangeAttributeDesc::kMUpvalueFieldNumber;
const int E_MountChangeAttributeDesc::kMUpberFieldNumber;
#endif  // !_MSC_VER

E_MountChangeAttributeDesc::E_MountChangeAttributeDesc()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_MountChangeAttributeDesc::InitAsDefaultInstance() {
}

E_MountChangeAttributeDesc::E_MountChangeAttributeDesc(const E_MountChangeAttributeDesc& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_MountChangeAttributeDesc::SharedCtor() {
  _cached_size_ = 0;
  m_upvalue_ = 0;
  m_upber_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_MountChangeAttributeDesc::~E_MountChangeAttributeDesc() {
  SharedDtor();
}

void E_MountChangeAttributeDesc::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_MountChangeAttributeDesc::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_MountChangeAttributeDesc::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_MountChangeAttributeDesc_descriptor_;
}

const E_MountChangeAttributeDesc& E_MountChangeAttributeDesc::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fMount_2eproto();
  return *default_instance_;
}

E_MountChangeAttributeDesc* E_MountChangeAttributeDesc::default_instance_ = NULL;

E_MountChangeAttributeDesc* E_MountChangeAttributeDesc::New() const {
  return new E_MountChangeAttributeDesc;
}

void E_MountChangeAttributeDesc::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_upvalue_ = 0;
    m_upber_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_MountChangeAttributeDesc::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_upvalue = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_upvalue_)));
          set_has_m_upvalue();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_upber;
        break;
      }

      // optional int32 m_upber = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_upber:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_upber_)));
          set_has_m_upber();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_MountChangeAttributeDesc::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_upvalue = 1;
  if (has_m_upvalue()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_upvalue(), output);
  }

  // optional int32 m_upber = 2;
  if (has_m_upber()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_upber(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_MountChangeAttributeDesc::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_upvalue = 1;
  if (has_m_upvalue()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_upvalue(), target);
  }

  // optional int32 m_upber = 2;
  if (has_m_upber()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_upber(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_MountChangeAttributeDesc::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_upvalue = 1;
    if (has_m_upvalue()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_upvalue());
    }

    // optional int32 m_upber = 2;
    if (has_m_upber()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_upber());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_MountChangeAttributeDesc::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_MountChangeAttributeDesc* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_MountChangeAttributeDesc*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_MountChangeAttributeDesc::MergeFrom(const E_MountChangeAttributeDesc& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_upvalue()) {
      set_m_upvalue(from.m_upvalue());
    }
    if (from.has_m_upber()) {
      set_m_upber(from.m_upber());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_MountChangeAttributeDesc::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_MountChangeAttributeDesc::CopyFrom(const E_MountChangeAttributeDesc& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_MountChangeAttributeDesc::IsInitialized() const {

  return true;
}

void E_MountChangeAttributeDesc::Swap(E_MountChangeAttributeDesc* other) {
  if (other != this) {
    std::swap(m_upvalue_, other->m_upvalue_);
    std::swap(m_upber_, other->m_upber_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_MountChangeAttributeDesc::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_MountChangeAttributeDesc_descriptor_;
  metadata.reflection = E_MountChangeAttributeDesc_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_MountChange::kMIdFieldNumber;
const int E_MountChange::kMNameFieldNumber;
const int E_MountChange::kMAdvancenameFieldNumber;
const int E_MountChange::kMSpeedFieldNumber;
const int E_MountChange::kMUplvtypeFieldNumber;
const int E_MountChange::kMActiveskillFieldNumber;
const int E_MountChange::kMSkillidFieldNumber;
const int E_MountChange::kMFxidFieldNumber;
const int E_MountChange::kMStarmaxFieldNumber;
const int E_MountChange::kMLvmaxFieldNumber;
const int E_MountChange::kMModelidFieldNumber;
const int E_MountChange::kMActivationitemFieldNumber;
const int E_MountChange::kMActivationnumFieldNumber;
const int E_MountChange::kMStaridFieldNumber;
const int E_MountChange::kMStarnumFieldNumber;
const int E_MountChange::kMStarberFieldNumber;
const int E_MountChange::kMUpattributeidFieldNumber;
const int E_MountChange::kMMaterialFieldNumber;
const int E_MountChange::kMAttributeFieldNumber;
#endif  // !_MSC_VER

E_MountChange::E_MountChange()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_MountChange::InitAsDefaultInstance() {
}

E_MountChange::E_MountChange(const E_MountChange& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_MountChange::SharedCtor() {
  _cached_size_ = 0;
  m_id_ = 0;
  m_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  m_advancename_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  m_speed_ = 0;
  m_uplvtype_ = 0;
  m_activeskill_ = 0;
  m_skillid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  m_fxid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  m_starmax_ = 0;
  m_lvmax_ = 0;
  m_modelid_ = 0;
  m_activationitem_ = 0;
  m_activationnum_ = 0;
  m_starid_ = 0;
  m_starnum_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  m_starber_ = 0;
  m_upattributeid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_MountChange::~E_MountChange() {
  SharedDtor();
}

void E_MountChange::SharedDtor() {
  if (m_name_ != &::google::protobuf::internal::kEmptyString) {
    delete m_name_;
  }
  if (m_advancename_ != &::google::protobuf::internal::kEmptyString) {
    delete m_advancename_;
  }
  if (m_skillid_ != &::google::protobuf::internal::kEmptyString) {
    delete m_skillid_;
  }
  if (m_fxid_ != &::google::protobuf::internal::kEmptyString) {
    delete m_fxid_;
  }
  if (m_starnum_ != &::google::protobuf::internal::kEmptyString) {
    delete m_starnum_;
  }
  if (this != default_instance_) {
  }
}

void E_MountChange::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_MountChange::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_MountChange_descriptor_;
}

const E_MountChange& E_MountChange::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fMount_2eproto();
  return *default_instance_;
}

E_MountChange* E_MountChange::default_instance_ = NULL;

E_MountChange* E_MountChange::New() const {
  return new E_MountChange;
}

void E_MountChange::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_id_ = 0;
    if (has_m_name()) {
      if (m_name_ != &::google::protobuf::internal::kEmptyString) {
        m_name_->clear();
      }
    }
    if (has_m_advancename()) {
      if (m_advancename_ != &::google::protobuf::internal::kEmptyString) {
        m_advancename_->clear();
      }
    }
    m_speed_ = 0;
    m_uplvtype_ = 0;
    m_activeskill_ = 0;
    if (has_m_skillid()) {
      if (m_skillid_ != &::google::protobuf::internal::kEmptyString) {
        m_skillid_->clear();
      }
    }
    if (has_m_fxid()) {
      if (m_fxid_ != &::google::protobuf::internal::kEmptyString) {
        m_fxid_->clear();
      }
    }
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    m_starmax_ = 0;
    m_lvmax_ = 0;
    m_modelid_ = 0;
    m_activationitem_ = 0;
    m_activationnum_ = 0;
    m_starid_ = 0;
    if (has_m_starnum()) {
      if (m_starnum_ != &::google::protobuf::internal::kEmptyString) {
        m_starnum_->clear();
      }
    }
    m_starber_ = 0;
  }
  if (_has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    m_upattributeid_ = 0;
  }
  m_material_.Clear();
  m_attribute_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_MountChange::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_id_)));
          set_has_m_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_m_name;
        break;
      }

      // optional string m_name = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_m_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->m_name().data(), this->m_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_m_advancename;
        break;
      }

      // optional string m_advancename = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_advancename:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_m_advancename()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->m_advancename().data(), this->m_advancename().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_m_speed;
        break;
      }

      // optional int32 m_speed = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_speed:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_speed_)));
          set_has_m_speed();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_m_uplvtype;
        break;
      }

      // optional int32 m_uplvtype = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_uplvtype:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_uplvtype_)));
          set_has_m_uplvtype();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_m_activeskill;
        break;
      }

      // optional int32 m_activeskill = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_activeskill:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_activeskill_)));
          set_has_m_activeskill();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(58)) goto parse_m_skillid;
        break;
      }

      // optional string m_skillid = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_skillid:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_m_skillid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->m_skillid().data(), this->m_skillid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(66)) goto parse_m_fxid;
        break;
      }

      // optional string m_fxid = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_fxid:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_m_fxid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->m_fxid().data(), this->m_fxid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(72)) goto parse_m_starmax;
        break;
      }

      // optional int32 m_starmax = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_starmax:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_starmax_)));
          set_has_m_starmax();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(80)) goto parse_m_lvmax;
        break;
      }

      // optional int32 m_lvmax = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_lvmax:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_lvmax_)));
          set_has_m_lvmax();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(88)) goto parse_m_modelid;
        break;
      }

      // optional int32 m_modelid = 11;
      case 11: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_modelid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_modelid_)));
          set_has_m_modelid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(96)) goto parse_m_activationitem;
        break;
      }

      // optional int32 m_activationitem = 12;
      case 12: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_activationitem:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_activationitem_)));
          set_has_m_activationitem();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(104)) goto parse_m_activationnum;
        break;
      }

      // optional int32 m_activationnum = 13;
      case 13: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_activationnum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_activationnum_)));
          set_has_m_activationnum();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(112)) goto parse_m_starid;
        break;
      }

      // optional int32 m_starid = 14;
      case 14: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_starid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_starid_)));
          set_has_m_starid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(122)) goto parse_m_starnum;
        break;
      }

      // optional string m_starnum = 15;
      case 15: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_starnum:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_m_starnum()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->m_starnum().data(), this->m_starnum().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(128)) goto parse_m_starber;
        break;
      }

      // optional int32 m_starber = 16;
      case 16: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_starber:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_starber_)));
          set_has_m_starber();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(136)) goto parse_m_upattributeid;
        break;
      }

      // optional int32 m_upattributeid = 17;
      case 17: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_upattributeid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_upattributeid_)));
          set_has_m_upattributeid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(146)) goto parse_m_material;
        break;
      }

      // repeated .proto_ff.E_MountChangeMaterialDesc m_material = 18;
      case 18: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_material:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_m_material()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(146)) goto parse_m_material;
        if (input->ExpectTag(154)) goto parse_m_attribute;
        break;
      }

      // repeated .proto_ff.E_MountChangeAttributeDesc m_attribute = 19;
      case 19: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_attribute:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_m_attribute()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(154)) goto parse_m_attribute;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_MountChange::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_id(), output);
  }

  // optional string m_name = 2;
  if (has_m_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_name().data(), this->m_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->m_name(), output);
  }

  // optional string m_advancename = 3;
  if (has_m_advancename()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_advancename().data(), this->m_advancename().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->m_advancename(), output);
  }

  // optional int32 m_speed = 4;
  if (has_m_speed()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->m_speed(), output);
  }

  // optional int32 m_uplvtype = 5;
  if (has_m_uplvtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->m_uplvtype(), output);
  }

  // optional int32 m_activeskill = 6;
  if (has_m_activeskill()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->m_activeskill(), output);
  }

  // optional string m_skillid = 7;
  if (has_m_skillid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_skillid().data(), this->m_skillid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      7, this->m_skillid(), output);
  }

  // optional string m_fxid = 8;
  if (has_m_fxid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_fxid().data(), this->m_fxid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      8, this->m_fxid(), output);
  }

  // optional int32 m_starmax = 9;
  if (has_m_starmax()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->m_starmax(), output);
  }

  // optional int32 m_lvmax = 10;
  if (has_m_lvmax()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->m_lvmax(), output);
  }

  // optional int32 m_modelid = 11;
  if (has_m_modelid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->m_modelid(), output);
  }

  // optional int32 m_activationitem = 12;
  if (has_m_activationitem()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(12, this->m_activationitem(), output);
  }

  // optional int32 m_activationnum = 13;
  if (has_m_activationnum()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(13, this->m_activationnum(), output);
  }

  // optional int32 m_starid = 14;
  if (has_m_starid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(14, this->m_starid(), output);
  }

  // optional string m_starnum = 15;
  if (has_m_starnum()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_starnum().data(), this->m_starnum().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      15, this->m_starnum(), output);
  }

  // optional int32 m_starber = 16;
  if (has_m_starber()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(16, this->m_starber(), output);
  }

  // optional int32 m_upattributeid = 17;
  if (has_m_upattributeid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(17, this->m_upattributeid(), output);
  }

  // repeated .proto_ff.E_MountChangeMaterialDesc m_material = 18;
  for (int i = 0; i < this->m_material_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      18, this->m_material(i), output);
  }

  // repeated .proto_ff.E_MountChangeAttributeDesc m_attribute = 19;
  for (int i = 0; i < this->m_attribute_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      19, this->m_attribute(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_MountChange::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_id(), target);
  }

  // optional string m_name = 2;
  if (has_m_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_name().data(), this->m_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->m_name(), target);
  }

  // optional string m_advancename = 3;
  if (has_m_advancename()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_advancename().data(), this->m_advancename().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->m_advancename(), target);
  }

  // optional int32 m_speed = 4;
  if (has_m_speed()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->m_speed(), target);
  }

  // optional int32 m_uplvtype = 5;
  if (has_m_uplvtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->m_uplvtype(), target);
  }

  // optional int32 m_activeskill = 6;
  if (has_m_activeskill()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->m_activeskill(), target);
  }

  // optional string m_skillid = 7;
  if (has_m_skillid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_skillid().data(), this->m_skillid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->m_skillid(), target);
  }

  // optional string m_fxid = 8;
  if (has_m_fxid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_fxid().data(), this->m_fxid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->m_fxid(), target);
  }

  // optional int32 m_starmax = 9;
  if (has_m_starmax()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->m_starmax(), target);
  }

  // optional int32 m_lvmax = 10;
  if (has_m_lvmax()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->m_lvmax(), target);
  }

  // optional int32 m_modelid = 11;
  if (has_m_modelid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->m_modelid(), target);
  }

  // optional int32 m_activationitem = 12;
  if (has_m_activationitem()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(12, this->m_activationitem(), target);
  }

  // optional int32 m_activationnum = 13;
  if (has_m_activationnum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(13, this->m_activationnum(), target);
  }

  // optional int32 m_starid = 14;
  if (has_m_starid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(14, this->m_starid(), target);
  }

  // optional string m_starnum = 15;
  if (has_m_starnum()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_starnum().data(), this->m_starnum().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        15, this->m_starnum(), target);
  }

  // optional int32 m_starber = 16;
  if (has_m_starber()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(16, this->m_starber(), target);
  }

  // optional int32 m_upattributeid = 17;
  if (has_m_upattributeid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(17, this->m_upattributeid(), target);
  }

  // repeated .proto_ff.E_MountChangeMaterialDesc m_material = 18;
  for (int i = 0; i < this->m_material_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        18, this->m_material(i), target);
  }

  // repeated .proto_ff.E_MountChangeAttributeDesc m_attribute = 19;
  for (int i = 0; i < this->m_attribute_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        19, this->m_attribute(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_MountChange::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_id = 1;
    if (has_m_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_id());
    }

    // optional string m_name = 2;
    if (has_m_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->m_name());
    }

    // optional string m_advancename = 3;
    if (has_m_advancename()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->m_advancename());
    }

    // optional int32 m_speed = 4;
    if (has_m_speed()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_speed());
    }

    // optional int32 m_uplvtype = 5;
    if (has_m_uplvtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_uplvtype());
    }

    // optional int32 m_activeskill = 6;
    if (has_m_activeskill()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_activeskill());
    }

    // optional string m_skillid = 7;
    if (has_m_skillid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->m_skillid());
    }

    // optional string m_fxid = 8;
    if (has_m_fxid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->m_fxid());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional int32 m_starmax = 9;
    if (has_m_starmax()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_starmax());
    }

    // optional int32 m_lvmax = 10;
    if (has_m_lvmax()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_lvmax());
    }

    // optional int32 m_modelid = 11;
    if (has_m_modelid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_modelid());
    }

    // optional int32 m_activationitem = 12;
    if (has_m_activationitem()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_activationitem());
    }

    // optional int32 m_activationnum = 13;
    if (has_m_activationnum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_activationnum());
    }

    // optional int32 m_starid = 14;
    if (has_m_starid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_starid());
    }

    // optional string m_starnum = 15;
    if (has_m_starnum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->m_starnum());
    }

    // optional int32 m_starber = 16;
    if (has_m_starber()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_starber());
    }

  }
  if (_has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    // optional int32 m_upattributeid = 17;
    if (has_m_upattributeid()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_upattributeid());
    }

  }
  // repeated .proto_ff.E_MountChangeMaterialDesc m_material = 18;
  total_size += 2 * this->m_material_size();
  for (int i = 0; i < this->m_material_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->m_material(i));
  }

  // repeated .proto_ff.E_MountChangeAttributeDesc m_attribute = 19;
  total_size += 2 * this->m_attribute_size();
  for (int i = 0; i < this->m_attribute_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->m_attribute(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_MountChange::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_MountChange* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_MountChange*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_MountChange::MergeFrom(const E_MountChange& from) {
  GOOGLE_CHECK_NE(&from, this);
  m_material_.MergeFrom(from.m_material_);
  m_attribute_.MergeFrom(from.m_attribute_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_id()) {
      set_m_id(from.m_id());
    }
    if (from.has_m_name()) {
      set_m_name(from.m_name());
    }
    if (from.has_m_advancename()) {
      set_m_advancename(from.m_advancename());
    }
    if (from.has_m_speed()) {
      set_m_speed(from.m_speed());
    }
    if (from.has_m_uplvtype()) {
      set_m_uplvtype(from.m_uplvtype());
    }
    if (from.has_m_activeskill()) {
      set_m_activeskill(from.m_activeskill());
    }
    if (from.has_m_skillid()) {
      set_m_skillid(from.m_skillid());
    }
    if (from.has_m_fxid()) {
      set_m_fxid(from.m_fxid());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_m_starmax()) {
      set_m_starmax(from.m_starmax());
    }
    if (from.has_m_lvmax()) {
      set_m_lvmax(from.m_lvmax());
    }
    if (from.has_m_modelid()) {
      set_m_modelid(from.m_modelid());
    }
    if (from.has_m_activationitem()) {
      set_m_activationitem(from.m_activationitem());
    }
    if (from.has_m_activationnum()) {
      set_m_activationnum(from.m_activationnum());
    }
    if (from.has_m_starid()) {
      set_m_starid(from.m_starid());
    }
    if (from.has_m_starnum()) {
      set_m_starnum(from.m_starnum());
    }
    if (from.has_m_starber()) {
      set_m_starber(from.m_starber());
    }
  }
  if (from._has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    if (from.has_m_upattributeid()) {
      set_m_upattributeid(from.m_upattributeid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_MountChange::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_MountChange::CopyFrom(const E_MountChange& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_MountChange::IsInitialized() const {

  return true;
}

void E_MountChange::Swap(E_MountChange* other) {
  if (other != this) {
    std::swap(m_id_, other->m_id_);
    std::swap(m_name_, other->m_name_);
    std::swap(m_advancename_, other->m_advancename_);
    std::swap(m_speed_, other->m_speed_);
    std::swap(m_uplvtype_, other->m_uplvtype_);
    std::swap(m_activeskill_, other->m_activeskill_);
    std::swap(m_skillid_, other->m_skillid_);
    std::swap(m_fxid_, other->m_fxid_);
    std::swap(m_starmax_, other->m_starmax_);
    std::swap(m_lvmax_, other->m_lvmax_);
    std::swap(m_modelid_, other->m_modelid_);
    std::swap(m_activationitem_, other->m_activationitem_);
    std::swap(m_activationnum_, other->m_activationnum_);
    std::swap(m_starid_, other->m_starid_);
    std::swap(m_starnum_, other->m_starnum_);
    std::swap(m_starber_, other->m_starber_);
    std::swap(m_upattributeid_, other->m_upattributeid_);
    m_material_.Swap(&other->m_material_);
    m_attribute_.Swap(&other->m_attribute_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_MountChange::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_MountChange_descriptor_;
  metadata.reflection = E_MountChange_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_MountChange::kEMountChangeListFieldNumber;
#endif  // !_MSC_VER

Sheet_MountChange::Sheet_MountChange()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_MountChange::InitAsDefaultInstance() {
}

Sheet_MountChange::Sheet_MountChange(const Sheet_MountChange& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_MountChange::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_MountChange::~Sheet_MountChange() {
  SharedDtor();
}

void Sheet_MountChange::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_MountChange::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_MountChange::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_MountChange_descriptor_;
}

const Sheet_MountChange& Sheet_MountChange::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fMount_2eproto();
  return *default_instance_;
}

Sheet_MountChange* Sheet_MountChange::default_instance_ = NULL;

Sheet_MountChange* Sheet_MountChange::New() const {
  return new Sheet_MountChange;
}

void Sheet_MountChange::Clear() {
  e_mountchange_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_MountChange::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.E_MountChange E_MountChange_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_E_MountChange_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_e_mountchange_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_E_MountChange_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_MountChange::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.E_MountChange E_MountChange_List = 1;
  for (int i = 0; i < this->e_mountchange_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->e_mountchange_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_MountChange::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.E_MountChange E_MountChange_List = 1;
  for (int i = 0; i < this->e_mountchange_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->e_mountchange_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_MountChange::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.E_MountChange E_MountChange_List = 1;
  total_size += 1 * this->e_mountchange_list_size();
  for (int i = 0; i < this->e_mountchange_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->e_mountchange_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_MountChange::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_MountChange* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_MountChange*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_MountChange::MergeFrom(const Sheet_MountChange& from) {
  GOOGLE_CHECK_NE(&from, this);
  e_mountchange_list_.MergeFrom(from.e_mountchange_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_MountChange::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_MountChange::CopyFrom(const Sheet_MountChange& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_MountChange::IsInitialized() const {

  return true;
}

void Sheet_MountChange::Swap(Sheet_MountChange* other) {
  if (other != this) {
    e_mountchange_list_.Swap(&other->e_mountchange_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_MountChange::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_MountChange_descriptor_;
  metadata.reflection = Sheet_MountChange_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_MountAdvanceUpattributeDesc::kMValueFieldNumber;
const int E_MountAdvanceUpattributeDesc::kMTypeFieldNumber;
#endif  // !_MSC_VER

E_MountAdvanceUpattributeDesc::E_MountAdvanceUpattributeDesc()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_MountAdvanceUpattributeDesc::InitAsDefaultInstance() {
}

E_MountAdvanceUpattributeDesc::E_MountAdvanceUpattributeDesc(const E_MountAdvanceUpattributeDesc& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_MountAdvanceUpattributeDesc::SharedCtor() {
  _cached_size_ = 0;
  m_value_ = 0;
  m_type_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_MountAdvanceUpattributeDesc::~E_MountAdvanceUpattributeDesc() {
  SharedDtor();
}

void E_MountAdvanceUpattributeDesc::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_MountAdvanceUpattributeDesc::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_MountAdvanceUpattributeDesc::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_MountAdvanceUpattributeDesc_descriptor_;
}

const E_MountAdvanceUpattributeDesc& E_MountAdvanceUpattributeDesc::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fMount_2eproto();
  return *default_instance_;
}

E_MountAdvanceUpattributeDesc* E_MountAdvanceUpattributeDesc::default_instance_ = NULL;

E_MountAdvanceUpattributeDesc* E_MountAdvanceUpattributeDesc::New() const {
  return new E_MountAdvanceUpattributeDesc;
}

void E_MountAdvanceUpattributeDesc::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_value_ = 0;
    m_type_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_MountAdvanceUpattributeDesc::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_value = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_value_)));
          set_has_m_value();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_type;
        break;
      }

      // optional int32 m_type = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_type_)));
          set_has_m_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_MountAdvanceUpattributeDesc::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_value = 1;
  if (has_m_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_value(), output);
  }

  // optional int32 m_type = 2;
  if (has_m_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_type(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_MountAdvanceUpattributeDesc::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_value = 1;
  if (has_m_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_value(), target);
  }

  // optional int32 m_type = 2;
  if (has_m_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_type(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_MountAdvanceUpattributeDesc::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_value = 1;
    if (has_m_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_value());
    }

    // optional int32 m_type = 2;
    if (has_m_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_type());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_MountAdvanceUpattributeDesc::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_MountAdvanceUpattributeDesc* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_MountAdvanceUpattributeDesc*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_MountAdvanceUpattributeDesc::MergeFrom(const E_MountAdvanceUpattributeDesc& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_value()) {
      set_m_value(from.m_value());
    }
    if (from.has_m_type()) {
      set_m_type(from.m_type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_MountAdvanceUpattributeDesc::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_MountAdvanceUpattributeDesc::CopyFrom(const E_MountAdvanceUpattributeDesc& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_MountAdvanceUpattributeDesc::IsInitialized() const {

  return true;
}

void E_MountAdvanceUpattributeDesc::Swap(E_MountAdvanceUpattributeDesc* other) {
  if (other != this) {
    std::swap(m_value_, other->m_value_);
    std::swap(m_type_, other->m_type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_MountAdvanceUpattributeDesc::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_MountAdvanceUpattributeDesc_descriptor_;
  metadata.reflection = E_MountAdvanceUpattributeDesc_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_MountAdvance::kMIdFieldNumber;
const int E_MountAdvance::kMUpattributeidFieldNumber;
const int E_MountAdvance::kMStaridFieldNumber;
const int E_MountAdvance::kMSkillidFieldNumber;
const int E_MountAdvance::kMUpattributeFieldNumber;
#endif  // !_MSC_VER

E_MountAdvance::E_MountAdvance()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_MountAdvance::InitAsDefaultInstance() {
}

E_MountAdvance::E_MountAdvance(const E_MountAdvance& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_MountAdvance::SharedCtor() {
  _cached_size_ = 0;
  m_id_ = 0;
  m_upattributeid_ = 0;
  m_starid_ = 0;
  m_skillid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_MountAdvance::~E_MountAdvance() {
  SharedDtor();
}

void E_MountAdvance::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_MountAdvance::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_MountAdvance::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_MountAdvance_descriptor_;
}

const E_MountAdvance& E_MountAdvance::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fMount_2eproto();
  return *default_instance_;
}

E_MountAdvance* E_MountAdvance::default_instance_ = NULL;

E_MountAdvance* E_MountAdvance::New() const {
  return new E_MountAdvance;
}

void E_MountAdvance::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_id_ = 0;
    m_upattributeid_ = 0;
    m_starid_ = 0;
    m_skillid_ = 0;
  }
  m_upattribute_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_MountAdvance::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_id_)));
          set_has_m_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_upattributeid;
        break;
      }

      // optional int32 m_upattributeid = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_upattributeid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_upattributeid_)));
          set_has_m_upattributeid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_m_starid;
        break;
      }

      // optional int32 m_starid = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_starid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_starid_)));
          set_has_m_starid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_m_skillid;
        break;
      }

      // optional int32 m_skillid = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_skillid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_skillid_)));
          set_has_m_skillid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_m_upattribute;
        break;
      }

      // repeated .proto_ff.E_MountAdvanceUpattributeDesc m_upattribute = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_upattribute:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_m_upattribute()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_m_upattribute;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_MountAdvance::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_id(), output);
  }

  // optional int32 m_upattributeid = 2;
  if (has_m_upattributeid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_upattributeid(), output);
  }

  // optional int32 m_starid = 3;
  if (has_m_starid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->m_starid(), output);
  }

  // optional int32 m_skillid = 4;
  if (has_m_skillid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->m_skillid(), output);
  }

  // repeated .proto_ff.E_MountAdvanceUpattributeDesc m_upattribute = 5;
  for (int i = 0; i < this->m_upattribute_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->m_upattribute(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_MountAdvance::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_id(), target);
  }

  // optional int32 m_upattributeid = 2;
  if (has_m_upattributeid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_upattributeid(), target);
  }

  // optional int32 m_starid = 3;
  if (has_m_starid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->m_starid(), target);
  }

  // optional int32 m_skillid = 4;
  if (has_m_skillid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->m_skillid(), target);
  }

  // repeated .proto_ff.E_MountAdvanceUpattributeDesc m_upattribute = 5;
  for (int i = 0; i < this->m_upattribute_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->m_upattribute(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_MountAdvance::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_id = 1;
    if (has_m_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_id());
    }

    // optional int32 m_upattributeid = 2;
    if (has_m_upattributeid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_upattributeid());
    }

    // optional int32 m_starid = 3;
    if (has_m_starid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_starid());
    }

    // optional int32 m_skillid = 4;
    if (has_m_skillid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_skillid());
    }

  }
  // repeated .proto_ff.E_MountAdvanceUpattributeDesc m_upattribute = 5;
  total_size += 1 * this->m_upattribute_size();
  for (int i = 0; i < this->m_upattribute_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->m_upattribute(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_MountAdvance::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_MountAdvance* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_MountAdvance*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_MountAdvance::MergeFrom(const E_MountAdvance& from) {
  GOOGLE_CHECK_NE(&from, this);
  m_upattribute_.MergeFrom(from.m_upattribute_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_id()) {
      set_m_id(from.m_id());
    }
    if (from.has_m_upattributeid()) {
      set_m_upattributeid(from.m_upattributeid());
    }
    if (from.has_m_starid()) {
      set_m_starid(from.m_starid());
    }
    if (from.has_m_skillid()) {
      set_m_skillid(from.m_skillid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_MountAdvance::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_MountAdvance::CopyFrom(const E_MountAdvance& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_MountAdvance::IsInitialized() const {

  return true;
}

void E_MountAdvance::Swap(E_MountAdvance* other) {
  if (other != this) {
    std::swap(m_id_, other->m_id_);
    std::swap(m_upattributeid_, other->m_upattributeid_);
    std::swap(m_starid_, other->m_starid_);
    std::swap(m_skillid_, other->m_skillid_);
    m_upattribute_.Swap(&other->m_upattribute_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_MountAdvance::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_MountAdvance_descriptor_;
  metadata.reflection = E_MountAdvance_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_MountAdvance::kEMountAdvanceListFieldNumber;
#endif  // !_MSC_VER

Sheet_MountAdvance::Sheet_MountAdvance()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_MountAdvance::InitAsDefaultInstance() {
}

Sheet_MountAdvance::Sheet_MountAdvance(const Sheet_MountAdvance& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_MountAdvance::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_MountAdvance::~Sheet_MountAdvance() {
  SharedDtor();
}

void Sheet_MountAdvance::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_MountAdvance::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_MountAdvance::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_MountAdvance_descriptor_;
}

const Sheet_MountAdvance& Sheet_MountAdvance::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fMount_2eproto();
  return *default_instance_;
}

Sheet_MountAdvance* Sheet_MountAdvance::default_instance_ = NULL;

Sheet_MountAdvance* Sheet_MountAdvance::New() const {
  return new Sheet_MountAdvance;
}

void Sheet_MountAdvance::Clear() {
  e_mountadvance_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_MountAdvance::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.E_MountAdvance E_MountAdvance_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_E_MountAdvance_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_e_mountadvance_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_E_MountAdvance_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_MountAdvance::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.E_MountAdvance E_MountAdvance_List = 1;
  for (int i = 0; i < this->e_mountadvance_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->e_mountadvance_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_MountAdvance::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.E_MountAdvance E_MountAdvance_List = 1;
  for (int i = 0; i < this->e_mountadvance_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->e_mountadvance_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_MountAdvance::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.E_MountAdvance E_MountAdvance_List = 1;
  total_size += 1 * this->e_mountadvance_list_size();
  for (int i = 0; i < this->e_mountadvance_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->e_mountadvance_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_MountAdvance::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_MountAdvance* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_MountAdvance*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_MountAdvance::MergeFrom(const Sheet_MountAdvance& from) {
  GOOGLE_CHECK_NE(&from, this);
  e_mountadvance_list_.MergeFrom(from.e_mountadvance_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_MountAdvance::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_MountAdvance::CopyFrom(const Sheet_MountAdvance& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_MountAdvance::IsInitialized() const {

  return true;
}

void Sheet_MountAdvance::Swap(Sheet_MountAdvance* other) {
  if (other != this) {
    e_mountadvance_list_.Swap(&other->e_mountadvance_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_MountAdvance::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_MountAdvance_descriptor_;
  metadata.reflection = Sheet_MountAdvance_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_MountBaby_egg::kMIdFieldNumber;
const int E_MountBaby_egg::kMItemFieldNumber;
const int E_MountBaby_egg::kMTimeFieldNumber;
const int E_MountBaby_egg::kMItemboxFieldNumber;
#endif  // !_MSC_VER

E_MountBaby_egg::E_MountBaby_egg()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_MountBaby_egg::InitAsDefaultInstance() {
}

E_MountBaby_egg::E_MountBaby_egg(const E_MountBaby_egg& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_MountBaby_egg::SharedCtor() {
  _cached_size_ = 0;
  m_id_ = 0;
  m_item_ = 0;
  m_time_ = 0;
  m_itembox_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_MountBaby_egg::~E_MountBaby_egg() {
  SharedDtor();
}

void E_MountBaby_egg::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_MountBaby_egg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_MountBaby_egg::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_MountBaby_egg_descriptor_;
}

const E_MountBaby_egg& E_MountBaby_egg::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fMount_2eproto();
  return *default_instance_;
}

E_MountBaby_egg* E_MountBaby_egg::default_instance_ = NULL;

E_MountBaby_egg* E_MountBaby_egg::New() const {
  return new E_MountBaby_egg;
}

void E_MountBaby_egg::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_id_ = 0;
    m_item_ = 0;
    m_time_ = 0;
    m_itembox_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_MountBaby_egg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_id_)));
          set_has_m_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_item;
        break;
      }

      // optional int32 m_item = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_item:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_item_)));
          set_has_m_item();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_m_time;
        break;
      }

      // optional int32 m_time = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_time_)));
          set_has_m_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_m_itembox;
        break;
      }

      // optional int32 m_itembox = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_itembox:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_itembox_)));
          set_has_m_itembox();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_MountBaby_egg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_id(), output);
  }

  // optional int32 m_item = 2;
  if (has_m_item()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_item(), output);
  }

  // optional int32 m_time = 3;
  if (has_m_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->m_time(), output);
  }

  // optional int32 m_itembox = 4;
  if (has_m_itembox()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->m_itembox(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_MountBaby_egg::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_id(), target);
  }

  // optional int32 m_item = 2;
  if (has_m_item()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_item(), target);
  }

  // optional int32 m_time = 3;
  if (has_m_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->m_time(), target);
  }

  // optional int32 m_itembox = 4;
  if (has_m_itembox()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->m_itembox(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_MountBaby_egg::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_id = 1;
    if (has_m_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_id());
    }

    // optional int32 m_item = 2;
    if (has_m_item()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_item());
    }

    // optional int32 m_time = 3;
    if (has_m_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_time());
    }

    // optional int32 m_itembox = 4;
    if (has_m_itembox()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_itembox());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_MountBaby_egg::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_MountBaby_egg* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_MountBaby_egg*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_MountBaby_egg::MergeFrom(const E_MountBaby_egg& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_id()) {
      set_m_id(from.m_id());
    }
    if (from.has_m_item()) {
      set_m_item(from.m_item());
    }
    if (from.has_m_time()) {
      set_m_time(from.m_time());
    }
    if (from.has_m_itembox()) {
      set_m_itembox(from.m_itembox());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_MountBaby_egg::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_MountBaby_egg::CopyFrom(const E_MountBaby_egg& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_MountBaby_egg::IsInitialized() const {

  return true;
}

void E_MountBaby_egg::Swap(E_MountBaby_egg* other) {
  if (other != this) {
    std::swap(m_id_, other->m_id_);
    std::swap(m_item_, other->m_item_);
    std::swap(m_time_, other->m_time_);
    std::swap(m_itembox_, other->m_itembox_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_MountBaby_egg::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_MountBaby_egg_descriptor_;
  metadata.reflection = E_MountBaby_egg_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_MountBaby_egg::kEMountBabyEggListFieldNumber;
#endif  // !_MSC_VER

Sheet_MountBaby_egg::Sheet_MountBaby_egg()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_MountBaby_egg::InitAsDefaultInstance() {
}

Sheet_MountBaby_egg::Sheet_MountBaby_egg(const Sheet_MountBaby_egg& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_MountBaby_egg::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_MountBaby_egg::~Sheet_MountBaby_egg() {
  SharedDtor();
}

void Sheet_MountBaby_egg::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_MountBaby_egg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_MountBaby_egg::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_MountBaby_egg_descriptor_;
}

const Sheet_MountBaby_egg& Sheet_MountBaby_egg::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fMount_2eproto();
  return *default_instance_;
}

Sheet_MountBaby_egg* Sheet_MountBaby_egg::default_instance_ = NULL;

Sheet_MountBaby_egg* Sheet_MountBaby_egg::New() const {
  return new Sheet_MountBaby_egg;
}

void Sheet_MountBaby_egg::Clear() {
  e_mountbaby_egg_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_MountBaby_egg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.E_MountBaby_egg E_MountBaby_egg_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_E_MountBaby_egg_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_e_mountbaby_egg_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_E_MountBaby_egg_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_MountBaby_egg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.E_MountBaby_egg E_MountBaby_egg_List = 1;
  for (int i = 0; i < this->e_mountbaby_egg_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->e_mountbaby_egg_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_MountBaby_egg::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.E_MountBaby_egg E_MountBaby_egg_List = 1;
  for (int i = 0; i < this->e_mountbaby_egg_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->e_mountbaby_egg_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_MountBaby_egg::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.E_MountBaby_egg E_MountBaby_egg_List = 1;
  total_size += 1 * this->e_mountbaby_egg_list_size();
  for (int i = 0; i < this->e_mountbaby_egg_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->e_mountbaby_egg_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_MountBaby_egg::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_MountBaby_egg* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_MountBaby_egg*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_MountBaby_egg::MergeFrom(const Sheet_MountBaby_egg& from) {
  GOOGLE_CHECK_NE(&from, this);
  e_mountbaby_egg_list_.MergeFrom(from.e_mountbaby_egg_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_MountBaby_egg::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_MountBaby_egg::CopyFrom(const Sheet_MountBaby_egg& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_MountBaby_egg::IsInitialized() const {

  return true;
}

void Sheet_MountBaby_egg::Swap(Sheet_MountBaby_egg* other) {
  if (other != this) {
    e_mountbaby_egg_list_.Swap(&other->e_mountbaby_egg_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_MountBaby_egg::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_MountBaby_egg_descriptor_;
  metadata.reflection = Sheet_MountBaby_egg_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_MountHuakunUplvDesc::kMUpvalueFieldNumber;
const int E_MountHuakunUplvDesc::kMUpberFieldNumber;
#endif  // !_MSC_VER

E_MountHuakunUplvDesc::E_MountHuakunUplvDesc()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_MountHuakunUplvDesc::InitAsDefaultInstance() {
}

E_MountHuakunUplvDesc::E_MountHuakunUplvDesc(const E_MountHuakunUplvDesc& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_MountHuakunUplvDesc::SharedCtor() {
  _cached_size_ = 0;
  m_upvalue_ = 0;
  m_upber_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_MountHuakunUplvDesc::~E_MountHuakunUplvDesc() {
  SharedDtor();
}

void E_MountHuakunUplvDesc::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_MountHuakunUplvDesc::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_MountHuakunUplvDesc::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_MountHuakunUplvDesc_descriptor_;
}

const E_MountHuakunUplvDesc& E_MountHuakunUplvDesc::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fMount_2eproto();
  return *default_instance_;
}

E_MountHuakunUplvDesc* E_MountHuakunUplvDesc::default_instance_ = NULL;

E_MountHuakunUplvDesc* E_MountHuakunUplvDesc::New() const {
  return new E_MountHuakunUplvDesc;
}

void E_MountHuakunUplvDesc::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_upvalue_ = 0;
    m_upber_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_MountHuakunUplvDesc::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_upvalue = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_upvalue_)));
          set_has_m_upvalue();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_upber;
        break;
      }

      // optional int32 m_upber = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_upber:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_upber_)));
          set_has_m_upber();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_MountHuakunUplvDesc::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_upvalue = 1;
  if (has_m_upvalue()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_upvalue(), output);
  }

  // optional int32 m_upber = 2;
  if (has_m_upber()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_upber(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_MountHuakunUplvDesc::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_upvalue = 1;
  if (has_m_upvalue()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_upvalue(), target);
  }

  // optional int32 m_upber = 2;
  if (has_m_upber()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_upber(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_MountHuakunUplvDesc::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_upvalue = 1;
    if (has_m_upvalue()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_upvalue());
    }

    // optional int32 m_upber = 2;
    if (has_m_upber()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_upber());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_MountHuakunUplvDesc::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_MountHuakunUplvDesc* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_MountHuakunUplvDesc*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_MountHuakunUplvDesc::MergeFrom(const E_MountHuakunUplvDesc& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_upvalue()) {
      set_m_upvalue(from.m_upvalue());
    }
    if (from.has_m_upber()) {
      set_m_upber(from.m_upber());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_MountHuakunUplvDesc::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_MountHuakunUplvDesc::CopyFrom(const E_MountHuakunUplvDesc& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_MountHuakunUplvDesc::IsInitialized() const {

  return true;
}

void E_MountHuakunUplvDesc::Swap(E_MountHuakunUplvDesc* other) {
  if (other != this) {
    std::swap(m_upvalue_, other->m_upvalue_);
    std::swap(m_upber_, other->m_upber_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_MountHuakunUplvDesc::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_MountHuakunUplvDesc_descriptor_;
  metadata.reflection = E_MountHuakunUplvDesc_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_MountHuakunMaterialDesc::kMExpFieldNumber;
const int E_MountHuakunMaterialDesc::kMIdFieldNumber;
#endif  // !_MSC_VER

E_MountHuakunMaterialDesc::E_MountHuakunMaterialDesc()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_MountHuakunMaterialDesc::InitAsDefaultInstance() {
}

E_MountHuakunMaterialDesc::E_MountHuakunMaterialDesc(const E_MountHuakunMaterialDesc& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_MountHuakunMaterialDesc::SharedCtor() {
  _cached_size_ = 0;
  m_exp_ = 0;
  m_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_MountHuakunMaterialDesc::~E_MountHuakunMaterialDesc() {
  SharedDtor();
}

void E_MountHuakunMaterialDesc::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_MountHuakunMaterialDesc::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_MountHuakunMaterialDesc::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_MountHuakunMaterialDesc_descriptor_;
}

const E_MountHuakunMaterialDesc& E_MountHuakunMaterialDesc::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fMount_2eproto();
  return *default_instance_;
}

E_MountHuakunMaterialDesc* E_MountHuakunMaterialDesc::default_instance_ = NULL;

E_MountHuakunMaterialDesc* E_MountHuakunMaterialDesc::New() const {
  return new E_MountHuakunMaterialDesc;
}

void E_MountHuakunMaterialDesc::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_exp_ = 0;
    m_id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_MountHuakunMaterialDesc::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_exp = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_exp_)));
          set_has_m_exp();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_id;
        break;
      }

      // optional int32 m_id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_id_)));
          set_has_m_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_MountHuakunMaterialDesc::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_exp = 1;
  if (has_m_exp()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_exp(), output);
  }

  // optional int32 m_id = 2;
  if (has_m_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_MountHuakunMaterialDesc::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_exp = 1;
  if (has_m_exp()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_exp(), target);
  }

  // optional int32 m_id = 2;
  if (has_m_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_MountHuakunMaterialDesc::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_exp = 1;
    if (has_m_exp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_exp());
    }

    // optional int32 m_id = 2;
    if (has_m_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_id());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_MountHuakunMaterialDesc::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_MountHuakunMaterialDesc* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_MountHuakunMaterialDesc*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_MountHuakunMaterialDesc::MergeFrom(const E_MountHuakunMaterialDesc& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_exp()) {
      set_m_exp(from.m_exp());
    }
    if (from.has_m_id()) {
      set_m_id(from.m_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_MountHuakunMaterialDesc::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_MountHuakunMaterialDesc::CopyFrom(const E_MountHuakunMaterialDesc& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_MountHuakunMaterialDesc::IsInitialized() const {

  return true;
}

void E_MountHuakunMaterialDesc::Swap(E_MountHuakunMaterialDesc* other) {
  if (other != this) {
    std::swap(m_exp_, other->m_exp_);
    std::swap(m_id_, other->m_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_MountHuakunMaterialDesc::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_MountHuakunMaterialDesc_descriptor_;
  metadata.reflection = E_MountHuakunMaterialDesc_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_MountHuakunAdvanceDesc::kMUpvalueFieldNumber;
const int E_MountHuakunAdvanceDesc::kMUpberFieldNumber;
#endif  // !_MSC_VER

E_MountHuakunAdvanceDesc::E_MountHuakunAdvanceDesc()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_MountHuakunAdvanceDesc::InitAsDefaultInstance() {
}

E_MountHuakunAdvanceDesc::E_MountHuakunAdvanceDesc(const E_MountHuakunAdvanceDesc& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_MountHuakunAdvanceDesc::SharedCtor() {
  _cached_size_ = 0;
  m_upvalue_ = 0;
  m_upber_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_MountHuakunAdvanceDesc::~E_MountHuakunAdvanceDesc() {
  SharedDtor();
}

void E_MountHuakunAdvanceDesc::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_MountHuakunAdvanceDesc::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_MountHuakunAdvanceDesc::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_MountHuakunAdvanceDesc_descriptor_;
}

const E_MountHuakunAdvanceDesc& E_MountHuakunAdvanceDesc::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fMount_2eproto();
  return *default_instance_;
}

E_MountHuakunAdvanceDesc* E_MountHuakunAdvanceDesc::default_instance_ = NULL;

E_MountHuakunAdvanceDesc* E_MountHuakunAdvanceDesc::New() const {
  return new E_MountHuakunAdvanceDesc;
}

void E_MountHuakunAdvanceDesc::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_upvalue_ = 0;
    m_upber_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_MountHuakunAdvanceDesc::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_upvalue = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_upvalue_)));
          set_has_m_upvalue();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_upber;
        break;
      }

      // optional int32 m_upber = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_upber:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_upber_)));
          set_has_m_upber();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_MountHuakunAdvanceDesc::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_upvalue = 1;
  if (has_m_upvalue()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_upvalue(), output);
  }

  // optional int32 m_upber = 2;
  if (has_m_upber()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_upber(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_MountHuakunAdvanceDesc::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_upvalue = 1;
  if (has_m_upvalue()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_upvalue(), target);
  }

  // optional int32 m_upber = 2;
  if (has_m_upber()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_upber(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_MountHuakunAdvanceDesc::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_upvalue = 1;
    if (has_m_upvalue()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_upvalue());
    }

    // optional int32 m_upber = 2;
    if (has_m_upber()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_upber());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_MountHuakunAdvanceDesc::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_MountHuakunAdvanceDesc* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_MountHuakunAdvanceDesc*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_MountHuakunAdvanceDesc::MergeFrom(const E_MountHuakunAdvanceDesc& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_upvalue()) {
      set_m_upvalue(from.m_upvalue());
    }
    if (from.has_m_upber()) {
      set_m_upber(from.m_upber());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_MountHuakunAdvanceDesc::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_MountHuakunAdvanceDesc::CopyFrom(const E_MountHuakunAdvanceDesc& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_MountHuakunAdvanceDesc::IsInitialized() const {

  return true;
}

void E_MountHuakunAdvanceDesc::Swap(E_MountHuakunAdvanceDesc* other) {
  if (other != this) {
    std::swap(m_upvalue_, other->m_upvalue_);
    std::swap(m_upber_, other->m_upber_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_MountHuakunAdvanceDesc::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_MountHuakunAdvanceDesc_descriptor_;
  metadata.reflection = E_MountHuakunAdvanceDesc_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_MountHuakunAttributeDesc::kMUpvalueFieldNumber;
const int E_MountHuakunAttributeDesc::kMUpberFieldNumber;
#endif  // !_MSC_VER

E_MountHuakunAttributeDesc::E_MountHuakunAttributeDesc()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_MountHuakunAttributeDesc::InitAsDefaultInstance() {
}

E_MountHuakunAttributeDesc::E_MountHuakunAttributeDesc(const E_MountHuakunAttributeDesc& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_MountHuakunAttributeDesc::SharedCtor() {
  _cached_size_ = 0;
  m_upvalue_ = 0;
  m_upber_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_MountHuakunAttributeDesc::~E_MountHuakunAttributeDesc() {
  SharedDtor();
}

void E_MountHuakunAttributeDesc::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_MountHuakunAttributeDesc::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_MountHuakunAttributeDesc::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_MountHuakunAttributeDesc_descriptor_;
}

const E_MountHuakunAttributeDesc& E_MountHuakunAttributeDesc::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fMount_2eproto();
  return *default_instance_;
}

E_MountHuakunAttributeDesc* E_MountHuakunAttributeDesc::default_instance_ = NULL;

E_MountHuakunAttributeDesc* E_MountHuakunAttributeDesc::New() const {
  return new E_MountHuakunAttributeDesc;
}

void E_MountHuakunAttributeDesc::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_upvalue_ = 0;
    m_upber_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_MountHuakunAttributeDesc::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_upvalue = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_upvalue_)));
          set_has_m_upvalue();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_upber;
        break;
      }

      // optional int32 m_upber = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_upber:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_upber_)));
          set_has_m_upber();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_MountHuakunAttributeDesc::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_upvalue = 1;
  if (has_m_upvalue()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_upvalue(), output);
  }

  // optional int32 m_upber = 2;
  if (has_m_upber()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_upber(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_MountHuakunAttributeDesc::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_upvalue = 1;
  if (has_m_upvalue()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_upvalue(), target);
  }

  // optional int32 m_upber = 2;
  if (has_m_upber()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_upber(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_MountHuakunAttributeDesc::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_upvalue = 1;
    if (has_m_upvalue()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_upvalue());
    }

    // optional int32 m_upber = 2;
    if (has_m_upber()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_upber());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_MountHuakunAttributeDesc::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_MountHuakunAttributeDesc* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_MountHuakunAttributeDesc*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_MountHuakunAttributeDesc::MergeFrom(const E_MountHuakunAttributeDesc& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_upvalue()) {
      set_m_upvalue(from.m_upvalue());
    }
    if (from.has_m_upber()) {
      set_m_upber(from.m_upber());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_MountHuakunAttributeDesc::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_MountHuakunAttributeDesc::CopyFrom(const E_MountHuakunAttributeDesc& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_MountHuakunAttributeDesc::IsInitialized() const {

  return true;
}

void E_MountHuakunAttributeDesc::Swap(E_MountHuakunAttributeDesc* other) {
  if (other != this) {
    std::swap(m_upvalue_, other->m_upvalue_);
    std::swap(m_upber_, other->m_upber_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_MountHuakunAttributeDesc::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_MountHuakunAttributeDesc_descriptor_;
  metadata.reflection = E_MountHuakunAttributeDesc_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_MountHuakun::kMIdFieldNumber;
const int E_MountHuakun::kMModelidFieldNumber;
const int E_MountHuakun::kMQualityFieldNumber;
const int E_MountHuakun::kMSpeedFieldNumber;
const int E_MountHuakun::kMUplvtypeFieldNumber;
const int E_MountHuakun::kMActivateitemFieldNumber;
const int E_MountHuakun::kMActivateitemnumFieldNumber;
const int E_MountHuakun::kMAdvancetypeFieldNumber;
const int E_MountHuakun::kMStarvancetypeFieldNumber;
const int E_MountHuakun::kMStarlimitFieldNumber;
const int E_MountHuakun::kMStarberFieldNumber;
const int E_MountHuakun::kMSkillLgFieldNumber;
const int E_MountHuakun::kMSkillBdFieldNumber;
const int E_MountHuakun::kMSoaringattributeidFieldNumber;
const int E_MountHuakun::kMComprehendFieldNumber;
const int E_MountHuakun::kMExclusiveFieldNumber;
const int E_MountHuakun::kMComprehendskillFieldNumber;
const int E_MountHuakun::kMPotentialFieldNumber;
const int E_MountHuakun::kMComprehendupitemFieldNumber;
const int E_MountHuakun::kMComprehendtypeFieldNumber;
const int E_MountHuakun::kMRatioFieldNumber;
const int E_MountHuakun::kMRatiopercentageFieldNumber;
const int E_MountHuakun::kMEquipsuitFieldNumber;
const int E_MountHuakun::kMQualitymaxFieldNumber;
const int E_MountHuakun::kMLilianchangeitemFieldNumber;
const int E_MountHuakun::kMUplvFieldNumber;
const int E_MountHuakun::kMMaterialFieldNumber;
const int E_MountHuakun::kMAdvanceFieldNumber;
const int E_MountHuakun::kMUpstaritemFieldNumber;
const int E_MountHuakun::kMUpstarnumFieldNumber;
const int E_MountHuakun::kMAttributeFieldNumber;
#endif  // !_MSC_VER

E_MountHuakun::E_MountHuakun()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_MountHuakun::InitAsDefaultInstance() {
}

E_MountHuakun::E_MountHuakun(const E_MountHuakun& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_MountHuakun::SharedCtor() {
  _cached_size_ = 0;
  m_id_ = 0;
  m_modelid_ = 0;
  m_quality_ = 0;
  m_speed_ = 0;
  m_uplvtype_ = 0;
  m_activateitem_ = 0;
  m_activateitemnum_ = 0;
  m_advancetype_ = 0;
  m_starvancetype_ = 0;
  m_starlimit_ = 0;
  m_starber_ = 0;
  m_skill_lg_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  m_skill_bd_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  m_soaringattributeid_ = 0;
  m_comprehend_ = 0;
  m_exclusive_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  m_comprehendskill_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  m_potential_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  m_comprehendupitem_ = 0;
  m_comprehendtype_ = 0;
  m_ratio_ = 0;
  m_ratiopercentage_ = 0;
  m_equipsuit_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  m_qualitymax_ = 0;
  m_lilianchangeitem_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_MountHuakun::~E_MountHuakun() {
  SharedDtor();
}

void E_MountHuakun::SharedDtor() {
  if (m_skill_lg_ != &::google::protobuf::internal::kEmptyString) {
    delete m_skill_lg_;
  }
  if (m_skill_bd_ != &::google::protobuf::internal::kEmptyString) {
    delete m_skill_bd_;
  }
  if (m_exclusive_ != &::google::protobuf::internal::kEmptyString) {
    delete m_exclusive_;
  }
  if (m_comprehendskill_ != &::google::protobuf::internal::kEmptyString) {
    delete m_comprehendskill_;
  }
  if (m_potential_ != &::google::protobuf::internal::kEmptyString) {
    delete m_potential_;
  }
  if (m_equipsuit_ != &::google::protobuf::internal::kEmptyString) {
    delete m_equipsuit_;
  }
  if (m_lilianchangeitem_ != &::google::protobuf::internal::kEmptyString) {
    delete m_lilianchangeitem_;
  }
  if (this != default_instance_) {
  }
}

void E_MountHuakun::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_MountHuakun::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_MountHuakun_descriptor_;
}

const E_MountHuakun& E_MountHuakun::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fMount_2eproto();
  return *default_instance_;
}

E_MountHuakun* E_MountHuakun::default_instance_ = NULL;

E_MountHuakun* E_MountHuakun::New() const {
  return new E_MountHuakun;
}

void E_MountHuakun::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_id_ = 0;
    m_modelid_ = 0;
    m_quality_ = 0;
    m_speed_ = 0;
    m_uplvtype_ = 0;
    m_activateitem_ = 0;
    m_activateitemnum_ = 0;
    m_advancetype_ = 0;
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    m_starvancetype_ = 0;
    m_starlimit_ = 0;
    m_starber_ = 0;
    if (has_m_skill_lg()) {
      if (m_skill_lg_ != &::google::protobuf::internal::kEmptyString) {
        m_skill_lg_->clear();
      }
    }
    if (has_m_skill_bd()) {
      if (m_skill_bd_ != &::google::protobuf::internal::kEmptyString) {
        m_skill_bd_->clear();
      }
    }
    m_soaringattributeid_ = 0;
    m_comprehend_ = 0;
    if (has_m_exclusive()) {
      if (m_exclusive_ != &::google::protobuf::internal::kEmptyString) {
        m_exclusive_->clear();
      }
    }
  }
  if (_has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    if (has_m_comprehendskill()) {
      if (m_comprehendskill_ != &::google::protobuf::internal::kEmptyString) {
        m_comprehendskill_->clear();
      }
    }
    if (has_m_potential()) {
      if (m_potential_ != &::google::protobuf::internal::kEmptyString) {
        m_potential_->clear();
      }
    }
    m_comprehendupitem_ = 0;
    m_comprehendtype_ = 0;
    m_ratio_ = 0;
    m_ratiopercentage_ = 0;
    if (has_m_equipsuit()) {
      if (m_equipsuit_ != &::google::protobuf::internal::kEmptyString) {
        m_equipsuit_->clear();
      }
    }
    m_qualitymax_ = 0;
  }
  if (_has_bits_[24 / 32] & (0xffu << (24 % 32))) {
    if (has_m_lilianchangeitem()) {
      if (m_lilianchangeitem_ != &::google::protobuf::internal::kEmptyString) {
        m_lilianchangeitem_->clear();
      }
    }
  }
  m_uplv_.Clear();
  m_material_.Clear();
  m_advance_.Clear();
  m_upstaritem_.Clear();
  m_upstarnum_.Clear();
  m_attribute_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_MountHuakun::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_id_)));
          set_has_m_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_modelid;
        break;
      }

      // optional int32 m_modelid = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_modelid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_modelid_)));
          set_has_m_modelid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_m_quality;
        break;
      }

      // optional int32 m_quality = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_quality:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_quality_)));
          set_has_m_quality();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_m_speed;
        break;
      }

      // optional int32 m_speed = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_speed:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_speed_)));
          set_has_m_speed();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_m_uplvtype;
        break;
      }

      // optional int32 m_uplvtype = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_uplvtype:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_uplvtype_)));
          set_has_m_uplvtype();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_m_activateitem;
        break;
      }

      // optional int32 m_activateitem = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_activateitem:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_activateitem_)));
          set_has_m_activateitem();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_m_activateitemnum;
        break;
      }

      // optional int32 m_activateitemnum = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_activateitemnum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_activateitemnum_)));
          set_has_m_activateitemnum();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(64)) goto parse_m_advancetype;
        break;
      }

      // optional int32 m_advancetype = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_advancetype:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_advancetype_)));
          set_has_m_advancetype();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(72)) goto parse_m_starvancetype;
        break;
      }

      // optional int32 m_starvancetype = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_starvancetype:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_starvancetype_)));
          set_has_m_starvancetype();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(80)) goto parse_m_starlimit;
        break;
      }

      // optional int32 m_starlimit = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_starlimit:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_starlimit_)));
          set_has_m_starlimit();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(88)) goto parse_m_starber;
        break;
      }

      // optional int32 m_starber = 11;
      case 11: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_starber:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_starber_)));
          set_has_m_starber();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(98)) goto parse_m_skill_lg;
        break;
      }

      // optional string m_skill_lg = 12;
      case 12: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_skill_lg:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_m_skill_lg()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->m_skill_lg().data(), this->m_skill_lg().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(106)) goto parse_m_skill_bd;
        break;
      }

      // optional string m_skill_bd = 13;
      case 13: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_skill_bd:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_m_skill_bd()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->m_skill_bd().data(), this->m_skill_bd().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(112)) goto parse_m_soaringattributeid;
        break;
      }

      // optional int32 m_soaringattributeid = 14;
      case 14: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_soaringattributeid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_soaringattributeid_)));
          set_has_m_soaringattributeid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(120)) goto parse_m_comprehend;
        break;
      }

      // optional int32 m_comprehend = 15;
      case 15: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_comprehend:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_comprehend_)));
          set_has_m_comprehend();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(130)) goto parse_m_exclusive;
        break;
      }

      // optional string m_exclusive = 16;
      case 16: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_exclusive:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_m_exclusive()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->m_exclusive().data(), this->m_exclusive().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(138)) goto parse_m_comprehendskill;
        break;
      }

      // optional string m_comprehendskill = 17;
      case 17: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_comprehendskill:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_m_comprehendskill()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->m_comprehendskill().data(), this->m_comprehendskill().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(146)) goto parse_m_potential;
        break;
      }

      // optional string m_potential = 18;
      case 18: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_potential:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_m_potential()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->m_potential().data(), this->m_potential().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(152)) goto parse_m_comprehendupitem;
        break;
      }

      // optional int32 m_comprehendupitem = 19;
      case 19: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_comprehendupitem:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_comprehendupitem_)));
          set_has_m_comprehendupitem();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(160)) goto parse_m_comprehendtype;
        break;
      }

      // optional int32 m_comprehendtype = 20;
      case 20: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_comprehendtype:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_comprehendtype_)));
          set_has_m_comprehendtype();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(168)) goto parse_m_ratio;
        break;
      }

      // optional int32 m_ratio = 21;
      case 21: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_ratio:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_ratio_)));
          set_has_m_ratio();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(176)) goto parse_m_ratiopercentage;
        break;
      }

      // optional int32 m_ratiopercentage = 22;
      case 22: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_ratiopercentage:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_ratiopercentage_)));
          set_has_m_ratiopercentage();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(186)) goto parse_m_equipsuit;
        break;
      }

      // optional string m_equipsuit = 23;
      case 23: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_equipsuit:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_m_equipsuit()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->m_equipsuit().data(), this->m_equipsuit().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(192)) goto parse_m_qualitymax;
        break;
      }

      // optional int32 m_qualitymax = 24;
      case 24: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_qualitymax:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_qualitymax_)));
          set_has_m_qualitymax();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(202)) goto parse_m_lilianchangeitem;
        break;
      }

      // optional string m_lilianchangeitem = 25;
      case 25: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_lilianchangeitem:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_m_lilianchangeitem()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->m_lilianchangeitem().data(), this->m_lilianchangeitem().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(210)) goto parse_m_uplv;
        break;
      }

      // repeated .proto_ff.E_MountHuakunUplvDesc m_uplv = 26;
      case 26: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_uplv:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_m_uplv()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(210)) goto parse_m_uplv;
        if (input->ExpectTag(218)) goto parse_m_material;
        break;
      }

      // repeated .proto_ff.E_MountHuakunMaterialDesc m_material = 27;
      case 27: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_material:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_m_material()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(218)) goto parse_m_material;
        if (input->ExpectTag(226)) goto parse_m_advance;
        break;
      }

      // repeated .proto_ff.E_MountHuakunAdvanceDesc m_advance = 28;
      case 28: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_advance:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_m_advance()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(226)) goto parse_m_advance;
        if (input->ExpectTag(232)) goto parse_m_upstaritem;
        break;
      }

      // repeated int32 m_upstaritem = 29;
      case 29: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_upstaritem:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 2, 232, input, this->mutable_m_upstaritem())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_m_upstaritem())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(232)) goto parse_m_upstaritem;
        if (input->ExpectTag(242)) goto parse_m_upstarnum;
        break;
      }

      // repeated string m_upstarnum = 30;
      case 30: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_upstarnum:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_m_upstarnum()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->m_upstarnum(this->m_upstarnum_size() - 1).data(),
            this->m_upstarnum(this->m_upstarnum_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(242)) goto parse_m_upstarnum;
        if (input->ExpectTag(250)) goto parse_m_attribute;
        break;
      }

      // repeated .proto_ff.E_MountHuakunAttributeDesc m_attribute = 31;
      case 31: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_attribute:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_m_attribute()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(250)) goto parse_m_attribute;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_MountHuakun::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_id(), output);
  }

  // optional int32 m_modelid = 2;
  if (has_m_modelid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_modelid(), output);
  }

  // optional int32 m_quality = 3;
  if (has_m_quality()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->m_quality(), output);
  }

  // optional int32 m_speed = 4;
  if (has_m_speed()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->m_speed(), output);
  }

  // optional int32 m_uplvtype = 5;
  if (has_m_uplvtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->m_uplvtype(), output);
  }

  // optional int32 m_activateitem = 6;
  if (has_m_activateitem()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->m_activateitem(), output);
  }

  // optional int32 m_activateitemnum = 7;
  if (has_m_activateitemnum()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->m_activateitemnum(), output);
  }

  // optional int32 m_advancetype = 8;
  if (has_m_advancetype()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->m_advancetype(), output);
  }

  // optional int32 m_starvancetype = 9;
  if (has_m_starvancetype()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->m_starvancetype(), output);
  }

  // optional int32 m_starlimit = 10;
  if (has_m_starlimit()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->m_starlimit(), output);
  }

  // optional int32 m_starber = 11;
  if (has_m_starber()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->m_starber(), output);
  }

  // optional string m_skill_lg = 12;
  if (has_m_skill_lg()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_skill_lg().data(), this->m_skill_lg().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      12, this->m_skill_lg(), output);
  }

  // optional string m_skill_bd = 13;
  if (has_m_skill_bd()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_skill_bd().data(), this->m_skill_bd().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      13, this->m_skill_bd(), output);
  }

  // optional int32 m_soaringattributeid = 14;
  if (has_m_soaringattributeid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(14, this->m_soaringattributeid(), output);
  }

  // optional int32 m_comprehend = 15;
  if (has_m_comprehend()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(15, this->m_comprehend(), output);
  }

  // optional string m_exclusive = 16;
  if (has_m_exclusive()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_exclusive().data(), this->m_exclusive().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      16, this->m_exclusive(), output);
  }

  // optional string m_comprehendskill = 17;
  if (has_m_comprehendskill()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_comprehendskill().data(), this->m_comprehendskill().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      17, this->m_comprehendskill(), output);
  }

  // optional string m_potential = 18;
  if (has_m_potential()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_potential().data(), this->m_potential().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      18, this->m_potential(), output);
  }

  // optional int32 m_comprehendupitem = 19;
  if (has_m_comprehendupitem()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(19, this->m_comprehendupitem(), output);
  }

  // optional int32 m_comprehendtype = 20;
  if (has_m_comprehendtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(20, this->m_comprehendtype(), output);
  }

  // optional int32 m_ratio = 21;
  if (has_m_ratio()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(21, this->m_ratio(), output);
  }

  // optional int32 m_ratiopercentage = 22;
  if (has_m_ratiopercentage()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(22, this->m_ratiopercentage(), output);
  }

  // optional string m_equipsuit = 23;
  if (has_m_equipsuit()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_equipsuit().data(), this->m_equipsuit().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      23, this->m_equipsuit(), output);
  }

  // optional int32 m_qualitymax = 24;
  if (has_m_qualitymax()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(24, this->m_qualitymax(), output);
  }

  // optional string m_lilianchangeitem = 25;
  if (has_m_lilianchangeitem()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_lilianchangeitem().data(), this->m_lilianchangeitem().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      25, this->m_lilianchangeitem(), output);
  }

  // repeated .proto_ff.E_MountHuakunUplvDesc m_uplv = 26;
  for (int i = 0; i < this->m_uplv_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      26, this->m_uplv(i), output);
  }

  // repeated .proto_ff.E_MountHuakunMaterialDesc m_material = 27;
  for (int i = 0; i < this->m_material_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      27, this->m_material(i), output);
  }

  // repeated .proto_ff.E_MountHuakunAdvanceDesc m_advance = 28;
  for (int i = 0; i < this->m_advance_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      28, this->m_advance(i), output);
  }

  // repeated int32 m_upstaritem = 29;
  for (int i = 0; i < this->m_upstaritem_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      29, this->m_upstaritem(i), output);
  }

  // repeated string m_upstarnum = 30;
  for (int i = 0; i < this->m_upstarnum_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8String(
    this->m_upstarnum(i).data(), this->m_upstarnum(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      30, this->m_upstarnum(i), output);
  }

  // repeated .proto_ff.E_MountHuakunAttributeDesc m_attribute = 31;
  for (int i = 0; i < this->m_attribute_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      31, this->m_attribute(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_MountHuakun::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_id(), target);
  }

  // optional int32 m_modelid = 2;
  if (has_m_modelid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_modelid(), target);
  }

  // optional int32 m_quality = 3;
  if (has_m_quality()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->m_quality(), target);
  }

  // optional int32 m_speed = 4;
  if (has_m_speed()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->m_speed(), target);
  }

  // optional int32 m_uplvtype = 5;
  if (has_m_uplvtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->m_uplvtype(), target);
  }

  // optional int32 m_activateitem = 6;
  if (has_m_activateitem()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->m_activateitem(), target);
  }

  // optional int32 m_activateitemnum = 7;
  if (has_m_activateitemnum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->m_activateitemnum(), target);
  }

  // optional int32 m_advancetype = 8;
  if (has_m_advancetype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->m_advancetype(), target);
  }

  // optional int32 m_starvancetype = 9;
  if (has_m_starvancetype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->m_starvancetype(), target);
  }

  // optional int32 m_starlimit = 10;
  if (has_m_starlimit()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->m_starlimit(), target);
  }

  // optional int32 m_starber = 11;
  if (has_m_starber()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->m_starber(), target);
  }

  // optional string m_skill_lg = 12;
  if (has_m_skill_lg()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_skill_lg().data(), this->m_skill_lg().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->m_skill_lg(), target);
  }

  // optional string m_skill_bd = 13;
  if (has_m_skill_bd()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_skill_bd().data(), this->m_skill_bd().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        13, this->m_skill_bd(), target);
  }

  // optional int32 m_soaringattributeid = 14;
  if (has_m_soaringattributeid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(14, this->m_soaringattributeid(), target);
  }

  // optional int32 m_comprehend = 15;
  if (has_m_comprehend()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(15, this->m_comprehend(), target);
  }

  // optional string m_exclusive = 16;
  if (has_m_exclusive()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_exclusive().data(), this->m_exclusive().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        16, this->m_exclusive(), target);
  }

  // optional string m_comprehendskill = 17;
  if (has_m_comprehendskill()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_comprehendskill().data(), this->m_comprehendskill().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        17, this->m_comprehendskill(), target);
  }

  // optional string m_potential = 18;
  if (has_m_potential()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_potential().data(), this->m_potential().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        18, this->m_potential(), target);
  }

  // optional int32 m_comprehendupitem = 19;
  if (has_m_comprehendupitem()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(19, this->m_comprehendupitem(), target);
  }

  // optional int32 m_comprehendtype = 20;
  if (has_m_comprehendtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(20, this->m_comprehendtype(), target);
  }

  // optional int32 m_ratio = 21;
  if (has_m_ratio()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(21, this->m_ratio(), target);
  }

  // optional int32 m_ratiopercentage = 22;
  if (has_m_ratiopercentage()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(22, this->m_ratiopercentage(), target);
  }

  // optional string m_equipsuit = 23;
  if (has_m_equipsuit()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_equipsuit().data(), this->m_equipsuit().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        23, this->m_equipsuit(), target);
  }

  // optional int32 m_qualitymax = 24;
  if (has_m_qualitymax()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(24, this->m_qualitymax(), target);
  }

  // optional string m_lilianchangeitem = 25;
  if (has_m_lilianchangeitem()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_lilianchangeitem().data(), this->m_lilianchangeitem().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        25, this->m_lilianchangeitem(), target);
  }

  // repeated .proto_ff.E_MountHuakunUplvDesc m_uplv = 26;
  for (int i = 0; i < this->m_uplv_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        26, this->m_uplv(i), target);
  }

  // repeated .proto_ff.E_MountHuakunMaterialDesc m_material = 27;
  for (int i = 0; i < this->m_material_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        27, this->m_material(i), target);
  }

  // repeated .proto_ff.E_MountHuakunAdvanceDesc m_advance = 28;
  for (int i = 0; i < this->m_advance_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        28, this->m_advance(i), target);
  }

  // repeated int32 m_upstaritem = 29;
  for (int i = 0; i < this->m_upstaritem_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(29, this->m_upstaritem(i), target);
  }

  // repeated string m_upstarnum = 30;
  for (int i = 0; i < this->m_upstarnum_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_upstarnum(i).data(), this->m_upstarnum(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(30, this->m_upstarnum(i), target);
  }

  // repeated .proto_ff.E_MountHuakunAttributeDesc m_attribute = 31;
  for (int i = 0; i < this->m_attribute_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        31, this->m_attribute(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_MountHuakun::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_id = 1;
    if (has_m_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_id());
    }

    // optional int32 m_modelid = 2;
    if (has_m_modelid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_modelid());
    }

    // optional int32 m_quality = 3;
    if (has_m_quality()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_quality());
    }

    // optional int32 m_speed = 4;
    if (has_m_speed()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_speed());
    }

    // optional int32 m_uplvtype = 5;
    if (has_m_uplvtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_uplvtype());
    }

    // optional int32 m_activateitem = 6;
    if (has_m_activateitem()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_activateitem());
    }

    // optional int32 m_activateitemnum = 7;
    if (has_m_activateitemnum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_activateitemnum());
    }

    // optional int32 m_advancetype = 8;
    if (has_m_advancetype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_advancetype());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional int32 m_starvancetype = 9;
    if (has_m_starvancetype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_starvancetype());
    }

    // optional int32 m_starlimit = 10;
    if (has_m_starlimit()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_starlimit());
    }

    // optional int32 m_starber = 11;
    if (has_m_starber()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_starber());
    }

    // optional string m_skill_lg = 12;
    if (has_m_skill_lg()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->m_skill_lg());
    }

    // optional string m_skill_bd = 13;
    if (has_m_skill_bd()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->m_skill_bd());
    }

    // optional int32 m_soaringattributeid = 14;
    if (has_m_soaringattributeid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_soaringattributeid());
    }

    // optional int32 m_comprehend = 15;
    if (has_m_comprehend()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_comprehend());
    }

    // optional string m_exclusive = 16;
    if (has_m_exclusive()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->m_exclusive());
    }

  }
  if (_has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    // optional string m_comprehendskill = 17;
    if (has_m_comprehendskill()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->m_comprehendskill());
    }

    // optional string m_potential = 18;
    if (has_m_potential()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->m_potential());
    }

    // optional int32 m_comprehendupitem = 19;
    if (has_m_comprehendupitem()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_comprehendupitem());
    }

    // optional int32 m_comprehendtype = 20;
    if (has_m_comprehendtype()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_comprehendtype());
    }

    // optional int32 m_ratio = 21;
    if (has_m_ratio()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_ratio());
    }

    // optional int32 m_ratiopercentage = 22;
    if (has_m_ratiopercentage()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_ratiopercentage());
    }

    // optional string m_equipsuit = 23;
    if (has_m_equipsuit()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->m_equipsuit());
    }

    // optional int32 m_qualitymax = 24;
    if (has_m_qualitymax()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_qualitymax());
    }

  }
  if (_has_bits_[24 / 32] & (0xffu << (24 % 32))) {
    // optional string m_lilianchangeitem = 25;
    if (has_m_lilianchangeitem()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->m_lilianchangeitem());
    }

  }
  // repeated .proto_ff.E_MountHuakunUplvDesc m_uplv = 26;
  total_size += 2 * this->m_uplv_size();
  for (int i = 0; i < this->m_uplv_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->m_uplv(i));
  }

  // repeated .proto_ff.E_MountHuakunMaterialDesc m_material = 27;
  total_size += 2 * this->m_material_size();
  for (int i = 0; i < this->m_material_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->m_material(i));
  }

  // repeated .proto_ff.E_MountHuakunAdvanceDesc m_advance = 28;
  total_size += 2 * this->m_advance_size();
  for (int i = 0; i < this->m_advance_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->m_advance(i));
  }

  // repeated int32 m_upstaritem = 29;
  {
    int data_size = 0;
    for (int i = 0; i < this->m_upstaritem_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->m_upstaritem(i));
    }
    total_size += 2 * this->m_upstaritem_size() + data_size;
  }

  // repeated string m_upstarnum = 30;
  total_size += 2 * this->m_upstarnum_size();
  for (int i = 0; i < this->m_upstarnum_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->m_upstarnum(i));
  }

  // repeated .proto_ff.E_MountHuakunAttributeDesc m_attribute = 31;
  total_size += 2 * this->m_attribute_size();
  for (int i = 0; i < this->m_attribute_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->m_attribute(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_MountHuakun::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_MountHuakun* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_MountHuakun*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_MountHuakun::MergeFrom(const E_MountHuakun& from) {
  GOOGLE_CHECK_NE(&from, this);
  m_uplv_.MergeFrom(from.m_uplv_);
  m_material_.MergeFrom(from.m_material_);
  m_advance_.MergeFrom(from.m_advance_);
  m_upstaritem_.MergeFrom(from.m_upstaritem_);
  m_upstarnum_.MergeFrom(from.m_upstarnum_);
  m_attribute_.MergeFrom(from.m_attribute_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_id()) {
      set_m_id(from.m_id());
    }
    if (from.has_m_modelid()) {
      set_m_modelid(from.m_modelid());
    }
    if (from.has_m_quality()) {
      set_m_quality(from.m_quality());
    }
    if (from.has_m_speed()) {
      set_m_speed(from.m_speed());
    }
    if (from.has_m_uplvtype()) {
      set_m_uplvtype(from.m_uplvtype());
    }
    if (from.has_m_activateitem()) {
      set_m_activateitem(from.m_activateitem());
    }
    if (from.has_m_activateitemnum()) {
      set_m_activateitemnum(from.m_activateitemnum());
    }
    if (from.has_m_advancetype()) {
      set_m_advancetype(from.m_advancetype());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_m_starvancetype()) {
      set_m_starvancetype(from.m_starvancetype());
    }
    if (from.has_m_starlimit()) {
      set_m_starlimit(from.m_starlimit());
    }
    if (from.has_m_starber()) {
      set_m_starber(from.m_starber());
    }
    if (from.has_m_skill_lg()) {
      set_m_skill_lg(from.m_skill_lg());
    }
    if (from.has_m_skill_bd()) {
      set_m_skill_bd(from.m_skill_bd());
    }
    if (from.has_m_soaringattributeid()) {
      set_m_soaringattributeid(from.m_soaringattributeid());
    }
    if (from.has_m_comprehend()) {
      set_m_comprehend(from.m_comprehend());
    }
    if (from.has_m_exclusive()) {
      set_m_exclusive(from.m_exclusive());
    }
  }
  if (from._has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    if (from.has_m_comprehendskill()) {
      set_m_comprehendskill(from.m_comprehendskill());
    }
    if (from.has_m_potential()) {
      set_m_potential(from.m_potential());
    }
    if (from.has_m_comprehendupitem()) {
      set_m_comprehendupitem(from.m_comprehendupitem());
    }
    if (from.has_m_comprehendtype()) {
      set_m_comprehendtype(from.m_comprehendtype());
    }
    if (from.has_m_ratio()) {
      set_m_ratio(from.m_ratio());
    }
    if (from.has_m_ratiopercentage()) {
      set_m_ratiopercentage(from.m_ratiopercentage());
    }
    if (from.has_m_equipsuit()) {
      set_m_equipsuit(from.m_equipsuit());
    }
    if (from.has_m_qualitymax()) {
      set_m_qualitymax(from.m_qualitymax());
    }
  }
  if (from._has_bits_[24 / 32] & (0xffu << (24 % 32))) {
    if (from.has_m_lilianchangeitem()) {
      set_m_lilianchangeitem(from.m_lilianchangeitem());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_MountHuakun::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_MountHuakun::CopyFrom(const E_MountHuakun& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_MountHuakun::IsInitialized() const {

  return true;
}

void E_MountHuakun::Swap(E_MountHuakun* other) {
  if (other != this) {
    std::swap(m_id_, other->m_id_);
    std::swap(m_modelid_, other->m_modelid_);
    std::swap(m_quality_, other->m_quality_);
    std::swap(m_speed_, other->m_speed_);
    std::swap(m_uplvtype_, other->m_uplvtype_);
    std::swap(m_activateitem_, other->m_activateitem_);
    std::swap(m_activateitemnum_, other->m_activateitemnum_);
    std::swap(m_advancetype_, other->m_advancetype_);
    std::swap(m_starvancetype_, other->m_starvancetype_);
    std::swap(m_starlimit_, other->m_starlimit_);
    std::swap(m_starber_, other->m_starber_);
    std::swap(m_skill_lg_, other->m_skill_lg_);
    std::swap(m_skill_bd_, other->m_skill_bd_);
    std::swap(m_soaringattributeid_, other->m_soaringattributeid_);
    std::swap(m_comprehend_, other->m_comprehend_);
    std::swap(m_exclusive_, other->m_exclusive_);
    std::swap(m_comprehendskill_, other->m_comprehendskill_);
    std::swap(m_potential_, other->m_potential_);
    std::swap(m_comprehendupitem_, other->m_comprehendupitem_);
    std::swap(m_comprehendtype_, other->m_comprehendtype_);
    std::swap(m_ratio_, other->m_ratio_);
    std::swap(m_ratiopercentage_, other->m_ratiopercentage_);
    std::swap(m_equipsuit_, other->m_equipsuit_);
    std::swap(m_qualitymax_, other->m_qualitymax_);
    std::swap(m_lilianchangeitem_, other->m_lilianchangeitem_);
    m_uplv_.Swap(&other->m_uplv_);
    m_material_.Swap(&other->m_material_);
    m_advance_.Swap(&other->m_advance_);
    m_upstaritem_.Swap(&other->m_upstaritem_);
    m_upstarnum_.Swap(&other->m_upstarnum_);
    m_attribute_.Swap(&other->m_attribute_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_MountHuakun::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_MountHuakun_descriptor_;
  metadata.reflection = E_MountHuakun_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_MountHuakun::kEMountHuakunListFieldNumber;
#endif  // !_MSC_VER

Sheet_MountHuakun::Sheet_MountHuakun()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_MountHuakun::InitAsDefaultInstance() {
}

Sheet_MountHuakun::Sheet_MountHuakun(const Sheet_MountHuakun& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_MountHuakun::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_MountHuakun::~Sheet_MountHuakun() {
  SharedDtor();
}

void Sheet_MountHuakun::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_MountHuakun::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_MountHuakun::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_MountHuakun_descriptor_;
}

const Sheet_MountHuakun& Sheet_MountHuakun::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fMount_2eproto();
  return *default_instance_;
}

Sheet_MountHuakun* Sheet_MountHuakun::default_instance_ = NULL;

Sheet_MountHuakun* Sheet_MountHuakun::New() const {
  return new Sheet_MountHuakun;
}

void Sheet_MountHuakun::Clear() {
  e_mounthuakun_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_MountHuakun::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.E_MountHuakun E_MountHuakun_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_E_MountHuakun_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_e_mounthuakun_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_E_MountHuakun_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_MountHuakun::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.E_MountHuakun E_MountHuakun_List = 1;
  for (int i = 0; i < this->e_mounthuakun_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->e_mounthuakun_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_MountHuakun::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.E_MountHuakun E_MountHuakun_List = 1;
  for (int i = 0; i < this->e_mounthuakun_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->e_mounthuakun_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_MountHuakun::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.E_MountHuakun E_MountHuakun_List = 1;
  total_size += 1 * this->e_mounthuakun_list_size();
  for (int i = 0; i < this->e_mounthuakun_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->e_mounthuakun_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_MountHuakun::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_MountHuakun* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_MountHuakun*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_MountHuakun::MergeFrom(const Sheet_MountHuakun& from) {
  GOOGLE_CHECK_NE(&from, this);
  e_mounthuakun_list_.MergeFrom(from.e_mounthuakun_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_MountHuakun::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_MountHuakun::CopyFrom(const Sheet_MountHuakun& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_MountHuakun::IsInitialized() const {

  return true;
}

void Sheet_MountHuakun::Swap(Sheet_MountHuakun* other) {
  if (other != this) {
    e_mounthuakun_list_.Swap(&other->e_mounthuakun_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_MountHuakun::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_MountHuakun_descriptor_;
  metadata.reflection = Sheet_MountHuakun_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_MountHuakun_valueAttributeDesc::kMValueFieldNumber;
const int E_MountHuakun_valueAttributeDesc::kMTypeFieldNumber;
#endif  // !_MSC_VER

E_MountHuakun_valueAttributeDesc::E_MountHuakun_valueAttributeDesc()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_MountHuakun_valueAttributeDesc::InitAsDefaultInstance() {
}

E_MountHuakun_valueAttributeDesc::E_MountHuakun_valueAttributeDesc(const E_MountHuakun_valueAttributeDesc& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_MountHuakun_valueAttributeDesc::SharedCtor() {
  _cached_size_ = 0;
  m_value_ = 0;
  m_type_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_MountHuakun_valueAttributeDesc::~E_MountHuakun_valueAttributeDesc() {
  SharedDtor();
}

void E_MountHuakun_valueAttributeDesc::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_MountHuakun_valueAttributeDesc::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_MountHuakun_valueAttributeDesc::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_MountHuakun_valueAttributeDesc_descriptor_;
}

const E_MountHuakun_valueAttributeDesc& E_MountHuakun_valueAttributeDesc::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fMount_2eproto();
  return *default_instance_;
}

E_MountHuakun_valueAttributeDesc* E_MountHuakun_valueAttributeDesc::default_instance_ = NULL;

E_MountHuakun_valueAttributeDesc* E_MountHuakun_valueAttributeDesc::New() const {
  return new E_MountHuakun_valueAttributeDesc;
}

void E_MountHuakun_valueAttributeDesc::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_value_ = 0;
    m_type_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_MountHuakun_valueAttributeDesc::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_value = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_value_)));
          set_has_m_value();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_type;
        break;
      }

      // optional int32 m_type = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_type_)));
          set_has_m_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_MountHuakun_valueAttributeDesc::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_value = 1;
  if (has_m_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_value(), output);
  }

  // optional int32 m_type = 2;
  if (has_m_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_type(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_MountHuakun_valueAttributeDesc::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_value = 1;
  if (has_m_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_value(), target);
  }

  // optional int32 m_type = 2;
  if (has_m_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_type(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_MountHuakun_valueAttributeDesc::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_value = 1;
    if (has_m_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_value());
    }

    // optional int32 m_type = 2;
    if (has_m_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_type());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_MountHuakun_valueAttributeDesc::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_MountHuakun_valueAttributeDesc* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_MountHuakun_valueAttributeDesc*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_MountHuakun_valueAttributeDesc::MergeFrom(const E_MountHuakun_valueAttributeDesc& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_value()) {
      set_m_value(from.m_value());
    }
    if (from.has_m_type()) {
      set_m_type(from.m_type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_MountHuakun_valueAttributeDesc::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_MountHuakun_valueAttributeDesc::CopyFrom(const E_MountHuakun_valueAttributeDesc& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_MountHuakun_valueAttributeDesc::IsInitialized() const {

  return true;
}

void E_MountHuakun_valueAttributeDesc::Swap(E_MountHuakun_valueAttributeDesc* other) {
  if (other != this) {
    std::swap(m_value_, other->m_value_);
    std::swap(m_type_, other->m_type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_MountHuakun_valueAttributeDesc::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_MountHuakun_valueAttributeDesc_descriptor_;
  metadata.reflection = E_MountHuakun_valueAttributeDesc_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_MountHuakun_value::kMIdFieldNumber;
const int E_MountHuakun_value::kMHuakuntypeFieldNumber;
const int E_MountHuakun_value::kMHuakunlvFieldNumber;
const int E_MountHuakun_value::kMHuakunexpFieldNumber;
const int E_MountHuakun_value::kMAttributeFieldNumber;
#endif  // !_MSC_VER

E_MountHuakun_value::E_MountHuakun_value()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_MountHuakun_value::InitAsDefaultInstance() {
}

E_MountHuakun_value::E_MountHuakun_value(const E_MountHuakun_value& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_MountHuakun_value::SharedCtor() {
  _cached_size_ = 0;
  m_id_ = GOOGLE_LONGLONG(0);
  m_huakuntype_ = 0;
  m_huakunlv_ = 0;
  m_huakunexp_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_MountHuakun_value::~E_MountHuakun_value() {
  SharedDtor();
}

void E_MountHuakun_value::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_MountHuakun_value::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_MountHuakun_value::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_MountHuakun_value_descriptor_;
}

const E_MountHuakun_value& E_MountHuakun_value::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fMount_2eproto();
  return *default_instance_;
}

E_MountHuakun_value* E_MountHuakun_value::default_instance_ = NULL;

E_MountHuakun_value* E_MountHuakun_value::New() const {
  return new E_MountHuakun_value;
}

void E_MountHuakun_value::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_id_ = GOOGLE_LONGLONG(0);
    m_huakuntype_ = 0;
    m_huakunlv_ = 0;
    m_huakunexp_ = 0;
  }
  m_attribute_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_MountHuakun_value::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 m_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &m_id_)));
          set_has_m_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_huakuntype;
        break;
      }

      // optional int32 m_huakuntype = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_huakuntype:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_huakuntype_)));
          set_has_m_huakuntype();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_m_huakunlv;
        break;
      }

      // optional int32 m_huakunlv = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_huakunlv:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_huakunlv_)));
          set_has_m_huakunlv();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_m_huakunexp;
        break;
      }

      // optional int32 m_huakunexp = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_huakunexp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_huakunexp_)));
          set_has_m_huakunexp();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_m_attribute;
        break;
      }

      // repeated .proto_ff.E_MountHuakun_valueAttributeDesc m_attribute = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_attribute:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_m_attribute()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_m_attribute;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_MountHuakun_value::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 m_id = 1;
  if (has_m_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->m_id(), output);
  }

  // optional int32 m_huakuntype = 2;
  if (has_m_huakuntype()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_huakuntype(), output);
  }

  // optional int32 m_huakunlv = 3;
  if (has_m_huakunlv()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->m_huakunlv(), output);
  }

  // optional int32 m_huakunexp = 4;
  if (has_m_huakunexp()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->m_huakunexp(), output);
  }

  // repeated .proto_ff.E_MountHuakun_valueAttributeDesc m_attribute = 5;
  for (int i = 0; i < this->m_attribute_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->m_attribute(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_MountHuakun_value::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 m_id = 1;
  if (has_m_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->m_id(), target);
  }

  // optional int32 m_huakuntype = 2;
  if (has_m_huakuntype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_huakuntype(), target);
  }

  // optional int32 m_huakunlv = 3;
  if (has_m_huakunlv()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->m_huakunlv(), target);
  }

  // optional int32 m_huakunexp = 4;
  if (has_m_huakunexp()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->m_huakunexp(), target);
  }

  // repeated .proto_ff.E_MountHuakun_valueAttributeDesc m_attribute = 5;
  for (int i = 0; i < this->m_attribute_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->m_attribute(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_MountHuakun_value::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 m_id = 1;
    if (has_m_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->m_id());
    }

    // optional int32 m_huakuntype = 2;
    if (has_m_huakuntype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_huakuntype());
    }

    // optional int32 m_huakunlv = 3;
    if (has_m_huakunlv()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_huakunlv());
    }

    // optional int32 m_huakunexp = 4;
    if (has_m_huakunexp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_huakunexp());
    }

  }
  // repeated .proto_ff.E_MountHuakun_valueAttributeDesc m_attribute = 5;
  total_size += 1 * this->m_attribute_size();
  for (int i = 0; i < this->m_attribute_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->m_attribute(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_MountHuakun_value::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_MountHuakun_value* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_MountHuakun_value*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_MountHuakun_value::MergeFrom(const E_MountHuakun_value& from) {
  GOOGLE_CHECK_NE(&from, this);
  m_attribute_.MergeFrom(from.m_attribute_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_id()) {
      set_m_id(from.m_id());
    }
    if (from.has_m_huakuntype()) {
      set_m_huakuntype(from.m_huakuntype());
    }
    if (from.has_m_huakunlv()) {
      set_m_huakunlv(from.m_huakunlv());
    }
    if (from.has_m_huakunexp()) {
      set_m_huakunexp(from.m_huakunexp());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_MountHuakun_value::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_MountHuakun_value::CopyFrom(const E_MountHuakun_value& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_MountHuakun_value::IsInitialized() const {

  return true;
}

void E_MountHuakun_value::Swap(E_MountHuakun_value* other) {
  if (other != this) {
    std::swap(m_id_, other->m_id_);
    std::swap(m_huakuntype_, other->m_huakuntype_);
    std::swap(m_huakunlv_, other->m_huakunlv_);
    std::swap(m_huakunexp_, other->m_huakunexp_);
    m_attribute_.Swap(&other->m_attribute_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_MountHuakun_value::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_MountHuakun_value_descriptor_;
  metadata.reflection = E_MountHuakun_value_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_MountHuakun_value::kEMountHuakunValueListFieldNumber;
#endif  // !_MSC_VER

Sheet_MountHuakun_value::Sheet_MountHuakun_value()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_MountHuakun_value::InitAsDefaultInstance() {
}

Sheet_MountHuakun_value::Sheet_MountHuakun_value(const Sheet_MountHuakun_value& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_MountHuakun_value::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_MountHuakun_value::~Sheet_MountHuakun_value() {
  SharedDtor();
}

void Sheet_MountHuakun_value::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_MountHuakun_value::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_MountHuakun_value::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_MountHuakun_value_descriptor_;
}

const Sheet_MountHuakun_value& Sheet_MountHuakun_value::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fMount_2eproto();
  return *default_instance_;
}

Sheet_MountHuakun_value* Sheet_MountHuakun_value::default_instance_ = NULL;

Sheet_MountHuakun_value* Sheet_MountHuakun_value::New() const {
  return new Sheet_MountHuakun_value;
}

void Sheet_MountHuakun_value::Clear() {
  e_mounthuakun_value_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_MountHuakun_value::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.E_MountHuakun_value E_MountHuakun_value_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_E_MountHuakun_value_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_e_mounthuakun_value_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_E_MountHuakun_value_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_MountHuakun_value::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.E_MountHuakun_value E_MountHuakun_value_List = 1;
  for (int i = 0; i < this->e_mounthuakun_value_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->e_mounthuakun_value_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_MountHuakun_value::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.E_MountHuakun_value E_MountHuakun_value_List = 1;
  for (int i = 0; i < this->e_mounthuakun_value_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->e_mounthuakun_value_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_MountHuakun_value::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.E_MountHuakun_value E_MountHuakun_value_List = 1;
  total_size += 1 * this->e_mounthuakun_value_list_size();
  for (int i = 0; i < this->e_mounthuakun_value_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->e_mounthuakun_value_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_MountHuakun_value::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_MountHuakun_value* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_MountHuakun_value*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_MountHuakun_value::MergeFrom(const Sheet_MountHuakun_value& from) {
  GOOGLE_CHECK_NE(&from, this);
  e_mounthuakun_value_list_.MergeFrom(from.e_mounthuakun_value_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_MountHuakun_value::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_MountHuakun_value::CopyFrom(const Sheet_MountHuakun_value& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_MountHuakun_value::IsInitialized() const {

  return true;
}

void Sheet_MountHuakun_value::Swap(Sheet_MountHuakun_value* other) {
  if (other != this) {
    e_mounthuakun_value_list_.Swap(&other->e_mounthuakun_value_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_MountHuakun_value::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_MountHuakun_value_descriptor_;
  metadata.reflection = Sheet_MountHuakun_value_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_MountHuakun_advancevalueItemDesc::kMNumFieldNumber;
const int E_MountHuakun_advancevalueItemDesc::kMIdFieldNumber;
#endif  // !_MSC_VER

E_MountHuakun_advancevalueItemDesc::E_MountHuakun_advancevalueItemDesc()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_MountHuakun_advancevalueItemDesc::InitAsDefaultInstance() {
}

E_MountHuakun_advancevalueItemDesc::E_MountHuakun_advancevalueItemDesc(const E_MountHuakun_advancevalueItemDesc& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_MountHuakun_advancevalueItemDesc::SharedCtor() {
  _cached_size_ = 0;
  m_num_ = 0;
  m_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_MountHuakun_advancevalueItemDesc::~E_MountHuakun_advancevalueItemDesc() {
  SharedDtor();
}

void E_MountHuakun_advancevalueItemDesc::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_MountHuakun_advancevalueItemDesc::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_MountHuakun_advancevalueItemDesc::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_MountHuakun_advancevalueItemDesc_descriptor_;
}

const E_MountHuakun_advancevalueItemDesc& E_MountHuakun_advancevalueItemDesc::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fMount_2eproto();
  return *default_instance_;
}

E_MountHuakun_advancevalueItemDesc* E_MountHuakun_advancevalueItemDesc::default_instance_ = NULL;

E_MountHuakun_advancevalueItemDesc* E_MountHuakun_advancevalueItemDesc::New() const {
  return new E_MountHuakun_advancevalueItemDesc;
}

void E_MountHuakun_advancevalueItemDesc::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_num_ = 0;
    m_id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_MountHuakun_advancevalueItemDesc::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_num = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_num_)));
          set_has_m_num();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_id;
        break;
      }

      // optional int32 m_id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_id_)));
          set_has_m_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_MountHuakun_advancevalueItemDesc::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_num = 1;
  if (has_m_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_num(), output);
  }

  // optional int32 m_id = 2;
  if (has_m_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_MountHuakun_advancevalueItemDesc::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_num = 1;
  if (has_m_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_num(), target);
  }

  // optional int32 m_id = 2;
  if (has_m_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_MountHuakun_advancevalueItemDesc::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_num = 1;
    if (has_m_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_num());
    }

    // optional int32 m_id = 2;
    if (has_m_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_id());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_MountHuakun_advancevalueItemDesc::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_MountHuakun_advancevalueItemDesc* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_MountHuakun_advancevalueItemDesc*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_MountHuakun_advancevalueItemDesc::MergeFrom(const E_MountHuakun_advancevalueItemDesc& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_num()) {
      set_m_num(from.m_num());
    }
    if (from.has_m_id()) {
      set_m_id(from.m_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_MountHuakun_advancevalueItemDesc::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_MountHuakun_advancevalueItemDesc::CopyFrom(const E_MountHuakun_advancevalueItemDesc& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_MountHuakun_advancevalueItemDesc::IsInitialized() const {

  return true;
}

void E_MountHuakun_advancevalueItemDesc::Swap(E_MountHuakun_advancevalueItemDesc* other) {
  if (other != this) {
    std::swap(m_num_, other->m_num_);
    std::swap(m_id_, other->m_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_MountHuakun_advancevalueItemDesc::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_MountHuakun_advancevalueItemDesc_descriptor_;
  metadata.reflection = E_MountHuakun_advancevalueItemDesc_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_MountHuakun_advancevalue::kMIdFieldNumber;
const int E_MountHuakun_advancevalue::kMLvFieldNumber;
const int E_MountHuakun_advancevalue::kMAdvancetypeFieldNumber;
const int E_MountHuakun_advancevalue::kMWinprobFieldNumber;
const int E_MountHuakun_advancevalue::kMFaillvFieldNumber;
const int E_MountHuakun_advancevalue::kMItemFieldNumber;
#endif  // !_MSC_VER

E_MountHuakun_advancevalue::E_MountHuakun_advancevalue()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_MountHuakun_advancevalue::InitAsDefaultInstance() {
}

E_MountHuakun_advancevalue::E_MountHuakun_advancevalue(const E_MountHuakun_advancevalue& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_MountHuakun_advancevalue::SharedCtor() {
  _cached_size_ = 0;
  m_id_ = 0;
  m_lv_ = 0;
  m_advancetype_ = 0;
  m_winprob_ = 0;
  m_faillv_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_MountHuakun_advancevalue::~E_MountHuakun_advancevalue() {
  SharedDtor();
}

void E_MountHuakun_advancevalue::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_MountHuakun_advancevalue::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_MountHuakun_advancevalue::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_MountHuakun_advancevalue_descriptor_;
}

const E_MountHuakun_advancevalue& E_MountHuakun_advancevalue::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fMount_2eproto();
  return *default_instance_;
}

E_MountHuakun_advancevalue* E_MountHuakun_advancevalue::default_instance_ = NULL;

E_MountHuakun_advancevalue* E_MountHuakun_advancevalue::New() const {
  return new E_MountHuakun_advancevalue;
}

void E_MountHuakun_advancevalue::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_id_ = 0;
    m_lv_ = 0;
    m_advancetype_ = 0;
    m_winprob_ = 0;
    m_faillv_ = 0;
  }
  m_item_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_MountHuakun_advancevalue::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_id_)));
          set_has_m_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_lv;
        break;
      }

      // optional int32 m_lv = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_lv:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_lv_)));
          set_has_m_lv();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_m_advancetype;
        break;
      }

      // optional int32 m_advancetype = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_advancetype:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_advancetype_)));
          set_has_m_advancetype();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_m_winprob;
        break;
      }

      // optional int32 m_winprob = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_winprob:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_winprob_)));
          set_has_m_winprob();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_m_faillv;
        break;
      }

      // optional int32 m_faillv = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_faillv:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_faillv_)));
          set_has_m_faillv();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_m_item;
        break;
      }

      // repeated .proto_ff.E_MountHuakun_advancevalueItemDesc m_item = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_item:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_m_item()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_m_item;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_MountHuakun_advancevalue::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_id(), output);
  }

  // optional int32 m_lv = 2;
  if (has_m_lv()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_lv(), output);
  }

  // optional int32 m_advancetype = 3;
  if (has_m_advancetype()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->m_advancetype(), output);
  }

  // optional int32 m_winprob = 4;
  if (has_m_winprob()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->m_winprob(), output);
  }

  // optional int32 m_faillv = 5;
  if (has_m_faillv()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->m_faillv(), output);
  }

  // repeated .proto_ff.E_MountHuakun_advancevalueItemDesc m_item = 6;
  for (int i = 0; i < this->m_item_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->m_item(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_MountHuakun_advancevalue::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_id(), target);
  }

  // optional int32 m_lv = 2;
  if (has_m_lv()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_lv(), target);
  }

  // optional int32 m_advancetype = 3;
  if (has_m_advancetype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->m_advancetype(), target);
  }

  // optional int32 m_winprob = 4;
  if (has_m_winprob()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->m_winprob(), target);
  }

  // optional int32 m_faillv = 5;
  if (has_m_faillv()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->m_faillv(), target);
  }

  // repeated .proto_ff.E_MountHuakun_advancevalueItemDesc m_item = 6;
  for (int i = 0; i < this->m_item_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        6, this->m_item(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_MountHuakun_advancevalue::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_id = 1;
    if (has_m_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_id());
    }

    // optional int32 m_lv = 2;
    if (has_m_lv()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_lv());
    }

    // optional int32 m_advancetype = 3;
    if (has_m_advancetype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_advancetype());
    }

    // optional int32 m_winprob = 4;
    if (has_m_winprob()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_winprob());
    }

    // optional int32 m_faillv = 5;
    if (has_m_faillv()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_faillv());
    }

  }
  // repeated .proto_ff.E_MountHuakun_advancevalueItemDesc m_item = 6;
  total_size += 1 * this->m_item_size();
  for (int i = 0; i < this->m_item_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->m_item(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_MountHuakun_advancevalue::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_MountHuakun_advancevalue* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_MountHuakun_advancevalue*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_MountHuakun_advancevalue::MergeFrom(const E_MountHuakun_advancevalue& from) {
  GOOGLE_CHECK_NE(&from, this);
  m_item_.MergeFrom(from.m_item_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_id()) {
      set_m_id(from.m_id());
    }
    if (from.has_m_lv()) {
      set_m_lv(from.m_lv());
    }
    if (from.has_m_advancetype()) {
      set_m_advancetype(from.m_advancetype());
    }
    if (from.has_m_winprob()) {
      set_m_winprob(from.m_winprob());
    }
    if (from.has_m_faillv()) {
      set_m_faillv(from.m_faillv());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_MountHuakun_advancevalue::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_MountHuakun_advancevalue::CopyFrom(const E_MountHuakun_advancevalue& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_MountHuakun_advancevalue::IsInitialized() const {

  return true;
}

void E_MountHuakun_advancevalue::Swap(E_MountHuakun_advancevalue* other) {
  if (other != this) {
    std::swap(m_id_, other->m_id_);
    std::swap(m_lv_, other->m_lv_);
    std::swap(m_advancetype_, other->m_advancetype_);
    std::swap(m_winprob_, other->m_winprob_);
    std::swap(m_faillv_, other->m_faillv_);
    m_item_.Swap(&other->m_item_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_MountHuakun_advancevalue::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_MountHuakun_advancevalue_descriptor_;
  metadata.reflection = E_MountHuakun_advancevalue_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_MountHuakun_advancevalue::kEMountHuakunAdvancevalueListFieldNumber;
#endif  // !_MSC_VER

Sheet_MountHuakun_advancevalue::Sheet_MountHuakun_advancevalue()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_MountHuakun_advancevalue::InitAsDefaultInstance() {
}

Sheet_MountHuakun_advancevalue::Sheet_MountHuakun_advancevalue(const Sheet_MountHuakun_advancevalue& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_MountHuakun_advancevalue::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_MountHuakun_advancevalue::~Sheet_MountHuakun_advancevalue() {
  SharedDtor();
}

void Sheet_MountHuakun_advancevalue::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_MountHuakun_advancevalue::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_MountHuakun_advancevalue::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_MountHuakun_advancevalue_descriptor_;
}

const Sheet_MountHuakun_advancevalue& Sheet_MountHuakun_advancevalue::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fMount_2eproto();
  return *default_instance_;
}

Sheet_MountHuakun_advancevalue* Sheet_MountHuakun_advancevalue::default_instance_ = NULL;

Sheet_MountHuakun_advancevalue* Sheet_MountHuakun_advancevalue::New() const {
  return new Sheet_MountHuakun_advancevalue;
}

void Sheet_MountHuakun_advancevalue::Clear() {
  e_mounthuakun_advancevalue_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_MountHuakun_advancevalue::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.E_MountHuakun_advancevalue E_MountHuakun_advancevalue_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_E_MountHuakun_advancevalue_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_e_mounthuakun_advancevalue_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_E_MountHuakun_advancevalue_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_MountHuakun_advancevalue::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.E_MountHuakun_advancevalue E_MountHuakun_advancevalue_List = 1;
  for (int i = 0; i < this->e_mounthuakun_advancevalue_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->e_mounthuakun_advancevalue_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_MountHuakun_advancevalue::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.E_MountHuakun_advancevalue E_MountHuakun_advancevalue_List = 1;
  for (int i = 0; i < this->e_mounthuakun_advancevalue_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->e_mounthuakun_advancevalue_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_MountHuakun_advancevalue::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.E_MountHuakun_advancevalue E_MountHuakun_advancevalue_List = 1;
  total_size += 1 * this->e_mounthuakun_advancevalue_list_size();
  for (int i = 0; i < this->e_mounthuakun_advancevalue_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->e_mounthuakun_advancevalue_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_MountHuakun_advancevalue::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_MountHuakun_advancevalue* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_MountHuakun_advancevalue*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_MountHuakun_advancevalue::MergeFrom(const Sheet_MountHuakun_advancevalue& from) {
  GOOGLE_CHECK_NE(&from, this);
  e_mounthuakun_advancevalue_list_.MergeFrom(from.e_mounthuakun_advancevalue_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_MountHuakun_advancevalue::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_MountHuakun_advancevalue::CopyFrom(const Sheet_MountHuakun_advancevalue& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_MountHuakun_advancevalue::IsInitialized() const {

  return true;
}

void Sheet_MountHuakun_advancevalue::Swap(Sheet_MountHuakun_advancevalue* other) {
  if (other != this) {
    e_mounthuakun_advancevalue_list_.Swap(&other->e_mounthuakun_advancevalue_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_MountHuakun_advancevalue::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_MountHuakun_advancevalue_descriptor_;
  metadata.reflection = Sheet_MountHuakun_advancevalue_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_MountHuakun_changeAttributeDesc::kMUpvalueFieldNumber;
const int E_MountHuakun_changeAttributeDesc::kMUpberFieldNumber;
#endif  // !_MSC_VER

E_MountHuakun_changeAttributeDesc::E_MountHuakun_changeAttributeDesc()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_MountHuakun_changeAttributeDesc::InitAsDefaultInstance() {
}

E_MountHuakun_changeAttributeDesc::E_MountHuakun_changeAttributeDesc(const E_MountHuakun_changeAttributeDesc& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_MountHuakun_changeAttributeDesc::SharedCtor() {
  _cached_size_ = 0;
  m_upvalue_ = 0;
  m_upber_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_MountHuakun_changeAttributeDesc::~E_MountHuakun_changeAttributeDesc() {
  SharedDtor();
}

void E_MountHuakun_changeAttributeDesc::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_MountHuakun_changeAttributeDesc::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_MountHuakun_changeAttributeDesc::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_MountHuakun_changeAttributeDesc_descriptor_;
}

const E_MountHuakun_changeAttributeDesc& E_MountHuakun_changeAttributeDesc::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fMount_2eproto();
  return *default_instance_;
}

E_MountHuakun_changeAttributeDesc* E_MountHuakun_changeAttributeDesc::default_instance_ = NULL;

E_MountHuakun_changeAttributeDesc* E_MountHuakun_changeAttributeDesc::New() const {
  return new E_MountHuakun_changeAttributeDesc;
}

void E_MountHuakun_changeAttributeDesc::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_upvalue_ = 0;
    m_upber_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_MountHuakun_changeAttributeDesc::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_upvalue = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_upvalue_)));
          set_has_m_upvalue();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_upber;
        break;
      }

      // optional int32 m_upber = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_upber:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_upber_)));
          set_has_m_upber();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_MountHuakun_changeAttributeDesc::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_upvalue = 1;
  if (has_m_upvalue()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_upvalue(), output);
  }

  // optional int32 m_upber = 2;
  if (has_m_upber()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_upber(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_MountHuakun_changeAttributeDesc::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_upvalue = 1;
  if (has_m_upvalue()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_upvalue(), target);
  }

  // optional int32 m_upber = 2;
  if (has_m_upber()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_upber(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_MountHuakun_changeAttributeDesc::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_upvalue = 1;
    if (has_m_upvalue()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_upvalue());
    }

    // optional int32 m_upber = 2;
    if (has_m_upber()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_upber());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_MountHuakun_changeAttributeDesc::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_MountHuakun_changeAttributeDesc* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_MountHuakun_changeAttributeDesc*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_MountHuakun_changeAttributeDesc::MergeFrom(const E_MountHuakun_changeAttributeDesc& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_upvalue()) {
      set_m_upvalue(from.m_upvalue());
    }
    if (from.has_m_upber()) {
      set_m_upber(from.m_upber());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_MountHuakun_changeAttributeDesc::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_MountHuakun_changeAttributeDesc::CopyFrom(const E_MountHuakun_changeAttributeDesc& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_MountHuakun_changeAttributeDesc::IsInitialized() const {

  return true;
}

void E_MountHuakun_changeAttributeDesc::Swap(E_MountHuakun_changeAttributeDesc* other) {
  if (other != this) {
    std::swap(m_upvalue_, other->m_upvalue_);
    std::swap(m_upber_, other->m_upber_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_MountHuakun_changeAttributeDesc::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_MountHuakun_changeAttributeDesc_descriptor_;
  metadata.reflection = E_MountHuakun_changeAttributeDesc_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_MountHuakun_change::kMIdFieldNumber;
const int E_MountHuakun_change::kMHuakunidFieldNumber;
const int E_MountHuakun_change::kMSpeedFieldNumber;
const int E_MountHuakun_change::kMFxidFieldNumber;
const int E_MountHuakun_change::kMModelidFieldNumber;
const int E_MountHuakun_change::kMActivationitemFieldNumber;
const int E_MountHuakun_change::kMActivationnumFieldNumber;
const int E_MountHuakun_change::kMStarattributeidFieldNumber;
const int E_MountHuakun_change::kMStarmaxFieldNumber;
const int E_MountHuakun_change::kMStaridFieldNumber;
const int E_MountHuakun_change::kMStarnumFieldNumber;
const int E_MountHuakun_change::kMStarberFieldNumber;
const int E_MountHuakun_change::kMChangeattributeidFieldNumber;
const int E_MountHuakun_change::kMAttributeFieldNumber;
#endif  // !_MSC_VER

E_MountHuakun_change::E_MountHuakun_change()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_MountHuakun_change::InitAsDefaultInstance() {
}

E_MountHuakun_change::E_MountHuakun_change(const E_MountHuakun_change& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_MountHuakun_change::SharedCtor() {
  _cached_size_ = 0;
  m_id_ = 0;
  m_huakunid_ = 0;
  m_speed_ = 0;
  m_fxid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  m_modelid_ = 0;
  m_activationitem_ = 0;
  m_activationnum_ = 0;
  m_starattributeid_ = 0;
  m_starmax_ = 0;
  m_starid_ = 0;
  m_starnum_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  m_starber_ = 0;
  m_changeattributeid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_MountHuakun_change::~E_MountHuakun_change() {
  SharedDtor();
}

void E_MountHuakun_change::SharedDtor() {
  if (m_fxid_ != &::google::protobuf::internal::kEmptyString) {
    delete m_fxid_;
  }
  if (m_starnum_ != &::google::protobuf::internal::kEmptyString) {
    delete m_starnum_;
  }
  if (this != default_instance_) {
  }
}

void E_MountHuakun_change::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_MountHuakun_change::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_MountHuakun_change_descriptor_;
}

const E_MountHuakun_change& E_MountHuakun_change::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fMount_2eproto();
  return *default_instance_;
}

E_MountHuakun_change* E_MountHuakun_change::default_instance_ = NULL;

E_MountHuakun_change* E_MountHuakun_change::New() const {
  return new E_MountHuakun_change;
}

void E_MountHuakun_change::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_id_ = 0;
    m_huakunid_ = 0;
    m_speed_ = 0;
    if (has_m_fxid()) {
      if (m_fxid_ != &::google::protobuf::internal::kEmptyString) {
        m_fxid_->clear();
      }
    }
    m_modelid_ = 0;
    m_activationitem_ = 0;
    m_activationnum_ = 0;
    m_starattributeid_ = 0;
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    m_starmax_ = 0;
    m_starid_ = 0;
    if (has_m_starnum()) {
      if (m_starnum_ != &::google::protobuf::internal::kEmptyString) {
        m_starnum_->clear();
      }
    }
    m_starber_ = 0;
    m_changeattributeid_ = 0;
  }
  m_attribute_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_MountHuakun_change::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_id_)));
          set_has_m_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_huakunid;
        break;
      }

      // optional int32 m_huakunid = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_huakunid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_huakunid_)));
          set_has_m_huakunid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_m_speed;
        break;
      }

      // optional int32 m_speed = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_speed:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_speed_)));
          set_has_m_speed();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_m_fxid;
        break;
      }

      // optional string m_fxid = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_fxid:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_m_fxid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->m_fxid().data(), this->m_fxid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_m_modelid;
        break;
      }

      // optional int32 m_modelid = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_modelid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_modelid_)));
          set_has_m_modelid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_m_activationitem;
        break;
      }

      // optional int32 m_activationitem = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_activationitem:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_activationitem_)));
          set_has_m_activationitem();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_m_activationnum;
        break;
      }

      // optional int32 m_activationnum = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_activationnum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_activationnum_)));
          set_has_m_activationnum();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(64)) goto parse_m_starattributeid;
        break;
      }

      // optional int32 m_starattributeid = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_starattributeid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_starattributeid_)));
          set_has_m_starattributeid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(72)) goto parse_m_starmax;
        break;
      }

      // optional int32 m_starmax = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_starmax:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_starmax_)));
          set_has_m_starmax();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(80)) goto parse_m_starid;
        break;
      }

      // optional int32 m_starid = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_starid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_starid_)));
          set_has_m_starid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(90)) goto parse_m_starnum;
        break;
      }

      // optional string m_starnum = 11;
      case 11: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_starnum:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_m_starnum()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->m_starnum().data(), this->m_starnum().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(96)) goto parse_m_starber;
        break;
      }

      // optional int32 m_starber = 12;
      case 12: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_starber:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_starber_)));
          set_has_m_starber();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(104)) goto parse_m_changeattributeid;
        break;
      }

      // optional int32 m_changeattributeid = 13;
      case 13: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_changeattributeid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_changeattributeid_)));
          set_has_m_changeattributeid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(114)) goto parse_m_attribute;
        break;
      }

      // repeated .proto_ff.E_MountHuakun_changeAttributeDesc m_attribute = 14;
      case 14: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_attribute:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_m_attribute()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(114)) goto parse_m_attribute;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_MountHuakun_change::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_id(), output);
  }

  // optional int32 m_huakunid = 2;
  if (has_m_huakunid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_huakunid(), output);
  }

  // optional int32 m_speed = 3;
  if (has_m_speed()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->m_speed(), output);
  }

  // optional string m_fxid = 4;
  if (has_m_fxid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_fxid().data(), this->m_fxid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->m_fxid(), output);
  }

  // optional int32 m_modelid = 5;
  if (has_m_modelid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->m_modelid(), output);
  }

  // optional int32 m_activationitem = 6;
  if (has_m_activationitem()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->m_activationitem(), output);
  }

  // optional int32 m_activationnum = 7;
  if (has_m_activationnum()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->m_activationnum(), output);
  }

  // optional int32 m_starattributeid = 8;
  if (has_m_starattributeid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->m_starattributeid(), output);
  }

  // optional int32 m_starmax = 9;
  if (has_m_starmax()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->m_starmax(), output);
  }

  // optional int32 m_starid = 10;
  if (has_m_starid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->m_starid(), output);
  }

  // optional string m_starnum = 11;
  if (has_m_starnum()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_starnum().data(), this->m_starnum().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      11, this->m_starnum(), output);
  }

  // optional int32 m_starber = 12;
  if (has_m_starber()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(12, this->m_starber(), output);
  }

  // optional int32 m_changeattributeid = 13;
  if (has_m_changeattributeid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(13, this->m_changeattributeid(), output);
  }

  // repeated .proto_ff.E_MountHuakun_changeAttributeDesc m_attribute = 14;
  for (int i = 0; i < this->m_attribute_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      14, this->m_attribute(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_MountHuakun_change::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_id(), target);
  }

  // optional int32 m_huakunid = 2;
  if (has_m_huakunid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_huakunid(), target);
  }

  // optional int32 m_speed = 3;
  if (has_m_speed()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->m_speed(), target);
  }

  // optional string m_fxid = 4;
  if (has_m_fxid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_fxid().data(), this->m_fxid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->m_fxid(), target);
  }

  // optional int32 m_modelid = 5;
  if (has_m_modelid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->m_modelid(), target);
  }

  // optional int32 m_activationitem = 6;
  if (has_m_activationitem()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->m_activationitem(), target);
  }

  // optional int32 m_activationnum = 7;
  if (has_m_activationnum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->m_activationnum(), target);
  }

  // optional int32 m_starattributeid = 8;
  if (has_m_starattributeid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->m_starattributeid(), target);
  }

  // optional int32 m_starmax = 9;
  if (has_m_starmax()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->m_starmax(), target);
  }

  // optional int32 m_starid = 10;
  if (has_m_starid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->m_starid(), target);
  }

  // optional string m_starnum = 11;
  if (has_m_starnum()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_starnum().data(), this->m_starnum().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->m_starnum(), target);
  }

  // optional int32 m_starber = 12;
  if (has_m_starber()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(12, this->m_starber(), target);
  }

  // optional int32 m_changeattributeid = 13;
  if (has_m_changeattributeid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(13, this->m_changeattributeid(), target);
  }

  // repeated .proto_ff.E_MountHuakun_changeAttributeDesc m_attribute = 14;
  for (int i = 0; i < this->m_attribute_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        14, this->m_attribute(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_MountHuakun_change::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_id = 1;
    if (has_m_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_id());
    }

    // optional int32 m_huakunid = 2;
    if (has_m_huakunid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_huakunid());
    }

    // optional int32 m_speed = 3;
    if (has_m_speed()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_speed());
    }

    // optional string m_fxid = 4;
    if (has_m_fxid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->m_fxid());
    }

    // optional int32 m_modelid = 5;
    if (has_m_modelid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_modelid());
    }

    // optional int32 m_activationitem = 6;
    if (has_m_activationitem()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_activationitem());
    }

    // optional int32 m_activationnum = 7;
    if (has_m_activationnum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_activationnum());
    }

    // optional int32 m_starattributeid = 8;
    if (has_m_starattributeid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_starattributeid());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional int32 m_starmax = 9;
    if (has_m_starmax()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_starmax());
    }

    // optional int32 m_starid = 10;
    if (has_m_starid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_starid());
    }

    // optional string m_starnum = 11;
    if (has_m_starnum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->m_starnum());
    }

    // optional int32 m_starber = 12;
    if (has_m_starber()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_starber());
    }

    // optional int32 m_changeattributeid = 13;
    if (has_m_changeattributeid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_changeattributeid());
    }

  }
  // repeated .proto_ff.E_MountHuakun_changeAttributeDesc m_attribute = 14;
  total_size += 1 * this->m_attribute_size();
  for (int i = 0; i < this->m_attribute_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->m_attribute(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_MountHuakun_change::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_MountHuakun_change* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_MountHuakun_change*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_MountHuakun_change::MergeFrom(const E_MountHuakun_change& from) {
  GOOGLE_CHECK_NE(&from, this);
  m_attribute_.MergeFrom(from.m_attribute_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_id()) {
      set_m_id(from.m_id());
    }
    if (from.has_m_huakunid()) {
      set_m_huakunid(from.m_huakunid());
    }
    if (from.has_m_speed()) {
      set_m_speed(from.m_speed());
    }
    if (from.has_m_fxid()) {
      set_m_fxid(from.m_fxid());
    }
    if (from.has_m_modelid()) {
      set_m_modelid(from.m_modelid());
    }
    if (from.has_m_activationitem()) {
      set_m_activationitem(from.m_activationitem());
    }
    if (from.has_m_activationnum()) {
      set_m_activationnum(from.m_activationnum());
    }
    if (from.has_m_starattributeid()) {
      set_m_starattributeid(from.m_starattributeid());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_m_starmax()) {
      set_m_starmax(from.m_starmax());
    }
    if (from.has_m_starid()) {
      set_m_starid(from.m_starid());
    }
    if (from.has_m_starnum()) {
      set_m_starnum(from.m_starnum());
    }
    if (from.has_m_starber()) {
      set_m_starber(from.m_starber());
    }
    if (from.has_m_changeattributeid()) {
      set_m_changeattributeid(from.m_changeattributeid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_MountHuakun_change::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_MountHuakun_change::CopyFrom(const E_MountHuakun_change& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_MountHuakun_change::IsInitialized() const {

  return true;
}

void E_MountHuakun_change::Swap(E_MountHuakun_change* other) {
  if (other != this) {
    std::swap(m_id_, other->m_id_);
    std::swap(m_huakunid_, other->m_huakunid_);
    std::swap(m_speed_, other->m_speed_);
    std::swap(m_fxid_, other->m_fxid_);
    std::swap(m_modelid_, other->m_modelid_);
    std::swap(m_activationitem_, other->m_activationitem_);
    std::swap(m_activationnum_, other->m_activationnum_);
    std::swap(m_starattributeid_, other->m_starattributeid_);
    std::swap(m_starmax_, other->m_starmax_);
    std::swap(m_starid_, other->m_starid_);
    std::swap(m_starnum_, other->m_starnum_);
    std::swap(m_starber_, other->m_starber_);
    std::swap(m_changeattributeid_, other->m_changeattributeid_);
    m_attribute_.Swap(&other->m_attribute_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_MountHuakun_change::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_MountHuakun_change_descriptor_;
  metadata.reflection = E_MountHuakun_change_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_MountHuakun_change::kEMountHuakunChangeListFieldNumber;
#endif  // !_MSC_VER

Sheet_MountHuakun_change::Sheet_MountHuakun_change()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_MountHuakun_change::InitAsDefaultInstance() {
}

Sheet_MountHuakun_change::Sheet_MountHuakun_change(const Sheet_MountHuakun_change& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_MountHuakun_change::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_MountHuakun_change::~Sheet_MountHuakun_change() {
  SharedDtor();
}

void Sheet_MountHuakun_change::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_MountHuakun_change::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_MountHuakun_change::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_MountHuakun_change_descriptor_;
}

const Sheet_MountHuakun_change& Sheet_MountHuakun_change::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fMount_2eproto();
  return *default_instance_;
}

Sheet_MountHuakun_change* Sheet_MountHuakun_change::default_instance_ = NULL;

Sheet_MountHuakun_change* Sheet_MountHuakun_change::New() const {
  return new Sheet_MountHuakun_change;
}

void Sheet_MountHuakun_change::Clear() {
  e_mounthuakun_change_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_MountHuakun_change::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.E_MountHuakun_change E_MountHuakun_change_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_E_MountHuakun_change_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_e_mounthuakun_change_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_E_MountHuakun_change_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_MountHuakun_change::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.E_MountHuakun_change E_MountHuakun_change_List = 1;
  for (int i = 0; i < this->e_mounthuakun_change_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->e_mounthuakun_change_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_MountHuakun_change::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.E_MountHuakun_change E_MountHuakun_change_List = 1;
  for (int i = 0; i < this->e_mounthuakun_change_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->e_mounthuakun_change_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_MountHuakun_change::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.E_MountHuakun_change E_MountHuakun_change_List = 1;
  total_size += 1 * this->e_mounthuakun_change_list_size();
  for (int i = 0; i < this->e_mounthuakun_change_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->e_mounthuakun_change_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_MountHuakun_change::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_MountHuakun_change* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_MountHuakun_change*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_MountHuakun_change::MergeFrom(const Sheet_MountHuakun_change& from) {
  GOOGLE_CHECK_NE(&from, this);
  e_mounthuakun_change_list_.MergeFrom(from.e_mounthuakun_change_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_MountHuakun_change::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_MountHuakun_change::CopyFrom(const Sheet_MountHuakun_change& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_MountHuakun_change::IsInitialized() const {

  return true;
}

void Sheet_MountHuakun_change::Swap(Sheet_MountHuakun_change* other) {
  if (other != this) {
    e_mounthuakun_change_list_.Swap(&other->e_mounthuakun_change_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_MountHuakun_change::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_MountHuakun_change_descriptor_;
  metadata.reflection = Sheet_MountHuakun_change_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_MountHuakun_advanceUpattributeDesc::kMValueFieldNumber;
const int E_MountHuakun_advanceUpattributeDesc::kMTypeFieldNumber;
#endif  // !_MSC_VER

E_MountHuakun_advanceUpattributeDesc::E_MountHuakun_advanceUpattributeDesc()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_MountHuakun_advanceUpattributeDesc::InitAsDefaultInstance() {
}

E_MountHuakun_advanceUpattributeDesc::E_MountHuakun_advanceUpattributeDesc(const E_MountHuakun_advanceUpattributeDesc& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_MountHuakun_advanceUpattributeDesc::SharedCtor() {
  _cached_size_ = 0;
  m_value_ = 0;
  m_type_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_MountHuakun_advanceUpattributeDesc::~E_MountHuakun_advanceUpattributeDesc() {
  SharedDtor();
}

void E_MountHuakun_advanceUpattributeDesc::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_MountHuakun_advanceUpattributeDesc::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_MountHuakun_advanceUpattributeDesc::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_MountHuakun_advanceUpattributeDesc_descriptor_;
}

const E_MountHuakun_advanceUpattributeDesc& E_MountHuakun_advanceUpattributeDesc::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fMount_2eproto();
  return *default_instance_;
}

E_MountHuakun_advanceUpattributeDesc* E_MountHuakun_advanceUpattributeDesc::default_instance_ = NULL;

E_MountHuakun_advanceUpattributeDesc* E_MountHuakun_advanceUpattributeDesc::New() const {
  return new E_MountHuakun_advanceUpattributeDesc;
}

void E_MountHuakun_advanceUpattributeDesc::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_value_ = 0;
    m_type_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_MountHuakun_advanceUpattributeDesc::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_value = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_value_)));
          set_has_m_value();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_type;
        break;
      }

      // optional int32 m_type = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_type_)));
          set_has_m_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_MountHuakun_advanceUpattributeDesc::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_value = 1;
  if (has_m_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_value(), output);
  }

  // optional int32 m_type = 2;
  if (has_m_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_type(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_MountHuakun_advanceUpattributeDesc::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_value = 1;
  if (has_m_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_value(), target);
  }

  // optional int32 m_type = 2;
  if (has_m_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_type(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_MountHuakun_advanceUpattributeDesc::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_value = 1;
    if (has_m_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_value());
    }

    // optional int32 m_type = 2;
    if (has_m_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_type());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_MountHuakun_advanceUpattributeDesc::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_MountHuakun_advanceUpattributeDesc* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_MountHuakun_advanceUpattributeDesc*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_MountHuakun_advanceUpattributeDesc::MergeFrom(const E_MountHuakun_advanceUpattributeDesc& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_value()) {
      set_m_value(from.m_value());
    }
    if (from.has_m_type()) {
      set_m_type(from.m_type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_MountHuakun_advanceUpattributeDesc::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_MountHuakun_advanceUpattributeDesc::CopyFrom(const E_MountHuakun_advanceUpattributeDesc& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_MountHuakun_advanceUpattributeDesc::IsInitialized() const {

  return true;
}

void E_MountHuakun_advanceUpattributeDesc::Swap(E_MountHuakun_advanceUpattributeDesc* other) {
  if (other != this) {
    std::swap(m_value_, other->m_value_);
    std::swap(m_type_, other->m_type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_MountHuakun_advanceUpattributeDesc::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_MountHuakun_advanceUpattributeDesc_descriptor_;
  metadata.reflection = E_MountHuakun_advanceUpattributeDesc_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_MountHuakun_advance::kMIdFieldNumber;
const int E_MountHuakun_advance::kMUpattributeidFieldNumber;
const int E_MountHuakun_advance::kMStaridFieldNumber;
const int E_MountHuakun_advance::kMSkillidFieldNumber;
const int E_MountHuakun_advance::kMUpattributeFieldNumber;
#endif  // !_MSC_VER

E_MountHuakun_advance::E_MountHuakun_advance()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_MountHuakun_advance::InitAsDefaultInstance() {
}

E_MountHuakun_advance::E_MountHuakun_advance(const E_MountHuakun_advance& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_MountHuakun_advance::SharedCtor() {
  _cached_size_ = 0;
  m_id_ = 0;
  m_upattributeid_ = 0;
  m_starid_ = 0;
  m_skillid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_MountHuakun_advance::~E_MountHuakun_advance() {
  SharedDtor();
}

void E_MountHuakun_advance::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_MountHuakun_advance::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_MountHuakun_advance::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_MountHuakun_advance_descriptor_;
}

const E_MountHuakun_advance& E_MountHuakun_advance::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fMount_2eproto();
  return *default_instance_;
}

E_MountHuakun_advance* E_MountHuakun_advance::default_instance_ = NULL;

E_MountHuakun_advance* E_MountHuakun_advance::New() const {
  return new E_MountHuakun_advance;
}

void E_MountHuakun_advance::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_id_ = 0;
    m_upattributeid_ = 0;
    m_starid_ = 0;
    m_skillid_ = 0;
  }
  m_upattribute_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_MountHuakun_advance::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_id_)));
          set_has_m_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_upattributeid;
        break;
      }

      // optional int32 m_upattributeid = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_upattributeid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_upattributeid_)));
          set_has_m_upattributeid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_m_starid;
        break;
      }

      // optional int32 m_starid = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_starid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_starid_)));
          set_has_m_starid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_m_skillid;
        break;
      }

      // optional int32 m_skillid = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_skillid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_skillid_)));
          set_has_m_skillid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_m_upattribute;
        break;
      }

      // repeated .proto_ff.E_MountHuakun_advanceUpattributeDesc m_upattribute = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_upattribute:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_m_upattribute()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_m_upattribute;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_MountHuakun_advance::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_id(), output);
  }

  // optional int32 m_upattributeid = 2;
  if (has_m_upattributeid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_upattributeid(), output);
  }

  // optional int32 m_starid = 3;
  if (has_m_starid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->m_starid(), output);
  }

  // optional int32 m_skillid = 4;
  if (has_m_skillid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->m_skillid(), output);
  }

  // repeated .proto_ff.E_MountHuakun_advanceUpattributeDesc m_upattribute = 5;
  for (int i = 0; i < this->m_upattribute_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->m_upattribute(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_MountHuakun_advance::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_id(), target);
  }

  // optional int32 m_upattributeid = 2;
  if (has_m_upattributeid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_upattributeid(), target);
  }

  // optional int32 m_starid = 3;
  if (has_m_starid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->m_starid(), target);
  }

  // optional int32 m_skillid = 4;
  if (has_m_skillid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->m_skillid(), target);
  }

  // repeated .proto_ff.E_MountHuakun_advanceUpattributeDesc m_upattribute = 5;
  for (int i = 0; i < this->m_upattribute_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->m_upattribute(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_MountHuakun_advance::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_id = 1;
    if (has_m_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_id());
    }

    // optional int32 m_upattributeid = 2;
    if (has_m_upattributeid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_upattributeid());
    }

    // optional int32 m_starid = 3;
    if (has_m_starid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_starid());
    }

    // optional int32 m_skillid = 4;
    if (has_m_skillid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_skillid());
    }

  }
  // repeated .proto_ff.E_MountHuakun_advanceUpattributeDesc m_upattribute = 5;
  total_size += 1 * this->m_upattribute_size();
  for (int i = 0; i < this->m_upattribute_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->m_upattribute(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_MountHuakun_advance::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_MountHuakun_advance* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_MountHuakun_advance*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_MountHuakun_advance::MergeFrom(const E_MountHuakun_advance& from) {
  GOOGLE_CHECK_NE(&from, this);
  m_upattribute_.MergeFrom(from.m_upattribute_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_id()) {
      set_m_id(from.m_id());
    }
    if (from.has_m_upattributeid()) {
      set_m_upattributeid(from.m_upattributeid());
    }
    if (from.has_m_starid()) {
      set_m_starid(from.m_starid());
    }
    if (from.has_m_skillid()) {
      set_m_skillid(from.m_skillid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_MountHuakun_advance::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_MountHuakun_advance::CopyFrom(const E_MountHuakun_advance& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_MountHuakun_advance::IsInitialized() const {

  return true;
}

void E_MountHuakun_advance::Swap(E_MountHuakun_advance* other) {
  if (other != this) {
    std::swap(m_id_, other->m_id_);
    std::swap(m_upattributeid_, other->m_upattributeid_);
    std::swap(m_starid_, other->m_starid_);
    std::swap(m_skillid_, other->m_skillid_);
    m_upattribute_.Swap(&other->m_upattribute_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_MountHuakun_advance::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_MountHuakun_advance_descriptor_;
  metadata.reflection = E_MountHuakun_advance_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_MountHuakun_advance::kEMountHuakunAdvanceListFieldNumber;
#endif  // !_MSC_VER

Sheet_MountHuakun_advance::Sheet_MountHuakun_advance()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_MountHuakun_advance::InitAsDefaultInstance() {
}

Sheet_MountHuakun_advance::Sheet_MountHuakun_advance(const Sheet_MountHuakun_advance& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_MountHuakun_advance::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_MountHuakun_advance::~Sheet_MountHuakun_advance() {
  SharedDtor();
}

void Sheet_MountHuakun_advance::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_MountHuakun_advance::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_MountHuakun_advance::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_MountHuakun_advance_descriptor_;
}

const Sheet_MountHuakun_advance& Sheet_MountHuakun_advance::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fMount_2eproto();
  return *default_instance_;
}

Sheet_MountHuakun_advance* Sheet_MountHuakun_advance::default_instance_ = NULL;

Sheet_MountHuakun_advance* Sheet_MountHuakun_advance::New() const {
  return new Sheet_MountHuakun_advance;
}

void Sheet_MountHuakun_advance::Clear() {
  e_mounthuakun_advance_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_MountHuakun_advance::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.E_MountHuakun_advance E_MountHuakun_advance_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_E_MountHuakun_advance_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_e_mounthuakun_advance_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_E_MountHuakun_advance_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_MountHuakun_advance::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.E_MountHuakun_advance E_MountHuakun_advance_List = 1;
  for (int i = 0; i < this->e_mounthuakun_advance_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->e_mounthuakun_advance_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_MountHuakun_advance::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.E_MountHuakun_advance E_MountHuakun_advance_List = 1;
  for (int i = 0; i < this->e_mounthuakun_advance_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->e_mounthuakun_advance_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_MountHuakun_advance::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.E_MountHuakun_advance E_MountHuakun_advance_List = 1;
  total_size += 1 * this->e_mounthuakun_advance_list_size();
  for (int i = 0; i < this->e_mounthuakun_advance_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->e_mounthuakun_advance_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_MountHuakun_advance::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_MountHuakun_advance* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_MountHuakun_advance*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_MountHuakun_advance::MergeFrom(const Sheet_MountHuakun_advance& from) {
  GOOGLE_CHECK_NE(&from, this);
  e_mounthuakun_advance_list_.MergeFrom(from.e_mounthuakun_advance_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_MountHuakun_advance::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_MountHuakun_advance::CopyFrom(const Sheet_MountHuakun_advance& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_MountHuakun_advance::IsInitialized() const {

  return true;
}

void Sheet_MountHuakun_advance::Swap(Sheet_MountHuakun_advance* other) {
  if (other != this) {
    e_mounthuakun_advance_list_.Swap(&other->e_mounthuakun_advance_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_MountHuakun_advance::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_MountHuakun_advance_descriptor_;
  metadata.reflection = Sheet_MountHuakun_advance_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_MountBloodAttributeDesc::kMValueFieldNumber;
const int E_MountBloodAttributeDesc::kMTypeFieldNumber;
#endif  // !_MSC_VER

E_MountBloodAttributeDesc::E_MountBloodAttributeDesc()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_MountBloodAttributeDesc::InitAsDefaultInstance() {
}

E_MountBloodAttributeDesc::E_MountBloodAttributeDesc(const E_MountBloodAttributeDesc& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_MountBloodAttributeDesc::SharedCtor() {
  _cached_size_ = 0;
  m_value_ = 0;
  m_type_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_MountBloodAttributeDesc::~E_MountBloodAttributeDesc() {
  SharedDtor();
}

void E_MountBloodAttributeDesc::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_MountBloodAttributeDesc::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_MountBloodAttributeDesc::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_MountBloodAttributeDesc_descriptor_;
}

const E_MountBloodAttributeDesc& E_MountBloodAttributeDesc::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fMount_2eproto();
  return *default_instance_;
}

E_MountBloodAttributeDesc* E_MountBloodAttributeDesc::default_instance_ = NULL;

E_MountBloodAttributeDesc* E_MountBloodAttributeDesc::New() const {
  return new E_MountBloodAttributeDesc;
}

void E_MountBloodAttributeDesc::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_value_ = 0;
    m_type_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_MountBloodAttributeDesc::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_value = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_value_)));
          set_has_m_value();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_type;
        break;
      }

      // optional int32 m_type = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_type_)));
          set_has_m_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_MountBloodAttributeDesc::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_value = 1;
  if (has_m_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_value(), output);
  }

  // optional int32 m_type = 2;
  if (has_m_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_type(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_MountBloodAttributeDesc::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_value = 1;
  if (has_m_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_value(), target);
  }

  // optional int32 m_type = 2;
  if (has_m_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_type(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_MountBloodAttributeDesc::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_value = 1;
    if (has_m_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_value());
    }

    // optional int32 m_type = 2;
    if (has_m_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_type());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_MountBloodAttributeDesc::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_MountBloodAttributeDesc* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_MountBloodAttributeDesc*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_MountBloodAttributeDesc::MergeFrom(const E_MountBloodAttributeDesc& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_value()) {
      set_m_value(from.m_value());
    }
    if (from.has_m_type()) {
      set_m_type(from.m_type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_MountBloodAttributeDesc::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_MountBloodAttributeDesc::CopyFrom(const E_MountBloodAttributeDesc& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_MountBloodAttributeDesc::IsInitialized() const {

  return true;
}

void E_MountBloodAttributeDesc::Swap(E_MountBloodAttributeDesc* other) {
  if (other != this) {
    std::swap(m_value_, other->m_value_);
    std::swap(m_type_, other->m_type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_MountBloodAttributeDesc::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_MountBloodAttributeDesc_descriptor_;
  metadata.reflection = E_MountBloodAttributeDesc_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_MountBlood::kMIdFieldNumber;
const int E_MountBlood::kMAttributeFieldNumber;
#endif  // !_MSC_VER

E_MountBlood::E_MountBlood()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_MountBlood::InitAsDefaultInstance() {
}

E_MountBlood::E_MountBlood(const E_MountBlood& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_MountBlood::SharedCtor() {
  _cached_size_ = 0;
  m_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_MountBlood::~E_MountBlood() {
  SharedDtor();
}

void E_MountBlood::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_MountBlood::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_MountBlood::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_MountBlood_descriptor_;
}

const E_MountBlood& E_MountBlood::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fMount_2eproto();
  return *default_instance_;
}

E_MountBlood* E_MountBlood::default_instance_ = NULL;

E_MountBlood* E_MountBlood::New() const {
  return new E_MountBlood;
}

void E_MountBlood::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_id_ = 0;
  }
  m_attribute_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_MountBlood::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_id_)));
          set_has_m_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_m_attribute;
        break;
      }

      // repeated .proto_ff.E_MountBloodAttributeDesc m_attribute = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_attribute:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_m_attribute()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_m_attribute;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_MountBlood::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_id(), output);
  }

  // repeated .proto_ff.E_MountBloodAttributeDesc m_attribute = 2;
  for (int i = 0; i < this->m_attribute_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->m_attribute(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_MountBlood::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_id(), target);
  }

  // repeated .proto_ff.E_MountBloodAttributeDesc m_attribute = 2;
  for (int i = 0; i < this->m_attribute_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->m_attribute(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_MountBlood::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_id = 1;
    if (has_m_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_id());
    }

  }
  // repeated .proto_ff.E_MountBloodAttributeDesc m_attribute = 2;
  total_size += 1 * this->m_attribute_size();
  for (int i = 0; i < this->m_attribute_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->m_attribute(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_MountBlood::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_MountBlood* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_MountBlood*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_MountBlood::MergeFrom(const E_MountBlood& from) {
  GOOGLE_CHECK_NE(&from, this);
  m_attribute_.MergeFrom(from.m_attribute_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_id()) {
      set_m_id(from.m_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_MountBlood::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_MountBlood::CopyFrom(const E_MountBlood& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_MountBlood::IsInitialized() const {

  return true;
}

void E_MountBlood::Swap(E_MountBlood* other) {
  if (other != this) {
    std::swap(m_id_, other->m_id_);
    m_attribute_.Swap(&other->m_attribute_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_MountBlood::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_MountBlood_descriptor_;
  metadata.reflection = E_MountBlood_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_MountBlood::kEMountBloodListFieldNumber;
#endif  // !_MSC_VER

Sheet_MountBlood::Sheet_MountBlood()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_MountBlood::InitAsDefaultInstance() {
}

Sheet_MountBlood::Sheet_MountBlood(const Sheet_MountBlood& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_MountBlood::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_MountBlood::~Sheet_MountBlood() {
  SharedDtor();
}

void Sheet_MountBlood::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_MountBlood::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_MountBlood::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_MountBlood_descriptor_;
}

const Sheet_MountBlood& Sheet_MountBlood::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fMount_2eproto();
  return *default_instance_;
}

Sheet_MountBlood* Sheet_MountBlood::default_instance_ = NULL;

Sheet_MountBlood* Sheet_MountBlood::New() const {
  return new Sheet_MountBlood;
}

void Sheet_MountBlood::Clear() {
  e_mountblood_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_MountBlood::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.E_MountBlood E_MountBlood_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_E_MountBlood_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_e_mountblood_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_E_MountBlood_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_MountBlood::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.E_MountBlood E_MountBlood_List = 1;
  for (int i = 0; i < this->e_mountblood_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->e_mountblood_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_MountBlood::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.E_MountBlood E_MountBlood_List = 1;
  for (int i = 0; i < this->e_mountblood_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->e_mountblood_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_MountBlood::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.E_MountBlood E_MountBlood_List = 1;
  total_size += 1 * this->e_mountblood_list_size();
  for (int i = 0; i < this->e_mountblood_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->e_mountblood_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_MountBlood::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_MountBlood* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_MountBlood*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_MountBlood::MergeFrom(const Sheet_MountBlood& from) {
  GOOGLE_CHECK_NE(&from, this);
  e_mountblood_list_.MergeFrom(from.e_mountblood_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_MountBlood::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_MountBlood::CopyFrom(const Sheet_MountBlood& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_MountBlood::IsInitialized() const {

  return true;
}

void Sheet_MountBlood::Swap(Sheet_MountBlood* other) {
  if (other != this) {
    e_mountblood_list_.Swap(&other->e_mountblood_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_MountBlood::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_MountBlood_descriptor_;
  metadata.reflection = Sheet_MountBlood_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_MountHuakun_equip::kMEquipidFieldNumber;
const int E_MountHuakun_equip::kMPartFieldNumber;
const int E_MountHuakun_equip::kMQualityFieldNumber;
const int E_MountHuakun_equip::kMEquipintensifyFieldNumber;
const int E_MountHuakun_equip::kMSrtongupFieldNumber;
const int E_MountHuakun_equip::kMAdvanceintensifyFieldNumber;
const int E_MountHuakun_equip::kMEquipttopFieldNumber;
const int E_MountHuakun_equip::kMResolveFieldNumber;
const int E_MountHuakun_equip::kMResolvemunFieldNumber;
#endif  // !_MSC_VER

E_MountHuakun_equip::E_MountHuakun_equip()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_MountHuakun_equip::InitAsDefaultInstance() {
}

E_MountHuakun_equip::E_MountHuakun_equip(const E_MountHuakun_equip& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_MountHuakun_equip::SharedCtor() {
  _cached_size_ = 0;
  m_equipid_ = 0;
  m_part_ = 0;
  m_quality_ = 0;
  m_equipintensify_ = 0;
  m_srtongup_ = 0;
  m_advanceintensify_ = 0;
  m_equipttop_ = 0;
  m_resolve_ = 0;
  m_resolvemun_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_MountHuakun_equip::~E_MountHuakun_equip() {
  SharedDtor();
}

void E_MountHuakun_equip::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_MountHuakun_equip::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_MountHuakun_equip::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_MountHuakun_equip_descriptor_;
}

const E_MountHuakun_equip& E_MountHuakun_equip::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fMount_2eproto();
  return *default_instance_;
}

E_MountHuakun_equip* E_MountHuakun_equip::default_instance_ = NULL;

E_MountHuakun_equip* E_MountHuakun_equip::New() const {
  return new E_MountHuakun_equip;
}

void E_MountHuakun_equip::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_equipid_ = 0;
    m_part_ = 0;
    m_quality_ = 0;
    m_equipintensify_ = 0;
    m_srtongup_ = 0;
    m_advanceintensify_ = 0;
    m_equipttop_ = 0;
    m_resolve_ = 0;
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    m_resolvemun_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_MountHuakun_equip::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_equipid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_equipid_)));
          set_has_m_equipid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_part;
        break;
      }

      // optional int32 m_part = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_part:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_part_)));
          set_has_m_part();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_m_quality;
        break;
      }

      // optional int32 m_quality = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_quality:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_quality_)));
          set_has_m_quality();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_m_equipintensify;
        break;
      }

      // optional int32 m_equipintensify = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_equipintensify:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_equipintensify_)));
          set_has_m_equipintensify();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_m_srtongup;
        break;
      }

      // optional int32 m_srtongup = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_srtongup:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_srtongup_)));
          set_has_m_srtongup();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_m_advanceintensify;
        break;
      }

      // optional int32 m_advanceintensify = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_advanceintensify:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_advanceintensify_)));
          set_has_m_advanceintensify();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_m_equipttop;
        break;
      }

      // optional int32 m_equipttop = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_equipttop:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_equipttop_)));
          set_has_m_equipttop();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(64)) goto parse_m_resolve;
        break;
      }

      // optional int32 m_resolve = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_resolve:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_resolve_)));
          set_has_m_resolve();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(72)) goto parse_m_resolvemun;
        break;
      }

      // optional int32 m_resolvemun = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_resolvemun:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_resolvemun_)));
          set_has_m_resolvemun();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_MountHuakun_equip::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_equipid = 1;
  if (has_m_equipid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_equipid(), output);
  }

  // optional int32 m_part = 2;
  if (has_m_part()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_part(), output);
  }

  // optional int32 m_quality = 3;
  if (has_m_quality()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->m_quality(), output);
  }

  // optional int32 m_equipintensify = 4;
  if (has_m_equipintensify()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->m_equipintensify(), output);
  }

  // optional int32 m_srtongup = 5;
  if (has_m_srtongup()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->m_srtongup(), output);
  }

  // optional int32 m_advanceintensify = 6;
  if (has_m_advanceintensify()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->m_advanceintensify(), output);
  }

  // optional int32 m_equipttop = 7;
  if (has_m_equipttop()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->m_equipttop(), output);
  }

  // optional int32 m_resolve = 8;
  if (has_m_resolve()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->m_resolve(), output);
  }

  // optional int32 m_resolvemun = 9;
  if (has_m_resolvemun()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->m_resolvemun(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_MountHuakun_equip::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_equipid = 1;
  if (has_m_equipid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_equipid(), target);
  }

  // optional int32 m_part = 2;
  if (has_m_part()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_part(), target);
  }

  // optional int32 m_quality = 3;
  if (has_m_quality()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->m_quality(), target);
  }

  // optional int32 m_equipintensify = 4;
  if (has_m_equipintensify()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->m_equipintensify(), target);
  }

  // optional int32 m_srtongup = 5;
  if (has_m_srtongup()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->m_srtongup(), target);
  }

  // optional int32 m_advanceintensify = 6;
  if (has_m_advanceintensify()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->m_advanceintensify(), target);
  }

  // optional int32 m_equipttop = 7;
  if (has_m_equipttop()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->m_equipttop(), target);
  }

  // optional int32 m_resolve = 8;
  if (has_m_resolve()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->m_resolve(), target);
  }

  // optional int32 m_resolvemun = 9;
  if (has_m_resolvemun()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->m_resolvemun(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_MountHuakun_equip::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_equipid = 1;
    if (has_m_equipid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_equipid());
    }

    // optional int32 m_part = 2;
    if (has_m_part()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_part());
    }

    // optional int32 m_quality = 3;
    if (has_m_quality()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_quality());
    }

    // optional int32 m_equipintensify = 4;
    if (has_m_equipintensify()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_equipintensify());
    }

    // optional int32 m_srtongup = 5;
    if (has_m_srtongup()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_srtongup());
    }

    // optional int32 m_advanceintensify = 6;
    if (has_m_advanceintensify()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_advanceintensify());
    }

    // optional int32 m_equipttop = 7;
    if (has_m_equipttop()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_equipttop());
    }

    // optional int32 m_resolve = 8;
    if (has_m_resolve()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_resolve());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional int32 m_resolvemun = 9;
    if (has_m_resolvemun()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_resolvemun());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_MountHuakun_equip::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_MountHuakun_equip* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_MountHuakun_equip*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_MountHuakun_equip::MergeFrom(const E_MountHuakun_equip& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_equipid()) {
      set_m_equipid(from.m_equipid());
    }
    if (from.has_m_part()) {
      set_m_part(from.m_part());
    }
    if (from.has_m_quality()) {
      set_m_quality(from.m_quality());
    }
    if (from.has_m_equipintensify()) {
      set_m_equipintensify(from.m_equipintensify());
    }
    if (from.has_m_srtongup()) {
      set_m_srtongup(from.m_srtongup());
    }
    if (from.has_m_advanceintensify()) {
      set_m_advanceintensify(from.m_advanceintensify());
    }
    if (from.has_m_equipttop()) {
      set_m_equipttop(from.m_equipttop());
    }
    if (from.has_m_resolve()) {
      set_m_resolve(from.m_resolve());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_m_resolvemun()) {
      set_m_resolvemun(from.m_resolvemun());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_MountHuakun_equip::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_MountHuakun_equip::CopyFrom(const E_MountHuakun_equip& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_MountHuakun_equip::IsInitialized() const {

  return true;
}

void E_MountHuakun_equip::Swap(E_MountHuakun_equip* other) {
  if (other != this) {
    std::swap(m_equipid_, other->m_equipid_);
    std::swap(m_part_, other->m_part_);
    std::swap(m_quality_, other->m_quality_);
    std::swap(m_equipintensify_, other->m_equipintensify_);
    std::swap(m_srtongup_, other->m_srtongup_);
    std::swap(m_advanceintensify_, other->m_advanceintensify_);
    std::swap(m_equipttop_, other->m_equipttop_);
    std::swap(m_resolve_, other->m_resolve_);
    std::swap(m_resolvemun_, other->m_resolvemun_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_MountHuakun_equip::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_MountHuakun_equip_descriptor_;
  metadata.reflection = E_MountHuakun_equip_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_MountHuakun_equip::kEMountHuakunEquipListFieldNumber;
#endif  // !_MSC_VER

Sheet_MountHuakun_equip::Sheet_MountHuakun_equip()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_MountHuakun_equip::InitAsDefaultInstance() {
}

Sheet_MountHuakun_equip::Sheet_MountHuakun_equip(const Sheet_MountHuakun_equip& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_MountHuakun_equip::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_MountHuakun_equip::~Sheet_MountHuakun_equip() {
  SharedDtor();
}

void Sheet_MountHuakun_equip::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_MountHuakun_equip::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_MountHuakun_equip::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_MountHuakun_equip_descriptor_;
}

const Sheet_MountHuakun_equip& Sheet_MountHuakun_equip::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fMount_2eproto();
  return *default_instance_;
}

Sheet_MountHuakun_equip* Sheet_MountHuakun_equip::default_instance_ = NULL;

Sheet_MountHuakun_equip* Sheet_MountHuakun_equip::New() const {
  return new Sheet_MountHuakun_equip;
}

void Sheet_MountHuakun_equip::Clear() {
  e_mounthuakun_equip_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_MountHuakun_equip::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.E_MountHuakun_equip E_MountHuakun_equip_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_E_MountHuakun_equip_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_e_mounthuakun_equip_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_E_MountHuakun_equip_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_MountHuakun_equip::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.E_MountHuakun_equip E_MountHuakun_equip_List = 1;
  for (int i = 0; i < this->e_mounthuakun_equip_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->e_mounthuakun_equip_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_MountHuakun_equip::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.E_MountHuakun_equip E_MountHuakun_equip_List = 1;
  for (int i = 0; i < this->e_mounthuakun_equip_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->e_mounthuakun_equip_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_MountHuakun_equip::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.E_MountHuakun_equip E_MountHuakun_equip_List = 1;
  total_size += 1 * this->e_mounthuakun_equip_list_size();
  for (int i = 0; i < this->e_mounthuakun_equip_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->e_mounthuakun_equip_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_MountHuakun_equip::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_MountHuakun_equip* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_MountHuakun_equip*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_MountHuakun_equip::MergeFrom(const Sheet_MountHuakun_equip& from) {
  GOOGLE_CHECK_NE(&from, this);
  e_mounthuakun_equip_list_.MergeFrom(from.e_mounthuakun_equip_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_MountHuakun_equip::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_MountHuakun_equip::CopyFrom(const Sheet_MountHuakun_equip& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_MountHuakun_equip::IsInitialized() const {

  return true;
}

void Sheet_MountHuakun_equip::Swap(Sheet_MountHuakun_equip* other) {
  if (other != this) {
    e_mounthuakun_equip_list_.Swap(&other->e_mounthuakun_equip_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_MountHuakun_equip::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_MountHuakun_equip_descriptor_;
  metadata.reflection = Sheet_MountHuakun_equip_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_MountEquip_valueAttributeDesc::kMValueFieldNumber;
const int E_MountEquip_valueAttributeDesc::kMTypeFieldNumber;
#endif  // !_MSC_VER

E_MountEquip_valueAttributeDesc::E_MountEquip_valueAttributeDesc()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_MountEquip_valueAttributeDesc::InitAsDefaultInstance() {
}

E_MountEquip_valueAttributeDesc::E_MountEquip_valueAttributeDesc(const E_MountEquip_valueAttributeDesc& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_MountEquip_valueAttributeDesc::SharedCtor() {
  _cached_size_ = 0;
  m_value_ = 0;
  m_type_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_MountEquip_valueAttributeDesc::~E_MountEquip_valueAttributeDesc() {
  SharedDtor();
}

void E_MountEquip_valueAttributeDesc::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_MountEquip_valueAttributeDesc::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_MountEquip_valueAttributeDesc::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_MountEquip_valueAttributeDesc_descriptor_;
}

const E_MountEquip_valueAttributeDesc& E_MountEquip_valueAttributeDesc::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fMount_2eproto();
  return *default_instance_;
}

E_MountEquip_valueAttributeDesc* E_MountEquip_valueAttributeDesc::default_instance_ = NULL;

E_MountEquip_valueAttributeDesc* E_MountEquip_valueAttributeDesc::New() const {
  return new E_MountEquip_valueAttributeDesc;
}

void E_MountEquip_valueAttributeDesc::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_value_ = 0;
    m_type_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_MountEquip_valueAttributeDesc::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_value = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_value_)));
          set_has_m_value();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_type;
        break;
      }

      // optional int32 m_type = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_type_)));
          set_has_m_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_MountEquip_valueAttributeDesc::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_value = 1;
  if (has_m_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_value(), output);
  }

  // optional int32 m_type = 2;
  if (has_m_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_type(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_MountEquip_valueAttributeDesc::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_value = 1;
  if (has_m_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_value(), target);
  }

  // optional int32 m_type = 2;
  if (has_m_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_type(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_MountEquip_valueAttributeDesc::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_value = 1;
    if (has_m_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_value());
    }

    // optional int32 m_type = 2;
    if (has_m_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_type());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_MountEquip_valueAttributeDesc::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_MountEquip_valueAttributeDesc* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_MountEquip_valueAttributeDesc*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_MountEquip_valueAttributeDesc::MergeFrom(const E_MountEquip_valueAttributeDesc& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_value()) {
      set_m_value(from.m_value());
    }
    if (from.has_m_type()) {
      set_m_type(from.m_type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_MountEquip_valueAttributeDesc::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_MountEquip_valueAttributeDesc::CopyFrom(const E_MountEquip_valueAttributeDesc& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_MountEquip_valueAttributeDesc::IsInitialized() const {

  return true;
}

void E_MountEquip_valueAttributeDesc::Swap(E_MountEquip_valueAttributeDesc* other) {
  if (other != this) {
    std::swap(m_value_, other->m_value_);
    std::swap(m_type_, other->m_type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_MountEquip_valueAttributeDesc::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_MountEquip_valueAttributeDesc_descriptor_;
  metadata.reflection = E_MountEquip_valueAttributeDesc_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_MountEquip_value::kMEquipintensifyFieldNumber;
const int E_MountEquip_value::kMEquipvalueFieldNumber;
const int E_MountEquip_value::kMEquiplvFieldNumber;
const int E_MountEquip_value::kMEquipitemFieldNumber;
const int E_MountEquip_value::kMEquipmunFieldNumber;
const int E_MountEquip_value::kMAttributeFieldNumber;
#endif  // !_MSC_VER

E_MountEquip_value::E_MountEquip_value()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_MountEquip_value::InitAsDefaultInstance() {
}

E_MountEquip_value::E_MountEquip_value(const E_MountEquip_value& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_MountEquip_value::SharedCtor() {
  _cached_size_ = 0;
  m_equipintensify_ = 0;
  m_equipvalue_ = 0;
  m_equiplv_ = 0;
  m_equipitem_ = 0;
  m_equipmun_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_MountEquip_value::~E_MountEquip_value() {
  SharedDtor();
}

void E_MountEquip_value::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_MountEquip_value::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_MountEquip_value::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_MountEquip_value_descriptor_;
}

const E_MountEquip_value& E_MountEquip_value::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fMount_2eproto();
  return *default_instance_;
}

E_MountEquip_value* E_MountEquip_value::default_instance_ = NULL;

E_MountEquip_value* E_MountEquip_value::New() const {
  return new E_MountEquip_value;
}

void E_MountEquip_value::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_equipintensify_ = 0;
    m_equipvalue_ = 0;
    m_equiplv_ = 0;
    m_equipitem_ = 0;
    m_equipmun_ = 0;
  }
  m_attribute_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_MountEquip_value::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_equipintensify = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_equipintensify_)));
          set_has_m_equipintensify();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_equipvalue;
        break;
      }

      // optional int32 m_equipvalue = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_equipvalue:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_equipvalue_)));
          set_has_m_equipvalue();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_m_equiplv;
        break;
      }

      // optional int32 m_equiplv = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_equiplv:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_equiplv_)));
          set_has_m_equiplv();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_m_equipitem;
        break;
      }

      // optional int32 m_equipitem = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_equipitem:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_equipitem_)));
          set_has_m_equipitem();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_m_equipmun;
        break;
      }

      // optional int32 m_equipmun = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_equipmun:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_equipmun_)));
          set_has_m_equipmun();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_m_attribute;
        break;
      }

      // repeated .proto_ff.E_MountEquip_valueAttributeDesc m_attribute = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_attribute:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_m_attribute()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_m_attribute;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_MountEquip_value::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_equipintensify = 1;
  if (has_m_equipintensify()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_equipintensify(), output);
  }

  // optional int32 m_equipvalue = 2;
  if (has_m_equipvalue()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_equipvalue(), output);
  }

  // optional int32 m_equiplv = 3;
  if (has_m_equiplv()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->m_equiplv(), output);
  }

  // optional int32 m_equipitem = 4;
  if (has_m_equipitem()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->m_equipitem(), output);
  }

  // optional int32 m_equipmun = 5;
  if (has_m_equipmun()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->m_equipmun(), output);
  }

  // repeated .proto_ff.E_MountEquip_valueAttributeDesc m_attribute = 6;
  for (int i = 0; i < this->m_attribute_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->m_attribute(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_MountEquip_value::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_equipintensify = 1;
  if (has_m_equipintensify()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_equipintensify(), target);
  }

  // optional int32 m_equipvalue = 2;
  if (has_m_equipvalue()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_equipvalue(), target);
  }

  // optional int32 m_equiplv = 3;
  if (has_m_equiplv()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->m_equiplv(), target);
  }

  // optional int32 m_equipitem = 4;
  if (has_m_equipitem()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->m_equipitem(), target);
  }

  // optional int32 m_equipmun = 5;
  if (has_m_equipmun()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->m_equipmun(), target);
  }

  // repeated .proto_ff.E_MountEquip_valueAttributeDesc m_attribute = 6;
  for (int i = 0; i < this->m_attribute_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        6, this->m_attribute(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_MountEquip_value::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_equipintensify = 1;
    if (has_m_equipintensify()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_equipintensify());
    }

    // optional int32 m_equipvalue = 2;
    if (has_m_equipvalue()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_equipvalue());
    }

    // optional int32 m_equiplv = 3;
    if (has_m_equiplv()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_equiplv());
    }

    // optional int32 m_equipitem = 4;
    if (has_m_equipitem()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_equipitem());
    }

    // optional int32 m_equipmun = 5;
    if (has_m_equipmun()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_equipmun());
    }

  }
  // repeated .proto_ff.E_MountEquip_valueAttributeDesc m_attribute = 6;
  total_size += 1 * this->m_attribute_size();
  for (int i = 0; i < this->m_attribute_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->m_attribute(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_MountEquip_value::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_MountEquip_value* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_MountEquip_value*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_MountEquip_value::MergeFrom(const E_MountEquip_value& from) {
  GOOGLE_CHECK_NE(&from, this);
  m_attribute_.MergeFrom(from.m_attribute_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_equipintensify()) {
      set_m_equipintensify(from.m_equipintensify());
    }
    if (from.has_m_equipvalue()) {
      set_m_equipvalue(from.m_equipvalue());
    }
    if (from.has_m_equiplv()) {
      set_m_equiplv(from.m_equiplv());
    }
    if (from.has_m_equipitem()) {
      set_m_equipitem(from.m_equipitem());
    }
    if (from.has_m_equipmun()) {
      set_m_equipmun(from.m_equipmun());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_MountEquip_value::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_MountEquip_value::CopyFrom(const E_MountEquip_value& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_MountEquip_value::IsInitialized() const {

  return true;
}

void E_MountEquip_value::Swap(E_MountEquip_value* other) {
  if (other != this) {
    std::swap(m_equipintensify_, other->m_equipintensify_);
    std::swap(m_equipvalue_, other->m_equipvalue_);
    std::swap(m_equiplv_, other->m_equiplv_);
    std::swap(m_equipitem_, other->m_equipitem_);
    std::swap(m_equipmun_, other->m_equipmun_);
    m_attribute_.Swap(&other->m_attribute_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_MountEquip_value::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_MountEquip_value_descriptor_;
  metadata.reflection = E_MountEquip_value_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_MountEquip_value::kEMountEquipValueListFieldNumber;
#endif  // !_MSC_VER

Sheet_MountEquip_value::Sheet_MountEquip_value()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_MountEquip_value::InitAsDefaultInstance() {
}

Sheet_MountEquip_value::Sheet_MountEquip_value(const Sheet_MountEquip_value& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_MountEquip_value::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_MountEquip_value::~Sheet_MountEquip_value() {
  SharedDtor();
}

void Sheet_MountEquip_value::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_MountEquip_value::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_MountEquip_value::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_MountEquip_value_descriptor_;
}

const Sheet_MountEquip_value& Sheet_MountEquip_value::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fMount_2eproto();
  return *default_instance_;
}

Sheet_MountEquip_value* Sheet_MountEquip_value::default_instance_ = NULL;

Sheet_MountEquip_value* Sheet_MountEquip_value::New() const {
  return new Sheet_MountEquip_value;
}

void Sheet_MountEquip_value::Clear() {
  e_mountequip_value_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_MountEquip_value::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.E_MountEquip_value E_MountEquip_value_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_E_MountEquip_value_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_e_mountequip_value_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_E_MountEquip_value_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_MountEquip_value::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.E_MountEquip_value E_MountEquip_value_List = 1;
  for (int i = 0; i < this->e_mountequip_value_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->e_mountequip_value_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_MountEquip_value::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.E_MountEquip_value E_MountEquip_value_List = 1;
  for (int i = 0; i < this->e_mountequip_value_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->e_mountequip_value_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_MountEquip_value::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.E_MountEquip_value E_MountEquip_value_List = 1;
  total_size += 1 * this->e_mountequip_value_list_size();
  for (int i = 0; i < this->e_mountequip_value_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->e_mountequip_value_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_MountEquip_value::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_MountEquip_value* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_MountEquip_value*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_MountEquip_value::MergeFrom(const Sheet_MountEquip_value& from) {
  GOOGLE_CHECK_NE(&from, this);
  e_mountequip_value_list_.MergeFrom(from.e_mountequip_value_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_MountEquip_value::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_MountEquip_value::CopyFrom(const Sheet_MountEquip_value& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_MountEquip_value::IsInitialized() const {

  return true;
}

void Sheet_MountEquip_value::Swap(Sheet_MountEquip_value* other) {
  if (other != this) {
    e_mountequip_value_list_.Swap(&other->e_mountequip_value_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_MountEquip_value::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_MountEquip_value_descriptor_;
  metadata.reflection = Sheet_MountEquip_value_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_MountEquipsuitAttributeDesc::kMValueFieldNumber;
const int E_MountEquipsuitAttributeDesc::kMTypeFieldNumber;
#endif  // !_MSC_VER

E_MountEquipsuitAttributeDesc::E_MountEquipsuitAttributeDesc()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_MountEquipsuitAttributeDesc::InitAsDefaultInstance() {
}

E_MountEquipsuitAttributeDesc::E_MountEquipsuitAttributeDesc(const E_MountEquipsuitAttributeDesc& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_MountEquipsuitAttributeDesc::SharedCtor() {
  _cached_size_ = 0;
  m_value_ = 0;
  m_type_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_MountEquipsuitAttributeDesc::~E_MountEquipsuitAttributeDesc() {
  SharedDtor();
}

void E_MountEquipsuitAttributeDesc::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_MountEquipsuitAttributeDesc::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_MountEquipsuitAttributeDesc::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_MountEquipsuitAttributeDesc_descriptor_;
}

const E_MountEquipsuitAttributeDesc& E_MountEquipsuitAttributeDesc::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fMount_2eproto();
  return *default_instance_;
}

E_MountEquipsuitAttributeDesc* E_MountEquipsuitAttributeDesc::default_instance_ = NULL;

E_MountEquipsuitAttributeDesc* E_MountEquipsuitAttributeDesc::New() const {
  return new E_MountEquipsuitAttributeDesc;
}

void E_MountEquipsuitAttributeDesc::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_value_ = 0;
    m_type_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_MountEquipsuitAttributeDesc::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_value = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_value_)));
          set_has_m_value();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_type;
        break;
      }

      // optional int32 m_type = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_type_)));
          set_has_m_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_MountEquipsuitAttributeDesc::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_value = 1;
  if (has_m_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_value(), output);
  }

  // optional int32 m_type = 2;
  if (has_m_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_type(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_MountEquipsuitAttributeDesc::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_value = 1;
  if (has_m_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_value(), target);
  }

  // optional int32 m_type = 2;
  if (has_m_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_type(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_MountEquipsuitAttributeDesc::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_value = 1;
    if (has_m_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_value());
    }

    // optional int32 m_type = 2;
    if (has_m_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_type());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_MountEquipsuitAttributeDesc::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_MountEquipsuitAttributeDesc* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_MountEquipsuitAttributeDesc*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_MountEquipsuitAttributeDesc::MergeFrom(const E_MountEquipsuitAttributeDesc& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_value()) {
      set_m_value(from.m_value());
    }
    if (from.has_m_type()) {
      set_m_type(from.m_type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_MountEquipsuitAttributeDesc::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_MountEquipsuitAttributeDesc::CopyFrom(const E_MountEquipsuitAttributeDesc& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_MountEquipsuitAttributeDesc::IsInitialized() const {

  return true;
}

void E_MountEquipsuitAttributeDesc::Swap(E_MountEquipsuitAttributeDesc* other) {
  if (other != this) {
    std::swap(m_value_, other->m_value_);
    std::swap(m_type_, other->m_type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_MountEquipsuitAttributeDesc::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_MountEquipsuitAttributeDesc_descriptor_;
  metadata.reflection = E_MountEquipsuitAttributeDesc_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_MountEquipsuit::kMIdFieldNumber;
const int E_MountEquipsuit::kMQualityFieldNumber;
const int E_MountEquipsuit::kMPieceFieldNumber;
const int E_MountEquipsuit::kMAttributeFieldNumber;
#endif  // !_MSC_VER

E_MountEquipsuit::E_MountEquipsuit()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_MountEquipsuit::InitAsDefaultInstance() {
}

E_MountEquipsuit::E_MountEquipsuit(const E_MountEquipsuit& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_MountEquipsuit::SharedCtor() {
  _cached_size_ = 0;
  m_id_ = 0;
  m_quality_ = 0;
  m_piece_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_MountEquipsuit::~E_MountEquipsuit() {
  SharedDtor();
}

void E_MountEquipsuit::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_MountEquipsuit::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_MountEquipsuit::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_MountEquipsuit_descriptor_;
}

const E_MountEquipsuit& E_MountEquipsuit::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fMount_2eproto();
  return *default_instance_;
}

E_MountEquipsuit* E_MountEquipsuit::default_instance_ = NULL;

E_MountEquipsuit* E_MountEquipsuit::New() const {
  return new E_MountEquipsuit;
}

void E_MountEquipsuit::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_id_ = 0;
    m_quality_ = 0;
    m_piece_ = 0;
  }
  m_attribute_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_MountEquipsuit::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_id_)));
          set_has_m_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_quality;
        break;
      }

      // optional int32 m_quality = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_quality:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_quality_)));
          set_has_m_quality();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_m_piece;
        break;
      }

      // optional int32 m_piece = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_piece:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_piece_)));
          set_has_m_piece();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_m_attribute;
        break;
      }

      // repeated .proto_ff.E_MountEquipsuitAttributeDesc m_attribute = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_attribute:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_m_attribute()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_m_attribute;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_MountEquipsuit::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_id(), output);
  }

  // optional int32 m_quality = 2;
  if (has_m_quality()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_quality(), output);
  }

  // optional int32 m_piece = 3;
  if (has_m_piece()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->m_piece(), output);
  }

  // repeated .proto_ff.E_MountEquipsuitAttributeDesc m_attribute = 4;
  for (int i = 0; i < this->m_attribute_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->m_attribute(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_MountEquipsuit::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_id(), target);
  }

  // optional int32 m_quality = 2;
  if (has_m_quality()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_quality(), target);
  }

  // optional int32 m_piece = 3;
  if (has_m_piece()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->m_piece(), target);
  }

  // repeated .proto_ff.E_MountEquipsuitAttributeDesc m_attribute = 4;
  for (int i = 0; i < this->m_attribute_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->m_attribute(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_MountEquipsuit::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_id = 1;
    if (has_m_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_id());
    }

    // optional int32 m_quality = 2;
    if (has_m_quality()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_quality());
    }

    // optional int32 m_piece = 3;
    if (has_m_piece()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_piece());
    }

  }
  // repeated .proto_ff.E_MountEquipsuitAttributeDesc m_attribute = 4;
  total_size += 1 * this->m_attribute_size();
  for (int i = 0; i < this->m_attribute_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->m_attribute(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_MountEquipsuit::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_MountEquipsuit* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_MountEquipsuit*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_MountEquipsuit::MergeFrom(const E_MountEquipsuit& from) {
  GOOGLE_CHECK_NE(&from, this);
  m_attribute_.MergeFrom(from.m_attribute_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_id()) {
      set_m_id(from.m_id());
    }
    if (from.has_m_quality()) {
      set_m_quality(from.m_quality());
    }
    if (from.has_m_piece()) {
      set_m_piece(from.m_piece());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_MountEquipsuit::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_MountEquipsuit::CopyFrom(const E_MountEquipsuit& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_MountEquipsuit::IsInitialized() const {

  return true;
}

void E_MountEquipsuit::Swap(E_MountEquipsuit* other) {
  if (other != this) {
    std::swap(m_id_, other->m_id_);
    std::swap(m_quality_, other->m_quality_);
    std::swap(m_piece_, other->m_piece_);
    m_attribute_.Swap(&other->m_attribute_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_MountEquipsuit::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_MountEquipsuit_descriptor_;
  metadata.reflection = E_MountEquipsuit_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_MountEquipsuit::kEMountEquipsuitListFieldNumber;
#endif  // !_MSC_VER

Sheet_MountEquipsuit::Sheet_MountEquipsuit()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_MountEquipsuit::InitAsDefaultInstance() {
}

Sheet_MountEquipsuit::Sheet_MountEquipsuit(const Sheet_MountEquipsuit& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_MountEquipsuit::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_MountEquipsuit::~Sheet_MountEquipsuit() {
  SharedDtor();
}

void Sheet_MountEquipsuit::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_MountEquipsuit::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_MountEquipsuit::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_MountEquipsuit_descriptor_;
}

const Sheet_MountEquipsuit& Sheet_MountEquipsuit::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fMount_2eproto();
  return *default_instance_;
}

Sheet_MountEquipsuit* Sheet_MountEquipsuit::default_instance_ = NULL;

Sheet_MountEquipsuit* Sheet_MountEquipsuit::New() const {
  return new Sheet_MountEquipsuit;
}

void Sheet_MountEquipsuit::Clear() {
  e_mountequipsuit_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_MountEquipsuit::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.E_MountEquipsuit E_MountEquipsuit_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_E_MountEquipsuit_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_e_mountequipsuit_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_E_MountEquipsuit_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_MountEquipsuit::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.E_MountEquipsuit E_MountEquipsuit_List = 1;
  for (int i = 0; i < this->e_mountequipsuit_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->e_mountequipsuit_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_MountEquipsuit::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.E_MountEquipsuit E_MountEquipsuit_List = 1;
  for (int i = 0; i < this->e_mountequipsuit_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->e_mountequipsuit_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_MountEquipsuit::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.E_MountEquipsuit E_MountEquipsuit_List = 1;
  total_size += 1 * this->e_mountequipsuit_list_size();
  for (int i = 0; i < this->e_mountequipsuit_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->e_mountequipsuit_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_MountEquipsuit::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_MountEquipsuit* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_MountEquipsuit*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_MountEquipsuit::MergeFrom(const Sheet_MountEquipsuit& from) {
  GOOGLE_CHECK_NE(&from, this);
  e_mountequipsuit_list_.MergeFrom(from.e_mountequipsuit_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_MountEquipsuit::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_MountEquipsuit::CopyFrom(const Sheet_MountEquipsuit& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_MountEquipsuit::IsInitialized() const {

  return true;
}

void Sheet_MountEquipsuit::Swap(Sheet_MountEquipsuit* other) {
  if (other != this) {
    e_mountequipsuit_list_.Swap(&other->e_mountequipsuit_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_MountEquipsuit::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_MountEquipsuit_descriptor_;
  metadata.reflection = Sheet_MountEquipsuit_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_MountEquiptopTopDesc::kMValueFieldNumber;
const int E_MountEquiptopTopDesc::kMTypeFieldNumber;
#endif  // !_MSC_VER

E_MountEquiptopTopDesc::E_MountEquiptopTopDesc()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_MountEquiptopTopDesc::InitAsDefaultInstance() {
}

E_MountEquiptopTopDesc::E_MountEquiptopTopDesc(const E_MountEquiptopTopDesc& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_MountEquiptopTopDesc::SharedCtor() {
  _cached_size_ = 0;
  m_value_ = 0;
  m_type_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_MountEquiptopTopDesc::~E_MountEquiptopTopDesc() {
  SharedDtor();
}

void E_MountEquiptopTopDesc::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_MountEquiptopTopDesc::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_MountEquiptopTopDesc::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_MountEquiptopTopDesc_descriptor_;
}

const E_MountEquiptopTopDesc& E_MountEquiptopTopDesc::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fMount_2eproto();
  return *default_instance_;
}

E_MountEquiptopTopDesc* E_MountEquiptopTopDesc::default_instance_ = NULL;

E_MountEquiptopTopDesc* E_MountEquiptopTopDesc::New() const {
  return new E_MountEquiptopTopDesc;
}

void E_MountEquiptopTopDesc::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_value_ = 0;
    m_type_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_MountEquiptopTopDesc::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_value = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_value_)));
          set_has_m_value();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_type;
        break;
      }

      // optional int32 m_type = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_type_)));
          set_has_m_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_MountEquiptopTopDesc::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_value = 1;
  if (has_m_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_value(), output);
  }

  // optional int32 m_type = 2;
  if (has_m_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_type(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_MountEquiptopTopDesc::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_value = 1;
  if (has_m_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_value(), target);
  }

  // optional int32 m_type = 2;
  if (has_m_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_type(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_MountEquiptopTopDesc::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_value = 1;
    if (has_m_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_value());
    }

    // optional int32 m_type = 2;
    if (has_m_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_type());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_MountEquiptopTopDesc::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_MountEquiptopTopDesc* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_MountEquiptopTopDesc*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_MountEquiptopTopDesc::MergeFrom(const E_MountEquiptopTopDesc& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_value()) {
      set_m_value(from.m_value());
    }
    if (from.has_m_type()) {
      set_m_type(from.m_type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_MountEquiptopTopDesc::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_MountEquiptopTopDesc::CopyFrom(const E_MountEquiptopTopDesc& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_MountEquiptopTopDesc::IsInitialized() const {

  return true;
}

void E_MountEquiptopTopDesc::Swap(E_MountEquiptopTopDesc* other) {
  if (other != this) {
    std::swap(m_value_, other->m_value_);
    std::swap(m_type_, other->m_type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_MountEquiptopTopDesc::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_MountEquiptopTopDesc_descriptor_;
  metadata.reflection = E_MountEquiptopTopDesc_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_MountEquiptopPercentDesc::kMValueFieldNumber;
const int E_MountEquiptopPercentDesc::kMTypeFieldNumber;
#endif  // !_MSC_VER

E_MountEquiptopPercentDesc::E_MountEquiptopPercentDesc()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_MountEquiptopPercentDesc::InitAsDefaultInstance() {
}

E_MountEquiptopPercentDesc::E_MountEquiptopPercentDesc(const E_MountEquiptopPercentDesc& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_MountEquiptopPercentDesc::SharedCtor() {
  _cached_size_ = 0;
  m_value_ = 0;
  m_type_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_MountEquiptopPercentDesc::~E_MountEquiptopPercentDesc() {
  SharedDtor();
}

void E_MountEquiptopPercentDesc::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_MountEquiptopPercentDesc::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_MountEquiptopPercentDesc::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_MountEquiptopPercentDesc_descriptor_;
}

const E_MountEquiptopPercentDesc& E_MountEquiptopPercentDesc::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fMount_2eproto();
  return *default_instance_;
}

E_MountEquiptopPercentDesc* E_MountEquiptopPercentDesc::default_instance_ = NULL;

E_MountEquiptopPercentDesc* E_MountEquiptopPercentDesc::New() const {
  return new E_MountEquiptopPercentDesc;
}

void E_MountEquiptopPercentDesc::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_value_ = 0;
    m_type_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_MountEquiptopPercentDesc::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_value = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_value_)));
          set_has_m_value();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_type;
        break;
      }

      // optional int32 m_type = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_type_)));
          set_has_m_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_MountEquiptopPercentDesc::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_value = 1;
  if (has_m_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_value(), output);
  }

  // optional int32 m_type = 2;
  if (has_m_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_type(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_MountEquiptopPercentDesc::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_value = 1;
  if (has_m_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_value(), target);
  }

  // optional int32 m_type = 2;
  if (has_m_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_type(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_MountEquiptopPercentDesc::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_value = 1;
    if (has_m_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_value());
    }

    // optional int32 m_type = 2;
    if (has_m_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_type());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_MountEquiptopPercentDesc::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_MountEquiptopPercentDesc* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_MountEquiptopPercentDesc*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_MountEquiptopPercentDesc::MergeFrom(const E_MountEquiptopPercentDesc& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_value()) {
      set_m_value(from.m_value());
    }
    if (from.has_m_type()) {
      set_m_type(from.m_type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_MountEquiptopPercentDesc::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_MountEquiptopPercentDesc::CopyFrom(const E_MountEquiptopPercentDesc& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_MountEquiptopPercentDesc::IsInitialized() const {

  return true;
}

void E_MountEquiptopPercentDesc::Swap(E_MountEquiptopPercentDesc* other) {
  if (other != this) {
    std::swap(m_value_, other->m_value_);
    std::swap(m_type_, other->m_type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_MountEquiptopPercentDesc::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_MountEquiptopPercentDesc_descriptor_;
  metadata.reflection = E_MountEquiptopPercentDesc_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_MountEquiptop::kMIdFieldNumber;
const int E_MountEquiptop::kMPositionidFieldNumber;
const int E_MountEquiptop::kMEquipttopFieldNumber;
const int E_MountEquiptop::kMQualityFieldNumber;
const int E_MountEquiptop::kMTopFieldNumber;
const int E_MountEquiptop::kMPercentFieldNumber;
#endif  // !_MSC_VER

E_MountEquiptop::E_MountEquiptop()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_MountEquiptop::InitAsDefaultInstance() {
}

E_MountEquiptop::E_MountEquiptop(const E_MountEquiptop& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_MountEquiptop::SharedCtor() {
  _cached_size_ = 0;
  m_id_ = 0;
  m_positionid_ = 0;
  m_equipttop_ = 0;
  m_quality_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_MountEquiptop::~E_MountEquiptop() {
  SharedDtor();
}

void E_MountEquiptop::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_MountEquiptop::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_MountEquiptop::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_MountEquiptop_descriptor_;
}

const E_MountEquiptop& E_MountEquiptop::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fMount_2eproto();
  return *default_instance_;
}

E_MountEquiptop* E_MountEquiptop::default_instance_ = NULL;

E_MountEquiptop* E_MountEquiptop::New() const {
  return new E_MountEquiptop;
}

void E_MountEquiptop::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_id_ = 0;
    m_positionid_ = 0;
    m_equipttop_ = 0;
    m_quality_ = 0;
  }
  m_top_.Clear();
  m_percent_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_MountEquiptop::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_id_)));
          set_has_m_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_positionid;
        break;
      }

      // optional int32 m_positionid = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_positionid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_positionid_)));
          set_has_m_positionid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_m_equipttop;
        break;
      }

      // optional int32 m_equipttop = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_equipttop:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_equipttop_)));
          set_has_m_equipttop();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_m_quality;
        break;
      }

      // optional int32 m_quality = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_quality:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_quality_)));
          set_has_m_quality();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_m_top;
        break;
      }

      // repeated .proto_ff.E_MountEquiptopTopDesc m_top = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_top:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_m_top()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_m_top;
        if (input->ExpectTag(50)) goto parse_m_percent;
        break;
      }

      // repeated .proto_ff.E_MountEquiptopPercentDesc m_percent = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_percent:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_m_percent()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_m_percent;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_MountEquiptop::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_id(), output);
  }

  // optional int32 m_positionid = 2;
  if (has_m_positionid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_positionid(), output);
  }

  // optional int32 m_equipttop = 3;
  if (has_m_equipttop()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->m_equipttop(), output);
  }

  // optional int32 m_quality = 4;
  if (has_m_quality()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->m_quality(), output);
  }

  // repeated .proto_ff.E_MountEquiptopTopDesc m_top = 5;
  for (int i = 0; i < this->m_top_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->m_top(i), output);
  }

  // repeated .proto_ff.E_MountEquiptopPercentDesc m_percent = 6;
  for (int i = 0; i < this->m_percent_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->m_percent(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_MountEquiptop::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_id(), target);
  }

  // optional int32 m_positionid = 2;
  if (has_m_positionid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_positionid(), target);
  }

  // optional int32 m_equipttop = 3;
  if (has_m_equipttop()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->m_equipttop(), target);
  }

  // optional int32 m_quality = 4;
  if (has_m_quality()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->m_quality(), target);
  }

  // repeated .proto_ff.E_MountEquiptopTopDesc m_top = 5;
  for (int i = 0; i < this->m_top_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->m_top(i), target);
  }

  // repeated .proto_ff.E_MountEquiptopPercentDesc m_percent = 6;
  for (int i = 0; i < this->m_percent_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        6, this->m_percent(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_MountEquiptop::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_id = 1;
    if (has_m_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_id());
    }

    // optional int32 m_positionid = 2;
    if (has_m_positionid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_positionid());
    }

    // optional int32 m_equipttop = 3;
    if (has_m_equipttop()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_equipttop());
    }

    // optional int32 m_quality = 4;
    if (has_m_quality()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_quality());
    }

  }
  // repeated .proto_ff.E_MountEquiptopTopDesc m_top = 5;
  total_size += 1 * this->m_top_size();
  for (int i = 0; i < this->m_top_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->m_top(i));
  }

  // repeated .proto_ff.E_MountEquiptopPercentDesc m_percent = 6;
  total_size += 1 * this->m_percent_size();
  for (int i = 0; i < this->m_percent_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->m_percent(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_MountEquiptop::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_MountEquiptop* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_MountEquiptop*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_MountEquiptop::MergeFrom(const E_MountEquiptop& from) {
  GOOGLE_CHECK_NE(&from, this);
  m_top_.MergeFrom(from.m_top_);
  m_percent_.MergeFrom(from.m_percent_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_id()) {
      set_m_id(from.m_id());
    }
    if (from.has_m_positionid()) {
      set_m_positionid(from.m_positionid());
    }
    if (from.has_m_equipttop()) {
      set_m_equipttop(from.m_equipttop());
    }
    if (from.has_m_quality()) {
      set_m_quality(from.m_quality());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_MountEquiptop::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_MountEquiptop::CopyFrom(const E_MountEquiptop& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_MountEquiptop::IsInitialized() const {

  return true;
}

void E_MountEquiptop::Swap(E_MountEquiptop* other) {
  if (other != this) {
    std::swap(m_id_, other->m_id_);
    std::swap(m_positionid_, other->m_positionid_);
    std::swap(m_equipttop_, other->m_equipttop_);
    std::swap(m_quality_, other->m_quality_);
    m_top_.Swap(&other->m_top_);
    m_percent_.Swap(&other->m_percent_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_MountEquiptop::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_MountEquiptop_descriptor_;
  metadata.reflection = E_MountEquiptop_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_MountEquiptop::kEMountEquiptopListFieldNumber;
#endif  // !_MSC_VER

Sheet_MountEquiptop::Sheet_MountEquiptop()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_MountEquiptop::InitAsDefaultInstance() {
}

Sheet_MountEquiptop::Sheet_MountEquiptop(const Sheet_MountEquiptop& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_MountEquiptop::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_MountEquiptop::~Sheet_MountEquiptop() {
  SharedDtor();
}

void Sheet_MountEquiptop::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_MountEquiptop::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_MountEquiptop::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_MountEquiptop_descriptor_;
}

const Sheet_MountEquiptop& Sheet_MountEquiptop::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fMount_2eproto();
  return *default_instance_;
}

Sheet_MountEquiptop* Sheet_MountEquiptop::default_instance_ = NULL;

Sheet_MountEquiptop* Sheet_MountEquiptop::New() const {
  return new Sheet_MountEquiptop;
}

void Sheet_MountEquiptop::Clear() {
  e_mountequiptop_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_MountEquiptop::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.E_MountEquiptop E_MountEquiptop_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_E_MountEquiptop_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_e_mountequiptop_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_E_MountEquiptop_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_MountEquiptop::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.E_MountEquiptop E_MountEquiptop_List = 1;
  for (int i = 0; i < this->e_mountequiptop_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->e_mountequiptop_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_MountEquiptop::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.E_MountEquiptop E_MountEquiptop_List = 1;
  for (int i = 0; i < this->e_mountequiptop_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->e_mountequiptop_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_MountEquiptop::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.E_MountEquiptop E_MountEquiptop_List = 1;
  total_size += 1 * this->e_mountequiptop_list_size();
  for (int i = 0; i < this->e_mountequiptop_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->e_mountequiptop_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_MountEquiptop::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_MountEquiptop* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_MountEquiptop*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_MountEquiptop::MergeFrom(const Sheet_MountEquiptop& from) {
  GOOGLE_CHECK_NE(&from, this);
  e_mountequiptop_list_.MergeFrom(from.e_mountequiptop_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_MountEquiptop::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_MountEquiptop::CopyFrom(const Sheet_MountEquiptop& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_MountEquiptop::IsInitialized() const {

  return true;
}

void Sheet_MountEquiptop::Swap(Sheet_MountEquiptop* other) {
  if (other != this) {
    e_mountequiptop_list_.Swap(&other->e_mountequiptop_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_MountEquiptop::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_MountEquiptop_descriptor_;
  metadata.reflection = Sheet_MountEquiptop_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_MountEquiptopvalue::kMIdFieldNumber;
const int E_MountEquiptopvalue::kMQualityFieldNumber;
const int E_MountEquiptopvalue::kMTopFieldNumber;
const int E_MountEquiptopvalue::kMValueFieldNumber;
#endif  // !_MSC_VER

E_MountEquiptopvalue::E_MountEquiptopvalue()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_MountEquiptopvalue::InitAsDefaultInstance() {
}

E_MountEquiptopvalue::E_MountEquiptopvalue(const E_MountEquiptopvalue& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_MountEquiptopvalue::SharedCtor() {
  _cached_size_ = 0;
  m_id_ = 0;
  m_quality_ = 0;
  m_top_ = 0;
  m_value_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_MountEquiptopvalue::~E_MountEquiptopvalue() {
  SharedDtor();
}

void E_MountEquiptopvalue::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_MountEquiptopvalue::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_MountEquiptopvalue::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_MountEquiptopvalue_descriptor_;
}

const E_MountEquiptopvalue& E_MountEquiptopvalue::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fMount_2eproto();
  return *default_instance_;
}

E_MountEquiptopvalue* E_MountEquiptopvalue::default_instance_ = NULL;

E_MountEquiptopvalue* E_MountEquiptopvalue::New() const {
  return new E_MountEquiptopvalue;
}

void E_MountEquiptopvalue::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_id_ = 0;
    m_quality_ = 0;
    m_top_ = 0;
    m_value_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_MountEquiptopvalue::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_id_)));
          set_has_m_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_quality;
        break;
      }

      // optional int32 m_quality = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_quality:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_quality_)));
          set_has_m_quality();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_m_top;
        break;
      }

      // optional int32 m_top = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_top:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_top_)));
          set_has_m_top();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_m_value;
        break;
      }

      // optional int32 m_value = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_value:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_value_)));
          set_has_m_value();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_MountEquiptopvalue::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_id(), output);
  }

  // optional int32 m_quality = 2;
  if (has_m_quality()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_quality(), output);
  }

  // optional int32 m_top = 3;
  if (has_m_top()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->m_top(), output);
  }

  // optional int32 m_value = 4;
  if (has_m_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->m_value(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_MountEquiptopvalue::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_id(), target);
  }

  // optional int32 m_quality = 2;
  if (has_m_quality()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_quality(), target);
  }

  // optional int32 m_top = 3;
  if (has_m_top()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->m_top(), target);
  }

  // optional int32 m_value = 4;
  if (has_m_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->m_value(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_MountEquiptopvalue::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_id = 1;
    if (has_m_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_id());
    }

    // optional int32 m_quality = 2;
    if (has_m_quality()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_quality());
    }

    // optional int32 m_top = 3;
    if (has_m_top()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_top());
    }

    // optional int32 m_value = 4;
    if (has_m_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_value());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_MountEquiptopvalue::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_MountEquiptopvalue* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_MountEquiptopvalue*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_MountEquiptopvalue::MergeFrom(const E_MountEquiptopvalue& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_id()) {
      set_m_id(from.m_id());
    }
    if (from.has_m_quality()) {
      set_m_quality(from.m_quality());
    }
    if (from.has_m_top()) {
      set_m_top(from.m_top());
    }
    if (from.has_m_value()) {
      set_m_value(from.m_value());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_MountEquiptopvalue::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_MountEquiptopvalue::CopyFrom(const E_MountEquiptopvalue& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_MountEquiptopvalue::IsInitialized() const {

  return true;
}

void E_MountEquiptopvalue::Swap(E_MountEquiptopvalue* other) {
  if (other != this) {
    std::swap(m_id_, other->m_id_);
    std::swap(m_quality_, other->m_quality_);
    std::swap(m_top_, other->m_top_);
    std::swap(m_value_, other->m_value_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_MountEquiptopvalue::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_MountEquiptopvalue_descriptor_;
  metadata.reflection = E_MountEquiptopvalue_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_MountEquiptopvalue::kEMountEquiptopvalueListFieldNumber;
#endif  // !_MSC_VER

Sheet_MountEquiptopvalue::Sheet_MountEquiptopvalue()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_MountEquiptopvalue::InitAsDefaultInstance() {
}

Sheet_MountEquiptopvalue::Sheet_MountEquiptopvalue(const Sheet_MountEquiptopvalue& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_MountEquiptopvalue::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_MountEquiptopvalue::~Sheet_MountEquiptopvalue() {
  SharedDtor();
}

void Sheet_MountEquiptopvalue::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_MountEquiptopvalue::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_MountEquiptopvalue::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_MountEquiptopvalue_descriptor_;
}

const Sheet_MountEquiptopvalue& Sheet_MountEquiptopvalue::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fMount_2eproto();
  return *default_instance_;
}

Sheet_MountEquiptopvalue* Sheet_MountEquiptopvalue::default_instance_ = NULL;

Sheet_MountEquiptopvalue* Sheet_MountEquiptopvalue::New() const {
  return new Sheet_MountEquiptopvalue;
}

void Sheet_MountEquiptopvalue::Clear() {
  e_mountequiptopvalue_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_MountEquiptopvalue::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.E_MountEquiptopvalue E_MountEquiptopvalue_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_E_MountEquiptopvalue_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_e_mountequiptopvalue_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_E_MountEquiptopvalue_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_MountEquiptopvalue::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.E_MountEquiptopvalue E_MountEquiptopvalue_List = 1;
  for (int i = 0; i < this->e_mountequiptopvalue_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->e_mountequiptopvalue_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_MountEquiptopvalue::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.E_MountEquiptopvalue E_MountEquiptopvalue_List = 1;
  for (int i = 0; i < this->e_mountequiptopvalue_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->e_mountequiptopvalue_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_MountEquiptopvalue::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.E_MountEquiptopvalue E_MountEquiptopvalue_List = 1;
  total_size += 1 * this->e_mountequiptopvalue_list_size();
  for (int i = 0; i < this->e_mountequiptopvalue_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->e_mountequiptopvalue_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_MountEquiptopvalue::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_MountEquiptopvalue* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_MountEquiptopvalue*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_MountEquiptopvalue::MergeFrom(const Sheet_MountEquiptopvalue& from) {
  GOOGLE_CHECK_NE(&from, this);
  e_mountequiptopvalue_list_.MergeFrom(from.e_mountequiptopvalue_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_MountEquiptopvalue::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_MountEquiptopvalue::CopyFrom(const Sheet_MountEquiptopvalue& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_MountEquiptopvalue::IsInitialized() const {

  return true;
}

void Sheet_MountEquiptopvalue::Swap(Sheet_MountEquiptopvalue* other) {
  if (other != this) {
    e_mountequiptopvalue_list_.Swap(&other->e_mountequiptopvalue_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_MountEquiptopvalue::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_MountEquiptopvalue_descriptor_;
  metadata.reflection = Sheet_MountEquiptopvalue_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_MountEquippart::kMPartFieldNumber;
const int E_MountEquippart::kMQualityFieldNumber;
const int E_MountEquippart::kMHoneopenFieldNumber;
const int E_MountEquippart::kMItemFieldNumber;
const int E_MountEquippart::kMNumFieldNumber;
#endif  // !_MSC_VER

E_MountEquippart::E_MountEquippart()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_MountEquippart::InitAsDefaultInstance() {
}

E_MountEquippart::E_MountEquippart(const E_MountEquippart& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_MountEquippart::SharedCtor() {
  _cached_size_ = 0;
  m_part_ = 0;
  m_quality_ = 0;
  m_honeopen_ = 0;
  m_item_ = 0;
  m_num_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_MountEquippart::~E_MountEquippart() {
  SharedDtor();
}

void E_MountEquippart::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_MountEquippart::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_MountEquippart::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_MountEquippart_descriptor_;
}

const E_MountEquippart& E_MountEquippart::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fMount_2eproto();
  return *default_instance_;
}

E_MountEquippart* E_MountEquippart::default_instance_ = NULL;

E_MountEquippart* E_MountEquippart::New() const {
  return new E_MountEquippart;
}

void E_MountEquippart::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_part_ = 0;
    m_quality_ = 0;
    m_honeopen_ = 0;
    m_item_ = 0;
    m_num_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_MountEquippart::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_part = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_part_)));
          set_has_m_part();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_quality;
        break;
      }

      // optional int32 m_quality = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_quality:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_quality_)));
          set_has_m_quality();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_m_honeopen;
        break;
      }

      // optional int32 m_honeopen = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_honeopen:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_honeopen_)));
          set_has_m_honeopen();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_m_item;
        break;
      }

      // optional int32 m_item = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_item:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_item_)));
          set_has_m_item();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_m_num;
        break;
      }

      // optional int32 m_num = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_num:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_num_)));
          set_has_m_num();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_MountEquippart::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_part = 1;
  if (has_m_part()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_part(), output);
  }

  // optional int32 m_quality = 2;
  if (has_m_quality()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_quality(), output);
  }

  // optional int32 m_honeopen = 3;
  if (has_m_honeopen()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->m_honeopen(), output);
  }

  // optional int32 m_item = 4;
  if (has_m_item()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->m_item(), output);
  }

  // optional int32 m_num = 5;
  if (has_m_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->m_num(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_MountEquippart::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_part = 1;
  if (has_m_part()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_part(), target);
  }

  // optional int32 m_quality = 2;
  if (has_m_quality()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_quality(), target);
  }

  // optional int32 m_honeopen = 3;
  if (has_m_honeopen()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->m_honeopen(), target);
  }

  // optional int32 m_item = 4;
  if (has_m_item()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->m_item(), target);
  }

  // optional int32 m_num = 5;
  if (has_m_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->m_num(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_MountEquippart::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_part = 1;
    if (has_m_part()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_part());
    }

    // optional int32 m_quality = 2;
    if (has_m_quality()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_quality());
    }

    // optional int32 m_honeopen = 3;
    if (has_m_honeopen()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_honeopen());
    }

    // optional int32 m_item = 4;
    if (has_m_item()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_item());
    }

    // optional int32 m_num = 5;
    if (has_m_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_num());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_MountEquippart::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_MountEquippart* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_MountEquippart*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_MountEquippart::MergeFrom(const E_MountEquippart& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_part()) {
      set_m_part(from.m_part());
    }
    if (from.has_m_quality()) {
      set_m_quality(from.m_quality());
    }
    if (from.has_m_honeopen()) {
      set_m_honeopen(from.m_honeopen());
    }
    if (from.has_m_item()) {
      set_m_item(from.m_item());
    }
    if (from.has_m_num()) {
      set_m_num(from.m_num());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_MountEquippart::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_MountEquippart::CopyFrom(const E_MountEquippart& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_MountEquippart::IsInitialized() const {

  return true;
}

void E_MountEquippart::Swap(E_MountEquippart* other) {
  if (other != this) {
    std::swap(m_part_, other->m_part_);
    std::swap(m_quality_, other->m_quality_);
    std::swap(m_honeopen_, other->m_honeopen_);
    std::swap(m_item_, other->m_item_);
    std::swap(m_num_, other->m_num_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_MountEquippart::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_MountEquippart_descriptor_;
  metadata.reflection = E_MountEquippart_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_MountEquippart::kEMountEquippartListFieldNumber;
#endif  // !_MSC_VER

Sheet_MountEquippart::Sheet_MountEquippart()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_MountEquippart::InitAsDefaultInstance() {
}

Sheet_MountEquippart::Sheet_MountEquippart(const Sheet_MountEquippart& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_MountEquippart::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_MountEquippart::~Sheet_MountEquippart() {
  SharedDtor();
}

void Sheet_MountEquippart::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_MountEquippart::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_MountEquippart::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_MountEquippart_descriptor_;
}

const Sheet_MountEquippart& Sheet_MountEquippart::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fMount_2eproto();
  return *default_instance_;
}

Sheet_MountEquippart* Sheet_MountEquippart::default_instance_ = NULL;

Sheet_MountEquippart* Sheet_MountEquippart::New() const {
  return new Sheet_MountEquippart;
}

void Sheet_MountEquippart::Clear() {
  e_mountequippart_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_MountEquippart::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.E_MountEquippart E_MountEquippart_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_E_MountEquippart_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_e_mountequippart_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_E_MountEquippart_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_MountEquippart::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.E_MountEquippart E_MountEquippart_List = 1;
  for (int i = 0; i < this->e_mountequippart_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->e_mountequippart_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_MountEquippart::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.E_MountEquippart E_MountEquippart_List = 1;
  for (int i = 0; i < this->e_mountequippart_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->e_mountequippart_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_MountEquippart::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.E_MountEquippart E_MountEquippart_List = 1;
  total_size += 1 * this->e_mountequippart_list_size();
  for (int i = 0; i < this->e_mountequippart_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->e_mountequippart_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_MountEquippart::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_MountEquippart* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_MountEquippart*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_MountEquippart::MergeFrom(const Sheet_MountEquippart& from) {
  GOOGLE_CHECK_NE(&from, this);
  e_mountequippart_list_.MergeFrom(from.e_mountequippart_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_MountEquippart::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_MountEquippart::CopyFrom(const Sheet_MountEquippart& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_MountEquippart::IsInitialized() const {

  return true;
}

void Sheet_MountEquippart::Swap(Sheet_MountEquippart* other) {
  if (other != this) {
    e_mountequippart_list_.Swap(&other->e_mountequippart_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_MountEquippart::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_MountEquippart_descriptor_;
  metadata.reflection = Sheet_MountEquippart_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_MountEmpowermenttour_debris::kMFairylandidFieldNumber;
const int E_MountEmpowermenttour_debris::kMFairylandnextidFieldNumber;
const int E_MountEmpowermenttour_debris::kMFairylandskinFieldNumber;
#endif  // !_MSC_VER

E_MountEmpowermenttour_debris::E_MountEmpowermenttour_debris()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_MountEmpowermenttour_debris::InitAsDefaultInstance() {
}

E_MountEmpowermenttour_debris::E_MountEmpowermenttour_debris(const E_MountEmpowermenttour_debris& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_MountEmpowermenttour_debris::SharedCtor() {
  _cached_size_ = 0;
  m_fairylandid_ = 0;
  m_fairylandnextid_ = 0;
  m_fairylandskin_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_MountEmpowermenttour_debris::~E_MountEmpowermenttour_debris() {
  SharedDtor();
}

void E_MountEmpowermenttour_debris::SharedDtor() {
  if (m_fairylandskin_ != &::google::protobuf::internal::kEmptyString) {
    delete m_fairylandskin_;
  }
  if (this != default_instance_) {
  }
}

void E_MountEmpowermenttour_debris::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_MountEmpowermenttour_debris::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_MountEmpowermenttour_debris_descriptor_;
}

const E_MountEmpowermenttour_debris& E_MountEmpowermenttour_debris::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fMount_2eproto();
  return *default_instance_;
}

E_MountEmpowermenttour_debris* E_MountEmpowermenttour_debris::default_instance_ = NULL;

E_MountEmpowermenttour_debris* E_MountEmpowermenttour_debris::New() const {
  return new E_MountEmpowermenttour_debris;
}

void E_MountEmpowermenttour_debris::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_fairylandid_ = 0;
    m_fairylandnextid_ = 0;
    if (has_m_fairylandskin()) {
      if (m_fairylandskin_ != &::google::protobuf::internal::kEmptyString) {
        m_fairylandskin_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_MountEmpowermenttour_debris::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_fairylandid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_fairylandid_)));
          set_has_m_fairylandid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_fairylandnextid;
        break;
      }

      // optional int32 m_fairylandnextid = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_fairylandnextid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_fairylandnextid_)));
          set_has_m_fairylandnextid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_m_fairylandskin;
        break;
      }

      // optional string m_fairylandskin = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_fairylandskin:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_m_fairylandskin()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->m_fairylandskin().data(), this->m_fairylandskin().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_MountEmpowermenttour_debris::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_fairylandid = 1;
  if (has_m_fairylandid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_fairylandid(), output);
  }

  // optional int32 m_fairylandnextid = 2;
  if (has_m_fairylandnextid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_fairylandnextid(), output);
  }

  // optional string m_fairylandskin = 3;
  if (has_m_fairylandskin()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_fairylandskin().data(), this->m_fairylandskin().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->m_fairylandskin(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_MountEmpowermenttour_debris::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_fairylandid = 1;
  if (has_m_fairylandid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_fairylandid(), target);
  }

  // optional int32 m_fairylandnextid = 2;
  if (has_m_fairylandnextid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_fairylandnextid(), target);
  }

  // optional string m_fairylandskin = 3;
  if (has_m_fairylandskin()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_fairylandskin().data(), this->m_fairylandskin().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->m_fairylandskin(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_MountEmpowermenttour_debris::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_fairylandid = 1;
    if (has_m_fairylandid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_fairylandid());
    }

    // optional int32 m_fairylandnextid = 2;
    if (has_m_fairylandnextid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_fairylandnextid());
    }

    // optional string m_fairylandskin = 3;
    if (has_m_fairylandskin()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->m_fairylandskin());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_MountEmpowermenttour_debris::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_MountEmpowermenttour_debris* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_MountEmpowermenttour_debris*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_MountEmpowermenttour_debris::MergeFrom(const E_MountEmpowermenttour_debris& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_fairylandid()) {
      set_m_fairylandid(from.m_fairylandid());
    }
    if (from.has_m_fairylandnextid()) {
      set_m_fairylandnextid(from.m_fairylandnextid());
    }
    if (from.has_m_fairylandskin()) {
      set_m_fairylandskin(from.m_fairylandskin());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_MountEmpowermenttour_debris::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_MountEmpowermenttour_debris::CopyFrom(const E_MountEmpowermenttour_debris& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_MountEmpowermenttour_debris::IsInitialized() const {

  return true;
}

void E_MountEmpowermenttour_debris::Swap(E_MountEmpowermenttour_debris* other) {
  if (other != this) {
    std::swap(m_fairylandid_, other->m_fairylandid_);
    std::swap(m_fairylandnextid_, other->m_fairylandnextid_);
    std::swap(m_fairylandskin_, other->m_fairylandskin_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_MountEmpowermenttour_debris::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_MountEmpowermenttour_debris_descriptor_;
  metadata.reflection = E_MountEmpowermenttour_debris_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_MountEmpowermenttour_debris::kEMountEmpowermenttourDebrisListFieldNumber;
#endif  // !_MSC_VER

Sheet_MountEmpowermenttour_debris::Sheet_MountEmpowermenttour_debris()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_MountEmpowermenttour_debris::InitAsDefaultInstance() {
}

Sheet_MountEmpowermenttour_debris::Sheet_MountEmpowermenttour_debris(const Sheet_MountEmpowermenttour_debris& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_MountEmpowermenttour_debris::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_MountEmpowermenttour_debris::~Sheet_MountEmpowermenttour_debris() {
  SharedDtor();
}

void Sheet_MountEmpowermenttour_debris::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_MountEmpowermenttour_debris::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_MountEmpowermenttour_debris::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_MountEmpowermenttour_debris_descriptor_;
}

const Sheet_MountEmpowermenttour_debris& Sheet_MountEmpowermenttour_debris::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fMount_2eproto();
  return *default_instance_;
}

Sheet_MountEmpowermenttour_debris* Sheet_MountEmpowermenttour_debris::default_instance_ = NULL;

Sheet_MountEmpowermenttour_debris* Sheet_MountEmpowermenttour_debris::New() const {
  return new Sheet_MountEmpowermenttour_debris;
}

void Sheet_MountEmpowermenttour_debris::Clear() {
  e_mountempowermenttour_debris_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_MountEmpowermenttour_debris::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.E_MountEmpowermenttour_debris E_MountEmpowermenttour_debris_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_E_MountEmpowermenttour_debris_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_e_mountempowermenttour_debris_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_E_MountEmpowermenttour_debris_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_MountEmpowermenttour_debris::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.E_MountEmpowermenttour_debris E_MountEmpowermenttour_debris_List = 1;
  for (int i = 0; i < this->e_mountempowermenttour_debris_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->e_mountempowermenttour_debris_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_MountEmpowermenttour_debris::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.E_MountEmpowermenttour_debris E_MountEmpowermenttour_debris_List = 1;
  for (int i = 0; i < this->e_mountempowermenttour_debris_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->e_mountempowermenttour_debris_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_MountEmpowermenttour_debris::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.E_MountEmpowermenttour_debris E_MountEmpowermenttour_debris_List = 1;
  total_size += 1 * this->e_mountempowermenttour_debris_list_size();
  for (int i = 0; i < this->e_mountempowermenttour_debris_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->e_mountempowermenttour_debris_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_MountEmpowermenttour_debris::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_MountEmpowermenttour_debris* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_MountEmpowermenttour_debris*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_MountEmpowermenttour_debris::MergeFrom(const Sheet_MountEmpowermenttour_debris& from) {
  GOOGLE_CHECK_NE(&from, this);
  e_mountempowermenttour_debris_list_.MergeFrom(from.e_mountempowermenttour_debris_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_MountEmpowermenttour_debris::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_MountEmpowermenttour_debris::CopyFrom(const Sheet_MountEmpowermenttour_debris& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_MountEmpowermenttour_debris::IsInitialized() const {

  return true;
}

void Sheet_MountEmpowermenttour_debris::Swap(Sheet_MountEmpowermenttour_debris* other) {
  if (other != this) {
    e_mountempowermenttour_debris_list_.Swap(&other->e_mountempowermenttour_debris_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_MountEmpowermenttour_debris::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_MountEmpowermenttour_debris_descriptor_;
  metadata.reflection = Sheet_MountEmpowermenttour_debris_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_MountEmpowermentTourDesc::kMValueFieldNumber;
const int E_MountEmpowermentTourDesc::kMTypeFieldNumber;
#endif  // !_MSC_VER

E_MountEmpowermentTourDesc::E_MountEmpowermentTourDesc()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_MountEmpowermentTourDesc::InitAsDefaultInstance() {
}

E_MountEmpowermentTourDesc::E_MountEmpowermentTourDesc(const E_MountEmpowermentTourDesc& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_MountEmpowermentTourDesc::SharedCtor() {
  _cached_size_ = 0;
  m_value_ = 0;
  m_type_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_MountEmpowermentTourDesc::~E_MountEmpowermentTourDesc() {
  SharedDtor();
}

void E_MountEmpowermentTourDesc::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_MountEmpowermentTourDesc::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_MountEmpowermentTourDesc::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_MountEmpowermentTourDesc_descriptor_;
}

const E_MountEmpowermentTourDesc& E_MountEmpowermentTourDesc::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fMount_2eproto();
  return *default_instance_;
}

E_MountEmpowermentTourDesc* E_MountEmpowermentTourDesc::default_instance_ = NULL;

E_MountEmpowermentTourDesc* E_MountEmpowermentTourDesc::New() const {
  return new E_MountEmpowermentTourDesc;
}

void E_MountEmpowermentTourDesc::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_value_ = 0;
    m_type_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_MountEmpowermentTourDesc::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_value = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_value_)));
          set_has_m_value();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_type;
        break;
      }

      // optional int32 m_type = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_type_)));
          set_has_m_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_MountEmpowermentTourDesc::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_value = 1;
  if (has_m_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_value(), output);
  }

  // optional int32 m_type = 2;
  if (has_m_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_type(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_MountEmpowermentTourDesc::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_value = 1;
  if (has_m_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_value(), target);
  }

  // optional int32 m_type = 2;
  if (has_m_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_type(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_MountEmpowermentTourDesc::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_value = 1;
    if (has_m_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_value());
    }

    // optional int32 m_type = 2;
    if (has_m_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_type());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_MountEmpowermentTourDesc::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_MountEmpowermentTourDesc* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_MountEmpowermentTourDesc*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_MountEmpowermentTourDesc::MergeFrom(const E_MountEmpowermentTourDesc& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_value()) {
      set_m_value(from.m_value());
    }
    if (from.has_m_type()) {
      set_m_type(from.m_type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_MountEmpowermentTourDesc::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_MountEmpowermentTourDesc::CopyFrom(const E_MountEmpowermentTourDesc& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_MountEmpowermentTourDesc::IsInitialized() const {

  return true;
}

void E_MountEmpowermentTourDesc::Swap(E_MountEmpowermentTourDesc* other) {
  if (other != this) {
    std::swap(m_value_, other->m_value_);
    std::swap(m_type_, other->m_type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_MountEmpowermentTourDesc::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_MountEmpowermentTourDesc_descriptor_;
  metadata.reflection = E_MountEmpowermentTourDesc_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_MountEmpowerment::kMTouridFieldNumber;
const int E_MountEmpowerment::kMFairylandidFieldNumber;
const int E_MountEmpowerment::kMTouritemFieldNumber;
const int E_MountEmpowerment::kMTourdebrisFieldNumber;
const int E_MountEmpowerment::kMTourFieldNumber;
#endif  // !_MSC_VER

E_MountEmpowerment::E_MountEmpowerment()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_MountEmpowerment::InitAsDefaultInstance() {
}

E_MountEmpowerment::E_MountEmpowerment(const E_MountEmpowerment& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_MountEmpowerment::SharedCtor() {
  _cached_size_ = 0;
  m_tourid_ = 0;
  m_fairylandid_ = 0;
  m_touritem_ = 0;
  m_tourdebris_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_MountEmpowerment::~E_MountEmpowerment() {
  SharedDtor();
}

void E_MountEmpowerment::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_MountEmpowerment::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_MountEmpowerment::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_MountEmpowerment_descriptor_;
}

const E_MountEmpowerment& E_MountEmpowerment::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fMount_2eproto();
  return *default_instance_;
}

E_MountEmpowerment* E_MountEmpowerment::default_instance_ = NULL;

E_MountEmpowerment* E_MountEmpowerment::New() const {
  return new E_MountEmpowerment;
}

void E_MountEmpowerment::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_tourid_ = 0;
    m_fairylandid_ = 0;
    m_touritem_ = 0;
    m_tourdebris_ = 0;
  }
  m_tour_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_MountEmpowerment::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_tourid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_tourid_)));
          set_has_m_tourid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_fairylandid;
        break;
      }

      // optional int32 m_fairylandid = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_fairylandid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_fairylandid_)));
          set_has_m_fairylandid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_m_touritem;
        break;
      }

      // optional int32 m_touritem = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_touritem:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_touritem_)));
          set_has_m_touritem();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_m_tourdebris;
        break;
      }

      // optional int32 m_tourdebris = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_tourdebris:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_tourdebris_)));
          set_has_m_tourdebris();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_m_tour;
        break;
      }

      // repeated .proto_ff.E_MountEmpowermentTourDesc m_tour = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_tour:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_m_tour()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_m_tour;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_MountEmpowerment::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_tourid = 1;
  if (has_m_tourid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_tourid(), output);
  }

  // optional int32 m_fairylandid = 2;
  if (has_m_fairylandid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_fairylandid(), output);
  }

  // optional int32 m_touritem = 3;
  if (has_m_touritem()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->m_touritem(), output);
  }

  // optional int32 m_tourdebris = 4;
  if (has_m_tourdebris()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->m_tourdebris(), output);
  }

  // repeated .proto_ff.E_MountEmpowermentTourDesc m_tour = 5;
  for (int i = 0; i < this->m_tour_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->m_tour(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_MountEmpowerment::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_tourid = 1;
  if (has_m_tourid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_tourid(), target);
  }

  // optional int32 m_fairylandid = 2;
  if (has_m_fairylandid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_fairylandid(), target);
  }

  // optional int32 m_touritem = 3;
  if (has_m_touritem()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->m_touritem(), target);
  }

  // optional int32 m_tourdebris = 4;
  if (has_m_tourdebris()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->m_tourdebris(), target);
  }

  // repeated .proto_ff.E_MountEmpowermentTourDesc m_tour = 5;
  for (int i = 0; i < this->m_tour_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->m_tour(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_MountEmpowerment::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_tourid = 1;
    if (has_m_tourid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_tourid());
    }

    // optional int32 m_fairylandid = 2;
    if (has_m_fairylandid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_fairylandid());
    }

    // optional int32 m_touritem = 3;
    if (has_m_touritem()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_touritem());
    }

    // optional int32 m_tourdebris = 4;
    if (has_m_tourdebris()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_tourdebris());
    }

  }
  // repeated .proto_ff.E_MountEmpowermentTourDesc m_tour = 5;
  total_size += 1 * this->m_tour_size();
  for (int i = 0; i < this->m_tour_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->m_tour(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_MountEmpowerment::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_MountEmpowerment* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_MountEmpowerment*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_MountEmpowerment::MergeFrom(const E_MountEmpowerment& from) {
  GOOGLE_CHECK_NE(&from, this);
  m_tour_.MergeFrom(from.m_tour_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_tourid()) {
      set_m_tourid(from.m_tourid());
    }
    if (from.has_m_fairylandid()) {
      set_m_fairylandid(from.m_fairylandid());
    }
    if (from.has_m_touritem()) {
      set_m_touritem(from.m_touritem());
    }
    if (from.has_m_tourdebris()) {
      set_m_tourdebris(from.m_tourdebris());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_MountEmpowerment::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_MountEmpowerment::CopyFrom(const E_MountEmpowerment& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_MountEmpowerment::IsInitialized() const {

  return true;
}

void E_MountEmpowerment::Swap(E_MountEmpowerment* other) {
  if (other != this) {
    std::swap(m_tourid_, other->m_tourid_);
    std::swap(m_fairylandid_, other->m_fairylandid_);
    std::swap(m_touritem_, other->m_touritem_);
    std::swap(m_tourdebris_, other->m_tourdebris_);
    m_tour_.Swap(&other->m_tour_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_MountEmpowerment::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_MountEmpowerment_descriptor_;
  metadata.reflection = E_MountEmpowerment_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_MountEmpowerment::kEMountEmpowermentListFieldNumber;
#endif  // !_MSC_VER

Sheet_MountEmpowerment::Sheet_MountEmpowerment()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_MountEmpowerment::InitAsDefaultInstance() {
}

Sheet_MountEmpowerment::Sheet_MountEmpowerment(const Sheet_MountEmpowerment& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_MountEmpowerment::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_MountEmpowerment::~Sheet_MountEmpowerment() {
  SharedDtor();
}

void Sheet_MountEmpowerment::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_MountEmpowerment::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_MountEmpowerment::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_MountEmpowerment_descriptor_;
}

const Sheet_MountEmpowerment& Sheet_MountEmpowerment::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fMount_2eproto();
  return *default_instance_;
}

Sheet_MountEmpowerment* Sheet_MountEmpowerment::default_instance_ = NULL;

Sheet_MountEmpowerment* Sheet_MountEmpowerment::New() const {
  return new Sheet_MountEmpowerment;
}

void Sheet_MountEmpowerment::Clear() {
  e_mountempowerment_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_MountEmpowerment::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.E_MountEmpowerment E_MountEmpowerment_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_E_MountEmpowerment_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_e_mountempowerment_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_E_MountEmpowerment_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_MountEmpowerment::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.E_MountEmpowerment E_MountEmpowerment_List = 1;
  for (int i = 0; i < this->e_mountempowerment_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->e_mountempowerment_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_MountEmpowerment::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.E_MountEmpowerment E_MountEmpowerment_List = 1;
  for (int i = 0; i < this->e_mountempowerment_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->e_mountempowerment_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_MountEmpowerment::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.E_MountEmpowerment E_MountEmpowerment_List = 1;
  total_size += 1 * this->e_mountempowerment_list_size();
  for (int i = 0; i < this->e_mountempowerment_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->e_mountempowerment_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_MountEmpowerment::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_MountEmpowerment* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_MountEmpowerment*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_MountEmpowerment::MergeFrom(const Sheet_MountEmpowerment& from) {
  GOOGLE_CHECK_NE(&from, this);
  e_mountempowerment_list_.MergeFrom(from.e_mountempowerment_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_MountEmpowerment::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_MountEmpowerment::CopyFrom(const Sheet_MountEmpowerment& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_MountEmpowerment::IsInitialized() const {

  return true;
}

void Sheet_MountEmpowerment::Swap(Sheet_MountEmpowerment* other) {
  if (other != this) {
    e_mountempowerment_list_.Swap(&other->e_mountempowerment_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_MountEmpowerment::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_MountEmpowerment_descriptor_;
  metadata.reflection = Sheet_MountEmpowerment_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_MountEmpowerment_position::kMEmpowermentslotFieldNumber;
const int E_MountEmpowerment_position::kMUnlocktimeFieldNumber;
const int E_MountEmpowerment_position::kMUnlocknumFieldNumber;
#endif  // !_MSC_VER

E_MountEmpowerment_position::E_MountEmpowerment_position()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_MountEmpowerment_position::InitAsDefaultInstance() {
}

E_MountEmpowerment_position::E_MountEmpowerment_position(const E_MountEmpowerment_position& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_MountEmpowerment_position::SharedCtor() {
  _cached_size_ = 0;
  m_empowermentslot_ = 0;
  m_unlocktime_ = 0;
  m_unlocknum_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_MountEmpowerment_position::~E_MountEmpowerment_position() {
  SharedDtor();
}

void E_MountEmpowerment_position::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_MountEmpowerment_position::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_MountEmpowerment_position::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_MountEmpowerment_position_descriptor_;
}

const E_MountEmpowerment_position& E_MountEmpowerment_position::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fMount_2eproto();
  return *default_instance_;
}

E_MountEmpowerment_position* E_MountEmpowerment_position::default_instance_ = NULL;

E_MountEmpowerment_position* E_MountEmpowerment_position::New() const {
  return new E_MountEmpowerment_position;
}

void E_MountEmpowerment_position::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_empowermentslot_ = 0;
    m_unlocktime_ = 0;
    m_unlocknum_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_MountEmpowerment_position::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_empowermentslot = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_empowermentslot_)));
          set_has_m_empowermentslot();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_unlocktime;
        break;
      }

      // optional int32 m_unlocktime = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_unlocktime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_unlocktime_)));
          set_has_m_unlocktime();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_m_unlocknum;
        break;
      }

      // optional int32 m_unlocknum = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_unlocknum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_unlocknum_)));
          set_has_m_unlocknum();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_MountEmpowerment_position::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_empowermentslot = 1;
  if (has_m_empowermentslot()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_empowermentslot(), output);
  }

  // optional int32 m_unlocktime = 2;
  if (has_m_unlocktime()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_unlocktime(), output);
  }

  // optional int32 m_unlocknum = 3;
  if (has_m_unlocknum()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->m_unlocknum(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_MountEmpowerment_position::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_empowermentslot = 1;
  if (has_m_empowermentslot()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_empowermentslot(), target);
  }

  // optional int32 m_unlocktime = 2;
  if (has_m_unlocktime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_unlocktime(), target);
  }

  // optional int32 m_unlocknum = 3;
  if (has_m_unlocknum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->m_unlocknum(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_MountEmpowerment_position::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_empowermentslot = 1;
    if (has_m_empowermentslot()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_empowermentslot());
    }

    // optional int32 m_unlocktime = 2;
    if (has_m_unlocktime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_unlocktime());
    }

    // optional int32 m_unlocknum = 3;
    if (has_m_unlocknum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_unlocknum());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_MountEmpowerment_position::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_MountEmpowerment_position* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_MountEmpowerment_position*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_MountEmpowerment_position::MergeFrom(const E_MountEmpowerment_position& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_empowermentslot()) {
      set_m_empowermentslot(from.m_empowermentslot());
    }
    if (from.has_m_unlocktime()) {
      set_m_unlocktime(from.m_unlocktime());
    }
    if (from.has_m_unlocknum()) {
      set_m_unlocknum(from.m_unlocknum());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_MountEmpowerment_position::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_MountEmpowerment_position::CopyFrom(const E_MountEmpowerment_position& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_MountEmpowerment_position::IsInitialized() const {

  return true;
}

void E_MountEmpowerment_position::Swap(E_MountEmpowerment_position* other) {
  if (other != this) {
    std::swap(m_empowermentslot_, other->m_empowermentslot_);
    std::swap(m_unlocktime_, other->m_unlocktime_);
    std::swap(m_unlocknum_, other->m_unlocknum_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_MountEmpowerment_position::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_MountEmpowerment_position_descriptor_;
  metadata.reflection = E_MountEmpowerment_position_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_MountEmpowerment_position::kEMountEmpowermentPositionListFieldNumber;
#endif  // !_MSC_VER

Sheet_MountEmpowerment_position::Sheet_MountEmpowerment_position()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_MountEmpowerment_position::InitAsDefaultInstance() {
}

Sheet_MountEmpowerment_position::Sheet_MountEmpowerment_position(const Sheet_MountEmpowerment_position& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_MountEmpowerment_position::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_MountEmpowerment_position::~Sheet_MountEmpowerment_position() {
  SharedDtor();
}

void Sheet_MountEmpowerment_position::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_MountEmpowerment_position::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_MountEmpowerment_position::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_MountEmpowerment_position_descriptor_;
}

const Sheet_MountEmpowerment_position& Sheet_MountEmpowerment_position::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fMount_2eproto();
  return *default_instance_;
}

Sheet_MountEmpowerment_position* Sheet_MountEmpowerment_position::default_instance_ = NULL;

Sheet_MountEmpowerment_position* Sheet_MountEmpowerment_position::New() const {
  return new Sheet_MountEmpowerment_position;
}

void Sheet_MountEmpowerment_position::Clear() {
  e_mountempowerment_position_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_MountEmpowerment_position::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.E_MountEmpowerment_position E_MountEmpowerment_position_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_E_MountEmpowerment_position_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_e_mountempowerment_position_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_E_MountEmpowerment_position_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_MountEmpowerment_position::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.E_MountEmpowerment_position E_MountEmpowerment_position_List = 1;
  for (int i = 0; i < this->e_mountempowerment_position_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->e_mountempowerment_position_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_MountEmpowerment_position::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.E_MountEmpowerment_position E_MountEmpowerment_position_List = 1;
  for (int i = 0; i < this->e_mountempowerment_position_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->e_mountempowerment_position_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_MountEmpowerment_position::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.E_MountEmpowerment_position E_MountEmpowerment_position_List = 1;
  total_size += 1 * this->e_mountempowerment_position_list_size();
  for (int i = 0; i < this->e_mountempowerment_position_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->e_mountempowerment_position_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_MountEmpowerment_position::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_MountEmpowerment_position* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_MountEmpowerment_position*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_MountEmpowerment_position::MergeFrom(const Sheet_MountEmpowerment_position& from) {
  GOOGLE_CHECK_NE(&from, this);
  e_mountempowerment_position_list_.MergeFrom(from.e_mountempowerment_position_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_MountEmpowerment_position::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_MountEmpowerment_position::CopyFrom(const Sheet_MountEmpowerment_position& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_MountEmpowerment_position::IsInitialized() const {

  return true;
}

void Sheet_MountEmpowerment_position::Swap(Sheet_MountEmpowerment_position* other) {
  if (other != this) {
    e_mountempowerment_position_list_.Swap(&other->e_mountempowerment_position_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_MountEmpowerment_position::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_MountEmpowerment_position_descriptor_;
  metadata.reflection = Sheet_MountEmpowerment_position_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_MountEmpowerment_slot::kMIdFieldNumber;
const int E_MountEmpowerment_slot::kMDissociatelevelFieldNumber;
const int E_MountEmpowerment_slot::kMDissociatetimeFieldNumber;
const int E_MountEmpowerment_slot::kMDissociatehourFieldNumber;
const int E_MountEmpowerment_slot::kMDissociateitemFieldNumber;
const int E_MountEmpowerment_slot::kMDissociatenumFieldNumber;
const int E_MountEmpowerment_slot::kMEventtimeFieldNumber;
const int E_MountEmpowerment_slot::kMDissociateboxFieldNumber;
#endif  // !_MSC_VER

E_MountEmpowerment_slot::E_MountEmpowerment_slot()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_MountEmpowerment_slot::InitAsDefaultInstance() {
}

E_MountEmpowerment_slot::E_MountEmpowerment_slot(const E_MountEmpowerment_slot& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_MountEmpowerment_slot::SharedCtor() {
  _cached_size_ = 0;
  m_id_ = 0;
  m_dissociatelevel_ = 0;
  m_dissociatetime_ = 0;
  m_dissociatehour_ = 0;
  m_dissociateitem_ = 0;
  m_dissociatenum_ = 0;
  m_eventtime_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  m_dissociatebox_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_MountEmpowerment_slot::~E_MountEmpowerment_slot() {
  SharedDtor();
}

void E_MountEmpowerment_slot::SharedDtor() {
  if (m_eventtime_ != &::google::protobuf::internal::kEmptyString) {
    delete m_eventtime_;
  }
  if (this != default_instance_) {
  }
}

void E_MountEmpowerment_slot::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_MountEmpowerment_slot::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_MountEmpowerment_slot_descriptor_;
}

const E_MountEmpowerment_slot& E_MountEmpowerment_slot::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fMount_2eproto();
  return *default_instance_;
}

E_MountEmpowerment_slot* E_MountEmpowerment_slot::default_instance_ = NULL;

E_MountEmpowerment_slot* E_MountEmpowerment_slot::New() const {
  return new E_MountEmpowerment_slot;
}

void E_MountEmpowerment_slot::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_id_ = 0;
    m_dissociatelevel_ = 0;
    m_dissociatetime_ = 0;
    m_dissociatehour_ = 0;
    m_dissociateitem_ = 0;
    m_dissociatenum_ = 0;
    if (has_m_eventtime()) {
      if (m_eventtime_ != &::google::protobuf::internal::kEmptyString) {
        m_eventtime_->clear();
      }
    }
    m_dissociatebox_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_MountEmpowerment_slot::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_id_)));
          set_has_m_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_dissociatelevel;
        break;
      }

      // optional int32 m_dissociatelevel = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_dissociatelevel:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_dissociatelevel_)));
          set_has_m_dissociatelevel();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_m_dissociatetime;
        break;
      }

      // optional int32 m_dissociatetime = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_dissociatetime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_dissociatetime_)));
          set_has_m_dissociatetime();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_m_dissociatehour;
        break;
      }

      // optional int32 m_dissociatehour = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_dissociatehour:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_dissociatehour_)));
          set_has_m_dissociatehour();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_m_dissociateitem;
        break;
      }

      // optional int32 m_dissociateitem = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_dissociateitem:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_dissociateitem_)));
          set_has_m_dissociateitem();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_m_dissociatenum;
        break;
      }

      // optional int32 m_dissociatenum = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_dissociatenum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_dissociatenum_)));
          set_has_m_dissociatenum();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(58)) goto parse_m_eventtime;
        break;
      }

      // optional string m_eventtime = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_eventtime:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_m_eventtime()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->m_eventtime().data(), this->m_eventtime().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(64)) goto parse_m_dissociatebox;
        break;
      }

      // optional int32 m_dissociatebox = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_dissociatebox:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_dissociatebox_)));
          set_has_m_dissociatebox();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_MountEmpowerment_slot::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_id(), output);
  }

  // optional int32 m_dissociatelevel = 2;
  if (has_m_dissociatelevel()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_dissociatelevel(), output);
  }

  // optional int32 m_dissociatetime = 3;
  if (has_m_dissociatetime()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->m_dissociatetime(), output);
  }

  // optional int32 m_dissociatehour = 4;
  if (has_m_dissociatehour()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->m_dissociatehour(), output);
  }

  // optional int32 m_dissociateitem = 5;
  if (has_m_dissociateitem()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->m_dissociateitem(), output);
  }

  // optional int32 m_dissociatenum = 6;
  if (has_m_dissociatenum()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->m_dissociatenum(), output);
  }

  // optional string m_eventtime = 7;
  if (has_m_eventtime()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_eventtime().data(), this->m_eventtime().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      7, this->m_eventtime(), output);
  }

  // optional int32 m_dissociatebox = 8;
  if (has_m_dissociatebox()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->m_dissociatebox(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_MountEmpowerment_slot::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_id(), target);
  }

  // optional int32 m_dissociatelevel = 2;
  if (has_m_dissociatelevel()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_dissociatelevel(), target);
  }

  // optional int32 m_dissociatetime = 3;
  if (has_m_dissociatetime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->m_dissociatetime(), target);
  }

  // optional int32 m_dissociatehour = 4;
  if (has_m_dissociatehour()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->m_dissociatehour(), target);
  }

  // optional int32 m_dissociateitem = 5;
  if (has_m_dissociateitem()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->m_dissociateitem(), target);
  }

  // optional int32 m_dissociatenum = 6;
  if (has_m_dissociatenum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->m_dissociatenum(), target);
  }

  // optional string m_eventtime = 7;
  if (has_m_eventtime()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_eventtime().data(), this->m_eventtime().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->m_eventtime(), target);
  }

  // optional int32 m_dissociatebox = 8;
  if (has_m_dissociatebox()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->m_dissociatebox(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_MountEmpowerment_slot::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_id = 1;
    if (has_m_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_id());
    }

    // optional int32 m_dissociatelevel = 2;
    if (has_m_dissociatelevel()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_dissociatelevel());
    }

    // optional int32 m_dissociatetime = 3;
    if (has_m_dissociatetime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_dissociatetime());
    }

    // optional int32 m_dissociatehour = 4;
    if (has_m_dissociatehour()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_dissociatehour());
    }

    // optional int32 m_dissociateitem = 5;
    if (has_m_dissociateitem()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_dissociateitem());
    }

    // optional int32 m_dissociatenum = 6;
    if (has_m_dissociatenum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_dissociatenum());
    }

    // optional string m_eventtime = 7;
    if (has_m_eventtime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->m_eventtime());
    }

    // optional int32 m_dissociatebox = 8;
    if (has_m_dissociatebox()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_dissociatebox());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_MountEmpowerment_slot::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_MountEmpowerment_slot* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_MountEmpowerment_slot*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_MountEmpowerment_slot::MergeFrom(const E_MountEmpowerment_slot& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_id()) {
      set_m_id(from.m_id());
    }
    if (from.has_m_dissociatelevel()) {
      set_m_dissociatelevel(from.m_dissociatelevel());
    }
    if (from.has_m_dissociatetime()) {
      set_m_dissociatetime(from.m_dissociatetime());
    }
    if (from.has_m_dissociatehour()) {
      set_m_dissociatehour(from.m_dissociatehour());
    }
    if (from.has_m_dissociateitem()) {
      set_m_dissociateitem(from.m_dissociateitem());
    }
    if (from.has_m_dissociatenum()) {
      set_m_dissociatenum(from.m_dissociatenum());
    }
    if (from.has_m_eventtime()) {
      set_m_eventtime(from.m_eventtime());
    }
    if (from.has_m_dissociatebox()) {
      set_m_dissociatebox(from.m_dissociatebox());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_MountEmpowerment_slot::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_MountEmpowerment_slot::CopyFrom(const E_MountEmpowerment_slot& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_MountEmpowerment_slot::IsInitialized() const {

  return true;
}

void E_MountEmpowerment_slot::Swap(E_MountEmpowerment_slot* other) {
  if (other != this) {
    std::swap(m_id_, other->m_id_);
    std::swap(m_dissociatelevel_, other->m_dissociatelevel_);
    std::swap(m_dissociatetime_, other->m_dissociatetime_);
    std::swap(m_dissociatehour_, other->m_dissociatehour_);
    std::swap(m_dissociateitem_, other->m_dissociateitem_);
    std::swap(m_dissociatenum_, other->m_dissociatenum_);
    std::swap(m_eventtime_, other->m_eventtime_);
    std::swap(m_dissociatebox_, other->m_dissociatebox_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_MountEmpowerment_slot::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_MountEmpowerment_slot_descriptor_;
  metadata.reflection = E_MountEmpowerment_slot_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_MountEmpowerment_slot::kEMountEmpowermentSlotListFieldNumber;
#endif  // !_MSC_VER

Sheet_MountEmpowerment_slot::Sheet_MountEmpowerment_slot()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_MountEmpowerment_slot::InitAsDefaultInstance() {
}

Sheet_MountEmpowerment_slot::Sheet_MountEmpowerment_slot(const Sheet_MountEmpowerment_slot& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_MountEmpowerment_slot::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_MountEmpowerment_slot::~Sheet_MountEmpowerment_slot() {
  SharedDtor();
}

void Sheet_MountEmpowerment_slot::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_MountEmpowerment_slot::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_MountEmpowerment_slot::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_MountEmpowerment_slot_descriptor_;
}

const Sheet_MountEmpowerment_slot& Sheet_MountEmpowerment_slot::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fMount_2eproto();
  return *default_instance_;
}

Sheet_MountEmpowerment_slot* Sheet_MountEmpowerment_slot::default_instance_ = NULL;

Sheet_MountEmpowerment_slot* Sheet_MountEmpowerment_slot::New() const {
  return new Sheet_MountEmpowerment_slot;
}

void Sheet_MountEmpowerment_slot::Clear() {
  e_mountempowerment_slot_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_MountEmpowerment_slot::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.E_MountEmpowerment_slot E_MountEmpowerment_slot_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_E_MountEmpowerment_slot_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_e_mountempowerment_slot_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_E_MountEmpowerment_slot_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_MountEmpowerment_slot::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.E_MountEmpowerment_slot E_MountEmpowerment_slot_List = 1;
  for (int i = 0; i < this->e_mountempowerment_slot_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->e_mountempowerment_slot_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_MountEmpowerment_slot::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.E_MountEmpowerment_slot E_MountEmpowerment_slot_List = 1;
  for (int i = 0; i < this->e_mountempowerment_slot_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->e_mountempowerment_slot_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_MountEmpowerment_slot::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.E_MountEmpowerment_slot E_MountEmpowerment_slot_List = 1;
  total_size += 1 * this->e_mountempowerment_slot_list_size();
  for (int i = 0; i < this->e_mountempowerment_slot_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->e_mountempowerment_slot_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_MountEmpowerment_slot::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_MountEmpowerment_slot* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_MountEmpowerment_slot*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_MountEmpowerment_slot::MergeFrom(const Sheet_MountEmpowerment_slot& from) {
  GOOGLE_CHECK_NE(&from, this);
  e_mountempowerment_slot_list_.MergeFrom(from.e_mountempowerment_slot_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_MountEmpowerment_slot::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_MountEmpowerment_slot::CopyFrom(const Sheet_MountEmpowerment_slot& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_MountEmpowerment_slot::IsInitialized() const {

  return true;
}

void Sheet_MountEmpowerment_slot::Swap(Sheet_MountEmpowerment_slot* other) {
  if (other != this) {
    e_mountempowerment_slot_list_.Swap(&other->e_mountempowerment_slot_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_MountEmpowerment_slot::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_MountEmpowerment_slot_descriptor_;
  metadata.reflection = Sheet_MountEmpowerment_slot_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_MountEmpowerment_event::kMIdFieldNumber;
const int E_MountEmpowerment_event::kMEventtypeFieldNumber;
const int E_MountEmpowerment_event::kMWeightFieldNumber;
#endif  // !_MSC_VER

E_MountEmpowerment_event::E_MountEmpowerment_event()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_MountEmpowerment_event::InitAsDefaultInstance() {
}

E_MountEmpowerment_event::E_MountEmpowerment_event(const E_MountEmpowerment_event& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_MountEmpowerment_event::SharedCtor() {
  _cached_size_ = 0;
  m_id_ = 0;
  m_eventtype_ = 0;
  m_weight_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_MountEmpowerment_event::~E_MountEmpowerment_event() {
  SharedDtor();
}

void E_MountEmpowerment_event::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_MountEmpowerment_event::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_MountEmpowerment_event::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_MountEmpowerment_event_descriptor_;
}

const E_MountEmpowerment_event& E_MountEmpowerment_event::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fMount_2eproto();
  return *default_instance_;
}

E_MountEmpowerment_event* E_MountEmpowerment_event::default_instance_ = NULL;

E_MountEmpowerment_event* E_MountEmpowerment_event::New() const {
  return new E_MountEmpowerment_event;
}

void E_MountEmpowerment_event::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_id_ = 0;
    m_eventtype_ = 0;
    m_weight_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_MountEmpowerment_event::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_id_)));
          set_has_m_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_eventtype;
        break;
      }

      // optional int32 m_eventtype = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_eventtype:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_eventtype_)));
          set_has_m_eventtype();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_m_weight;
        break;
      }

      // optional int32 m_weight = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_weight:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_weight_)));
          set_has_m_weight();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_MountEmpowerment_event::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_id(), output);
  }

  // optional int32 m_eventtype = 2;
  if (has_m_eventtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_eventtype(), output);
  }

  // optional int32 m_weight = 3;
  if (has_m_weight()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->m_weight(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_MountEmpowerment_event::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_id(), target);
  }

  // optional int32 m_eventtype = 2;
  if (has_m_eventtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_eventtype(), target);
  }

  // optional int32 m_weight = 3;
  if (has_m_weight()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->m_weight(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_MountEmpowerment_event::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_id = 1;
    if (has_m_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_id());
    }

    // optional int32 m_eventtype = 2;
    if (has_m_eventtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_eventtype());
    }

    // optional int32 m_weight = 3;
    if (has_m_weight()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_weight());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_MountEmpowerment_event::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_MountEmpowerment_event* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_MountEmpowerment_event*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_MountEmpowerment_event::MergeFrom(const E_MountEmpowerment_event& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_id()) {
      set_m_id(from.m_id());
    }
    if (from.has_m_eventtype()) {
      set_m_eventtype(from.m_eventtype());
    }
    if (from.has_m_weight()) {
      set_m_weight(from.m_weight());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_MountEmpowerment_event::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_MountEmpowerment_event::CopyFrom(const E_MountEmpowerment_event& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_MountEmpowerment_event::IsInitialized() const {

  return true;
}

void E_MountEmpowerment_event::Swap(E_MountEmpowerment_event* other) {
  if (other != this) {
    std::swap(m_id_, other->m_id_);
    std::swap(m_eventtype_, other->m_eventtype_);
    std::swap(m_weight_, other->m_weight_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_MountEmpowerment_event::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_MountEmpowerment_event_descriptor_;
  metadata.reflection = E_MountEmpowerment_event_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_MountEmpowerment_event::kEMountEmpowermentEventListFieldNumber;
#endif  // !_MSC_VER

Sheet_MountEmpowerment_event::Sheet_MountEmpowerment_event()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_MountEmpowerment_event::InitAsDefaultInstance() {
}

Sheet_MountEmpowerment_event::Sheet_MountEmpowerment_event(const Sheet_MountEmpowerment_event& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_MountEmpowerment_event::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_MountEmpowerment_event::~Sheet_MountEmpowerment_event() {
  SharedDtor();
}

void Sheet_MountEmpowerment_event::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_MountEmpowerment_event::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_MountEmpowerment_event::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_MountEmpowerment_event_descriptor_;
}

const Sheet_MountEmpowerment_event& Sheet_MountEmpowerment_event::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fMount_2eproto();
  return *default_instance_;
}

Sheet_MountEmpowerment_event* Sheet_MountEmpowerment_event::default_instance_ = NULL;

Sheet_MountEmpowerment_event* Sheet_MountEmpowerment_event::New() const {
  return new Sheet_MountEmpowerment_event;
}

void Sheet_MountEmpowerment_event::Clear() {
  e_mountempowerment_event_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_MountEmpowerment_event::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.E_MountEmpowerment_event E_MountEmpowerment_event_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_E_MountEmpowerment_event_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_e_mountempowerment_event_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_E_MountEmpowerment_event_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_MountEmpowerment_event::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.E_MountEmpowerment_event E_MountEmpowerment_event_List = 1;
  for (int i = 0; i < this->e_mountempowerment_event_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->e_mountempowerment_event_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_MountEmpowerment_event::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.E_MountEmpowerment_event E_MountEmpowerment_event_List = 1;
  for (int i = 0; i < this->e_mountempowerment_event_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->e_mountempowerment_event_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_MountEmpowerment_event::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.E_MountEmpowerment_event E_MountEmpowerment_event_List = 1;
  total_size += 1 * this->e_mountempowerment_event_list_size();
  for (int i = 0; i < this->e_mountempowerment_event_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->e_mountempowerment_event_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_MountEmpowerment_event::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_MountEmpowerment_event* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_MountEmpowerment_event*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_MountEmpowerment_event::MergeFrom(const Sheet_MountEmpowerment_event& from) {
  GOOGLE_CHECK_NE(&from, this);
  e_mountempowerment_event_list_.MergeFrom(from.e_mountempowerment_event_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_MountEmpowerment_event::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_MountEmpowerment_event::CopyFrom(const Sheet_MountEmpowerment_event& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_MountEmpowerment_event::IsInitialized() const {

  return true;
}

void Sheet_MountEmpowerment_event::Swap(Sheet_MountEmpowerment_event* other) {
  if (other != this) {
    e_mountempowerment_event_list_.Swap(&other->e_mountempowerment_event_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_MountEmpowerment_event::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_MountEmpowerment_event_descriptor_;
  metadata.reflection = Sheet_MountEmpowerment_event_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto_ff

// @@protoc_insertion_point(global_scope)
