// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: E_Teleport.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "E_Teleport.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace proto_ff {

namespace {

const ::google::protobuf::Descriptor* E_TeleportTeleport_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_TeleportTeleport_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_TeleportTeleport_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_TeleportTeleport_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_E_5fTeleport_2eproto() {
  protobuf_AddDesc_E_5fTeleport_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "E_Teleport.proto");
  GOOGLE_CHECK(file != NULL);
  E_TeleportTeleport_descriptor_ = file->message_type(0);
  static const int E_TeleportTeleport_offsets_[15] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TeleportTeleport, m_teleportid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TeleportTeleport, m_teleporttype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TeleportTeleport, m_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TeleportTeleport, m_monsterid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TeleportTeleport, m_showcondition_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TeleportTeleport, m_conditionvalue_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TeleportTeleport, m_canenter_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TeleportTeleport, m_showpathid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TeleportTeleport, m_topathid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TeleportTeleport, m_toduplicateid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TeleportTeleport, m_entercost_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TeleportTeleport, m_trigrange_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TeleportTeleport, m_livingtime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TeleportTeleport, m_openchatid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TeleportTeleport, m_progresschatid_),
  };
  E_TeleportTeleport_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_TeleportTeleport_descriptor_,
      E_TeleportTeleport::default_instance_,
      E_TeleportTeleport_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TeleportTeleport, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_TeleportTeleport, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_TeleportTeleport));
  Sheet_TeleportTeleport_descriptor_ = file->message_type(1);
  static const int Sheet_TeleportTeleport_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_TeleportTeleport, e_teleportteleport_list_),
  };
  Sheet_TeleportTeleport_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_TeleportTeleport_descriptor_,
      Sheet_TeleportTeleport::default_instance_,
      Sheet_TeleportTeleport_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_TeleportTeleport, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_TeleportTeleport, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_TeleportTeleport));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_E_5fTeleport_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_TeleportTeleport_descriptor_, &E_TeleportTeleport::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_TeleportTeleport_descriptor_, &Sheet_TeleportTeleport::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_E_5fTeleport_2eproto() {
  delete E_TeleportTeleport::default_instance_;
  delete E_TeleportTeleport_reflection_;
  delete Sheet_TeleportTeleport::default_instance_;
  delete Sheet_TeleportTeleport_reflection_;
}

void protobuf_AddDesc_E_5fTeleport_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::yd_fieldoptions::protobuf_AddDesc_yd_5ffieldoptions_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\020E_Teleport.proto\022\010proto_ff\032\025yd_fieldop"
    "tions.proto\"\262\005\n\022E_TeleportTeleport\022%\n\014m_"
    "teleportID\030\001 \001(\003B\017\302\377\024\013\344\274\240\351\200\201\347\202\271ID\022+\n\016m_t"
    "eleportType\030\002 \001(\005B\023\302\377\024\017\344\274\240\351\200\201\351\227\250\347\261\273\345\236\213\022\'"
    "\n\006m_name\030\003 \001(\tB\027\302\377\024\017\344\274\240\351\200\201\347\202\271\345\220\215\347\247\260\220\301\024@\022"
    "*\n\013m_monsterId\030\004 \001(\003B\025\302\377\024\021\344\274\240\351\200\201\351\227\250\346\200\252\347\211"
    "\251ID\022)\n\017m_showCondition\030\005 \001(\005B\020\302\377\024\014\345\207\272\347\216\260"
    "\346\235\241\344\273\266\022.\n\020m_conditionValue\030\006 \001(\tB\024\302\377\024\014\346\235"
    "\241\344\273\266\345\217\202\346\225\260\220\301\024@\022$\n\nm_canEnter\030\007 \001(\005B\020\302\377\024\014"
    "\350\277\233\345\205\245\346\235\203\351\231\220\022)\n\014m_showPathID\030\010 \001(\003B\023\302\377\024\017"
    "\351\273\230\350\256\244\344\275\215\347\275\256\347\202\271\022-\n\nm_toPathID\030\t \001(\003B\031\302\377\024"
    "\025\344\274\240\351\200\201\347\233\256\347\232\204\344\275\215\347\275\256\347\202\271\022+\n\017m_toDuplicateI"
    "d\030\n \001(\003B\022\302\377\024\016\344\274\240\351\200\201\345\211\257\346\234\254ID\022/\n\013m_enterCo"
    "st\030\013 \001(\tB\032\302\377\024\022\350\277\233\345\205\245\351\201\223\345\205\267\346\266\210\350\200\227\220\301\024@\022%\n\013"
    "m_trigRange\030\014 \001(\005B\020\302\377\024\014\350\247\246\345\217\221\350\214\203\345\233\264\022/\n\014m"
    "_livingTime\030\r \001(\005B\031\302\377\024\025\344\274\240\351\200\201\351\227\250\345\255\230\345\234\250\346\227"
    "\266\351\227\264\0221\n\014m_openChatId\030\016 \001(\003B\033\302\377\024\027\345\274\200\345\220\257\346\227"
    "\266\347\232\204\350\267\221\351\251\254\347\201\257ID\022/\n\020m_progressChatId\030\017 \001("
    "\003B\025\302\377\024\021\350\277\233\345\272\246\350\267\221\351\251\254\347\201\257ID\"]\n\026Sheet_Telepo"
    "rtTeleport\022C\n\027E_TeleportTeleport_List\030\001 "
    "\003(\0132\034.proto_ff.E_TeleportTeleportB\004\210\301\024\020", 839);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "E_Teleport.proto", &protobuf_RegisterTypes);
  E_TeleportTeleport::default_instance_ = new E_TeleportTeleport();
  Sheet_TeleportTeleport::default_instance_ = new Sheet_TeleportTeleport();
  E_TeleportTeleport::default_instance_->InitAsDefaultInstance();
  Sheet_TeleportTeleport::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_E_5fTeleport_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_E_5fTeleport_2eproto {
  StaticDescriptorInitializer_E_5fTeleport_2eproto() {
    protobuf_AddDesc_E_5fTeleport_2eproto();
  }
} static_descriptor_initializer_E_5fTeleport_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int E_TeleportTeleport::kMTeleportIDFieldNumber;
const int E_TeleportTeleport::kMTeleportTypeFieldNumber;
const int E_TeleportTeleport::kMNameFieldNumber;
const int E_TeleportTeleport::kMMonsterIdFieldNumber;
const int E_TeleportTeleport::kMShowConditionFieldNumber;
const int E_TeleportTeleport::kMConditionValueFieldNumber;
const int E_TeleportTeleport::kMCanEnterFieldNumber;
const int E_TeleportTeleport::kMShowPathIDFieldNumber;
const int E_TeleportTeleport::kMToPathIDFieldNumber;
const int E_TeleportTeleport::kMToDuplicateIdFieldNumber;
const int E_TeleportTeleport::kMEnterCostFieldNumber;
const int E_TeleportTeleport::kMTrigRangeFieldNumber;
const int E_TeleportTeleport::kMLivingTimeFieldNumber;
const int E_TeleportTeleport::kMOpenChatIdFieldNumber;
const int E_TeleportTeleport::kMProgressChatIdFieldNumber;
#endif  // !_MSC_VER

E_TeleportTeleport::E_TeleportTeleport()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_TeleportTeleport::InitAsDefaultInstance() {
}

E_TeleportTeleport::E_TeleportTeleport(const E_TeleportTeleport& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_TeleportTeleport::SharedCtor() {
  _cached_size_ = 0;
  m_teleportid_ = GOOGLE_LONGLONG(0);
  m_teleporttype_ = 0;
  m_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  m_monsterid_ = GOOGLE_LONGLONG(0);
  m_showcondition_ = 0;
  m_conditionvalue_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  m_canenter_ = 0;
  m_showpathid_ = GOOGLE_LONGLONG(0);
  m_topathid_ = GOOGLE_LONGLONG(0);
  m_toduplicateid_ = GOOGLE_LONGLONG(0);
  m_entercost_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  m_trigrange_ = 0;
  m_livingtime_ = 0;
  m_openchatid_ = GOOGLE_LONGLONG(0);
  m_progresschatid_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_TeleportTeleport::~E_TeleportTeleport() {
  SharedDtor();
}

void E_TeleportTeleport::SharedDtor() {
  if (m_name_ != &::google::protobuf::internal::kEmptyString) {
    delete m_name_;
  }
  if (m_conditionvalue_ != &::google::protobuf::internal::kEmptyString) {
    delete m_conditionvalue_;
  }
  if (m_entercost_ != &::google::protobuf::internal::kEmptyString) {
    delete m_entercost_;
  }
  if (this != default_instance_) {
  }
}

void E_TeleportTeleport::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_TeleportTeleport::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_TeleportTeleport_descriptor_;
}

const E_TeleportTeleport& E_TeleportTeleport::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fTeleport_2eproto();
  return *default_instance_;
}

E_TeleportTeleport* E_TeleportTeleport::default_instance_ = NULL;

E_TeleportTeleport* E_TeleportTeleport::New() const {
  return new E_TeleportTeleport;
}

void E_TeleportTeleport::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_teleportid_ = GOOGLE_LONGLONG(0);
    m_teleporttype_ = 0;
    if (has_m_name()) {
      if (m_name_ != &::google::protobuf::internal::kEmptyString) {
        m_name_->clear();
      }
    }
    m_monsterid_ = GOOGLE_LONGLONG(0);
    m_showcondition_ = 0;
    if (has_m_conditionvalue()) {
      if (m_conditionvalue_ != &::google::protobuf::internal::kEmptyString) {
        m_conditionvalue_->clear();
      }
    }
    m_canenter_ = 0;
    m_showpathid_ = GOOGLE_LONGLONG(0);
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    m_topathid_ = GOOGLE_LONGLONG(0);
    m_toduplicateid_ = GOOGLE_LONGLONG(0);
    if (has_m_entercost()) {
      if (m_entercost_ != &::google::protobuf::internal::kEmptyString) {
        m_entercost_->clear();
      }
    }
    m_trigrange_ = 0;
    m_livingtime_ = 0;
    m_openchatid_ = GOOGLE_LONGLONG(0);
    m_progresschatid_ = GOOGLE_LONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_TeleportTeleport::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 m_teleportID = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &m_teleportid_)));
          set_has_m_teleportid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_teleportType;
        break;
      }

      // optional int32 m_teleportType = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_teleportType:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_teleporttype_)));
          set_has_m_teleporttype();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_m_name;
        break;
      }

      // optional string m_name = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_m_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->m_name().data(), this->m_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_m_monsterId;
        break;
      }

      // optional int64 m_monsterId = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_monsterId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &m_monsterid_)));
          set_has_m_monsterid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_m_showCondition;
        break;
      }

      // optional int32 m_showCondition = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_showCondition:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_showcondition_)));
          set_has_m_showcondition();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_m_conditionValue;
        break;
      }

      // optional string m_conditionValue = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_conditionValue:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_m_conditionvalue()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->m_conditionvalue().data(), this->m_conditionvalue().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_m_canEnter;
        break;
      }

      // optional int32 m_canEnter = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_canEnter:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_canenter_)));
          set_has_m_canenter();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(64)) goto parse_m_showPathID;
        break;
      }

      // optional int64 m_showPathID = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_showPathID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &m_showpathid_)));
          set_has_m_showpathid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(72)) goto parse_m_toPathID;
        break;
      }

      // optional int64 m_toPathID = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_toPathID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &m_topathid_)));
          set_has_m_topathid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(80)) goto parse_m_toDuplicateId;
        break;
      }

      // optional int64 m_toDuplicateId = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_toDuplicateId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &m_toduplicateid_)));
          set_has_m_toduplicateid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(90)) goto parse_m_enterCost;
        break;
      }

      // optional string m_enterCost = 11;
      case 11: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_enterCost:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_m_entercost()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->m_entercost().data(), this->m_entercost().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(96)) goto parse_m_trigRange;
        break;
      }

      // optional int32 m_trigRange = 12;
      case 12: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_trigRange:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_trigrange_)));
          set_has_m_trigrange();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(104)) goto parse_m_livingTime;
        break;
      }

      // optional int32 m_livingTime = 13;
      case 13: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_livingTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_livingtime_)));
          set_has_m_livingtime();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(112)) goto parse_m_openChatId;
        break;
      }

      // optional int64 m_openChatId = 14;
      case 14: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_openChatId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &m_openchatid_)));
          set_has_m_openchatid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(120)) goto parse_m_progressChatId;
        break;
      }

      // optional int64 m_progressChatId = 15;
      case 15: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_progressChatId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &m_progresschatid_)));
          set_has_m_progresschatid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_TeleportTeleport::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 m_teleportID = 1;
  if (has_m_teleportid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->m_teleportid(), output);
  }

  // optional int32 m_teleportType = 2;
  if (has_m_teleporttype()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_teleporttype(), output);
  }

  // optional string m_name = 3;
  if (has_m_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_name().data(), this->m_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->m_name(), output);
  }

  // optional int64 m_monsterId = 4;
  if (has_m_monsterid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->m_monsterid(), output);
  }

  // optional int32 m_showCondition = 5;
  if (has_m_showcondition()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->m_showcondition(), output);
  }

  // optional string m_conditionValue = 6;
  if (has_m_conditionvalue()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_conditionvalue().data(), this->m_conditionvalue().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      6, this->m_conditionvalue(), output);
  }

  // optional int32 m_canEnter = 7;
  if (has_m_canenter()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->m_canenter(), output);
  }

  // optional int64 m_showPathID = 8;
  if (has_m_showpathid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(8, this->m_showpathid(), output);
  }

  // optional int64 m_toPathID = 9;
  if (has_m_topathid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(9, this->m_topathid(), output);
  }

  // optional int64 m_toDuplicateId = 10;
  if (has_m_toduplicateid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(10, this->m_toduplicateid(), output);
  }

  // optional string m_enterCost = 11;
  if (has_m_entercost()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_entercost().data(), this->m_entercost().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      11, this->m_entercost(), output);
  }

  // optional int32 m_trigRange = 12;
  if (has_m_trigrange()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(12, this->m_trigrange(), output);
  }

  // optional int32 m_livingTime = 13;
  if (has_m_livingtime()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(13, this->m_livingtime(), output);
  }

  // optional int64 m_openChatId = 14;
  if (has_m_openchatid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(14, this->m_openchatid(), output);
  }

  // optional int64 m_progressChatId = 15;
  if (has_m_progresschatid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(15, this->m_progresschatid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_TeleportTeleport::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 m_teleportID = 1;
  if (has_m_teleportid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->m_teleportid(), target);
  }

  // optional int32 m_teleportType = 2;
  if (has_m_teleporttype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_teleporttype(), target);
  }

  // optional string m_name = 3;
  if (has_m_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_name().data(), this->m_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->m_name(), target);
  }

  // optional int64 m_monsterId = 4;
  if (has_m_monsterid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->m_monsterid(), target);
  }

  // optional int32 m_showCondition = 5;
  if (has_m_showcondition()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->m_showcondition(), target);
  }

  // optional string m_conditionValue = 6;
  if (has_m_conditionvalue()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_conditionvalue().data(), this->m_conditionvalue().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->m_conditionvalue(), target);
  }

  // optional int32 m_canEnter = 7;
  if (has_m_canenter()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->m_canenter(), target);
  }

  // optional int64 m_showPathID = 8;
  if (has_m_showpathid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(8, this->m_showpathid(), target);
  }

  // optional int64 m_toPathID = 9;
  if (has_m_topathid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(9, this->m_topathid(), target);
  }

  // optional int64 m_toDuplicateId = 10;
  if (has_m_toduplicateid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(10, this->m_toduplicateid(), target);
  }

  // optional string m_enterCost = 11;
  if (has_m_entercost()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_entercost().data(), this->m_entercost().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->m_entercost(), target);
  }

  // optional int32 m_trigRange = 12;
  if (has_m_trigrange()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(12, this->m_trigrange(), target);
  }

  // optional int32 m_livingTime = 13;
  if (has_m_livingtime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(13, this->m_livingtime(), target);
  }

  // optional int64 m_openChatId = 14;
  if (has_m_openchatid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(14, this->m_openchatid(), target);
  }

  // optional int64 m_progressChatId = 15;
  if (has_m_progresschatid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(15, this->m_progresschatid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_TeleportTeleport::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 m_teleportID = 1;
    if (has_m_teleportid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->m_teleportid());
    }

    // optional int32 m_teleportType = 2;
    if (has_m_teleporttype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_teleporttype());
    }

    // optional string m_name = 3;
    if (has_m_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->m_name());
    }

    // optional int64 m_monsterId = 4;
    if (has_m_monsterid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->m_monsterid());
    }

    // optional int32 m_showCondition = 5;
    if (has_m_showcondition()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_showcondition());
    }

    // optional string m_conditionValue = 6;
    if (has_m_conditionvalue()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->m_conditionvalue());
    }

    // optional int32 m_canEnter = 7;
    if (has_m_canenter()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_canenter());
    }

    // optional int64 m_showPathID = 8;
    if (has_m_showpathid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->m_showpathid());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional int64 m_toPathID = 9;
    if (has_m_topathid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->m_topathid());
    }

    // optional int64 m_toDuplicateId = 10;
    if (has_m_toduplicateid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->m_toduplicateid());
    }

    // optional string m_enterCost = 11;
    if (has_m_entercost()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->m_entercost());
    }

    // optional int32 m_trigRange = 12;
    if (has_m_trigrange()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_trigrange());
    }

    // optional int32 m_livingTime = 13;
    if (has_m_livingtime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_livingtime());
    }

    // optional int64 m_openChatId = 14;
    if (has_m_openchatid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->m_openchatid());
    }

    // optional int64 m_progressChatId = 15;
    if (has_m_progresschatid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->m_progresschatid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_TeleportTeleport::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_TeleportTeleport* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_TeleportTeleport*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_TeleportTeleport::MergeFrom(const E_TeleportTeleport& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_teleportid()) {
      set_m_teleportid(from.m_teleportid());
    }
    if (from.has_m_teleporttype()) {
      set_m_teleporttype(from.m_teleporttype());
    }
    if (from.has_m_name()) {
      set_m_name(from.m_name());
    }
    if (from.has_m_monsterid()) {
      set_m_monsterid(from.m_monsterid());
    }
    if (from.has_m_showcondition()) {
      set_m_showcondition(from.m_showcondition());
    }
    if (from.has_m_conditionvalue()) {
      set_m_conditionvalue(from.m_conditionvalue());
    }
    if (from.has_m_canenter()) {
      set_m_canenter(from.m_canenter());
    }
    if (from.has_m_showpathid()) {
      set_m_showpathid(from.m_showpathid());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_m_topathid()) {
      set_m_topathid(from.m_topathid());
    }
    if (from.has_m_toduplicateid()) {
      set_m_toduplicateid(from.m_toduplicateid());
    }
    if (from.has_m_entercost()) {
      set_m_entercost(from.m_entercost());
    }
    if (from.has_m_trigrange()) {
      set_m_trigrange(from.m_trigrange());
    }
    if (from.has_m_livingtime()) {
      set_m_livingtime(from.m_livingtime());
    }
    if (from.has_m_openchatid()) {
      set_m_openchatid(from.m_openchatid());
    }
    if (from.has_m_progresschatid()) {
      set_m_progresschatid(from.m_progresschatid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_TeleportTeleport::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_TeleportTeleport::CopyFrom(const E_TeleportTeleport& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_TeleportTeleport::IsInitialized() const {

  return true;
}

void E_TeleportTeleport::Swap(E_TeleportTeleport* other) {
  if (other != this) {
    std::swap(m_teleportid_, other->m_teleportid_);
    std::swap(m_teleporttype_, other->m_teleporttype_);
    std::swap(m_name_, other->m_name_);
    std::swap(m_monsterid_, other->m_monsterid_);
    std::swap(m_showcondition_, other->m_showcondition_);
    std::swap(m_conditionvalue_, other->m_conditionvalue_);
    std::swap(m_canenter_, other->m_canenter_);
    std::swap(m_showpathid_, other->m_showpathid_);
    std::swap(m_topathid_, other->m_topathid_);
    std::swap(m_toduplicateid_, other->m_toduplicateid_);
    std::swap(m_entercost_, other->m_entercost_);
    std::swap(m_trigrange_, other->m_trigrange_);
    std::swap(m_livingtime_, other->m_livingtime_);
    std::swap(m_openchatid_, other->m_openchatid_);
    std::swap(m_progresschatid_, other->m_progresschatid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_TeleportTeleport::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_TeleportTeleport_descriptor_;
  metadata.reflection = E_TeleportTeleport_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_TeleportTeleport::kETeleportTeleportListFieldNumber;
#endif  // !_MSC_VER

Sheet_TeleportTeleport::Sheet_TeleportTeleport()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_TeleportTeleport::InitAsDefaultInstance() {
}

Sheet_TeleportTeleport::Sheet_TeleportTeleport(const Sheet_TeleportTeleport& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_TeleportTeleport::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_TeleportTeleport::~Sheet_TeleportTeleport() {
  SharedDtor();
}

void Sheet_TeleportTeleport::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_TeleportTeleport::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_TeleportTeleport::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_TeleportTeleport_descriptor_;
}

const Sheet_TeleportTeleport& Sheet_TeleportTeleport::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fTeleport_2eproto();
  return *default_instance_;
}

Sheet_TeleportTeleport* Sheet_TeleportTeleport::default_instance_ = NULL;

Sheet_TeleportTeleport* Sheet_TeleportTeleport::New() const {
  return new Sheet_TeleportTeleport;
}

void Sheet_TeleportTeleport::Clear() {
  e_teleportteleport_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_TeleportTeleport::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.E_TeleportTeleport E_TeleportTeleport_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_E_TeleportTeleport_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_e_teleportteleport_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_E_TeleportTeleport_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_TeleportTeleport::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.E_TeleportTeleport E_TeleportTeleport_List = 1;
  for (int i = 0; i < this->e_teleportteleport_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->e_teleportteleport_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_TeleportTeleport::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.E_TeleportTeleport E_TeleportTeleport_List = 1;
  for (int i = 0; i < this->e_teleportteleport_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->e_teleportteleport_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_TeleportTeleport::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.E_TeleportTeleport E_TeleportTeleport_List = 1;
  total_size += 1 * this->e_teleportteleport_list_size();
  for (int i = 0; i < this->e_teleportteleport_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->e_teleportteleport_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_TeleportTeleport::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_TeleportTeleport* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_TeleportTeleport*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_TeleportTeleport::MergeFrom(const Sheet_TeleportTeleport& from) {
  GOOGLE_CHECK_NE(&from, this);
  e_teleportteleport_list_.MergeFrom(from.e_teleportteleport_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_TeleportTeleport::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_TeleportTeleport::CopyFrom(const Sheet_TeleportTeleport& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_TeleportTeleport::IsInitialized() const {

  return true;
}

void Sheet_TeleportTeleport::Swap(Sheet_TeleportTeleport* other) {
  if (other != this) {
    e_teleportteleport_list_.Swap(&other->e_teleportteleport_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_TeleportTeleport::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_TeleportTeleport_descriptor_;
  metadata.reflection = Sheet_TeleportTeleport_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto_ff

// @@protoc_insertion_point(global_scope)
