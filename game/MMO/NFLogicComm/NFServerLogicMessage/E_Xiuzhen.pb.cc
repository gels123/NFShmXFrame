// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: E_Xiuzhen.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "E_Xiuzhen.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace proto_ff {

namespace {

const ::google::protobuf::Descriptor* E_XiuzhenStagesItemDesc_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_XiuzhenStagesItemDesc_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_XiuzhenStagesSkillDesc_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_XiuzhenStagesSkillDesc_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_XiuzhenStagesAttributeDesc_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_XiuzhenStagesAttributeDesc_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_XiuzhenStages_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_XiuzhenStages_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_XiuzhenStages_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_XiuzhenStages_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_XiuzhenGb_areas_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_XiuzhenGb_areas_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_XiuzhenGb_areas_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_XiuzhenGb_areas_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_XiuzhenGb_area_eventsItemDesc_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_XiuzhenGb_area_eventsItemDesc_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_XiuzhenGb_area_events_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_XiuzhenGb_area_events_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_XiuzhenGb_area_events_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_XiuzhenGb_area_events_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_XiuzhenGb_lvlupItemDesc_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_XiuzhenGb_lvlupItemDesc_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_XiuzhenGb_lvlupAttributeDesc_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_XiuzhenGb_lvlupAttributeDesc_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_XiuzhenGb_lvlup_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_XiuzhenGb_lvlup_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_XiuzhenGb_lvlup_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_XiuzhenGb_lvlup_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_XiuzhenEvolveItemDesc_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_XiuzhenEvolveItemDesc_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_XiuzhenEvolveAttributeDesc_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_XiuzhenEvolveAttributeDesc_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_XiuzhenEvolve_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_XiuzhenEvolve_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_XiuzhenEvolve_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_XiuzhenEvolve_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_XiuzhenLgtypesAttriDesc_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_XiuzhenLgtypesAttriDesc_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_XiuzhenLgtypesLgattDesc_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_XiuzhenLgtypesLgattDesc_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_XiuzhenLgtypes_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_XiuzhenLgtypes_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_XiuzhenLgtypes_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_XiuzhenLgtypes_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_XiuzhenLglvlup_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_XiuzhenLglvlup_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_XiuzhenLglvlup_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_XiuzhenLglvlup_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_XiuzhenLgpotionsLgDesc_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_XiuzhenLgpotionsLgDesc_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_XiuzhenLgpotions_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_XiuzhenLgpotions_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_XiuzhenLgpotions_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_XiuzhenLgpotions_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_XiuzhenGftypes_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_XiuzhenGftypes_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_XiuzhenGftypes_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_XiuzhenGftypes_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_XiuzhenGflvlupAttributeDesc_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_XiuzhenGflvlupAttributeDesc_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_XiuzhenGflvlup_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_XiuzhenGflvlup_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_XiuzhenGflvlup_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_XiuzhenGflvlup_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_XiuzhenGfstageupAttributeDesc_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_XiuzhenGfstageupAttributeDesc_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_XiuzhenGfstageup_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_XiuzhenGfstageup_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_XiuzhenGfstageup_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_XiuzhenGfstageup_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_XiuzhenJmtypes_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_XiuzhenJmtypes_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_XiuzhenJmtypes_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_XiuzhenJmtypes_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_XiuzhenJmlvlupItemDesc_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_XiuzhenJmlvlupItemDesc_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_XiuzhenJmlvlupAttributeDesc_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_XiuzhenJmlvlupAttributeDesc_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_XiuzhenJmlvlup_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_XiuzhenJmlvlup_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_XiuzhenJmlvlup_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_XiuzhenJmlvlup_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_XiuzhenJmstageupItemDesc_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_XiuzhenJmstageupItemDesc_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_XiuzhenJmstageupAttributeDesc_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_XiuzhenJmstageupAttributeDesc_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_XiuzhenJmstageup_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_XiuzhenJmstageup_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_XiuzhenJmstageup_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_XiuzhenJmstageup_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_XiuzhenJmmergeupCsDesc_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_XiuzhenJmmergeupCsDesc_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_XiuzhenJmmergeupAttributeDesc_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_XiuzhenJmmergeupAttributeDesc_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_XiuzhenJmmergeup_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_XiuzhenJmmergeup_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_XiuzhenJmmergeup_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_XiuzhenJmmergeup_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_XiuzhenPrivilegePtaddDesc_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_XiuzhenPrivilegePtaddDesc_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_XiuzhenPrivilegeAttriDesc_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_XiuzhenPrivilegeAttriDesc_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_XiuzhenPrivilege_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_XiuzhenPrivilege_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_XiuzhenPrivilege_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_XiuzhenPrivilege_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_E_5fXiuzhen_2eproto() {
  protobuf_AddDesc_E_5fXiuzhen_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "E_Xiuzhen.proto");
  GOOGLE_CHECK(file != NULL);
  E_XiuzhenStagesItemDesc_descriptor_ = file->message_type(0);
  static const int E_XiuzhenStagesItemDesc_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_XiuzhenStagesItemDesc, m_num_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_XiuzhenStagesItemDesc, m_id_),
  };
  E_XiuzhenStagesItemDesc_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_XiuzhenStagesItemDesc_descriptor_,
      E_XiuzhenStagesItemDesc::default_instance_,
      E_XiuzhenStagesItemDesc_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_XiuzhenStagesItemDesc, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_XiuzhenStagesItemDesc, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_XiuzhenStagesItemDesc));
  E_XiuzhenStagesSkillDesc_descriptor_ = file->message_type(1);
  static const int E_XiuzhenStagesSkillDesc_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_XiuzhenStagesSkillDesc, m_lv_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_XiuzhenStagesSkillDesc, m_id_),
  };
  E_XiuzhenStagesSkillDesc_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_XiuzhenStagesSkillDesc_descriptor_,
      E_XiuzhenStagesSkillDesc::default_instance_,
      E_XiuzhenStagesSkillDesc_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_XiuzhenStagesSkillDesc, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_XiuzhenStagesSkillDesc, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_XiuzhenStagesSkillDesc));
  E_XiuzhenStagesAttributeDesc_descriptor_ = file->message_type(2);
  static const int E_XiuzhenStagesAttributeDesc_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_XiuzhenStagesAttributeDesc, m_value_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_XiuzhenStagesAttributeDesc, m_id_),
  };
  E_XiuzhenStagesAttributeDesc_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_XiuzhenStagesAttributeDesc_descriptor_,
      E_XiuzhenStagesAttributeDesc::default_instance_,
      E_XiuzhenStagesAttributeDesc_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_XiuzhenStagesAttributeDesc, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_XiuzhenStagesAttributeDesc, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_XiuzhenStagesAttributeDesc));
  E_XiuzhenStages_descriptor_ = file->message_type(3);
  static const int E_XiuzhenStages_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_XiuzhenStages, m_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_XiuzhenStages, m_success_rate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_XiuzhenStages, m_blessing_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_XiuzhenStages, m_item_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_XiuzhenStages, m_skill_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_XiuzhenStages, m_attribute_),
  };
  E_XiuzhenStages_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_XiuzhenStages_descriptor_,
      E_XiuzhenStages::default_instance_,
      E_XiuzhenStages_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_XiuzhenStages, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_XiuzhenStages, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_XiuzhenStages));
  Sheet_XiuzhenStages_descriptor_ = file->message_type(4);
  static const int Sheet_XiuzhenStages_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_XiuzhenStages, e_xiuzhenstages_list_),
  };
  Sheet_XiuzhenStages_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_XiuzhenStages_descriptor_,
      Sheet_XiuzhenStages::default_instance_,
      Sheet_XiuzhenStages_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_XiuzhenStages, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_XiuzhenStages, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_XiuzhenStages));
  E_XiuzhenGb_areas_descriptor_ = file->message_type(5);
  static const int E_XiuzhenGb_areas_offsets_[14] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_XiuzhenGb_areas, m_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_XiuzhenGb_areas, m_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_XiuzhenGb_areas, m_subarea_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_XiuzhenGb_areas, m_body_lv_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_XiuzhenGb_areas, m_enter_item_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_XiuzhenGb_areas, m_enter_item_num_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_XiuzhenGb_areas, m_enter_rate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_XiuzhenGb_areas, m_energy_addmin_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_XiuzhenGb_areas, m_energy_addmax_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_XiuzhenGb_areas, m_energy_min_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_XiuzhenGb_areas, m_energy_max_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_XiuzhenGb_areas, m_eventrate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_XiuzhenGb_areas, m_eventrateenergyadd_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_XiuzhenGb_areas, m_eventgetitemsrate_),
  };
  E_XiuzhenGb_areas_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_XiuzhenGb_areas_descriptor_,
      E_XiuzhenGb_areas::default_instance_,
      E_XiuzhenGb_areas_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_XiuzhenGb_areas, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_XiuzhenGb_areas, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_XiuzhenGb_areas));
  Sheet_XiuzhenGb_areas_descriptor_ = file->message_type(6);
  static const int Sheet_XiuzhenGb_areas_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_XiuzhenGb_areas, e_xiuzhengb_areas_list_),
  };
  Sheet_XiuzhenGb_areas_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_XiuzhenGb_areas_descriptor_,
      Sheet_XiuzhenGb_areas::default_instance_,
      Sheet_XiuzhenGb_areas_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_XiuzhenGb_areas, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_XiuzhenGb_areas, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_XiuzhenGb_areas));
  E_XiuzhenGb_area_eventsItemDesc_descriptor_ = file->message_type(7);
  static const int E_XiuzhenGb_area_eventsItemDesc_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_XiuzhenGb_area_eventsItemDesc, m_num_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_XiuzhenGb_area_eventsItemDesc, m_id_),
  };
  E_XiuzhenGb_area_eventsItemDesc_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_XiuzhenGb_area_eventsItemDesc_descriptor_,
      E_XiuzhenGb_area_eventsItemDesc::default_instance_,
      E_XiuzhenGb_area_eventsItemDesc_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_XiuzhenGb_area_eventsItemDesc, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_XiuzhenGb_area_eventsItemDesc, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_XiuzhenGb_area_eventsItemDesc));
  E_XiuzhenGb_area_events_descriptor_ = file->message_type(8);
  static const int E_XiuzhenGb_area_events_offsets_[11] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_XiuzhenGb_area_events, m_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_XiuzhenGb_area_events, m_areaid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_XiuzhenGb_area_events, m_rate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_XiuzhenGb_area_events, m_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_XiuzhenGb_area_events, m_bodylvl_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_XiuzhenGb_area_events, m_chattitle_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_XiuzhenGb_area_events, m_chats_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_XiuzhenGb_area_events, m_chatbgf_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_XiuzhenGb_area_events, m_chatbgm_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_XiuzhenGb_area_events, m_energyadd_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_XiuzhenGb_area_events, m_item_),
  };
  E_XiuzhenGb_area_events_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_XiuzhenGb_area_events_descriptor_,
      E_XiuzhenGb_area_events::default_instance_,
      E_XiuzhenGb_area_events_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_XiuzhenGb_area_events, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_XiuzhenGb_area_events, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_XiuzhenGb_area_events));
  Sheet_XiuzhenGb_area_events_descriptor_ = file->message_type(9);
  static const int Sheet_XiuzhenGb_area_events_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_XiuzhenGb_area_events, e_xiuzhengb_area_events_list_),
  };
  Sheet_XiuzhenGb_area_events_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_XiuzhenGb_area_events_descriptor_,
      Sheet_XiuzhenGb_area_events::default_instance_,
      Sheet_XiuzhenGb_area_events_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_XiuzhenGb_area_events, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_XiuzhenGb_area_events, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_XiuzhenGb_area_events));
  E_XiuzhenGb_lvlupItemDesc_descriptor_ = file->message_type(10);
  static const int E_XiuzhenGb_lvlupItemDesc_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_XiuzhenGb_lvlupItemDesc, m_num_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_XiuzhenGb_lvlupItemDesc, m_id_),
  };
  E_XiuzhenGb_lvlupItemDesc_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_XiuzhenGb_lvlupItemDesc_descriptor_,
      E_XiuzhenGb_lvlupItemDesc::default_instance_,
      E_XiuzhenGb_lvlupItemDesc_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_XiuzhenGb_lvlupItemDesc, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_XiuzhenGb_lvlupItemDesc, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_XiuzhenGb_lvlupItemDesc));
  E_XiuzhenGb_lvlupAttributeDesc_descriptor_ = file->message_type(11);
  static const int E_XiuzhenGb_lvlupAttributeDesc_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_XiuzhenGb_lvlupAttributeDesc, m_value_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_XiuzhenGb_lvlupAttributeDesc, m_id_),
  };
  E_XiuzhenGb_lvlupAttributeDesc_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_XiuzhenGb_lvlupAttributeDesc_descriptor_,
      E_XiuzhenGb_lvlupAttributeDesc::default_instance_,
      E_XiuzhenGb_lvlupAttributeDesc_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_XiuzhenGb_lvlupAttributeDesc, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_XiuzhenGb_lvlupAttributeDesc, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_XiuzhenGb_lvlupAttributeDesc));
  E_XiuzhenGb_lvlup_descriptor_ = file->message_type(12);
  static const int E_XiuzhenGb_lvlup_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_XiuzhenGb_lvlup, m_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_XiuzhenGb_lvlup, m_needenergy_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_XiuzhenGb_lvlup, m_item_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_XiuzhenGb_lvlup, m_attribute_),
  };
  E_XiuzhenGb_lvlup_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_XiuzhenGb_lvlup_descriptor_,
      E_XiuzhenGb_lvlup::default_instance_,
      E_XiuzhenGb_lvlup_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_XiuzhenGb_lvlup, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_XiuzhenGb_lvlup, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_XiuzhenGb_lvlup));
  Sheet_XiuzhenGb_lvlup_descriptor_ = file->message_type(13);
  static const int Sheet_XiuzhenGb_lvlup_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_XiuzhenGb_lvlup, e_xiuzhengb_lvlup_list_),
  };
  Sheet_XiuzhenGb_lvlup_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_XiuzhenGb_lvlup_descriptor_,
      Sheet_XiuzhenGb_lvlup::default_instance_,
      Sheet_XiuzhenGb_lvlup_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_XiuzhenGb_lvlup, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_XiuzhenGb_lvlup, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_XiuzhenGb_lvlup));
  E_XiuzhenEvolveItemDesc_descriptor_ = file->message_type(14);
  static const int E_XiuzhenEvolveItemDesc_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_XiuzhenEvolveItemDesc, m_num_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_XiuzhenEvolveItemDesc, m_id_),
  };
  E_XiuzhenEvolveItemDesc_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_XiuzhenEvolveItemDesc_descriptor_,
      E_XiuzhenEvolveItemDesc::default_instance_,
      E_XiuzhenEvolveItemDesc_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_XiuzhenEvolveItemDesc, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_XiuzhenEvolveItemDesc, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_XiuzhenEvolveItemDesc));
  E_XiuzhenEvolveAttributeDesc_descriptor_ = file->message_type(15);
  static const int E_XiuzhenEvolveAttributeDesc_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_XiuzhenEvolveAttributeDesc, m_value_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_XiuzhenEvolveAttributeDesc, m_id_),
  };
  E_XiuzhenEvolveAttributeDesc_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_XiuzhenEvolveAttributeDesc_descriptor_,
      E_XiuzhenEvolveAttributeDesc::default_instance_,
      E_XiuzhenEvolveAttributeDesc_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_XiuzhenEvolveAttributeDesc, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_XiuzhenEvolveAttributeDesc, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_XiuzhenEvolveAttributeDesc));
  E_XiuzhenEvolve_descriptor_ = file->message_type(16);
  static const int E_XiuzhenEvolve_offsets_[9] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_XiuzhenEvolve, m_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_XiuzhenEvolve, m_needxw_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_XiuzhenEvolve, m_success_rate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_XiuzhenEvolve, m_blessing_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_XiuzhenEvolve, m_specialattriid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_XiuzhenEvolve, m_specialattrivalue_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_XiuzhenEvolve, m_linggen_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_XiuzhenEvolve, m_item_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_XiuzhenEvolve, m_attribute_),
  };
  E_XiuzhenEvolve_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_XiuzhenEvolve_descriptor_,
      E_XiuzhenEvolve::default_instance_,
      E_XiuzhenEvolve_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_XiuzhenEvolve, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_XiuzhenEvolve, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_XiuzhenEvolve));
  Sheet_XiuzhenEvolve_descriptor_ = file->message_type(17);
  static const int Sheet_XiuzhenEvolve_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_XiuzhenEvolve, e_xiuzhenevolve_list_),
  };
  Sheet_XiuzhenEvolve_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_XiuzhenEvolve_descriptor_,
      Sheet_XiuzhenEvolve::default_instance_,
      Sheet_XiuzhenEvolve_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_XiuzhenEvolve, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_XiuzhenEvolve, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_XiuzhenEvolve));
  E_XiuzhenLgtypesAttriDesc_descriptor_ = file->message_type(18);
  static const int E_XiuzhenLgtypesAttriDesc_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_XiuzhenLgtypesAttriDesc, m_epa_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_XiuzhenLgtypesAttriDesc, m_np_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_XiuzhenLgtypesAttriDesc, m_value_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_XiuzhenLgtypesAttriDesc, m_id_),
  };
  E_XiuzhenLgtypesAttriDesc_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_XiuzhenLgtypesAttriDesc_descriptor_,
      E_XiuzhenLgtypesAttriDesc::default_instance_,
      E_XiuzhenLgtypesAttriDesc_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_XiuzhenLgtypesAttriDesc, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_XiuzhenLgtypesAttriDesc, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_XiuzhenLgtypesAttriDesc));
  E_XiuzhenLgtypesLgattDesc_descriptor_ = file->message_type(19);
  static const int E_XiuzhenLgtypesLgattDesc_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_XiuzhenLgtypesLgattDesc, m_value_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_XiuzhenLgtypesLgattDesc, m_lim_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_XiuzhenLgtypesLgattDesc, m_type_),
  };
  E_XiuzhenLgtypesLgattDesc_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_XiuzhenLgtypesLgattDesc_descriptor_,
      E_XiuzhenLgtypesLgattDesc::default_instance_,
      E_XiuzhenLgtypesLgattDesc_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_XiuzhenLgtypesLgattDesc, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_XiuzhenLgtypesLgattDesc, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_XiuzhenLgtypesLgattDesc));
  E_XiuzhenLgtypes_descriptor_ = file->message_type(20);
  static const int E_XiuzhenLgtypes_offsets_[11] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_XiuzhenLgtypes, m_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_XiuzhenLgtypes, m_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_XiuzhenLgtypes, m_shortname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_XiuzhenLgtypes, m_namecolor_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_XiuzhenLgtypes, m_bookmodel_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_XiuzhenLgtypes, m_bodymodel_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_XiuzhenLgtypes, m_unlockbook_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_XiuzhenLgtypes, m_bookcount_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_XiuzhenLgtypes, m_addpoints_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_XiuzhenLgtypes, m_attri_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_XiuzhenLgtypes, m_lgatt_),
  };
  E_XiuzhenLgtypes_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_XiuzhenLgtypes_descriptor_,
      E_XiuzhenLgtypes::default_instance_,
      E_XiuzhenLgtypes_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_XiuzhenLgtypes, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_XiuzhenLgtypes, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_XiuzhenLgtypes));
  Sheet_XiuzhenLgtypes_descriptor_ = file->message_type(21);
  static const int Sheet_XiuzhenLgtypes_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_XiuzhenLgtypes, e_xiuzhenlgtypes_list_),
  };
  Sheet_XiuzhenLgtypes_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_XiuzhenLgtypes_descriptor_,
      Sheet_XiuzhenLgtypes::default_instance_,
      Sheet_XiuzhenLgtypes_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_XiuzhenLgtypes, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_XiuzhenLgtypes, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_XiuzhenLgtypes));
  E_XiuzhenLglvlup_descriptor_ = file->message_type(22);
  static const int E_XiuzhenLglvlup_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_XiuzhenLglvlup, m_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_XiuzhenLglvlup, m_needxw_),
  };
  E_XiuzhenLglvlup_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_XiuzhenLglvlup_descriptor_,
      E_XiuzhenLglvlup::default_instance_,
      E_XiuzhenLglvlup_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_XiuzhenLglvlup, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_XiuzhenLglvlup, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_XiuzhenLglvlup));
  Sheet_XiuzhenLglvlup_descriptor_ = file->message_type(23);
  static const int Sheet_XiuzhenLglvlup_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_XiuzhenLglvlup, e_xiuzhenlglvlup_list_),
  };
  Sheet_XiuzhenLglvlup_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_XiuzhenLglvlup_descriptor_,
      Sheet_XiuzhenLglvlup::default_instance_,
      Sheet_XiuzhenLglvlup_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_XiuzhenLglvlup, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_XiuzhenLglvlup, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_XiuzhenLglvlup));
  E_XiuzhenLgpotionsLgDesc_descriptor_ = file->message_type(24);
  static const int E_XiuzhenLgpotionsLgDesc_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_XiuzhenLgpotionsLgDesc, m_value_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_XiuzhenLgpotionsLgDesc, m_type_),
  };
  E_XiuzhenLgpotionsLgDesc_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_XiuzhenLgpotionsLgDesc_descriptor_,
      E_XiuzhenLgpotionsLgDesc::default_instance_,
      E_XiuzhenLgpotionsLgDesc_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_XiuzhenLgpotionsLgDesc, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_XiuzhenLgpotionsLgDesc, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_XiuzhenLgpotionsLgDesc));
  E_XiuzhenLgpotions_descriptor_ = file->message_type(25);
  static const int E_XiuzhenLgpotions_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_XiuzhenLgpotions, m_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_XiuzhenLgpotions, m_lg_),
  };
  E_XiuzhenLgpotions_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_XiuzhenLgpotions_descriptor_,
      E_XiuzhenLgpotions::default_instance_,
      E_XiuzhenLgpotions_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_XiuzhenLgpotions, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_XiuzhenLgpotions, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_XiuzhenLgpotions));
  Sheet_XiuzhenLgpotions_descriptor_ = file->message_type(26);
  static const int Sheet_XiuzhenLgpotions_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_XiuzhenLgpotions, e_xiuzhenlgpotions_list_),
  };
  Sheet_XiuzhenLgpotions_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_XiuzhenLgpotions_descriptor_,
      Sheet_XiuzhenLgpotions::default_instance_,
      Sheet_XiuzhenLgpotions_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_XiuzhenLgpotions, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_XiuzhenLgpotions, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_XiuzhenLgpotions));
  E_XiuzhenGftypes_descriptor_ = file->message_type(27);
  static const int E_XiuzhenGftypes_offsets_[8] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_XiuzhenGftypes, m_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_XiuzhenGftypes, m_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_XiuzhenGftypes, m_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_XiuzhenGftypes, m_icon_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_XiuzhenGftypes, m_activationitem_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_XiuzhenGftypes, m_itemnum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_XiuzhenGftypes, m_buylv_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_XiuzhenGftypes, m_rechargeid_),
  };
  E_XiuzhenGftypes_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_XiuzhenGftypes_descriptor_,
      E_XiuzhenGftypes::default_instance_,
      E_XiuzhenGftypes_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_XiuzhenGftypes, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_XiuzhenGftypes, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_XiuzhenGftypes));
  Sheet_XiuzhenGftypes_descriptor_ = file->message_type(28);
  static const int Sheet_XiuzhenGftypes_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_XiuzhenGftypes, e_xiuzhengftypes_list_),
  };
  Sheet_XiuzhenGftypes_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_XiuzhenGftypes_descriptor_,
      Sheet_XiuzhenGftypes::default_instance_,
      Sheet_XiuzhenGftypes_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_XiuzhenGftypes, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_XiuzhenGftypes, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_XiuzhenGftypes));
  E_XiuzhenGflvlupAttributeDesc_descriptor_ = file->message_type(29);
  static const int E_XiuzhenGflvlupAttributeDesc_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_XiuzhenGflvlupAttributeDesc, m_value_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_XiuzhenGflvlupAttributeDesc, m_id_),
  };
  E_XiuzhenGflvlupAttributeDesc_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_XiuzhenGflvlupAttributeDesc_descriptor_,
      E_XiuzhenGflvlupAttributeDesc::default_instance_,
      E_XiuzhenGflvlupAttributeDesc_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_XiuzhenGflvlupAttributeDesc, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_XiuzhenGflvlupAttributeDesc, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_XiuzhenGflvlupAttributeDesc));
  E_XiuzhenGflvlup_descriptor_ = file->message_type(30);
  static const int E_XiuzhenGflvlup_offsets_[14] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_XiuzhenGflvlup, m_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_XiuzhenGflvlup, m_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_XiuzhenGflvlup, m_first_level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_XiuzhenGflvlup, m_middle_level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_XiuzhenGflvlup, m_high_level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_XiuzhenGflvlup, m_roushen_level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_XiuzhenGflvlup, m_itemid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_XiuzhenGflvlup, m_itemnum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_XiuzhenGflvlup, m_xw_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_XiuzhenGflvlup, m_awakeskill_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_XiuzhenGflvlup, m_awakeskilllvl_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_XiuzhenGflvlup, m_specialattriid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_XiuzhenGflvlup, m_specialattrivalue_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_XiuzhenGflvlup, m_attribute_),
  };
  E_XiuzhenGflvlup_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_XiuzhenGflvlup_descriptor_,
      E_XiuzhenGflvlup::default_instance_,
      E_XiuzhenGflvlup_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_XiuzhenGflvlup, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_XiuzhenGflvlup, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_XiuzhenGflvlup));
  Sheet_XiuzhenGflvlup_descriptor_ = file->message_type(31);
  static const int Sheet_XiuzhenGflvlup_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_XiuzhenGflvlup, e_xiuzhengflvlup_list_),
  };
  Sheet_XiuzhenGflvlup_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_XiuzhenGflvlup_descriptor_,
      Sheet_XiuzhenGflvlup::default_instance_,
      Sheet_XiuzhenGflvlup_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_XiuzhenGflvlup, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_XiuzhenGflvlup, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_XiuzhenGflvlup));
  E_XiuzhenGfstageupAttributeDesc_descriptor_ = file->message_type(32);
  static const int E_XiuzhenGfstageupAttributeDesc_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_XiuzhenGfstageupAttributeDesc, m_value_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_XiuzhenGfstageupAttributeDesc, m_id_),
  };
  E_XiuzhenGfstageupAttributeDesc_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_XiuzhenGfstageupAttributeDesc_descriptor_,
      E_XiuzhenGfstageupAttributeDesc::default_instance_,
      E_XiuzhenGfstageupAttributeDesc_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_XiuzhenGfstageupAttributeDesc, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_XiuzhenGfstageupAttributeDesc, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_XiuzhenGfstageupAttributeDesc));
  E_XiuzhenGfstageup_descriptor_ = file->message_type(33);
  static const int E_XiuzhenGfstageup_offsets_[11] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_XiuzhenGfstageup, m_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_XiuzhenGfstageup, m_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_XiuzhenGfstageup, m_high_level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_XiuzhenGfstageup, m_highlevel_icon_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_XiuzhenGfstageup, m_itemid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_XiuzhenGfstageup, m_itemnum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_XiuzhenGfstageup, m_awakeskill1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_XiuzhenGfstageup, m_awakeskilllvl1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_XiuzhenGfstageup, m_awakeskill2_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_XiuzhenGfstageup, m_awakeskilllvl2_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_XiuzhenGfstageup, m_attribute_),
  };
  E_XiuzhenGfstageup_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_XiuzhenGfstageup_descriptor_,
      E_XiuzhenGfstageup::default_instance_,
      E_XiuzhenGfstageup_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_XiuzhenGfstageup, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_XiuzhenGfstageup, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_XiuzhenGfstageup));
  Sheet_XiuzhenGfstageup_descriptor_ = file->message_type(34);
  static const int Sheet_XiuzhenGfstageup_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_XiuzhenGfstageup, e_xiuzhengfstageup_list_),
  };
  Sheet_XiuzhenGfstageup_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_XiuzhenGfstageup_descriptor_,
      Sheet_XiuzhenGfstageup::default_instance_,
      Sheet_XiuzhenGfstageup_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_XiuzhenGfstageup, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_XiuzhenGfstageup, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_XiuzhenGfstageup));
  E_XiuzhenJmtypes_descriptor_ = file->message_type(35);
  static const int E_XiuzhenJmtypes_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_XiuzhenJmtypes, m_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_XiuzhenJmtypes, m_gongfa_),
  };
  E_XiuzhenJmtypes_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_XiuzhenJmtypes_descriptor_,
      E_XiuzhenJmtypes::default_instance_,
      E_XiuzhenJmtypes_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_XiuzhenJmtypes, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_XiuzhenJmtypes, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_XiuzhenJmtypes));
  Sheet_XiuzhenJmtypes_descriptor_ = file->message_type(36);
  static const int Sheet_XiuzhenJmtypes_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_XiuzhenJmtypes, e_xiuzhenjmtypes_list_),
  };
  Sheet_XiuzhenJmtypes_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_XiuzhenJmtypes_descriptor_,
      Sheet_XiuzhenJmtypes::default_instance_,
      Sheet_XiuzhenJmtypes_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_XiuzhenJmtypes, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_XiuzhenJmtypes, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_XiuzhenJmtypes));
  E_XiuzhenJmlvlupItemDesc_descriptor_ = file->message_type(37);
  static const int E_XiuzhenJmlvlupItemDesc_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_XiuzhenJmlvlupItemDesc, m_num_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_XiuzhenJmlvlupItemDesc, m_id_),
  };
  E_XiuzhenJmlvlupItemDesc_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_XiuzhenJmlvlupItemDesc_descriptor_,
      E_XiuzhenJmlvlupItemDesc::default_instance_,
      E_XiuzhenJmlvlupItemDesc_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_XiuzhenJmlvlupItemDesc, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_XiuzhenJmlvlupItemDesc, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_XiuzhenJmlvlupItemDesc));
  E_XiuzhenJmlvlupAttributeDesc_descriptor_ = file->message_type(38);
  static const int E_XiuzhenJmlvlupAttributeDesc_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_XiuzhenJmlvlupAttributeDesc, m_value_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_XiuzhenJmlvlupAttributeDesc, m_id_),
  };
  E_XiuzhenJmlvlupAttributeDesc_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_XiuzhenJmlvlupAttributeDesc_descriptor_,
      E_XiuzhenJmlvlupAttributeDesc::default_instance_,
      E_XiuzhenJmlvlupAttributeDesc_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_XiuzhenJmlvlupAttributeDesc, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_XiuzhenJmlvlupAttributeDesc, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_XiuzhenJmlvlupAttributeDesc));
  E_XiuzhenJmlvlup_descriptor_ = file->message_type(39);
  static const int E_XiuzhenJmlvlup_offsets_[9] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_XiuzhenJmlvlup, m_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_XiuzhenJmlvlup, m_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_XiuzhenJmlvlup, m_lvl_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_XiuzhenJmlvlup, m_needxw_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_XiuzhenJmlvlup, m_success_rate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_XiuzhenJmlvlup, m_specialattriid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_XiuzhenJmlvlup, m_specialattrivalue_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_XiuzhenJmlvlup, m_item_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_XiuzhenJmlvlup, m_attribute_),
  };
  E_XiuzhenJmlvlup_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_XiuzhenJmlvlup_descriptor_,
      E_XiuzhenJmlvlup::default_instance_,
      E_XiuzhenJmlvlup_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_XiuzhenJmlvlup, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_XiuzhenJmlvlup, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_XiuzhenJmlvlup));
  Sheet_XiuzhenJmlvlup_descriptor_ = file->message_type(40);
  static const int Sheet_XiuzhenJmlvlup_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_XiuzhenJmlvlup, e_xiuzhenjmlvlup_list_),
  };
  Sheet_XiuzhenJmlvlup_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_XiuzhenJmlvlup_descriptor_,
      Sheet_XiuzhenJmlvlup::default_instance_,
      Sheet_XiuzhenJmlvlup_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_XiuzhenJmlvlup, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_XiuzhenJmlvlup, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_XiuzhenJmlvlup));
  E_XiuzhenJmstageupItemDesc_descriptor_ = file->message_type(41);
  static const int E_XiuzhenJmstageupItemDesc_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_XiuzhenJmstageupItemDesc, m_num_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_XiuzhenJmstageupItemDesc, m_id_),
  };
  E_XiuzhenJmstageupItemDesc_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_XiuzhenJmstageupItemDesc_descriptor_,
      E_XiuzhenJmstageupItemDesc::default_instance_,
      E_XiuzhenJmstageupItemDesc_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_XiuzhenJmstageupItemDesc, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_XiuzhenJmstageupItemDesc, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_XiuzhenJmstageupItemDesc));
  E_XiuzhenJmstageupAttributeDesc_descriptor_ = file->message_type(42);
  static const int E_XiuzhenJmstageupAttributeDesc_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_XiuzhenJmstageupAttributeDesc, m_value_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_XiuzhenJmstageupAttributeDesc, m_id_),
  };
  E_XiuzhenJmstageupAttributeDesc_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_XiuzhenJmstageupAttributeDesc_descriptor_,
      E_XiuzhenJmstageupAttributeDesc::default_instance_,
      E_XiuzhenJmstageupAttributeDesc_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_XiuzhenJmstageupAttributeDesc, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_XiuzhenJmstageupAttributeDesc, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_XiuzhenJmstageupAttributeDesc));
  E_XiuzhenJmstageup_descriptor_ = file->message_type(43);
  static const int E_XiuzhenJmstageup_offsets_[11] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_XiuzhenJmstageup, m_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_XiuzhenJmstageup, m_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_XiuzhenJmstageup, m_stage_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_XiuzhenJmstageup, m_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_XiuzhenJmstageup, m_needgfunlock_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_XiuzhenJmstageup, m_success_rate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_XiuzhenJmstageup, m_blessing_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_XiuzhenJmstageup, m_awakeskillid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_XiuzhenJmstageup, m_awakeskilllvl_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_XiuzhenJmstageup, m_item_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_XiuzhenJmstageup, m_attribute_),
  };
  E_XiuzhenJmstageup_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_XiuzhenJmstageup_descriptor_,
      E_XiuzhenJmstageup::default_instance_,
      E_XiuzhenJmstageup_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_XiuzhenJmstageup, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_XiuzhenJmstageup, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_XiuzhenJmstageup));
  Sheet_XiuzhenJmstageup_descriptor_ = file->message_type(44);
  static const int Sheet_XiuzhenJmstageup_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_XiuzhenJmstageup, e_xiuzhenjmstageup_list_),
  };
  Sheet_XiuzhenJmstageup_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_XiuzhenJmstageup_descriptor_,
      Sheet_XiuzhenJmstageup::default_instance_,
      Sheet_XiuzhenJmstageup_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_XiuzhenJmstageup, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_XiuzhenJmstageup, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_XiuzhenJmstageup));
  E_XiuzhenJmmergeupCsDesc_descriptor_ = file->message_type(45);
  static const int E_XiuzhenJmmergeupCsDesc_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_XiuzhenJmmergeupCsDesc, m_stage_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_XiuzhenJmmergeupCsDesc, m_type_),
  };
  E_XiuzhenJmmergeupCsDesc_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_XiuzhenJmmergeupCsDesc_descriptor_,
      E_XiuzhenJmmergeupCsDesc::default_instance_,
      E_XiuzhenJmmergeupCsDesc_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_XiuzhenJmmergeupCsDesc, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_XiuzhenJmmergeupCsDesc, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_XiuzhenJmmergeupCsDesc));
  E_XiuzhenJmmergeupAttributeDesc_descriptor_ = file->message_type(46);
  static const int E_XiuzhenJmmergeupAttributeDesc_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_XiuzhenJmmergeupAttributeDesc, m_value_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_XiuzhenJmmergeupAttributeDesc, m_id_),
  };
  E_XiuzhenJmmergeupAttributeDesc_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_XiuzhenJmmergeupAttributeDesc_descriptor_,
      E_XiuzhenJmmergeupAttributeDesc::default_instance_,
      E_XiuzhenJmmergeupAttributeDesc_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_XiuzhenJmmergeupAttributeDesc, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_XiuzhenJmmergeupAttributeDesc, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_XiuzhenJmmergeupAttributeDesc));
  E_XiuzhenJmmergeup_descriptor_ = file->message_type(47);
  static const int E_XiuzhenJmmergeup_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_XiuzhenJmmergeup, m_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_XiuzhenJmmergeup, m_gf_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_XiuzhenJmmergeup, m_awakeskillid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_XiuzhenJmmergeup, m_awakeskilllvl_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_XiuzhenJmmergeup, m_cs_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_XiuzhenJmmergeup, m_attribute_),
  };
  E_XiuzhenJmmergeup_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_XiuzhenJmmergeup_descriptor_,
      E_XiuzhenJmmergeup::default_instance_,
      E_XiuzhenJmmergeup_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_XiuzhenJmmergeup, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_XiuzhenJmmergeup, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_XiuzhenJmmergeup));
  Sheet_XiuzhenJmmergeup_descriptor_ = file->message_type(48);
  static const int Sheet_XiuzhenJmmergeup_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_XiuzhenJmmergeup, e_xiuzhenjmmergeup_list_),
  };
  Sheet_XiuzhenJmmergeup_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_XiuzhenJmmergeup_descriptor_,
      Sheet_XiuzhenJmmergeup::default_instance_,
      Sheet_XiuzhenJmmergeup_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_XiuzhenJmmergeup, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_XiuzhenJmmergeup, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_XiuzhenJmmergeup));
  E_XiuzhenPrivilegePtaddDesc_descriptor_ = file->message_type(49);
  static const int E_XiuzhenPrivilegePtaddDesc_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_XiuzhenPrivilegePtaddDesc, m_v_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_XiuzhenPrivilegePtaddDesc, m_n_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_XiuzhenPrivilegePtaddDesc, m_t_),
  };
  E_XiuzhenPrivilegePtaddDesc_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_XiuzhenPrivilegePtaddDesc_descriptor_,
      E_XiuzhenPrivilegePtaddDesc::default_instance_,
      E_XiuzhenPrivilegePtaddDesc_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_XiuzhenPrivilegePtaddDesc, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_XiuzhenPrivilegePtaddDesc, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_XiuzhenPrivilegePtaddDesc));
  E_XiuzhenPrivilegeAttriDesc_descriptor_ = file->message_type(50);
  static const int E_XiuzhenPrivilegeAttriDesc_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_XiuzhenPrivilegeAttriDesc, m_v_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_XiuzhenPrivilegeAttriDesc, m_t_),
  };
  E_XiuzhenPrivilegeAttriDesc_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_XiuzhenPrivilegeAttriDesc_descriptor_,
      E_XiuzhenPrivilegeAttriDesc::default_instance_,
      E_XiuzhenPrivilegeAttriDesc_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_XiuzhenPrivilegeAttriDesc, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_XiuzhenPrivilegeAttriDesc, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_XiuzhenPrivilegeAttriDesc));
  E_XiuzhenPrivilege_descriptor_ = file->message_type(51);
  static const int E_XiuzhenPrivilege_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_XiuzhenPrivilege, m_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_XiuzhenPrivilege, m_price_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_XiuzhenPrivilege, m_activeavatar_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_XiuzhenPrivilege, m_avatarname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_XiuzhenPrivilege, m_ptadd_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_XiuzhenPrivilege, m_attri_),
  };
  E_XiuzhenPrivilege_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_XiuzhenPrivilege_descriptor_,
      E_XiuzhenPrivilege::default_instance_,
      E_XiuzhenPrivilege_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_XiuzhenPrivilege, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_XiuzhenPrivilege, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_XiuzhenPrivilege));
  Sheet_XiuzhenPrivilege_descriptor_ = file->message_type(52);
  static const int Sheet_XiuzhenPrivilege_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_XiuzhenPrivilege, e_xiuzhenprivilege_list_),
  };
  Sheet_XiuzhenPrivilege_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_XiuzhenPrivilege_descriptor_,
      Sheet_XiuzhenPrivilege::default_instance_,
      Sheet_XiuzhenPrivilege_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_XiuzhenPrivilege, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_XiuzhenPrivilege, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_XiuzhenPrivilege));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_E_5fXiuzhen_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_XiuzhenStagesItemDesc_descriptor_, &E_XiuzhenStagesItemDesc::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_XiuzhenStagesSkillDesc_descriptor_, &E_XiuzhenStagesSkillDesc::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_XiuzhenStagesAttributeDesc_descriptor_, &E_XiuzhenStagesAttributeDesc::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_XiuzhenStages_descriptor_, &E_XiuzhenStages::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_XiuzhenStages_descriptor_, &Sheet_XiuzhenStages::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_XiuzhenGb_areas_descriptor_, &E_XiuzhenGb_areas::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_XiuzhenGb_areas_descriptor_, &Sheet_XiuzhenGb_areas::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_XiuzhenGb_area_eventsItemDesc_descriptor_, &E_XiuzhenGb_area_eventsItemDesc::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_XiuzhenGb_area_events_descriptor_, &E_XiuzhenGb_area_events::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_XiuzhenGb_area_events_descriptor_, &Sheet_XiuzhenGb_area_events::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_XiuzhenGb_lvlupItemDesc_descriptor_, &E_XiuzhenGb_lvlupItemDesc::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_XiuzhenGb_lvlupAttributeDesc_descriptor_, &E_XiuzhenGb_lvlupAttributeDesc::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_XiuzhenGb_lvlup_descriptor_, &E_XiuzhenGb_lvlup::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_XiuzhenGb_lvlup_descriptor_, &Sheet_XiuzhenGb_lvlup::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_XiuzhenEvolveItemDesc_descriptor_, &E_XiuzhenEvolveItemDesc::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_XiuzhenEvolveAttributeDesc_descriptor_, &E_XiuzhenEvolveAttributeDesc::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_XiuzhenEvolve_descriptor_, &E_XiuzhenEvolve::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_XiuzhenEvolve_descriptor_, &Sheet_XiuzhenEvolve::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_XiuzhenLgtypesAttriDesc_descriptor_, &E_XiuzhenLgtypesAttriDesc::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_XiuzhenLgtypesLgattDesc_descriptor_, &E_XiuzhenLgtypesLgattDesc::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_XiuzhenLgtypes_descriptor_, &E_XiuzhenLgtypes::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_XiuzhenLgtypes_descriptor_, &Sheet_XiuzhenLgtypes::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_XiuzhenLglvlup_descriptor_, &E_XiuzhenLglvlup::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_XiuzhenLglvlup_descriptor_, &Sheet_XiuzhenLglvlup::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_XiuzhenLgpotionsLgDesc_descriptor_, &E_XiuzhenLgpotionsLgDesc::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_XiuzhenLgpotions_descriptor_, &E_XiuzhenLgpotions::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_XiuzhenLgpotions_descriptor_, &Sheet_XiuzhenLgpotions::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_XiuzhenGftypes_descriptor_, &E_XiuzhenGftypes::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_XiuzhenGftypes_descriptor_, &Sheet_XiuzhenGftypes::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_XiuzhenGflvlupAttributeDesc_descriptor_, &E_XiuzhenGflvlupAttributeDesc::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_XiuzhenGflvlup_descriptor_, &E_XiuzhenGflvlup::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_XiuzhenGflvlup_descriptor_, &Sheet_XiuzhenGflvlup::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_XiuzhenGfstageupAttributeDesc_descriptor_, &E_XiuzhenGfstageupAttributeDesc::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_XiuzhenGfstageup_descriptor_, &E_XiuzhenGfstageup::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_XiuzhenGfstageup_descriptor_, &Sheet_XiuzhenGfstageup::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_XiuzhenJmtypes_descriptor_, &E_XiuzhenJmtypes::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_XiuzhenJmtypes_descriptor_, &Sheet_XiuzhenJmtypes::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_XiuzhenJmlvlupItemDesc_descriptor_, &E_XiuzhenJmlvlupItemDesc::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_XiuzhenJmlvlupAttributeDesc_descriptor_, &E_XiuzhenJmlvlupAttributeDesc::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_XiuzhenJmlvlup_descriptor_, &E_XiuzhenJmlvlup::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_XiuzhenJmlvlup_descriptor_, &Sheet_XiuzhenJmlvlup::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_XiuzhenJmstageupItemDesc_descriptor_, &E_XiuzhenJmstageupItemDesc::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_XiuzhenJmstageupAttributeDesc_descriptor_, &E_XiuzhenJmstageupAttributeDesc::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_XiuzhenJmstageup_descriptor_, &E_XiuzhenJmstageup::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_XiuzhenJmstageup_descriptor_, &Sheet_XiuzhenJmstageup::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_XiuzhenJmmergeupCsDesc_descriptor_, &E_XiuzhenJmmergeupCsDesc::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_XiuzhenJmmergeupAttributeDesc_descriptor_, &E_XiuzhenJmmergeupAttributeDesc::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_XiuzhenJmmergeup_descriptor_, &E_XiuzhenJmmergeup::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_XiuzhenJmmergeup_descriptor_, &Sheet_XiuzhenJmmergeup::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_XiuzhenPrivilegePtaddDesc_descriptor_, &E_XiuzhenPrivilegePtaddDesc::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_XiuzhenPrivilegeAttriDesc_descriptor_, &E_XiuzhenPrivilegeAttriDesc::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_XiuzhenPrivilege_descriptor_, &E_XiuzhenPrivilege::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_XiuzhenPrivilege_descriptor_, &Sheet_XiuzhenPrivilege::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_E_5fXiuzhen_2eproto() {
  delete E_XiuzhenStagesItemDesc::default_instance_;
  delete E_XiuzhenStagesItemDesc_reflection_;
  delete E_XiuzhenStagesSkillDesc::default_instance_;
  delete E_XiuzhenStagesSkillDesc_reflection_;
  delete E_XiuzhenStagesAttributeDesc::default_instance_;
  delete E_XiuzhenStagesAttributeDesc_reflection_;
  delete E_XiuzhenStages::default_instance_;
  delete E_XiuzhenStages_reflection_;
  delete Sheet_XiuzhenStages::default_instance_;
  delete Sheet_XiuzhenStages_reflection_;
  delete E_XiuzhenGb_areas::default_instance_;
  delete E_XiuzhenGb_areas_reflection_;
  delete Sheet_XiuzhenGb_areas::default_instance_;
  delete Sheet_XiuzhenGb_areas_reflection_;
  delete E_XiuzhenGb_area_eventsItemDesc::default_instance_;
  delete E_XiuzhenGb_area_eventsItemDesc_reflection_;
  delete E_XiuzhenGb_area_events::default_instance_;
  delete E_XiuzhenGb_area_events_reflection_;
  delete Sheet_XiuzhenGb_area_events::default_instance_;
  delete Sheet_XiuzhenGb_area_events_reflection_;
  delete E_XiuzhenGb_lvlupItemDesc::default_instance_;
  delete E_XiuzhenGb_lvlupItemDesc_reflection_;
  delete E_XiuzhenGb_lvlupAttributeDesc::default_instance_;
  delete E_XiuzhenGb_lvlupAttributeDesc_reflection_;
  delete E_XiuzhenGb_lvlup::default_instance_;
  delete E_XiuzhenGb_lvlup_reflection_;
  delete Sheet_XiuzhenGb_lvlup::default_instance_;
  delete Sheet_XiuzhenGb_lvlup_reflection_;
  delete E_XiuzhenEvolveItemDesc::default_instance_;
  delete E_XiuzhenEvolveItemDesc_reflection_;
  delete E_XiuzhenEvolveAttributeDesc::default_instance_;
  delete E_XiuzhenEvolveAttributeDesc_reflection_;
  delete E_XiuzhenEvolve::default_instance_;
  delete E_XiuzhenEvolve_reflection_;
  delete Sheet_XiuzhenEvolve::default_instance_;
  delete Sheet_XiuzhenEvolve_reflection_;
  delete E_XiuzhenLgtypesAttriDesc::default_instance_;
  delete E_XiuzhenLgtypesAttriDesc_reflection_;
  delete E_XiuzhenLgtypesLgattDesc::default_instance_;
  delete E_XiuzhenLgtypesLgattDesc_reflection_;
  delete E_XiuzhenLgtypes::default_instance_;
  delete E_XiuzhenLgtypes_reflection_;
  delete Sheet_XiuzhenLgtypes::default_instance_;
  delete Sheet_XiuzhenLgtypes_reflection_;
  delete E_XiuzhenLglvlup::default_instance_;
  delete E_XiuzhenLglvlup_reflection_;
  delete Sheet_XiuzhenLglvlup::default_instance_;
  delete Sheet_XiuzhenLglvlup_reflection_;
  delete E_XiuzhenLgpotionsLgDesc::default_instance_;
  delete E_XiuzhenLgpotionsLgDesc_reflection_;
  delete E_XiuzhenLgpotions::default_instance_;
  delete E_XiuzhenLgpotions_reflection_;
  delete Sheet_XiuzhenLgpotions::default_instance_;
  delete Sheet_XiuzhenLgpotions_reflection_;
  delete E_XiuzhenGftypes::default_instance_;
  delete E_XiuzhenGftypes_reflection_;
  delete Sheet_XiuzhenGftypes::default_instance_;
  delete Sheet_XiuzhenGftypes_reflection_;
  delete E_XiuzhenGflvlupAttributeDesc::default_instance_;
  delete E_XiuzhenGflvlupAttributeDesc_reflection_;
  delete E_XiuzhenGflvlup::default_instance_;
  delete E_XiuzhenGflvlup_reflection_;
  delete Sheet_XiuzhenGflvlup::default_instance_;
  delete Sheet_XiuzhenGflvlup_reflection_;
  delete E_XiuzhenGfstageupAttributeDesc::default_instance_;
  delete E_XiuzhenGfstageupAttributeDesc_reflection_;
  delete E_XiuzhenGfstageup::default_instance_;
  delete E_XiuzhenGfstageup_reflection_;
  delete Sheet_XiuzhenGfstageup::default_instance_;
  delete Sheet_XiuzhenGfstageup_reflection_;
  delete E_XiuzhenJmtypes::default_instance_;
  delete E_XiuzhenJmtypes_reflection_;
  delete Sheet_XiuzhenJmtypes::default_instance_;
  delete Sheet_XiuzhenJmtypes_reflection_;
  delete E_XiuzhenJmlvlupItemDesc::default_instance_;
  delete E_XiuzhenJmlvlupItemDesc_reflection_;
  delete E_XiuzhenJmlvlupAttributeDesc::default_instance_;
  delete E_XiuzhenJmlvlupAttributeDesc_reflection_;
  delete E_XiuzhenJmlvlup::default_instance_;
  delete E_XiuzhenJmlvlup_reflection_;
  delete Sheet_XiuzhenJmlvlup::default_instance_;
  delete Sheet_XiuzhenJmlvlup_reflection_;
  delete E_XiuzhenJmstageupItemDesc::default_instance_;
  delete E_XiuzhenJmstageupItemDesc_reflection_;
  delete E_XiuzhenJmstageupAttributeDesc::default_instance_;
  delete E_XiuzhenJmstageupAttributeDesc_reflection_;
  delete E_XiuzhenJmstageup::default_instance_;
  delete E_XiuzhenJmstageup_reflection_;
  delete Sheet_XiuzhenJmstageup::default_instance_;
  delete Sheet_XiuzhenJmstageup_reflection_;
  delete E_XiuzhenJmmergeupCsDesc::default_instance_;
  delete E_XiuzhenJmmergeupCsDesc_reflection_;
  delete E_XiuzhenJmmergeupAttributeDesc::default_instance_;
  delete E_XiuzhenJmmergeupAttributeDesc_reflection_;
  delete E_XiuzhenJmmergeup::default_instance_;
  delete E_XiuzhenJmmergeup_reflection_;
  delete Sheet_XiuzhenJmmergeup::default_instance_;
  delete Sheet_XiuzhenJmmergeup_reflection_;
  delete E_XiuzhenPrivilegePtaddDesc::default_instance_;
  delete E_XiuzhenPrivilegePtaddDesc_reflection_;
  delete E_XiuzhenPrivilegeAttriDesc::default_instance_;
  delete E_XiuzhenPrivilegeAttriDesc_reflection_;
  delete E_XiuzhenPrivilege::default_instance_;
  delete E_XiuzhenPrivilege_reflection_;
  delete Sheet_XiuzhenPrivilege::default_instance_;
  delete Sheet_XiuzhenPrivilege_reflection_;
}

void protobuf_AddDesc_E_5fXiuzhen_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::yd_fieldoptions::protobuf_AddDesc_yd_5ffieldoptions_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\017E_Xiuzhen.proto\022\010proto_ff\032\025yd_fieldopt"
    "ions.proto\"J\n\027E_XiuzhenStagesItemDesc\022\031\n"
    "\005m_num\030\001 \001(\003B\n\302\377\024\006\346\225\260\351\207\217\022\024\n\004m_id\030\002 \001(\005B\006"
    "\302\377\024\002ID\"J\n\030E_XiuzhenStagesSkillDesc\022\030\n\004m_"
    "lv\030\001 \001(\005B\n\302\377\024\006\347\255\211\347\272\247\022\024\n\004m_id\030\002 \001(\005B\006\302\377\024\002"
    "ID\"N\n\034E_XiuzhenStagesAttributeDesc\022\030\n\007m_"
    "value\030\001 \001(\003B\007\302\377\024\003\345\200\274\022\024\n\004m_id\030\002 \001(\005B\006\302\377\024\002"
    "ID\"\326\002\n\017E_XiuzhenStages\022\030\n\004m_id\030\001 \001(\005B\n\302\377"
    "\024\006\347\255\211\347\272\247\022%\n\016m_success_rate\030\002 \001(\005B\r\302\377\024\t\346\210"
    "\220\345\212\237\347\216\207\022-\n\nm_blessing\030\003 \001(\005B\031\302\377\024\025\345\244\261\350\264\245\345"
    "\242\236\345\212\240\347\245\235\347\246\217\345\200\274\022A\n\006m_item\030\004 \003(\0132!.proto_f"
    "f.E_XiuzhenStagesItemDescB\016\302\377\024\006\346\235\220\346\226\231\210\301\024"
    "\003\022C\n\007m_skill\030\005 \003(\0132\".proto_ff.E_XiuzhenS"
    "tagesSkillDescB\016\302\377\024\006\346\212\200\350\203\275\210\301\024\005\022K\n\013m_attr"
    "ibute\030\006 \003(\0132&.proto_ff.E_XiuzhenStagesAt"
    "tributeDescB\016\302\377\024\006\345\261\236\346\200\247\210\301\024\005\"U\n\023Sheet_Xiu"
    "zhenStages\022>\n\024E_XiuzhenStages_List\030\001 \003(\013"
    "2\031.proto_ff.E_XiuzhenStagesB\005\210\301\024\200\020\"\250\005\n\021E"
    "_XiuzhenGb_areas\022\024\n\004m_id\030\001 \001(\005B\006\302\377\024\002id\022$"
    "\n\006m_name\030\002 \001(\tB\024\302\377\024\014\345\244\247\351\231\206\345\220\215\347\247\260\220\301\024@\022$\n\t"
    "m_subarea\030\003 \001(\tB\021\302\377\024\t\345\214\272\345\237\237\345\220\215\220\301\024@\022/\n\tm_"
    "body_lv\030\004 \001(\005B\034\302\377\024\030\345\244\247\351\231\206\345\274\200\345\220\257\350\202\211\350\272\253\347\255\211"
    "\347\272\247\022/\n\014m_enter_item\030\005 \001(\005B\031\302\377\024\025\350\277\233\344\273\231\345\237\237"
    "\346\266\210\350\200\227\351\201\223\345\205\267\022*\n\020m_enter_item_num\030\006 \001(\005B\020"
    "\302\377\024\014\351\201\223\345\205\267\346\225\260\351\207\217\022,\n\014m_enter_rate\030\007 \001(\005B\026"
    "\302\377\024\022\350\277\233\346\210\220\345\212\237\347\232\204\346\246\202\347\216\207\022;\n\017m_energy_addmi"
    "n\030\010 \001(\005B\"\302\377\024\036\346\257\217\351\227\264\351\232\224\346\217\220\345\215\207\344\277\256\344\270\272\346\234\200\345\260\221"
    "\345\200\274\0228\n\017m_energy_addmax\030\t \001(\005B\037\302\377\024\033\346\257\217\351\227\264"
    "\351\232\224\346\217\220\345\215\207\344\277\256\344\270\272\346\234\200\345\244\232\0225\n\014m_energy_min\030\n "
    "\001(\005B\037\302\377\024\033\345\244\247\351\231\206\350\216\267\345\276\227\347\232\204\346\234\200\345\260\217\344\277\256\344\270\272\022&\n\014"
    "m_energy_max\030\013 \001(\005B\020\302\377\024\014\346\234\200\345\244\247\344\277\256\344\270\272\022%\n\013"
    "m_eventrate\030\014 \001(\005B\020\302\377\024\014\344\272\213\344\273\266\346\246\202\347\216\207\022:\n\024m"
    "_eventrateenergyadd\030\r \001(\005B\034\302\377\024\030\344\272\213\344\273\266\344\277\256"
    "\344\270\272\347\210\206\345\242\236\346\246\202\347\216\207\022<\n\023m_eventgetitemsrate\030\016"
    " \001(\005B\037\302\377\024\033\344\272\213\344\273\266\350\216\267\345\276\227\351\201\223\345\205\267\347\232\204\346\246\202\347\216\207\"Z\n"
    "\025Sheet_XiuzhenGb_areas\022A\n\026E_XiuzhenGb_ar"
    "eas_List\030\001 \003(\0132\033.proto_ff.E_XiuzhenGb_ar"
    "easB\004\210\301\024@\"O\n\037E_XiuzhenGb_area_eventsItem"
    "Desc\022\026\n\005m_num\030\001 \001(\005B\007\302\377\024\003Num\022\024\n\004m_id\030\002 \001"
    "(\003B\006\302\377\024\002ID\"\353\003\n\027E_XiuzhenGb_area_events\022\030"
    "\n\004m_id\030\001 \001(\003B\n\302\377\024\006\345\272\217\345\217\267\022\"\n\010m_areaid\030\002 \001"
    "(\003B\020\302\377\024\014\346\211\200\345\234\250\345\214\272\345\237\237\022 \n\006m_rate\030\003 \001(\005B\020\302\377"
    "\024\014\351\232\217\346\234\272\346\246\202\347\216\207\022\032\n\006m_type\030\004 \001(\005B\n\302\377\024\006\347\261\273\345"
    "\236\213\022)\n\tm_bodylvl\030\005 \001(\005B\026\302\377\024\022\351\234\200\350\246\201\350\202\211\350\272\253\347"
    "\255\211\347\272\247\022)\n\013m_chattitle\030\006 \001(\tB\024\302\377\024\014\346\226\207\345\255\227\346\240"
    "\207\351\242\230\220\301\024@\022%\n\007m_chats\030\007 \001(\tB\024\302\377\024\014\346\226\207\345\255\227\345\206\205"
    "\345\256\271\220\301\024@\022*\n\tm_chatbgf\030\010 \001(\tB\027\302\377\024\017\346\226\207\345\255\227\350\203"
    "\214\346\231\257\345\245\263\220\301\024@\022*\n\tm_chatbgm\030\t \001(\tB\027\302\377\024\017\346\226\207\345"
    "\255\227\350\203\214\346\231\257\347\224\267\220\301\024@\022.\n\013m_energyadd\030\n \001(\005B\031\302\377"
    "\024\025\344\277\256\344\270\272\347\210\206\345\242\236\347\231\276\345\210\206\346\257\224\022O\n\006m_item\030\013 \003(\0132"
    ").proto_ff.E_XiuzhenGb_area_eventsItemDe"
    "scB\024\302\377\024\014\350\216\267\345\276\227\351\201\223\345\205\267\210\301\024\002\"l\n\033Sheet_Xiuzhe"
    "nGb_area_events\022M\n\034E_XiuzhenGb_area_even"
    "ts_List\030\001 \003(\0132!.proto_ff.E_XiuzhenGb_are"
    "a_eventsB\004\210\301\024 \"L\n\031E_XiuzhenGb_lvlupItemD"
    "esc\022\031\n\005m_num\030\001 \001(\005B\n\302\377\024\006\346\225\260\351\207\217\022\024\n\004m_id\030\002"
    " \001(\005B\006\302\377\024\002ID\"P\n\036E_XiuzhenGb_lvlupAttribu"
    "teDesc\022\030\n\007m_value\030\001 \001(\005B\007\302\377\024\003\345\200\274\022\024\n\004m_id"
    "\030\002 \001(\005B\006\302\377\024\002ID\"\357\001\n\021E_XiuzhenGb_lvlup\022\030\n\004"
    "m_id\030\001 \001(\005B\n\302\377\024\006\347\255\211\347\272\247\022,\n\014m_needenergy\030\002"
    " \001(\005B\026\302\377\024\022\345\215\207\347\272\247\351\234\200\350\246\201\344\277\256\344\270\272\022C\n\006m_item\030\003"
    " \003(\0132#.proto_ff.E_XiuzhenGb_lvlupItemDes"
    "cB\016\302\377\024\006\346\235\220\346\226\231\210\301\024\001\022M\n\013m_attribute\030\004 \003(\0132("
    ".proto_ff.E_XiuzhenGb_lvlupAttributeDesc"
    "B\016\302\377\024\006\345\261\236\346\200\247\210\301\024\006\"[\n\025Sheet_XiuzhenGb_lvlu"
    "p\022B\n\026E_XiuzhenGb_lvlup_List\030\001 \003(\0132\033.prot"
    "o_ff.E_XiuzhenGb_lvlupB\005\210\301\024\200\020\"J\n\027E_Xiuzh"
    "enEvolveItemDesc\022\031\n\005m_num\030\001 \001(\003B\n\302\377\024\006\346\225\260"
    "\351\207\217\022\024\n\004m_id\030\002 \001(\005B\006\302\377\024\002ID\"N\n\034E_XiuzhenEv"
    "olveAttributeDesc\022\030\n\007m_value\030\001 \001(\003B\007\302\377\024\003"
    "\345\200\274\022\024\n\004m_id\030\002 \001(\005B\006\302\377\024\002ID\"\301\003\n\017E_XiuzhenE"
    "volve\022\030\n\004m_id\030\001 \001(\005B\n\302\377\024\006\347\255\211\347\272\247\022(\n\010m_nee"
    "dxw\030\002 \001(\003B\026\302\377\024\022\345\215\207\347\272\247\346\266\210\350\200\227\344\277\256\344\270\272\022%\n\016m_s"
    "uccess_rate\030\003 \001(\005B\r\302\377\024\t\346\210\220\345\212\237\347\216\207\022-\n\nm_bl"
    "essing\030\004 \001(\005B\031\302\377\024\025\345\244\261\350\264\245\345\242\236\345\212\240\347\245\235\347\246\217\345\200\274\022"
    "*\n\020m_specialattriid\030\005 \001(\005B\020\302\377\024\014\347\211\271\346\256\212\345\261\236"
    "\346\200\247\0220\n\023m_specialattrivalue\030\006 \001(\003B\023\302\377\024\017\347\211"
    "\271\346\256\212\345\261\236\346\200\247\345\200\274\022&\n\tm_linggen\030\007 \001(\005B\023\302\377\024\017\345\205"
    "\250\347\201\265\346\240\271\345\212\240\346\210\220\022A\n\006m_item\030\010 \003(\0132!.proto_ff"
    ".E_XiuzhenEvolveItemDescB\016\302\377\024\006\346\235\220\346\226\231\210\301\024\003"
    "\022K\n\013m_attribute\030\t \003(\0132&.proto_ff.E_Xiuzh"
    "enEvolveAttributeDescB\016\302\377\024\006\345\261\236\346\200\247\210\301\024\014\"U\n"
    "\023Sheet_XiuzhenEvolve\022>\n\024E_XiuzhenEvolve_"
    "List\030\001 \003(\0132\031.proto_ff.E_XiuzhenEvolveB\005\210"
    "\301\024\200\004\"{\n\031E_XiuzhenLgtypesAttriDesc\022\026\n\005m_e"
    "pa\030\001 \001(\005B\007\302\377\024\003epa\022\024\n\004m_np\030\002 \001(\005B\006\302\377\024\002np\022"
    "\032\n\007m_value\030\003 \001(\005B\t\302\377\024\005value\022\024\n\004m_id\030\004 \001("
    "\005B\006\302\377\024\002id\"l\n\031E_XiuzhenLgtypesLgattDesc\022\030"
    "\n\007m_value\030\001 \001(\005B\007\302\377\024\003\345\200\274\022\031\n\005m_lim\030\002 \001(\005B"
    "\n\302\377\024\006\351\230\210\345\200\274\022\032\n\006m_type\030\003 \001(\005B\n\302\377\024\006\347\261\273\345\236\213\""
    "\242\004\n\020E_XiuzhenLgtypes\022\036\n\004m_id\030\001 \001(\005B\020\302\377\024\014"
    "\347\201\265\346\240\271\347\261\273\345\236\213\022\036\n\006m_name\030\002 \001(\tB\016\302\377\024\006\345\220\215\347\247\260"
    "\220\301\024@\022#\n\013m_shortname\030\003 \001(\tB\016\302\377\024\006\345\220\215\347\247\260\220\301\024"
    "@\0229\n\013m_namecolor\030\004 \001(\tB$\302\377\024\034tips\344\277\241\346\201\257\344\270"
    "\255\345\220\215\347\247\260\347\232\204\351\242\234\350\211\262\220\301\024@\022&\n\013m_bookmodel\030\005 \001("
    "\tB\021\302\377\024\t\351\224\201\346\250\241\345\236\213\220\301\024@\022)\n\013m_bodymodel\030\006 \001("
    "\tB\024\302\377\024\014\347\201\265\346\240\271\346\250\241\345\236\213\220\301\024@\022/\n\014m_unlockbook\030"
    "\007 \001(\005B\031\302\377\024\025\350\247\243\351\224\201\351\234\200\350\246\201\347\232\204\345\277\203\346\263\225\022%\n\013m_bo"
    "okcount\030\010 \001(\005B\020\302\377\024\014\345\277\203\346\263\225\346\225\260\351\207\217\0221\n\013m_add"
    "points\030\t \001(\005B\034\302\377\024\030\346\257\217\345\215\207\344\270\200\347\272\247\345\212\240\345\244\232\345\260\221\347"
    "\202\271\022D\n\007m_attri\030\n \003(\0132#.proto_ff.E_Xiuzhen"
    "LgtypesAttriDescB\016\302\377\024\006\345\261\236\346\200\247\210\301\024\003\022J\n\007m_lg"
    "att\030\013 \003(\0132#.proto_ff.E_XiuzhenLgtypesLga"
    "ttDescB\024\302\377\024\014\347\201\265\346\240\271\345\261\236\346\200\247\210\301\024\007\"W\n\024Sheet_Xi"
    "uzhenLgtypes\022\?\n\025E_XiuzhenLgtypes_List\030\001 "
    "\003(\0132\032.proto_ff.E_XiuzhenLgtypesB\004\210\301\024\010\"P\n"
    "\020E_XiuzhenLglvlup\022\030\n\004m_id\030\001 \001(\005B\n\302\377\024\006\347\255\211"
    "\347\272\247\022\"\n\010m_needxw\030\002 \001(\003B\020\302\377\024\014\346\266\210\350\200\227\344\277\256\344\270\272\""
    "X\n\024Sheet_XiuzhenLglvlup\022@\n\025E_XiuzhenLglv"
    "lup_List\030\001 \003(\0132\032.proto_ff.E_XiuzhenLglvl"
    "upB\005\210\301\024\200\010\"P\n\030E_XiuzhenLgpotionsLgDesc\022\030\n"
    "\007m_value\030\001 \001(\003B\007\302\377\024\003\345\200\274\022\032\n\006m_type\030\002 \001(\005B"
    "\n\302\377\024\006\347\261\273\345\236\213\"r\n\022E_XiuzhenLgpotions\022\032\n\004m_i"
    "d\030\001 \001(\003B\014\302\377\024\010\347\211\251\345\223\201id\022@\n\004m_lg\030\002 \003(\0132\".pr"
    "oto_ff.E_XiuzhenLgpotionsLgDescB\016\302\377\024\006\345\212\240"
    "\347\202\271\210\301\024\005\"]\n\026Sheet_XiuzhenLgpotions\022C\n\027E_X"
    "iuzhenLgpotions_List\030\001 \003(\0132\034.proto_ff.E_"
    "XiuzhenLgpotionsB\004\210\301\024 \"\264\002\n\020E_XiuzhenGfty"
    "pes\022\024\n\004m_id\030\001 \001(\005B\006\302\377\024\002id\022 \n\006m_type\030\002 \001("
    "\005B\020\302\377\024\014\345\212\237\346\263\225\347\261\273\345\236\213\022$\n\006m_name\030\003 \001(\tB\024\302\377\024"
    "\014\345\212\237\346\263\225\345\220\215\347\247\260\220\301\024@\022$\n\006m_icon\030\004 \001(\tB\024\302\377\024\014\345"
    "\212\237\346\263\225\345\233\276\346\240\207\220\301\024@\0220\n\020m_activationitem\030\005 \001("
    "\005B\026\302\377\024\022\346\277\200\346\264\273\346\266\210\350\200\227\351\201\223\345\205\267\022#\n\tm_itemnum\030\006"
    " \001(\005B\020\302\377\024\014\351\201\223\345\205\267\346\225\260\351\207\217\022!\n\007m_buylv\030\007 \001(\005B"
    "\020\302\377\024\014\350\264\255\344\271\260\347\255\211\347\272\247\022\"\n\014m_rechargeid\030\010 \001(\005B"
    "\014\302\377\024\010\345\205\205\345\200\274id\"W\n\024Sheet_XiuzhenGftypes\022\?\n"
    "\025E_XiuzhenGftypes_List\030\001 \003(\0132\032.proto_ff."
    "E_XiuzhenGftypesB\004\210\301\024 \"O\n\035E_XiuzhenGflvl"
    "upAttributeDesc\022\030\n\007m_value\030\001 \001(\005B\007\302\377\024\003\345\200"
    "\274\022\024\n\004m_id\030\002 \001(\005B\006\302\377\024\002ID\"\341\004\n\020E_XiuzhenGfl"
    "vlup\022\024\n\004m_id\030\001 \001(\005B\006\302\377\024\002id\022 \n\006m_type\030\002 \001"
    "(\005B\020\302\377\024\014\345\212\237\346\263\225\347\261\273\345\236\213\022*\n\rm_first_level\030\003 "
    "\001(\005B\023\302\377\024\017\345\260\217\345\221\250\345\244\251\347\255\211\347\272\247\022+\n\016m_middle_lev"
    "el\030\004 \001(\005B\023\302\377\024\017\345\244\247\345\221\250\345\244\251\347\255\211\347\272\247\022#\n\014m_high_"
    "level\030\005 \001(\005B\r\302\377\024\t\345\207\240\351\207\215\345\244\251\022/\n\017m_roushen_"
    "level\030\006 \001(\005B\026\302\377\024\022\346\211\200\351\234\200\350\202\211\350\272\253\347\255\211\347\272\247\022\036\n\010m"
    "_itemid\030\007 \001(\005B\014\302\377\024\010\346\235\220\346\226\231ID\022\035\n\tm_itemnum"
    "\030\010 \001(\005B\n\302\377\024\006\346\225\260\351\207\217\022\036\n\004m_xw\030\t \001(\005B\020\302\377\024\014\351\234"
    "\200\350\246\201\344\277\256\344\270\272\022&\n\014m_awakeskill\030\n \001(\005B\020\302\377\024\014\350\247"
    "\211\351\206\222\346\212\200\350\203\275\022/\n\017m_awakeskilllvl\030\013 \001(\005B\026\302\377\024"
    "\022\350\247\211\351\206\222\346\212\200\350\203\275\347\255\211\347\272\247\022,\n\020m_specialattriid\030"
    "\014 \001(\005B\022\302\377\024\016specialAttriId\0222\n\023m_specialat"
    "trivalue\030\r \001(\005B\025\302\377\024\021specialAttriValue\022L\n"
    "\013m_attribute\030\016 \003(\0132\'.proto_ff.E_XiuzhenG"
    "flvlupAttributeDescB\016\302\377\024\006\345\261\236\346\200\247\210\301\024\007\"Y\n\024S"
    "heet_XiuzhenGflvlup\022A\n\025E_XiuzhenGflvlup_"
    "List\030\001 \003(\0132\032.proto_ff.E_XiuzhenGflvlupB\006"
    "\210\301\024\200\200\001\"Q\n\037E_XiuzhenGfstageupAttributeDes"
    "c\022\030\n\007m_value\030\001 \001(\005B\007\302\377\024\003\345\200\274\022\024\n\004m_id\030\002 \001("
    "\005B\006\302\377\024\002ID\"\343\003\n\022E_XiuzhenGfstageup\022\024\n\004m_id"
    "\030\001 \001(\005B\006\302\377\024\002id\022 \n\006m_type\030\002 \001(\005B\020\302\377\024\014\345\212\237\346"
    "\263\225\347\261\273\345\236\213\022 \n\014m_high_level\030\003 \001(\005B\n\302\377\024\006\351\230\266\347"
    "\272\247\022.\n\020m_highlevel_icon\030\004 \001(\tB\024\302\377\024\014\351\230\266\347\272\247"
    "\345\233\276\346\240\207\220\301\024@\022\036\n\010m_itemid\030\005 \001(\005B\014\302\377\024\010\346\235\220\346\226\231"
    "ID\022\035\n\tm_itemnum\030\006 \001(\005B\n\302\377\024\006\346\225\260\351\207\217\022\'\n\rm_a"
    "wakeskill1\030\007 \001(\005B\020\302\377\024\014\350\247\211\351\206\222\346\212\200\350\203\275\0220\n\020m_"
    "awakeskilllvl1\030\010 \001(\005B\026\302\377\024\022\350\247\211\351\206\222\346\212\200\350\203\275\347\255"
    "\211\347\272\247\022\'\n\rm_awakeskill2\030\t \001(\005B\020\302\377\024\014\350\247\211\351\206\222\346"
    "\212\200\350\203\275\0220\n\020m_awakeskilllvl2\030\n \001(\005B\026\302\377\024\022\350\247\211"
    "\351\206\222\346\212\200\350\203\275\347\255\211\347\272\247\022N\n\013m_attribute\030\013 \003(\0132).p"
    "roto_ff.E_XiuzhenGfstageupAttributeDescB"
    "\016\302\377\024\006\345\261\236\346\200\247\210\301\024\010\"]\n\026Sheet_XiuzhenGfstageu"
    "p\022C\n\027E_XiuzhenGfstageup_List\030\001 \003(\0132\034.pro"
    "to_ff.E_XiuzhenGfstageupB\004\210\301\024@\"P\n\020E_Xiuz"
    "henJmtypes\022\030\n\004m_id\030\001 \001(\005B\n\302\377\024\006\347\261\273\345\236\213\022\"\n\010"
    "m_gongfa\030\002 \001(\005B\020\302\377\024\014\345\257\271\345\272\224\345\212\237\346\263\225\"W\n\024Shee"
    "t_XiuzhenJmtypes\022\?\n\025E_XiuzhenJmtypes_Lis"
    "t\030\001 \003(\0132\032.proto_ff.E_XiuzhenJmtypesB\004\210\301\024"
    "\020\"K\n\030E_XiuzhenJmlvlupItemDesc\022\031\n\005m_num\030\001"
    " \001(\005B\n\302\377\024\006\346\225\260\351\207\217\022\024\n\004m_id\030\002 \001(\005B\006\302\377\024\002ID\"O"
    "\n\035E_XiuzhenJmlvlupAttributeDesc\022\030\n\007m_val"
    "ue\030\001 \001(\005B\007\302\377\024\003\345\200\274\022\024\n\004m_id\030\002 \001(\005B\006\302\377\024\002ID\""
    "\245\003\n\020E_XiuzhenJmlvlup\022\024\n\004m_id\030\001 \001(\005B\006\302\377\024\002"
    "id\022 \n\006m_type\030\002 \001(\005B\020\302\377\024\014\347\273\217\350\204\211\347\261\273\345\236\213\022\031\n\005"
    "m_lvl\030\003 \001(\005B\n\302\377\024\006\347\255\211\347\272\247\022\"\n\010m_needxw\030\004 \001("
    "\003B\020\302\377\024\014\346\266\210\350\200\227\344\277\256\344\270\272\022%\n\016m_success_rate\030\005 "
    "\001(\005B\r\302\377\024\t\346\210\220\345\212\237\347\216\207\022,\n\020m_specialattriid\030\006"
    " \001(\005B\022\302\377\024\016\347\211\271\346\256\212\345\261\236\346\200\247id\0223\n\023m_specialatt"
    "rivalue\030\007 \001(\005B\026\302\377\024\022\347\211\271\346\256\212\345\261\236\346\200\247\345\217\230\351\207\217\022B\n"
    "\006m_item\030\010 \003(\0132\".proto_ff.E_XiuzhenJmlvlu"
    "pItemDescB\016\302\377\024\006\346\235\220\346\226\231\210\301\024\002\022L\n\013m_attribute"
    "\030\t \003(\0132\'.proto_ff.E_XiuzhenJmlvlupAttrib"
    "uteDescB\016\302\377\024\006\345\261\236\346\200\247\210\301\024\007\"X\n\024Sheet_Xiuzhen"
    "Jmlvlup\022@\n\025E_XiuzhenJmlvlup_List\030\001 \003(\0132\032"
    ".proto_ff.E_XiuzhenJmlvlupB\005\210\301\024\200@\"M\n\032E_X"
    "iuzhenJmstageupItemDesc\022\031\n\005m_num\030\001 \001(\005B\n"
    "\302\377\024\006\346\225\260\351\207\217\022\024\n\004m_id\030\002 \001(\005B\006\302\377\024\002ID\"Q\n\037E_Xi"
    "uzhenJmstageupAttributeDesc\022\030\n\007m_value\030\001"
    " \001(\005B\007\302\377\024\003\345\200\274\022\024\n\004m_id\030\002 \001(\005B\006\302\377\024\002ID\"\202\004\n\022"
    "E_XiuzhenJmstageup\022\024\n\004m_id\030\001 \001(\005B\006\302\377\024\002id"
    "\022 \n\006m_type\030\002 \001(\005B\020\302\377\024\014\347\273\217\350\204\211\347\261\273\345\236\213\022\033\n\007m_"
    "stage\030\003 \001(\005B\n\302\377\024\006\345\223\201\351\230\266\022\036\n\006m_name\030\004 \001(\tB"
    "\016\302\377\024\006\345\220\215\347\247\260\220\301\024@\0220\n\016m_needgfunlock\030\005 \001(\005B"
    "\030\302\377\024\024\351\234\200\350\246\201\350\247\243\351\224\201\345\212\237\346\263\225ID\022%\n\016m_success_r"
    "ate\030\006 \001(\005B\r\302\377\024\t\346\210\220\345\212\237\347\216\207\022-\n\nm_blessing\030\007"
    " \001(\005B\031\302\377\024\025\345\244\261\350\264\245\345\242\236\345\212\240\347\245\235\347\246\217\345\200\274\022(\n\016m_awa"
    "keskillid\030\010 \001(\005B\020\302\377\024\014\350\247\211\351\206\222\346\212\200\350\203\275\022/\n\017m_a"
    "wakeskilllvl\030\t \001(\005B\026\302\377\024\022\350\247\211\351\206\222\346\212\200\350\203\275\347\255\211\347"
    "\272\247\022D\n\006m_item\030\n \003(\0132$.proto_ff.E_XiuzhenJ"
    "mstageupItemDescB\016\302\377\024\006\346\235\220\346\226\231\210\301\024\002\022N\n\013m_at"
    "tribute\030\013 \003(\0132).proto_ff.E_XiuzhenJmstag"
    "eupAttributeDescB\016\302\377\024\006\345\261\236\346\200\247\210\301\024\007\"^\n\026Shee"
    "t_XiuzhenJmstageup\022D\n\027E_XiuzhenJmstageup"
    "_List\030\001 \003(\0132\034.proto_ff.E_XiuzhenJmstageu"
    "pB\005\210\301\024\200\002\"S\n\030E_XiuzhenJmmergeupCsDesc\022\033\n\007"
    "m_stage\030\001 \001(\005B\n\302\377\024\006\345\223\201\351\230\266\022\032\n\006m_type\030\002 \001("
    "\005B\n\302\377\024\006\347\261\273\345\236\213\"Q\n\037E_XiuzhenJmmergeupAttri"
    "buteDesc\022\030\n\007m_value\030\001 \001(\005B\007\302\377\024\003\345\200\274\022\024\n\004m_"
    "id\030\002 \001(\005B\006\302\377\024\002ID\"\300\002\n\022E_XiuzhenJmmergeup\022"
    "\036\n\004m_id\030\001 \001(\005B\020\302\377\024\014\345\220\210\344\277\261\345\223\201\347\272\247\022#\n\tm_gf_"
    "type\030\002 \001(\005B\020\302\377\024\014\345\212\237\346\263\225\347\261\273\345\236\213\022(\n\016m_awakes"
    "killid\030\003 \001(\005B\020\302\377\024\014\350\247\211\351\206\222\346\212\200\350\203\275\022#\n\017m_awak"
    "eskilllvl\030\004 \001(\005B\n\302\377\024\006asdfas\022F\n\004m_cs\030\005 \003("
    "\0132\".proto_ff.E_XiuzhenJmmergeupCsDescB\024\302"
    "\377\024\014\351\234\200\350\246\201\345\223\201\351\230\266\210\301\024\002\022N\n\013m_attribute\030\006 \003(\013"
    "2).proto_ff.E_XiuzhenJmmergeupAttributeD"
    "escB\016\302\377\024\006\345\261\236\346\200\247\210\301\024\010\"]\n\026Sheet_XiuzhenJmme"
    "rgeup\022C\n\027E_XiuzhenJmmergeup_List\030\001 \003(\0132\034"
    ".proto_ff.E_XiuzhenJmmergeupB\004\210\301\024 \"l\n\033E_"
    "XiuzhenPrivilegePtaddDesc\022\027\n\003m_v\030\001 \001(\005B\n"
    "\302\377\024\006\345\217\230\351\207\217\022\033\n\003m_n\030\002 \001(\tB\016\302\377\024\006\345\220\215\347\247\260\220\301\024@\022"
    "\027\n\003m_t\030\003 \001(\005B\n\302\377\024\006\347\261\273\345\236\213\"L\n\033E_XiuzhenPri"
    "vilegeAttriDesc\022\024\n\003m_v\030\001 \001(\003B\007\302\377\024\003\345\200\274\022\027\n"
    "\003m_t\030\002 \001(\005B\n\302\377\024\006\347\261\273\345\236\213\"\264\002\n\022E_XiuzhenPriv"
    "ilege\022\030\n\004m_id\030\001 \001(\005B\n\302\377\024\006\347\261\273\345\236\213\022\033\n\007m_pri"
    "ce\030\002 \001(\005B\n\302\377\024\006\344\273\267\346\240\274\022(\n\016m_activeavatar\030\003"
    " \001(\005B\020\302\377\024\014\346\277\200\346\264\273\345\244\226\350\247\202\022\'\n\014m_avatarname\030\004"
    " \001(\tB\021\302\377\024\t\345\244\226\350\247\202\345\220\215\220\301\024@\022L\n\007m_ptadd\030\005 \003(\013"
    "2%.proto_ff.E_XiuzhenPrivilegePtaddDescB"
    "\024\302\377\024\014\344\277\256\347\234\237\346\233\276\347\233\212\210\301\024\003\022F\n\007m_attri\030\006 \003(\0132%"
    ".proto_ff.E_XiuzhenPrivilegeAttriDescB\016\302"
    "\377\024\006\345\261\236\346\200\247\210\301\024\005\"]\n\026Sheet_XiuzhenPrivilege\022"
    "C\n\027E_XiuzhenPrivilege_List\030\001 \003(\0132\034.proto"
    "_ff.E_XiuzhenPrivilegeB\004\210\301\024\010", 9348);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "E_Xiuzhen.proto", &protobuf_RegisterTypes);
  E_XiuzhenStagesItemDesc::default_instance_ = new E_XiuzhenStagesItemDesc();
  E_XiuzhenStagesSkillDesc::default_instance_ = new E_XiuzhenStagesSkillDesc();
  E_XiuzhenStagesAttributeDesc::default_instance_ = new E_XiuzhenStagesAttributeDesc();
  E_XiuzhenStages::default_instance_ = new E_XiuzhenStages();
  Sheet_XiuzhenStages::default_instance_ = new Sheet_XiuzhenStages();
  E_XiuzhenGb_areas::default_instance_ = new E_XiuzhenGb_areas();
  Sheet_XiuzhenGb_areas::default_instance_ = new Sheet_XiuzhenGb_areas();
  E_XiuzhenGb_area_eventsItemDesc::default_instance_ = new E_XiuzhenGb_area_eventsItemDesc();
  E_XiuzhenGb_area_events::default_instance_ = new E_XiuzhenGb_area_events();
  Sheet_XiuzhenGb_area_events::default_instance_ = new Sheet_XiuzhenGb_area_events();
  E_XiuzhenGb_lvlupItemDesc::default_instance_ = new E_XiuzhenGb_lvlupItemDesc();
  E_XiuzhenGb_lvlupAttributeDesc::default_instance_ = new E_XiuzhenGb_lvlupAttributeDesc();
  E_XiuzhenGb_lvlup::default_instance_ = new E_XiuzhenGb_lvlup();
  Sheet_XiuzhenGb_lvlup::default_instance_ = new Sheet_XiuzhenGb_lvlup();
  E_XiuzhenEvolveItemDesc::default_instance_ = new E_XiuzhenEvolveItemDesc();
  E_XiuzhenEvolveAttributeDesc::default_instance_ = new E_XiuzhenEvolveAttributeDesc();
  E_XiuzhenEvolve::default_instance_ = new E_XiuzhenEvolve();
  Sheet_XiuzhenEvolve::default_instance_ = new Sheet_XiuzhenEvolve();
  E_XiuzhenLgtypesAttriDesc::default_instance_ = new E_XiuzhenLgtypesAttriDesc();
  E_XiuzhenLgtypesLgattDesc::default_instance_ = new E_XiuzhenLgtypesLgattDesc();
  E_XiuzhenLgtypes::default_instance_ = new E_XiuzhenLgtypes();
  Sheet_XiuzhenLgtypes::default_instance_ = new Sheet_XiuzhenLgtypes();
  E_XiuzhenLglvlup::default_instance_ = new E_XiuzhenLglvlup();
  Sheet_XiuzhenLglvlup::default_instance_ = new Sheet_XiuzhenLglvlup();
  E_XiuzhenLgpotionsLgDesc::default_instance_ = new E_XiuzhenLgpotionsLgDesc();
  E_XiuzhenLgpotions::default_instance_ = new E_XiuzhenLgpotions();
  Sheet_XiuzhenLgpotions::default_instance_ = new Sheet_XiuzhenLgpotions();
  E_XiuzhenGftypes::default_instance_ = new E_XiuzhenGftypes();
  Sheet_XiuzhenGftypes::default_instance_ = new Sheet_XiuzhenGftypes();
  E_XiuzhenGflvlupAttributeDesc::default_instance_ = new E_XiuzhenGflvlupAttributeDesc();
  E_XiuzhenGflvlup::default_instance_ = new E_XiuzhenGflvlup();
  Sheet_XiuzhenGflvlup::default_instance_ = new Sheet_XiuzhenGflvlup();
  E_XiuzhenGfstageupAttributeDesc::default_instance_ = new E_XiuzhenGfstageupAttributeDesc();
  E_XiuzhenGfstageup::default_instance_ = new E_XiuzhenGfstageup();
  Sheet_XiuzhenGfstageup::default_instance_ = new Sheet_XiuzhenGfstageup();
  E_XiuzhenJmtypes::default_instance_ = new E_XiuzhenJmtypes();
  Sheet_XiuzhenJmtypes::default_instance_ = new Sheet_XiuzhenJmtypes();
  E_XiuzhenJmlvlupItemDesc::default_instance_ = new E_XiuzhenJmlvlupItemDesc();
  E_XiuzhenJmlvlupAttributeDesc::default_instance_ = new E_XiuzhenJmlvlupAttributeDesc();
  E_XiuzhenJmlvlup::default_instance_ = new E_XiuzhenJmlvlup();
  Sheet_XiuzhenJmlvlup::default_instance_ = new Sheet_XiuzhenJmlvlup();
  E_XiuzhenJmstageupItemDesc::default_instance_ = new E_XiuzhenJmstageupItemDesc();
  E_XiuzhenJmstageupAttributeDesc::default_instance_ = new E_XiuzhenJmstageupAttributeDesc();
  E_XiuzhenJmstageup::default_instance_ = new E_XiuzhenJmstageup();
  Sheet_XiuzhenJmstageup::default_instance_ = new Sheet_XiuzhenJmstageup();
  E_XiuzhenJmmergeupCsDesc::default_instance_ = new E_XiuzhenJmmergeupCsDesc();
  E_XiuzhenJmmergeupAttributeDesc::default_instance_ = new E_XiuzhenJmmergeupAttributeDesc();
  E_XiuzhenJmmergeup::default_instance_ = new E_XiuzhenJmmergeup();
  Sheet_XiuzhenJmmergeup::default_instance_ = new Sheet_XiuzhenJmmergeup();
  E_XiuzhenPrivilegePtaddDesc::default_instance_ = new E_XiuzhenPrivilegePtaddDesc();
  E_XiuzhenPrivilegeAttriDesc::default_instance_ = new E_XiuzhenPrivilegeAttriDesc();
  E_XiuzhenPrivilege::default_instance_ = new E_XiuzhenPrivilege();
  Sheet_XiuzhenPrivilege::default_instance_ = new Sheet_XiuzhenPrivilege();
  E_XiuzhenStagesItemDesc::default_instance_->InitAsDefaultInstance();
  E_XiuzhenStagesSkillDesc::default_instance_->InitAsDefaultInstance();
  E_XiuzhenStagesAttributeDesc::default_instance_->InitAsDefaultInstance();
  E_XiuzhenStages::default_instance_->InitAsDefaultInstance();
  Sheet_XiuzhenStages::default_instance_->InitAsDefaultInstance();
  E_XiuzhenGb_areas::default_instance_->InitAsDefaultInstance();
  Sheet_XiuzhenGb_areas::default_instance_->InitAsDefaultInstance();
  E_XiuzhenGb_area_eventsItemDesc::default_instance_->InitAsDefaultInstance();
  E_XiuzhenGb_area_events::default_instance_->InitAsDefaultInstance();
  Sheet_XiuzhenGb_area_events::default_instance_->InitAsDefaultInstance();
  E_XiuzhenGb_lvlupItemDesc::default_instance_->InitAsDefaultInstance();
  E_XiuzhenGb_lvlupAttributeDesc::default_instance_->InitAsDefaultInstance();
  E_XiuzhenGb_lvlup::default_instance_->InitAsDefaultInstance();
  Sheet_XiuzhenGb_lvlup::default_instance_->InitAsDefaultInstance();
  E_XiuzhenEvolveItemDesc::default_instance_->InitAsDefaultInstance();
  E_XiuzhenEvolveAttributeDesc::default_instance_->InitAsDefaultInstance();
  E_XiuzhenEvolve::default_instance_->InitAsDefaultInstance();
  Sheet_XiuzhenEvolve::default_instance_->InitAsDefaultInstance();
  E_XiuzhenLgtypesAttriDesc::default_instance_->InitAsDefaultInstance();
  E_XiuzhenLgtypesLgattDesc::default_instance_->InitAsDefaultInstance();
  E_XiuzhenLgtypes::default_instance_->InitAsDefaultInstance();
  Sheet_XiuzhenLgtypes::default_instance_->InitAsDefaultInstance();
  E_XiuzhenLglvlup::default_instance_->InitAsDefaultInstance();
  Sheet_XiuzhenLglvlup::default_instance_->InitAsDefaultInstance();
  E_XiuzhenLgpotionsLgDesc::default_instance_->InitAsDefaultInstance();
  E_XiuzhenLgpotions::default_instance_->InitAsDefaultInstance();
  Sheet_XiuzhenLgpotions::default_instance_->InitAsDefaultInstance();
  E_XiuzhenGftypes::default_instance_->InitAsDefaultInstance();
  Sheet_XiuzhenGftypes::default_instance_->InitAsDefaultInstance();
  E_XiuzhenGflvlupAttributeDesc::default_instance_->InitAsDefaultInstance();
  E_XiuzhenGflvlup::default_instance_->InitAsDefaultInstance();
  Sheet_XiuzhenGflvlup::default_instance_->InitAsDefaultInstance();
  E_XiuzhenGfstageupAttributeDesc::default_instance_->InitAsDefaultInstance();
  E_XiuzhenGfstageup::default_instance_->InitAsDefaultInstance();
  Sheet_XiuzhenGfstageup::default_instance_->InitAsDefaultInstance();
  E_XiuzhenJmtypes::default_instance_->InitAsDefaultInstance();
  Sheet_XiuzhenJmtypes::default_instance_->InitAsDefaultInstance();
  E_XiuzhenJmlvlupItemDesc::default_instance_->InitAsDefaultInstance();
  E_XiuzhenJmlvlupAttributeDesc::default_instance_->InitAsDefaultInstance();
  E_XiuzhenJmlvlup::default_instance_->InitAsDefaultInstance();
  Sheet_XiuzhenJmlvlup::default_instance_->InitAsDefaultInstance();
  E_XiuzhenJmstageupItemDesc::default_instance_->InitAsDefaultInstance();
  E_XiuzhenJmstageupAttributeDesc::default_instance_->InitAsDefaultInstance();
  E_XiuzhenJmstageup::default_instance_->InitAsDefaultInstance();
  Sheet_XiuzhenJmstageup::default_instance_->InitAsDefaultInstance();
  E_XiuzhenJmmergeupCsDesc::default_instance_->InitAsDefaultInstance();
  E_XiuzhenJmmergeupAttributeDesc::default_instance_->InitAsDefaultInstance();
  E_XiuzhenJmmergeup::default_instance_->InitAsDefaultInstance();
  Sheet_XiuzhenJmmergeup::default_instance_->InitAsDefaultInstance();
  E_XiuzhenPrivilegePtaddDesc::default_instance_->InitAsDefaultInstance();
  E_XiuzhenPrivilegeAttriDesc::default_instance_->InitAsDefaultInstance();
  E_XiuzhenPrivilege::default_instance_->InitAsDefaultInstance();
  Sheet_XiuzhenPrivilege::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_E_5fXiuzhen_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_E_5fXiuzhen_2eproto {
  StaticDescriptorInitializer_E_5fXiuzhen_2eproto() {
    protobuf_AddDesc_E_5fXiuzhen_2eproto();
  }
} static_descriptor_initializer_E_5fXiuzhen_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int E_XiuzhenStagesItemDesc::kMNumFieldNumber;
const int E_XiuzhenStagesItemDesc::kMIdFieldNumber;
#endif  // !_MSC_VER

E_XiuzhenStagesItemDesc::E_XiuzhenStagesItemDesc()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_XiuzhenStagesItemDesc::InitAsDefaultInstance() {
}

E_XiuzhenStagesItemDesc::E_XiuzhenStagesItemDesc(const E_XiuzhenStagesItemDesc& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_XiuzhenStagesItemDesc::SharedCtor() {
  _cached_size_ = 0;
  m_num_ = GOOGLE_LONGLONG(0);
  m_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_XiuzhenStagesItemDesc::~E_XiuzhenStagesItemDesc() {
  SharedDtor();
}

void E_XiuzhenStagesItemDesc::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_XiuzhenStagesItemDesc::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_XiuzhenStagesItemDesc::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_XiuzhenStagesItemDesc_descriptor_;
}

const E_XiuzhenStagesItemDesc& E_XiuzhenStagesItemDesc::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fXiuzhen_2eproto();
  return *default_instance_;
}

E_XiuzhenStagesItemDesc* E_XiuzhenStagesItemDesc::default_instance_ = NULL;

E_XiuzhenStagesItemDesc* E_XiuzhenStagesItemDesc::New() const {
  return new E_XiuzhenStagesItemDesc;
}

void E_XiuzhenStagesItemDesc::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_num_ = GOOGLE_LONGLONG(0);
    m_id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_XiuzhenStagesItemDesc::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 m_num = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &m_num_)));
          set_has_m_num();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_id;
        break;
      }

      // optional int32 m_id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_id_)));
          set_has_m_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_XiuzhenStagesItemDesc::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 m_num = 1;
  if (has_m_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->m_num(), output);
  }

  // optional int32 m_id = 2;
  if (has_m_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_XiuzhenStagesItemDesc::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 m_num = 1;
  if (has_m_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->m_num(), target);
  }

  // optional int32 m_id = 2;
  if (has_m_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_XiuzhenStagesItemDesc::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 m_num = 1;
    if (has_m_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->m_num());
    }

    // optional int32 m_id = 2;
    if (has_m_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_id());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_XiuzhenStagesItemDesc::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_XiuzhenStagesItemDesc* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_XiuzhenStagesItemDesc*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_XiuzhenStagesItemDesc::MergeFrom(const E_XiuzhenStagesItemDesc& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_num()) {
      set_m_num(from.m_num());
    }
    if (from.has_m_id()) {
      set_m_id(from.m_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_XiuzhenStagesItemDesc::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_XiuzhenStagesItemDesc::CopyFrom(const E_XiuzhenStagesItemDesc& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_XiuzhenStagesItemDesc::IsInitialized() const {

  return true;
}

void E_XiuzhenStagesItemDesc::Swap(E_XiuzhenStagesItemDesc* other) {
  if (other != this) {
    std::swap(m_num_, other->m_num_);
    std::swap(m_id_, other->m_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_XiuzhenStagesItemDesc::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_XiuzhenStagesItemDesc_descriptor_;
  metadata.reflection = E_XiuzhenStagesItemDesc_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_XiuzhenStagesSkillDesc::kMLvFieldNumber;
const int E_XiuzhenStagesSkillDesc::kMIdFieldNumber;
#endif  // !_MSC_VER

E_XiuzhenStagesSkillDesc::E_XiuzhenStagesSkillDesc()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_XiuzhenStagesSkillDesc::InitAsDefaultInstance() {
}

E_XiuzhenStagesSkillDesc::E_XiuzhenStagesSkillDesc(const E_XiuzhenStagesSkillDesc& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_XiuzhenStagesSkillDesc::SharedCtor() {
  _cached_size_ = 0;
  m_lv_ = 0;
  m_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_XiuzhenStagesSkillDesc::~E_XiuzhenStagesSkillDesc() {
  SharedDtor();
}

void E_XiuzhenStagesSkillDesc::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_XiuzhenStagesSkillDesc::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_XiuzhenStagesSkillDesc::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_XiuzhenStagesSkillDesc_descriptor_;
}

const E_XiuzhenStagesSkillDesc& E_XiuzhenStagesSkillDesc::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fXiuzhen_2eproto();
  return *default_instance_;
}

E_XiuzhenStagesSkillDesc* E_XiuzhenStagesSkillDesc::default_instance_ = NULL;

E_XiuzhenStagesSkillDesc* E_XiuzhenStagesSkillDesc::New() const {
  return new E_XiuzhenStagesSkillDesc;
}

void E_XiuzhenStagesSkillDesc::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_lv_ = 0;
    m_id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_XiuzhenStagesSkillDesc::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_lv = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_lv_)));
          set_has_m_lv();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_id;
        break;
      }

      // optional int32 m_id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_id_)));
          set_has_m_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_XiuzhenStagesSkillDesc::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_lv = 1;
  if (has_m_lv()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_lv(), output);
  }

  // optional int32 m_id = 2;
  if (has_m_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_XiuzhenStagesSkillDesc::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_lv = 1;
  if (has_m_lv()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_lv(), target);
  }

  // optional int32 m_id = 2;
  if (has_m_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_XiuzhenStagesSkillDesc::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_lv = 1;
    if (has_m_lv()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_lv());
    }

    // optional int32 m_id = 2;
    if (has_m_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_id());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_XiuzhenStagesSkillDesc::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_XiuzhenStagesSkillDesc* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_XiuzhenStagesSkillDesc*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_XiuzhenStagesSkillDesc::MergeFrom(const E_XiuzhenStagesSkillDesc& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_lv()) {
      set_m_lv(from.m_lv());
    }
    if (from.has_m_id()) {
      set_m_id(from.m_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_XiuzhenStagesSkillDesc::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_XiuzhenStagesSkillDesc::CopyFrom(const E_XiuzhenStagesSkillDesc& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_XiuzhenStagesSkillDesc::IsInitialized() const {

  return true;
}

void E_XiuzhenStagesSkillDesc::Swap(E_XiuzhenStagesSkillDesc* other) {
  if (other != this) {
    std::swap(m_lv_, other->m_lv_);
    std::swap(m_id_, other->m_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_XiuzhenStagesSkillDesc::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_XiuzhenStagesSkillDesc_descriptor_;
  metadata.reflection = E_XiuzhenStagesSkillDesc_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_XiuzhenStagesAttributeDesc::kMValueFieldNumber;
const int E_XiuzhenStagesAttributeDesc::kMIdFieldNumber;
#endif  // !_MSC_VER

E_XiuzhenStagesAttributeDesc::E_XiuzhenStagesAttributeDesc()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_XiuzhenStagesAttributeDesc::InitAsDefaultInstance() {
}

E_XiuzhenStagesAttributeDesc::E_XiuzhenStagesAttributeDesc(const E_XiuzhenStagesAttributeDesc& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_XiuzhenStagesAttributeDesc::SharedCtor() {
  _cached_size_ = 0;
  m_value_ = GOOGLE_LONGLONG(0);
  m_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_XiuzhenStagesAttributeDesc::~E_XiuzhenStagesAttributeDesc() {
  SharedDtor();
}

void E_XiuzhenStagesAttributeDesc::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_XiuzhenStagesAttributeDesc::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_XiuzhenStagesAttributeDesc::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_XiuzhenStagesAttributeDesc_descriptor_;
}

const E_XiuzhenStagesAttributeDesc& E_XiuzhenStagesAttributeDesc::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fXiuzhen_2eproto();
  return *default_instance_;
}

E_XiuzhenStagesAttributeDesc* E_XiuzhenStagesAttributeDesc::default_instance_ = NULL;

E_XiuzhenStagesAttributeDesc* E_XiuzhenStagesAttributeDesc::New() const {
  return new E_XiuzhenStagesAttributeDesc;
}

void E_XiuzhenStagesAttributeDesc::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_value_ = GOOGLE_LONGLONG(0);
    m_id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_XiuzhenStagesAttributeDesc::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 m_value = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &m_value_)));
          set_has_m_value();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_id;
        break;
      }

      // optional int32 m_id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_id_)));
          set_has_m_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_XiuzhenStagesAttributeDesc::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 m_value = 1;
  if (has_m_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->m_value(), output);
  }

  // optional int32 m_id = 2;
  if (has_m_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_XiuzhenStagesAttributeDesc::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 m_value = 1;
  if (has_m_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->m_value(), target);
  }

  // optional int32 m_id = 2;
  if (has_m_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_XiuzhenStagesAttributeDesc::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 m_value = 1;
    if (has_m_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->m_value());
    }

    // optional int32 m_id = 2;
    if (has_m_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_id());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_XiuzhenStagesAttributeDesc::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_XiuzhenStagesAttributeDesc* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_XiuzhenStagesAttributeDesc*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_XiuzhenStagesAttributeDesc::MergeFrom(const E_XiuzhenStagesAttributeDesc& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_value()) {
      set_m_value(from.m_value());
    }
    if (from.has_m_id()) {
      set_m_id(from.m_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_XiuzhenStagesAttributeDesc::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_XiuzhenStagesAttributeDesc::CopyFrom(const E_XiuzhenStagesAttributeDesc& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_XiuzhenStagesAttributeDesc::IsInitialized() const {

  return true;
}

void E_XiuzhenStagesAttributeDesc::Swap(E_XiuzhenStagesAttributeDesc* other) {
  if (other != this) {
    std::swap(m_value_, other->m_value_);
    std::swap(m_id_, other->m_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_XiuzhenStagesAttributeDesc::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_XiuzhenStagesAttributeDesc_descriptor_;
  metadata.reflection = E_XiuzhenStagesAttributeDesc_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_XiuzhenStages::kMIdFieldNumber;
const int E_XiuzhenStages::kMSuccessRateFieldNumber;
const int E_XiuzhenStages::kMBlessingFieldNumber;
const int E_XiuzhenStages::kMItemFieldNumber;
const int E_XiuzhenStages::kMSkillFieldNumber;
const int E_XiuzhenStages::kMAttributeFieldNumber;
#endif  // !_MSC_VER

E_XiuzhenStages::E_XiuzhenStages()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_XiuzhenStages::InitAsDefaultInstance() {
}

E_XiuzhenStages::E_XiuzhenStages(const E_XiuzhenStages& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_XiuzhenStages::SharedCtor() {
  _cached_size_ = 0;
  m_id_ = 0;
  m_success_rate_ = 0;
  m_blessing_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_XiuzhenStages::~E_XiuzhenStages() {
  SharedDtor();
}

void E_XiuzhenStages::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_XiuzhenStages::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_XiuzhenStages::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_XiuzhenStages_descriptor_;
}

const E_XiuzhenStages& E_XiuzhenStages::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fXiuzhen_2eproto();
  return *default_instance_;
}

E_XiuzhenStages* E_XiuzhenStages::default_instance_ = NULL;

E_XiuzhenStages* E_XiuzhenStages::New() const {
  return new E_XiuzhenStages;
}

void E_XiuzhenStages::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_id_ = 0;
    m_success_rate_ = 0;
    m_blessing_ = 0;
  }
  m_item_.Clear();
  m_skill_.Clear();
  m_attribute_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_XiuzhenStages::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_id_)));
          set_has_m_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_success_rate;
        break;
      }

      // optional int32 m_success_rate = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_success_rate:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_success_rate_)));
          set_has_m_success_rate();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_m_blessing;
        break;
      }

      // optional int32 m_blessing = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_blessing:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_blessing_)));
          set_has_m_blessing();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_m_item;
        break;
      }

      // repeated .proto_ff.E_XiuzhenStagesItemDesc m_item = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_item:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_m_item()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_m_item;
        if (input->ExpectTag(42)) goto parse_m_skill;
        break;
      }

      // repeated .proto_ff.E_XiuzhenStagesSkillDesc m_skill = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_skill:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_m_skill()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_m_skill;
        if (input->ExpectTag(50)) goto parse_m_attribute;
        break;
      }

      // repeated .proto_ff.E_XiuzhenStagesAttributeDesc m_attribute = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_attribute:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_m_attribute()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_m_attribute;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_XiuzhenStages::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_id(), output);
  }

  // optional int32 m_success_rate = 2;
  if (has_m_success_rate()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_success_rate(), output);
  }

  // optional int32 m_blessing = 3;
  if (has_m_blessing()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->m_blessing(), output);
  }

  // repeated .proto_ff.E_XiuzhenStagesItemDesc m_item = 4;
  for (int i = 0; i < this->m_item_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->m_item(i), output);
  }

  // repeated .proto_ff.E_XiuzhenStagesSkillDesc m_skill = 5;
  for (int i = 0; i < this->m_skill_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->m_skill(i), output);
  }

  // repeated .proto_ff.E_XiuzhenStagesAttributeDesc m_attribute = 6;
  for (int i = 0; i < this->m_attribute_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->m_attribute(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_XiuzhenStages::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_id(), target);
  }

  // optional int32 m_success_rate = 2;
  if (has_m_success_rate()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_success_rate(), target);
  }

  // optional int32 m_blessing = 3;
  if (has_m_blessing()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->m_blessing(), target);
  }

  // repeated .proto_ff.E_XiuzhenStagesItemDesc m_item = 4;
  for (int i = 0; i < this->m_item_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->m_item(i), target);
  }

  // repeated .proto_ff.E_XiuzhenStagesSkillDesc m_skill = 5;
  for (int i = 0; i < this->m_skill_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->m_skill(i), target);
  }

  // repeated .proto_ff.E_XiuzhenStagesAttributeDesc m_attribute = 6;
  for (int i = 0; i < this->m_attribute_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        6, this->m_attribute(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_XiuzhenStages::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_id = 1;
    if (has_m_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_id());
    }

    // optional int32 m_success_rate = 2;
    if (has_m_success_rate()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_success_rate());
    }

    // optional int32 m_blessing = 3;
    if (has_m_blessing()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_blessing());
    }

  }
  // repeated .proto_ff.E_XiuzhenStagesItemDesc m_item = 4;
  total_size += 1 * this->m_item_size();
  for (int i = 0; i < this->m_item_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->m_item(i));
  }

  // repeated .proto_ff.E_XiuzhenStagesSkillDesc m_skill = 5;
  total_size += 1 * this->m_skill_size();
  for (int i = 0; i < this->m_skill_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->m_skill(i));
  }

  // repeated .proto_ff.E_XiuzhenStagesAttributeDesc m_attribute = 6;
  total_size += 1 * this->m_attribute_size();
  for (int i = 0; i < this->m_attribute_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->m_attribute(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_XiuzhenStages::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_XiuzhenStages* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_XiuzhenStages*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_XiuzhenStages::MergeFrom(const E_XiuzhenStages& from) {
  GOOGLE_CHECK_NE(&from, this);
  m_item_.MergeFrom(from.m_item_);
  m_skill_.MergeFrom(from.m_skill_);
  m_attribute_.MergeFrom(from.m_attribute_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_id()) {
      set_m_id(from.m_id());
    }
    if (from.has_m_success_rate()) {
      set_m_success_rate(from.m_success_rate());
    }
    if (from.has_m_blessing()) {
      set_m_blessing(from.m_blessing());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_XiuzhenStages::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_XiuzhenStages::CopyFrom(const E_XiuzhenStages& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_XiuzhenStages::IsInitialized() const {

  return true;
}

void E_XiuzhenStages::Swap(E_XiuzhenStages* other) {
  if (other != this) {
    std::swap(m_id_, other->m_id_);
    std::swap(m_success_rate_, other->m_success_rate_);
    std::swap(m_blessing_, other->m_blessing_);
    m_item_.Swap(&other->m_item_);
    m_skill_.Swap(&other->m_skill_);
    m_attribute_.Swap(&other->m_attribute_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_XiuzhenStages::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_XiuzhenStages_descriptor_;
  metadata.reflection = E_XiuzhenStages_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_XiuzhenStages::kEXiuzhenStagesListFieldNumber;
#endif  // !_MSC_VER

Sheet_XiuzhenStages::Sheet_XiuzhenStages()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_XiuzhenStages::InitAsDefaultInstance() {
}

Sheet_XiuzhenStages::Sheet_XiuzhenStages(const Sheet_XiuzhenStages& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_XiuzhenStages::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_XiuzhenStages::~Sheet_XiuzhenStages() {
  SharedDtor();
}

void Sheet_XiuzhenStages::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_XiuzhenStages::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_XiuzhenStages::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_XiuzhenStages_descriptor_;
}

const Sheet_XiuzhenStages& Sheet_XiuzhenStages::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fXiuzhen_2eproto();
  return *default_instance_;
}

Sheet_XiuzhenStages* Sheet_XiuzhenStages::default_instance_ = NULL;

Sheet_XiuzhenStages* Sheet_XiuzhenStages::New() const {
  return new Sheet_XiuzhenStages;
}

void Sheet_XiuzhenStages::Clear() {
  e_xiuzhenstages_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_XiuzhenStages::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.E_XiuzhenStages E_XiuzhenStages_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_E_XiuzhenStages_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_e_xiuzhenstages_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_E_XiuzhenStages_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_XiuzhenStages::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.E_XiuzhenStages E_XiuzhenStages_List = 1;
  for (int i = 0; i < this->e_xiuzhenstages_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->e_xiuzhenstages_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_XiuzhenStages::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.E_XiuzhenStages E_XiuzhenStages_List = 1;
  for (int i = 0; i < this->e_xiuzhenstages_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->e_xiuzhenstages_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_XiuzhenStages::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.E_XiuzhenStages E_XiuzhenStages_List = 1;
  total_size += 1 * this->e_xiuzhenstages_list_size();
  for (int i = 0; i < this->e_xiuzhenstages_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->e_xiuzhenstages_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_XiuzhenStages::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_XiuzhenStages* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_XiuzhenStages*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_XiuzhenStages::MergeFrom(const Sheet_XiuzhenStages& from) {
  GOOGLE_CHECK_NE(&from, this);
  e_xiuzhenstages_list_.MergeFrom(from.e_xiuzhenstages_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_XiuzhenStages::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_XiuzhenStages::CopyFrom(const Sheet_XiuzhenStages& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_XiuzhenStages::IsInitialized() const {

  return true;
}

void Sheet_XiuzhenStages::Swap(Sheet_XiuzhenStages* other) {
  if (other != this) {
    e_xiuzhenstages_list_.Swap(&other->e_xiuzhenstages_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_XiuzhenStages::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_XiuzhenStages_descriptor_;
  metadata.reflection = Sheet_XiuzhenStages_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_XiuzhenGb_areas::kMIdFieldNumber;
const int E_XiuzhenGb_areas::kMNameFieldNumber;
const int E_XiuzhenGb_areas::kMSubareaFieldNumber;
const int E_XiuzhenGb_areas::kMBodyLvFieldNumber;
const int E_XiuzhenGb_areas::kMEnterItemFieldNumber;
const int E_XiuzhenGb_areas::kMEnterItemNumFieldNumber;
const int E_XiuzhenGb_areas::kMEnterRateFieldNumber;
const int E_XiuzhenGb_areas::kMEnergyAddminFieldNumber;
const int E_XiuzhenGb_areas::kMEnergyAddmaxFieldNumber;
const int E_XiuzhenGb_areas::kMEnergyMinFieldNumber;
const int E_XiuzhenGb_areas::kMEnergyMaxFieldNumber;
const int E_XiuzhenGb_areas::kMEventrateFieldNumber;
const int E_XiuzhenGb_areas::kMEventrateenergyaddFieldNumber;
const int E_XiuzhenGb_areas::kMEventgetitemsrateFieldNumber;
#endif  // !_MSC_VER

E_XiuzhenGb_areas::E_XiuzhenGb_areas()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_XiuzhenGb_areas::InitAsDefaultInstance() {
}

E_XiuzhenGb_areas::E_XiuzhenGb_areas(const E_XiuzhenGb_areas& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_XiuzhenGb_areas::SharedCtor() {
  _cached_size_ = 0;
  m_id_ = 0;
  m_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  m_subarea_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  m_body_lv_ = 0;
  m_enter_item_ = 0;
  m_enter_item_num_ = 0;
  m_enter_rate_ = 0;
  m_energy_addmin_ = 0;
  m_energy_addmax_ = 0;
  m_energy_min_ = 0;
  m_energy_max_ = 0;
  m_eventrate_ = 0;
  m_eventrateenergyadd_ = 0;
  m_eventgetitemsrate_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_XiuzhenGb_areas::~E_XiuzhenGb_areas() {
  SharedDtor();
}

void E_XiuzhenGb_areas::SharedDtor() {
  if (m_name_ != &::google::protobuf::internal::kEmptyString) {
    delete m_name_;
  }
  if (m_subarea_ != &::google::protobuf::internal::kEmptyString) {
    delete m_subarea_;
  }
  if (this != default_instance_) {
  }
}

void E_XiuzhenGb_areas::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_XiuzhenGb_areas::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_XiuzhenGb_areas_descriptor_;
}

const E_XiuzhenGb_areas& E_XiuzhenGb_areas::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fXiuzhen_2eproto();
  return *default_instance_;
}

E_XiuzhenGb_areas* E_XiuzhenGb_areas::default_instance_ = NULL;

E_XiuzhenGb_areas* E_XiuzhenGb_areas::New() const {
  return new E_XiuzhenGb_areas;
}

void E_XiuzhenGb_areas::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_id_ = 0;
    if (has_m_name()) {
      if (m_name_ != &::google::protobuf::internal::kEmptyString) {
        m_name_->clear();
      }
    }
    if (has_m_subarea()) {
      if (m_subarea_ != &::google::protobuf::internal::kEmptyString) {
        m_subarea_->clear();
      }
    }
    m_body_lv_ = 0;
    m_enter_item_ = 0;
    m_enter_item_num_ = 0;
    m_enter_rate_ = 0;
    m_energy_addmin_ = 0;
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    m_energy_addmax_ = 0;
    m_energy_min_ = 0;
    m_energy_max_ = 0;
    m_eventrate_ = 0;
    m_eventrateenergyadd_ = 0;
    m_eventgetitemsrate_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_XiuzhenGb_areas::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_id_)));
          set_has_m_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_m_name;
        break;
      }

      // optional string m_name = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_m_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->m_name().data(), this->m_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_m_subarea;
        break;
      }

      // optional string m_subarea = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_subarea:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_m_subarea()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->m_subarea().data(), this->m_subarea().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_m_body_lv;
        break;
      }

      // optional int32 m_body_lv = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_body_lv:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_body_lv_)));
          set_has_m_body_lv();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_m_enter_item;
        break;
      }

      // optional int32 m_enter_item = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_enter_item:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_enter_item_)));
          set_has_m_enter_item();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_m_enter_item_num;
        break;
      }

      // optional int32 m_enter_item_num = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_enter_item_num:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_enter_item_num_)));
          set_has_m_enter_item_num();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_m_enter_rate;
        break;
      }

      // optional int32 m_enter_rate = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_enter_rate:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_enter_rate_)));
          set_has_m_enter_rate();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(64)) goto parse_m_energy_addmin;
        break;
      }

      // optional int32 m_energy_addmin = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_energy_addmin:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_energy_addmin_)));
          set_has_m_energy_addmin();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(72)) goto parse_m_energy_addmax;
        break;
      }

      // optional int32 m_energy_addmax = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_energy_addmax:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_energy_addmax_)));
          set_has_m_energy_addmax();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(80)) goto parse_m_energy_min;
        break;
      }

      // optional int32 m_energy_min = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_energy_min:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_energy_min_)));
          set_has_m_energy_min();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(88)) goto parse_m_energy_max;
        break;
      }

      // optional int32 m_energy_max = 11;
      case 11: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_energy_max:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_energy_max_)));
          set_has_m_energy_max();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(96)) goto parse_m_eventrate;
        break;
      }

      // optional int32 m_eventrate = 12;
      case 12: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_eventrate:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_eventrate_)));
          set_has_m_eventrate();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(104)) goto parse_m_eventrateenergyadd;
        break;
      }

      // optional int32 m_eventrateenergyadd = 13;
      case 13: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_eventrateenergyadd:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_eventrateenergyadd_)));
          set_has_m_eventrateenergyadd();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(112)) goto parse_m_eventgetitemsrate;
        break;
      }

      // optional int32 m_eventgetitemsrate = 14;
      case 14: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_eventgetitemsrate:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_eventgetitemsrate_)));
          set_has_m_eventgetitemsrate();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_XiuzhenGb_areas::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_id(), output);
  }

  // optional string m_name = 2;
  if (has_m_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_name().data(), this->m_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->m_name(), output);
  }

  // optional string m_subarea = 3;
  if (has_m_subarea()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_subarea().data(), this->m_subarea().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->m_subarea(), output);
  }

  // optional int32 m_body_lv = 4;
  if (has_m_body_lv()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->m_body_lv(), output);
  }

  // optional int32 m_enter_item = 5;
  if (has_m_enter_item()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->m_enter_item(), output);
  }

  // optional int32 m_enter_item_num = 6;
  if (has_m_enter_item_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->m_enter_item_num(), output);
  }

  // optional int32 m_enter_rate = 7;
  if (has_m_enter_rate()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->m_enter_rate(), output);
  }

  // optional int32 m_energy_addmin = 8;
  if (has_m_energy_addmin()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->m_energy_addmin(), output);
  }

  // optional int32 m_energy_addmax = 9;
  if (has_m_energy_addmax()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->m_energy_addmax(), output);
  }

  // optional int32 m_energy_min = 10;
  if (has_m_energy_min()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->m_energy_min(), output);
  }

  // optional int32 m_energy_max = 11;
  if (has_m_energy_max()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->m_energy_max(), output);
  }

  // optional int32 m_eventrate = 12;
  if (has_m_eventrate()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(12, this->m_eventrate(), output);
  }

  // optional int32 m_eventrateenergyadd = 13;
  if (has_m_eventrateenergyadd()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(13, this->m_eventrateenergyadd(), output);
  }

  // optional int32 m_eventgetitemsrate = 14;
  if (has_m_eventgetitemsrate()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(14, this->m_eventgetitemsrate(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_XiuzhenGb_areas::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_id(), target);
  }

  // optional string m_name = 2;
  if (has_m_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_name().data(), this->m_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->m_name(), target);
  }

  // optional string m_subarea = 3;
  if (has_m_subarea()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_subarea().data(), this->m_subarea().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->m_subarea(), target);
  }

  // optional int32 m_body_lv = 4;
  if (has_m_body_lv()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->m_body_lv(), target);
  }

  // optional int32 m_enter_item = 5;
  if (has_m_enter_item()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->m_enter_item(), target);
  }

  // optional int32 m_enter_item_num = 6;
  if (has_m_enter_item_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->m_enter_item_num(), target);
  }

  // optional int32 m_enter_rate = 7;
  if (has_m_enter_rate()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->m_enter_rate(), target);
  }

  // optional int32 m_energy_addmin = 8;
  if (has_m_energy_addmin()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->m_energy_addmin(), target);
  }

  // optional int32 m_energy_addmax = 9;
  if (has_m_energy_addmax()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->m_energy_addmax(), target);
  }

  // optional int32 m_energy_min = 10;
  if (has_m_energy_min()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->m_energy_min(), target);
  }

  // optional int32 m_energy_max = 11;
  if (has_m_energy_max()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->m_energy_max(), target);
  }

  // optional int32 m_eventrate = 12;
  if (has_m_eventrate()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(12, this->m_eventrate(), target);
  }

  // optional int32 m_eventrateenergyadd = 13;
  if (has_m_eventrateenergyadd()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(13, this->m_eventrateenergyadd(), target);
  }

  // optional int32 m_eventgetitemsrate = 14;
  if (has_m_eventgetitemsrate()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(14, this->m_eventgetitemsrate(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_XiuzhenGb_areas::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_id = 1;
    if (has_m_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_id());
    }

    // optional string m_name = 2;
    if (has_m_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->m_name());
    }

    // optional string m_subarea = 3;
    if (has_m_subarea()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->m_subarea());
    }

    // optional int32 m_body_lv = 4;
    if (has_m_body_lv()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_body_lv());
    }

    // optional int32 m_enter_item = 5;
    if (has_m_enter_item()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_enter_item());
    }

    // optional int32 m_enter_item_num = 6;
    if (has_m_enter_item_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_enter_item_num());
    }

    // optional int32 m_enter_rate = 7;
    if (has_m_enter_rate()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_enter_rate());
    }

    // optional int32 m_energy_addmin = 8;
    if (has_m_energy_addmin()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_energy_addmin());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional int32 m_energy_addmax = 9;
    if (has_m_energy_addmax()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_energy_addmax());
    }

    // optional int32 m_energy_min = 10;
    if (has_m_energy_min()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_energy_min());
    }

    // optional int32 m_energy_max = 11;
    if (has_m_energy_max()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_energy_max());
    }

    // optional int32 m_eventrate = 12;
    if (has_m_eventrate()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_eventrate());
    }

    // optional int32 m_eventrateenergyadd = 13;
    if (has_m_eventrateenergyadd()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_eventrateenergyadd());
    }

    // optional int32 m_eventgetitemsrate = 14;
    if (has_m_eventgetitemsrate()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_eventgetitemsrate());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_XiuzhenGb_areas::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_XiuzhenGb_areas* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_XiuzhenGb_areas*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_XiuzhenGb_areas::MergeFrom(const E_XiuzhenGb_areas& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_id()) {
      set_m_id(from.m_id());
    }
    if (from.has_m_name()) {
      set_m_name(from.m_name());
    }
    if (from.has_m_subarea()) {
      set_m_subarea(from.m_subarea());
    }
    if (from.has_m_body_lv()) {
      set_m_body_lv(from.m_body_lv());
    }
    if (from.has_m_enter_item()) {
      set_m_enter_item(from.m_enter_item());
    }
    if (from.has_m_enter_item_num()) {
      set_m_enter_item_num(from.m_enter_item_num());
    }
    if (from.has_m_enter_rate()) {
      set_m_enter_rate(from.m_enter_rate());
    }
    if (from.has_m_energy_addmin()) {
      set_m_energy_addmin(from.m_energy_addmin());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_m_energy_addmax()) {
      set_m_energy_addmax(from.m_energy_addmax());
    }
    if (from.has_m_energy_min()) {
      set_m_energy_min(from.m_energy_min());
    }
    if (from.has_m_energy_max()) {
      set_m_energy_max(from.m_energy_max());
    }
    if (from.has_m_eventrate()) {
      set_m_eventrate(from.m_eventrate());
    }
    if (from.has_m_eventrateenergyadd()) {
      set_m_eventrateenergyadd(from.m_eventrateenergyadd());
    }
    if (from.has_m_eventgetitemsrate()) {
      set_m_eventgetitemsrate(from.m_eventgetitemsrate());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_XiuzhenGb_areas::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_XiuzhenGb_areas::CopyFrom(const E_XiuzhenGb_areas& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_XiuzhenGb_areas::IsInitialized() const {

  return true;
}

void E_XiuzhenGb_areas::Swap(E_XiuzhenGb_areas* other) {
  if (other != this) {
    std::swap(m_id_, other->m_id_);
    std::swap(m_name_, other->m_name_);
    std::swap(m_subarea_, other->m_subarea_);
    std::swap(m_body_lv_, other->m_body_lv_);
    std::swap(m_enter_item_, other->m_enter_item_);
    std::swap(m_enter_item_num_, other->m_enter_item_num_);
    std::swap(m_enter_rate_, other->m_enter_rate_);
    std::swap(m_energy_addmin_, other->m_energy_addmin_);
    std::swap(m_energy_addmax_, other->m_energy_addmax_);
    std::swap(m_energy_min_, other->m_energy_min_);
    std::swap(m_energy_max_, other->m_energy_max_);
    std::swap(m_eventrate_, other->m_eventrate_);
    std::swap(m_eventrateenergyadd_, other->m_eventrateenergyadd_);
    std::swap(m_eventgetitemsrate_, other->m_eventgetitemsrate_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_XiuzhenGb_areas::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_XiuzhenGb_areas_descriptor_;
  metadata.reflection = E_XiuzhenGb_areas_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_XiuzhenGb_areas::kEXiuzhenGbAreasListFieldNumber;
#endif  // !_MSC_VER

Sheet_XiuzhenGb_areas::Sheet_XiuzhenGb_areas()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_XiuzhenGb_areas::InitAsDefaultInstance() {
}

Sheet_XiuzhenGb_areas::Sheet_XiuzhenGb_areas(const Sheet_XiuzhenGb_areas& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_XiuzhenGb_areas::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_XiuzhenGb_areas::~Sheet_XiuzhenGb_areas() {
  SharedDtor();
}

void Sheet_XiuzhenGb_areas::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_XiuzhenGb_areas::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_XiuzhenGb_areas::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_XiuzhenGb_areas_descriptor_;
}

const Sheet_XiuzhenGb_areas& Sheet_XiuzhenGb_areas::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fXiuzhen_2eproto();
  return *default_instance_;
}

Sheet_XiuzhenGb_areas* Sheet_XiuzhenGb_areas::default_instance_ = NULL;

Sheet_XiuzhenGb_areas* Sheet_XiuzhenGb_areas::New() const {
  return new Sheet_XiuzhenGb_areas;
}

void Sheet_XiuzhenGb_areas::Clear() {
  e_xiuzhengb_areas_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_XiuzhenGb_areas::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.E_XiuzhenGb_areas E_XiuzhenGb_areas_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_E_XiuzhenGb_areas_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_e_xiuzhengb_areas_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_E_XiuzhenGb_areas_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_XiuzhenGb_areas::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.E_XiuzhenGb_areas E_XiuzhenGb_areas_List = 1;
  for (int i = 0; i < this->e_xiuzhengb_areas_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->e_xiuzhengb_areas_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_XiuzhenGb_areas::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.E_XiuzhenGb_areas E_XiuzhenGb_areas_List = 1;
  for (int i = 0; i < this->e_xiuzhengb_areas_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->e_xiuzhengb_areas_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_XiuzhenGb_areas::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.E_XiuzhenGb_areas E_XiuzhenGb_areas_List = 1;
  total_size += 1 * this->e_xiuzhengb_areas_list_size();
  for (int i = 0; i < this->e_xiuzhengb_areas_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->e_xiuzhengb_areas_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_XiuzhenGb_areas::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_XiuzhenGb_areas* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_XiuzhenGb_areas*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_XiuzhenGb_areas::MergeFrom(const Sheet_XiuzhenGb_areas& from) {
  GOOGLE_CHECK_NE(&from, this);
  e_xiuzhengb_areas_list_.MergeFrom(from.e_xiuzhengb_areas_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_XiuzhenGb_areas::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_XiuzhenGb_areas::CopyFrom(const Sheet_XiuzhenGb_areas& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_XiuzhenGb_areas::IsInitialized() const {

  return true;
}

void Sheet_XiuzhenGb_areas::Swap(Sheet_XiuzhenGb_areas* other) {
  if (other != this) {
    e_xiuzhengb_areas_list_.Swap(&other->e_xiuzhengb_areas_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_XiuzhenGb_areas::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_XiuzhenGb_areas_descriptor_;
  metadata.reflection = Sheet_XiuzhenGb_areas_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_XiuzhenGb_area_eventsItemDesc::kMNumFieldNumber;
const int E_XiuzhenGb_area_eventsItemDesc::kMIdFieldNumber;
#endif  // !_MSC_VER

E_XiuzhenGb_area_eventsItemDesc::E_XiuzhenGb_area_eventsItemDesc()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_XiuzhenGb_area_eventsItemDesc::InitAsDefaultInstance() {
}

E_XiuzhenGb_area_eventsItemDesc::E_XiuzhenGb_area_eventsItemDesc(const E_XiuzhenGb_area_eventsItemDesc& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_XiuzhenGb_area_eventsItemDesc::SharedCtor() {
  _cached_size_ = 0;
  m_num_ = 0;
  m_id_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_XiuzhenGb_area_eventsItemDesc::~E_XiuzhenGb_area_eventsItemDesc() {
  SharedDtor();
}

void E_XiuzhenGb_area_eventsItemDesc::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_XiuzhenGb_area_eventsItemDesc::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_XiuzhenGb_area_eventsItemDesc::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_XiuzhenGb_area_eventsItemDesc_descriptor_;
}

const E_XiuzhenGb_area_eventsItemDesc& E_XiuzhenGb_area_eventsItemDesc::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fXiuzhen_2eproto();
  return *default_instance_;
}

E_XiuzhenGb_area_eventsItemDesc* E_XiuzhenGb_area_eventsItemDesc::default_instance_ = NULL;

E_XiuzhenGb_area_eventsItemDesc* E_XiuzhenGb_area_eventsItemDesc::New() const {
  return new E_XiuzhenGb_area_eventsItemDesc;
}

void E_XiuzhenGb_area_eventsItemDesc::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_num_ = 0;
    m_id_ = GOOGLE_LONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_XiuzhenGb_area_eventsItemDesc::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_num = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_num_)));
          set_has_m_num();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_id;
        break;
      }

      // optional int64 m_id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &m_id_)));
          set_has_m_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_XiuzhenGb_area_eventsItemDesc::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_num = 1;
  if (has_m_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_num(), output);
  }

  // optional int64 m_id = 2;
  if (has_m_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->m_id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_XiuzhenGb_area_eventsItemDesc::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_num = 1;
  if (has_m_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_num(), target);
  }

  // optional int64 m_id = 2;
  if (has_m_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->m_id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_XiuzhenGb_area_eventsItemDesc::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_num = 1;
    if (has_m_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_num());
    }

    // optional int64 m_id = 2;
    if (has_m_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->m_id());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_XiuzhenGb_area_eventsItemDesc::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_XiuzhenGb_area_eventsItemDesc* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_XiuzhenGb_area_eventsItemDesc*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_XiuzhenGb_area_eventsItemDesc::MergeFrom(const E_XiuzhenGb_area_eventsItemDesc& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_num()) {
      set_m_num(from.m_num());
    }
    if (from.has_m_id()) {
      set_m_id(from.m_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_XiuzhenGb_area_eventsItemDesc::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_XiuzhenGb_area_eventsItemDesc::CopyFrom(const E_XiuzhenGb_area_eventsItemDesc& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_XiuzhenGb_area_eventsItemDesc::IsInitialized() const {

  return true;
}

void E_XiuzhenGb_area_eventsItemDesc::Swap(E_XiuzhenGb_area_eventsItemDesc* other) {
  if (other != this) {
    std::swap(m_num_, other->m_num_);
    std::swap(m_id_, other->m_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_XiuzhenGb_area_eventsItemDesc::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_XiuzhenGb_area_eventsItemDesc_descriptor_;
  metadata.reflection = E_XiuzhenGb_area_eventsItemDesc_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_XiuzhenGb_area_events::kMIdFieldNumber;
const int E_XiuzhenGb_area_events::kMAreaidFieldNumber;
const int E_XiuzhenGb_area_events::kMRateFieldNumber;
const int E_XiuzhenGb_area_events::kMTypeFieldNumber;
const int E_XiuzhenGb_area_events::kMBodylvlFieldNumber;
const int E_XiuzhenGb_area_events::kMChattitleFieldNumber;
const int E_XiuzhenGb_area_events::kMChatsFieldNumber;
const int E_XiuzhenGb_area_events::kMChatbgfFieldNumber;
const int E_XiuzhenGb_area_events::kMChatbgmFieldNumber;
const int E_XiuzhenGb_area_events::kMEnergyaddFieldNumber;
const int E_XiuzhenGb_area_events::kMItemFieldNumber;
#endif  // !_MSC_VER

E_XiuzhenGb_area_events::E_XiuzhenGb_area_events()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_XiuzhenGb_area_events::InitAsDefaultInstance() {
}

E_XiuzhenGb_area_events::E_XiuzhenGb_area_events(const E_XiuzhenGb_area_events& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_XiuzhenGb_area_events::SharedCtor() {
  _cached_size_ = 0;
  m_id_ = GOOGLE_LONGLONG(0);
  m_areaid_ = GOOGLE_LONGLONG(0);
  m_rate_ = 0;
  m_type_ = 0;
  m_bodylvl_ = 0;
  m_chattitle_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  m_chats_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  m_chatbgf_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  m_chatbgm_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  m_energyadd_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_XiuzhenGb_area_events::~E_XiuzhenGb_area_events() {
  SharedDtor();
}

void E_XiuzhenGb_area_events::SharedDtor() {
  if (m_chattitle_ != &::google::protobuf::internal::kEmptyString) {
    delete m_chattitle_;
  }
  if (m_chats_ != &::google::protobuf::internal::kEmptyString) {
    delete m_chats_;
  }
  if (m_chatbgf_ != &::google::protobuf::internal::kEmptyString) {
    delete m_chatbgf_;
  }
  if (m_chatbgm_ != &::google::protobuf::internal::kEmptyString) {
    delete m_chatbgm_;
  }
  if (this != default_instance_) {
  }
}

void E_XiuzhenGb_area_events::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_XiuzhenGb_area_events::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_XiuzhenGb_area_events_descriptor_;
}

const E_XiuzhenGb_area_events& E_XiuzhenGb_area_events::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fXiuzhen_2eproto();
  return *default_instance_;
}

E_XiuzhenGb_area_events* E_XiuzhenGb_area_events::default_instance_ = NULL;

E_XiuzhenGb_area_events* E_XiuzhenGb_area_events::New() const {
  return new E_XiuzhenGb_area_events;
}

void E_XiuzhenGb_area_events::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_id_ = GOOGLE_LONGLONG(0);
    m_areaid_ = GOOGLE_LONGLONG(0);
    m_rate_ = 0;
    m_type_ = 0;
    m_bodylvl_ = 0;
    if (has_m_chattitle()) {
      if (m_chattitle_ != &::google::protobuf::internal::kEmptyString) {
        m_chattitle_->clear();
      }
    }
    if (has_m_chats()) {
      if (m_chats_ != &::google::protobuf::internal::kEmptyString) {
        m_chats_->clear();
      }
    }
    if (has_m_chatbgf()) {
      if (m_chatbgf_ != &::google::protobuf::internal::kEmptyString) {
        m_chatbgf_->clear();
      }
    }
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (has_m_chatbgm()) {
      if (m_chatbgm_ != &::google::protobuf::internal::kEmptyString) {
        m_chatbgm_->clear();
      }
    }
    m_energyadd_ = 0;
  }
  m_item_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_XiuzhenGb_area_events::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 m_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &m_id_)));
          set_has_m_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_areaid;
        break;
      }

      // optional int64 m_areaid = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_areaid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &m_areaid_)));
          set_has_m_areaid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_m_rate;
        break;
      }

      // optional int32 m_rate = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_rate:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_rate_)));
          set_has_m_rate();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_m_type;
        break;
      }

      // optional int32 m_type = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_type_)));
          set_has_m_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_m_bodylvl;
        break;
      }

      // optional int32 m_bodylvl = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_bodylvl:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_bodylvl_)));
          set_has_m_bodylvl();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_m_chattitle;
        break;
      }

      // optional string m_chattitle = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_chattitle:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_m_chattitle()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->m_chattitle().data(), this->m_chattitle().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(58)) goto parse_m_chats;
        break;
      }

      // optional string m_chats = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_chats:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_m_chats()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->m_chats().data(), this->m_chats().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(66)) goto parse_m_chatbgf;
        break;
      }

      // optional string m_chatbgf = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_chatbgf:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_m_chatbgf()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->m_chatbgf().data(), this->m_chatbgf().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(74)) goto parse_m_chatbgm;
        break;
      }

      // optional string m_chatbgm = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_chatbgm:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_m_chatbgm()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->m_chatbgm().data(), this->m_chatbgm().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(80)) goto parse_m_energyadd;
        break;
      }

      // optional int32 m_energyadd = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_energyadd:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_energyadd_)));
          set_has_m_energyadd();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(90)) goto parse_m_item;
        break;
      }

      // repeated .proto_ff.E_XiuzhenGb_area_eventsItemDesc m_item = 11;
      case 11: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_item:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_m_item()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(90)) goto parse_m_item;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_XiuzhenGb_area_events::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 m_id = 1;
  if (has_m_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->m_id(), output);
  }

  // optional int64 m_areaid = 2;
  if (has_m_areaid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->m_areaid(), output);
  }

  // optional int32 m_rate = 3;
  if (has_m_rate()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->m_rate(), output);
  }

  // optional int32 m_type = 4;
  if (has_m_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->m_type(), output);
  }

  // optional int32 m_bodylvl = 5;
  if (has_m_bodylvl()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->m_bodylvl(), output);
  }

  // optional string m_chattitle = 6;
  if (has_m_chattitle()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_chattitle().data(), this->m_chattitle().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      6, this->m_chattitle(), output);
  }

  // optional string m_chats = 7;
  if (has_m_chats()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_chats().data(), this->m_chats().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      7, this->m_chats(), output);
  }

  // optional string m_chatbgf = 8;
  if (has_m_chatbgf()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_chatbgf().data(), this->m_chatbgf().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      8, this->m_chatbgf(), output);
  }

  // optional string m_chatbgm = 9;
  if (has_m_chatbgm()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_chatbgm().data(), this->m_chatbgm().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      9, this->m_chatbgm(), output);
  }

  // optional int32 m_energyadd = 10;
  if (has_m_energyadd()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->m_energyadd(), output);
  }

  // repeated .proto_ff.E_XiuzhenGb_area_eventsItemDesc m_item = 11;
  for (int i = 0; i < this->m_item_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, this->m_item(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_XiuzhenGb_area_events::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 m_id = 1;
  if (has_m_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->m_id(), target);
  }

  // optional int64 m_areaid = 2;
  if (has_m_areaid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->m_areaid(), target);
  }

  // optional int32 m_rate = 3;
  if (has_m_rate()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->m_rate(), target);
  }

  // optional int32 m_type = 4;
  if (has_m_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->m_type(), target);
  }

  // optional int32 m_bodylvl = 5;
  if (has_m_bodylvl()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->m_bodylvl(), target);
  }

  // optional string m_chattitle = 6;
  if (has_m_chattitle()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_chattitle().data(), this->m_chattitle().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->m_chattitle(), target);
  }

  // optional string m_chats = 7;
  if (has_m_chats()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_chats().data(), this->m_chats().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->m_chats(), target);
  }

  // optional string m_chatbgf = 8;
  if (has_m_chatbgf()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_chatbgf().data(), this->m_chatbgf().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->m_chatbgf(), target);
  }

  // optional string m_chatbgm = 9;
  if (has_m_chatbgm()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_chatbgm().data(), this->m_chatbgm().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->m_chatbgm(), target);
  }

  // optional int32 m_energyadd = 10;
  if (has_m_energyadd()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->m_energyadd(), target);
  }

  // repeated .proto_ff.E_XiuzhenGb_area_eventsItemDesc m_item = 11;
  for (int i = 0; i < this->m_item_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        11, this->m_item(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_XiuzhenGb_area_events::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 m_id = 1;
    if (has_m_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->m_id());
    }

    // optional int64 m_areaid = 2;
    if (has_m_areaid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->m_areaid());
    }

    // optional int32 m_rate = 3;
    if (has_m_rate()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_rate());
    }

    // optional int32 m_type = 4;
    if (has_m_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_type());
    }

    // optional int32 m_bodylvl = 5;
    if (has_m_bodylvl()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_bodylvl());
    }

    // optional string m_chattitle = 6;
    if (has_m_chattitle()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->m_chattitle());
    }

    // optional string m_chats = 7;
    if (has_m_chats()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->m_chats());
    }

    // optional string m_chatbgf = 8;
    if (has_m_chatbgf()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->m_chatbgf());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional string m_chatbgm = 9;
    if (has_m_chatbgm()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->m_chatbgm());
    }

    // optional int32 m_energyadd = 10;
    if (has_m_energyadd()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_energyadd());
    }

  }
  // repeated .proto_ff.E_XiuzhenGb_area_eventsItemDesc m_item = 11;
  total_size += 1 * this->m_item_size();
  for (int i = 0; i < this->m_item_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->m_item(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_XiuzhenGb_area_events::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_XiuzhenGb_area_events* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_XiuzhenGb_area_events*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_XiuzhenGb_area_events::MergeFrom(const E_XiuzhenGb_area_events& from) {
  GOOGLE_CHECK_NE(&from, this);
  m_item_.MergeFrom(from.m_item_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_id()) {
      set_m_id(from.m_id());
    }
    if (from.has_m_areaid()) {
      set_m_areaid(from.m_areaid());
    }
    if (from.has_m_rate()) {
      set_m_rate(from.m_rate());
    }
    if (from.has_m_type()) {
      set_m_type(from.m_type());
    }
    if (from.has_m_bodylvl()) {
      set_m_bodylvl(from.m_bodylvl());
    }
    if (from.has_m_chattitle()) {
      set_m_chattitle(from.m_chattitle());
    }
    if (from.has_m_chats()) {
      set_m_chats(from.m_chats());
    }
    if (from.has_m_chatbgf()) {
      set_m_chatbgf(from.m_chatbgf());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_m_chatbgm()) {
      set_m_chatbgm(from.m_chatbgm());
    }
    if (from.has_m_energyadd()) {
      set_m_energyadd(from.m_energyadd());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_XiuzhenGb_area_events::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_XiuzhenGb_area_events::CopyFrom(const E_XiuzhenGb_area_events& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_XiuzhenGb_area_events::IsInitialized() const {

  return true;
}

void E_XiuzhenGb_area_events::Swap(E_XiuzhenGb_area_events* other) {
  if (other != this) {
    std::swap(m_id_, other->m_id_);
    std::swap(m_areaid_, other->m_areaid_);
    std::swap(m_rate_, other->m_rate_);
    std::swap(m_type_, other->m_type_);
    std::swap(m_bodylvl_, other->m_bodylvl_);
    std::swap(m_chattitle_, other->m_chattitle_);
    std::swap(m_chats_, other->m_chats_);
    std::swap(m_chatbgf_, other->m_chatbgf_);
    std::swap(m_chatbgm_, other->m_chatbgm_);
    std::swap(m_energyadd_, other->m_energyadd_);
    m_item_.Swap(&other->m_item_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_XiuzhenGb_area_events::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_XiuzhenGb_area_events_descriptor_;
  metadata.reflection = E_XiuzhenGb_area_events_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_XiuzhenGb_area_events::kEXiuzhenGbAreaEventsListFieldNumber;
#endif  // !_MSC_VER

Sheet_XiuzhenGb_area_events::Sheet_XiuzhenGb_area_events()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_XiuzhenGb_area_events::InitAsDefaultInstance() {
}

Sheet_XiuzhenGb_area_events::Sheet_XiuzhenGb_area_events(const Sheet_XiuzhenGb_area_events& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_XiuzhenGb_area_events::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_XiuzhenGb_area_events::~Sheet_XiuzhenGb_area_events() {
  SharedDtor();
}

void Sheet_XiuzhenGb_area_events::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_XiuzhenGb_area_events::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_XiuzhenGb_area_events::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_XiuzhenGb_area_events_descriptor_;
}

const Sheet_XiuzhenGb_area_events& Sheet_XiuzhenGb_area_events::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fXiuzhen_2eproto();
  return *default_instance_;
}

Sheet_XiuzhenGb_area_events* Sheet_XiuzhenGb_area_events::default_instance_ = NULL;

Sheet_XiuzhenGb_area_events* Sheet_XiuzhenGb_area_events::New() const {
  return new Sheet_XiuzhenGb_area_events;
}

void Sheet_XiuzhenGb_area_events::Clear() {
  e_xiuzhengb_area_events_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_XiuzhenGb_area_events::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.E_XiuzhenGb_area_events E_XiuzhenGb_area_events_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_E_XiuzhenGb_area_events_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_e_xiuzhengb_area_events_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_E_XiuzhenGb_area_events_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_XiuzhenGb_area_events::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.E_XiuzhenGb_area_events E_XiuzhenGb_area_events_List = 1;
  for (int i = 0; i < this->e_xiuzhengb_area_events_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->e_xiuzhengb_area_events_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_XiuzhenGb_area_events::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.E_XiuzhenGb_area_events E_XiuzhenGb_area_events_List = 1;
  for (int i = 0; i < this->e_xiuzhengb_area_events_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->e_xiuzhengb_area_events_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_XiuzhenGb_area_events::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.E_XiuzhenGb_area_events E_XiuzhenGb_area_events_List = 1;
  total_size += 1 * this->e_xiuzhengb_area_events_list_size();
  for (int i = 0; i < this->e_xiuzhengb_area_events_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->e_xiuzhengb_area_events_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_XiuzhenGb_area_events::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_XiuzhenGb_area_events* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_XiuzhenGb_area_events*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_XiuzhenGb_area_events::MergeFrom(const Sheet_XiuzhenGb_area_events& from) {
  GOOGLE_CHECK_NE(&from, this);
  e_xiuzhengb_area_events_list_.MergeFrom(from.e_xiuzhengb_area_events_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_XiuzhenGb_area_events::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_XiuzhenGb_area_events::CopyFrom(const Sheet_XiuzhenGb_area_events& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_XiuzhenGb_area_events::IsInitialized() const {

  return true;
}

void Sheet_XiuzhenGb_area_events::Swap(Sheet_XiuzhenGb_area_events* other) {
  if (other != this) {
    e_xiuzhengb_area_events_list_.Swap(&other->e_xiuzhengb_area_events_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_XiuzhenGb_area_events::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_XiuzhenGb_area_events_descriptor_;
  metadata.reflection = Sheet_XiuzhenGb_area_events_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_XiuzhenGb_lvlupItemDesc::kMNumFieldNumber;
const int E_XiuzhenGb_lvlupItemDesc::kMIdFieldNumber;
#endif  // !_MSC_VER

E_XiuzhenGb_lvlupItemDesc::E_XiuzhenGb_lvlupItemDesc()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_XiuzhenGb_lvlupItemDesc::InitAsDefaultInstance() {
}

E_XiuzhenGb_lvlupItemDesc::E_XiuzhenGb_lvlupItemDesc(const E_XiuzhenGb_lvlupItemDesc& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_XiuzhenGb_lvlupItemDesc::SharedCtor() {
  _cached_size_ = 0;
  m_num_ = 0;
  m_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_XiuzhenGb_lvlupItemDesc::~E_XiuzhenGb_lvlupItemDesc() {
  SharedDtor();
}

void E_XiuzhenGb_lvlupItemDesc::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_XiuzhenGb_lvlupItemDesc::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_XiuzhenGb_lvlupItemDesc::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_XiuzhenGb_lvlupItemDesc_descriptor_;
}

const E_XiuzhenGb_lvlupItemDesc& E_XiuzhenGb_lvlupItemDesc::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fXiuzhen_2eproto();
  return *default_instance_;
}

E_XiuzhenGb_lvlupItemDesc* E_XiuzhenGb_lvlupItemDesc::default_instance_ = NULL;

E_XiuzhenGb_lvlupItemDesc* E_XiuzhenGb_lvlupItemDesc::New() const {
  return new E_XiuzhenGb_lvlupItemDesc;
}

void E_XiuzhenGb_lvlupItemDesc::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_num_ = 0;
    m_id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_XiuzhenGb_lvlupItemDesc::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_num = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_num_)));
          set_has_m_num();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_id;
        break;
      }

      // optional int32 m_id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_id_)));
          set_has_m_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_XiuzhenGb_lvlupItemDesc::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_num = 1;
  if (has_m_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_num(), output);
  }

  // optional int32 m_id = 2;
  if (has_m_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_XiuzhenGb_lvlupItemDesc::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_num = 1;
  if (has_m_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_num(), target);
  }

  // optional int32 m_id = 2;
  if (has_m_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_XiuzhenGb_lvlupItemDesc::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_num = 1;
    if (has_m_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_num());
    }

    // optional int32 m_id = 2;
    if (has_m_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_id());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_XiuzhenGb_lvlupItemDesc::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_XiuzhenGb_lvlupItemDesc* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_XiuzhenGb_lvlupItemDesc*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_XiuzhenGb_lvlupItemDesc::MergeFrom(const E_XiuzhenGb_lvlupItemDesc& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_num()) {
      set_m_num(from.m_num());
    }
    if (from.has_m_id()) {
      set_m_id(from.m_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_XiuzhenGb_lvlupItemDesc::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_XiuzhenGb_lvlupItemDesc::CopyFrom(const E_XiuzhenGb_lvlupItemDesc& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_XiuzhenGb_lvlupItemDesc::IsInitialized() const {

  return true;
}

void E_XiuzhenGb_lvlupItemDesc::Swap(E_XiuzhenGb_lvlupItemDesc* other) {
  if (other != this) {
    std::swap(m_num_, other->m_num_);
    std::swap(m_id_, other->m_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_XiuzhenGb_lvlupItemDesc::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_XiuzhenGb_lvlupItemDesc_descriptor_;
  metadata.reflection = E_XiuzhenGb_lvlupItemDesc_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_XiuzhenGb_lvlupAttributeDesc::kMValueFieldNumber;
const int E_XiuzhenGb_lvlupAttributeDesc::kMIdFieldNumber;
#endif  // !_MSC_VER

E_XiuzhenGb_lvlupAttributeDesc::E_XiuzhenGb_lvlupAttributeDesc()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_XiuzhenGb_lvlupAttributeDesc::InitAsDefaultInstance() {
}

E_XiuzhenGb_lvlupAttributeDesc::E_XiuzhenGb_lvlupAttributeDesc(const E_XiuzhenGb_lvlupAttributeDesc& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_XiuzhenGb_lvlupAttributeDesc::SharedCtor() {
  _cached_size_ = 0;
  m_value_ = 0;
  m_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_XiuzhenGb_lvlupAttributeDesc::~E_XiuzhenGb_lvlupAttributeDesc() {
  SharedDtor();
}

void E_XiuzhenGb_lvlupAttributeDesc::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_XiuzhenGb_lvlupAttributeDesc::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_XiuzhenGb_lvlupAttributeDesc::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_XiuzhenGb_lvlupAttributeDesc_descriptor_;
}

const E_XiuzhenGb_lvlupAttributeDesc& E_XiuzhenGb_lvlupAttributeDesc::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fXiuzhen_2eproto();
  return *default_instance_;
}

E_XiuzhenGb_lvlupAttributeDesc* E_XiuzhenGb_lvlupAttributeDesc::default_instance_ = NULL;

E_XiuzhenGb_lvlupAttributeDesc* E_XiuzhenGb_lvlupAttributeDesc::New() const {
  return new E_XiuzhenGb_lvlupAttributeDesc;
}

void E_XiuzhenGb_lvlupAttributeDesc::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_value_ = 0;
    m_id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_XiuzhenGb_lvlupAttributeDesc::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_value = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_value_)));
          set_has_m_value();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_id;
        break;
      }

      // optional int32 m_id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_id_)));
          set_has_m_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_XiuzhenGb_lvlupAttributeDesc::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_value = 1;
  if (has_m_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_value(), output);
  }

  // optional int32 m_id = 2;
  if (has_m_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_XiuzhenGb_lvlupAttributeDesc::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_value = 1;
  if (has_m_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_value(), target);
  }

  // optional int32 m_id = 2;
  if (has_m_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_XiuzhenGb_lvlupAttributeDesc::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_value = 1;
    if (has_m_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_value());
    }

    // optional int32 m_id = 2;
    if (has_m_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_id());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_XiuzhenGb_lvlupAttributeDesc::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_XiuzhenGb_lvlupAttributeDesc* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_XiuzhenGb_lvlupAttributeDesc*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_XiuzhenGb_lvlupAttributeDesc::MergeFrom(const E_XiuzhenGb_lvlupAttributeDesc& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_value()) {
      set_m_value(from.m_value());
    }
    if (from.has_m_id()) {
      set_m_id(from.m_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_XiuzhenGb_lvlupAttributeDesc::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_XiuzhenGb_lvlupAttributeDesc::CopyFrom(const E_XiuzhenGb_lvlupAttributeDesc& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_XiuzhenGb_lvlupAttributeDesc::IsInitialized() const {

  return true;
}

void E_XiuzhenGb_lvlupAttributeDesc::Swap(E_XiuzhenGb_lvlupAttributeDesc* other) {
  if (other != this) {
    std::swap(m_value_, other->m_value_);
    std::swap(m_id_, other->m_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_XiuzhenGb_lvlupAttributeDesc::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_XiuzhenGb_lvlupAttributeDesc_descriptor_;
  metadata.reflection = E_XiuzhenGb_lvlupAttributeDesc_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_XiuzhenGb_lvlup::kMIdFieldNumber;
const int E_XiuzhenGb_lvlup::kMNeedenergyFieldNumber;
const int E_XiuzhenGb_lvlup::kMItemFieldNumber;
const int E_XiuzhenGb_lvlup::kMAttributeFieldNumber;
#endif  // !_MSC_VER

E_XiuzhenGb_lvlup::E_XiuzhenGb_lvlup()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_XiuzhenGb_lvlup::InitAsDefaultInstance() {
}

E_XiuzhenGb_lvlup::E_XiuzhenGb_lvlup(const E_XiuzhenGb_lvlup& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_XiuzhenGb_lvlup::SharedCtor() {
  _cached_size_ = 0;
  m_id_ = 0;
  m_needenergy_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_XiuzhenGb_lvlup::~E_XiuzhenGb_lvlup() {
  SharedDtor();
}

void E_XiuzhenGb_lvlup::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_XiuzhenGb_lvlup::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_XiuzhenGb_lvlup::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_XiuzhenGb_lvlup_descriptor_;
}

const E_XiuzhenGb_lvlup& E_XiuzhenGb_lvlup::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fXiuzhen_2eproto();
  return *default_instance_;
}

E_XiuzhenGb_lvlup* E_XiuzhenGb_lvlup::default_instance_ = NULL;

E_XiuzhenGb_lvlup* E_XiuzhenGb_lvlup::New() const {
  return new E_XiuzhenGb_lvlup;
}

void E_XiuzhenGb_lvlup::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_id_ = 0;
    m_needenergy_ = 0;
  }
  m_item_.Clear();
  m_attribute_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_XiuzhenGb_lvlup::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_id_)));
          set_has_m_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_needenergy;
        break;
      }

      // optional int32 m_needenergy = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_needenergy:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_needenergy_)));
          set_has_m_needenergy();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_m_item;
        break;
      }

      // repeated .proto_ff.E_XiuzhenGb_lvlupItemDesc m_item = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_item:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_m_item()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_m_item;
        if (input->ExpectTag(34)) goto parse_m_attribute;
        break;
      }

      // repeated .proto_ff.E_XiuzhenGb_lvlupAttributeDesc m_attribute = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_attribute:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_m_attribute()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_m_attribute;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_XiuzhenGb_lvlup::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_id(), output);
  }

  // optional int32 m_needenergy = 2;
  if (has_m_needenergy()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_needenergy(), output);
  }

  // repeated .proto_ff.E_XiuzhenGb_lvlupItemDesc m_item = 3;
  for (int i = 0; i < this->m_item_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->m_item(i), output);
  }

  // repeated .proto_ff.E_XiuzhenGb_lvlupAttributeDesc m_attribute = 4;
  for (int i = 0; i < this->m_attribute_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->m_attribute(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_XiuzhenGb_lvlup::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_id(), target);
  }

  // optional int32 m_needenergy = 2;
  if (has_m_needenergy()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_needenergy(), target);
  }

  // repeated .proto_ff.E_XiuzhenGb_lvlupItemDesc m_item = 3;
  for (int i = 0; i < this->m_item_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->m_item(i), target);
  }

  // repeated .proto_ff.E_XiuzhenGb_lvlupAttributeDesc m_attribute = 4;
  for (int i = 0; i < this->m_attribute_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->m_attribute(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_XiuzhenGb_lvlup::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_id = 1;
    if (has_m_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_id());
    }

    // optional int32 m_needenergy = 2;
    if (has_m_needenergy()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_needenergy());
    }

  }
  // repeated .proto_ff.E_XiuzhenGb_lvlupItemDesc m_item = 3;
  total_size += 1 * this->m_item_size();
  for (int i = 0; i < this->m_item_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->m_item(i));
  }

  // repeated .proto_ff.E_XiuzhenGb_lvlupAttributeDesc m_attribute = 4;
  total_size += 1 * this->m_attribute_size();
  for (int i = 0; i < this->m_attribute_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->m_attribute(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_XiuzhenGb_lvlup::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_XiuzhenGb_lvlup* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_XiuzhenGb_lvlup*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_XiuzhenGb_lvlup::MergeFrom(const E_XiuzhenGb_lvlup& from) {
  GOOGLE_CHECK_NE(&from, this);
  m_item_.MergeFrom(from.m_item_);
  m_attribute_.MergeFrom(from.m_attribute_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_id()) {
      set_m_id(from.m_id());
    }
    if (from.has_m_needenergy()) {
      set_m_needenergy(from.m_needenergy());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_XiuzhenGb_lvlup::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_XiuzhenGb_lvlup::CopyFrom(const E_XiuzhenGb_lvlup& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_XiuzhenGb_lvlup::IsInitialized() const {

  return true;
}

void E_XiuzhenGb_lvlup::Swap(E_XiuzhenGb_lvlup* other) {
  if (other != this) {
    std::swap(m_id_, other->m_id_);
    std::swap(m_needenergy_, other->m_needenergy_);
    m_item_.Swap(&other->m_item_);
    m_attribute_.Swap(&other->m_attribute_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_XiuzhenGb_lvlup::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_XiuzhenGb_lvlup_descriptor_;
  metadata.reflection = E_XiuzhenGb_lvlup_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_XiuzhenGb_lvlup::kEXiuzhenGbLvlupListFieldNumber;
#endif  // !_MSC_VER

Sheet_XiuzhenGb_lvlup::Sheet_XiuzhenGb_lvlup()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_XiuzhenGb_lvlup::InitAsDefaultInstance() {
}

Sheet_XiuzhenGb_lvlup::Sheet_XiuzhenGb_lvlup(const Sheet_XiuzhenGb_lvlup& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_XiuzhenGb_lvlup::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_XiuzhenGb_lvlup::~Sheet_XiuzhenGb_lvlup() {
  SharedDtor();
}

void Sheet_XiuzhenGb_lvlup::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_XiuzhenGb_lvlup::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_XiuzhenGb_lvlup::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_XiuzhenGb_lvlup_descriptor_;
}

const Sheet_XiuzhenGb_lvlup& Sheet_XiuzhenGb_lvlup::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fXiuzhen_2eproto();
  return *default_instance_;
}

Sheet_XiuzhenGb_lvlup* Sheet_XiuzhenGb_lvlup::default_instance_ = NULL;

Sheet_XiuzhenGb_lvlup* Sheet_XiuzhenGb_lvlup::New() const {
  return new Sheet_XiuzhenGb_lvlup;
}

void Sheet_XiuzhenGb_lvlup::Clear() {
  e_xiuzhengb_lvlup_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_XiuzhenGb_lvlup::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.E_XiuzhenGb_lvlup E_XiuzhenGb_lvlup_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_E_XiuzhenGb_lvlup_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_e_xiuzhengb_lvlup_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_E_XiuzhenGb_lvlup_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_XiuzhenGb_lvlup::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.E_XiuzhenGb_lvlup E_XiuzhenGb_lvlup_List = 1;
  for (int i = 0; i < this->e_xiuzhengb_lvlup_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->e_xiuzhengb_lvlup_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_XiuzhenGb_lvlup::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.E_XiuzhenGb_lvlup E_XiuzhenGb_lvlup_List = 1;
  for (int i = 0; i < this->e_xiuzhengb_lvlup_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->e_xiuzhengb_lvlup_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_XiuzhenGb_lvlup::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.E_XiuzhenGb_lvlup E_XiuzhenGb_lvlup_List = 1;
  total_size += 1 * this->e_xiuzhengb_lvlup_list_size();
  for (int i = 0; i < this->e_xiuzhengb_lvlup_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->e_xiuzhengb_lvlup_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_XiuzhenGb_lvlup::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_XiuzhenGb_lvlup* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_XiuzhenGb_lvlup*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_XiuzhenGb_lvlup::MergeFrom(const Sheet_XiuzhenGb_lvlup& from) {
  GOOGLE_CHECK_NE(&from, this);
  e_xiuzhengb_lvlup_list_.MergeFrom(from.e_xiuzhengb_lvlup_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_XiuzhenGb_lvlup::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_XiuzhenGb_lvlup::CopyFrom(const Sheet_XiuzhenGb_lvlup& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_XiuzhenGb_lvlup::IsInitialized() const {

  return true;
}

void Sheet_XiuzhenGb_lvlup::Swap(Sheet_XiuzhenGb_lvlup* other) {
  if (other != this) {
    e_xiuzhengb_lvlup_list_.Swap(&other->e_xiuzhengb_lvlup_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_XiuzhenGb_lvlup::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_XiuzhenGb_lvlup_descriptor_;
  metadata.reflection = Sheet_XiuzhenGb_lvlup_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_XiuzhenEvolveItemDesc::kMNumFieldNumber;
const int E_XiuzhenEvolveItemDesc::kMIdFieldNumber;
#endif  // !_MSC_VER

E_XiuzhenEvolveItemDesc::E_XiuzhenEvolveItemDesc()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_XiuzhenEvolveItemDesc::InitAsDefaultInstance() {
}

E_XiuzhenEvolveItemDesc::E_XiuzhenEvolveItemDesc(const E_XiuzhenEvolveItemDesc& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_XiuzhenEvolveItemDesc::SharedCtor() {
  _cached_size_ = 0;
  m_num_ = GOOGLE_LONGLONG(0);
  m_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_XiuzhenEvolveItemDesc::~E_XiuzhenEvolveItemDesc() {
  SharedDtor();
}

void E_XiuzhenEvolveItemDesc::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_XiuzhenEvolveItemDesc::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_XiuzhenEvolveItemDesc::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_XiuzhenEvolveItemDesc_descriptor_;
}

const E_XiuzhenEvolveItemDesc& E_XiuzhenEvolveItemDesc::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fXiuzhen_2eproto();
  return *default_instance_;
}

E_XiuzhenEvolveItemDesc* E_XiuzhenEvolveItemDesc::default_instance_ = NULL;

E_XiuzhenEvolveItemDesc* E_XiuzhenEvolveItemDesc::New() const {
  return new E_XiuzhenEvolveItemDesc;
}

void E_XiuzhenEvolveItemDesc::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_num_ = GOOGLE_LONGLONG(0);
    m_id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_XiuzhenEvolveItemDesc::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 m_num = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &m_num_)));
          set_has_m_num();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_id;
        break;
      }

      // optional int32 m_id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_id_)));
          set_has_m_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_XiuzhenEvolveItemDesc::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 m_num = 1;
  if (has_m_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->m_num(), output);
  }

  // optional int32 m_id = 2;
  if (has_m_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_XiuzhenEvolveItemDesc::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 m_num = 1;
  if (has_m_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->m_num(), target);
  }

  // optional int32 m_id = 2;
  if (has_m_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_XiuzhenEvolveItemDesc::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 m_num = 1;
    if (has_m_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->m_num());
    }

    // optional int32 m_id = 2;
    if (has_m_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_id());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_XiuzhenEvolveItemDesc::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_XiuzhenEvolveItemDesc* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_XiuzhenEvolveItemDesc*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_XiuzhenEvolveItemDesc::MergeFrom(const E_XiuzhenEvolveItemDesc& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_num()) {
      set_m_num(from.m_num());
    }
    if (from.has_m_id()) {
      set_m_id(from.m_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_XiuzhenEvolveItemDesc::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_XiuzhenEvolveItemDesc::CopyFrom(const E_XiuzhenEvolveItemDesc& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_XiuzhenEvolveItemDesc::IsInitialized() const {

  return true;
}

void E_XiuzhenEvolveItemDesc::Swap(E_XiuzhenEvolveItemDesc* other) {
  if (other != this) {
    std::swap(m_num_, other->m_num_);
    std::swap(m_id_, other->m_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_XiuzhenEvolveItemDesc::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_XiuzhenEvolveItemDesc_descriptor_;
  metadata.reflection = E_XiuzhenEvolveItemDesc_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_XiuzhenEvolveAttributeDesc::kMValueFieldNumber;
const int E_XiuzhenEvolveAttributeDesc::kMIdFieldNumber;
#endif  // !_MSC_VER

E_XiuzhenEvolveAttributeDesc::E_XiuzhenEvolveAttributeDesc()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_XiuzhenEvolveAttributeDesc::InitAsDefaultInstance() {
}

E_XiuzhenEvolveAttributeDesc::E_XiuzhenEvolveAttributeDesc(const E_XiuzhenEvolveAttributeDesc& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_XiuzhenEvolveAttributeDesc::SharedCtor() {
  _cached_size_ = 0;
  m_value_ = GOOGLE_LONGLONG(0);
  m_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_XiuzhenEvolveAttributeDesc::~E_XiuzhenEvolveAttributeDesc() {
  SharedDtor();
}

void E_XiuzhenEvolveAttributeDesc::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_XiuzhenEvolveAttributeDesc::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_XiuzhenEvolveAttributeDesc::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_XiuzhenEvolveAttributeDesc_descriptor_;
}

const E_XiuzhenEvolveAttributeDesc& E_XiuzhenEvolveAttributeDesc::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fXiuzhen_2eproto();
  return *default_instance_;
}

E_XiuzhenEvolveAttributeDesc* E_XiuzhenEvolveAttributeDesc::default_instance_ = NULL;

E_XiuzhenEvolveAttributeDesc* E_XiuzhenEvolveAttributeDesc::New() const {
  return new E_XiuzhenEvolveAttributeDesc;
}

void E_XiuzhenEvolveAttributeDesc::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_value_ = GOOGLE_LONGLONG(0);
    m_id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_XiuzhenEvolveAttributeDesc::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 m_value = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &m_value_)));
          set_has_m_value();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_id;
        break;
      }

      // optional int32 m_id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_id_)));
          set_has_m_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_XiuzhenEvolveAttributeDesc::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 m_value = 1;
  if (has_m_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->m_value(), output);
  }

  // optional int32 m_id = 2;
  if (has_m_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_XiuzhenEvolveAttributeDesc::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 m_value = 1;
  if (has_m_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->m_value(), target);
  }

  // optional int32 m_id = 2;
  if (has_m_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_XiuzhenEvolveAttributeDesc::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 m_value = 1;
    if (has_m_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->m_value());
    }

    // optional int32 m_id = 2;
    if (has_m_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_id());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_XiuzhenEvolveAttributeDesc::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_XiuzhenEvolveAttributeDesc* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_XiuzhenEvolveAttributeDesc*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_XiuzhenEvolveAttributeDesc::MergeFrom(const E_XiuzhenEvolveAttributeDesc& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_value()) {
      set_m_value(from.m_value());
    }
    if (from.has_m_id()) {
      set_m_id(from.m_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_XiuzhenEvolveAttributeDesc::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_XiuzhenEvolveAttributeDesc::CopyFrom(const E_XiuzhenEvolveAttributeDesc& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_XiuzhenEvolveAttributeDesc::IsInitialized() const {

  return true;
}

void E_XiuzhenEvolveAttributeDesc::Swap(E_XiuzhenEvolveAttributeDesc* other) {
  if (other != this) {
    std::swap(m_value_, other->m_value_);
    std::swap(m_id_, other->m_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_XiuzhenEvolveAttributeDesc::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_XiuzhenEvolveAttributeDesc_descriptor_;
  metadata.reflection = E_XiuzhenEvolveAttributeDesc_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_XiuzhenEvolve::kMIdFieldNumber;
const int E_XiuzhenEvolve::kMNeedxwFieldNumber;
const int E_XiuzhenEvolve::kMSuccessRateFieldNumber;
const int E_XiuzhenEvolve::kMBlessingFieldNumber;
const int E_XiuzhenEvolve::kMSpecialattriidFieldNumber;
const int E_XiuzhenEvolve::kMSpecialattrivalueFieldNumber;
const int E_XiuzhenEvolve::kMLinggenFieldNumber;
const int E_XiuzhenEvolve::kMItemFieldNumber;
const int E_XiuzhenEvolve::kMAttributeFieldNumber;
#endif  // !_MSC_VER

E_XiuzhenEvolve::E_XiuzhenEvolve()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_XiuzhenEvolve::InitAsDefaultInstance() {
}

E_XiuzhenEvolve::E_XiuzhenEvolve(const E_XiuzhenEvolve& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_XiuzhenEvolve::SharedCtor() {
  _cached_size_ = 0;
  m_id_ = 0;
  m_needxw_ = GOOGLE_LONGLONG(0);
  m_success_rate_ = 0;
  m_blessing_ = 0;
  m_specialattriid_ = 0;
  m_specialattrivalue_ = GOOGLE_LONGLONG(0);
  m_linggen_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_XiuzhenEvolve::~E_XiuzhenEvolve() {
  SharedDtor();
}

void E_XiuzhenEvolve::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_XiuzhenEvolve::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_XiuzhenEvolve::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_XiuzhenEvolve_descriptor_;
}

const E_XiuzhenEvolve& E_XiuzhenEvolve::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fXiuzhen_2eproto();
  return *default_instance_;
}

E_XiuzhenEvolve* E_XiuzhenEvolve::default_instance_ = NULL;

E_XiuzhenEvolve* E_XiuzhenEvolve::New() const {
  return new E_XiuzhenEvolve;
}

void E_XiuzhenEvolve::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_id_ = 0;
    m_needxw_ = GOOGLE_LONGLONG(0);
    m_success_rate_ = 0;
    m_blessing_ = 0;
    m_specialattriid_ = 0;
    m_specialattrivalue_ = GOOGLE_LONGLONG(0);
    m_linggen_ = 0;
  }
  m_item_.Clear();
  m_attribute_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_XiuzhenEvolve::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_id_)));
          set_has_m_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_needxw;
        break;
      }

      // optional int64 m_needxw = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_needxw:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &m_needxw_)));
          set_has_m_needxw();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_m_success_rate;
        break;
      }

      // optional int32 m_success_rate = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_success_rate:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_success_rate_)));
          set_has_m_success_rate();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_m_blessing;
        break;
      }

      // optional int32 m_blessing = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_blessing:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_blessing_)));
          set_has_m_blessing();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_m_specialattriid;
        break;
      }

      // optional int32 m_specialattriid = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_specialattriid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_specialattriid_)));
          set_has_m_specialattriid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_m_specialattrivalue;
        break;
      }

      // optional int64 m_specialattrivalue = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_specialattrivalue:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &m_specialattrivalue_)));
          set_has_m_specialattrivalue();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_m_linggen;
        break;
      }

      // optional int32 m_linggen = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_linggen:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_linggen_)));
          set_has_m_linggen();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(66)) goto parse_m_item;
        break;
      }

      // repeated .proto_ff.E_XiuzhenEvolveItemDesc m_item = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_item:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_m_item()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(66)) goto parse_m_item;
        if (input->ExpectTag(74)) goto parse_m_attribute;
        break;
      }

      // repeated .proto_ff.E_XiuzhenEvolveAttributeDesc m_attribute = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_attribute:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_m_attribute()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(74)) goto parse_m_attribute;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_XiuzhenEvolve::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_id(), output);
  }

  // optional int64 m_needxw = 2;
  if (has_m_needxw()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->m_needxw(), output);
  }

  // optional int32 m_success_rate = 3;
  if (has_m_success_rate()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->m_success_rate(), output);
  }

  // optional int32 m_blessing = 4;
  if (has_m_blessing()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->m_blessing(), output);
  }

  // optional int32 m_specialattriid = 5;
  if (has_m_specialattriid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->m_specialattriid(), output);
  }

  // optional int64 m_specialattrivalue = 6;
  if (has_m_specialattrivalue()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(6, this->m_specialattrivalue(), output);
  }

  // optional int32 m_linggen = 7;
  if (has_m_linggen()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->m_linggen(), output);
  }

  // repeated .proto_ff.E_XiuzhenEvolveItemDesc m_item = 8;
  for (int i = 0; i < this->m_item_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->m_item(i), output);
  }

  // repeated .proto_ff.E_XiuzhenEvolveAttributeDesc m_attribute = 9;
  for (int i = 0; i < this->m_attribute_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->m_attribute(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_XiuzhenEvolve::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_id(), target);
  }

  // optional int64 m_needxw = 2;
  if (has_m_needxw()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->m_needxw(), target);
  }

  // optional int32 m_success_rate = 3;
  if (has_m_success_rate()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->m_success_rate(), target);
  }

  // optional int32 m_blessing = 4;
  if (has_m_blessing()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->m_blessing(), target);
  }

  // optional int32 m_specialattriid = 5;
  if (has_m_specialattriid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->m_specialattriid(), target);
  }

  // optional int64 m_specialattrivalue = 6;
  if (has_m_specialattrivalue()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(6, this->m_specialattrivalue(), target);
  }

  // optional int32 m_linggen = 7;
  if (has_m_linggen()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->m_linggen(), target);
  }

  // repeated .proto_ff.E_XiuzhenEvolveItemDesc m_item = 8;
  for (int i = 0; i < this->m_item_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        8, this->m_item(i), target);
  }

  // repeated .proto_ff.E_XiuzhenEvolveAttributeDesc m_attribute = 9;
  for (int i = 0; i < this->m_attribute_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        9, this->m_attribute(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_XiuzhenEvolve::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_id = 1;
    if (has_m_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_id());
    }

    // optional int64 m_needxw = 2;
    if (has_m_needxw()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->m_needxw());
    }

    // optional int32 m_success_rate = 3;
    if (has_m_success_rate()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_success_rate());
    }

    // optional int32 m_blessing = 4;
    if (has_m_blessing()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_blessing());
    }

    // optional int32 m_specialattriid = 5;
    if (has_m_specialattriid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_specialattriid());
    }

    // optional int64 m_specialattrivalue = 6;
    if (has_m_specialattrivalue()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->m_specialattrivalue());
    }

    // optional int32 m_linggen = 7;
    if (has_m_linggen()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_linggen());
    }

  }
  // repeated .proto_ff.E_XiuzhenEvolveItemDesc m_item = 8;
  total_size += 1 * this->m_item_size();
  for (int i = 0; i < this->m_item_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->m_item(i));
  }

  // repeated .proto_ff.E_XiuzhenEvolveAttributeDesc m_attribute = 9;
  total_size += 1 * this->m_attribute_size();
  for (int i = 0; i < this->m_attribute_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->m_attribute(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_XiuzhenEvolve::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_XiuzhenEvolve* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_XiuzhenEvolve*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_XiuzhenEvolve::MergeFrom(const E_XiuzhenEvolve& from) {
  GOOGLE_CHECK_NE(&from, this);
  m_item_.MergeFrom(from.m_item_);
  m_attribute_.MergeFrom(from.m_attribute_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_id()) {
      set_m_id(from.m_id());
    }
    if (from.has_m_needxw()) {
      set_m_needxw(from.m_needxw());
    }
    if (from.has_m_success_rate()) {
      set_m_success_rate(from.m_success_rate());
    }
    if (from.has_m_blessing()) {
      set_m_blessing(from.m_blessing());
    }
    if (from.has_m_specialattriid()) {
      set_m_specialattriid(from.m_specialattriid());
    }
    if (from.has_m_specialattrivalue()) {
      set_m_specialattrivalue(from.m_specialattrivalue());
    }
    if (from.has_m_linggen()) {
      set_m_linggen(from.m_linggen());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_XiuzhenEvolve::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_XiuzhenEvolve::CopyFrom(const E_XiuzhenEvolve& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_XiuzhenEvolve::IsInitialized() const {

  return true;
}

void E_XiuzhenEvolve::Swap(E_XiuzhenEvolve* other) {
  if (other != this) {
    std::swap(m_id_, other->m_id_);
    std::swap(m_needxw_, other->m_needxw_);
    std::swap(m_success_rate_, other->m_success_rate_);
    std::swap(m_blessing_, other->m_blessing_);
    std::swap(m_specialattriid_, other->m_specialattriid_);
    std::swap(m_specialattrivalue_, other->m_specialattrivalue_);
    std::swap(m_linggen_, other->m_linggen_);
    m_item_.Swap(&other->m_item_);
    m_attribute_.Swap(&other->m_attribute_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_XiuzhenEvolve::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_XiuzhenEvolve_descriptor_;
  metadata.reflection = E_XiuzhenEvolve_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_XiuzhenEvolve::kEXiuzhenEvolveListFieldNumber;
#endif  // !_MSC_VER

Sheet_XiuzhenEvolve::Sheet_XiuzhenEvolve()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_XiuzhenEvolve::InitAsDefaultInstance() {
}

Sheet_XiuzhenEvolve::Sheet_XiuzhenEvolve(const Sheet_XiuzhenEvolve& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_XiuzhenEvolve::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_XiuzhenEvolve::~Sheet_XiuzhenEvolve() {
  SharedDtor();
}

void Sheet_XiuzhenEvolve::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_XiuzhenEvolve::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_XiuzhenEvolve::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_XiuzhenEvolve_descriptor_;
}

const Sheet_XiuzhenEvolve& Sheet_XiuzhenEvolve::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fXiuzhen_2eproto();
  return *default_instance_;
}

Sheet_XiuzhenEvolve* Sheet_XiuzhenEvolve::default_instance_ = NULL;

Sheet_XiuzhenEvolve* Sheet_XiuzhenEvolve::New() const {
  return new Sheet_XiuzhenEvolve;
}

void Sheet_XiuzhenEvolve::Clear() {
  e_xiuzhenevolve_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_XiuzhenEvolve::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.E_XiuzhenEvolve E_XiuzhenEvolve_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_E_XiuzhenEvolve_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_e_xiuzhenevolve_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_E_XiuzhenEvolve_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_XiuzhenEvolve::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.E_XiuzhenEvolve E_XiuzhenEvolve_List = 1;
  for (int i = 0; i < this->e_xiuzhenevolve_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->e_xiuzhenevolve_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_XiuzhenEvolve::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.E_XiuzhenEvolve E_XiuzhenEvolve_List = 1;
  for (int i = 0; i < this->e_xiuzhenevolve_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->e_xiuzhenevolve_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_XiuzhenEvolve::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.E_XiuzhenEvolve E_XiuzhenEvolve_List = 1;
  total_size += 1 * this->e_xiuzhenevolve_list_size();
  for (int i = 0; i < this->e_xiuzhenevolve_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->e_xiuzhenevolve_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_XiuzhenEvolve::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_XiuzhenEvolve* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_XiuzhenEvolve*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_XiuzhenEvolve::MergeFrom(const Sheet_XiuzhenEvolve& from) {
  GOOGLE_CHECK_NE(&from, this);
  e_xiuzhenevolve_list_.MergeFrom(from.e_xiuzhenevolve_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_XiuzhenEvolve::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_XiuzhenEvolve::CopyFrom(const Sheet_XiuzhenEvolve& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_XiuzhenEvolve::IsInitialized() const {

  return true;
}

void Sheet_XiuzhenEvolve::Swap(Sheet_XiuzhenEvolve* other) {
  if (other != this) {
    e_xiuzhenevolve_list_.Swap(&other->e_xiuzhenevolve_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_XiuzhenEvolve::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_XiuzhenEvolve_descriptor_;
  metadata.reflection = Sheet_XiuzhenEvolve_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_XiuzhenLgtypesAttriDesc::kMEpaFieldNumber;
const int E_XiuzhenLgtypesAttriDesc::kMNpFieldNumber;
const int E_XiuzhenLgtypesAttriDesc::kMValueFieldNumber;
const int E_XiuzhenLgtypesAttriDesc::kMIdFieldNumber;
#endif  // !_MSC_VER

E_XiuzhenLgtypesAttriDesc::E_XiuzhenLgtypesAttriDesc()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_XiuzhenLgtypesAttriDesc::InitAsDefaultInstance() {
}

E_XiuzhenLgtypesAttriDesc::E_XiuzhenLgtypesAttriDesc(const E_XiuzhenLgtypesAttriDesc& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_XiuzhenLgtypesAttriDesc::SharedCtor() {
  _cached_size_ = 0;
  m_epa_ = 0;
  m_np_ = 0;
  m_value_ = 0;
  m_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_XiuzhenLgtypesAttriDesc::~E_XiuzhenLgtypesAttriDesc() {
  SharedDtor();
}

void E_XiuzhenLgtypesAttriDesc::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_XiuzhenLgtypesAttriDesc::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_XiuzhenLgtypesAttriDesc::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_XiuzhenLgtypesAttriDesc_descriptor_;
}

const E_XiuzhenLgtypesAttriDesc& E_XiuzhenLgtypesAttriDesc::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fXiuzhen_2eproto();
  return *default_instance_;
}

E_XiuzhenLgtypesAttriDesc* E_XiuzhenLgtypesAttriDesc::default_instance_ = NULL;

E_XiuzhenLgtypesAttriDesc* E_XiuzhenLgtypesAttriDesc::New() const {
  return new E_XiuzhenLgtypesAttriDesc;
}

void E_XiuzhenLgtypesAttriDesc::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_epa_ = 0;
    m_np_ = 0;
    m_value_ = 0;
    m_id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_XiuzhenLgtypesAttriDesc::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_epa = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_epa_)));
          set_has_m_epa();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_np;
        break;
      }

      // optional int32 m_np = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_np:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_np_)));
          set_has_m_np();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_m_value;
        break;
      }

      // optional int32 m_value = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_value:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_value_)));
          set_has_m_value();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_m_id;
        break;
      }

      // optional int32 m_id = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_id_)));
          set_has_m_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_XiuzhenLgtypesAttriDesc::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_epa = 1;
  if (has_m_epa()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_epa(), output);
  }

  // optional int32 m_np = 2;
  if (has_m_np()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_np(), output);
  }

  // optional int32 m_value = 3;
  if (has_m_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->m_value(), output);
  }

  // optional int32 m_id = 4;
  if (has_m_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->m_id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_XiuzhenLgtypesAttriDesc::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_epa = 1;
  if (has_m_epa()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_epa(), target);
  }

  // optional int32 m_np = 2;
  if (has_m_np()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_np(), target);
  }

  // optional int32 m_value = 3;
  if (has_m_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->m_value(), target);
  }

  // optional int32 m_id = 4;
  if (has_m_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->m_id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_XiuzhenLgtypesAttriDesc::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_epa = 1;
    if (has_m_epa()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_epa());
    }

    // optional int32 m_np = 2;
    if (has_m_np()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_np());
    }

    // optional int32 m_value = 3;
    if (has_m_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_value());
    }

    // optional int32 m_id = 4;
    if (has_m_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_id());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_XiuzhenLgtypesAttriDesc::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_XiuzhenLgtypesAttriDesc* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_XiuzhenLgtypesAttriDesc*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_XiuzhenLgtypesAttriDesc::MergeFrom(const E_XiuzhenLgtypesAttriDesc& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_epa()) {
      set_m_epa(from.m_epa());
    }
    if (from.has_m_np()) {
      set_m_np(from.m_np());
    }
    if (from.has_m_value()) {
      set_m_value(from.m_value());
    }
    if (from.has_m_id()) {
      set_m_id(from.m_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_XiuzhenLgtypesAttriDesc::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_XiuzhenLgtypesAttriDesc::CopyFrom(const E_XiuzhenLgtypesAttriDesc& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_XiuzhenLgtypesAttriDesc::IsInitialized() const {

  return true;
}

void E_XiuzhenLgtypesAttriDesc::Swap(E_XiuzhenLgtypesAttriDesc* other) {
  if (other != this) {
    std::swap(m_epa_, other->m_epa_);
    std::swap(m_np_, other->m_np_);
    std::swap(m_value_, other->m_value_);
    std::swap(m_id_, other->m_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_XiuzhenLgtypesAttriDesc::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_XiuzhenLgtypesAttriDesc_descriptor_;
  metadata.reflection = E_XiuzhenLgtypesAttriDesc_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_XiuzhenLgtypesLgattDesc::kMValueFieldNumber;
const int E_XiuzhenLgtypesLgattDesc::kMLimFieldNumber;
const int E_XiuzhenLgtypesLgattDesc::kMTypeFieldNumber;
#endif  // !_MSC_VER

E_XiuzhenLgtypesLgattDesc::E_XiuzhenLgtypesLgattDesc()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_XiuzhenLgtypesLgattDesc::InitAsDefaultInstance() {
}

E_XiuzhenLgtypesLgattDesc::E_XiuzhenLgtypesLgattDesc(const E_XiuzhenLgtypesLgattDesc& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_XiuzhenLgtypesLgattDesc::SharedCtor() {
  _cached_size_ = 0;
  m_value_ = 0;
  m_lim_ = 0;
  m_type_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_XiuzhenLgtypesLgattDesc::~E_XiuzhenLgtypesLgattDesc() {
  SharedDtor();
}

void E_XiuzhenLgtypesLgattDesc::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_XiuzhenLgtypesLgattDesc::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_XiuzhenLgtypesLgattDesc::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_XiuzhenLgtypesLgattDesc_descriptor_;
}

const E_XiuzhenLgtypesLgattDesc& E_XiuzhenLgtypesLgattDesc::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fXiuzhen_2eproto();
  return *default_instance_;
}

E_XiuzhenLgtypesLgattDesc* E_XiuzhenLgtypesLgattDesc::default_instance_ = NULL;

E_XiuzhenLgtypesLgattDesc* E_XiuzhenLgtypesLgattDesc::New() const {
  return new E_XiuzhenLgtypesLgattDesc;
}

void E_XiuzhenLgtypesLgattDesc::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_value_ = 0;
    m_lim_ = 0;
    m_type_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_XiuzhenLgtypesLgattDesc::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_value = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_value_)));
          set_has_m_value();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_lim;
        break;
      }

      // optional int32 m_lim = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_lim:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_lim_)));
          set_has_m_lim();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_m_type;
        break;
      }

      // optional int32 m_type = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_type_)));
          set_has_m_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_XiuzhenLgtypesLgattDesc::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_value = 1;
  if (has_m_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_value(), output);
  }

  // optional int32 m_lim = 2;
  if (has_m_lim()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_lim(), output);
  }

  // optional int32 m_type = 3;
  if (has_m_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->m_type(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_XiuzhenLgtypesLgattDesc::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_value = 1;
  if (has_m_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_value(), target);
  }

  // optional int32 m_lim = 2;
  if (has_m_lim()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_lim(), target);
  }

  // optional int32 m_type = 3;
  if (has_m_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->m_type(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_XiuzhenLgtypesLgattDesc::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_value = 1;
    if (has_m_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_value());
    }

    // optional int32 m_lim = 2;
    if (has_m_lim()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_lim());
    }

    // optional int32 m_type = 3;
    if (has_m_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_type());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_XiuzhenLgtypesLgattDesc::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_XiuzhenLgtypesLgattDesc* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_XiuzhenLgtypesLgattDesc*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_XiuzhenLgtypesLgattDesc::MergeFrom(const E_XiuzhenLgtypesLgattDesc& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_value()) {
      set_m_value(from.m_value());
    }
    if (from.has_m_lim()) {
      set_m_lim(from.m_lim());
    }
    if (from.has_m_type()) {
      set_m_type(from.m_type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_XiuzhenLgtypesLgattDesc::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_XiuzhenLgtypesLgattDesc::CopyFrom(const E_XiuzhenLgtypesLgattDesc& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_XiuzhenLgtypesLgattDesc::IsInitialized() const {

  return true;
}

void E_XiuzhenLgtypesLgattDesc::Swap(E_XiuzhenLgtypesLgattDesc* other) {
  if (other != this) {
    std::swap(m_value_, other->m_value_);
    std::swap(m_lim_, other->m_lim_);
    std::swap(m_type_, other->m_type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_XiuzhenLgtypesLgattDesc::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_XiuzhenLgtypesLgattDesc_descriptor_;
  metadata.reflection = E_XiuzhenLgtypesLgattDesc_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_XiuzhenLgtypes::kMIdFieldNumber;
const int E_XiuzhenLgtypes::kMNameFieldNumber;
const int E_XiuzhenLgtypes::kMShortnameFieldNumber;
const int E_XiuzhenLgtypes::kMNamecolorFieldNumber;
const int E_XiuzhenLgtypes::kMBookmodelFieldNumber;
const int E_XiuzhenLgtypes::kMBodymodelFieldNumber;
const int E_XiuzhenLgtypes::kMUnlockbookFieldNumber;
const int E_XiuzhenLgtypes::kMBookcountFieldNumber;
const int E_XiuzhenLgtypes::kMAddpointsFieldNumber;
const int E_XiuzhenLgtypes::kMAttriFieldNumber;
const int E_XiuzhenLgtypes::kMLgattFieldNumber;
#endif  // !_MSC_VER

E_XiuzhenLgtypes::E_XiuzhenLgtypes()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_XiuzhenLgtypes::InitAsDefaultInstance() {
}

E_XiuzhenLgtypes::E_XiuzhenLgtypes(const E_XiuzhenLgtypes& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_XiuzhenLgtypes::SharedCtor() {
  _cached_size_ = 0;
  m_id_ = 0;
  m_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  m_shortname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  m_namecolor_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  m_bookmodel_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  m_bodymodel_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  m_unlockbook_ = 0;
  m_bookcount_ = 0;
  m_addpoints_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_XiuzhenLgtypes::~E_XiuzhenLgtypes() {
  SharedDtor();
}

void E_XiuzhenLgtypes::SharedDtor() {
  if (m_name_ != &::google::protobuf::internal::kEmptyString) {
    delete m_name_;
  }
  if (m_shortname_ != &::google::protobuf::internal::kEmptyString) {
    delete m_shortname_;
  }
  if (m_namecolor_ != &::google::protobuf::internal::kEmptyString) {
    delete m_namecolor_;
  }
  if (m_bookmodel_ != &::google::protobuf::internal::kEmptyString) {
    delete m_bookmodel_;
  }
  if (m_bodymodel_ != &::google::protobuf::internal::kEmptyString) {
    delete m_bodymodel_;
  }
  if (this != default_instance_) {
  }
}

void E_XiuzhenLgtypes::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_XiuzhenLgtypes::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_XiuzhenLgtypes_descriptor_;
}

const E_XiuzhenLgtypes& E_XiuzhenLgtypes::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fXiuzhen_2eproto();
  return *default_instance_;
}

E_XiuzhenLgtypes* E_XiuzhenLgtypes::default_instance_ = NULL;

E_XiuzhenLgtypes* E_XiuzhenLgtypes::New() const {
  return new E_XiuzhenLgtypes;
}

void E_XiuzhenLgtypes::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_id_ = 0;
    if (has_m_name()) {
      if (m_name_ != &::google::protobuf::internal::kEmptyString) {
        m_name_->clear();
      }
    }
    if (has_m_shortname()) {
      if (m_shortname_ != &::google::protobuf::internal::kEmptyString) {
        m_shortname_->clear();
      }
    }
    if (has_m_namecolor()) {
      if (m_namecolor_ != &::google::protobuf::internal::kEmptyString) {
        m_namecolor_->clear();
      }
    }
    if (has_m_bookmodel()) {
      if (m_bookmodel_ != &::google::protobuf::internal::kEmptyString) {
        m_bookmodel_->clear();
      }
    }
    if (has_m_bodymodel()) {
      if (m_bodymodel_ != &::google::protobuf::internal::kEmptyString) {
        m_bodymodel_->clear();
      }
    }
    m_unlockbook_ = 0;
    m_bookcount_ = 0;
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    m_addpoints_ = 0;
  }
  m_attri_.Clear();
  m_lgatt_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_XiuzhenLgtypes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_id_)));
          set_has_m_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_m_name;
        break;
      }

      // optional string m_name = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_m_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->m_name().data(), this->m_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_m_shortname;
        break;
      }

      // optional string m_shortname = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_shortname:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_m_shortname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->m_shortname().data(), this->m_shortname().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_m_namecolor;
        break;
      }

      // optional string m_namecolor = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_namecolor:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_m_namecolor()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->m_namecolor().data(), this->m_namecolor().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_m_bookmodel;
        break;
      }

      // optional string m_bookmodel = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_bookmodel:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_m_bookmodel()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->m_bookmodel().data(), this->m_bookmodel().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_m_bodymodel;
        break;
      }

      // optional string m_bodymodel = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_bodymodel:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_m_bodymodel()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->m_bodymodel().data(), this->m_bodymodel().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_m_unlockbook;
        break;
      }

      // optional int32 m_unlockbook = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_unlockbook:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_unlockbook_)));
          set_has_m_unlockbook();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(64)) goto parse_m_bookcount;
        break;
      }

      // optional int32 m_bookcount = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_bookcount:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_bookcount_)));
          set_has_m_bookcount();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(72)) goto parse_m_addpoints;
        break;
      }

      // optional int32 m_addpoints = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_addpoints:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_addpoints_)));
          set_has_m_addpoints();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(82)) goto parse_m_attri;
        break;
      }

      // repeated .proto_ff.E_XiuzhenLgtypesAttriDesc m_attri = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_attri:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_m_attri()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(82)) goto parse_m_attri;
        if (input->ExpectTag(90)) goto parse_m_lgatt;
        break;
      }

      // repeated .proto_ff.E_XiuzhenLgtypesLgattDesc m_lgatt = 11;
      case 11: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_lgatt:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_m_lgatt()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(90)) goto parse_m_lgatt;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_XiuzhenLgtypes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_id(), output);
  }

  // optional string m_name = 2;
  if (has_m_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_name().data(), this->m_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->m_name(), output);
  }

  // optional string m_shortname = 3;
  if (has_m_shortname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_shortname().data(), this->m_shortname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->m_shortname(), output);
  }

  // optional string m_namecolor = 4;
  if (has_m_namecolor()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_namecolor().data(), this->m_namecolor().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->m_namecolor(), output);
  }

  // optional string m_bookmodel = 5;
  if (has_m_bookmodel()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_bookmodel().data(), this->m_bookmodel().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->m_bookmodel(), output);
  }

  // optional string m_bodymodel = 6;
  if (has_m_bodymodel()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_bodymodel().data(), this->m_bodymodel().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      6, this->m_bodymodel(), output);
  }

  // optional int32 m_unlockbook = 7;
  if (has_m_unlockbook()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->m_unlockbook(), output);
  }

  // optional int32 m_bookcount = 8;
  if (has_m_bookcount()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->m_bookcount(), output);
  }

  // optional int32 m_addpoints = 9;
  if (has_m_addpoints()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->m_addpoints(), output);
  }

  // repeated .proto_ff.E_XiuzhenLgtypesAttriDesc m_attri = 10;
  for (int i = 0; i < this->m_attri_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->m_attri(i), output);
  }

  // repeated .proto_ff.E_XiuzhenLgtypesLgattDesc m_lgatt = 11;
  for (int i = 0; i < this->m_lgatt_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, this->m_lgatt(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_XiuzhenLgtypes::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_id(), target);
  }

  // optional string m_name = 2;
  if (has_m_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_name().data(), this->m_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->m_name(), target);
  }

  // optional string m_shortname = 3;
  if (has_m_shortname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_shortname().data(), this->m_shortname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->m_shortname(), target);
  }

  // optional string m_namecolor = 4;
  if (has_m_namecolor()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_namecolor().data(), this->m_namecolor().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->m_namecolor(), target);
  }

  // optional string m_bookmodel = 5;
  if (has_m_bookmodel()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_bookmodel().data(), this->m_bookmodel().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->m_bookmodel(), target);
  }

  // optional string m_bodymodel = 6;
  if (has_m_bodymodel()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_bodymodel().data(), this->m_bodymodel().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->m_bodymodel(), target);
  }

  // optional int32 m_unlockbook = 7;
  if (has_m_unlockbook()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->m_unlockbook(), target);
  }

  // optional int32 m_bookcount = 8;
  if (has_m_bookcount()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->m_bookcount(), target);
  }

  // optional int32 m_addpoints = 9;
  if (has_m_addpoints()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->m_addpoints(), target);
  }

  // repeated .proto_ff.E_XiuzhenLgtypesAttriDesc m_attri = 10;
  for (int i = 0; i < this->m_attri_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        10, this->m_attri(i), target);
  }

  // repeated .proto_ff.E_XiuzhenLgtypesLgattDesc m_lgatt = 11;
  for (int i = 0; i < this->m_lgatt_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        11, this->m_lgatt(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_XiuzhenLgtypes::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_id = 1;
    if (has_m_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_id());
    }

    // optional string m_name = 2;
    if (has_m_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->m_name());
    }

    // optional string m_shortname = 3;
    if (has_m_shortname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->m_shortname());
    }

    // optional string m_namecolor = 4;
    if (has_m_namecolor()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->m_namecolor());
    }

    // optional string m_bookmodel = 5;
    if (has_m_bookmodel()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->m_bookmodel());
    }

    // optional string m_bodymodel = 6;
    if (has_m_bodymodel()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->m_bodymodel());
    }

    // optional int32 m_unlockbook = 7;
    if (has_m_unlockbook()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_unlockbook());
    }

    // optional int32 m_bookcount = 8;
    if (has_m_bookcount()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_bookcount());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional int32 m_addpoints = 9;
    if (has_m_addpoints()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_addpoints());
    }

  }
  // repeated .proto_ff.E_XiuzhenLgtypesAttriDesc m_attri = 10;
  total_size += 1 * this->m_attri_size();
  for (int i = 0; i < this->m_attri_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->m_attri(i));
  }

  // repeated .proto_ff.E_XiuzhenLgtypesLgattDesc m_lgatt = 11;
  total_size += 1 * this->m_lgatt_size();
  for (int i = 0; i < this->m_lgatt_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->m_lgatt(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_XiuzhenLgtypes::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_XiuzhenLgtypes* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_XiuzhenLgtypes*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_XiuzhenLgtypes::MergeFrom(const E_XiuzhenLgtypes& from) {
  GOOGLE_CHECK_NE(&from, this);
  m_attri_.MergeFrom(from.m_attri_);
  m_lgatt_.MergeFrom(from.m_lgatt_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_id()) {
      set_m_id(from.m_id());
    }
    if (from.has_m_name()) {
      set_m_name(from.m_name());
    }
    if (from.has_m_shortname()) {
      set_m_shortname(from.m_shortname());
    }
    if (from.has_m_namecolor()) {
      set_m_namecolor(from.m_namecolor());
    }
    if (from.has_m_bookmodel()) {
      set_m_bookmodel(from.m_bookmodel());
    }
    if (from.has_m_bodymodel()) {
      set_m_bodymodel(from.m_bodymodel());
    }
    if (from.has_m_unlockbook()) {
      set_m_unlockbook(from.m_unlockbook());
    }
    if (from.has_m_bookcount()) {
      set_m_bookcount(from.m_bookcount());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_m_addpoints()) {
      set_m_addpoints(from.m_addpoints());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_XiuzhenLgtypes::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_XiuzhenLgtypes::CopyFrom(const E_XiuzhenLgtypes& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_XiuzhenLgtypes::IsInitialized() const {

  return true;
}

void E_XiuzhenLgtypes::Swap(E_XiuzhenLgtypes* other) {
  if (other != this) {
    std::swap(m_id_, other->m_id_);
    std::swap(m_name_, other->m_name_);
    std::swap(m_shortname_, other->m_shortname_);
    std::swap(m_namecolor_, other->m_namecolor_);
    std::swap(m_bookmodel_, other->m_bookmodel_);
    std::swap(m_bodymodel_, other->m_bodymodel_);
    std::swap(m_unlockbook_, other->m_unlockbook_);
    std::swap(m_bookcount_, other->m_bookcount_);
    std::swap(m_addpoints_, other->m_addpoints_);
    m_attri_.Swap(&other->m_attri_);
    m_lgatt_.Swap(&other->m_lgatt_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_XiuzhenLgtypes::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_XiuzhenLgtypes_descriptor_;
  metadata.reflection = E_XiuzhenLgtypes_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_XiuzhenLgtypes::kEXiuzhenLgtypesListFieldNumber;
#endif  // !_MSC_VER

Sheet_XiuzhenLgtypes::Sheet_XiuzhenLgtypes()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_XiuzhenLgtypes::InitAsDefaultInstance() {
}

Sheet_XiuzhenLgtypes::Sheet_XiuzhenLgtypes(const Sheet_XiuzhenLgtypes& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_XiuzhenLgtypes::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_XiuzhenLgtypes::~Sheet_XiuzhenLgtypes() {
  SharedDtor();
}

void Sheet_XiuzhenLgtypes::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_XiuzhenLgtypes::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_XiuzhenLgtypes::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_XiuzhenLgtypes_descriptor_;
}

const Sheet_XiuzhenLgtypes& Sheet_XiuzhenLgtypes::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fXiuzhen_2eproto();
  return *default_instance_;
}

Sheet_XiuzhenLgtypes* Sheet_XiuzhenLgtypes::default_instance_ = NULL;

Sheet_XiuzhenLgtypes* Sheet_XiuzhenLgtypes::New() const {
  return new Sheet_XiuzhenLgtypes;
}

void Sheet_XiuzhenLgtypes::Clear() {
  e_xiuzhenlgtypes_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_XiuzhenLgtypes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.E_XiuzhenLgtypes E_XiuzhenLgtypes_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_E_XiuzhenLgtypes_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_e_xiuzhenlgtypes_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_E_XiuzhenLgtypes_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_XiuzhenLgtypes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.E_XiuzhenLgtypes E_XiuzhenLgtypes_List = 1;
  for (int i = 0; i < this->e_xiuzhenlgtypes_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->e_xiuzhenlgtypes_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_XiuzhenLgtypes::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.E_XiuzhenLgtypes E_XiuzhenLgtypes_List = 1;
  for (int i = 0; i < this->e_xiuzhenlgtypes_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->e_xiuzhenlgtypes_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_XiuzhenLgtypes::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.E_XiuzhenLgtypes E_XiuzhenLgtypes_List = 1;
  total_size += 1 * this->e_xiuzhenlgtypes_list_size();
  for (int i = 0; i < this->e_xiuzhenlgtypes_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->e_xiuzhenlgtypes_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_XiuzhenLgtypes::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_XiuzhenLgtypes* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_XiuzhenLgtypes*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_XiuzhenLgtypes::MergeFrom(const Sheet_XiuzhenLgtypes& from) {
  GOOGLE_CHECK_NE(&from, this);
  e_xiuzhenlgtypes_list_.MergeFrom(from.e_xiuzhenlgtypes_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_XiuzhenLgtypes::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_XiuzhenLgtypes::CopyFrom(const Sheet_XiuzhenLgtypes& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_XiuzhenLgtypes::IsInitialized() const {

  return true;
}

void Sheet_XiuzhenLgtypes::Swap(Sheet_XiuzhenLgtypes* other) {
  if (other != this) {
    e_xiuzhenlgtypes_list_.Swap(&other->e_xiuzhenlgtypes_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_XiuzhenLgtypes::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_XiuzhenLgtypes_descriptor_;
  metadata.reflection = Sheet_XiuzhenLgtypes_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_XiuzhenLglvlup::kMIdFieldNumber;
const int E_XiuzhenLglvlup::kMNeedxwFieldNumber;
#endif  // !_MSC_VER

E_XiuzhenLglvlup::E_XiuzhenLglvlup()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_XiuzhenLglvlup::InitAsDefaultInstance() {
}

E_XiuzhenLglvlup::E_XiuzhenLglvlup(const E_XiuzhenLglvlup& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_XiuzhenLglvlup::SharedCtor() {
  _cached_size_ = 0;
  m_id_ = 0;
  m_needxw_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_XiuzhenLglvlup::~E_XiuzhenLglvlup() {
  SharedDtor();
}

void E_XiuzhenLglvlup::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_XiuzhenLglvlup::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_XiuzhenLglvlup::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_XiuzhenLglvlup_descriptor_;
}

const E_XiuzhenLglvlup& E_XiuzhenLglvlup::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fXiuzhen_2eproto();
  return *default_instance_;
}

E_XiuzhenLglvlup* E_XiuzhenLglvlup::default_instance_ = NULL;

E_XiuzhenLglvlup* E_XiuzhenLglvlup::New() const {
  return new E_XiuzhenLglvlup;
}

void E_XiuzhenLglvlup::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_id_ = 0;
    m_needxw_ = GOOGLE_LONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_XiuzhenLglvlup::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_id_)));
          set_has_m_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_needxw;
        break;
      }

      // optional int64 m_needxw = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_needxw:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &m_needxw_)));
          set_has_m_needxw();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_XiuzhenLglvlup::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_id(), output);
  }

  // optional int64 m_needxw = 2;
  if (has_m_needxw()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->m_needxw(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_XiuzhenLglvlup::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_id(), target);
  }

  // optional int64 m_needxw = 2;
  if (has_m_needxw()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->m_needxw(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_XiuzhenLglvlup::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_id = 1;
    if (has_m_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_id());
    }

    // optional int64 m_needxw = 2;
    if (has_m_needxw()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->m_needxw());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_XiuzhenLglvlup::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_XiuzhenLglvlup* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_XiuzhenLglvlup*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_XiuzhenLglvlup::MergeFrom(const E_XiuzhenLglvlup& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_id()) {
      set_m_id(from.m_id());
    }
    if (from.has_m_needxw()) {
      set_m_needxw(from.m_needxw());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_XiuzhenLglvlup::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_XiuzhenLglvlup::CopyFrom(const E_XiuzhenLglvlup& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_XiuzhenLglvlup::IsInitialized() const {

  return true;
}

void E_XiuzhenLglvlup::Swap(E_XiuzhenLglvlup* other) {
  if (other != this) {
    std::swap(m_id_, other->m_id_);
    std::swap(m_needxw_, other->m_needxw_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_XiuzhenLglvlup::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_XiuzhenLglvlup_descriptor_;
  metadata.reflection = E_XiuzhenLglvlup_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_XiuzhenLglvlup::kEXiuzhenLglvlupListFieldNumber;
#endif  // !_MSC_VER

Sheet_XiuzhenLglvlup::Sheet_XiuzhenLglvlup()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_XiuzhenLglvlup::InitAsDefaultInstance() {
}

Sheet_XiuzhenLglvlup::Sheet_XiuzhenLglvlup(const Sheet_XiuzhenLglvlup& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_XiuzhenLglvlup::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_XiuzhenLglvlup::~Sheet_XiuzhenLglvlup() {
  SharedDtor();
}

void Sheet_XiuzhenLglvlup::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_XiuzhenLglvlup::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_XiuzhenLglvlup::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_XiuzhenLglvlup_descriptor_;
}

const Sheet_XiuzhenLglvlup& Sheet_XiuzhenLglvlup::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fXiuzhen_2eproto();
  return *default_instance_;
}

Sheet_XiuzhenLglvlup* Sheet_XiuzhenLglvlup::default_instance_ = NULL;

Sheet_XiuzhenLglvlup* Sheet_XiuzhenLglvlup::New() const {
  return new Sheet_XiuzhenLglvlup;
}

void Sheet_XiuzhenLglvlup::Clear() {
  e_xiuzhenlglvlup_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_XiuzhenLglvlup::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.E_XiuzhenLglvlup E_XiuzhenLglvlup_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_E_XiuzhenLglvlup_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_e_xiuzhenlglvlup_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_E_XiuzhenLglvlup_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_XiuzhenLglvlup::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.E_XiuzhenLglvlup E_XiuzhenLglvlup_List = 1;
  for (int i = 0; i < this->e_xiuzhenlglvlup_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->e_xiuzhenlglvlup_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_XiuzhenLglvlup::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.E_XiuzhenLglvlup E_XiuzhenLglvlup_List = 1;
  for (int i = 0; i < this->e_xiuzhenlglvlup_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->e_xiuzhenlglvlup_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_XiuzhenLglvlup::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.E_XiuzhenLglvlup E_XiuzhenLglvlup_List = 1;
  total_size += 1 * this->e_xiuzhenlglvlup_list_size();
  for (int i = 0; i < this->e_xiuzhenlglvlup_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->e_xiuzhenlglvlup_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_XiuzhenLglvlup::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_XiuzhenLglvlup* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_XiuzhenLglvlup*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_XiuzhenLglvlup::MergeFrom(const Sheet_XiuzhenLglvlup& from) {
  GOOGLE_CHECK_NE(&from, this);
  e_xiuzhenlglvlup_list_.MergeFrom(from.e_xiuzhenlglvlup_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_XiuzhenLglvlup::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_XiuzhenLglvlup::CopyFrom(const Sheet_XiuzhenLglvlup& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_XiuzhenLglvlup::IsInitialized() const {

  return true;
}

void Sheet_XiuzhenLglvlup::Swap(Sheet_XiuzhenLglvlup* other) {
  if (other != this) {
    e_xiuzhenlglvlup_list_.Swap(&other->e_xiuzhenlglvlup_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_XiuzhenLglvlup::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_XiuzhenLglvlup_descriptor_;
  metadata.reflection = Sheet_XiuzhenLglvlup_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_XiuzhenLgpotionsLgDesc::kMValueFieldNumber;
const int E_XiuzhenLgpotionsLgDesc::kMTypeFieldNumber;
#endif  // !_MSC_VER

E_XiuzhenLgpotionsLgDesc::E_XiuzhenLgpotionsLgDesc()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_XiuzhenLgpotionsLgDesc::InitAsDefaultInstance() {
}

E_XiuzhenLgpotionsLgDesc::E_XiuzhenLgpotionsLgDesc(const E_XiuzhenLgpotionsLgDesc& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_XiuzhenLgpotionsLgDesc::SharedCtor() {
  _cached_size_ = 0;
  m_value_ = GOOGLE_LONGLONG(0);
  m_type_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_XiuzhenLgpotionsLgDesc::~E_XiuzhenLgpotionsLgDesc() {
  SharedDtor();
}

void E_XiuzhenLgpotionsLgDesc::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_XiuzhenLgpotionsLgDesc::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_XiuzhenLgpotionsLgDesc::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_XiuzhenLgpotionsLgDesc_descriptor_;
}

const E_XiuzhenLgpotionsLgDesc& E_XiuzhenLgpotionsLgDesc::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fXiuzhen_2eproto();
  return *default_instance_;
}

E_XiuzhenLgpotionsLgDesc* E_XiuzhenLgpotionsLgDesc::default_instance_ = NULL;

E_XiuzhenLgpotionsLgDesc* E_XiuzhenLgpotionsLgDesc::New() const {
  return new E_XiuzhenLgpotionsLgDesc;
}

void E_XiuzhenLgpotionsLgDesc::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_value_ = GOOGLE_LONGLONG(0);
    m_type_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_XiuzhenLgpotionsLgDesc::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 m_value = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &m_value_)));
          set_has_m_value();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_type;
        break;
      }

      // optional int32 m_type = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_type_)));
          set_has_m_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_XiuzhenLgpotionsLgDesc::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 m_value = 1;
  if (has_m_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->m_value(), output);
  }

  // optional int32 m_type = 2;
  if (has_m_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_type(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_XiuzhenLgpotionsLgDesc::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 m_value = 1;
  if (has_m_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->m_value(), target);
  }

  // optional int32 m_type = 2;
  if (has_m_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_type(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_XiuzhenLgpotionsLgDesc::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 m_value = 1;
    if (has_m_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->m_value());
    }

    // optional int32 m_type = 2;
    if (has_m_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_type());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_XiuzhenLgpotionsLgDesc::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_XiuzhenLgpotionsLgDesc* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_XiuzhenLgpotionsLgDesc*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_XiuzhenLgpotionsLgDesc::MergeFrom(const E_XiuzhenLgpotionsLgDesc& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_value()) {
      set_m_value(from.m_value());
    }
    if (from.has_m_type()) {
      set_m_type(from.m_type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_XiuzhenLgpotionsLgDesc::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_XiuzhenLgpotionsLgDesc::CopyFrom(const E_XiuzhenLgpotionsLgDesc& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_XiuzhenLgpotionsLgDesc::IsInitialized() const {

  return true;
}

void E_XiuzhenLgpotionsLgDesc::Swap(E_XiuzhenLgpotionsLgDesc* other) {
  if (other != this) {
    std::swap(m_value_, other->m_value_);
    std::swap(m_type_, other->m_type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_XiuzhenLgpotionsLgDesc::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_XiuzhenLgpotionsLgDesc_descriptor_;
  metadata.reflection = E_XiuzhenLgpotionsLgDesc_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_XiuzhenLgpotions::kMIdFieldNumber;
const int E_XiuzhenLgpotions::kMLgFieldNumber;
#endif  // !_MSC_VER

E_XiuzhenLgpotions::E_XiuzhenLgpotions()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_XiuzhenLgpotions::InitAsDefaultInstance() {
}

E_XiuzhenLgpotions::E_XiuzhenLgpotions(const E_XiuzhenLgpotions& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_XiuzhenLgpotions::SharedCtor() {
  _cached_size_ = 0;
  m_id_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_XiuzhenLgpotions::~E_XiuzhenLgpotions() {
  SharedDtor();
}

void E_XiuzhenLgpotions::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_XiuzhenLgpotions::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_XiuzhenLgpotions::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_XiuzhenLgpotions_descriptor_;
}

const E_XiuzhenLgpotions& E_XiuzhenLgpotions::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fXiuzhen_2eproto();
  return *default_instance_;
}

E_XiuzhenLgpotions* E_XiuzhenLgpotions::default_instance_ = NULL;

E_XiuzhenLgpotions* E_XiuzhenLgpotions::New() const {
  return new E_XiuzhenLgpotions;
}

void E_XiuzhenLgpotions::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_id_ = GOOGLE_LONGLONG(0);
  }
  m_lg_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_XiuzhenLgpotions::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 m_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &m_id_)));
          set_has_m_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_m_lg;
        break;
      }

      // repeated .proto_ff.E_XiuzhenLgpotionsLgDesc m_lg = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_lg:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_m_lg()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_m_lg;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_XiuzhenLgpotions::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 m_id = 1;
  if (has_m_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->m_id(), output);
  }

  // repeated .proto_ff.E_XiuzhenLgpotionsLgDesc m_lg = 2;
  for (int i = 0; i < this->m_lg_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->m_lg(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_XiuzhenLgpotions::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 m_id = 1;
  if (has_m_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->m_id(), target);
  }

  // repeated .proto_ff.E_XiuzhenLgpotionsLgDesc m_lg = 2;
  for (int i = 0; i < this->m_lg_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->m_lg(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_XiuzhenLgpotions::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 m_id = 1;
    if (has_m_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->m_id());
    }

  }
  // repeated .proto_ff.E_XiuzhenLgpotionsLgDesc m_lg = 2;
  total_size += 1 * this->m_lg_size();
  for (int i = 0; i < this->m_lg_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->m_lg(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_XiuzhenLgpotions::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_XiuzhenLgpotions* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_XiuzhenLgpotions*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_XiuzhenLgpotions::MergeFrom(const E_XiuzhenLgpotions& from) {
  GOOGLE_CHECK_NE(&from, this);
  m_lg_.MergeFrom(from.m_lg_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_id()) {
      set_m_id(from.m_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_XiuzhenLgpotions::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_XiuzhenLgpotions::CopyFrom(const E_XiuzhenLgpotions& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_XiuzhenLgpotions::IsInitialized() const {

  return true;
}

void E_XiuzhenLgpotions::Swap(E_XiuzhenLgpotions* other) {
  if (other != this) {
    std::swap(m_id_, other->m_id_);
    m_lg_.Swap(&other->m_lg_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_XiuzhenLgpotions::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_XiuzhenLgpotions_descriptor_;
  metadata.reflection = E_XiuzhenLgpotions_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_XiuzhenLgpotions::kEXiuzhenLgpotionsListFieldNumber;
#endif  // !_MSC_VER

Sheet_XiuzhenLgpotions::Sheet_XiuzhenLgpotions()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_XiuzhenLgpotions::InitAsDefaultInstance() {
}

Sheet_XiuzhenLgpotions::Sheet_XiuzhenLgpotions(const Sheet_XiuzhenLgpotions& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_XiuzhenLgpotions::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_XiuzhenLgpotions::~Sheet_XiuzhenLgpotions() {
  SharedDtor();
}

void Sheet_XiuzhenLgpotions::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_XiuzhenLgpotions::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_XiuzhenLgpotions::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_XiuzhenLgpotions_descriptor_;
}

const Sheet_XiuzhenLgpotions& Sheet_XiuzhenLgpotions::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fXiuzhen_2eproto();
  return *default_instance_;
}

Sheet_XiuzhenLgpotions* Sheet_XiuzhenLgpotions::default_instance_ = NULL;

Sheet_XiuzhenLgpotions* Sheet_XiuzhenLgpotions::New() const {
  return new Sheet_XiuzhenLgpotions;
}

void Sheet_XiuzhenLgpotions::Clear() {
  e_xiuzhenlgpotions_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_XiuzhenLgpotions::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.E_XiuzhenLgpotions E_XiuzhenLgpotions_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_E_XiuzhenLgpotions_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_e_xiuzhenlgpotions_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_E_XiuzhenLgpotions_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_XiuzhenLgpotions::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.E_XiuzhenLgpotions E_XiuzhenLgpotions_List = 1;
  for (int i = 0; i < this->e_xiuzhenlgpotions_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->e_xiuzhenlgpotions_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_XiuzhenLgpotions::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.E_XiuzhenLgpotions E_XiuzhenLgpotions_List = 1;
  for (int i = 0; i < this->e_xiuzhenlgpotions_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->e_xiuzhenlgpotions_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_XiuzhenLgpotions::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.E_XiuzhenLgpotions E_XiuzhenLgpotions_List = 1;
  total_size += 1 * this->e_xiuzhenlgpotions_list_size();
  for (int i = 0; i < this->e_xiuzhenlgpotions_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->e_xiuzhenlgpotions_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_XiuzhenLgpotions::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_XiuzhenLgpotions* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_XiuzhenLgpotions*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_XiuzhenLgpotions::MergeFrom(const Sheet_XiuzhenLgpotions& from) {
  GOOGLE_CHECK_NE(&from, this);
  e_xiuzhenlgpotions_list_.MergeFrom(from.e_xiuzhenlgpotions_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_XiuzhenLgpotions::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_XiuzhenLgpotions::CopyFrom(const Sheet_XiuzhenLgpotions& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_XiuzhenLgpotions::IsInitialized() const {

  return true;
}

void Sheet_XiuzhenLgpotions::Swap(Sheet_XiuzhenLgpotions* other) {
  if (other != this) {
    e_xiuzhenlgpotions_list_.Swap(&other->e_xiuzhenlgpotions_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_XiuzhenLgpotions::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_XiuzhenLgpotions_descriptor_;
  metadata.reflection = Sheet_XiuzhenLgpotions_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_XiuzhenGftypes::kMIdFieldNumber;
const int E_XiuzhenGftypes::kMTypeFieldNumber;
const int E_XiuzhenGftypes::kMNameFieldNumber;
const int E_XiuzhenGftypes::kMIconFieldNumber;
const int E_XiuzhenGftypes::kMActivationitemFieldNumber;
const int E_XiuzhenGftypes::kMItemnumFieldNumber;
const int E_XiuzhenGftypes::kMBuylvFieldNumber;
const int E_XiuzhenGftypes::kMRechargeidFieldNumber;
#endif  // !_MSC_VER

E_XiuzhenGftypes::E_XiuzhenGftypes()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_XiuzhenGftypes::InitAsDefaultInstance() {
}

E_XiuzhenGftypes::E_XiuzhenGftypes(const E_XiuzhenGftypes& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_XiuzhenGftypes::SharedCtor() {
  _cached_size_ = 0;
  m_id_ = 0;
  m_type_ = 0;
  m_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  m_icon_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  m_activationitem_ = 0;
  m_itemnum_ = 0;
  m_buylv_ = 0;
  m_rechargeid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_XiuzhenGftypes::~E_XiuzhenGftypes() {
  SharedDtor();
}

void E_XiuzhenGftypes::SharedDtor() {
  if (m_name_ != &::google::protobuf::internal::kEmptyString) {
    delete m_name_;
  }
  if (m_icon_ != &::google::protobuf::internal::kEmptyString) {
    delete m_icon_;
  }
  if (this != default_instance_) {
  }
}

void E_XiuzhenGftypes::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_XiuzhenGftypes::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_XiuzhenGftypes_descriptor_;
}

const E_XiuzhenGftypes& E_XiuzhenGftypes::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fXiuzhen_2eproto();
  return *default_instance_;
}

E_XiuzhenGftypes* E_XiuzhenGftypes::default_instance_ = NULL;

E_XiuzhenGftypes* E_XiuzhenGftypes::New() const {
  return new E_XiuzhenGftypes;
}

void E_XiuzhenGftypes::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_id_ = 0;
    m_type_ = 0;
    if (has_m_name()) {
      if (m_name_ != &::google::protobuf::internal::kEmptyString) {
        m_name_->clear();
      }
    }
    if (has_m_icon()) {
      if (m_icon_ != &::google::protobuf::internal::kEmptyString) {
        m_icon_->clear();
      }
    }
    m_activationitem_ = 0;
    m_itemnum_ = 0;
    m_buylv_ = 0;
    m_rechargeid_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_XiuzhenGftypes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_id_)));
          set_has_m_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_type;
        break;
      }

      // optional int32 m_type = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_type_)));
          set_has_m_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_m_name;
        break;
      }

      // optional string m_name = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_m_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->m_name().data(), this->m_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_m_icon;
        break;
      }

      // optional string m_icon = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_icon:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_m_icon()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->m_icon().data(), this->m_icon().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_m_activationitem;
        break;
      }

      // optional int32 m_activationitem = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_activationitem:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_activationitem_)));
          set_has_m_activationitem();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_m_itemnum;
        break;
      }

      // optional int32 m_itemnum = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_itemnum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_itemnum_)));
          set_has_m_itemnum();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_m_buylv;
        break;
      }

      // optional int32 m_buylv = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_buylv:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_buylv_)));
          set_has_m_buylv();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(64)) goto parse_m_rechargeid;
        break;
      }

      // optional int32 m_rechargeid = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_rechargeid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_rechargeid_)));
          set_has_m_rechargeid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_XiuzhenGftypes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_id(), output);
  }

  // optional int32 m_type = 2;
  if (has_m_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_type(), output);
  }

  // optional string m_name = 3;
  if (has_m_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_name().data(), this->m_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->m_name(), output);
  }

  // optional string m_icon = 4;
  if (has_m_icon()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_icon().data(), this->m_icon().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->m_icon(), output);
  }

  // optional int32 m_activationitem = 5;
  if (has_m_activationitem()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->m_activationitem(), output);
  }

  // optional int32 m_itemnum = 6;
  if (has_m_itemnum()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->m_itemnum(), output);
  }

  // optional int32 m_buylv = 7;
  if (has_m_buylv()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->m_buylv(), output);
  }

  // optional int32 m_rechargeid = 8;
  if (has_m_rechargeid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->m_rechargeid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_XiuzhenGftypes::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_id(), target);
  }

  // optional int32 m_type = 2;
  if (has_m_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_type(), target);
  }

  // optional string m_name = 3;
  if (has_m_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_name().data(), this->m_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->m_name(), target);
  }

  // optional string m_icon = 4;
  if (has_m_icon()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_icon().data(), this->m_icon().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->m_icon(), target);
  }

  // optional int32 m_activationitem = 5;
  if (has_m_activationitem()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->m_activationitem(), target);
  }

  // optional int32 m_itemnum = 6;
  if (has_m_itemnum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->m_itemnum(), target);
  }

  // optional int32 m_buylv = 7;
  if (has_m_buylv()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->m_buylv(), target);
  }

  // optional int32 m_rechargeid = 8;
  if (has_m_rechargeid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->m_rechargeid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_XiuzhenGftypes::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_id = 1;
    if (has_m_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_id());
    }

    // optional int32 m_type = 2;
    if (has_m_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_type());
    }

    // optional string m_name = 3;
    if (has_m_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->m_name());
    }

    // optional string m_icon = 4;
    if (has_m_icon()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->m_icon());
    }

    // optional int32 m_activationitem = 5;
    if (has_m_activationitem()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_activationitem());
    }

    // optional int32 m_itemnum = 6;
    if (has_m_itemnum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_itemnum());
    }

    // optional int32 m_buylv = 7;
    if (has_m_buylv()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_buylv());
    }

    // optional int32 m_rechargeid = 8;
    if (has_m_rechargeid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_rechargeid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_XiuzhenGftypes::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_XiuzhenGftypes* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_XiuzhenGftypes*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_XiuzhenGftypes::MergeFrom(const E_XiuzhenGftypes& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_id()) {
      set_m_id(from.m_id());
    }
    if (from.has_m_type()) {
      set_m_type(from.m_type());
    }
    if (from.has_m_name()) {
      set_m_name(from.m_name());
    }
    if (from.has_m_icon()) {
      set_m_icon(from.m_icon());
    }
    if (from.has_m_activationitem()) {
      set_m_activationitem(from.m_activationitem());
    }
    if (from.has_m_itemnum()) {
      set_m_itemnum(from.m_itemnum());
    }
    if (from.has_m_buylv()) {
      set_m_buylv(from.m_buylv());
    }
    if (from.has_m_rechargeid()) {
      set_m_rechargeid(from.m_rechargeid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_XiuzhenGftypes::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_XiuzhenGftypes::CopyFrom(const E_XiuzhenGftypes& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_XiuzhenGftypes::IsInitialized() const {

  return true;
}

void E_XiuzhenGftypes::Swap(E_XiuzhenGftypes* other) {
  if (other != this) {
    std::swap(m_id_, other->m_id_);
    std::swap(m_type_, other->m_type_);
    std::swap(m_name_, other->m_name_);
    std::swap(m_icon_, other->m_icon_);
    std::swap(m_activationitem_, other->m_activationitem_);
    std::swap(m_itemnum_, other->m_itemnum_);
    std::swap(m_buylv_, other->m_buylv_);
    std::swap(m_rechargeid_, other->m_rechargeid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_XiuzhenGftypes::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_XiuzhenGftypes_descriptor_;
  metadata.reflection = E_XiuzhenGftypes_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_XiuzhenGftypes::kEXiuzhenGftypesListFieldNumber;
#endif  // !_MSC_VER

Sheet_XiuzhenGftypes::Sheet_XiuzhenGftypes()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_XiuzhenGftypes::InitAsDefaultInstance() {
}

Sheet_XiuzhenGftypes::Sheet_XiuzhenGftypes(const Sheet_XiuzhenGftypes& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_XiuzhenGftypes::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_XiuzhenGftypes::~Sheet_XiuzhenGftypes() {
  SharedDtor();
}

void Sheet_XiuzhenGftypes::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_XiuzhenGftypes::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_XiuzhenGftypes::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_XiuzhenGftypes_descriptor_;
}

const Sheet_XiuzhenGftypes& Sheet_XiuzhenGftypes::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fXiuzhen_2eproto();
  return *default_instance_;
}

Sheet_XiuzhenGftypes* Sheet_XiuzhenGftypes::default_instance_ = NULL;

Sheet_XiuzhenGftypes* Sheet_XiuzhenGftypes::New() const {
  return new Sheet_XiuzhenGftypes;
}

void Sheet_XiuzhenGftypes::Clear() {
  e_xiuzhengftypes_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_XiuzhenGftypes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.E_XiuzhenGftypes E_XiuzhenGftypes_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_E_XiuzhenGftypes_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_e_xiuzhengftypes_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_E_XiuzhenGftypes_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_XiuzhenGftypes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.E_XiuzhenGftypes E_XiuzhenGftypes_List = 1;
  for (int i = 0; i < this->e_xiuzhengftypes_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->e_xiuzhengftypes_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_XiuzhenGftypes::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.E_XiuzhenGftypes E_XiuzhenGftypes_List = 1;
  for (int i = 0; i < this->e_xiuzhengftypes_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->e_xiuzhengftypes_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_XiuzhenGftypes::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.E_XiuzhenGftypes E_XiuzhenGftypes_List = 1;
  total_size += 1 * this->e_xiuzhengftypes_list_size();
  for (int i = 0; i < this->e_xiuzhengftypes_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->e_xiuzhengftypes_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_XiuzhenGftypes::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_XiuzhenGftypes* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_XiuzhenGftypes*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_XiuzhenGftypes::MergeFrom(const Sheet_XiuzhenGftypes& from) {
  GOOGLE_CHECK_NE(&from, this);
  e_xiuzhengftypes_list_.MergeFrom(from.e_xiuzhengftypes_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_XiuzhenGftypes::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_XiuzhenGftypes::CopyFrom(const Sheet_XiuzhenGftypes& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_XiuzhenGftypes::IsInitialized() const {

  return true;
}

void Sheet_XiuzhenGftypes::Swap(Sheet_XiuzhenGftypes* other) {
  if (other != this) {
    e_xiuzhengftypes_list_.Swap(&other->e_xiuzhengftypes_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_XiuzhenGftypes::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_XiuzhenGftypes_descriptor_;
  metadata.reflection = Sheet_XiuzhenGftypes_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_XiuzhenGflvlupAttributeDesc::kMValueFieldNumber;
const int E_XiuzhenGflvlupAttributeDesc::kMIdFieldNumber;
#endif  // !_MSC_VER

E_XiuzhenGflvlupAttributeDesc::E_XiuzhenGflvlupAttributeDesc()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_XiuzhenGflvlupAttributeDesc::InitAsDefaultInstance() {
}

E_XiuzhenGflvlupAttributeDesc::E_XiuzhenGflvlupAttributeDesc(const E_XiuzhenGflvlupAttributeDesc& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_XiuzhenGflvlupAttributeDesc::SharedCtor() {
  _cached_size_ = 0;
  m_value_ = 0;
  m_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_XiuzhenGflvlupAttributeDesc::~E_XiuzhenGflvlupAttributeDesc() {
  SharedDtor();
}

void E_XiuzhenGflvlupAttributeDesc::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_XiuzhenGflvlupAttributeDesc::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_XiuzhenGflvlupAttributeDesc::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_XiuzhenGflvlupAttributeDesc_descriptor_;
}

const E_XiuzhenGflvlupAttributeDesc& E_XiuzhenGflvlupAttributeDesc::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fXiuzhen_2eproto();
  return *default_instance_;
}

E_XiuzhenGflvlupAttributeDesc* E_XiuzhenGflvlupAttributeDesc::default_instance_ = NULL;

E_XiuzhenGflvlupAttributeDesc* E_XiuzhenGflvlupAttributeDesc::New() const {
  return new E_XiuzhenGflvlupAttributeDesc;
}

void E_XiuzhenGflvlupAttributeDesc::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_value_ = 0;
    m_id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_XiuzhenGflvlupAttributeDesc::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_value = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_value_)));
          set_has_m_value();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_id;
        break;
      }

      // optional int32 m_id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_id_)));
          set_has_m_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_XiuzhenGflvlupAttributeDesc::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_value = 1;
  if (has_m_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_value(), output);
  }

  // optional int32 m_id = 2;
  if (has_m_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_XiuzhenGflvlupAttributeDesc::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_value = 1;
  if (has_m_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_value(), target);
  }

  // optional int32 m_id = 2;
  if (has_m_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_XiuzhenGflvlupAttributeDesc::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_value = 1;
    if (has_m_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_value());
    }

    // optional int32 m_id = 2;
    if (has_m_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_id());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_XiuzhenGflvlupAttributeDesc::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_XiuzhenGflvlupAttributeDesc* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_XiuzhenGflvlupAttributeDesc*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_XiuzhenGflvlupAttributeDesc::MergeFrom(const E_XiuzhenGflvlupAttributeDesc& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_value()) {
      set_m_value(from.m_value());
    }
    if (from.has_m_id()) {
      set_m_id(from.m_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_XiuzhenGflvlupAttributeDesc::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_XiuzhenGflvlupAttributeDesc::CopyFrom(const E_XiuzhenGflvlupAttributeDesc& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_XiuzhenGflvlupAttributeDesc::IsInitialized() const {

  return true;
}

void E_XiuzhenGflvlupAttributeDesc::Swap(E_XiuzhenGflvlupAttributeDesc* other) {
  if (other != this) {
    std::swap(m_value_, other->m_value_);
    std::swap(m_id_, other->m_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_XiuzhenGflvlupAttributeDesc::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_XiuzhenGflvlupAttributeDesc_descriptor_;
  metadata.reflection = E_XiuzhenGflvlupAttributeDesc_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_XiuzhenGflvlup::kMIdFieldNumber;
const int E_XiuzhenGflvlup::kMTypeFieldNumber;
const int E_XiuzhenGflvlup::kMFirstLevelFieldNumber;
const int E_XiuzhenGflvlup::kMMiddleLevelFieldNumber;
const int E_XiuzhenGflvlup::kMHighLevelFieldNumber;
const int E_XiuzhenGflvlup::kMRoushenLevelFieldNumber;
const int E_XiuzhenGflvlup::kMItemidFieldNumber;
const int E_XiuzhenGflvlup::kMItemnumFieldNumber;
const int E_XiuzhenGflvlup::kMXwFieldNumber;
const int E_XiuzhenGflvlup::kMAwakeskillFieldNumber;
const int E_XiuzhenGflvlup::kMAwakeskilllvlFieldNumber;
const int E_XiuzhenGflvlup::kMSpecialattriidFieldNumber;
const int E_XiuzhenGflvlup::kMSpecialattrivalueFieldNumber;
const int E_XiuzhenGflvlup::kMAttributeFieldNumber;
#endif  // !_MSC_VER

E_XiuzhenGflvlup::E_XiuzhenGflvlup()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_XiuzhenGflvlup::InitAsDefaultInstance() {
}

E_XiuzhenGflvlup::E_XiuzhenGflvlup(const E_XiuzhenGflvlup& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_XiuzhenGflvlup::SharedCtor() {
  _cached_size_ = 0;
  m_id_ = 0;
  m_type_ = 0;
  m_first_level_ = 0;
  m_middle_level_ = 0;
  m_high_level_ = 0;
  m_roushen_level_ = 0;
  m_itemid_ = 0;
  m_itemnum_ = 0;
  m_xw_ = 0;
  m_awakeskill_ = 0;
  m_awakeskilllvl_ = 0;
  m_specialattriid_ = 0;
  m_specialattrivalue_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_XiuzhenGflvlup::~E_XiuzhenGflvlup() {
  SharedDtor();
}

void E_XiuzhenGflvlup::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_XiuzhenGflvlup::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_XiuzhenGflvlup::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_XiuzhenGflvlup_descriptor_;
}

const E_XiuzhenGflvlup& E_XiuzhenGflvlup::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fXiuzhen_2eproto();
  return *default_instance_;
}

E_XiuzhenGflvlup* E_XiuzhenGflvlup::default_instance_ = NULL;

E_XiuzhenGflvlup* E_XiuzhenGflvlup::New() const {
  return new E_XiuzhenGflvlup;
}

void E_XiuzhenGflvlup::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_id_ = 0;
    m_type_ = 0;
    m_first_level_ = 0;
    m_middle_level_ = 0;
    m_high_level_ = 0;
    m_roushen_level_ = 0;
    m_itemid_ = 0;
    m_itemnum_ = 0;
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    m_xw_ = 0;
    m_awakeskill_ = 0;
    m_awakeskilllvl_ = 0;
    m_specialattriid_ = 0;
    m_specialattrivalue_ = 0;
  }
  m_attribute_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_XiuzhenGflvlup::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_id_)));
          set_has_m_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_type;
        break;
      }

      // optional int32 m_type = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_type_)));
          set_has_m_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_m_first_level;
        break;
      }

      // optional int32 m_first_level = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_first_level:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_first_level_)));
          set_has_m_first_level();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_m_middle_level;
        break;
      }

      // optional int32 m_middle_level = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_middle_level:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_middle_level_)));
          set_has_m_middle_level();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_m_high_level;
        break;
      }

      // optional int32 m_high_level = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_high_level:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_high_level_)));
          set_has_m_high_level();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_m_roushen_level;
        break;
      }

      // optional int32 m_roushen_level = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_roushen_level:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_roushen_level_)));
          set_has_m_roushen_level();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_m_itemid;
        break;
      }

      // optional int32 m_itemid = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_itemid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_itemid_)));
          set_has_m_itemid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(64)) goto parse_m_itemnum;
        break;
      }

      // optional int32 m_itemnum = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_itemnum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_itemnum_)));
          set_has_m_itemnum();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(72)) goto parse_m_xw;
        break;
      }

      // optional int32 m_xw = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_xw:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_xw_)));
          set_has_m_xw();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(80)) goto parse_m_awakeskill;
        break;
      }

      // optional int32 m_awakeskill = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_awakeskill:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_awakeskill_)));
          set_has_m_awakeskill();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(88)) goto parse_m_awakeskilllvl;
        break;
      }

      // optional int32 m_awakeskilllvl = 11;
      case 11: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_awakeskilllvl:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_awakeskilllvl_)));
          set_has_m_awakeskilllvl();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(96)) goto parse_m_specialattriid;
        break;
      }

      // optional int32 m_specialattriid = 12;
      case 12: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_specialattriid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_specialattriid_)));
          set_has_m_specialattriid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(104)) goto parse_m_specialattrivalue;
        break;
      }

      // optional int32 m_specialattrivalue = 13;
      case 13: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_specialattrivalue:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_specialattrivalue_)));
          set_has_m_specialattrivalue();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(114)) goto parse_m_attribute;
        break;
      }

      // repeated .proto_ff.E_XiuzhenGflvlupAttributeDesc m_attribute = 14;
      case 14: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_attribute:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_m_attribute()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(114)) goto parse_m_attribute;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_XiuzhenGflvlup::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_id(), output);
  }

  // optional int32 m_type = 2;
  if (has_m_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_type(), output);
  }

  // optional int32 m_first_level = 3;
  if (has_m_first_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->m_first_level(), output);
  }

  // optional int32 m_middle_level = 4;
  if (has_m_middle_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->m_middle_level(), output);
  }

  // optional int32 m_high_level = 5;
  if (has_m_high_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->m_high_level(), output);
  }

  // optional int32 m_roushen_level = 6;
  if (has_m_roushen_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->m_roushen_level(), output);
  }

  // optional int32 m_itemid = 7;
  if (has_m_itemid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->m_itemid(), output);
  }

  // optional int32 m_itemnum = 8;
  if (has_m_itemnum()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->m_itemnum(), output);
  }

  // optional int32 m_xw = 9;
  if (has_m_xw()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->m_xw(), output);
  }

  // optional int32 m_awakeskill = 10;
  if (has_m_awakeskill()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->m_awakeskill(), output);
  }

  // optional int32 m_awakeskilllvl = 11;
  if (has_m_awakeskilllvl()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->m_awakeskilllvl(), output);
  }

  // optional int32 m_specialattriid = 12;
  if (has_m_specialattriid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(12, this->m_specialattriid(), output);
  }

  // optional int32 m_specialattrivalue = 13;
  if (has_m_specialattrivalue()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(13, this->m_specialattrivalue(), output);
  }

  // repeated .proto_ff.E_XiuzhenGflvlupAttributeDesc m_attribute = 14;
  for (int i = 0; i < this->m_attribute_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      14, this->m_attribute(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_XiuzhenGflvlup::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_id(), target);
  }

  // optional int32 m_type = 2;
  if (has_m_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_type(), target);
  }

  // optional int32 m_first_level = 3;
  if (has_m_first_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->m_first_level(), target);
  }

  // optional int32 m_middle_level = 4;
  if (has_m_middle_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->m_middle_level(), target);
  }

  // optional int32 m_high_level = 5;
  if (has_m_high_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->m_high_level(), target);
  }

  // optional int32 m_roushen_level = 6;
  if (has_m_roushen_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->m_roushen_level(), target);
  }

  // optional int32 m_itemid = 7;
  if (has_m_itemid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->m_itemid(), target);
  }

  // optional int32 m_itemnum = 8;
  if (has_m_itemnum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->m_itemnum(), target);
  }

  // optional int32 m_xw = 9;
  if (has_m_xw()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->m_xw(), target);
  }

  // optional int32 m_awakeskill = 10;
  if (has_m_awakeskill()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->m_awakeskill(), target);
  }

  // optional int32 m_awakeskilllvl = 11;
  if (has_m_awakeskilllvl()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->m_awakeskilllvl(), target);
  }

  // optional int32 m_specialattriid = 12;
  if (has_m_specialattriid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(12, this->m_specialattriid(), target);
  }

  // optional int32 m_specialattrivalue = 13;
  if (has_m_specialattrivalue()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(13, this->m_specialattrivalue(), target);
  }

  // repeated .proto_ff.E_XiuzhenGflvlupAttributeDesc m_attribute = 14;
  for (int i = 0; i < this->m_attribute_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        14, this->m_attribute(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_XiuzhenGflvlup::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_id = 1;
    if (has_m_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_id());
    }

    // optional int32 m_type = 2;
    if (has_m_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_type());
    }

    // optional int32 m_first_level = 3;
    if (has_m_first_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_first_level());
    }

    // optional int32 m_middle_level = 4;
    if (has_m_middle_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_middle_level());
    }

    // optional int32 m_high_level = 5;
    if (has_m_high_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_high_level());
    }

    // optional int32 m_roushen_level = 6;
    if (has_m_roushen_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_roushen_level());
    }

    // optional int32 m_itemid = 7;
    if (has_m_itemid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_itemid());
    }

    // optional int32 m_itemnum = 8;
    if (has_m_itemnum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_itemnum());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional int32 m_xw = 9;
    if (has_m_xw()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_xw());
    }

    // optional int32 m_awakeskill = 10;
    if (has_m_awakeskill()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_awakeskill());
    }

    // optional int32 m_awakeskilllvl = 11;
    if (has_m_awakeskilllvl()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_awakeskilllvl());
    }

    // optional int32 m_specialattriid = 12;
    if (has_m_specialattriid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_specialattriid());
    }

    // optional int32 m_specialattrivalue = 13;
    if (has_m_specialattrivalue()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_specialattrivalue());
    }

  }
  // repeated .proto_ff.E_XiuzhenGflvlupAttributeDesc m_attribute = 14;
  total_size += 1 * this->m_attribute_size();
  for (int i = 0; i < this->m_attribute_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->m_attribute(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_XiuzhenGflvlup::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_XiuzhenGflvlup* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_XiuzhenGflvlup*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_XiuzhenGflvlup::MergeFrom(const E_XiuzhenGflvlup& from) {
  GOOGLE_CHECK_NE(&from, this);
  m_attribute_.MergeFrom(from.m_attribute_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_id()) {
      set_m_id(from.m_id());
    }
    if (from.has_m_type()) {
      set_m_type(from.m_type());
    }
    if (from.has_m_first_level()) {
      set_m_first_level(from.m_first_level());
    }
    if (from.has_m_middle_level()) {
      set_m_middle_level(from.m_middle_level());
    }
    if (from.has_m_high_level()) {
      set_m_high_level(from.m_high_level());
    }
    if (from.has_m_roushen_level()) {
      set_m_roushen_level(from.m_roushen_level());
    }
    if (from.has_m_itemid()) {
      set_m_itemid(from.m_itemid());
    }
    if (from.has_m_itemnum()) {
      set_m_itemnum(from.m_itemnum());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_m_xw()) {
      set_m_xw(from.m_xw());
    }
    if (from.has_m_awakeskill()) {
      set_m_awakeskill(from.m_awakeskill());
    }
    if (from.has_m_awakeskilllvl()) {
      set_m_awakeskilllvl(from.m_awakeskilllvl());
    }
    if (from.has_m_specialattriid()) {
      set_m_specialattriid(from.m_specialattriid());
    }
    if (from.has_m_specialattrivalue()) {
      set_m_specialattrivalue(from.m_specialattrivalue());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_XiuzhenGflvlup::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_XiuzhenGflvlup::CopyFrom(const E_XiuzhenGflvlup& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_XiuzhenGflvlup::IsInitialized() const {

  return true;
}

void E_XiuzhenGflvlup::Swap(E_XiuzhenGflvlup* other) {
  if (other != this) {
    std::swap(m_id_, other->m_id_);
    std::swap(m_type_, other->m_type_);
    std::swap(m_first_level_, other->m_first_level_);
    std::swap(m_middle_level_, other->m_middle_level_);
    std::swap(m_high_level_, other->m_high_level_);
    std::swap(m_roushen_level_, other->m_roushen_level_);
    std::swap(m_itemid_, other->m_itemid_);
    std::swap(m_itemnum_, other->m_itemnum_);
    std::swap(m_xw_, other->m_xw_);
    std::swap(m_awakeskill_, other->m_awakeskill_);
    std::swap(m_awakeskilllvl_, other->m_awakeskilllvl_);
    std::swap(m_specialattriid_, other->m_specialattriid_);
    std::swap(m_specialattrivalue_, other->m_specialattrivalue_);
    m_attribute_.Swap(&other->m_attribute_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_XiuzhenGflvlup::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_XiuzhenGflvlup_descriptor_;
  metadata.reflection = E_XiuzhenGflvlup_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_XiuzhenGflvlup::kEXiuzhenGflvlupListFieldNumber;
#endif  // !_MSC_VER

Sheet_XiuzhenGflvlup::Sheet_XiuzhenGflvlup()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_XiuzhenGflvlup::InitAsDefaultInstance() {
}

Sheet_XiuzhenGflvlup::Sheet_XiuzhenGflvlup(const Sheet_XiuzhenGflvlup& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_XiuzhenGflvlup::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_XiuzhenGflvlup::~Sheet_XiuzhenGflvlup() {
  SharedDtor();
}

void Sheet_XiuzhenGflvlup::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_XiuzhenGflvlup::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_XiuzhenGflvlup::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_XiuzhenGflvlup_descriptor_;
}

const Sheet_XiuzhenGflvlup& Sheet_XiuzhenGflvlup::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fXiuzhen_2eproto();
  return *default_instance_;
}

Sheet_XiuzhenGflvlup* Sheet_XiuzhenGflvlup::default_instance_ = NULL;

Sheet_XiuzhenGflvlup* Sheet_XiuzhenGflvlup::New() const {
  return new Sheet_XiuzhenGflvlup;
}

void Sheet_XiuzhenGflvlup::Clear() {
  e_xiuzhengflvlup_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_XiuzhenGflvlup::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.E_XiuzhenGflvlup E_XiuzhenGflvlup_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_E_XiuzhenGflvlup_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_e_xiuzhengflvlup_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_E_XiuzhenGflvlup_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_XiuzhenGflvlup::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.E_XiuzhenGflvlup E_XiuzhenGflvlup_List = 1;
  for (int i = 0; i < this->e_xiuzhengflvlup_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->e_xiuzhengflvlup_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_XiuzhenGflvlup::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.E_XiuzhenGflvlup E_XiuzhenGflvlup_List = 1;
  for (int i = 0; i < this->e_xiuzhengflvlup_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->e_xiuzhengflvlup_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_XiuzhenGflvlup::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.E_XiuzhenGflvlup E_XiuzhenGflvlup_List = 1;
  total_size += 1 * this->e_xiuzhengflvlup_list_size();
  for (int i = 0; i < this->e_xiuzhengflvlup_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->e_xiuzhengflvlup_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_XiuzhenGflvlup::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_XiuzhenGflvlup* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_XiuzhenGflvlup*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_XiuzhenGflvlup::MergeFrom(const Sheet_XiuzhenGflvlup& from) {
  GOOGLE_CHECK_NE(&from, this);
  e_xiuzhengflvlup_list_.MergeFrom(from.e_xiuzhengflvlup_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_XiuzhenGflvlup::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_XiuzhenGflvlup::CopyFrom(const Sheet_XiuzhenGflvlup& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_XiuzhenGflvlup::IsInitialized() const {

  return true;
}

void Sheet_XiuzhenGflvlup::Swap(Sheet_XiuzhenGflvlup* other) {
  if (other != this) {
    e_xiuzhengflvlup_list_.Swap(&other->e_xiuzhengflvlup_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_XiuzhenGflvlup::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_XiuzhenGflvlup_descriptor_;
  metadata.reflection = Sheet_XiuzhenGflvlup_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_XiuzhenGfstageupAttributeDesc::kMValueFieldNumber;
const int E_XiuzhenGfstageupAttributeDesc::kMIdFieldNumber;
#endif  // !_MSC_VER

E_XiuzhenGfstageupAttributeDesc::E_XiuzhenGfstageupAttributeDesc()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_XiuzhenGfstageupAttributeDesc::InitAsDefaultInstance() {
}

E_XiuzhenGfstageupAttributeDesc::E_XiuzhenGfstageupAttributeDesc(const E_XiuzhenGfstageupAttributeDesc& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_XiuzhenGfstageupAttributeDesc::SharedCtor() {
  _cached_size_ = 0;
  m_value_ = 0;
  m_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_XiuzhenGfstageupAttributeDesc::~E_XiuzhenGfstageupAttributeDesc() {
  SharedDtor();
}

void E_XiuzhenGfstageupAttributeDesc::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_XiuzhenGfstageupAttributeDesc::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_XiuzhenGfstageupAttributeDesc::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_XiuzhenGfstageupAttributeDesc_descriptor_;
}

const E_XiuzhenGfstageupAttributeDesc& E_XiuzhenGfstageupAttributeDesc::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fXiuzhen_2eproto();
  return *default_instance_;
}

E_XiuzhenGfstageupAttributeDesc* E_XiuzhenGfstageupAttributeDesc::default_instance_ = NULL;

E_XiuzhenGfstageupAttributeDesc* E_XiuzhenGfstageupAttributeDesc::New() const {
  return new E_XiuzhenGfstageupAttributeDesc;
}

void E_XiuzhenGfstageupAttributeDesc::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_value_ = 0;
    m_id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_XiuzhenGfstageupAttributeDesc::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_value = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_value_)));
          set_has_m_value();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_id;
        break;
      }

      // optional int32 m_id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_id_)));
          set_has_m_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_XiuzhenGfstageupAttributeDesc::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_value = 1;
  if (has_m_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_value(), output);
  }

  // optional int32 m_id = 2;
  if (has_m_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_XiuzhenGfstageupAttributeDesc::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_value = 1;
  if (has_m_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_value(), target);
  }

  // optional int32 m_id = 2;
  if (has_m_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_XiuzhenGfstageupAttributeDesc::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_value = 1;
    if (has_m_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_value());
    }

    // optional int32 m_id = 2;
    if (has_m_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_id());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_XiuzhenGfstageupAttributeDesc::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_XiuzhenGfstageupAttributeDesc* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_XiuzhenGfstageupAttributeDesc*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_XiuzhenGfstageupAttributeDesc::MergeFrom(const E_XiuzhenGfstageupAttributeDesc& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_value()) {
      set_m_value(from.m_value());
    }
    if (from.has_m_id()) {
      set_m_id(from.m_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_XiuzhenGfstageupAttributeDesc::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_XiuzhenGfstageupAttributeDesc::CopyFrom(const E_XiuzhenGfstageupAttributeDesc& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_XiuzhenGfstageupAttributeDesc::IsInitialized() const {

  return true;
}

void E_XiuzhenGfstageupAttributeDesc::Swap(E_XiuzhenGfstageupAttributeDesc* other) {
  if (other != this) {
    std::swap(m_value_, other->m_value_);
    std::swap(m_id_, other->m_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_XiuzhenGfstageupAttributeDesc::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_XiuzhenGfstageupAttributeDesc_descriptor_;
  metadata.reflection = E_XiuzhenGfstageupAttributeDesc_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_XiuzhenGfstageup::kMIdFieldNumber;
const int E_XiuzhenGfstageup::kMTypeFieldNumber;
const int E_XiuzhenGfstageup::kMHighLevelFieldNumber;
const int E_XiuzhenGfstageup::kMHighlevelIconFieldNumber;
const int E_XiuzhenGfstageup::kMItemidFieldNumber;
const int E_XiuzhenGfstageup::kMItemnumFieldNumber;
const int E_XiuzhenGfstageup::kMAwakeskill1FieldNumber;
const int E_XiuzhenGfstageup::kMAwakeskilllvl1FieldNumber;
const int E_XiuzhenGfstageup::kMAwakeskill2FieldNumber;
const int E_XiuzhenGfstageup::kMAwakeskilllvl2FieldNumber;
const int E_XiuzhenGfstageup::kMAttributeFieldNumber;
#endif  // !_MSC_VER

E_XiuzhenGfstageup::E_XiuzhenGfstageup()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_XiuzhenGfstageup::InitAsDefaultInstance() {
}

E_XiuzhenGfstageup::E_XiuzhenGfstageup(const E_XiuzhenGfstageup& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_XiuzhenGfstageup::SharedCtor() {
  _cached_size_ = 0;
  m_id_ = 0;
  m_type_ = 0;
  m_high_level_ = 0;
  m_highlevel_icon_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  m_itemid_ = 0;
  m_itemnum_ = 0;
  m_awakeskill1_ = 0;
  m_awakeskilllvl1_ = 0;
  m_awakeskill2_ = 0;
  m_awakeskilllvl2_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_XiuzhenGfstageup::~E_XiuzhenGfstageup() {
  SharedDtor();
}

void E_XiuzhenGfstageup::SharedDtor() {
  if (m_highlevel_icon_ != &::google::protobuf::internal::kEmptyString) {
    delete m_highlevel_icon_;
  }
  if (this != default_instance_) {
  }
}

void E_XiuzhenGfstageup::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_XiuzhenGfstageup::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_XiuzhenGfstageup_descriptor_;
}

const E_XiuzhenGfstageup& E_XiuzhenGfstageup::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fXiuzhen_2eproto();
  return *default_instance_;
}

E_XiuzhenGfstageup* E_XiuzhenGfstageup::default_instance_ = NULL;

E_XiuzhenGfstageup* E_XiuzhenGfstageup::New() const {
  return new E_XiuzhenGfstageup;
}

void E_XiuzhenGfstageup::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_id_ = 0;
    m_type_ = 0;
    m_high_level_ = 0;
    if (has_m_highlevel_icon()) {
      if (m_highlevel_icon_ != &::google::protobuf::internal::kEmptyString) {
        m_highlevel_icon_->clear();
      }
    }
    m_itemid_ = 0;
    m_itemnum_ = 0;
    m_awakeskill1_ = 0;
    m_awakeskilllvl1_ = 0;
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    m_awakeskill2_ = 0;
    m_awakeskilllvl2_ = 0;
  }
  m_attribute_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_XiuzhenGfstageup::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_id_)));
          set_has_m_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_type;
        break;
      }

      // optional int32 m_type = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_type_)));
          set_has_m_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_m_high_level;
        break;
      }

      // optional int32 m_high_level = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_high_level:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_high_level_)));
          set_has_m_high_level();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_m_highlevel_icon;
        break;
      }

      // optional string m_highlevel_icon = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_highlevel_icon:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_m_highlevel_icon()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->m_highlevel_icon().data(), this->m_highlevel_icon().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_m_itemid;
        break;
      }

      // optional int32 m_itemid = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_itemid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_itemid_)));
          set_has_m_itemid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_m_itemnum;
        break;
      }

      // optional int32 m_itemnum = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_itemnum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_itemnum_)));
          set_has_m_itemnum();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_m_awakeskill1;
        break;
      }

      // optional int32 m_awakeskill1 = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_awakeskill1:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_awakeskill1_)));
          set_has_m_awakeskill1();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(64)) goto parse_m_awakeskilllvl1;
        break;
      }

      // optional int32 m_awakeskilllvl1 = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_awakeskilllvl1:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_awakeskilllvl1_)));
          set_has_m_awakeskilllvl1();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(72)) goto parse_m_awakeskill2;
        break;
      }

      // optional int32 m_awakeskill2 = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_awakeskill2:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_awakeskill2_)));
          set_has_m_awakeskill2();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(80)) goto parse_m_awakeskilllvl2;
        break;
      }

      // optional int32 m_awakeskilllvl2 = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_awakeskilllvl2:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_awakeskilllvl2_)));
          set_has_m_awakeskilllvl2();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(90)) goto parse_m_attribute;
        break;
      }

      // repeated .proto_ff.E_XiuzhenGfstageupAttributeDesc m_attribute = 11;
      case 11: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_attribute:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_m_attribute()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(90)) goto parse_m_attribute;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_XiuzhenGfstageup::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_id(), output);
  }

  // optional int32 m_type = 2;
  if (has_m_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_type(), output);
  }

  // optional int32 m_high_level = 3;
  if (has_m_high_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->m_high_level(), output);
  }

  // optional string m_highlevel_icon = 4;
  if (has_m_highlevel_icon()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_highlevel_icon().data(), this->m_highlevel_icon().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->m_highlevel_icon(), output);
  }

  // optional int32 m_itemid = 5;
  if (has_m_itemid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->m_itemid(), output);
  }

  // optional int32 m_itemnum = 6;
  if (has_m_itemnum()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->m_itemnum(), output);
  }

  // optional int32 m_awakeskill1 = 7;
  if (has_m_awakeskill1()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->m_awakeskill1(), output);
  }

  // optional int32 m_awakeskilllvl1 = 8;
  if (has_m_awakeskilllvl1()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->m_awakeskilllvl1(), output);
  }

  // optional int32 m_awakeskill2 = 9;
  if (has_m_awakeskill2()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->m_awakeskill2(), output);
  }

  // optional int32 m_awakeskilllvl2 = 10;
  if (has_m_awakeskilllvl2()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->m_awakeskilllvl2(), output);
  }

  // repeated .proto_ff.E_XiuzhenGfstageupAttributeDesc m_attribute = 11;
  for (int i = 0; i < this->m_attribute_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, this->m_attribute(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_XiuzhenGfstageup::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_id(), target);
  }

  // optional int32 m_type = 2;
  if (has_m_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_type(), target);
  }

  // optional int32 m_high_level = 3;
  if (has_m_high_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->m_high_level(), target);
  }

  // optional string m_highlevel_icon = 4;
  if (has_m_highlevel_icon()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_highlevel_icon().data(), this->m_highlevel_icon().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->m_highlevel_icon(), target);
  }

  // optional int32 m_itemid = 5;
  if (has_m_itemid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->m_itemid(), target);
  }

  // optional int32 m_itemnum = 6;
  if (has_m_itemnum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->m_itemnum(), target);
  }

  // optional int32 m_awakeskill1 = 7;
  if (has_m_awakeskill1()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->m_awakeskill1(), target);
  }

  // optional int32 m_awakeskilllvl1 = 8;
  if (has_m_awakeskilllvl1()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->m_awakeskilllvl1(), target);
  }

  // optional int32 m_awakeskill2 = 9;
  if (has_m_awakeskill2()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->m_awakeskill2(), target);
  }

  // optional int32 m_awakeskilllvl2 = 10;
  if (has_m_awakeskilllvl2()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->m_awakeskilllvl2(), target);
  }

  // repeated .proto_ff.E_XiuzhenGfstageupAttributeDesc m_attribute = 11;
  for (int i = 0; i < this->m_attribute_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        11, this->m_attribute(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_XiuzhenGfstageup::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_id = 1;
    if (has_m_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_id());
    }

    // optional int32 m_type = 2;
    if (has_m_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_type());
    }

    // optional int32 m_high_level = 3;
    if (has_m_high_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_high_level());
    }

    // optional string m_highlevel_icon = 4;
    if (has_m_highlevel_icon()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->m_highlevel_icon());
    }

    // optional int32 m_itemid = 5;
    if (has_m_itemid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_itemid());
    }

    // optional int32 m_itemnum = 6;
    if (has_m_itemnum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_itemnum());
    }

    // optional int32 m_awakeskill1 = 7;
    if (has_m_awakeskill1()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_awakeskill1());
    }

    // optional int32 m_awakeskilllvl1 = 8;
    if (has_m_awakeskilllvl1()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_awakeskilllvl1());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional int32 m_awakeskill2 = 9;
    if (has_m_awakeskill2()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_awakeskill2());
    }

    // optional int32 m_awakeskilllvl2 = 10;
    if (has_m_awakeskilllvl2()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_awakeskilllvl2());
    }

  }
  // repeated .proto_ff.E_XiuzhenGfstageupAttributeDesc m_attribute = 11;
  total_size += 1 * this->m_attribute_size();
  for (int i = 0; i < this->m_attribute_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->m_attribute(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_XiuzhenGfstageup::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_XiuzhenGfstageup* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_XiuzhenGfstageup*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_XiuzhenGfstageup::MergeFrom(const E_XiuzhenGfstageup& from) {
  GOOGLE_CHECK_NE(&from, this);
  m_attribute_.MergeFrom(from.m_attribute_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_id()) {
      set_m_id(from.m_id());
    }
    if (from.has_m_type()) {
      set_m_type(from.m_type());
    }
    if (from.has_m_high_level()) {
      set_m_high_level(from.m_high_level());
    }
    if (from.has_m_highlevel_icon()) {
      set_m_highlevel_icon(from.m_highlevel_icon());
    }
    if (from.has_m_itemid()) {
      set_m_itemid(from.m_itemid());
    }
    if (from.has_m_itemnum()) {
      set_m_itemnum(from.m_itemnum());
    }
    if (from.has_m_awakeskill1()) {
      set_m_awakeskill1(from.m_awakeskill1());
    }
    if (from.has_m_awakeskilllvl1()) {
      set_m_awakeskilllvl1(from.m_awakeskilllvl1());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_m_awakeskill2()) {
      set_m_awakeskill2(from.m_awakeskill2());
    }
    if (from.has_m_awakeskilllvl2()) {
      set_m_awakeskilllvl2(from.m_awakeskilllvl2());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_XiuzhenGfstageup::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_XiuzhenGfstageup::CopyFrom(const E_XiuzhenGfstageup& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_XiuzhenGfstageup::IsInitialized() const {

  return true;
}

void E_XiuzhenGfstageup::Swap(E_XiuzhenGfstageup* other) {
  if (other != this) {
    std::swap(m_id_, other->m_id_);
    std::swap(m_type_, other->m_type_);
    std::swap(m_high_level_, other->m_high_level_);
    std::swap(m_highlevel_icon_, other->m_highlevel_icon_);
    std::swap(m_itemid_, other->m_itemid_);
    std::swap(m_itemnum_, other->m_itemnum_);
    std::swap(m_awakeskill1_, other->m_awakeskill1_);
    std::swap(m_awakeskilllvl1_, other->m_awakeskilllvl1_);
    std::swap(m_awakeskill2_, other->m_awakeskill2_);
    std::swap(m_awakeskilllvl2_, other->m_awakeskilllvl2_);
    m_attribute_.Swap(&other->m_attribute_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_XiuzhenGfstageup::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_XiuzhenGfstageup_descriptor_;
  metadata.reflection = E_XiuzhenGfstageup_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_XiuzhenGfstageup::kEXiuzhenGfstageupListFieldNumber;
#endif  // !_MSC_VER

Sheet_XiuzhenGfstageup::Sheet_XiuzhenGfstageup()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_XiuzhenGfstageup::InitAsDefaultInstance() {
}

Sheet_XiuzhenGfstageup::Sheet_XiuzhenGfstageup(const Sheet_XiuzhenGfstageup& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_XiuzhenGfstageup::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_XiuzhenGfstageup::~Sheet_XiuzhenGfstageup() {
  SharedDtor();
}

void Sheet_XiuzhenGfstageup::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_XiuzhenGfstageup::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_XiuzhenGfstageup::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_XiuzhenGfstageup_descriptor_;
}

const Sheet_XiuzhenGfstageup& Sheet_XiuzhenGfstageup::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fXiuzhen_2eproto();
  return *default_instance_;
}

Sheet_XiuzhenGfstageup* Sheet_XiuzhenGfstageup::default_instance_ = NULL;

Sheet_XiuzhenGfstageup* Sheet_XiuzhenGfstageup::New() const {
  return new Sheet_XiuzhenGfstageup;
}

void Sheet_XiuzhenGfstageup::Clear() {
  e_xiuzhengfstageup_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_XiuzhenGfstageup::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.E_XiuzhenGfstageup E_XiuzhenGfstageup_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_E_XiuzhenGfstageup_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_e_xiuzhengfstageup_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_E_XiuzhenGfstageup_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_XiuzhenGfstageup::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.E_XiuzhenGfstageup E_XiuzhenGfstageup_List = 1;
  for (int i = 0; i < this->e_xiuzhengfstageup_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->e_xiuzhengfstageup_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_XiuzhenGfstageup::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.E_XiuzhenGfstageup E_XiuzhenGfstageup_List = 1;
  for (int i = 0; i < this->e_xiuzhengfstageup_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->e_xiuzhengfstageup_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_XiuzhenGfstageup::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.E_XiuzhenGfstageup E_XiuzhenGfstageup_List = 1;
  total_size += 1 * this->e_xiuzhengfstageup_list_size();
  for (int i = 0; i < this->e_xiuzhengfstageup_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->e_xiuzhengfstageup_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_XiuzhenGfstageup::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_XiuzhenGfstageup* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_XiuzhenGfstageup*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_XiuzhenGfstageup::MergeFrom(const Sheet_XiuzhenGfstageup& from) {
  GOOGLE_CHECK_NE(&from, this);
  e_xiuzhengfstageup_list_.MergeFrom(from.e_xiuzhengfstageup_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_XiuzhenGfstageup::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_XiuzhenGfstageup::CopyFrom(const Sheet_XiuzhenGfstageup& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_XiuzhenGfstageup::IsInitialized() const {

  return true;
}

void Sheet_XiuzhenGfstageup::Swap(Sheet_XiuzhenGfstageup* other) {
  if (other != this) {
    e_xiuzhengfstageup_list_.Swap(&other->e_xiuzhengfstageup_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_XiuzhenGfstageup::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_XiuzhenGfstageup_descriptor_;
  metadata.reflection = Sheet_XiuzhenGfstageup_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_XiuzhenJmtypes::kMIdFieldNumber;
const int E_XiuzhenJmtypes::kMGongfaFieldNumber;
#endif  // !_MSC_VER

E_XiuzhenJmtypes::E_XiuzhenJmtypes()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_XiuzhenJmtypes::InitAsDefaultInstance() {
}

E_XiuzhenJmtypes::E_XiuzhenJmtypes(const E_XiuzhenJmtypes& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_XiuzhenJmtypes::SharedCtor() {
  _cached_size_ = 0;
  m_id_ = 0;
  m_gongfa_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_XiuzhenJmtypes::~E_XiuzhenJmtypes() {
  SharedDtor();
}

void E_XiuzhenJmtypes::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_XiuzhenJmtypes::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_XiuzhenJmtypes::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_XiuzhenJmtypes_descriptor_;
}

const E_XiuzhenJmtypes& E_XiuzhenJmtypes::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fXiuzhen_2eproto();
  return *default_instance_;
}

E_XiuzhenJmtypes* E_XiuzhenJmtypes::default_instance_ = NULL;

E_XiuzhenJmtypes* E_XiuzhenJmtypes::New() const {
  return new E_XiuzhenJmtypes;
}

void E_XiuzhenJmtypes::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_id_ = 0;
    m_gongfa_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_XiuzhenJmtypes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_id_)));
          set_has_m_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_gongfa;
        break;
      }

      // optional int32 m_gongfa = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_gongfa:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_gongfa_)));
          set_has_m_gongfa();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_XiuzhenJmtypes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_id(), output);
  }

  // optional int32 m_gongfa = 2;
  if (has_m_gongfa()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_gongfa(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_XiuzhenJmtypes::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_id(), target);
  }

  // optional int32 m_gongfa = 2;
  if (has_m_gongfa()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_gongfa(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_XiuzhenJmtypes::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_id = 1;
    if (has_m_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_id());
    }

    // optional int32 m_gongfa = 2;
    if (has_m_gongfa()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_gongfa());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_XiuzhenJmtypes::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_XiuzhenJmtypes* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_XiuzhenJmtypes*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_XiuzhenJmtypes::MergeFrom(const E_XiuzhenJmtypes& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_id()) {
      set_m_id(from.m_id());
    }
    if (from.has_m_gongfa()) {
      set_m_gongfa(from.m_gongfa());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_XiuzhenJmtypes::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_XiuzhenJmtypes::CopyFrom(const E_XiuzhenJmtypes& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_XiuzhenJmtypes::IsInitialized() const {

  return true;
}

void E_XiuzhenJmtypes::Swap(E_XiuzhenJmtypes* other) {
  if (other != this) {
    std::swap(m_id_, other->m_id_);
    std::swap(m_gongfa_, other->m_gongfa_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_XiuzhenJmtypes::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_XiuzhenJmtypes_descriptor_;
  metadata.reflection = E_XiuzhenJmtypes_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_XiuzhenJmtypes::kEXiuzhenJmtypesListFieldNumber;
#endif  // !_MSC_VER

Sheet_XiuzhenJmtypes::Sheet_XiuzhenJmtypes()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_XiuzhenJmtypes::InitAsDefaultInstance() {
}

Sheet_XiuzhenJmtypes::Sheet_XiuzhenJmtypes(const Sheet_XiuzhenJmtypes& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_XiuzhenJmtypes::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_XiuzhenJmtypes::~Sheet_XiuzhenJmtypes() {
  SharedDtor();
}

void Sheet_XiuzhenJmtypes::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_XiuzhenJmtypes::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_XiuzhenJmtypes::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_XiuzhenJmtypes_descriptor_;
}

const Sheet_XiuzhenJmtypes& Sheet_XiuzhenJmtypes::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fXiuzhen_2eproto();
  return *default_instance_;
}

Sheet_XiuzhenJmtypes* Sheet_XiuzhenJmtypes::default_instance_ = NULL;

Sheet_XiuzhenJmtypes* Sheet_XiuzhenJmtypes::New() const {
  return new Sheet_XiuzhenJmtypes;
}

void Sheet_XiuzhenJmtypes::Clear() {
  e_xiuzhenjmtypes_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_XiuzhenJmtypes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.E_XiuzhenJmtypes E_XiuzhenJmtypes_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_E_XiuzhenJmtypes_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_e_xiuzhenjmtypes_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_E_XiuzhenJmtypes_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_XiuzhenJmtypes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.E_XiuzhenJmtypes E_XiuzhenJmtypes_List = 1;
  for (int i = 0; i < this->e_xiuzhenjmtypes_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->e_xiuzhenjmtypes_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_XiuzhenJmtypes::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.E_XiuzhenJmtypes E_XiuzhenJmtypes_List = 1;
  for (int i = 0; i < this->e_xiuzhenjmtypes_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->e_xiuzhenjmtypes_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_XiuzhenJmtypes::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.E_XiuzhenJmtypes E_XiuzhenJmtypes_List = 1;
  total_size += 1 * this->e_xiuzhenjmtypes_list_size();
  for (int i = 0; i < this->e_xiuzhenjmtypes_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->e_xiuzhenjmtypes_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_XiuzhenJmtypes::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_XiuzhenJmtypes* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_XiuzhenJmtypes*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_XiuzhenJmtypes::MergeFrom(const Sheet_XiuzhenJmtypes& from) {
  GOOGLE_CHECK_NE(&from, this);
  e_xiuzhenjmtypes_list_.MergeFrom(from.e_xiuzhenjmtypes_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_XiuzhenJmtypes::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_XiuzhenJmtypes::CopyFrom(const Sheet_XiuzhenJmtypes& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_XiuzhenJmtypes::IsInitialized() const {

  return true;
}

void Sheet_XiuzhenJmtypes::Swap(Sheet_XiuzhenJmtypes* other) {
  if (other != this) {
    e_xiuzhenjmtypes_list_.Swap(&other->e_xiuzhenjmtypes_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_XiuzhenJmtypes::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_XiuzhenJmtypes_descriptor_;
  metadata.reflection = Sheet_XiuzhenJmtypes_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_XiuzhenJmlvlupItemDesc::kMNumFieldNumber;
const int E_XiuzhenJmlvlupItemDesc::kMIdFieldNumber;
#endif  // !_MSC_VER

E_XiuzhenJmlvlupItemDesc::E_XiuzhenJmlvlupItemDesc()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_XiuzhenJmlvlupItemDesc::InitAsDefaultInstance() {
}

E_XiuzhenJmlvlupItemDesc::E_XiuzhenJmlvlupItemDesc(const E_XiuzhenJmlvlupItemDesc& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_XiuzhenJmlvlupItemDesc::SharedCtor() {
  _cached_size_ = 0;
  m_num_ = 0;
  m_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_XiuzhenJmlvlupItemDesc::~E_XiuzhenJmlvlupItemDesc() {
  SharedDtor();
}

void E_XiuzhenJmlvlupItemDesc::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_XiuzhenJmlvlupItemDesc::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_XiuzhenJmlvlupItemDesc::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_XiuzhenJmlvlupItemDesc_descriptor_;
}

const E_XiuzhenJmlvlupItemDesc& E_XiuzhenJmlvlupItemDesc::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fXiuzhen_2eproto();
  return *default_instance_;
}

E_XiuzhenJmlvlupItemDesc* E_XiuzhenJmlvlupItemDesc::default_instance_ = NULL;

E_XiuzhenJmlvlupItemDesc* E_XiuzhenJmlvlupItemDesc::New() const {
  return new E_XiuzhenJmlvlupItemDesc;
}

void E_XiuzhenJmlvlupItemDesc::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_num_ = 0;
    m_id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_XiuzhenJmlvlupItemDesc::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_num = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_num_)));
          set_has_m_num();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_id;
        break;
      }

      // optional int32 m_id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_id_)));
          set_has_m_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_XiuzhenJmlvlupItemDesc::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_num = 1;
  if (has_m_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_num(), output);
  }

  // optional int32 m_id = 2;
  if (has_m_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_XiuzhenJmlvlupItemDesc::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_num = 1;
  if (has_m_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_num(), target);
  }

  // optional int32 m_id = 2;
  if (has_m_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_XiuzhenJmlvlupItemDesc::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_num = 1;
    if (has_m_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_num());
    }

    // optional int32 m_id = 2;
    if (has_m_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_id());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_XiuzhenJmlvlupItemDesc::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_XiuzhenJmlvlupItemDesc* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_XiuzhenJmlvlupItemDesc*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_XiuzhenJmlvlupItemDesc::MergeFrom(const E_XiuzhenJmlvlupItemDesc& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_num()) {
      set_m_num(from.m_num());
    }
    if (from.has_m_id()) {
      set_m_id(from.m_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_XiuzhenJmlvlupItemDesc::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_XiuzhenJmlvlupItemDesc::CopyFrom(const E_XiuzhenJmlvlupItemDesc& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_XiuzhenJmlvlupItemDesc::IsInitialized() const {

  return true;
}

void E_XiuzhenJmlvlupItemDesc::Swap(E_XiuzhenJmlvlupItemDesc* other) {
  if (other != this) {
    std::swap(m_num_, other->m_num_);
    std::swap(m_id_, other->m_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_XiuzhenJmlvlupItemDesc::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_XiuzhenJmlvlupItemDesc_descriptor_;
  metadata.reflection = E_XiuzhenJmlvlupItemDesc_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_XiuzhenJmlvlupAttributeDesc::kMValueFieldNumber;
const int E_XiuzhenJmlvlupAttributeDesc::kMIdFieldNumber;
#endif  // !_MSC_VER

E_XiuzhenJmlvlupAttributeDesc::E_XiuzhenJmlvlupAttributeDesc()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_XiuzhenJmlvlupAttributeDesc::InitAsDefaultInstance() {
}

E_XiuzhenJmlvlupAttributeDesc::E_XiuzhenJmlvlupAttributeDesc(const E_XiuzhenJmlvlupAttributeDesc& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_XiuzhenJmlvlupAttributeDesc::SharedCtor() {
  _cached_size_ = 0;
  m_value_ = 0;
  m_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_XiuzhenJmlvlupAttributeDesc::~E_XiuzhenJmlvlupAttributeDesc() {
  SharedDtor();
}

void E_XiuzhenJmlvlupAttributeDesc::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_XiuzhenJmlvlupAttributeDesc::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_XiuzhenJmlvlupAttributeDesc::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_XiuzhenJmlvlupAttributeDesc_descriptor_;
}

const E_XiuzhenJmlvlupAttributeDesc& E_XiuzhenJmlvlupAttributeDesc::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fXiuzhen_2eproto();
  return *default_instance_;
}

E_XiuzhenJmlvlupAttributeDesc* E_XiuzhenJmlvlupAttributeDesc::default_instance_ = NULL;

E_XiuzhenJmlvlupAttributeDesc* E_XiuzhenJmlvlupAttributeDesc::New() const {
  return new E_XiuzhenJmlvlupAttributeDesc;
}

void E_XiuzhenJmlvlupAttributeDesc::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_value_ = 0;
    m_id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_XiuzhenJmlvlupAttributeDesc::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_value = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_value_)));
          set_has_m_value();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_id;
        break;
      }

      // optional int32 m_id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_id_)));
          set_has_m_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_XiuzhenJmlvlupAttributeDesc::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_value = 1;
  if (has_m_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_value(), output);
  }

  // optional int32 m_id = 2;
  if (has_m_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_XiuzhenJmlvlupAttributeDesc::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_value = 1;
  if (has_m_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_value(), target);
  }

  // optional int32 m_id = 2;
  if (has_m_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_XiuzhenJmlvlupAttributeDesc::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_value = 1;
    if (has_m_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_value());
    }

    // optional int32 m_id = 2;
    if (has_m_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_id());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_XiuzhenJmlvlupAttributeDesc::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_XiuzhenJmlvlupAttributeDesc* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_XiuzhenJmlvlupAttributeDesc*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_XiuzhenJmlvlupAttributeDesc::MergeFrom(const E_XiuzhenJmlvlupAttributeDesc& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_value()) {
      set_m_value(from.m_value());
    }
    if (from.has_m_id()) {
      set_m_id(from.m_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_XiuzhenJmlvlupAttributeDesc::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_XiuzhenJmlvlupAttributeDesc::CopyFrom(const E_XiuzhenJmlvlupAttributeDesc& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_XiuzhenJmlvlupAttributeDesc::IsInitialized() const {

  return true;
}

void E_XiuzhenJmlvlupAttributeDesc::Swap(E_XiuzhenJmlvlupAttributeDesc* other) {
  if (other != this) {
    std::swap(m_value_, other->m_value_);
    std::swap(m_id_, other->m_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_XiuzhenJmlvlupAttributeDesc::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_XiuzhenJmlvlupAttributeDesc_descriptor_;
  metadata.reflection = E_XiuzhenJmlvlupAttributeDesc_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_XiuzhenJmlvlup::kMIdFieldNumber;
const int E_XiuzhenJmlvlup::kMTypeFieldNumber;
const int E_XiuzhenJmlvlup::kMLvlFieldNumber;
const int E_XiuzhenJmlvlup::kMNeedxwFieldNumber;
const int E_XiuzhenJmlvlup::kMSuccessRateFieldNumber;
const int E_XiuzhenJmlvlup::kMSpecialattriidFieldNumber;
const int E_XiuzhenJmlvlup::kMSpecialattrivalueFieldNumber;
const int E_XiuzhenJmlvlup::kMItemFieldNumber;
const int E_XiuzhenJmlvlup::kMAttributeFieldNumber;
#endif  // !_MSC_VER

E_XiuzhenJmlvlup::E_XiuzhenJmlvlup()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_XiuzhenJmlvlup::InitAsDefaultInstance() {
}

E_XiuzhenJmlvlup::E_XiuzhenJmlvlup(const E_XiuzhenJmlvlup& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_XiuzhenJmlvlup::SharedCtor() {
  _cached_size_ = 0;
  m_id_ = 0;
  m_type_ = 0;
  m_lvl_ = 0;
  m_needxw_ = GOOGLE_LONGLONG(0);
  m_success_rate_ = 0;
  m_specialattriid_ = 0;
  m_specialattrivalue_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_XiuzhenJmlvlup::~E_XiuzhenJmlvlup() {
  SharedDtor();
}

void E_XiuzhenJmlvlup::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_XiuzhenJmlvlup::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_XiuzhenJmlvlup::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_XiuzhenJmlvlup_descriptor_;
}

const E_XiuzhenJmlvlup& E_XiuzhenJmlvlup::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fXiuzhen_2eproto();
  return *default_instance_;
}

E_XiuzhenJmlvlup* E_XiuzhenJmlvlup::default_instance_ = NULL;

E_XiuzhenJmlvlup* E_XiuzhenJmlvlup::New() const {
  return new E_XiuzhenJmlvlup;
}

void E_XiuzhenJmlvlup::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_id_ = 0;
    m_type_ = 0;
    m_lvl_ = 0;
    m_needxw_ = GOOGLE_LONGLONG(0);
    m_success_rate_ = 0;
    m_specialattriid_ = 0;
    m_specialattrivalue_ = 0;
  }
  m_item_.Clear();
  m_attribute_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_XiuzhenJmlvlup::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_id_)));
          set_has_m_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_type;
        break;
      }

      // optional int32 m_type = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_type_)));
          set_has_m_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_m_lvl;
        break;
      }

      // optional int32 m_lvl = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_lvl:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_lvl_)));
          set_has_m_lvl();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_m_needxw;
        break;
      }

      // optional int64 m_needxw = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_needxw:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &m_needxw_)));
          set_has_m_needxw();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_m_success_rate;
        break;
      }

      // optional int32 m_success_rate = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_success_rate:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_success_rate_)));
          set_has_m_success_rate();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_m_specialattriid;
        break;
      }

      // optional int32 m_specialattriid = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_specialattriid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_specialattriid_)));
          set_has_m_specialattriid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_m_specialattrivalue;
        break;
      }

      // optional int32 m_specialattrivalue = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_specialattrivalue:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_specialattrivalue_)));
          set_has_m_specialattrivalue();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(66)) goto parse_m_item;
        break;
      }

      // repeated .proto_ff.E_XiuzhenJmlvlupItemDesc m_item = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_item:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_m_item()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(66)) goto parse_m_item;
        if (input->ExpectTag(74)) goto parse_m_attribute;
        break;
      }

      // repeated .proto_ff.E_XiuzhenJmlvlupAttributeDesc m_attribute = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_attribute:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_m_attribute()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(74)) goto parse_m_attribute;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_XiuzhenJmlvlup::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_id(), output);
  }

  // optional int32 m_type = 2;
  if (has_m_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_type(), output);
  }

  // optional int32 m_lvl = 3;
  if (has_m_lvl()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->m_lvl(), output);
  }

  // optional int64 m_needxw = 4;
  if (has_m_needxw()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->m_needxw(), output);
  }

  // optional int32 m_success_rate = 5;
  if (has_m_success_rate()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->m_success_rate(), output);
  }

  // optional int32 m_specialattriid = 6;
  if (has_m_specialattriid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->m_specialattriid(), output);
  }

  // optional int32 m_specialattrivalue = 7;
  if (has_m_specialattrivalue()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->m_specialattrivalue(), output);
  }

  // repeated .proto_ff.E_XiuzhenJmlvlupItemDesc m_item = 8;
  for (int i = 0; i < this->m_item_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->m_item(i), output);
  }

  // repeated .proto_ff.E_XiuzhenJmlvlupAttributeDesc m_attribute = 9;
  for (int i = 0; i < this->m_attribute_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->m_attribute(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_XiuzhenJmlvlup::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_id(), target);
  }

  // optional int32 m_type = 2;
  if (has_m_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_type(), target);
  }

  // optional int32 m_lvl = 3;
  if (has_m_lvl()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->m_lvl(), target);
  }

  // optional int64 m_needxw = 4;
  if (has_m_needxw()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->m_needxw(), target);
  }

  // optional int32 m_success_rate = 5;
  if (has_m_success_rate()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->m_success_rate(), target);
  }

  // optional int32 m_specialattriid = 6;
  if (has_m_specialattriid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->m_specialattriid(), target);
  }

  // optional int32 m_specialattrivalue = 7;
  if (has_m_specialattrivalue()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->m_specialattrivalue(), target);
  }

  // repeated .proto_ff.E_XiuzhenJmlvlupItemDesc m_item = 8;
  for (int i = 0; i < this->m_item_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        8, this->m_item(i), target);
  }

  // repeated .proto_ff.E_XiuzhenJmlvlupAttributeDesc m_attribute = 9;
  for (int i = 0; i < this->m_attribute_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        9, this->m_attribute(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_XiuzhenJmlvlup::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_id = 1;
    if (has_m_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_id());
    }

    // optional int32 m_type = 2;
    if (has_m_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_type());
    }

    // optional int32 m_lvl = 3;
    if (has_m_lvl()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_lvl());
    }

    // optional int64 m_needxw = 4;
    if (has_m_needxw()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->m_needxw());
    }

    // optional int32 m_success_rate = 5;
    if (has_m_success_rate()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_success_rate());
    }

    // optional int32 m_specialattriid = 6;
    if (has_m_specialattriid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_specialattriid());
    }

    // optional int32 m_specialattrivalue = 7;
    if (has_m_specialattrivalue()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_specialattrivalue());
    }

  }
  // repeated .proto_ff.E_XiuzhenJmlvlupItemDesc m_item = 8;
  total_size += 1 * this->m_item_size();
  for (int i = 0; i < this->m_item_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->m_item(i));
  }

  // repeated .proto_ff.E_XiuzhenJmlvlupAttributeDesc m_attribute = 9;
  total_size += 1 * this->m_attribute_size();
  for (int i = 0; i < this->m_attribute_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->m_attribute(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_XiuzhenJmlvlup::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_XiuzhenJmlvlup* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_XiuzhenJmlvlup*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_XiuzhenJmlvlup::MergeFrom(const E_XiuzhenJmlvlup& from) {
  GOOGLE_CHECK_NE(&from, this);
  m_item_.MergeFrom(from.m_item_);
  m_attribute_.MergeFrom(from.m_attribute_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_id()) {
      set_m_id(from.m_id());
    }
    if (from.has_m_type()) {
      set_m_type(from.m_type());
    }
    if (from.has_m_lvl()) {
      set_m_lvl(from.m_lvl());
    }
    if (from.has_m_needxw()) {
      set_m_needxw(from.m_needxw());
    }
    if (from.has_m_success_rate()) {
      set_m_success_rate(from.m_success_rate());
    }
    if (from.has_m_specialattriid()) {
      set_m_specialattriid(from.m_specialattriid());
    }
    if (from.has_m_specialattrivalue()) {
      set_m_specialattrivalue(from.m_specialattrivalue());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_XiuzhenJmlvlup::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_XiuzhenJmlvlup::CopyFrom(const E_XiuzhenJmlvlup& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_XiuzhenJmlvlup::IsInitialized() const {

  return true;
}

void E_XiuzhenJmlvlup::Swap(E_XiuzhenJmlvlup* other) {
  if (other != this) {
    std::swap(m_id_, other->m_id_);
    std::swap(m_type_, other->m_type_);
    std::swap(m_lvl_, other->m_lvl_);
    std::swap(m_needxw_, other->m_needxw_);
    std::swap(m_success_rate_, other->m_success_rate_);
    std::swap(m_specialattriid_, other->m_specialattriid_);
    std::swap(m_specialattrivalue_, other->m_specialattrivalue_);
    m_item_.Swap(&other->m_item_);
    m_attribute_.Swap(&other->m_attribute_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_XiuzhenJmlvlup::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_XiuzhenJmlvlup_descriptor_;
  metadata.reflection = E_XiuzhenJmlvlup_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_XiuzhenJmlvlup::kEXiuzhenJmlvlupListFieldNumber;
#endif  // !_MSC_VER

Sheet_XiuzhenJmlvlup::Sheet_XiuzhenJmlvlup()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_XiuzhenJmlvlup::InitAsDefaultInstance() {
}

Sheet_XiuzhenJmlvlup::Sheet_XiuzhenJmlvlup(const Sheet_XiuzhenJmlvlup& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_XiuzhenJmlvlup::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_XiuzhenJmlvlup::~Sheet_XiuzhenJmlvlup() {
  SharedDtor();
}

void Sheet_XiuzhenJmlvlup::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_XiuzhenJmlvlup::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_XiuzhenJmlvlup::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_XiuzhenJmlvlup_descriptor_;
}

const Sheet_XiuzhenJmlvlup& Sheet_XiuzhenJmlvlup::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fXiuzhen_2eproto();
  return *default_instance_;
}

Sheet_XiuzhenJmlvlup* Sheet_XiuzhenJmlvlup::default_instance_ = NULL;

Sheet_XiuzhenJmlvlup* Sheet_XiuzhenJmlvlup::New() const {
  return new Sheet_XiuzhenJmlvlup;
}

void Sheet_XiuzhenJmlvlup::Clear() {
  e_xiuzhenjmlvlup_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_XiuzhenJmlvlup::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.E_XiuzhenJmlvlup E_XiuzhenJmlvlup_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_E_XiuzhenJmlvlup_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_e_xiuzhenjmlvlup_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_E_XiuzhenJmlvlup_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_XiuzhenJmlvlup::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.E_XiuzhenJmlvlup E_XiuzhenJmlvlup_List = 1;
  for (int i = 0; i < this->e_xiuzhenjmlvlup_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->e_xiuzhenjmlvlup_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_XiuzhenJmlvlup::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.E_XiuzhenJmlvlup E_XiuzhenJmlvlup_List = 1;
  for (int i = 0; i < this->e_xiuzhenjmlvlup_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->e_xiuzhenjmlvlup_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_XiuzhenJmlvlup::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.E_XiuzhenJmlvlup E_XiuzhenJmlvlup_List = 1;
  total_size += 1 * this->e_xiuzhenjmlvlup_list_size();
  for (int i = 0; i < this->e_xiuzhenjmlvlup_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->e_xiuzhenjmlvlup_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_XiuzhenJmlvlup::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_XiuzhenJmlvlup* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_XiuzhenJmlvlup*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_XiuzhenJmlvlup::MergeFrom(const Sheet_XiuzhenJmlvlup& from) {
  GOOGLE_CHECK_NE(&from, this);
  e_xiuzhenjmlvlup_list_.MergeFrom(from.e_xiuzhenjmlvlup_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_XiuzhenJmlvlup::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_XiuzhenJmlvlup::CopyFrom(const Sheet_XiuzhenJmlvlup& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_XiuzhenJmlvlup::IsInitialized() const {

  return true;
}

void Sheet_XiuzhenJmlvlup::Swap(Sheet_XiuzhenJmlvlup* other) {
  if (other != this) {
    e_xiuzhenjmlvlup_list_.Swap(&other->e_xiuzhenjmlvlup_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_XiuzhenJmlvlup::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_XiuzhenJmlvlup_descriptor_;
  metadata.reflection = Sheet_XiuzhenJmlvlup_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_XiuzhenJmstageupItemDesc::kMNumFieldNumber;
const int E_XiuzhenJmstageupItemDesc::kMIdFieldNumber;
#endif  // !_MSC_VER

E_XiuzhenJmstageupItemDesc::E_XiuzhenJmstageupItemDesc()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_XiuzhenJmstageupItemDesc::InitAsDefaultInstance() {
}

E_XiuzhenJmstageupItemDesc::E_XiuzhenJmstageupItemDesc(const E_XiuzhenJmstageupItemDesc& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_XiuzhenJmstageupItemDesc::SharedCtor() {
  _cached_size_ = 0;
  m_num_ = 0;
  m_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_XiuzhenJmstageupItemDesc::~E_XiuzhenJmstageupItemDesc() {
  SharedDtor();
}

void E_XiuzhenJmstageupItemDesc::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_XiuzhenJmstageupItemDesc::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_XiuzhenJmstageupItemDesc::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_XiuzhenJmstageupItemDesc_descriptor_;
}

const E_XiuzhenJmstageupItemDesc& E_XiuzhenJmstageupItemDesc::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fXiuzhen_2eproto();
  return *default_instance_;
}

E_XiuzhenJmstageupItemDesc* E_XiuzhenJmstageupItemDesc::default_instance_ = NULL;

E_XiuzhenJmstageupItemDesc* E_XiuzhenJmstageupItemDesc::New() const {
  return new E_XiuzhenJmstageupItemDesc;
}

void E_XiuzhenJmstageupItemDesc::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_num_ = 0;
    m_id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_XiuzhenJmstageupItemDesc::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_num = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_num_)));
          set_has_m_num();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_id;
        break;
      }

      // optional int32 m_id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_id_)));
          set_has_m_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_XiuzhenJmstageupItemDesc::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_num = 1;
  if (has_m_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_num(), output);
  }

  // optional int32 m_id = 2;
  if (has_m_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_XiuzhenJmstageupItemDesc::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_num = 1;
  if (has_m_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_num(), target);
  }

  // optional int32 m_id = 2;
  if (has_m_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_XiuzhenJmstageupItemDesc::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_num = 1;
    if (has_m_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_num());
    }

    // optional int32 m_id = 2;
    if (has_m_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_id());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_XiuzhenJmstageupItemDesc::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_XiuzhenJmstageupItemDesc* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_XiuzhenJmstageupItemDesc*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_XiuzhenJmstageupItemDesc::MergeFrom(const E_XiuzhenJmstageupItemDesc& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_num()) {
      set_m_num(from.m_num());
    }
    if (from.has_m_id()) {
      set_m_id(from.m_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_XiuzhenJmstageupItemDesc::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_XiuzhenJmstageupItemDesc::CopyFrom(const E_XiuzhenJmstageupItemDesc& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_XiuzhenJmstageupItemDesc::IsInitialized() const {

  return true;
}

void E_XiuzhenJmstageupItemDesc::Swap(E_XiuzhenJmstageupItemDesc* other) {
  if (other != this) {
    std::swap(m_num_, other->m_num_);
    std::swap(m_id_, other->m_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_XiuzhenJmstageupItemDesc::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_XiuzhenJmstageupItemDesc_descriptor_;
  metadata.reflection = E_XiuzhenJmstageupItemDesc_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_XiuzhenJmstageupAttributeDesc::kMValueFieldNumber;
const int E_XiuzhenJmstageupAttributeDesc::kMIdFieldNumber;
#endif  // !_MSC_VER

E_XiuzhenJmstageupAttributeDesc::E_XiuzhenJmstageupAttributeDesc()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_XiuzhenJmstageupAttributeDesc::InitAsDefaultInstance() {
}

E_XiuzhenJmstageupAttributeDesc::E_XiuzhenJmstageupAttributeDesc(const E_XiuzhenJmstageupAttributeDesc& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_XiuzhenJmstageupAttributeDesc::SharedCtor() {
  _cached_size_ = 0;
  m_value_ = 0;
  m_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_XiuzhenJmstageupAttributeDesc::~E_XiuzhenJmstageupAttributeDesc() {
  SharedDtor();
}

void E_XiuzhenJmstageupAttributeDesc::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_XiuzhenJmstageupAttributeDesc::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_XiuzhenJmstageupAttributeDesc::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_XiuzhenJmstageupAttributeDesc_descriptor_;
}

const E_XiuzhenJmstageupAttributeDesc& E_XiuzhenJmstageupAttributeDesc::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fXiuzhen_2eproto();
  return *default_instance_;
}

E_XiuzhenJmstageupAttributeDesc* E_XiuzhenJmstageupAttributeDesc::default_instance_ = NULL;

E_XiuzhenJmstageupAttributeDesc* E_XiuzhenJmstageupAttributeDesc::New() const {
  return new E_XiuzhenJmstageupAttributeDesc;
}

void E_XiuzhenJmstageupAttributeDesc::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_value_ = 0;
    m_id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_XiuzhenJmstageupAttributeDesc::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_value = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_value_)));
          set_has_m_value();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_id;
        break;
      }

      // optional int32 m_id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_id_)));
          set_has_m_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_XiuzhenJmstageupAttributeDesc::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_value = 1;
  if (has_m_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_value(), output);
  }

  // optional int32 m_id = 2;
  if (has_m_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_XiuzhenJmstageupAttributeDesc::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_value = 1;
  if (has_m_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_value(), target);
  }

  // optional int32 m_id = 2;
  if (has_m_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_XiuzhenJmstageupAttributeDesc::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_value = 1;
    if (has_m_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_value());
    }

    // optional int32 m_id = 2;
    if (has_m_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_id());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_XiuzhenJmstageupAttributeDesc::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_XiuzhenJmstageupAttributeDesc* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_XiuzhenJmstageupAttributeDesc*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_XiuzhenJmstageupAttributeDesc::MergeFrom(const E_XiuzhenJmstageupAttributeDesc& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_value()) {
      set_m_value(from.m_value());
    }
    if (from.has_m_id()) {
      set_m_id(from.m_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_XiuzhenJmstageupAttributeDesc::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_XiuzhenJmstageupAttributeDesc::CopyFrom(const E_XiuzhenJmstageupAttributeDesc& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_XiuzhenJmstageupAttributeDesc::IsInitialized() const {

  return true;
}

void E_XiuzhenJmstageupAttributeDesc::Swap(E_XiuzhenJmstageupAttributeDesc* other) {
  if (other != this) {
    std::swap(m_value_, other->m_value_);
    std::swap(m_id_, other->m_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_XiuzhenJmstageupAttributeDesc::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_XiuzhenJmstageupAttributeDesc_descriptor_;
  metadata.reflection = E_XiuzhenJmstageupAttributeDesc_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_XiuzhenJmstageup::kMIdFieldNumber;
const int E_XiuzhenJmstageup::kMTypeFieldNumber;
const int E_XiuzhenJmstageup::kMStageFieldNumber;
const int E_XiuzhenJmstageup::kMNameFieldNumber;
const int E_XiuzhenJmstageup::kMNeedgfunlockFieldNumber;
const int E_XiuzhenJmstageup::kMSuccessRateFieldNumber;
const int E_XiuzhenJmstageup::kMBlessingFieldNumber;
const int E_XiuzhenJmstageup::kMAwakeskillidFieldNumber;
const int E_XiuzhenJmstageup::kMAwakeskilllvlFieldNumber;
const int E_XiuzhenJmstageup::kMItemFieldNumber;
const int E_XiuzhenJmstageup::kMAttributeFieldNumber;
#endif  // !_MSC_VER

E_XiuzhenJmstageup::E_XiuzhenJmstageup()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_XiuzhenJmstageup::InitAsDefaultInstance() {
}

E_XiuzhenJmstageup::E_XiuzhenJmstageup(const E_XiuzhenJmstageup& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_XiuzhenJmstageup::SharedCtor() {
  _cached_size_ = 0;
  m_id_ = 0;
  m_type_ = 0;
  m_stage_ = 0;
  m_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  m_needgfunlock_ = 0;
  m_success_rate_ = 0;
  m_blessing_ = 0;
  m_awakeskillid_ = 0;
  m_awakeskilllvl_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_XiuzhenJmstageup::~E_XiuzhenJmstageup() {
  SharedDtor();
}

void E_XiuzhenJmstageup::SharedDtor() {
  if (m_name_ != &::google::protobuf::internal::kEmptyString) {
    delete m_name_;
  }
  if (this != default_instance_) {
  }
}

void E_XiuzhenJmstageup::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_XiuzhenJmstageup::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_XiuzhenJmstageup_descriptor_;
}

const E_XiuzhenJmstageup& E_XiuzhenJmstageup::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fXiuzhen_2eproto();
  return *default_instance_;
}

E_XiuzhenJmstageup* E_XiuzhenJmstageup::default_instance_ = NULL;

E_XiuzhenJmstageup* E_XiuzhenJmstageup::New() const {
  return new E_XiuzhenJmstageup;
}

void E_XiuzhenJmstageup::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_id_ = 0;
    m_type_ = 0;
    m_stage_ = 0;
    if (has_m_name()) {
      if (m_name_ != &::google::protobuf::internal::kEmptyString) {
        m_name_->clear();
      }
    }
    m_needgfunlock_ = 0;
    m_success_rate_ = 0;
    m_blessing_ = 0;
    m_awakeskillid_ = 0;
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    m_awakeskilllvl_ = 0;
  }
  m_item_.Clear();
  m_attribute_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_XiuzhenJmstageup::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_id_)));
          set_has_m_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_type;
        break;
      }

      // optional int32 m_type = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_type_)));
          set_has_m_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_m_stage;
        break;
      }

      // optional int32 m_stage = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_stage:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_stage_)));
          set_has_m_stage();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_m_name;
        break;
      }

      // optional string m_name = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_m_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->m_name().data(), this->m_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_m_needgfunlock;
        break;
      }

      // optional int32 m_needgfunlock = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_needgfunlock:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_needgfunlock_)));
          set_has_m_needgfunlock();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_m_success_rate;
        break;
      }

      // optional int32 m_success_rate = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_success_rate:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_success_rate_)));
          set_has_m_success_rate();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_m_blessing;
        break;
      }

      // optional int32 m_blessing = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_blessing:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_blessing_)));
          set_has_m_blessing();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(64)) goto parse_m_awakeskillid;
        break;
      }

      // optional int32 m_awakeskillid = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_awakeskillid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_awakeskillid_)));
          set_has_m_awakeskillid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(72)) goto parse_m_awakeskilllvl;
        break;
      }

      // optional int32 m_awakeskilllvl = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_awakeskilllvl:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_awakeskilllvl_)));
          set_has_m_awakeskilllvl();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(82)) goto parse_m_item;
        break;
      }

      // repeated .proto_ff.E_XiuzhenJmstageupItemDesc m_item = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_item:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_m_item()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(82)) goto parse_m_item;
        if (input->ExpectTag(90)) goto parse_m_attribute;
        break;
      }

      // repeated .proto_ff.E_XiuzhenJmstageupAttributeDesc m_attribute = 11;
      case 11: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_attribute:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_m_attribute()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(90)) goto parse_m_attribute;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_XiuzhenJmstageup::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_id(), output);
  }

  // optional int32 m_type = 2;
  if (has_m_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_type(), output);
  }

  // optional int32 m_stage = 3;
  if (has_m_stage()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->m_stage(), output);
  }

  // optional string m_name = 4;
  if (has_m_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_name().data(), this->m_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->m_name(), output);
  }

  // optional int32 m_needgfunlock = 5;
  if (has_m_needgfunlock()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->m_needgfunlock(), output);
  }

  // optional int32 m_success_rate = 6;
  if (has_m_success_rate()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->m_success_rate(), output);
  }

  // optional int32 m_blessing = 7;
  if (has_m_blessing()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->m_blessing(), output);
  }

  // optional int32 m_awakeskillid = 8;
  if (has_m_awakeskillid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->m_awakeskillid(), output);
  }

  // optional int32 m_awakeskilllvl = 9;
  if (has_m_awakeskilllvl()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->m_awakeskilllvl(), output);
  }

  // repeated .proto_ff.E_XiuzhenJmstageupItemDesc m_item = 10;
  for (int i = 0; i < this->m_item_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->m_item(i), output);
  }

  // repeated .proto_ff.E_XiuzhenJmstageupAttributeDesc m_attribute = 11;
  for (int i = 0; i < this->m_attribute_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, this->m_attribute(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_XiuzhenJmstageup::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_id(), target);
  }

  // optional int32 m_type = 2;
  if (has_m_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_type(), target);
  }

  // optional int32 m_stage = 3;
  if (has_m_stage()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->m_stage(), target);
  }

  // optional string m_name = 4;
  if (has_m_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_name().data(), this->m_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->m_name(), target);
  }

  // optional int32 m_needgfunlock = 5;
  if (has_m_needgfunlock()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->m_needgfunlock(), target);
  }

  // optional int32 m_success_rate = 6;
  if (has_m_success_rate()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->m_success_rate(), target);
  }

  // optional int32 m_blessing = 7;
  if (has_m_blessing()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->m_blessing(), target);
  }

  // optional int32 m_awakeskillid = 8;
  if (has_m_awakeskillid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->m_awakeskillid(), target);
  }

  // optional int32 m_awakeskilllvl = 9;
  if (has_m_awakeskilllvl()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->m_awakeskilllvl(), target);
  }

  // repeated .proto_ff.E_XiuzhenJmstageupItemDesc m_item = 10;
  for (int i = 0; i < this->m_item_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        10, this->m_item(i), target);
  }

  // repeated .proto_ff.E_XiuzhenJmstageupAttributeDesc m_attribute = 11;
  for (int i = 0; i < this->m_attribute_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        11, this->m_attribute(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_XiuzhenJmstageup::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_id = 1;
    if (has_m_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_id());
    }

    // optional int32 m_type = 2;
    if (has_m_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_type());
    }

    // optional int32 m_stage = 3;
    if (has_m_stage()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_stage());
    }

    // optional string m_name = 4;
    if (has_m_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->m_name());
    }

    // optional int32 m_needgfunlock = 5;
    if (has_m_needgfunlock()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_needgfunlock());
    }

    // optional int32 m_success_rate = 6;
    if (has_m_success_rate()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_success_rate());
    }

    // optional int32 m_blessing = 7;
    if (has_m_blessing()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_blessing());
    }

    // optional int32 m_awakeskillid = 8;
    if (has_m_awakeskillid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_awakeskillid());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional int32 m_awakeskilllvl = 9;
    if (has_m_awakeskilllvl()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_awakeskilllvl());
    }

  }
  // repeated .proto_ff.E_XiuzhenJmstageupItemDesc m_item = 10;
  total_size += 1 * this->m_item_size();
  for (int i = 0; i < this->m_item_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->m_item(i));
  }

  // repeated .proto_ff.E_XiuzhenJmstageupAttributeDesc m_attribute = 11;
  total_size += 1 * this->m_attribute_size();
  for (int i = 0; i < this->m_attribute_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->m_attribute(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_XiuzhenJmstageup::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_XiuzhenJmstageup* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_XiuzhenJmstageup*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_XiuzhenJmstageup::MergeFrom(const E_XiuzhenJmstageup& from) {
  GOOGLE_CHECK_NE(&from, this);
  m_item_.MergeFrom(from.m_item_);
  m_attribute_.MergeFrom(from.m_attribute_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_id()) {
      set_m_id(from.m_id());
    }
    if (from.has_m_type()) {
      set_m_type(from.m_type());
    }
    if (from.has_m_stage()) {
      set_m_stage(from.m_stage());
    }
    if (from.has_m_name()) {
      set_m_name(from.m_name());
    }
    if (from.has_m_needgfunlock()) {
      set_m_needgfunlock(from.m_needgfunlock());
    }
    if (from.has_m_success_rate()) {
      set_m_success_rate(from.m_success_rate());
    }
    if (from.has_m_blessing()) {
      set_m_blessing(from.m_blessing());
    }
    if (from.has_m_awakeskillid()) {
      set_m_awakeskillid(from.m_awakeskillid());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_m_awakeskilllvl()) {
      set_m_awakeskilllvl(from.m_awakeskilllvl());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_XiuzhenJmstageup::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_XiuzhenJmstageup::CopyFrom(const E_XiuzhenJmstageup& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_XiuzhenJmstageup::IsInitialized() const {

  return true;
}

void E_XiuzhenJmstageup::Swap(E_XiuzhenJmstageup* other) {
  if (other != this) {
    std::swap(m_id_, other->m_id_);
    std::swap(m_type_, other->m_type_);
    std::swap(m_stage_, other->m_stage_);
    std::swap(m_name_, other->m_name_);
    std::swap(m_needgfunlock_, other->m_needgfunlock_);
    std::swap(m_success_rate_, other->m_success_rate_);
    std::swap(m_blessing_, other->m_blessing_);
    std::swap(m_awakeskillid_, other->m_awakeskillid_);
    std::swap(m_awakeskilllvl_, other->m_awakeskilllvl_);
    m_item_.Swap(&other->m_item_);
    m_attribute_.Swap(&other->m_attribute_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_XiuzhenJmstageup::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_XiuzhenJmstageup_descriptor_;
  metadata.reflection = E_XiuzhenJmstageup_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_XiuzhenJmstageup::kEXiuzhenJmstageupListFieldNumber;
#endif  // !_MSC_VER

Sheet_XiuzhenJmstageup::Sheet_XiuzhenJmstageup()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_XiuzhenJmstageup::InitAsDefaultInstance() {
}

Sheet_XiuzhenJmstageup::Sheet_XiuzhenJmstageup(const Sheet_XiuzhenJmstageup& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_XiuzhenJmstageup::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_XiuzhenJmstageup::~Sheet_XiuzhenJmstageup() {
  SharedDtor();
}

void Sheet_XiuzhenJmstageup::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_XiuzhenJmstageup::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_XiuzhenJmstageup::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_XiuzhenJmstageup_descriptor_;
}

const Sheet_XiuzhenJmstageup& Sheet_XiuzhenJmstageup::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fXiuzhen_2eproto();
  return *default_instance_;
}

Sheet_XiuzhenJmstageup* Sheet_XiuzhenJmstageup::default_instance_ = NULL;

Sheet_XiuzhenJmstageup* Sheet_XiuzhenJmstageup::New() const {
  return new Sheet_XiuzhenJmstageup;
}

void Sheet_XiuzhenJmstageup::Clear() {
  e_xiuzhenjmstageup_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_XiuzhenJmstageup::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.E_XiuzhenJmstageup E_XiuzhenJmstageup_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_E_XiuzhenJmstageup_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_e_xiuzhenjmstageup_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_E_XiuzhenJmstageup_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_XiuzhenJmstageup::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.E_XiuzhenJmstageup E_XiuzhenJmstageup_List = 1;
  for (int i = 0; i < this->e_xiuzhenjmstageup_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->e_xiuzhenjmstageup_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_XiuzhenJmstageup::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.E_XiuzhenJmstageup E_XiuzhenJmstageup_List = 1;
  for (int i = 0; i < this->e_xiuzhenjmstageup_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->e_xiuzhenjmstageup_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_XiuzhenJmstageup::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.E_XiuzhenJmstageup E_XiuzhenJmstageup_List = 1;
  total_size += 1 * this->e_xiuzhenjmstageup_list_size();
  for (int i = 0; i < this->e_xiuzhenjmstageup_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->e_xiuzhenjmstageup_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_XiuzhenJmstageup::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_XiuzhenJmstageup* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_XiuzhenJmstageup*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_XiuzhenJmstageup::MergeFrom(const Sheet_XiuzhenJmstageup& from) {
  GOOGLE_CHECK_NE(&from, this);
  e_xiuzhenjmstageup_list_.MergeFrom(from.e_xiuzhenjmstageup_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_XiuzhenJmstageup::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_XiuzhenJmstageup::CopyFrom(const Sheet_XiuzhenJmstageup& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_XiuzhenJmstageup::IsInitialized() const {

  return true;
}

void Sheet_XiuzhenJmstageup::Swap(Sheet_XiuzhenJmstageup* other) {
  if (other != this) {
    e_xiuzhenjmstageup_list_.Swap(&other->e_xiuzhenjmstageup_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_XiuzhenJmstageup::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_XiuzhenJmstageup_descriptor_;
  metadata.reflection = Sheet_XiuzhenJmstageup_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_XiuzhenJmmergeupCsDesc::kMStageFieldNumber;
const int E_XiuzhenJmmergeupCsDesc::kMTypeFieldNumber;
#endif  // !_MSC_VER

E_XiuzhenJmmergeupCsDesc::E_XiuzhenJmmergeupCsDesc()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_XiuzhenJmmergeupCsDesc::InitAsDefaultInstance() {
}

E_XiuzhenJmmergeupCsDesc::E_XiuzhenJmmergeupCsDesc(const E_XiuzhenJmmergeupCsDesc& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_XiuzhenJmmergeupCsDesc::SharedCtor() {
  _cached_size_ = 0;
  m_stage_ = 0;
  m_type_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_XiuzhenJmmergeupCsDesc::~E_XiuzhenJmmergeupCsDesc() {
  SharedDtor();
}

void E_XiuzhenJmmergeupCsDesc::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_XiuzhenJmmergeupCsDesc::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_XiuzhenJmmergeupCsDesc::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_XiuzhenJmmergeupCsDesc_descriptor_;
}

const E_XiuzhenJmmergeupCsDesc& E_XiuzhenJmmergeupCsDesc::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fXiuzhen_2eproto();
  return *default_instance_;
}

E_XiuzhenJmmergeupCsDesc* E_XiuzhenJmmergeupCsDesc::default_instance_ = NULL;

E_XiuzhenJmmergeupCsDesc* E_XiuzhenJmmergeupCsDesc::New() const {
  return new E_XiuzhenJmmergeupCsDesc;
}

void E_XiuzhenJmmergeupCsDesc::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_stage_ = 0;
    m_type_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_XiuzhenJmmergeupCsDesc::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_stage = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_stage_)));
          set_has_m_stage();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_type;
        break;
      }

      // optional int32 m_type = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_type_)));
          set_has_m_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_XiuzhenJmmergeupCsDesc::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_stage = 1;
  if (has_m_stage()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_stage(), output);
  }

  // optional int32 m_type = 2;
  if (has_m_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_type(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_XiuzhenJmmergeupCsDesc::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_stage = 1;
  if (has_m_stage()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_stage(), target);
  }

  // optional int32 m_type = 2;
  if (has_m_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_type(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_XiuzhenJmmergeupCsDesc::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_stage = 1;
    if (has_m_stage()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_stage());
    }

    // optional int32 m_type = 2;
    if (has_m_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_type());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_XiuzhenJmmergeupCsDesc::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_XiuzhenJmmergeupCsDesc* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_XiuzhenJmmergeupCsDesc*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_XiuzhenJmmergeupCsDesc::MergeFrom(const E_XiuzhenJmmergeupCsDesc& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_stage()) {
      set_m_stage(from.m_stage());
    }
    if (from.has_m_type()) {
      set_m_type(from.m_type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_XiuzhenJmmergeupCsDesc::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_XiuzhenJmmergeupCsDesc::CopyFrom(const E_XiuzhenJmmergeupCsDesc& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_XiuzhenJmmergeupCsDesc::IsInitialized() const {

  return true;
}

void E_XiuzhenJmmergeupCsDesc::Swap(E_XiuzhenJmmergeupCsDesc* other) {
  if (other != this) {
    std::swap(m_stage_, other->m_stage_);
    std::swap(m_type_, other->m_type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_XiuzhenJmmergeupCsDesc::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_XiuzhenJmmergeupCsDesc_descriptor_;
  metadata.reflection = E_XiuzhenJmmergeupCsDesc_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_XiuzhenJmmergeupAttributeDesc::kMValueFieldNumber;
const int E_XiuzhenJmmergeupAttributeDesc::kMIdFieldNumber;
#endif  // !_MSC_VER

E_XiuzhenJmmergeupAttributeDesc::E_XiuzhenJmmergeupAttributeDesc()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_XiuzhenJmmergeupAttributeDesc::InitAsDefaultInstance() {
}

E_XiuzhenJmmergeupAttributeDesc::E_XiuzhenJmmergeupAttributeDesc(const E_XiuzhenJmmergeupAttributeDesc& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_XiuzhenJmmergeupAttributeDesc::SharedCtor() {
  _cached_size_ = 0;
  m_value_ = 0;
  m_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_XiuzhenJmmergeupAttributeDesc::~E_XiuzhenJmmergeupAttributeDesc() {
  SharedDtor();
}

void E_XiuzhenJmmergeupAttributeDesc::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_XiuzhenJmmergeupAttributeDesc::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_XiuzhenJmmergeupAttributeDesc::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_XiuzhenJmmergeupAttributeDesc_descriptor_;
}

const E_XiuzhenJmmergeupAttributeDesc& E_XiuzhenJmmergeupAttributeDesc::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fXiuzhen_2eproto();
  return *default_instance_;
}

E_XiuzhenJmmergeupAttributeDesc* E_XiuzhenJmmergeupAttributeDesc::default_instance_ = NULL;

E_XiuzhenJmmergeupAttributeDesc* E_XiuzhenJmmergeupAttributeDesc::New() const {
  return new E_XiuzhenJmmergeupAttributeDesc;
}

void E_XiuzhenJmmergeupAttributeDesc::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_value_ = 0;
    m_id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_XiuzhenJmmergeupAttributeDesc::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_value = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_value_)));
          set_has_m_value();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_id;
        break;
      }

      // optional int32 m_id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_id_)));
          set_has_m_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_XiuzhenJmmergeupAttributeDesc::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_value = 1;
  if (has_m_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_value(), output);
  }

  // optional int32 m_id = 2;
  if (has_m_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_XiuzhenJmmergeupAttributeDesc::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_value = 1;
  if (has_m_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_value(), target);
  }

  // optional int32 m_id = 2;
  if (has_m_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_XiuzhenJmmergeupAttributeDesc::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_value = 1;
    if (has_m_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_value());
    }

    // optional int32 m_id = 2;
    if (has_m_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_id());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_XiuzhenJmmergeupAttributeDesc::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_XiuzhenJmmergeupAttributeDesc* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_XiuzhenJmmergeupAttributeDesc*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_XiuzhenJmmergeupAttributeDesc::MergeFrom(const E_XiuzhenJmmergeupAttributeDesc& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_value()) {
      set_m_value(from.m_value());
    }
    if (from.has_m_id()) {
      set_m_id(from.m_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_XiuzhenJmmergeupAttributeDesc::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_XiuzhenJmmergeupAttributeDesc::CopyFrom(const E_XiuzhenJmmergeupAttributeDesc& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_XiuzhenJmmergeupAttributeDesc::IsInitialized() const {

  return true;
}

void E_XiuzhenJmmergeupAttributeDesc::Swap(E_XiuzhenJmmergeupAttributeDesc* other) {
  if (other != this) {
    std::swap(m_value_, other->m_value_);
    std::swap(m_id_, other->m_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_XiuzhenJmmergeupAttributeDesc::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_XiuzhenJmmergeupAttributeDesc_descriptor_;
  metadata.reflection = E_XiuzhenJmmergeupAttributeDesc_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_XiuzhenJmmergeup::kMIdFieldNumber;
const int E_XiuzhenJmmergeup::kMGfTypeFieldNumber;
const int E_XiuzhenJmmergeup::kMAwakeskillidFieldNumber;
const int E_XiuzhenJmmergeup::kMAwakeskilllvlFieldNumber;
const int E_XiuzhenJmmergeup::kMCsFieldNumber;
const int E_XiuzhenJmmergeup::kMAttributeFieldNumber;
#endif  // !_MSC_VER

E_XiuzhenJmmergeup::E_XiuzhenJmmergeup()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_XiuzhenJmmergeup::InitAsDefaultInstance() {
}

E_XiuzhenJmmergeup::E_XiuzhenJmmergeup(const E_XiuzhenJmmergeup& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_XiuzhenJmmergeup::SharedCtor() {
  _cached_size_ = 0;
  m_id_ = 0;
  m_gf_type_ = 0;
  m_awakeskillid_ = 0;
  m_awakeskilllvl_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_XiuzhenJmmergeup::~E_XiuzhenJmmergeup() {
  SharedDtor();
}

void E_XiuzhenJmmergeup::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_XiuzhenJmmergeup::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_XiuzhenJmmergeup::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_XiuzhenJmmergeup_descriptor_;
}

const E_XiuzhenJmmergeup& E_XiuzhenJmmergeup::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fXiuzhen_2eproto();
  return *default_instance_;
}

E_XiuzhenJmmergeup* E_XiuzhenJmmergeup::default_instance_ = NULL;

E_XiuzhenJmmergeup* E_XiuzhenJmmergeup::New() const {
  return new E_XiuzhenJmmergeup;
}

void E_XiuzhenJmmergeup::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_id_ = 0;
    m_gf_type_ = 0;
    m_awakeskillid_ = 0;
    m_awakeskilllvl_ = 0;
  }
  m_cs_.Clear();
  m_attribute_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_XiuzhenJmmergeup::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_id_)));
          set_has_m_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_gf_type;
        break;
      }

      // optional int32 m_gf_type = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_gf_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_gf_type_)));
          set_has_m_gf_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_m_awakeskillid;
        break;
      }

      // optional int32 m_awakeskillid = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_awakeskillid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_awakeskillid_)));
          set_has_m_awakeskillid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_m_awakeskilllvl;
        break;
      }

      // optional int32 m_awakeskilllvl = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_awakeskilllvl:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_awakeskilllvl_)));
          set_has_m_awakeskilllvl();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_m_cs;
        break;
      }

      // repeated .proto_ff.E_XiuzhenJmmergeupCsDesc m_cs = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_cs:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_m_cs()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_m_cs;
        if (input->ExpectTag(50)) goto parse_m_attribute;
        break;
      }

      // repeated .proto_ff.E_XiuzhenJmmergeupAttributeDesc m_attribute = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_attribute:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_m_attribute()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_m_attribute;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_XiuzhenJmmergeup::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_id(), output);
  }

  // optional int32 m_gf_type = 2;
  if (has_m_gf_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_gf_type(), output);
  }

  // optional int32 m_awakeskillid = 3;
  if (has_m_awakeskillid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->m_awakeskillid(), output);
  }

  // optional int32 m_awakeskilllvl = 4;
  if (has_m_awakeskilllvl()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->m_awakeskilllvl(), output);
  }

  // repeated .proto_ff.E_XiuzhenJmmergeupCsDesc m_cs = 5;
  for (int i = 0; i < this->m_cs_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->m_cs(i), output);
  }

  // repeated .proto_ff.E_XiuzhenJmmergeupAttributeDesc m_attribute = 6;
  for (int i = 0; i < this->m_attribute_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->m_attribute(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_XiuzhenJmmergeup::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_id(), target);
  }

  // optional int32 m_gf_type = 2;
  if (has_m_gf_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_gf_type(), target);
  }

  // optional int32 m_awakeskillid = 3;
  if (has_m_awakeskillid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->m_awakeskillid(), target);
  }

  // optional int32 m_awakeskilllvl = 4;
  if (has_m_awakeskilllvl()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->m_awakeskilllvl(), target);
  }

  // repeated .proto_ff.E_XiuzhenJmmergeupCsDesc m_cs = 5;
  for (int i = 0; i < this->m_cs_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->m_cs(i), target);
  }

  // repeated .proto_ff.E_XiuzhenJmmergeupAttributeDesc m_attribute = 6;
  for (int i = 0; i < this->m_attribute_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        6, this->m_attribute(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_XiuzhenJmmergeup::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_id = 1;
    if (has_m_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_id());
    }

    // optional int32 m_gf_type = 2;
    if (has_m_gf_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_gf_type());
    }

    // optional int32 m_awakeskillid = 3;
    if (has_m_awakeskillid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_awakeskillid());
    }

    // optional int32 m_awakeskilllvl = 4;
    if (has_m_awakeskilllvl()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_awakeskilllvl());
    }

  }
  // repeated .proto_ff.E_XiuzhenJmmergeupCsDesc m_cs = 5;
  total_size += 1 * this->m_cs_size();
  for (int i = 0; i < this->m_cs_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->m_cs(i));
  }

  // repeated .proto_ff.E_XiuzhenJmmergeupAttributeDesc m_attribute = 6;
  total_size += 1 * this->m_attribute_size();
  for (int i = 0; i < this->m_attribute_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->m_attribute(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_XiuzhenJmmergeup::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_XiuzhenJmmergeup* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_XiuzhenJmmergeup*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_XiuzhenJmmergeup::MergeFrom(const E_XiuzhenJmmergeup& from) {
  GOOGLE_CHECK_NE(&from, this);
  m_cs_.MergeFrom(from.m_cs_);
  m_attribute_.MergeFrom(from.m_attribute_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_id()) {
      set_m_id(from.m_id());
    }
    if (from.has_m_gf_type()) {
      set_m_gf_type(from.m_gf_type());
    }
    if (from.has_m_awakeskillid()) {
      set_m_awakeskillid(from.m_awakeskillid());
    }
    if (from.has_m_awakeskilllvl()) {
      set_m_awakeskilllvl(from.m_awakeskilllvl());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_XiuzhenJmmergeup::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_XiuzhenJmmergeup::CopyFrom(const E_XiuzhenJmmergeup& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_XiuzhenJmmergeup::IsInitialized() const {

  return true;
}

void E_XiuzhenJmmergeup::Swap(E_XiuzhenJmmergeup* other) {
  if (other != this) {
    std::swap(m_id_, other->m_id_);
    std::swap(m_gf_type_, other->m_gf_type_);
    std::swap(m_awakeskillid_, other->m_awakeskillid_);
    std::swap(m_awakeskilllvl_, other->m_awakeskilllvl_);
    m_cs_.Swap(&other->m_cs_);
    m_attribute_.Swap(&other->m_attribute_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_XiuzhenJmmergeup::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_XiuzhenJmmergeup_descriptor_;
  metadata.reflection = E_XiuzhenJmmergeup_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_XiuzhenJmmergeup::kEXiuzhenJmmergeupListFieldNumber;
#endif  // !_MSC_VER

Sheet_XiuzhenJmmergeup::Sheet_XiuzhenJmmergeup()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_XiuzhenJmmergeup::InitAsDefaultInstance() {
}

Sheet_XiuzhenJmmergeup::Sheet_XiuzhenJmmergeup(const Sheet_XiuzhenJmmergeup& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_XiuzhenJmmergeup::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_XiuzhenJmmergeup::~Sheet_XiuzhenJmmergeup() {
  SharedDtor();
}

void Sheet_XiuzhenJmmergeup::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_XiuzhenJmmergeup::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_XiuzhenJmmergeup::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_XiuzhenJmmergeup_descriptor_;
}

const Sheet_XiuzhenJmmergeup& Sheet_XiuzhenJmmergeup::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fXiuzhen_2eproto();
  return *default_instance_;
}

Sheet_XiuzhenJmmergeup* Sheet_XiuzhenJmmergeup::default_instance_ = NULL;

Sheet_XiuzhenJmmergeup* Sheet_XiuzhenJmmergeup::New() const {
  return new Sheet_XiuzhenJmmergeup;
}

void Sheet_XiuzhenJmmergeup::Clear() {
  e_xiuzhenjmmergeup_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_XiuzhenJmmergeup::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.E_XiuzhenJmmergeup E_XiuzhenJmmergeup_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_E_XiuzhenJmmergeup_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_e_xiuzhenjmmergeup_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_E_XiuzhenJmmergeup_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_XiuzhenJmmergeup::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.E_XiuzhenJmmergeup E_XiuzhenJmmergeup_List = 1;
  for (int i = 0; i < this->e_xiuzhenjmmergeup_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->e_xiuzhenjmmergeup_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_XiuzhenJmmergeup::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.E_XiuzhenJmmergeup E_XiuzhenJmmergeup_List = 1;
  for (int i = 0; i < this->e_xiuzhenjmmergeup_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->e_xiuzhenjmmergeup_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_XiuzhenJmmergeup::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.E_XiuzhenJmmergeup E_XiuzhenJmmergeup_List = 1;
  total_size += 1 * this->e_xiuzhenjmmergeup_list_size();
  for (int i = 0; i < this->e_xiuzhenjmmergeup_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->e_xiuzhenjmmergeup_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_XiuzhenJmmergeup::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_XiuzhenJmmergeup* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_XiuzhenJmmergeup*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_XiuzhenJmmergeup::MergeFrom(const Sheet_XiuzhenJmmergeup& from) {
  GOOGLE_CHECK_NE(&from, this);
  e_xiuzhenjmmergeup_list_.MergeFrom(from.e_xiuzhenjmmergeup_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_XiuzhenJmmergeup::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_XiuzhenJmmergeup::CopyFrom(const Sheet_XiuzhenJmmergeup& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_XiuzhenJmmergeup::IsInitialized() const {

  return true;
}

void Sheet_XiuzhenJmmergeup::Swap(Sheet_XiuzhenJmmergeup* other) {
  if (other != this) {
    e_xiuzhenjmmergeup_list_.Swap(&other->e_xiuzhenjmmergeup_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_XiuzhenJmmergeup::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_XiuzhenJmmergeup_descriptor_;
  metadata.reflection = Sheet_XiuzhenJmmergeup_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_XiuzhenPrivilegePtaddDesc::kMVFieldNumber;
const int E_XiuzhenPrivilegePtaddDesc::kMNFieldNumber;
const int E_XiuzhenPrivilegePtaddDesc::kMTFieldNumber;
#endif  // !_MSC_VER

E_XiuzhenPrivilegePtaddDesc::E_XiuzhenPrivilegePtaddDesc()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_XiuzhenPrivilegePtaddDesc::InitAsDefaultInstance() {
}

E_XiuzhenPrivilegePtaddDesc::E_XiuzhenPrivilegePtaddDesc(const E_XiuzhenPrivilegePtaddDesc& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_XiuzhenPrivilegePtaddDesc::SharedCtor() {
  _cached_size_ = 0;
  m_v_ = 0;
  m_n_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  m_t_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_XiuzhenPrivilegePtaddDesc::~E_XiuzhenPrivilegePtaddDesc() {
  SharedDtor();
}

void E_XiuzhenPrivilegePtaddDesc::SharedDtor() {
  if (m_n_ != &::google::protobuf::internal::kEmptyString) {
    delete m_n_;
  }
  if (this != default_instance_) {
  }
}

void E_XiuzhenPrivilegePtaddDesc::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_XiuzhenPrivilegePtaddDesc::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_XiuzhenPrivilegePtaddDesc_descriptor_;
}

const E_XiuzhenPrivilegePtaddDesc& E_XiuzhenPrivilegePtaddDesc::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fXiuzhen_2eproto();
  return *default_instance_;
}

E_XiuzhenPrivilegePtaddDesc* E_XiuzhenPrivilegePtaddDesc::default_instance_ = NULL;

E_XiuzhenPrivilegePtaddDesc* E_XiuzhenPrivilegePtaddDesc::New() const {
  return new E_XiuzhenPrivilegePtaddDesc;
}

void E_XiuzhenPrivilegePtaddDesc::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_v_ = 0;
    if (has_m_n()) {
      if (m_n_ != &::google::protobuf::internal::kEmptyString) {
        m_n_->clear();
      }
    }
    m_t_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_XiuzhenPrivilegePtaddDesc::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_v = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_v_)));
          set_has_m_v();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_m_n;
        break;
      }

      // optional string m_n = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_n:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_m_n()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->m_n().data(), this->m_n().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_m_t;
        break;
      }

      // optional int32 m_t = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_t:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_t_)));
          set_has_m_t();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_XiuzhenPrivilegePtaddDesc::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_v = 1;
  if (has_m_v()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_v(), output);
  }

  // optional string m_n = 2;
  if (has_m_n()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_n().data(), this->m_n().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->m_n(), output);
  }

  // optional int32 m_t = 3;
  if (has_m_t()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->m_t(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_XiuzhenPrivilegePtaddDesc::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_v = 1;
  if (has_m_v()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_v(), target);
  }

  // optional string m_n = 2;
  if (has_m_n()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_n().data(), this->m_n().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->m_n(), target);
  }

  // optional int32 m_t = 3;
  if (has_m_t()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->m_t(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_XiuzhenPrivilegePtaddDesc::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_v = 1;
    if (has_m_v()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_v());
    }

    // optional string m_n = 2;
    if (has_m_n()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->m_n());
    }

    // optional int32 m_t = 3;
    if (has_m_t()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_t());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_XiuzhenPrivilegePtaddDesc::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_XiuzhenPrivilegePtaddDesc* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_XiuzhenPrivilegePtaddDesc*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_XiuzhenPrivilegePtaddDesc::MergeFrom(const E_XiuzhenPrivilegePtaddDesc& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_v()) {
      set_m_v(from.m_v());
    }
    if (from.has_m_n()) {
      set_m_n(from.m_n());
    }
    if (from.has_m_t()) {
      set_m_t(from.m_t());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_XiuzhenPrivilegePtaddDesc::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_XiuzhenPrivilegePtaddDesc::CopyFrom(const E_XiuzhenPrivilegePtaddDesc& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_XiuzhenPrivilegePtaddDesc::IsInitialized() const {

  return true;
}

void E_XiuzhenPrivilegePtaddDesc::Swap(E_XiuzhenPrivilegePtaddDesc* other) {
  if (other != this) {
    std::swap(m_v_, other->m_v_);
    std::swap(m_n_, other->m_n_);
    std::swap(m_t_, other->m_t_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_XiuzhenPrivilegePtaddDesc::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_XiuzhenPrivilegePtaddDesc_descriptor_;
  metadata.reflection = E_XiuzhenPrivilegePtaddDesc_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_XiuzhenPrivilegeAttriDesc::kMVFieldNumber;
const int E_XiuzhenPrivilegeAttriDesc::kMTFieldNumber;
#endif  // !_MSC_VER

E_XiuzhenPrivilegeAttriDesc::E_XiuzhenPrivilegeAttriDesc()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_XiuzhenPrivilegeAttriDesc::InitAsDefaultInstance() {
}

E_XiuzhenPrivilegeAttriDesc::E_XiuzhenPrivilegeAttriDesc(const E_XiuzhenPrivilegeAttriDesc& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_XiuzhenPrivilegeAttriDesc::SharedCtor() {
  _cached_size_ = 0;
  m_v_ = GOOGLE_LONGLONG(0);
  m_t_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_XiuzhenPrivilegeAttriDesc::~E_XiuzhenPrivilegeAttriDesc() {
  SharedDtor();
}

void E_XiuzhenPrivilegeAttriDesc::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_XiuzhenPrivilegeAttriDesc::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_XiuzhenPrivilegeAttriDesc::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_XiuzhenPrivilegeAttriDesc_descriptor_;
}

const E_XiuzhenPrivilegeAttriDesc& E_XiuzhenPrivilegeAttriDesc::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fXiuzhen_2eproto();
  return *default_instance_;
}

E_XiuzhenPrivilegeAttriDesc* E_XiuzhenPrivilegeAttriDesc::default_instance_ = NULL;

E_XiuzhenPrivilegeAttriDesc* E_XiuzhenPrivilegeAttriDesc::New() const {
  return new E_XiuzhenPrivilegeAttriDesc;
}

void E_XiuzhenPrivilegeAttriDesc::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_v_ = GOOGLE_LONGLONG(0);
    m_t_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_XiuzhenPrivilegeAttriDesc::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 m_v = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &m_v_)));
          set_has_m_v();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_t;
        break;
      }

      // optional int32 m_t = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_t:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_t_)));
          set_has_m_t();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_XiuzhenPrivilegeAttriDesc::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 m_v = 1;
  if (has_m_v()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->m_v(), output);
  }

  // optional int32 m_t = 2;
  if (has_m_t()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_t(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_XiuzhenPrivilegeAttriDesc::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 m_v = 1;
  if (has_m_v()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->m_v(), target);
  }

  // optional int32 m_t = 2;
  if (has_m_t()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_t(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_XiuzhenPrivilegeAttriDesc::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 m_v = 1;
    if (has_m_v()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->m_v());
    }

    // optional int32 m_t = 2;
    if (has_m_t()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_t());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_XiuzhenPrivilegeAttriDesc::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_XiuzhenPrivilegeAttriDesc* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_XiuzhenPrivilegeAttriDesc*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_XiuzhenPrivilegeAttriDesc::MergeFrom(const E_XiuzhenPrivilegeAttriDesc& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_v()) {
      set_m_v(from.m_v());
    }
    if (from.has_m_t()) {
      set_m_t(from.m_t());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_XiuzhenPrivilegeAttriDesc::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_XiuzhenPrivilegeAttriDesc::CopyFrom(const E_XiuzhenPrivilegeAttriDesc& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_XiuzhenPrivilegeAttriDesc::IsInitialized() const {

  return true;
}

void E_XiuzhenPrivilegeAttriDesc::Swap(E_XiuzhenPrivilegeAttriDesc* other) {
  if (other != this) {
    std::swap(m_v_, other->m_v_);
    std::swap(m_t_, other->m_t_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_XiuzhenPrivilegeAttriDesc::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_XiuzhenPrivilegeAttriDesc_descriptor_;
  metadata.reflection = E_XiuzhenPrivilegeAttriDesc_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_XiuzhenPrivilege::kMIdFieldNumber;
const int E_XiuzhenPrivilege::kMPriceFieldNumber;
const int E_XiuzhenPrivilege::kMActiveavatarFieldNumber;
const int E_XiuzhenPrivilege::kMAvatarnameFieldNumber;
const int E_XiuzhenPrivilege::kMPtaddFieldNumber;
const int E_XiuzhenPrivilege::kMAttriFieldNumber;
#endif  // !_MSC_VER

E_XiuzhenPrivilege::E_XiuzhenPrivilege()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_XiuzhenPrivilege::InitAsDefaultInstance() {
}

E_XiuzhenPrivilege::E_XiuzhenPrivilege(const E_XiuzhenPrivilege& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_XiuzhenPrivilege::SharedCtor() {
  _cached_size_ = 0;
  m_id_ = 0;
  m_price_ = 0;
  m_activeavatar_ = 0;
  m_avatarname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_XiuzhenPrivilege::~E_XiuzhenPrivilege() {
  SharedDtor();
}

void E_XiuzhenPrivilege::SharedDtor() {
  if (m_avatarname_ != &::google::protobuf::internal::kEmptyString) {
    delete m_avatarname_;
  }
  if (this != default_instance_) {
  }
}

void E_XiuzhenPrivilege::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_XiuzhenPrivilege::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_XiuzhenPrivilege_descriptor_;
}

const E_XiuzhenPrivilege& E_XiuzhenPrivilege::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fXiuzhen_2eproto();
  return *default_instance_;
}

E_XiuzhenPrivilege* E_XiuzhenPrivilege::default_instance_ = NULL;

E_XiuzhenPrivilege* E_XiuzhenPrivilege::New() const {
  return new E_XiuzhenPrivilege;
}

void E_XiuzhenPrivilege::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_id_ = 0;
    m_price_ = 0;
    m_activeavatar_ = 0;
    if (has_m_avatarname()) {
      if (m_avatarname_ != &::google::protobuf::internal::kEmptyString) {
        m_avatarname_->clear();
      }
    }
  }
  m_ptadd_.Clear();
  m_attri_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_XiuzhenPrivilege::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_id_)));
          set_has_m_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_price;
        break;
      }

      // optional int32 m_price = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_price:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_price_)));
          set_has_m_price();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_m_activeavatar;
        break;
      }

      // optional int32 m_activeavatar = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_activeavatar:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_activeavatar_)));
          set_has_m_activeavatar();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_m_avatarname;
        break;
      }

      // optional string m_avatarname = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_avatarname:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_m_avatarname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->m_avatarname().data(), this->m_avatarname().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_m_ptadd;
        break;
      }

      // repeated .proto_ff.E_XiuzhenPrivilegePtaddDesc m_ptadd = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_ptadd:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_m_ptadd()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_m_ptadd;
        if (input->ExpectTag(50)) goto parse_m_attri;
        break;
      }

      // repeated .proto_ff.E_XiuzhenPrivilegeAttriDesc m_attri = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_attri:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_m_attri()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_m_attri;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_XiuzhenPrivilege::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_id(), output);
  }

  // optional int32 m_price = 2;
  if (has_m_price()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_price(), output);
  }

  // optional int32 m_activeavatar = 3;
  if (has_m_activeavatar()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->m_activeavatar(), output);
  }

  // optional string m_avatarname = 4;
  if (has_m_avatarname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_avatarname().data(), this->m_avatarname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->m_avatarname(), output);
  }

  // repeated .proto_ff.E_XiuzhenPrivilegePtaddDesc m_ptadd = 5;
  for (int i = 0; i < this->m_ptadd_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->m_ptadd(i), output);
  }

  // repeated .proto_ff.E_XiuzhenPrivilegeAttriDesc m_attri = 6;
  for (int i = 0; i < this->m_attri_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->m_attri(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_XiuzhenPrivilege::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_id(), target);
  }

  // optional int32 m_price = 2;
  if (has_m_price()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_price(), target);
  }

  // optional int32 m_activeavatar = 3;
  if (has_m_activeavatar()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->m_activeavatar(), target);
  }

  // optional string m_avatarname = 4;
  if (has_m_avatarname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->m_avatarname().data(), this->m_avatarname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->m_avatarname(), target);
  }

  // repeated .proto_ff.E_XiuzhenPrivilegePtaddDesc m_ptadd = 5;
  for (int i = 0; i < this->m_ptadd_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->m_ptadd(i), target);
  }

  // repeated .proto_ff.E_XiuzhenPrivilegeAttriDesc m_attri = 6;
  for (int i = 0; i < this->m_attri_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        6, this->m_attri(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_XiuzhenPrivilege::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_id = 1;
    if (has_m_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_id());
    }

    // optional int32 m_price = 2;
    if (has_m_price()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_price());
    }

    // optional int32 m_activeavatar = 3;
    if (has_m_activeavatar()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_activeavatar());
    }

    // optional string m_avatarname = 4;
    if (has_m_avatarname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->m_avatarname());
    }

  }
  // repeated .proto_ff.E_XiuzhenPrivilegePtaddDesc m_ptadd = 5;
  total_size += 1 * this->m_ptadd_size();
  for (int i = 0; i < this->m_ptadd_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->m_ptadd(i));
  }

  // repeated .proto_ff.E_XiuzhenPrivilegeAttriDesc m_attri = 6;
  total_size += 1 * this->m_attri_size();
  for (int i = 0; i < this->m_attri_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->m_attri(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_XiuzhenPrivilege::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_XiuzhenPrivilege* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_XiuzhenPrivilege*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_XiuzhenPrivilege::MergeFrom(const E_XiuzhenPrivilege& from) {
  GOOGLE_CHECK_NE(&from, this);
  m_ptadd_.MergeFrom(from.m_ptadd_);
  m_attri_.MergeFrom(from.m_attri_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_id()) {
      set_m_id(from.m_id());
    }
    if (from.has_m_price()) {
      set_m_price(from.m_price());
    }
    if (from.has_m_activeavatar()) {
      set_m_activeavatar(from.m_activeavatar());
    }
    if (from.has_m_avatarname()) {
      set_m_avatarname(from.m_avatarname());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_XiuzhenPrivilege::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_XiuzhenPrivilege::CopyFrom(const E_XiuzhenPrivilege& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_XiuzhenPrivilege::IsInitialized() const {

  return true;
}

void E_XiuzhenPrivilege::Swap(E_XiuzhenPrivilege* other) {
  if (other != this) {
    std::swap(m_id_, other->m_id_);
    std::swap(m_price_, other->m_price_);
    std::swap(m_activeavatar_, other->m_activeavatar_);
    std::swap(m_avatarname_, other->m_avatarname_);
    m_ptadd_.Swap(&other->m_ptadd_);
    m_attri_.Swap(&other->m_attri_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_XiuzhenPrivilege::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_XiuzhenPrivilege_descriptor_;
  metadata.reflection = E_XiuzhenPrivilege_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_XiuzhenPrivilege::kEXiuzhenPrivilegeListFieldNumber;
#endif  // !_MSC_VER

Sheet_XiuzhenPrivilege::Sheet_XiuzhenPrivilege()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_XiuzhenPrivilege::InitAsDefaultInstance() {
}

Sheet_XiuzhenPrivilege::Sheet_XiuzhenPrivilege(const Sheet_XiuzhenPrivilege& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_XiuzhenPrivilege::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_XiuzhenPrivilege::~Sheet_XiuzhenPrivilege() {
  SharedDtor();
}

void Sheet_XiuzhenPrivilege::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_XiuzhenPrivilege::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_XiuzhenPrivilege::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_XiuzhenPrivilege_descriptor_;
}

const Sheet_XiuzhenPrivilege& Sheet_XiuzhenPrivilege::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fXiuzhen_2eproto();
  return *default_instance_;
}

Sheet_XiuzhenPrivilege* Sheet_XiuzhenPrivilege::default_instance_ = NULL;

Sheet_XiuzhenPrivilege* Sheet_XiuzhenPrivilege::New() const {
  return new Sheet_XiuzhenPrivilege;
}

void Sheet_XiuzhenPrivilege::Clear() {
  e_xiuzhenprivilege_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_XiuzhenPrivilege::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.E_XiuzhenPrivilege E_XiuzhenPrivilege_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_E_XiuzhenPrivilege_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_e_xiuzhenprivilege_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_E_XiuzhenPrivilege_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_XiuzhenPrivilege::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.E_XiuzhenPrivilege E_XiuzhenPrivilege_List = 1;
  for (int i = 0; i < this->e_xiuzhenprivilege_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->e_xiuzhenprivilege_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_XiuzhenPrivilege::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.E_XiuzhenPrivilege E_XiuzhenPrivilege_List = 1;
  for (int i = 0; i < this->e_xiuzhenprivilege_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->e_xiuzhenprivilege_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_XiuzhenPrivilege::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.E_XiuzhenPrivilege E_XiuzhenPrivilege_List = 1;
  total_size += 1 * this->e_xiuzhenprivilege_list_size();
  for (int i = 0; i < this->e_xiuzhenprivilege_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->e_xiuzhenprivilege_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_XiuzhenPrivilege::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_XiuzhenPrivilege* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_XiuzhenPrivilege*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_XiuzhenPrivilege::MergeFrom(const Sheet_XiuzhenPrivilege& from) {
  GOOGLE_CHECK_NE(&from, this);
  e_xiuzhenprivilege_list_.MergeFrom(from.e_xiuzhenprivilege_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_XiuzhenPrivilege::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_XiuzhenPrivilege::CopyFrom(const Sheet_XiuzhenPrivilege& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_XiuzhenPrivilege::IsInitialized() const {

  return true;
}

void Sheet_XiuzhenPrivilege::Swap(Sheet_XiuzhenPrivilege* other) {
  if (other != this) {
    e_xiuzhenprivilege_list_.Swap(&other->e_xiuzhenprivilege_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_XiuzhenPrivilege::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_XiuzhenPrivilege_descriptor_;
  metadata.reflection = Sheet_XiuzhenPrivilege_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto_ff

// @@protoc_insertion_point(global_scope)
