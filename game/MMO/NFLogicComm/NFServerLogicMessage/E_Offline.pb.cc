// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: E_Offline.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "E_Offline.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace proto_ff {

namespace {

const ::google::protobuf::Descriptor* E_OfflineOffline_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_OfflineOffline_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_OfflineOffline_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_OfflineOffline_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_OfflineItemlistItemDesc_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_OfflineItemlistItemDesc_reflection_ = NULL;
const ::google::protobuf::Descriptor* E_OfflineItemlist_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E_OfflineItemlist_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_OfflineItemlist_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_OfflineItemlist_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_E_5fOffline_2eproto() {
  protobuf_AddDesc_E_5fOffline_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "E_Offline.proto");
  GOOGLE_CHECK(file != NULL);
  E_OfflineOffline_descriptor_ = file->message_type(0);
  static const int E_OfflineOffline_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_OfflineOffline, m_lv_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_OfflineOffline, m_offlineexp_),
  };
  E_OfflineOffline_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_OfflineOffline_descriptor_,
      E_OfflineOffline::default_instance_,
      E_OfflineOffline_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_OfflineOffline, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_OfflineOffline, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_OfflineOffline));
  Sheet_OfflineOffline_descriptor_ = file->message_type(1);
  static const int Sheet_OfflineOffline_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_OfflineOffline, e_offlineoffline_list_),
  };
  Sheet_OfflineOffline_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_OfflineOffline_descriptor_,
      Sheet_OfflineOffline::default_instance_,
      Sheet_OfflineOffline_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_OfflineOffline, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_OfflineOffline, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_OfflineOffline));
  E_OfflineItemlistItemDesc_descriptor_ = file->message_type(2);
  static const int E_OfflineItemlistItemDesc_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_OfflineItemlistItemDesc, m_vle_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_OfflineItemlistItemDesc, m_num_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_OfflineItemlistItemDesc, m_id_),
  };
  E_OfflineItemlistItemDesc_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_OfflineItemlistItemDesc_descriptor_,
      E_OfflineItemlistItemDesc::default_instance_,
      E_OfflineItemlistItemDesc_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_OfflineItemlistItemDesc, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_OfflineItemlistItemDesc, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_OfflineItemlistItemDesc));
  E_OfflineItemlist_descriptor_ = file->message_type(3);
  static const int E_OfflineItemlist_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_OfflineItemlist, m_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_OfflineItemlist, m_lvdown_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_OfflineItemlist, m_lvup_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_OfflineItemlist, m_daoju_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_OfflineItemlist, m_item_),
  };
  E_OfflineItemlist_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E_OfflineItemlist_descriptor_,
      E_OfflineItemlist::default_instance_,
      E_OfflineItemlist_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_OfflineItemlist, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E_OfflineItemlist, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E_OfflineItemlist));
  Sheet_OfflineItemlist_descriptor_ = file->message_type(4);
  static const int Sheet_OfflineItemlist_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_OfflineItemlist, e_offlineitemlist_list_),
  };
  Sheet_OfflineItemlist_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_OfflineItemlist_descriptor_,
      Sheet_OfflineItemlist::default_instance_,
      Sheet_OfflineItemlist_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_OfflineItemlist, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_OfflineItemlist, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_OfflineItemlist));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_E_5fOffline_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_OfflineOffline_descriptor_, &E_OfflineOffline::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_OfflineOffline_descriptor_, &Sheet_OfflineOffline::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_OfflineItemlistItemDesc_descriptor_, &E_OfflineItemlistItemDesc::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E_OfflineItemlist_descriptor_, &E_OfflineItemlist::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_OfflineItemlist_descriptor_, &Sheet_OfflineItemlist::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_E_5fOffline_2eproto() {
  delete E_OfflineOffline::default_instance_;
  delete E_OfflineOffline_reflection_;
  delete Sheet_OfflineOffline::default_instance_;
  delete Sheet_OfflineOffline_reflection_;
  delete E_OfflineItemlistItemDesc::default_instance_;
  delete E_OfflineItemlistItemDesc_reflection_;
  delete E_OfflineItemlist::default_instance_;
  delete E_OfflineItemlist_reflection_;
  delete Sheet_OfflineItemlist::default_instance_;
  delete Sheet_OfflineItemlist_reflection_;
}

void protobuf_AddDesc_E_5fOffline_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::yd_fieldoptions::protobuf_AddDesc_yd_5ffieldoptions_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\017E_Offline.proto\022\010proto_ff\032\025yd_fieldopt"
    "ions.proto\"`\n\020E_OfflineOffline\022\036\n\004m_lv\030\001"
    " \001(\005B\020\302\377\024\014\350\247\222\350\211\262\347\255\211\347\272\247\022,\n\014m_offlineExp\030\002"
    " \001(\003B\026\302\377\024\022\347\246\273\347\272\277\345\237\272\347\241\200\347\273\217\351\252\214\"X\n\024Sheet_Of"
    "flineOffline\022@\n\025E_OfflineOffline_List\030\001 "
    "\003(\0132\032.proto_ff.E_OfflineOfflineB\005\210\301\024\200\020\"g"
    "\n\031E_OfflineItemlistItemDesc\022\031\n\005m_Vle\030\001 \001"
    "(\005B\n\302\377\024\006\346\235\203\351\207\215\022\031\n\005m_Num\030\002 \001(\005B\n\302\377\024\006\346\225\260\351\207"
    "\217\022\024\n\004m_ID\030\003 \001(\003B\006\302\377\024\002ID\"\336\001\n\021E_OfflineIte"
    "mlist\022\030\n\004m_id\030\001 \001(\005B\n\302\377\024\006\345\272\217\345\217\267\022\"\n\010m_Lvd"
    "own\030\002 \001(\005B\020\302\377\024\014\347\255\211\347\272\247\344\270\213\351\231\220\022 \n\006m_Lvup\030\003 "
    "\001(\005B\020\302\377\024\014\347\255\211\347\272\247\344\270\212\351\231\220\022$\n\007m_daoju\030\004 \001(\005B\023"
    "\302\377\024\017\351\201\223\345\205\267\347\261\273\345\236\213\345\272\223\022C\n\006m_item\030\005 \003(\0132#.pr"
    "oto_ff.E_OfflineItemlistItemDescB\016\302\377\024\006\351\201"
    "\223\345\205\267\210\301\024\026\"Z\n\025Sheet_OfflineItemlist\022A\n\026E_O"
    "fflineItemlist_List\030\001 \003(\0132\033.proto_ff.E_O"
    "fflineItemlistB\004\210\301\024@", 660);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "E_Offline.proto", &protobuf_RegisterTypes);
  E_OfflineOffline::default_instance_ = new E_OfflineOffline();
  Sheet_OfflineOffline::default_instance_ = new Sheet_OfflineOffline();
  E_OfflineItemlistItemDesc::default_instance_ = new E_OfflineItemlistItemDesc();
  E_OfflineItemlist::default_instance_ = new E_OfflineItemlist();
  Sheet_OfflineItemlist::default_instance_ = new Sheet_OfflineItemlist();
  E_OfflineOffline::default_instance_->InitAsDefaultInstance();
  Sheet_OfflineOffline::default_instance_->InitAsDefaultInstance();
  E_OfflineItemlistItemDesc::default_instance_->InitAsDefaultInstance();
  E_OfflineItemlist::default_instance_->InitAsDefaultInstance();
  Sheet_OfflineItemlist::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_E_5fOffline_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_E_5fOffline_2eproto {
  StaticDescriptorInitializer_E_5fOffline_2eproto() {
    protobuf_AddDesc_E_5fOffline_2eproto();
  }
} static_descriptor_initializer_E_5fOffline_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int E_OfflineOffline::kMLvFieldNumber;
const int E_OfflineOffline::kMOfflineExpFieldNumber;
#endif  // !_MSC_VER

E_OfflineOffline::E_OfflineOffline()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_OfflineOffline::InitAsDefaultInstance() {
}

E_OfflineOffline::E_OfflineOffline(const E_OfflineOffline& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_OfflineOffline::SharedCtor() {
  _cached_size_ = 0;
  m_lv_ = 0;
  m_offlineexp_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_OfflineOffline::~E_OfflineOffline() {
  SharedDtor();
}

void E_OfflineOffline::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_OfflineOffline::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_OfflineOffline::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_OfflineOffline_descriptor_;
}

const E_OfflineOffline& E_OfflineOffline::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fOffline_2eproto();
  return *default_instance_;
}

E_OfflineOffline* E_OfflineOffline::default_instance_ = NULL;

E_OfflineOffline* E_OfflineOffline::New() const {
  return new E_OfflineOffline;
}

void E_OfflineOffline::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_lv_ = 0;
    m_offlineexp_ = GOOGLE_LONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_OfflineOffline::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_lv = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_lv_)));
          set_has_m_lv();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_offlineExp;
        break;
      }

      // optional int64 m_offlineExp = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_offlineExp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &m_offlineexp_)));
          set_has_m_offlineexp();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_OfflineOffline::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_lv = 1;
  if (has_m_lv()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_lv(), output);
  }

  // optional int64 m_offlineExp = 2;
  if (has_m_offlineexp()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->m_offlineexp(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_OfflineOffline::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_lv = 1;
  if (has_m_lv()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_lv(), target);
  }

  // optional int64 m_offlineExp = 2;
  if (has_m_offlineexp()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->m_offlineexp(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_OfflineOffline::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_lv = 1;
    if (has_m_lv()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_lv());
    }

    // optional int64 m_offlineExp = 2;
    if (has_m_offlineexp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->m_offlineexp());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_OfflineOffline::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_OfflineOffline* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_OfflineOffline*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_OfflineOffline::MergeFrom(const E_OfflineOffline& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_lv()) {
      set_m_lv(from.m_lv());
    }
    if (from.has_m_offlineexp()) {
      set_m_offlineexp(from.m_offlineexp());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_OfflineOffline::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_OfflineOffline::CopyFrom(const E_OfflineOffline& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_OfflineOffline::IsInitialized() const {

  return true;
}

void E_OfflineOffline::Swap(E_OfflineOffline* other) {
  if (other != this) {
    std::swap(m_lv_, other->m_lv_);
    std::swap(m_offlineexp_, other->m_offlineexp_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_OfflineOffline::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_OfflineOffline_descriptor_;
  metadata.reflection = E_OfflineOffline_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_OfflineOffline::kEOfflineOfflineListFieldNumber;
#endif  // !_MSC_VER

Sheet_OfflineOffline::Sheet_OfflineOffline()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_OfflineOffline::InitAsDefaultInstance() {
}

Sheet_OfflineOffline::Sheet_OfflineOffline(const Sheet_OfflineOffline& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_OfflineOffline::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_OfflineOffline::~Sheet_OfflineOffline() {
  SharedDtor();
}

void Sheet_OfflineOffline::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_OfflineOffline::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_OfflineOffline::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_OfflineOffline_descriptor_;
}

const Sheet_OfflineOffline& Sheet_OfflineOffline::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fOffline_2eproto();
  return *default_instance_;
}

Sheet_OfflineOffline* Sheet_OfflineOffline::default_instance_ = NULL;

Sheet_OfflineOffline* Sheet_OfflineOffline::New() const {
  return new Sheet_OfflineOffline;
}

void Sheet_OfflineOffline::Clear() {
  e_offlineoffline_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_OfflineOffline::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.E_OfflineOffline E_OfflineOffline_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_E_OfflineOffline_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_e_offlineoffline_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_E_OfflineOffline_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_OfflineOffline::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.E_OfflineOffline E_OfflineOffline_List = 1;
  for (int i = 0; i < this->e_offlineoffline_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->e_offlineoffline_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_OfflineOffline::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.E_OfflineOffline E_OfflineOffline_List = 1;
  for (int i = 0; i < this->e_offlineoffline_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->e_offlineoffline_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_OfflineOffline::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.E_OfflineOffline E_OfflineOffline_List = 1;
  total_size += 1 * this->e_offlineoffline_list_size();
  for (int i = 0; i < this->e_offlineoffline_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->e_offlineoffline_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_OfflineOffline::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_OfflineOffline* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_OfflineOffline*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_OfflineOffline::MergeFrom(const Sheet_OfflineOffline& from) {
  GOOGLE_CHECK_NE(&from, this);
  e_offlineoffline_list_.MergeFrom(from.e_offlineoffline_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_OfflineOffline::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_OfflineOffline::CopyFrom(const Sheet_OfflineOffline& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_OfflineOffline::IsInitialized() const {

  return true;
}

void Sheet_OfflineOffline::Swap(Sheet_OfflineOffline* other) {
  if (other != this) {
    e_offlineoffline_list_.Swap(&other->e_offlineoffline_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_OfflineOffline::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_OfflineOffline_descriptor_;
  metadata.reflection = Sheet_OfflineOffline_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_OfflineItemlistItemDesc::kMVleFieldNumber;
const int E_OfflineItemlistItemDesc::kMNumFieldNumber;
const int E_OfflineItemlistItemDesc::kMIDFieldNumber;
#endif  // !_MSC_VER

E_OfflineItemlistItemDesc::E_OfflineItemlistItemDesc()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_OfflineItemlistItemDesc::InitAsDefaultInstance() {
}

E_OfflineItemlistItemDesc::E_OfflineItemlistItemDesc(const E_OfflineItemlistItemDesc& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_OfflineItemlistItemDesc::SharedCtor() {
  _cached_size_ = 0;
  m_vle_ = 0;
  m_num_ = 0;
  m_id_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_OfflineItemlistItemDesc::~E_OfflineItemlistItemDesc() {
  SharedDtor();
}

void E_OfflineItemlistItemDesc::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_OfflineItemlistItemDesc::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_OfflineItemlistItemDesc::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_OfflineItemlistItemDesc_descriptor_;
}

const E_OfflineItemlistItemDesc& E_OfflineItemlistItemDesc::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fOffline_2eproto();
  return *default_instance_;
}

E_OfflineItemlistItemDesc* E_OfflineItemlistItemDesc::default_instance_ = NULL;

E_OfflineItemlistItemDesc* E_OfflineItemlistItemDesc::New() const {
  return new E_OfflineItemlistItemDesc;
}

void E_OfflineItemlistItemDesc::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_vle_ = 0;
    m_num_ = 0;
    m_id_ = GOOGLE_LONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_OfflineItemlistItemDesc::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_Vle = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_vle_)));
          set_has_m_vle();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_Num;
        break;
      }

      // optional int32 m_Num = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_Num:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_num_)));
          set_has_m_num();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_m_ID;
        break;
      }

      // optional int64 m_ID = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_ID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &m_id_)));
          set_has_m_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_OfflineItemlistItemDesc::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_Vle = 1;
  if (has_m_vle()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_vle(), output);
  }

  // optional int32 m_Num = 2;
  if (has_m_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_num(), output);
  }

  // optional int64 m_ID = 3;
  if (has_m_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->m_id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_OfflineItemlistItemDesc::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_Vle = 1;
  if (has_m_vle()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_vle(), target);
  }

  // optional int32 m_Num = 2;
  if (has_m_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_num(), target);
  }

  // optional int64 m_ID = 3;
  if (has_m_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->m_id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_OfflineItemlistItemDesc::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_Vle = 1;
    if (has_m_vle()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_vle());
    }

    // optional int32 m_Num = 2;
    if (has_m_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_num());
    }

    // optional int64 m_ID = 3;
    if (has_m_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->m_id());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_OfflineItemlistItemDesc::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_OfflineItemlistItemDesc* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_OfflineItemlistItemDesc*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_OfflineItemlistItemDesc::MergeFrom(const E_OfflineItemlistItemDesc& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_vle()) {
      set_m_vle(from.m_vle());
    }
    if (from.has_m_num()) {
      set_m_num(from.m_num());
    }
    if (from.has_m_id()) {
      set_m_id(from.m_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_OfflineItemlistItemDesc::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_OfflineItemlistItemDesc::CopyFrom(const E_OfflineItemlistItemDesc& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_OfflineItemlistItemDesc::IsInitialized() const {

  return true;
}

void E_OfflineItemlistItemDesc::Swap(E_OfflineItemlistItemDesc* other) {
  if (other != this) {
    std::swap(m_vle_, other->m_vle_);
    std::swap(m_num_, other->m_num_);
    std::swap(m_id_, other->m_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_OfflineItemlistItemDesc::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_OfflineItemlistItemDesc_descriptor_;
  metadata.reflection = E_OfflineItemlistItemDesc_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E_OfflineItemlist::kMIdFieldNumber;
const int E_OfflineItemlist::kMLvdownFieldNumber;
const int E_OfflineItemlist::kMLvupFieldNumber;
const int E_OfflineItemlist::kMDaojuFieldNumber;
const int E_OfflineItemlist::kMItemFieldNumber;
#endif  // !_MSC_VER

E_OfflineItemlist::E_OfflineItemlist()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void E_OfflineItemlist::InitAsDefaultInstance() {
}

E_OfflineItemlist::E_OfflineItemlist(const E_OfflineItemlist& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void E_OfflineItemlist::SharedCtor() {
  _cached_size_ = 0;
  m_id_ = 0;
  m_lvdown_ = 0;
  m_lvup_ = 0;
  m_daoju_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E_OfflineItemlist::~E_OfflineItemlist() {
  SharedDtor();
}

void E_OfflineItemlist::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E_OfflineItemlist::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E_OfflineItemlist::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_OfflineItemlist_descriptor_;
}

const E_OfflineItemlist& E_OfflineItemlist::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fOffline_2eproto();
  return *default_instance_;
}

E_OfflineItemlist* E_OfflineItemlist::default_instance_ = NULL;

E_OfflineItemlist* E_OfflineItemlist::New() const {
  return new E_OfflineItemlist;
}

void E_OfflineItemlist::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    m_id_ = 0;
    m_lvdown_ = 0;
    m_lvup_ = 0;
    m_daoju_ = 0;
  }
  m_item_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E_OfflineItemlist::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_id_)));
          set_has_m_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_m_Lvdown;
        break;
      }

      // optional int32 m_Lvdown = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_Lvdown:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_lvdown_)));
          set_has_m_lvdown();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_m_Lvup;
        break;
      }

      // optional int32 m_Lvup = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_Lvup:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_lvup_)));
          set_has_m_lvup();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_m_daoju;
        break;
      }

      // optional int32 m_daoju = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_m_daoju:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_daoju_)));
          set_has_m_daoju();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_m_item;
        break;
      }

      // repeated .proto_ff.E_OfflineItemlistItemDesc m_item = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_m_item:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_m_item()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_m_item;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void E_OfflineItemlist::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_id(), output);
  }

  // optional int32 m_Lvdown = 2;
  if (has_m_lvdown()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_lvdown(), output);
  }

  // optional int32 m_Lvup = 3;
  if (has_m_lvup()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->m_lvup(), output);
  }

  // optional int32 m_daoju = 4;
  if (has_m_daoju()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->m_daoju(), output);
  }

  // repeated .proto_ff.E_OfflineItemlistItemDesc m_item = 5;
  for (int i = 0; i < this->m_item_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->m_item(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* E_OfflineItemlist::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 m_id = 1;
  if (has_m_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_id(), target);
  }

  // optional int32 m_Lvdown = 2;
  if (has_m_lvdown()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_lvdown(), target);
  }

  // optional int32 m_Lvup = 3;
  if (has_m_lvup()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->m_lvup(), target);
  }

  // optional int32 m_daoju = 4;
  if (has_m_daoju()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->m_daoju(), target);
  }

  // repeated .proto_ff.E_OfflineItemlistItemDesc m_item = 5;
  for (int i = 0; i < this->m_item_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->m_item(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int E_OfflineItemlist::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 m_id = 1;
    if (has_m_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_id());
    }

    // optional int32 m_Lvdown = 2;
    if (has_m_lvdown()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_lvdown());
    }

    // optional int32 m_Lvup = 3;
    if (has_m_lvup()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_lvup());
    }

    // optional int32 m_daoju = 4;
    if (has_m_daoju()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_daoju());
    }

  }
  // repeated .proto_ff.E_OfflineItemlistItemDesc m_item = 5;
  total_size += 1 * this->m_item_size();
  for (int i = 0; i < this->m_item_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->m_item(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E_OfflineItemlist::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E_OfflineItemlist* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E_OfflineItemlist*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E_OfflineItemlist::MergeFrom(const E_OfflineItemlist& from) {
  GOOGLE_CHECK_NE(&from, this);
  m_item_.MergeFrom(from.m_item_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_id()) {
      set_m_id(from.m_id());
    }
    if (from.has_m_lvdown()) {
      set_m_lvdown(from.m_lvdown());
    }
    if (from.has_m_lvup()) {
      set_m_lvup(from.m_lvup());
    }
    if (from.has_m_daoju()) {
      set_m_daoju(from.m_daoju());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E_OfflineItemlist::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E_OfflineItemlist::CopyFrom(const E_OfflineItemlist& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E_OfflineItemlist::IsInitialized() const {

  return true;
}

void E_OfflineItemlist::Swap(E_OfflineItemlist* other) {
  if (other != this) {
    std::swap(m_id_, other->m_id_);
    std::swap(m_lvdown_, other->m_lvdown_);
    std::swap(m_lvup_, other->m_lvup_);
    std::swap(m_daoju_, other->m_daoju_);
    m_item_.Swap(&other->m_item_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E_OfflineItemlist::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E_OfflineItemlist_descriptor_;
  metadata.reflection = E_OfflineItemlist_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_OfflineItemlist::kEOfflineItemlistListFieldNumber;
#endif  // !_MSC_VER

Sheet_OfflineItemlist::Sheet_OfflineItemlist()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_OfflineItemlist::InitAsDefaultInstance() {
}

Sheet_OfflineItemlist::Sheet_OfflineItemlist(const Sheet_OfflineItemlist& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_OfflineItemlist::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_OfflineItemlist::~Sheet_OfflineItemlist() {
  SharedDtor();
}

void Sheet_OfflineItemlist::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_OfflineItemlist::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_OfflineItemlist::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_OfflineItemlist_descriptor_;
}

const Sheet_OfflineItemlist& Sheet_OfflineItemlist::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_E_5fOffline_2eproto();
  return *default_instance_;
}

Sheet_OfflineItemlist* Sheet_OfflineItemlist::default_instance_ = NULL;

Sheet_OfflineItemlist* Sheet_OfflineItemlist::New() const {
  return new Sheet_OfflineItemlist;
}

void Sheet_OfflineItemlist::Clear() {
  e_offlineitemlist_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_OfflineItemlist::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.E_OfflineItemlist E_OfflineItemlist_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_E_OfflineItemlist_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_e_offlineitemlist_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_E_OfflineItemlist_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_OfflineItemlist::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.E_OfflineItemlist E_OfflineItemlist_List = 1;
  for (int i = 0; i < this->e_offlineitemlist_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->e_offlineitemlist_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_OfflineItemlist::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.E_OfflineItemlist E_OfflineItemlist_List = 1;
  for (int i = 0; i < this->e_offlineitemlist_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->e_offlineitemlist_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_OfflineItemlist::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.E_OfflineItemlist E_OfflineItemlist_List = 1;
  total_size += 1 * this->e_offlineitemlist_list_size();
  for (int i = 0; i < this->e_offlineitemlist_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->e_offlineitemlist_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_OfflineItemlist::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_OfflineItemlist* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_OfflineItemlist*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_OfflineItemlist::MergeFrom(const Sheet_OfflineItemlist& from) {
  GOOGLE_CHECK_NE(&from, this);
  e_offlineitemlist_list_.MergeFrom(from.e_offlineitemlist_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_OfflineItemlist::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_OfflineItemlist::CopyFrom(const Sheet_OfflineItemlist& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_OfflineItemlist::IsInitialized() const {

  return true;
}

void Sheet_OfflineItemlist::Swap(Sheet_OfflineItemlist* other) {
  if (other != this) {
    e_offlineitemlist_list_.Swap(&other->e_offlineitemlist_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_OfflineItemlist::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_OfflineItemlist_descriptor_;
  metadata.reflection = Sheet_OfflineItemlist_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto_ff

// @@protoc_insertion_point(global_scope)
