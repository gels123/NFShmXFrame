// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: pet.proto

#ifndef PROTOBUF_pet_2eproto__INCLUDED
#define PROTOBUF_pet_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "yd_fieldoptions.pb.h"
// @@protoc_insertion_point(includes)

namespace proto_ff {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_pet_2eproto();
void protobuf_AssignDesc_pet_2eproto();
void protobuf_ShutdownFile_pet_2eproto();

class E_PetDisplayMaterialDesc;
class E_PetDisplay;
class Sheet_PetDisplay;
class E_PetAttributetpyeAttributeDesc;
class E_PetAttributetpye;
class Sheet_PetAttributetpye;
class E_PetLvexp;
class Sheet_PetLvexp;
class E_PetAdvancelvAdvanceDesc;
class E_PetAdvancelv;
class Sheet_PetAdvancelv;
class E_PetStarupUpattributeDesc;
class E_PetStarup;
class Sheet_PetStarup;
class E_PetEggPetDesc;
class E_PetEgg;
class Sheet_PetEgg;
class E_PetDecomposeDecomposeDesc;
class E_PetDecompose;
class Sheet_PetDecompose;
class E_PetFettersAttributeDesc;
class E_PetFetters;
class Sheet_PetFetters;

// ===================================================================

class E_PetDisplayMaterialDesc : public ::google::protobuf::Message {
 public:
  E_PetDisplayMaterialDesc();
  virtual ~E_PetDisplayMaterialDesc();

  E_PetDisplayMaterialDesc(const E_PetDisplayMaterialDesc& from);

  inline E_PetDisplayMaterialDesc& operator=(const E_PetDisplayMaterialDesc& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_PetDisplayMaterialDesc& default_instance();

  void Swap(E_PetDisplayMaterialDesc* other);

  // implements Message ----------------------------------------------

  E_PetDisplayMaterialDesc* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_PetDisplayMaterialDesc& from);
  void MergeFrom(const E_PetDisplayMaterialDesc& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 m_id = 1;
  inline bool has_m_id() const;
  inline void clear_m_id();
  static const int kMIdFieldNumber = 1;
  inline ::google::protobuf::int64 m_id() const;
  inline void set_m_id(::google::protobuf::int64 value);

  // optional int32 m_exp = 2;
  inline bool has_m_exp() const;
  inline void clear_m_exp();
  static const int kMExpFieldNumber = 2;
  inline ::google::protobuf::int32 m_exp() const;
  inline void set_m_exp(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.E_PetDisplayMaterialDesc)
 private:
  inline void set_has_m_id();
  inline void clear_has_m_id();
  inline void set_has_m_exp();
  inline void clear_has_m_exp();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 m_id_;
  ::google::protobuf::int32 m_exp_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_pet_2eproto();
  friend void protobuf_AssignDesc_pet_2eproto();
  friend void protobuf_ShutdownFile_pet_2eproto();

  void InitAsDefaultInstance();
  static E_PetDisplayMaterialDesc* default_instance_;
};
// -------------------------------------------------------------------

class E_PetDisplay : public ::google::protobuf::Message {
 public:
  E_PetDisplay();
  virtual ~E_PetDisplay();

  E_PetDisplay(const E_PetDisplay& from);

  inline E_PetDisplay& operator=(const E_PetDisplay& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_PetDisplay& default_instance();

  void Swap(E_PetDisplay* other);

  // implements Message ----------------------------------------------

  E_PetDisplay* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_PetDisplay& from);
  void MergeFrom(const E_PetDisplay& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 m_id = 1;
  inline bool has_m_id() const;
  inline void clear_m_id();
  static const int kMIdFieldNumber = 1;
  inline ::google::protobuf::int64 m_id() const;
  inline void set_m_id(::google::protobuf::int64 value);

  // optional int32 m_quality = 2;
  inline bool has_m_quality() const;
  inline void clear_m_quality();
  static const int kMQualityFieldNumber = 2;
  inline ::google::protobuf::int32 m_quality() const;
  inline void set_m_quality(::google::protobuf::int32 value);

  // optional int32 m_isstar = 3;
  inline bool has_m_isstar() const;
  inline void clear_m_isstar();
  static const int kMIsstarFieldNumber = 3;
  inline ::google::protobuf::int32 m_isstar() const;
  inline void set_m_isstar(::google::protobuf::int32 value);

  // optional string m_grade = 4;
  inline bool has_m_grade() const;
  inline void clear_m_grade();
  static const int kMGradeFieldNumber = 4;
  inline const ::std::string& m_grade() const;
  inline void set_m_grade(const ::std::string& value);
  inline void set_m_grade(const char* value);
  inline void set_m_grade(const char* value, size_t size);
  inline ::std::string* mutable_m_grade();
  inline ::std::string* release_m_grade();
  inline void set_allocated_m_grade(::std::string* m_grade);

  // optional int64 m_monsterid = 5;
  inline bool has_m_monsterid() const;
  inline void clear_m_monsterid();
  static const int kMMonsteridFieldNumber = 5;
  inline ::google::protobuf::int64 m_monsterid() const;
  inline void set_m_monsterid(::google::protobuf::int64 value);

  // optional string m_name = 6;
  inline bool has_m_name() const;
  inline void clear_m_name();
  static const int kMNameFieldNumber = 6;
  inline const ::std::string& m_name() const;
  inline void set_m_name(const ::std::string& value);
  inline void set_m_name(const char* value);
  inline void set_m_name(const char* value, size_t size);
  inline ::std::string* mutable_m_name();
  inline ::std::string* release_m_name();
  inline void set_allocated_m_name(::std::string* m_name);

  // optional int32 m_activeskillid = 7;
  inline bool has_m_activeskillid() const;
  inline void clear_m_activeskillid();
  static const int kMActiveskillidFieldNumber = 7;
  inline ::google::protobuf::int32 m_activeskillid() const;
  inline void set_m_activeskillid(::google::protobuf::int32 value);

  // optional string m_exclusiveskillid = 8;
  inline bool has_m_exclusiveskillid() const;
  inline void clear_m_exclusiveskillid();
  static const int kMExclusiveskillidFieldNumber = 8;
  inline const ::std::string& m_exclusiveskillid() const;
  inline void set_m_exclusiveskillid(const ::std::string& value);
  inline void set_m_exclusiveskillid(const char* value);
  inline void set_m_exclusiveskillid(const char* value, size_t size);
  inline ::std::string* mutable_m_exclusiveskillid();
  inline ::std::string* release_m_exclusiveskillid();
  inline void set_allocated_m_exclusiveskillid(::std::string* m_exclusiveskillid);

  // optional string m_passiveskillid = 9;
  inline bool has_m_passiveskillid() const;
  inline void clear_m_passiveskillid();
  static const int kMPassiveskillidFieldNumber = 9;
  inline const ::std::string& m_passiveskillid() const;
  inline void set_m_passiveskillid(const ::std::string& value);
  inline void set_m_passiveskillid(const char* value);
  inline void set_m_passiveskillid(const char* value, size_t size);
  inline ::std::string* mutable_m_passiveskillid();
  inline ::std::string* release_m_passiveskillid();
  inline void set_allocated_m_passiveskillid(::std::string* m_passiveskillid);

  // optional int32 m_activeattribute = 10;
  inline bool has_m_activeattribute() const;
  inline void clear_m_activeattribute();
  static const int kMActiveattributeFieldNumber = 10;
  inline ::google::protobuf::int32 m_activeattribute() const;
  inline void set_m_activeattribute(::google::protobuf::int32 value);

  // optional int32 m_growatt = 11;
  inline bool has_m_growatt() const;
  inline void clear_m_growatt();
  static const int kMGrowattFieldNumber = 11;
  inline ::google::protobuf::int32 m_growatt() const;
  inline void set_m_growatt(::google::protobuf::int32 value);

  // optional float m_activeparama = 12;
  inline bool has_m_activeparama() const;
  inline void clear_m_activeparama();
  static const int kMActiveparamaFieldNumber = 12;
  inline float m_activeparama() const;
  inline void set_m_activeparama(float value);

  // optional float m_growattparama = 13;
  inline bool has_m_growattparama() const;
  inline void clear_m_growattparama();
  static const int kMGrowattparamaFieldNumber = 13;
  inline float m_growattparama() const;
  inline void set_m_growattparama(float value);

  // optional float m_growstandarda = 14;
  inline bool has_m_growstandarda() const;
  inline void clear_m_growstandarda();
  static const int kMGrowstandardaFieldNumber = 14;
  inline float m_growstandarda() const;
  inline void set_m_growstandarda(float value);

  // optional float m_growstandardb = 15;
  inline bool has_m_growstandardb() const;
  inline void clear_m_growstandardb();
  static const int kMGrowstandardbFieldNumber = 15;
  inline float m_growstandardb() const;
  inline void set_m_growstandardb(float value);

  // optional float m_growstandard = 16;
  inline bool has_m_growstandard() const;
  inline void clear_m_growstandard();
  static const int kMGrowstandardFieldNumber = 16;
  inline float m_growstandard() const;
  inline void set_m_growstandard(float value);

  // optional float m_growmin = 17;
  inline bool has_m_growmin() const;
  inline void clear_m_growmin();
  static const int kMGrowminFieldNumber = 17;
  inline float m_growmin() const;
  inline void set_m_growmin(float value);

  // optional float m_growmax = 18;
  inline bool has_m_growmax() const;
  inline void clear_m_growmax();
  static const int kMGrowmaxFieldNumber = 18;
  inline float m_growmax() const;
  inline void set_m_growmax(float value);

  // optional float m_growstar = 19;
  inline bool has_m_growstar() const;
  inline void clear_m_growstar();
  static const int kMGrowstarFieldNumber = 19;
  inline float m_growstar() const;
  inline void set_m_growstar(float value);

  // optional int32 m_advanceattribute = 20;
  inline bool has_m_advanceattribute() const;
  inline void clear_m_advanceattribute();
  static const int kMAdvanceattributeFieldNumber = 20;
  inline ::google::protobuf::int32 m_advanceattribute() const;
  inline void set_m_advanceattribute(::google::protobuf::int32 value);

  // optional int32 m_advancetype = 21;
  inline bool has_m_advancetype() const;
  inline void clear_m_advancetype();
  static const int kMAdvancetypeFieldNumber = 21;
  inline ::google::protobuf::int32 m_advancetype() const;
  inline void set_m_advancetype(::google::protobuf::int32 value);

  // optional string m_pettagskill = 22;
  inline bool has_m_pettagskill() const;
  inline void clear_m_pettagskill();
  static const int kMPettagskillFieldNumber = 22;
  inline const ::std::string& m_pettagskill() const;
  inline void set_m_pettagskill(const ::std::string& value);
  inline void set_m_pettagskill(const char* value);
  inline void set_m_pettagskill(const char* value, size_t size);
  inline ::std::string* mutable_m_pettagskill();
  inline ::std::string* release_m_pettagskill();
  inline void set_allocated_m_pettagskill(::std::string* m_pettagskill);

  // optional int32 m_starattribute = 23;
  inline bool has_m_starattribute() const;
  inline void clear_m_starattribute();
  static const int kMStarattributeFieldNumber = 23;
  inline ::google::protobuf::int32 m_starattribute() const;
  inline void set_m_starattribute(::google::protobuf::int32 value);

  // optional int32 m_starpercent = 24;
  inline bool has_m_starpercent() const;
  inline void clear_m_starpercent();
  static const int kMStarpercentFieldNumber = 24;
  inline ::google::protobuf::int32 m_starpercent() const;
  inline void set_m_starpercent(::google::protobuf::int32 value);

  // optional int32 m_starllimit = 25;
  inline bool has_m_starllimit() const;
  inline void clear_m_starllimit();
  static const int kMStarllimitFieldNumber = 25;
  inline ::google::protobuf::int32 m_starllimit() const;
  inline void set_m_starllimit(::google::protobuf::int32 value);

  // optional int64 m_staritem = 26;
  inline bool has_m_staritem() const;
  inline void clear_m_staritem();
  static const int kMStaritemFieldNumber = 26;
  inline ::google::protobuf::int64 m_staritem() const;
  inline void set_m_staritem(::google::protobuf::int64 value);

  // optional string m_starnum = 27;
  inline bool has_m_starnum() const;
  inline void clear_m_starnum();
  static const int kMStarnumFieldNumber = 27;
  inline const ::std::string& m_starnum() const;
  inline void set_m_starnum(const ::std::string& value);
  inline void set_m_starnum(const char* value);
  inline void set_m_starnum(const char* value, size_t size);
  inline ::std::string* mutable_m_starnum();
  inline ::std::string* release_m_starnum();
  inline void set_allocated_m_starnum(::std::string* m_starnum);

  // optional int64 m_starpetid = 28;
  inline bool has_m_starpetid() const;
  inline void clear_m_starpetid();
  static const int kMStarpetidFieldNumber = 28;
  inline ::google::protobuf::int64 m_starpetid() const;
  inline void set_m_starpetid(::google::protobuf::int64 value);

  // optional string m_starpetnum = 29;
  inline bool has_m_starpetnum() const;
  inline void clear_m_starpetnum();
  static const int kMStarpetnumFieldNumber = 29;
  inline const ::std::string& m_starpetnum() const;
  inline void set_m_starpetnum(const ::std::string& value);
  inline void set_m_starpetnum(const char* value);
  inline void set_m_starpetnum(const char* value, size_t size);
  inline ::std::string* mutable_m_starpetnum();
  inline ::std::string* release_m_starpetnum();
  inline void set_allocated_m_starpetnum(::std::string* m_starpetnum);

  // optional int32 m_weapon = 30;
  inline bool has_m_weapon() const;
  inline void clear_m_weapon();
  static const int kMWeaponFieldNumber = 30;
  inline ::google::protobuf::int32 m_weapon() const;
  inline void set_m_weapon(::google::protobuf::int32 value);

  // optional int64 m_upattributeid = 31;
  inline bool has_m_upattributeid() const;
  inline void clear_m_upattributeid();
  static const int kMUpattributeidFieldNumber = 31;
  inline ::google::protobuf::int64 m_upattributeid() const;
  inline void set_m_upattributeid(::google::protobuf::int64 value);

  // repeated .proto_ff.E_PetDisplayMaterialDesc m_material = 32;
  inline int m_material_size() const;
  inline void clear_m_material();
  static const int kMMaterialFieldNumber = 32;
  inline const ::proto_ff::E_PetDisplayMaterialDesc& m_material(int index) const;
  inline ::proto_ff::E_PetDisplayMaterialDesc* mutable_m_material(int index);
  inline ::proto_ff::E_PetDisplayMaterialDesc* add_m_material();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_PetDisplayMaterialDesc >&
      m_material() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_PetDisplayMaterialDesc >*
      mutable_m_material();

  // @@protoc_insertion_point(class_scope:proto_ff.E_PetDisplay)
 private:
  inline void set_has_m_id();
  inline void clear_has_m_id();
  inline void set_has_m_quality();
  inline void clear_has_m_quality();
  inline void set_has_m_isstar();
  inline void clear_has_m_isstar();
  inline void set_has_m_grade();
  inline void clear_has_m_grade();
  inline void set_has_m_monsterid();
  inline void clear_has_m_monsterid();
  inline void set_has_m_name();
  inline void clear_has_m_name();
  inline void set_has_m_activeskillid();
  inline void clear_has_m_activeskillid();
  inline void set_has_m_exclusiveskillid();
  inline void clear_has_m_exclusiveskillid();
  inline void set_has_m_passiveskillid();
  inline void clear_has_m_passiveskillid();
  inline void set_has_m_activeattribute();
  inline void clear_has_m_activeattribute();
  inline void set_has_m_growatt();
  inline void clear_has_m_growatt();
  inline void set_has_m_activeparama();
  inline void clear_has_m_activeparama();
  inline void set_has_m_growattparama();
  inline void clear_has_m_growattparama();
  inline void set_has_m_growstandarda();
  inline void clear_has_m_growstandarda();
  inline void set_has_m_growstandardb();
  inline void clear_has_m_growstandardb();
  inline void set_has_m_growstandard();
  inline void clear_has_m_growstandard();
  inline void set_has_m_growmin();
  inline void clear_has_m_growmin();
  inline void set_has_m_growmax();
  inline void clear_has_m_growmax();
  inline void set_has_m_growstar();
  inline void clear_has_m_growstar();
  inline void set_has_m_advanceattribute();
  inline void clear_has_m_advanceattribute();
  inline void set_has_m_advancetype();
  inline void clear_has_m_advancetype();
  inline void set_has_m_pettagskill();
  inline void clear_has_m_pettagskill();
  inline void set_has_m_starattribute();
  inline void clear_has_m_starattribute();
  inline void set_has_m_starpercent();
  inline void clear_has_m_starpercent();
  inline void set_has_m_starllimit();
  inline void clear_has_m_starllimit();
  inline void set_has_m_staritem();
  inline void clear_has_m_staritem();
  inline void set_has_m_starnum();
  inline void clear_has_m_starnum();
  inline void set_has_m_starpetid();
  inline void clear_has_m_starpetid();
  inline void set_has_m_starpetnum();
  inline void clear_has_m_starpetnum();
  inline void set_has_m_weapon();
  inline void clear_has_m_weapon();
  inline void set_has_m_upattributeid();
  inline void clear_has_m_upattributeid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 m_id_;
  ::google::protobuf::int32 m_quality_;
  ::google::protobuf::int32 m_isstar_;
  ::std::string* m_grade_;
  ::google::protobuf::int64 m_monsterid_;
  ::std::string* m_name_;
  ::std::string* m_exclusiveskillid_;
  ::google::protobuf::int32 m_activeskillid_;
  ::google::protobuf::int32 m_activeattribute_;
  ::std::string* m_passiveskillid_;
  ::google::protobuf::int32 m_growatt_;
  float m_activeparama_;
  float m_growattparama_;
  float m_growstandarda_;
  float m_growstandardb_;
  float m_growstandard_;
  float m_growmin_;
  float m_growmax_;
  float m_growstar_;
  ::google::protobuf::int32 m_advanceattribute_;
  ::google::protobuf::int32 m_advancetype_;
  ::google::protobuf::int32 m_starattribute_;
  ::std::string* m_pettagskill_;
  ::google::protobuf::int32 m_starpercent_;
  ::google::protobuf::int32 m_starllimit_;
  ::google::protobuf::int64 m_staritem_;
  ::std::string* m_starnum_;
  ::google::protobuf::int64 m_starpetid_;
  ::std::string* m_starpetnum_;
  ::google::protobuf::int64 m_upattributeid_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_PetDisplayMaterialDesc > m_material_;
  ::google::protobuf::int32 m_weapon_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(32 + 31) / 32];

  friend void  protobuf_AddDesc_pet_2eproto();
  friend void protobuf_AssignDesc_pet_2eproto();
  friend void protobuf_ShutdownFile_pet_2eproto();

  void InitAsDefaultInstance();
  static E_PetDisplay* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_PetDisplay : public ::google::protobuf::Message {
 public:
  Sheet_PetDisplay();
  virtual ~Sheet_PetDisplay();

  Sheet_PetDisplay(const Sheet_PetDisplay& from);

  inline Sheet_PetDisplay& operator=(const Sheet_PetDisplay& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_PetDisplay& default_instance();

  void Swap(Sheet_PetDisplay* other);

  // implements Message ----------------------------------------------

  Sheet_PetDisplay* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_PetDisplay& from);
  void MergeFrom(const Sheet_PetDisplay& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.E_PetDisplay E_PetDisplay_List = 1;
  inline int e_petdisplay_list_size() const;
  inline void clear_e_petdisplay_list();
  static const int kEPetDisplayListFieldNumber = 1;
  inline const ::proto_ff::E_PetDisplay& e_petdisplay_list(int index) const;
  inline ::proto_ff::E_PetDisplay* mutable_e_petdisplay_list(int index);
  inline ::proto_ff::E_PetDisplay* add_e_petdisplay_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_PetDisplay >&
      e_petdisplay_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_PetDisplay >*
      mutable_e_petdisplay_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_PetDisplay)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_PetDisplay > e_petdisplay_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_pet_2eproto();
  friend void protobuf_AssignDesc_pet_2eproto();
  friend void protobuf_ShutdownFile_pet_2eproto();

  void InitAsDefaultInstance();
  static Sheet_PetDisplay* default_instance_;
};
// -------------------------------------------------------------------

class E_PetAttributetpyeAttributeDesc : public ::google::protobuf::Message {
 public:
  E_PetAttributetpyeAttributeDesc();
  virtual ~E_PetAttributetpyeAttributeDesc();

  E_PetAttributetpyeAttributeDesc(const E_PetAttributetpyeAttributeDesc& from);

  inline E_PetAttributetpyeAttributeDesc& operator=(const E_PetAttributetpyeAttributeDesc& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_PetAttributetpyeAttributeDesc& default_instance();

  void Swap(E_PetAttributetpyeAttributeDesc* other);

  // implements Message ----------------------------------------------

  E_PetAttributetpyeAttributeDesc* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_PetAttributetpyeAttributeDesc& from);
  void MergeFrom(const E_PetAttributetpyeAttributeDesc& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 m_type = 1;
  inline bool has_m_type() const;
  inline void clear_m_type();
  static const int kMTypeFieldNumber = 1;
  inline ::google::protobuf::int32 m_type() const;
  inline void set_m_type(::google::protobuf::int32 value);

  // optional int32 m_value = 2;
  inline bool has_m_value() const;
  inline void clear_m_value();
  static const int kMValueFieldNumber = 2;
  inline ::google::protobuf::int32 m_value() const;
  inline void set_m_value(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.E_PetAttributetpyeAttributeDesc)
 private:
  inline void set_has_m_type();
  inline void clear_has_m_type();
  inline void set_has_m_value();
  inline void clear_has_m_value();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_type_;
  ::google::protobuf::int32 m_value_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_pet_2eproto();
  friend void protobuf_AssignDesc_pet_2eproto();
  friend void protobuf_ShutdownFile_pet_2eproto();

  void InitAsDefaultInstance();
  static E_PetAttributetpyeAttributeDesc* default_instance_;
};
// -------------------------------------------------------------------

class E_PetAttributetpye : public ::google::protobuf::Message {
 public:
  E_PetAttributetpye();
  virtual ~E_PetAttributetpye();

  E_PetAttributetpye(const E_PetAttributetpye& from);

  inline E_PetAttributetpye& operator=(const E_PetAttributetpye& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_PetAttributetpye& default_instance();

  void Swap(E_PetAttributetpye* other);

  // implements Message ----------------------------------------------

  E_PetAttributetpye* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_PetAttributetpye& from);
  void MergeFrom(const E_PetAttributetpye& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 m_id = 1;
  inline bool has_m_id() const;
  inline void clear_m_id();
  static const int kMIdFieldNumber = 1;
  inline ::google::protobuf::int64 m_id() const;
  inline void set_m_id(::google::protobuf::int64 value);

  // optional int32 m_tpye = 2;
  inline bool has_m_tpye() const;
  inline void clear_m_tpye();
  static const int kMTpyeFieldNumber = 2;
  inline ::google::protobuf::int32 m_tpye() const;
  inline void set_m_tpye(::google::protobuf::int32 value);

  // repeated .proto_ff.E_PetAttributetpyeAttributeDesc m_attribute = 3;
  inline int m_attribute_size() const;
  inline void clear_m_attribute();
  static const int kMAttributeFieldNumber = 3;
  inline const ::proto_ff::E_PetAttributetpyeAttributeDesc& m_attribute(int index) const;
  inline ::proto_ff::E_PetAttributetpyeAttributeDesc* mutable_m_attribute(int index);
  inline ::proto_ff::E_PetAttributetpyeAttributeDesc* add_m_attribute();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_PetAttributetpyeAttributeDesc >&
      m_attribute() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_PetAttributetpyeAttributeDesc >*
      mutable_m_attribute();

  // @@protoc_insertion_point(class_scope:proto_ff.E_PetAttributetpye)
 private:
  inline void set_has_m_id();
  inline void clear_has_m_id();
  inline void set_has_m_tpye();
  inline void clear_has_m_tpye();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 m_id_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_PetAttributetpyeAttributeDesc > m_attribute_;
  ::google::protobuf::int32 m_tpye_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_pet_2eproto();
  friend void protobuf_AssignDesc_pet_2eproto();
  friend void protobuf_ShutdownFile_pet_2eproto();

  void InitAsDefaultInstance();
  static E_PetAttributetpye* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_PetAttributetpye : public ::google::protobuf::Message {
 public:
  Sheet_PetAttributetpye();
  virtual ~Sheet_PetAttributetpye();

  Sheet_PetAttributetpye(const Sheet_PetAttributetpye& from);

  inline Sheet_PetAttributetpye& operator=(const Sheet_PetAttributetpye& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_PetAttributetpye& default_instance();

  void Swap(Sheet_PetAttributetpye* other);

  // implements Message ----------------------------------------------

  Sheet_PetAttributetpye* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_PetAttributetpye& from);
  void MergeFrom(const Sheet_PetAttributetpye& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.E_PetAttributetpye E_PetAttributetpye_List = 1;
  inline int e_petattributetpye_list_size() const;
  inline void clear_e_petattributetpye_list();
  static const int kEPetAttributetpyeListFieldNumber = 1;
  inline const ::proto_ff::E_PetAttributetpye& e_petattributetpye_list(int index) const;
  inline ::proto_ff::E_PetAttributetpye* mutable_e_petattributetpye_list(int index);
  inline ::proto_ff::E_PetAttributetpye* add_e_petattributetpye_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_PetAttributetpye >&
      e_petattributetpye_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_PetAttributetpye >*
      mutable_e_petattributetpye_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_PetAttributetpye)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_PetAttributetpye > e_petattributetpye_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_pet_2eproto();
  friend void protobuf_AssignDesc_pet_2eproto();
  friend void protobuf_ShutdownFile_pet_2eproto();

  void InitAsDefaultInstance();
  static Sheet_PetAttributetpye* default_instance_;
};
// -------------------------------------------------------------------

class E_PetLvexp : public ::google::protobuf::Message {
 public:
  E_PetLvexp();
  virtual ~E_PetLvexp();

  E_PetLvexp(const E_PetLvexp& from);

  inline E_PetLvexp& operator=(const E_PetLvexp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_PetLvexp& default_instance();

  void Swap(E_PetLvexp* other);

  // implements Message ----------------------------------------------

  E_PetLvexp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_PetLvexp& from);
  void MergeFrom(const E_PetLvexp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 m_id = 1;
  inline bool has_m_id() const;
  inline void clear_m_id();
  static const int kMIdFieldNumber = 1;
  inline ::google::protobuf::int32 m_id() const;
  inline void set_m_id(::google::protobuf::int32 value);

  // optional int64 m_exp = 2;
  inline bool has_m_exp() const;
  inline void clear_m_exp();
  static const int kMExpFieldNumber = 2;
  inline ::google::protobuf::int64 m_exp() const;
  inline void set_m_exp(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.E_PetLvexp)
 private:
  inline void set_has_m_id();
  inline void clear_has_m_id();
  inline void set_has_m_exp();
  inline void clear_has_m_exp();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 m_exp_;
  ::google::protobuf::int32 m_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_pet_2eproto();
  friend void protobuf_AssignDesc_pet_2eproto();
  friend void protobuf_ShutdownFile_pet_2eproto();

  void InitAsDefaultInstance();
  static E_PetLvexp* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_PetLvexp : public ::google::protobuf::Message {
 public:
  Sheet_PetLvexp();
  virtual ~Sheet_PetLvexp();

  Sheet_PetLvexp(const Sheet_PetLvexp& from);

  inline Sheet_PetLvexp& operator=(const Sheet_PetLvexp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_PetLvexp& default_instance();

  void Swap(Sheet_PetLvexp* other);

  // implements Message ----------------------------------------------

  Sheet_PetLvexp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_PetLvexp& from);
  void MergeFrom(const Sheet_PetLvexp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.E_PetLvexp E_PetLvexp_List = 1;
  inline int e_petlvexp_list_size() const;
  inline void clear_e_petlvexp_list();
  static const int kEPetLvexpListFieldNumber = 1;
  inline const ::proto_ff::E_PetLvexp& e_petlvexp_list(int index) const;
  inline ::proto_ff::E_PetLvexp* mutable_e_petlvexp_list(int index);
  inline ::proto_ff::E_PetLvexp* add_e_petlvexp_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_PetLvexp >&
      e_petlvexp_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_PetLvexp >*
      mutable_e_petlvexp_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_PetLvexp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_PetLvexp > e_petlvexp_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_pet_2eproto();
  friend void protobuf_AssignDesc_pet_2eproto();
  friend void protobuf_ShutdownFile_pet_2eproto();

  void InitAsDefaultInstance();
  static Sheet_PetLvexp* default_instance_;
};
// -------------------------------------------------------------------

class E_PetAdvancelvAdvanceDesc : public ::google::protobuf::Message {
 public:
  E_PetAdvancelvAdvanceDesc();
  virtual ~E_PetAdvancelvAdvanceDesc();

  E_PetAdvancelvAdvanceDesc(const E_PetAdvancelvAdvanceDesc& from);

  inline E_PetAdvancelvAdvanceDesc& operator=(const E_PetAdvancelvAdvanceDesc& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_PetAdvancelvAdvanceDesc& default_instance();

  void Swap(E_PetAdvancelvAdvanceDesc* other);

  // implements Message ----------------------------------------------

  E_PetAdvancelvAdvanceDesc* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_PetAdvancelvAdvanceDesc& from);
  void MergeFrom(const E_PetAdvancelvAdvanceDesc& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 m_type = 1;
  inline bool has_m_type() const;
  inline void clear_m_type();
  static const int kMTypeFieldNumber = 1;
  inline ::google::protobuf::int32 m_type() const;
  inline void set_m_type(::google::protobuf::int32 value);

  // optional float m_param = 2;
  inline bool has_m_param() const;
  inline void clear_m_param();
  static const int kMParamFieldNumber = 2;
  inline float m_param() const;
  inline void set_m_param(float value);

  // @@protoc_insertion_point(class_scope:proto_ff.E_PetAdvancelvAdvanceDesc)
 private:
  inline void set_has_m_type();
  inline void clear_has_m_type();
  inline void set_has_m_param();
  inline void clear_has_m_param();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_type_;
  float m_param_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_pet_2eproto();
  friend void protobuf_AssignDesc_pet_2eproto();
  friend void protobuf_ShutdownFile_pet_2eproto();

  void InitAsDefaultInstance();
  static E_PetAdvancelvAdvanceDesc* default_instance_;
};
// -------------------------------------------------------------------

class E_PetAdvancelv : public ::google::protobuf::Message {
 public:
  E_PetAdvancelv();
  virtual ~E_PetAdvancelv();

  E_PetAdvancelv(const E_PetAdvancelv& from);

  inline E_PetAdvancelv& operator=(const E_PetAdvancelv& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_PetAdvancelv& default_instance();

  void Swap(E_PetAdvancelv* other);

  // implements Message ----------------------------------------------

  E_PetAdvancelv* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_PetAdvancelv& from);
  void MergeFrom(const E_PetAdvancelv& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 m_id = 1;
  inline bool has_m_id() const;
  inline void clear_m_id();
  static const int kMIdFieldNumber = 1;
  inline ::google::protobuf::int32 m_id() const;
  inline void set_m_id(::google::protobuf::int32 value);

  // optional int32 m_advanceitem = 2;
  inline bool has_m_advanceitem() const;
  inline void clear_m_advanceitem();
  static const int kMAdvanceitemFieldNumber = 2;
  inline ::google::protobuf::int32 m_advanceitem() const;
  inline void set_m_advanceitem(::google::protobuf::int32 value);

  // optional int32 m_advancenum = 3;
  inline bool has_m_advancenum() const;
  inline void clear_m_advancenum();
  static const int kMAdvancenumFieldNumber = 3;
  inline ::google::protobuf::int32 m_advancenum() const;
  inline void set_m_advancenum(::google::protobuf::int32 value);

  // repeated .proto_ff.E_PetAdvancelvAdvanceDesc m_advance = 4;
  inline int m_advance_size() const;
  inline void clear_m_advance();
  static const int kMAdvanceFieldNumber = 4;
  inline const ::proto_ff::E_PetAdvancelvAdvanceDesc& m_advance(int index) const;
  inline ::proto_ff::E_PetAdvancelvAdvanceDesc* mutable_m_advance(int index);
  inline ::proto_ff::E_PetAdvancelvAdvanceDesc* add_m_advance();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_PetAdvancelvAdvanceDesc >&
      m_advance() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_PetAdvancelvAdvanceDesc >*
      mutable_m_advance();

  // @@protoc_insertion_point(class_scope:proto_ff.E_PetAdvancelv)
 private:
  inline void set_has_m_id();
  inline void clear_has_m_id();
  inline void set_has_m_advanceitem();
  inline void clear_has_m_advanceitem();
  inline void set_has_m_advancenum();
  inline void clear_has_m_advancenum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_id_;
  ::google::protobuf::int32 m_advanceitem_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_PetAdvancelvAdvanceDesc > m_advance_;
  ::google::protobuf::int32 m_advancenum_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_pet_2eproto();
  friend void protobuf_AssignDesc_pet_2eproto();
  friend void protobuf_ShutdownFile_pet_2eproto();

  void InitAsDefaultInstance();
  static E_PetAdvancelv* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_PetAdvancelv : public ::google::protobuf::Message {
 public:
  Sheet_PetAdvancelv();
  virtual ~Sheet_PetAdvancelv();

  Sheet_PetAdvancelv(const Sheet_PetAdvancelv& from);

  inline Sheet_PetAdvancelv& operator=(const Sheet_PetAdvancelv& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_PetAdvancelv& default_instance();

  void Swap(Sheet_PetAdvancelv* other);

  // implements Message ----------------------------------------------

  Sheet_PetAdvancelv* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_PetAdvancelv& from);
  void MergeFrom(const Sheet_PetAdvancelv& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.E_PetAdvancelv E_PetAdvancelv_List = 1;
  inline int e_petadvancelv_list_size() const;
  inline void clear_e_petadvancelv_list();
  static const int kEPetAdvancelvListFieldNumber = 1;
  inline const ::proto_ff::E_PetAdvancelv& e_petadvancelv_list(int index) const;
  inline ::proto_ff::E_PetAdvancelv* mutable_e_petadvancelv_list(int index);
  inline ::proto_ff::E_PetAdvancelv* add_e_petadvancelv_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_PetAdvancelv >&
      e_petadvancelv_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_PetAdvancelv >*
      mutable_e_petadvancelv_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_PetAdvancelv)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_PetAdvancelv > e_petadvancelv_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_pet_2eproto();
  friend void protobuf_AssignDesc_pet_2eproto();
  friend void protobuf_ShutdownFile_pet_2eproto();

  void InitAsDefaultInstance();
  static Sheet_PetAdvancelv* default_instance_;
};
// -------------------------------------------------------------------

class E_PetStarupUpattributeDesc : public ::google::protobuf::Message {
 public:
  E_PetStarupUpattributeDesc();
  virtual ~E_PetStarupUpattributeDesc();

  E_PetStarupUpattributeDesc(const E_PetStarupUpattributeDesc& from);

  inline E_PetStarupUpattributeDesc& operator=(const E_PetStarupUpattributeDesc& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_PetStarupUpattributeDesc& default_instance();

  void Swap(E_PetStarupUpattributeDesc* other);

  // implements Message ----------------------------------------------

  E_PetStarupUpattributeDesc* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_PetStarupUpattributeDesc& from);
  void MergeFrom(const E_PetStarupUpattributeDesc& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 m_type = 1;
  inline bool has_m_type() const;
  inline void clear_m_type();
  static const int kMTypeFieldNumber = 1;
  inline ::google::protobuf::int32 m_type() const;
  inline void set_m_type(::google::protobuf::int32 value);

  // optional int32 m_value = 2;
  inline bool has_m_value() const;
  inline void clear_m_value();
  static const int kMValueFieldNumber = 2;
  inline ::google::protobuf::int32 m_value() const;
  inline void set_m_value(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.E_PetStarupUpattributeDesc)
 private:
  inline void set_has_m_type();
  inline void clear_has_m_type();
  inline void set_has_m_value();
  inline void clear_has_m_value();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_type_;
  ::google::protobuf::int32 m_value_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_pet_2eproto();
  friend void protobuf_AssignDesc_pet_2eproto();
  friend void protobuf_ShutdownFile_pet_2eproto();

  void InitAsDefaultInstance();
  static E_PetStarupUpattributeDesc* default_instance_;
};
// -------------------------------------------------------------------

class E_PetStarup : public ::google::protobuf::Message {
 public:
  E_PetStarup();
  virtual ~E_PetStarup();

  E_PetStarup(const E_PetStarup& from);

  inline E_PetStarup& operator=(const E_PetStarup& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_PetStarup& default_instance();

  void Swap(E_PetStarup* other);

  // implements Message ----------------------------------------------

  E_PetStarup* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_PetStarup& from);
  void MergeFrom(const E_PetStarup& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 m_id = 1;
  inline bool has_m_id() const;
  inline void clear_m_id();
  static const int kMIdFieldNumber = 1;
  inline ::google::protobuf::int32 m_id() const;
  inline void set_m_id(::google::protobuf::int32 value);

  // optional int64 m_upattributeid = 2;
  inline bool has_m_upattributeid() const;
  inline void clear_m_upattributeid();
  static const int kMUpattributeidFieldNumber = 2;
  inline ::google::protobuf::int64 m_upattributeid() const;
  inline void set_m_upattributeid(::google::protobuf::int64 value);

  // optional int32 m_starid = 3;
  inline bool has_m_starid() const;
  inline void clear_m_starid();
  static const int kMStaridFieldNumber = 3;
  inline ::google::protobuf::int32 m_starid() const;
  inline void set_m_starid(::google::protobuf::int32 value);

  // optional int32 m_skillid = 4;
  inline bool has_m_skillid() const;
  inline void clear_m_skillid();
  static const int kMSkillidFieldNumber = 4;
  inline ::google::protobuf::int32 m_skillid() const;
  inline void set_m_skillid(::google::protobuf::int32 value);

  // optional int32 m_activeskillidlv = 5;
  inline bool has_m_activeskillidlv() const;
  inline void clear_m_activeskillidlv();
  static const int kMActiveskillidlvFieldNumber = 5;
  inline ::google::protobuf::int32 m_activeskillidlv() const;
  inline void set_m_activeskillidlv(::google::protobuf::int32 value);

  // repeated .proto_ff.E_PetStarupUpattributeDesc m_upattribute = 6;
  inline int m_upattribute_size() const;
  inline void clear_m_upattribute();
  static const int kMUpattributeFieldNumber = 6;
  inline const ::proto_ff::E_PetStarupUpattributeDesc& m_upattribute(int index) const;
  inline ::proto_ff::E_PetStarupUpattributeDesc* mutable_m_upattribute(int index);
  inline ::proto_ff::E_PetStarupUpattributeDesc* add_m_upattribute();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_PetStarupUpattributeDesc >&
      m_upattribute() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_PetStarupUpattributeDesc >*
      mutable_m_upattribute();

  // @@protoc_insertion_point(class_scope:proto_ff.E_PetStarup)
 private:
  inline void set_has_m_id();
  inline void clear_has_m_id();
  inline void set_has_m_upattributeid();
  inline void clear_has_m_upattributeid();
  inline void set_has_m_starid();
  inline void clear_has_m_starid();
  inline void set_has_m_skillid();
  inline void clear_has_m_skillid();
  inline void set_has_m_activeskillidlv();
  inline void clear_has_m_activeskillidlv();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 m_upattributeid_;
  ::google::protobuf::int32 m_id_;
  ::google::protobuf::int32 m_starid_;
  ::google::protobuf::int32 m_skillid_;
  ::google::protobuf::int32 m_activeskillidlv_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_PetStarupUpattributeDesc > m_upattribute_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_pet_2eproto();
  friend void protobuf_AssignDesc_pet_2eproto();
  friend void protobuf_ShutdownFile_pet_2eproto();

  void InitAsDefaultInstance();
  static E_PetStarup* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_PetStarup : public ::google::protobuf::Message {
 public:
  Sheet_PetStarup();
  virtual ~Sheet_PetStarup();

  Sheet_PetStarup(const Sheet_PetStarup& from);

  inline Sheet_PetStarup& operator=(const Sheet_PetStarup& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_PetStarup& default_instance();

  void Swap(Sheet_PetStarup* other);

  // implements Message ----------------------------------------------

  Sheet_PetStarup* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_PetStarup& from);
  void MergeFrom(const Sheet_PetStarup& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.E_PetStarup E_PetStarup_List = 1;
  inline int e_petstarup_list_size() const;
  inline void clear_e_petstarup_list();
  static const int kEPetStarupListFieldNumber = 1;
  inline const ::proto_ff::E_PetStarup& e_petstarup_list(int index) const;
  inline ::proto_ff::E_PetStarup* mutable_e_petstarup_list(int index);
  inline ::proto_ff::E_PetStarup* add_e_petstarup_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_PetStarup >&
      e_petstarup_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_PetStarup >*
      mutable_e_petstarup_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_PetStarup)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_PetStarup > e_petstarup_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_pet_2eproto();
  friend void protobuf_AssignDesc_pet_2eproto();
  friend void protobuf_ShutdownFile_pet_2eproto();

  void InitAsDefaultInstance();
  static Sheet_PetStarup* default_instance_;
};
// -------------------------------------------------------------------

class E_PetEggPetDesc : public ::google::protobuf::Message {
 public:
  E_PetEggPetDesc();
  virtual ~E_PetEggPetDesc();

  E_PetEggPetDesc(const E_PetEggPetDesc& from);

  inline E_PetEggPetDesc& operator=(const E_PetEggPetDesc& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_PetEggPetDesc& default_instance();

  void Swap(E_PetEggPetDesc* other);

  // implements Message ----------------------------------------------

  E_PetEggPetDesc* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_PetEggPetDesc& from);
  void MergeFrom(const E_PetEggPetDesc& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 m_rand = 1;
  inline bool has_m_rand() const;
  inline void clear_m_rand();
  static const int kMRandFieldNumber = 1;
  inline ::google::protobuf::int32 m_rand() const;
  inline void set_m_rand(::google::protobuf::int32 value);

  // optional int32 m_id = 2;
  inline bool has_m_id() const;
  inline void clear_m_id();
  static const int kMIdFieldNumber = 2;
  inline ::google::protobuf::int32 m_id() const;
  inline void set_m_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.E_PetEggPetDesc)
 private:
  inline void set_has_m_rand();
  inline void clear_has_m_rand();
  inline void set_has_m_id();
  inline void clear_has_m_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_rand_;
  ::google::protobuf::int32 m_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_pet_2eproto();
  friend void protobuf_AssignDesc_pet_2eproto();
  friend void protobuf_ShutdownFile_pet_2eproto();

  void InitAsDefaultInstance();
  static E_PetEggPetDesc* default_instance_;
};
// -------------------------------------------------------------------

class E_PetEgg : public ::google::protobuf::Message {
 public:
  E_PetEgg();
  virtual ~E_PetEgg();

  E_PetEgg(const E_PetEgg& from);

  inline E_PetEgg& operator=(const E_PetEgg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_PetEgg& default_instance();

  void Swap(E_PetEgg* other);

  // implements Message ----------------------------------------------

  E_PetEgg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_PetEgg& from);
  void MergeFrom(const E_PetEgg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 m_id = 1;
  inline bool has_m_id() const;
  inline void clear_m_id();
  static const int kMIdFieldNumber = 1;
  inline ::google::protobuf::int32 m_id() const;
  inline void set_m_id(::google::protobuf::int32 value);

  // optional int32 m_time = 2;
  inline bool has_m_time() const;
  inline void clear_m_time();
  static const int kMTimeFieldNumber = 2;
  inline ::google::protobuf::int32 m_time() const;
  inline void set_m_time(::google::protobuf::int32 value);

  // repeated .proto_ff.E_PetEggPetDesc m_pet = 3;
  inline int m_pet_size() const;
  inline void clear_m_pet();
  static const int kMPetFieldNumber = 3;
  inline const ::proto_ff::E_PetEggPetDesc& m_pet(int index) const;
  inline ::proto_ff::E_PetEggPetDesc* mutable_m_pet(int index);
  inline ::proto_ff::E_PetEggPetDesc* add_m_pet();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_PetEggPetDesc >&
      m_pet() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_PetEggPetDesc >*
      mutable_m_pet();

  // @@protoc_insertion_point(class_scope:proto_ff.E_PetEgg)
 private:
  inline void set_has_m_id();
  inline void clear_has_m_id();
  inline void set_has_m_time();
  inline void clear_has_m_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_id_;
  ::google::protobuf::int32 m_time_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_PetEggPetDesc > m_pet_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_pet_2eproto();
  friend void protobuf_AssignDesc_pet_2eproto();
  friend void protobuf_ShutdownFile_pet_2eproto();

  void InitAsDefaultInstance();
  static E_PetEgg* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_PetEgg : public ::google::protobuf::Message {
 public:
  Sheet_PetEgg();
  virtual ~Sheet_PetEgg();

  Sheet_PetEgg(const Sheet_PetEgg& from);

  inline Sheet_PetEgg& operator=(const Sheet_PetEgg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_PetEgg& default_instance();

  void Swap(Sheet_PetEgg* other);

  // implements Message ----------------------------------------------

  Sheet_PetEgg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_PetEgg& from);
  void MergeFrom(const Sheet_PetEgg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.E_PetEgg E_PetEgg_List = 1;
  inline int e_petegg_list_size() const;
  inline void clear_e_petegg_list();
  static const int kEPetEggListFieldNumber = 1;
  inline const ::proto_ff::E_PetEgg& e_petegg_list(int index) const;
  inline ::proto_ff::E_PetEgg* mutable_e_petegg_list(int index);
  inline ::proto_ff::E_PetEgg* add_e_petegg_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_PetEgg >&
      e_petegg_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_PetEgg >*
      mutable_e_petegg_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_PetEgg)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_PetEgg > e_petegg_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_pet_2eproto();
  friend void protobuf_AssignDesc_pet_2eproto();
  friend void protobuf_ShutdownFile_pet_2eproto();

  void InitAsDefaultInstance();
  static Sheet_PetEgg* default_instance_;
};
// -------------------------------------------------------------------

class E_PetDecomposeDecomposeDesc : public ::google::protobuf::Message {
 public:
  E_PetDecomposeDecomposeDesc();
  virtual ~E_PetDecomposeDecomposeDesc();

  E_PetDecomposeDecomposeDesc(const E_PetDecomposeDecomposeDesc& from);

  inline E_PetDecomposeDecomposeDesc& operator=(const E_PetDecomposeDecomposeDesc& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_PetDecomposeDecomposeDesc& default_instance();

  void Swap(E_PetDecomposeDecomposeDesc* other);

  // implements Message ----------------------------------------------

  E_PetDecomposeDecomposeDesc* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_PetDecomposeDecomposeDesc& from);
  void MergeFrom(const E_PetDecomposeDecomposeDesc& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 m_boxid = 1;
  inline bool has_m_boxid() const;
  inline void clear_m_boxid();
  static const int kMBoxidFieldNumber = 1;
  inline ::google::protobuf::int32 m_boxid() const;
  inline void set_m_boxid(::google::protobuf::int32 value);

  // optional int32 m_type = 2;
  inline bool has_m_type() const;
  inline void clear_m_type();
  static const int kMTypeFieldNumber = 2;
  inline ::google::protobuf::int32 m_type() const;
  inline void set_m_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.E_PetDecomposeDecomposeDesc)
 private:
  inline void set_has_m_boxid();
  inline void clear_has_m_boxid();
  inline void set_has_m_type();
  inline void clear_has_m_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_boxid_;
  ::google::protobuf::int32 m_type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_pet_2eproto();
  friend void protobuf_AssignDesc_pet_2eproto();
  friend void protobuf_ShutdownFile_pet_2eproto();

  void InitAsDefaultInstance();
  static E_PetDecomposeDecomposeDesc* default_instance_;
};
// -------------------------------------------------------------------

class E_PetDecompose : public ::google::protobuf::Message {
 public:
  E_PetDecompose();
  virtual ~E_PetDecompose();

  E_PetDecompose(const E_PetDecompose& from);

  inline E_PetDecompose& operator=(const E_PetDecompose& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_PetDecompose& default_instance();

  void Swap(E_PetDecompose* other);

  // implements Message ----------------------------------------------

  E_PetDecompose* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_PetDecompose& from);
  void MergeFrom(const E_PetDecompose& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 m_id = 1;
  inline bool has_m_id() const;
  inline void clear_m_id();
  static const int kMIdFieldNumber = 1;
  inline ::google::protobuf::int32 m_id() const;
  inline void set_m_id(::google::protobuf::int32 value);

  // optional int32 m_quality = 2;
  inline bool has_m_quality() const;
  inline void clear_m_quality();
  static const int kMQualityFieldNumber = 2;
  inline ::google::protobuf::int32 m_quality() const;
  inline void set_m_quality(::google::protobuf::int32 value);

  // repeated .proto_ff.E_PetDecomposeDecomposeDesc m_decompose = 3;
  inline int m_decompose_size() const;
  inline void clear_m_decompose();
  static const int kMDecomposeFieldNumber = 3;
  inline const ::proto_ff::E_PetDecomposeDecomposeDesc& m_decompose(int index) const;
  inline ::proto_ff::E_PetDecomposeDecomposeDesc* mutable_m_decompose(int index);
  inline ::proto_ff::E_PetDecomposeDecomposeDesc* add_m_decompose();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_PetDecomposeDecomposeDesc >&
      m_decompose() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_PetDecomposeDecomposeDesc >*
      mutable_m_decompose();

  // @@protoc_insertion_point(class_scope:proto_ff.E_PetDecompose)
 private:
  inline void set_has_m_id();
  inline void clear_has_m_id();
  inline void set_has_m_quality();
  inline void clear_has_m_quality();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_id_;
  ::google::protobuf::int32 m_quality_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_PetDecomposeDecomposeDesc > m_decompose_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_pet_2eproto();
  friend void protobuf_AssignDesc_pet_2eproto();
  friend void protobuf_ShutdownFile_pet_2eproto();

  void InitAsDefaultInstance();
  static E_PetDecompose* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_PetDecompose : public ::google::protobuf::Message {
 public:
  Sheet_PetDecompose();
  virtual ~Sheet_PetDecompose();

  Sheet_PetDecompose(const Sheet_PetDecompose& from);

  inline Sheet_PetDecompose& operator=(const Sheet_PetDecompose& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_PetDecompose& default_instance();

  void Swap(Sheet_PetDecompose* other);

  // implements Message ----------------------------------------------

  Sheet_PetDecompose* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_PetDecompose& from);
  void MergeFrom(const Sheet_PetDecompose& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.E_PetDecompose E_PetDecompose_List = 1;
  inline int e_petdecompose_list_size() const;
  inline void clear_e_petdecompose_list();
  static const int kEPetDecomposeListFieldNumber = 1;
  inline const ::proto_ff::E_PetDecompose& e_petdecompose_list(int index) const;
  inline ::proto_ff::E_PetDecompose* mutable_e_petdecompose_list(int index);
  inline ::proto_ff::E_PetDecompose* add_e_petdecompose_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_PetDecompose >&
      e_petdecompose_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_PetDecompose >*
      mutable_e_petdecompose_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_PetDecompose)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_PetDecompose > e_petdecompose_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_pet_2eproto();
  friend void protobuf_AssignDesc_pet_2eproto();
  friend void protobuf_ShutdownFile_pet_2eproto();

  void InitAsDefaultInstance();
  static Sheet_PetDecompose* default_instance_;
};
// -------------------------------------------------------------------

class E_PetFettersAttributeDesc : public ::google::protobuf::Message {
 public:
  E_PetFettersAttributeDesc();
  virtual ~E_PetFettersAttributeDesc();

  E_PetFettersAttributeDesc(const E_PetFettersAttributeDesc& from);

  inline E_PetFettersAttributeDesc& operator=(const E_PetFettersAttributeDesc& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_PetFettersAttributeDesc& default_instance();

  void Swap(E_PetFettersAttributeDesc* other);

  // implements Message ----------------------------------------------

  E_PetFettersAttributeDesc* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_PetFettersAttributeDesc& from);
  void MergeFrom(const E_PetFettersAttributeDesc& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 m_type = 1;
  inline bool has_m_type() const;
  inline void clear_m_type();
  static const int kMTypeFieldNumber = 1;
  inline ::google::protobuf::int32 m_type() const;
  inline void set_m_type(::google::protobuf::int32 value);

  // optional int32 m_value = 2;
  inline bool has_m_value() const;
  inline void clear_m_value();
  static const int kMValueFieldNumber = 2;
  inline ::google::protobuf::int32 m_value() const;
  inline void set_m_value(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.E_PetFettersAttributeDesc)
 private:
  inline void set_has_m_type();
  inline void clear_has_m_type();
  inline void set_has_m_value();
  inline void clear_has_m_value();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_type_;
  ::google::protobuf::int32 m_value_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_pet_2eproto();
  friend void protobuf_AssignDesc_pet_2eproto();
  friend void protobuf_ShutdownFile_pet_2eproto();

  void InitAsDefaultInstance();
  static E_PetFettersAttributeDesc* default_instance_;
};
// -------------------------------------------------------------------

class E_PetFetters : public ::google::protobuf::Message {
 public:
  E_PetFetters();
  virtual ~E_PetFetters();

  E_PetFetters(const E_PetFetters& from);

  inline E_PetFetters& operator=(const E_PetFetters& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_PetFetters& default_instance();

  void Swap(E_PetFetters* other);

  // implements Message ----------------------------------------------

  E_PetFetters* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_PetFetters& from);
  void MergeFrom(const E_PetFetters& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 m_id = 1;
  inline bool has_m_id() const;
  inline void clear_m_id();
  static const int kMIdFieldNumber = 1;
  inline ::google::protobuf::int32 m_id() const;
  inline void set_m_id(::google::protobuf::int32 value);

  // optional int32 m_quality = 2;
  inline bool has_m_quality() const;
  inline void clear_m_quality();
  static const int kMQualityFieldNumber = 2;
  inline ::google::protobuf::int32 m_quality() const;
  inline void set_m_quality(::google::protobuf::int32 value);

  // repeated int32 m_petid = 3;
  inline int m_petid_size() const;
  inline void clear_m_petid();
  static const int kMPetidFieldNumber = 3;
  inline ::google::protobuf::int32 m_petid(int index) const;
  inline void set_m_petid(int index, ::google::protobuf::int32 value);
  inline void add_m_petid(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      m_petid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_m_petid();

  // repeated int32 m_atctive_skillid = 4;
  inline int m_atctive_skillid_size() const;
  inline void clear_m_atctive_skillid();
  static const int kMAtctiveSkillidFieldNumber = 4;
  inline ::google::protobuf::int32 m_atctive_skillid(int index) const;
  inline void set_m_atctive_skillid(int index, ::google::protobuf::int32 value);
  inline void add_m_atctive_skillid(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      m_atctive_skillid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_m_atctive_skillid();

  // repeated .proto_ff.E_PetFettersAttributeDesc m_attribute = 5;
  inline int m_attribute_size() const;
  inline void clear_m_attribute();
  static const int kMAttributeFieldNumber = 5;
  inline const ::proto_ff::E_PetFettersAttributeDesc& m_attribute(int index) const;
  inline ::proto_ff::E_PetFettersAttributeDesc* mutable_m_attribute(int index);
  inline ::proto_ff::E_PetFettersAttributeDesc* add_m_attribute();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_PetFettersAttributeDesc >&
      m_attribute() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_PetFettersAttributeDesc >*
      mutable_m_attribute();

  // @@protoc_insertion_point(class_scope:proto_ff.E_PetFetters)
 private:
  inline void set_has_m_id();
  inline void clear_has_m_id();
  inline void set_has_m_quality();
  inline void clear_has_m_quality();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 m_id_;
  ::google::protobuf::int32 m_quality_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > m_petid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > m_atctive_skillid_;
  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_PetFettersAttributeDesc > m_attribute_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_pet_2eproto();
  friend void protobuf_AssignDesc_pet_2eproto();
  friend void protobuf_ShutdownFile_pet_2eproto();

  void InitAsDefaultInstance();
  static E_PetFetters* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_PetFetters : public ::google::protobuf::Message {
 public:
  Sheet_PetFetters();
  virtual ~Sheet_PetFetters();

  Sheet_PetFetters(const Sheet_PetFetters& from);

  inline Sheet_PetFetters& operator=(const Sheet_PetFetters& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_PetFetters& default_instance();

  void Swap(Sheet_PetFetters* other);

  // implements Message ----------------------------------------------

  Sheet_PetFetters* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_PetFetters& from);
  void MergeFrom(const Sheet_PetFetters& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.E_PetFetters E_PetFetters_List = 1;
  inline int e_petfetters_list_size() const;
  inline void clear_e_petfetters_list();
  static const int kEPetFettersListFieldNumber = 1;
  inline const ::proto_ff::E_PetFetters& e_petfetters_list(int index) const;
  inline ::proto_ff::E_PetFetters* mutable_e_petfetters_list(int index);
  inline ::proto_ff::E_PetFetters* add_e_petfetters_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_PetFetters >&
      e_petfetters_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_PetFetters >*
      mutable_e_petfetters_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_PetFetters)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_PetFetters > e_petfetters_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_pet_2eproto();
  friend void protobuf_AssignDesc_pet_2eproto();
  friend void protobuf_ShutdownFile_pet_2eproto();

  void InitAsDefaultInstance();
  static Sheet_PetFetters* default_instance_;
};
// ===================================================================


// ===================================================================

// E_PetDisplayMaterialDesc

// optional int64 m_id = 1;
inline bool E_PetDisplayMaterialDesc::has_m_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_PetDisplayMaterialDesc::set_has_m_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_PetDisplayMaterialDesc::clear_has_m_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_PetDisplayMaterialDesc::clear_m_id() {
  m_id_ = GOOGLE_LONGLONG(0);
  clear_has_m_id();
}
inline ::google::protobuf::int64 E_PetDisplayMaterialDesc::m_id() const {
  return m_id_;
}
inline void E_PetDisplayMaterialDesc::set_m_id(::google::protobuf::int64 value) {
  set_has_m_id();
  m_id_ = value;
}

// optional int32 m_exp = 2;
inline bool E_PetDisplayMaterialDesc::has_m_exp() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_PetDisplayMaterialDesc::set_has_m_exp() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_PetDisplayMaterialDesc::clear_has_m_exp() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_PetDisplayMaterialDesc::clear_m_exp() {
  m_exp_ = 0;
  clear_has_m_exp();
}
inline ::google::protobuf::int32 E_PetDisplayMaterialDesc::m_exp() const {
  return m_exp_;
}
inline void E_PetDisplayMaterialDesc::set_m_exp(::google::protobuf::int32 value) {
  set_has_m_exp();
  m_exp_ = value;
}

// -------------------------------------------------------------------

// E_PetDisplay

// optional int64 m_id = 1;
inline bool E_PetDisplay::has_m_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_PetDisplay::set_has_m_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_PetDisplay::clear_has_m_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_PetDisplay::clear_m_id() {
  m_id_ = GOOGLE_LONGLONG(0);
  clear_has_m_id();
}
inline ::google::protobuf::int64 E_PetDisplay::m_id() const {
  return m_id_;
}
inline void E_PetDisplay::set_m_id(::google::protobuf::int64 value) {
  set_has_m_id();
  m_id_ = value;
}

// optional int32 m_quality = 2;
inline bool E_PetDisplay::has_m_quality() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_PetDisplay::set_has_m_quality() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_PetDisplay::clear_has_m_quality() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_PetDisplay::clear_m_quality() {
  m_quality_ = 0;
  clear_has_m_quality();
}
inline ::google::protobuf::int32 E_PetDisplay::m_quality() const {
  return m_quality_;
}
inline void E_PetDisplay::set_m_quality(::google::protobuf::int32 value) {
  set_has_m_quality();
  m_quality_ = value;
}

// optional int32 m_isstar = 3;
inline bool E_PetDisplay::has_m_isstar() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void E_PetDisplay::set_has_m_isstar() {
  _has_bits_[0] |= 0x00000004u;
}
inline void E_PetDisplay::clear_has_m_isstar() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void E_PetDisplay::clear_m_isstar() {
  m_isstar_ = 0;
  clear_has_m_isstar();
}
inline ::google::protobuf::int32 E_PetDisplay::m_isstar() const {
  return m_isstar_;
}
inline void E_PetDisplay::set_m_isstar(::google::protobuf::int32 value) {
  set_has_m_isstar();
  m_isstar_ = value;
}

// optional string m_grade = 4;
inline bool E_PetDisplay::has_m_grade() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void E_PetDisplay::set_has_m_grade() {
  _has_bits_[0] |= 0x00000008u;
}
inline void E_PetDisplay::clear_has_m_grade() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void E_PetDisplay::clear_m_grade() {
  if (m_grade_ != &::google::protobuf::internal::kEmptyString) {
    m_grade_->clear();
  }
  clear_has_m_grade();
}
inline const ::std::string& E_PetDisplay::m_grade() const {
  return *m_grade_;
}
inline void E_PetDisplay::set_m_grade(const ::std::string& value) {
  set_has_m_grade();
  if (m_grade_ == &::google::protobuf::internal::kEmptyString) {
    m_grade_ = new ::std::string;
  }
  m_grade_->assign(value);
}
inline void E_PetDisplay::set_m_grade(const char* value) {
  set_has_m_grade();
  if (m_grade_ == &::google::protobuf::internal::kEmptyString) {
    m_grade_ = new ::std::string;
  }
  m_grade_->assign(value);
}
inline void E_PetDisplay::set_m_grade(const char* value, size_t size) {
  set_has_m_grade();
  if (m_grade_ == &::google::protobuf::internal::kEmptyString) {
    m_grade_ = new ::std::string;
  }
  m_grade_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* E_PetDisplay::mutable_m_grade() {
  set_has_m_grade();
  if (m_grade_ == &::google::protobuf::internal::kEmptyString) {
    m_grade_ = new ::std::string;
  }
  return m_grade_;
}
inline ::std::string* E_PetDisplay::release_m_grade() {
  clear_has_m_grade();
  if (m_grade_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = m_grade_;
    m_grade_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void E_PetDisplay::set_allocated_m_grade(::std::string* m_grade) {
  if (m_grade_ != &::google::protobuf::internal::kEmptyString) {
    delete m_grade_;
  }
  if (m_grade) {
    set_has_m_grade();
    m_grade_ = m_grade;
  } else {
    clear_has_m_grade();
    m_grade_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int64 m_monsterid = 5;
inline bool E_PetDisplay::has_m_monsterid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void E_PetDisplay::set_has_m_monsterid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void E_PetDisplay::clear_has_m_monsterid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void E_PetDisplay::clear_m_monsterid() {
  m_monsterid_ = GOOGLE_LONGLONG(0);
  clear_has_m_monsterid();
}
inline ::google::protobuf::int64 E_PetDisplay::m_monsterid() const {
  return m_monsterid_;
}
inline void E_PetDisplay::set_m_monsterid(::google::protobuf::int64 value) {
  set_has_m_monsterid();
  m_monsterid_ = value;
}

// optional string m_name = 6;
inline bool E_PetDisplay::has_m_name() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void E_PetDisplay::set_has_m_name() {
  _has_bits_[0] |= 0x00000020u;
}
inline void E_PetDisplay::clear_has_m_name() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void E_PetDisplay::clear_m_name() {
  if (m_name_ != &::google::protobuf::internal::kEmptyString) {
    m_name_->clear();
  }
  clear_has_m_name();
}
inline const ::std::string& E_PetDisplay::m_name() const {
  return *m_name_;
}
inline void E_PetDisplay::set_m_name(const ::std::string& value) {
  set_has_m_name();
  if (m_name_ == &::google::protobuf::internal::kEmptyString) {
    m_name_ = new ::std::string;
  }
  m_name_->assign(value);
}
inline void E_PetDisplay::set_m_name(const char* value) {
  set_has_m_name();
  if (m_name_ == &::google::protobuf::internal::kEmptyString) {
    m_name_ = new ::std::string;
  }
  m_name_->assign(value);
}
inline void E_PetDisplay::set_m_name(const char* value, size_t size) {
  set_has_m_name();
  if (m_name_ == &::google::protobuf::internal::kEmptyString) {
    m_name_ = new ::std::string;
  }
  m_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* E_PetDisplay::mutable_m_name() {
  set_has_m_name();
  if (m_name_ == &::google::protobuf::internal::kEmptyString) {
    m_name_ = new ::std::string;
  }
  return m_name_;
}
inline ::std::string* E_PetDisplay::release_m_name() {
  clear_has_m_name();
  if (m_name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = m_name_;
    m_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void E_PetDisplay::set_allocated_m_name(::std::string* m_name) {
  if (m_name_ != &::google::protobuf::internal::kEmptyString) {
    delete m_name_;
  }
  if (m_name) {
    set_has_m_name();
    m_name_ = m_name;
  } else {
    clear_has_m_name();
    m_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 m_activeskillid = 7;
inline bool E_PetDisplay::has_m_activeskillid() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void E_PetDisplay::set_has_m_activeskillid() {
  _has_bits_[0] |= 0x00000040u;
}
inline void E_PetDisplay::clear_has_m_activeskillid() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void E_PetDisplay::clear_m_activeskillid() {
  m_activeskillid_ = 0;
  clear_has_m_activeskillid();
}
inline ::google::protobuf::int32 E_PetDisplay::m_activeskillid() const {
  return m_activeskillid_;
}
inline void E_PetDisplay::set_m_activeskillid(::google::protobuf::int32 value) {
  set_has_m_activeskillid();
  m_activeskillid_ = value;
}

// optional string m_exclusiveskillid = 8;
inline bool E_PetDisplay::has_m_exclusiveskillid() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void E_PetDisplay::set_has_m_exclusiveskillid() {
  _has_bits_[0] |= 0x00000080u;
}
inline void E_PetDisplay::clear_has_m_exclusiveskillid() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void E_PetDisplay::clear_m_exclusiveskillid() {
  if (m_exclusiveskillid_ != &::google::protobuf::internal::kEmptyString) {
    m_exclusiveskillid_->clear();
  }
  clear_has_m_exclusiveskillid();
}
inline const ::std::string& E_PetDisplay::m_exclusiveskillid() const {
  return *m_exclusiveskillid_;
}
inline void E_PetDisplay::set_m_exclusiveskillid(const ::std::string& value) {
  set_has_m_exclusiveskillid();
  if (m_exclusiveskillid_ == &::google::protobuf::internal::kEmptyString) {
    m_exclusiveskillid_ = new ::std::string;
  }
  m_exclusiveskillid_->assign(value);
}
inline void E_PetDisplay::set_m_exclusiveskillid(const char* value) {
  set_has_m_exclusiveskillid();
  if (m_exclusiveskillid_ == &::google::protobuf::internal::kEmptyString) {
    m_exclusiveskillid_ = new ::std::string;
  }
  m_exclusiveskillid_->assign(value);
}
inline void E_PetDisplay::set_m_exclusiveskillid(const char* value, size_t size) {
  set_has_m_exclusiveskillid();
  if (m_exclusiveskillid_ == &::google::protobuf::internal::kEmptyString) {
    m_exclusiveskillid_ = new ::std::string;
  }
  m_exclusiveskillid_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* E_PetDisplay::mutable_m_exclusiveskillid() {
  set_has_m_exclusiveskillid();
  if (m_exclusiveskillid_ == &::google::protobuf::internal::kEmptyString) {
    m_exclusiveskillid_ = new ::std::string;
  }
  return m_exclusiveskillid_;
}
inline ::std::string* E_PetDisplay::release_m_exclusiveskillid() {
  clear_has_m_exclusiveskillid();
  if (m_exclusiveskillid_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = m_exclusiveskillid_;
    m_exclusiveskillid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void E_PetDisplay::set_allocated_m_exclusiveskillid(::std::string* m_exclusiveskillid) {
  if (m_exclusiveskillid_ != &::google::protobuf::internal::kEmptyString) {
    delete m_exclusiveskillid_;
  }
  if (m_exclusiveskillid) {
    set_has_m_exclusiveskillid();
    m_exclusiveskillid_ = m_exclusiveskillid;
  } else {
    clear_has_m_exclusiveskillid();
    m_exclusiveskillid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string m_passiveskillid = 9;
inline bool E_PetDisplay::has_m_passiveskillid() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void E_PetDisplay::set_has_m_passiveskillid() {
  _has_bits_[0] |= 0x00000100u;
}
inline void E_PetDisplay::clear_has_m_passiveskillid() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void E_PetDisplay::clear_m_passiveskillid() {
  if (m_passiveskillid_ != &::google::protobuf::internal::kEmptyString) {
    m_passiveskillid_->clear();
  }
  clear_has_m_passiveskillid();
}
inline const ::std::string& E_PetDisplay::m_passiveskillid() const {
  return *m_passiveskillid_;
}
inline void E_PetDisplay::set_m_passiveskillid(const ::std::string& value) {
  set_has_m_passiveskillid();
  if (m_passiveskillid_ == &::google::protobuf::internal::kEmptyString) {
    m_passiveskillid_ = new ::std::string;
  }
  m_passiveskillid_->assign(value);
}
inline void E_PetDisplay::set_m_passiveskillid(const char* value) {
  set_has_m_passiveskillid();
  if (m_passiveskillid_ == &::google::protobuf::internal::kEmptyString) {
    m_passiveskillid_ = new ::std::string;
  }
  m_passiveskillid_->assign(value);
}
inline void E_PetDisplay::set_m_passiveskillid(const char* value, size_t size) {
  set_has_m_passiveskillid();
  if (m_passiveskillid_ == &::google::protobuf::internal::kEmptyString) {
    m_passiveskillid_ = new ::std::string;
  }
  m_passiveskillid_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* E_PetDisplay::mutable_m_passiveskillid() {
  set_has_m_passiveskillid();
  if (m_passiveskillid_ == &::google::protobuf::internal::kEmptyString) {
    m_passiveskillid_ = new ::std::string;
  }
  return m_passiveskillid_;
}
inline ::std::string* E_PetDisplay::release_m_passiveskillid() {
  clear_has_m_passiveskillid();
  if (m_passiveskillid_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = m_passiveskillid_;
    m_passiveskillid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void E_PetDisplay::set_allocated_m_passiveskillid(::std::string* m_passiveskillid) {
  if (m_passiveskillid_ != &::google::protobuf::internal::kEmptyString) {
    delete m_passiveskillid_;
  }
  if (m_passiveskillid) {
    set_has_m_passiveskillid();
    m_passiveskillid_ = m_passiveskillid;
  } else {
    clear_has_m_passiveskillid();
    m_passiveskillid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 m_activeattribute = 10;
inline bool E_PetDisplay::has_m_activeattribute() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void E_PetDisplay::set_has_m_activeattribute() {
  _has_bits_[0] |= 0x00000200u;
}
inline void E_PetDisplay::clear_has_m_activeattribute() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void E_PetDisplay::clear_m_activeattribute() {
  m_activeattribute_ = 0;
  clear_has_m_activeattribute();
}
inline ::google::protobuf::int32 E_PetDisplay::m_activeattribute() const {
  return m_activeattribute_;
}
inline void E_PetDisplay::set_m_activeattribute(::google::protobuf::int32 value) {
  set_has_m_activeattribute();
  m_activeattribute_ = value;
}

// optional int32 m_growatt = 11;
inline bool E_PetDisplay::has_m_growatt() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void E_PetDisplay::set_has_m_growatt() {
  _has_bits_[0] |= 0x00000400u;
}
inline void E_PetDisplay::clear_has_m_growatt() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void E_PetDisplay::clear_m_growatt() {
  m_growatt_ = 0;
  clear_has_m_growatt();
}
inline ::google::protobuf::int32 E_PetDisplay::m_growatt() const {
  return m_growatt_;
}
inline void E_PetDisplay::set_m_growatt(::google::protobuf::int32 value) {
  set_has_m_growatt();
  m_growatt_ = value;
}

// optional float m_activeparama = 12;
inline bool E_PetDisplay::has_m_activeparama() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void E_PetDisplay::set_has_m_activeparama() {
  _has_bits_[0] |= 0x00000800u;
}
inline void E_PetDisplay::clear_has_m_activeparama() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void E_PetDisplay::clear_m_activeparama() {
  m_activeparama_ = 0;
  clear_has_m_activeparama();
}
inline float E_PetDisplay::m_activeparama() const {
  return m_activeparama_;
}
inline void E_PetDisplay::set_m_activeparama(float value) {
  set_has_m_activeparama();
  m_activeparama_ = value;
}

// optional float m_growattparama = 13;
inline bool E_PetDisplay::has_m_growattparama() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void E_PetDisplay::set_has_m_growattparama() {
  _has_bits_[0] |= 0x00001000u;
}
inline void E_PetDisplay::clear_has_m_growattparama() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void E_PetDisplay::clear_m_growattparama() {
  m_growattparama_ = 0;
  clear_has_m_growattparama();
}
inline float E_PetDisplay::m_growattparama() const {
  return m_growattparama_;
}
inline void E_PetDisplay::set_m_growattparama(float value) {
  set_has_m_growattparama();
  m_growattparama_ = value;
}

// optional float m_growstandarda = 14;
inline bool E_PetDisplay::has_m_growstandarda() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void E_PetDisplay::set_has_m_growstandarda() {
  _has_bits_[0] |= 0x00002000u;
}
inline void E_PetDisplay::clear_has_m_growstandarda() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void E_PetDisplay::clear_m_growstandarda() {
  m_growstandarda_ = 0;
  clear_has_m_growstandarda();
}
inline float E_PetDisplay::m_growstandarda() const {
  return m_growstandarda_;
}
inline void E_PetDisplay::set_m_growstandarda(float value) {
  set_has_m_growstandarda();
  m_growstandarda_ = value;
}

// optional float m_growstandardb = 15;
inline bool E_PetDisplay::has_m_growstandardb() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void E_PetDisplay::set_has_m_growstandardb() {
  _has_bits_[0] |= 0x00004000u;
}
inline void E_PetDisplay::clear_has_m_growstandardb() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void E_PetDisplay::clear_m_growstandardb() {
  m_growstandardb_ = 0;
  clear_has_m_growstandardb();
}
inline float E_PetDisplay::m_growstandardb() const {
  return m_growstandardb_;
}
inline void E_PetDisplay::set_m_growstandardb(float value) {
  set_has_m_growstandardb();
  m_growstandardb_ = value;
}

// optional float m_growstandard = 16;
inline bool E_PetDisplay::has_m_growstandard() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void E_PetDisplay::set_has_m_growstandard() {
  _has_bits_[0] |= 0x00008000u;
}
inline void E_PetDisplay::clear_has_m_growstandard() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void E_PetDisplay::clear_m_growstandard() {
  m_growstandard_ = 0;
  clear_has_m_growstandard();
}
inline float E_PetDisplay::m_growstandard() const {
  return m_growstandard_;
}
inline void E_PetDisplay::set_m_growstandard(float value) {
  set_has_m_growstandard();
  m_growstandard_ = value;
}

// optional float m_growmin = 17;
inline bool E_PetDisplay::has_m_growmin() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void E_PetDisplay::set_has_m_growmin() {
  _has_bits_[0] |= 0x00010000u;
}
inline void E_PetDisplay::clear_has_m_growmin() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void E_PetDisplay::clear_m_growmin() {
  m_growmin_ = 0;
  clear_has_m_growmin();
}
inline float E_PetDisplay::m_growmin() const {
  return m_growmin_;
}
inline void E_PetDisplay::set_m_growmin(float value) {
  set_has_m_growmin();
  m_growmin_ = value;
}

// optional float m_growmax = 18;
inline bool E_PetDisplay::has_m_growmax() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void E_PetDisplay::set_has_m_growmax() {
  _has_bits_[0] |= 0x00020000u;
}
inline void E_PetDisplay::clear_has_m_growmax() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void E_PetDisplay::clear_m_growmax() {
  m_growmax_ = 0;
  clear_has_m_growmax();
}
inline float E_PetDisplay::m_growmax() const {
  return m_growmax_;
}
inline void E_PetDisplay::set_m_growmax(float value) {
  set_has_m_growmax();
  m_growmax_ = value;
}

// optional float m_growstar = 19;
inline bool E_PetDisplay::has_m_growstar() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void E_PetDisplay::set_has_m_growstar() {
  _has_bits_[0] |= 0x00040000u;
}
inline void E_PetDisplay::clear_has_m_growstar() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void E_PetDisplay::clear_m_growstar() {
  m_growstar_ = 0;
  clear_has_m_growstar();
}
inline float E_PetDisplay::m_growstar() const {
  return m_growstar_;
}
inline void E_PetDisplay::set_m_growstar(float value) {
  set_has_m_growstar();
  m_growstar_ = value;
}

// optional int32 m_advanceattribute = 20;
inline bool E_PetDisplay::has_m_advanceattribute() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void E_PetDisplay::set_has_m_advanceattribute() {
  _has_bits_[0] |= 0x00080000u;
}
inline void E_PetDisplay::clear_has_m_advanceattribute() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void E_PetDisplay::clear_m_advanceattribute() {
  m_advanceattribute_ = 0;
  clear_has_m_advanceattribute();
}
inline ::google::protobuf::int32 E_PetDisplay::m_advanceattribute() const {
  return m_advanceattribute_;
}
inline void E_PetDisplay::set_m_advanceattribute(::google::protobuf::int32 value) {
  set_has_m_advanceattribute();
  m_advanceattribute_ = value;
}

// optional int32 m_advancetype = 21;
inline bool E_PetDisplay::has_m_advancetype() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void E_PetDisplay::set_has_m_advancetype() {
  _has_bits_[0] |= 0x00100000u;
}
inline void E_PetDisplay::clear_has_m_advancetype() {
  _has_bits_[0] &= ~0x00100000u;
}
inline void E_PetDisplay::clear_m_advancetype() {
  m_advancetype_ = 0;
  clear_has_m_advancetype();
}
inline ::google::protobuf::int32 E_PetDisplay::m_advancetype() const {
  return m_advancetype_;
}
inline void E_PetDisplay::set_m_advancetype(::google::protobuf::int32 value) {
  set_has_m_advancetype();
  m_advancetype_ = value;
}

// optional string m_pettagskill = 22;
inline bool E_PetDisplay::has_m_pettagskill() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
inline void E_PetDisplay::set_has_m_pettagskill() {
  _has_bits_[0] |= 0x00200000u;
}
inline void E_PetDisplay::clear_has_m_pettagskill() {
  _has_bits_[0] &= ~0x00200000u;
}
inline void E_PetDisplay::clear_m_pettagskill() {
  if (m_pettagskill_ != &::google::protobuf::internal::kEmptyString) {
    m_pettagskill_->clear();
  }
  clear_has_m_pettagskill();
}
inline const ::std::string& E_PetDisplay::m_pettagskill() const {
  return *m_pettagskill_;
}
inline void E_PetDisplay::set_m_pettagskill(const ::std::string& value) {
  set_has_m_pettagskill();
  if (m_pettagskill_ == &::google::protobuf::internal::kEmptyString) {
    m_pettagskill_ = new ::std::string;
  }
  m_pettagskill_->assign(value);
}
inline void E_PetDisplay::set_m_pettagskill(const char* value) {
  set_has_m_pettagskill();
  if (m_pettagskill_ == &::google::protobuf::internal::kEmptyString) {
    m_pettagskill_ = new ::std::string;
  }
  m_pettagskill_->assign(value);
}
inline void E_PetDisplay::set_m_pettagskill(const char* value, size_t size) {
  set_has_m_pettagskill();
  if (m_pettagskill_ == &::google::protobuf::internal::kEmptyString) {
    m_pettagskill_ = new ::std::string;
  }
  m_pettagskill_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* E_PetDisplay::mutable_m_pettagskill() {
  set_has_m_pettagskill();
  if (m_pettagskill_ == &::google::protobuf::internal::kEmptyString) {
    m_pettagskill_ = new ::std::string;
  }
  return m_pettagskill_;
}
inline ::std::string* E_PetDisplay::release_m_pettagskill() {
  clear_has_m_pettagskill();
  if (m_pettagskill_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = m_pettagskill_;
    m_pettagskill_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void E_PetDisplay::set_allocated_m_pettagskill(::std::string* m_pettagskill) {
  if (m_pettagskill_ != &::google::protobuf::internal::kEmptyString) {
    delete m_pettagskill_;
  }
  if (m_pettagskill) {
    set_has_m_pettagskill();
    m_pettagskill_ = m_pettagskill;
  } else {
    clear_has_m_pettagskill();
    m_pettagskill_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 m_starattribute = 23;
inline bool E_PetDisplay::has_m_starattribute() const {
  return (_has_bits_[0] & 0x00400000u) != 0;
}
inline void E_PetDisplay::set_has_m_starattribute() {
  _has_bits_[0] |= 0x00400000u;
}
inline void E_PetDisplay::clear_has_m_starattribute() {
  _has_bits_[0] &= ~0x00400000u;
}
inline void E_PetDisplay::clear_m_starattribute() {
  m_starattribute_ = 0;
  clear_has_m_starattribute();
}
inline ::google::protobuf::int32 E_PetDisplay::m_starattribute() const {
  return m_starattribute_;
}
inline void E_PetDisplay::set_m_starattribute(::google::protobuf::int32 value) {
  set_has_m_starattribute();
  m_starattribute_ = value;
}

// optional int32 m_starpercent = 24;
inline bool E_PetDisplay::has_m_starpercent() const {
  return (_has_bits_[0] & 0x00800000u) != 0;
}
inline void E_PetDisplay::set_has_m_starpercent() {
  _has_bits_[0] |= 0x00800000u;
}
inline void E_PetDisplay::clear_has_m_starpercent() {
  _has_bits_[0] &= ~0x00800000u;
}
inline void E_PetDisplay::clear_m_starpercent() {
  m_starpercent_ = 0;
  clear_has_m_starpercent();
}
inline ::google::protobuf::int32 E_PetDisplay::m_starpercent() const {
  return m_starpercent_;
}
inline void E_PetDisplay::set_m_starpercent(::google::protobuf::int32 value) {
  set_has_m_starpercent();
  m_starpercent_ = value;
}

// optional int32 m_starllimit = 25;
inline bool E_PetDisplay::has_m_starllimit() const {
  return (_has_bits_[0] & 0x01000000u) != 0;
}
inline void E_PetDisplay::set_has_m_starllimit() {
  _has_bits_[0] |= 0x01000000u;
}
inline void E_PetDisplay::clear_has_m_starllimit() {
  _has_bits_[0] &= ~0x01000000u;
}
inline void E_PetDisplay::clear_m_starllimit() {
  m_starllimit_ = 0;
  clear_has_m_starllimit();
}
inline ::google::protobuf::int32 E_PetDisplay::m_starllimit() const {
  return m_starllimit_;
}
inline void E_PetDisplay::set_m_starllimit(::google::protobuf::int32 value) {
  set_has_m_starllimit();
  m_starllimit_ = value;
}

// optional int64 m_staritem = 26;
inline bool E_PetDisplay::has_m_staritem() const {
  return (_has_bits_[0] & 0x02000000u) != 0;
}
inline void E_PetDisplay::set_has_m_staritem() {
  _has_bits_[0] |= 0x02000000u;
}
inline void E_PetDisplay::clear_has_m_staritem() {
  _has_bits_[0] &= ~0x02000000u;
}
inline void E_PetDisplay::clear_m_staritem() {
  m_staritem_ = GOOGLE_LONGLONG(0);
  clear_has_m_staritem();
}
inline ::google::protobuf::int64 E_PetDisplay::m_staritem() const {
  return m_staritem_;
}
inline void E_PetDisplay::set_m_staritem(::google::protobuf::int64 value) {
  set_has_m_staritem();
  m_staritem_ = value;
}

// optional string m_starnum = 27;
inline bool E_PetDisplay::has_m_starnum() const {
  return (_has_bits_[0] & 0x04000000u) != 0;
}
inline void E_PetDisplay::set_has_m_starnum() {
  _has_bits_[0] |= 0x04000000u;
}
inline void E_PetDisplay::clear_has_m_starnum() {
  _has_bits_[0] &= ~0x04000000u;
}
inline void E_PetDisplay::clear_m_starnum() {
  if (m_starnum_ != &::google::protobuf::internal::kEmptyString) {
    m_starnum_->clear();
  }
  clear_has_m_starnum();
}
inline const ::std::string& E_PetDisplay::m_starnum() const {
  return *m_starnum_;
}
inline void E_PetDisplay::set_m_starnum(const ::std::string& value) {
  set_has_m_starnum();
  if (m_starnum_ == &::google::protobuf::internal::kEmptyString) {
    m_starnum_ = new ::std::string;
  }
  m_starnum_->assign(value);
}
inline void E_PetDisplay::set_m_starnum(const char* value) {
  set_has_m_starnum();
  if (m_starnum_ == &::google::protobuf::internal::kEmptyString) {
    m_starnum_ = new ::std::string;
  }
  m_starnum_->assign(value);
}
inline void E_PetDisplay::set_m_starnum(const char* value, size_t size) {
  set_has_m_starnum();
  if (m_starnum_ == &::google::protobuf::internal::kEmptyString) {
    m_starnum_ = new ::std::string;
  }
  m_starnum_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* E_PetDisplay::mutable_m_starnum() {
  set_has_m_starnum();
  if (m_starnum_ == &::google::protobuf::internal::kEmptyString) {
    m_starnum_ = new ::std::string;
  }
  return m_starnum_;
}
inline ::std::string* E_PetDisplay::release_m_starnum() {
  clear_has_m_starnum();
  if (m_starnum_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = m_starnum_;
    m_starnum_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void E_PetDisplay::set_allocated_m_starnum(::std::string* m_starnum) {
  if (m_starnum_ != &::google::protobuf::internal::kEmptyString) {
    delete m_starnum_;
  }
  if (m_starnum) {
    set_has_m_starnum();
    m_starnum_ = m_starnum;
  } else {
    clear_has_m_starnum();
    m_starnum_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int64 m_starpetid = 28;
inline bool E_PetDisplay::has_m_starpetid() const {
  return (_has_bits_[0] & 0x08000000u) != 0;
}
inline void E_PetDisplay::set_has_m_starpetid() {
  _has_bits_[0] |= 0x08000000u;
}
inline void E_PetDisplay::clear_has_m_starpetid() {
  _has_bits_[0] &= ~0x08000000u;
}
inline void E_PetDisplay::clear_m_starpetid() {
  m_starpetid_ = GOOGLE_LONGLONG(0);
  clear_has_m_starpetid();
}
inline ::google::protobuf::int64 E_PetDisplay::m_starpetid() const {
  return m_starpetid_;
}
inline void E_PetDisplay::set_m_starpetid(::google::protobuf::int64 value) {
  set_has_m_starpetid();
  m_starpetid_ = value;
}

// optional string m_starpetnum = 29;
inline bool E_PetDisplay::has_m_starpetnum() const {
  return (_has_bits_[0] & 0x10000000u) != 0;
}
inline void E_PetDisplay::set_has_m_starpetnum() {
  _has_bits_[0] |= 0x10000000u;
}
inline void E_PetDisplay::clear_has_m_starpetnum() {
  _has_bits_[0] &= ~0x10000000u;
}
inline void E_PetDisplay::clear_m_starpetnum() {
  if (m_starpetnum_ != &::google::protobuf::internal::kEmptyString) {
    m_starpetnum_->clear();
  }
  clear_has_m_starpetnum();
}
inline const ::std::string& E_PetDisplay::m_starpetnum() const {
  return *m_starpetnum_;
}
inline void E_PetDisplay::set_m_starpetnum(const ::std::string& value) {
  set_has_m_starpetnum();
  if (m_starpetnum_ == &::google::protobuf::internal::kEmptyString) {
    m_starpetnum_ = new ::std::string;
  }
  m_starpetnum_->assign(value);
}
inline void E_PetDisplay::set_m_starpetnum(const char* value) {
  set_has_m_starpetnum();
  if (m_starpetnum_ == &::google::protobuf::internal::kEmptyString) {
    m_starpetnum_ = new ::std::string;
  }
  m_starpetnum_->assign(value);
}
inline void E_PetDisplay::set_m_starpetnum(const char* value, size_t size) {
  set_has_m_starpetnum();
  if (m_starpetnum_ == &::google::protobuf::internal::kEmptyString) {
    m_starpetnum_ = new ::std::string;
  }
  m_starpetnum_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* E_PetDisplay::mutable_m_starpetnum() {
  set_has_m_starpetnum();
  if (m_starpetnum_ == &::google::protobuf::internal::kEmptyString) {
    m_starpetnum_ = new ::std::string;
  }
  return m_starpetnum_;
}
inline ::std::string* E_PetDisplay::release_m_starpetnum() {
  clear_has_m_starpetnum();
  if (m_starpetnum_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = m_starpetnum_;
    m_starpetnum_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void E_PetDisplay::set_allocated_m_starpetnum(::std::string* m_starpetnum) {
  if (m_starpetnum_ != &::google::protobuf::internal::kEmptyString) {
    delete m_starpetnum_;
  }
  if (m_starpetnum) {
    set_has_m_starpetnum();
    m_starpetnum_ = m_starpetnum;
  } else {
    clear_has_m_starpetnum();
    m_starpetnum_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 m_weapon = 30;
inline bool E_PetDisplay::has_m_weapon() const {
  return (_has_bits_[0] & 0x20000000u) != 0;
}
inline void E_PetDisplay::set_has_m_weapon() {
  _has_bits_[0] |= 0x20000000u;
}
inline void E_PetDisplay::clear_has_m_weapon() {
  _has_bits_[0] &= ~0x20000000u;
}
inline void E_PetDisplay::clear_m_weapon() {
  m_weapon_ = 0;
  clear_has_m_weapon();
}
inline ::google::protobuf::int32 E_PetDisplay::m_weapon() const {
  return m_weapon_;
}
inline void E_PetDisplay::set_m_weapon(::google::protobuf::int32 value) {
  set_has_m_weapon();
  m_weapon_ = value;
}

// optional int64 m_upattributeid = 31;
inline bool E_PetDisplay::has_m_upattributeid() const {
  return (_has_bits_[0] & 0x40000000u) != 0;
}
inline void E_PetDisplay::set_has_m_upattributeid() {
  _has_bits_[0] |= 0x40000000u;
}
inline void E_PetDisplay::clear_has_m_upattributeid() {
  _has_bits_[0] &= ~0x40000000u;
}
inline void E_PetDisplay::clear_m_upattributeid() {
  m_upattributeid_ = GOOGLE_LONGLONG(0);
  clear_has_m_upattributeid();
}
inline ::google::protobuf::int64 E_PetDisplay::m_upattributeid() const {
  return m_upattributeid_;
}
inline void E_PetDisplay::set_m_upattributeid(::google::protobuf::int64 value) {
  set_has_m_upattributeid();
  m_upattributeid_ = value;
}

// repeated .proto_ff.E_PetDisplayMaterialDesc m_material = 32;
inline int E_PetDisplay::m_material_size() const {
  return m_material_.size();
}
inline void E_PetDisplay::clear_m_material() {
  m_material_.Clear();
}
inline const ::proto_ff::E_PetDisplayMaterialDesc& E_PetDisplay::m_material(int index) const {
  return m_material_.Get(index);
}
inline ::proto_ff::E_PetDisplayMaterialDesc* E_PetDisplay::mutable_m_material(int index) {
  return m_material_.Mutable(index);
}
inline ::proto_ff::E_PetDisplayMaterialDesc* E_PetDisplay::add_m_material() {
  return m_material_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_PetDisplayMaterialDesc >&
E_PetDisplay::m_material() const {
  return m_material_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_PetDisplayMaterialDesc >*
E_PetDisplay::mutable_m_material() {
  return &m_material_;
}

// -------------------------------------------------------------------

// Sheet_PetDisplay

// repeated .proto_ff.E_PetDisplay E_PetDisplay_List = 1;
inline int Sheet_PetDisplay::e_petdisplay_list_size() const {
  return e_petdisplay_list_.size();
}
inline void Sheet_PetDisplay::clear_e_petdisplay_list() {
  e_petdisplay_list_.Clear();
}
inline const ::proto_ff::E_PetDisplay& Sheet_PetDisplay::e_petdisplay_list(int index) const {
  return e_petdisplay_list_.Get(index);
}
inline ::proto_ff::E_PetDisplay* Sheet_PetDisplay::mutable_e_petdisplay_list(int index) {
  return e_petdisplay_list_.Mutable(index);
}
inline ::proto_ff::E_PetDisplay* Sheet_PetDisplay::add_e_petdisplay_list() {
  return e_petdisplay_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_PetDisplay >&
Sheet_PetDisplay::e_petdisplay_list() const {
  return e_petdisplay_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_PetDisplay >*
Sheet_PetDisplay::mutable_e_petdisplay_list() {
  return &e_petdisplay_list_;
}

// -------------------------------------------------------------------

// E_PetAttributetpyeAttributeDesc

// optional int32 m_type = 1;
inline bool E_PetAttributetpyeAttributeDesc::has_m_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_PetAttributetpyeAttributeDesc::set_has_m_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_PetAttributetpyeAttributeDesc::clear_has_m_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_PetAttributetpyeAttributeDesc::clear_m_type() {
  m_type_ = 0;
  clear_has_m_type();
}
inline ::google::protobuf::int32 E_PetAttributetpyeAttributeDesc::m_type() const {
  return m_type_;
}
inline void E_PetAttributetpyeAttributeDesc::set_m_type(::google::protobuf::int32 value) {
  set_has_m_type();
  m_type_ = value;
}

// optional int32 m_value = 2;
inline bool E_PetAttributetpyeAttributeDesc::has_m_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_PetAttributetpyeAttributeDesc::set_has_m_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_PetAttributetpyeAttributeDesc::clear_has_m_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_PetAttributetpyeAttributeDesc::clear_m_value() {
  m_value_ = 0;
  clear_has_m_value();
}
inline ::google::protobuf::int32 E_PetAttributetpyeAttributeDesc::m_value() const {
  return m_value_;
}
inline void E_PetAttributetpyeAttributeDesc::set_m_value(::google::protobuf::int32 value) {
  set_has_m_value();
  m_value_ = value;
}

// -------------------------------------------------------------------

// E_PetAttributetpye

// optional int64 m_id = 1;
inline bool E_PetAttributetpye::has_m_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_PetAttributetpye::set_has_m_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_PetAttributetpye::clear_has_m_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_PetAttributetpye::clear_m_id() {
  m_id_ = GOOGLE_LONGLONG(0);
  clear_has_m_id();
}
inline ::google::protobuf::int64 E_PetAttributetpye::m_id() const {
  return m_id_;
}
inline void E_PetAttributetpye::set_m_id(::google::protobuf::int64 value) {
  set_has_m_id();
  m_id_ = value;
}

// optional int32 m_tpye = 2;
inline bool E_PetAttributetpye::has_m_tpye() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_PetAttributetpye::set_has_m_tpye() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_PetAttributetpye::clear_has_m_tpye() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_PetAttributetpye::clear_m_tpye() {
  m_tpye_ = 0;
  clear_has_m_tpye();
}
inline ::google::protobuf::int32 E_PetAttributetpye::m_tpye() const {
  return m_tpye_;
}
inline void E_PetAttributetpye::set_m_tpye(::google::protobuf::int32 value) {
  set_has_m_tpye();
  m_tpye_ = value;
}

// repeated .proto_ff.E_PetAttributetpyeAttributeDesc m_attribute = 3;
inline int E_PetAttributetpye::m_attribute_size() const {
  return m_attribute_.size();
}
inline void E_PetAttributetpye::clear_m_attribute() {
  m_attribute_.Clear();
}
inline const ::proto_ff::E_PetAttributetpyeAttributeDesc& E_PetAttributetpye::m_attribute(int index) const {
  return m_attribute_.Get(index);
}
inline ::proto_ff::E_PetAttributetpyeAttributeDesc* E_PetAttributetpye::mutable_m_attribute(int index) {
  return m_attribute_.Mutable(index);
}
inline ::proto_ff::E_PetAttributetpyeAttributeDesc* E_PetAttributetpye::add_m_attribute() {
  return m_attribute_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_PetAttributetpyeAttributeDesc >&
E_PetAttributetpye::m_attribute() const {
  return m_attribute_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_PetAttributetpyeAttributeDesc >*
E_PetAttributetpye::mutable_m_attribute() {
  return &m_attribute_;
}

// -------------------------------------------------------------------

// Sheet_PetAttributetpye

// repeated .proto_ff.E_PetAttributetpye E_PetAttributetpye_List = 1;
inline int Sheet_PetAttributetpye::e_petattributetpye_list_size() const {
  return e_petattributetpye_list_.size();
}
inline void Sheet_PetAttributetpye::clear_e_petattributetpye_list() {
  e_petattributetpye_list_.Clear();
}
inline const ::proto_ff::E_PetAttributetpye& Sheet_PetAttributetpye::e_petattributetpye_list(int index) const {
  return e_petattributetpye_list_.Get(index);
}
inline ::proto_ff::E_PetAttributetpye* Sheet_PetAttributetpye::mutable_e_petattributetpye_list(int index) {
  return e_petattributetpye_list_.Mutable(index);
}
inline ::proto_ff::E_PetAttributetpye* Sheet_PetAttributetpye::add_e_petattributetpye_list() {
  return e_petattributetpye_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_PetAttributetpye >&
Sheet_PetAttributetpye::e_petattributetpye_list() const {
  return e_petattributetpye_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_PetAttributetpye >*
Sheet_PetAttributetpye::mutable_e_petattributetpye_list() {
  return &e_petattributetpye_list_;
}

// -------------------------------------------------------------------

// E_PetLvexp

// optional int32 m_id = 1;
inline bool E_PetLvexp::has_m_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_PetLvexp::set_has_m_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_PetLvexp::clear_has_m_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_PetLvexp::clear_m_id() {
  m_id_ = 0;
  clear_has_m_id();
}
inline ::google::protobuf::int32 E_PetLvexp::m_id() const {
  return m_id_;
}
inline void E_PetLvexp::set_m_id(::google::protobuf::int32 value) {
  set_has_m_id();
  m_id_ = value;
}

// optional int64 m_exp = 2;
inline bool E_PetLvexp::has_m_exp() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_PetLvexp::set_has_m_exp() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_PetLvexp::clear_has_m_exp() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_PetLvexp::clear_m_exp() {
  m_exp_ = GOOGLE_LONGLONG(0);
  clear_has_m_exp();
}
inline ::google::protobuf::int64 E_PetLvexp::m_exp() const {
  return m_exp_;
}
inline void E_PetLvexp::set_m_exp(::google::protobuf::int64 value) {
  set_has_m_exp();
  m_exp_ = value;
}

// -------------------------------------------------------------------

// Sheet_PetLvexp

// repeated .proto_ff.E_PetLvexp E_PetLvexp_List = 1;
inline int Sheet_PetLvexp::e_petlvexp_list_size() const {
  return e_petlvexp_list_.size();
}
inline void Sheet_PetLvexp::clear_e_petlvexp_list() {
  e_petlvexp_list_.Clear();
}
inline const ::proto_ff::E_PetLvexp& Sheet_PetLvexp::e_petlvexp_list(int index) const {
  return e_petlvexp_list_.Get(index);
}
inline ::proto_ff::E_PetLvexp* Sheet_PetLvexp::mutable_e_petlvexp_list(int index) {
  return e_petlvexp_list_.Mutable(index);
}
inline ::proto_ff::E_PetLvexp* Sheet_PetLvexp::add_e_petlvexp_list() {
  return e_petlvexp_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_PetLvexp >&
Sheet_PetLvexp::e_petlvexp_list() const {
  return e_petlvexp_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_PetLvexp >*
Sheet_PetLvexp::mutable_e_petlvexp_list() {
  return &e_petlvexp_list_;
}

// -------------------------------------------------------------------

// E_PetAdvancelvAdvanceDesc

// optional int32 m_type = 1;
inline bool E_PetAdvancelvAdvanceDesc::has_m_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_PetAdvancelvAdvanceDesc::set_has_m_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_PetAdvancelvAdvanceDesc::clear_has_m_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_PetAdvancelvAdvanceDesc::clear_m_type() {
  m_type_ = 0;
  clear_has_m_type();
}
inline ::google::protobuf::int32 E_PetAdvancelvAdvanceDesc::m_type() const {
  return m_type_;
}
inline void E_PetAdvancelvAdvanceDesc::set_m_type(::google::protobuf::int32 value) {
  set_has_m_type();
  m_type_ = value;
}

// optional float m_param = 2;
inline bool E_PetAdvancelvAdvanceDesc::has_m_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_PetAdvancelvAdvanceDesc::set_has_m_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_PetAdvancelvAdvanceDesc::clear_has_m_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_PetAdvancelvAdvanceDesc::clear_m_param() {
  m_param_ = 0;
  clear_has_m_param();
}
inline float E_PetAdvancelvAdvanceDesc::m_param() const {
  return m_param_;
}
inline void E_PetAdvancelvAdvanceDesc::set_m_param(float value) {
  set_has_m_param();
  m_param_ = value;
}

// -------------------------------------------------------------------

// E_PetAdvancelv

// optional int32 m_id = 1;
inline bool E_PetAdvancelv::has_m_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_PetAdvancelv::set_has_m_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_PetAdvancelv::clear_has_m_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_PetAdvancelv::clear_m_id() {
  m_id_ = 0;
  clear_has_m_id();
}
inline ::google::protobuf::int32 E_PetAdvancelv::m_id() const {
  return m_id_;
}
inline void E_PetAdvancelv::set_m_id(::google::protobuf::int32 value) {
  set_has_m_id();
  m_id_ = value;
}

// optional int32 m_advanceitem = 2;
inline bool E_PetAdvancelv::has_m_advanceitem() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_PetAdvancelv::set_has_m_advanceitem() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_PetAdvancelv::clear_has_m_advanceitem() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_PetAdvancelv::clear_m_advanceitem() {
  m_advanceitem_ = 0;
  clear_has_m_advanceitem();
}
inline ::google::protobuf::int32 E_PetAdvancelv::m_advanceitem() const {
  return m_advanceitem_;
}
inline void E_PetAdvancelv::set_m_advanceitem(::google::protobuf::int32 value) {
  set_has_m_advanceitem();
  m_advanceitem_ = value;
}

// optional int32 m_advancenum = 3;
inline bool E_PetAdvancelv::has_m_advancenum() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void E_PetAdvancelv::set_has_m_advancenum() {
  _has_bits_[0] |= 0x00000004u;
}
inline void E_PetAdvancelv::clear_has_m_advancenum() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void E_PetAdvancelv::clear_m_advancenum() {
  m_advancenum_ = 0;
  clear_has_m_advancenum();
}
inline ::google::protobuf::int32 E_PetAdvancelv::m_advancenum() const {
  return m_advancenum_;
}
inline void E_PetAdvancelv::set_m_advancenum(::google::protobuf::int32 value) {
  set_has_m_advancenum();
  m_advancenum_ = value;
}

// repeated .proto_ff.E_PetAdvancelvAdvanceDesc m_advance = 4;
inline int E_PetAdvancelv::m_advance_size() const {
  return m_advance_.size();
}
inline void E_PetAdvancelv::clear_m_advance() {
  m_advance_.Clear();
}
inline const ::proto_ff::E_PetAdvancelvAdvanceDesc& E_PetAdvancelv::m_advance(int index) const {
  return m_advance_.Get(index);
}
inline ::proto_ff::E_PetAdvancelvAdvanceDesc* E_PetAdvancelv::mutable_m_advance(int index) {
  return m_advance_.Mutable(index);
}
inline ::proto_ff::E_PetAdvancelvAdvanceDesc* E_PetAdvancelv::add_m_advance() {
  return m_advance_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_PetAdvancelvAdvanceDesc >&
E_PetAdvancelv::m_advance() const {
  return m_advance_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_PetAdvancelvAdvanceDesc >*
E_PetAdvancelv::mutable_m_advance() {
  return &m_advance_;
}

// -------------------------------------------------------------------

// Sheet_PetAdvancelv

// repeated .proto_ff.E_PetAdvancelv E_PetAdvancelv_List = 1;
inline int Sheet_PetAdvancelv::e_petadvancelv_list_size() const {
  return e_petadvancelv_list_.size();
}
inline void Sheet_PetAdvancelv::clear_e_petadvancelv_list() {
  e_petadvancelv_list_.Clear();
}
inline const ::proto_ff::E_PetAdvancelv& Sheet_PetAdvancelv::e_petadvancelv_list(int index) const {
  return e_petadvancelv_list_.Get(index);
}
inline ::proto_ff::E_PetAdvancelv* Sheet_PetAdvancelv::mutable_e_petadvancelv_list(int index) {
  return e_petadvancelv_list_.Mutable(index);
}
inline ::proto_ff::E_PetAdvancelv* Sheet_PetAdvancelv::add_e_petadvancelv_list() {
  return e_petadvancelv_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_PetAdvancelv >&
Sheet_PetAdvancelv::e_petadvancelv_list() const {
  return e_petadvancelv_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_PetAdvancelv >*
Sheet_PetAdvancelv::mutable_e_petadvancelv_list() {
  return &e_petadvancelv_list_;
}

// -------------------------------------------------------------------

// E_PetStarupUpattributeDesc

// optional int32 m_type = 1;
inline bool E_PetStarupUpattributeDesc::has_m_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_PetStarupUpattributeDesc::set_has_m_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_PetStarupUpattributeDesc::clear_has_m_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_PetStarupUpattributeDesc::clear_m_type() {
  m_type_ = 0;
  clear_has_m_type();
}
inline ::google::protobuf::int32 E_PetStarupUpattributeDesc::m_type() const {
  return m_type_;
}
inline void E_PetStarupUpattributeDesc::set_m_type(::google::protobuf::int32 value) {
  set_has_m_type();
  m_type_ = value;
}

// optional int32 m_value = 2;
inline bool E_PetStarupUpattributeDesc::has_m_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_PetStarupUpattributeDesc::set_has_m_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_PetStarupUpattributeDesc::clear_has_m_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_PetStarupUpattributeDesc::clear_m_value() {
  m_value_ = 0;
  clear_has_m_value();
}
inline ::google::protobuf::int32 E_PetStarupUpattributeDesc::m_value() const {
  return m_value_;
}
inline void E_PetStarupUpattributeDesc::set_m_value(::google::protobuf::int32 value) {
  set_has_m_value();
  m_value_ = value;
}

// -------------------------------------------------------------------

// E_PetStarup

// optional int32 m_id = 1;
inline bool E_PetStarup::has_m_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_PetStarup::set_has_m_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_PetStarup::clear_has_m_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_PetStarup::clear_m_id() {
  m_id_ = 0;
  clear_has_m_id();
}
inline ::google::protobuf::int32 E_PetStarup::m_id() const {
  return m_id_;
}
inline void E_PetStarup::set_m_id(::google::protobuf::int32 value) {
  set_has_m_id();
  m_id_ = value;
}

// optional int64 m_upattributeid = 2;
inline bool E_PetStarup::has_m_upattributeid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_PetStarup::set_has_m_upattributeid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_PetStarup::clear_has_m_upattributeid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_PetStarup::clear_m_upattributeid() {
  m_upattributeid_ = GOOGLE_LONGLONG(0);
  clear_has_m_upattributeid();
}
inline ::google::protobuf::int64 E_PetStarup::m_upattributeid() const {
  return m_upattributeid_;
}
inline void E_PetStarup::set_m_upattributeid(::google::protobuf::int64 value) {
  set_has_m_upattributeid();
  m_upattributeid_ = value;
}

// optional int32 m_starid = 3;
inline bool E_PetStarup::has_m_starid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void E_PetStarup::set_has_m_starid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void E_PetStarup::clear_has_m_starid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void E_PetStarup::clear_m_starid() {
  m_starid_ = 0;
  clear_has_m_starid();
}
inline ::google::protobuf::int32 E_PetStarup::m_starid() const {
  return m_starid_;
}
inline void E_PetStarup::set_m_starid(::google::protobuf::int32 value) {
  set_has_m_starid();
  m_starid_ = value;
}

// optional int32 m_skillid = 4;
inline bool E_PetStarup::has_m_skillid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void E_PetStarup::set_has_m_skillid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void E_PetStarup::clear_has_m_skillid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void E_PetStarup::clear_m_skillid() {
  m_skillid_ = 0;
  clear_has_m_skillid();
}
inline ::google::protobuf::int32 E_PetStarup::m_skillid() const {
  return m_skillid_;
}
inline void E_PetStarup::set_m_skillid(::google::protobuf::int32 value) {
  set_has_m_skillid();
  m_skillid_ = value;
}

// optional int32 m_activeskillidlv = 5;
inline bool E_PetStarup::has_m_activeskillidlv() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void E_PetStarup::set_has_m_activeskillidlv() {
  _has_bits_[0] |= 0x00000010u;
}
inline void E_PetStarup::clear_has_m_activeskillidlv() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void E_PetStarup::clear_m_activeskillidlv() {
  m_activeskillidlv_ = 0;
  clear_has_m_activeskillidlv();
}
inline ::google::protobuf::int32 E_PetStarup::m_activeskillidlv() const {
  return m_activeskillidlv_;
}
inline void E_PetStarup::set_m_activeskillidlv(::google::protobuf::int32 value) {
  set_has_m_activeskillidlv();
  m_activeskillidlv_ = value;
}

// repeated .proto_ff.E_PetStarupUpattributeDesc m_upattribute = 6;
inline int E_PetStarup::m_upattribute_size() const {
  return m_upattribute_.size();
}
inline void E_PetStarup::clear_m_upattribute() {
  m_upattribute_.Clear();
}
inline const ::proto_ff::E_PetStarupUpattributeDesc& E_PetStarup::m_upattribute(int index) const {
  return m_upattribute_.Get(index);
}
inline ::proto_ff::E_PetStarupUpattributeDesc* E_PetStarup::mutable_m_upattribute(int index) {
  return m_upattribute_.Mutable(index);
}
inline ::proto_ff::E_PetStarupUpattributeDesc* E_PetStarup::add_m_upattribute() {
  return m_upattribute_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_PetStarupUpattributeDesc >&
E_PetStarup::m_upattribute() const {
  return m_upattribute_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_PetStarupUpattributeDesc >*
E_PetStarup::mutable_m_upattribute() {
  return &m_upattribute_;
}

// -------------------------------------------------------------------

// Sheet_PetStarup

// repeated .proto_ff.E_PetStarup E_PetStarup_List = 1;
inline int Sheet_PetStarup::e_petstarup_list_size() const {
  return e_petstarup_list_.size();
}
inline void Sheet_PetStarup::clear_e_petstarup_list() {
  e_petstarup_list_.Clear();
}
inline const ::proto_ff::E_PetStarup& Sheet_PetStarup::e_petstarup_list(int index) const {
  return e_petstarup_list_.Get(index);
}
inline ::proto_ff::E_PetStarup* Sheet_PetStarup::mutable_e_petstarup_list(int index) {
  return e_petstarup_list_.Mutable(index);
}
inline ::proto_ff::E_PetStarup* Sheet_PetStarup::add_e_petstarup_list() {
  return e_petstarup_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_PetStarup >&
Sheet_PetStarup::e_petstarup_list() const {
  return e_petstarup_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_PetStarup >*
Sheet_PetStarup::mutable_e_petstarup_list() {
  return &e_petstarup_list_;
}

// -------------------------------------------------------------------

// E_PetEggPetDesc

// optional int32 m_rand = 1;
inline bool E_PetEggPetDesc::has_m_rand() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_PetEggPetDesc::set_has_m_rand() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_PetEggPetDesc::clear_has_m_rand() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_PetEggPetDesc::clear_m_rand() {
  m_rand_ = 0;
  clear_has_m_rand();
}
inline ::google::protobuf::int32 E_PetEggPetDesc::m_rand() const {
  return m_rand_;
}
inline void E_PetEggPetDesc::set_m_rand(::google::protobuf::int32 value) {
  set_has_m_rand();
  m_rand_ = value;
}

// optional int32 m_id = 2;
inline bool E_PetEggPetDesc::has_m_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_PetEggPetDesc::set_has_m_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_PetEggPetDesc::clear_has_m_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_PetEggPetDesc::clear_m_id() {
  m_id_ = 0;
  clear_has_m_id();
}
inline ::google::protobuf::int32 E_PetEggPetDesc::m_id() const {
  return m_id_;
}
inline void E_PetEggPetDesc::set_m_id(::google::protobuf::int32 value) {
  set_has_m_id();
  m_id_ = value;
}

// -------------------------------------------------------------------

// E_PetEgg

// optional int32 m_id = 1;
inline bool E_PetEgg::has_m_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_PetEgg::set_has_m_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_PetEgg::clear_has_m_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_PetEgg::clear_m_id() {
  m_id_ = 0;
  clear_has_m_id();
}
inline ::google::protobuf::int32 E_PetEgg::m_id() const {
  return m_id_;
}
inline void E_PetEgg::set_m_id(::google::protobuf::int32 value) {
  set_has_m_id();
  m_id_ = value;
}

// optional int32 m_time = 2;
inline bool E_PetEgg::has_m_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_PetEgg::set_has_m_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_PetEgg::clear_has_m_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_PetEgg::clear_m_time() {
  m_time_ = 0;
  clear_has_m_time();
}
inline ::google::protobuf::int32 E_PetEgg::m_time() const {
  return m_time_;
}
inline void E_PetEgg::set_m_time(::google::protobuf::int32 value) {
  set_has_m_time();
  m_time_ = value;
}

// repeated .proto_ff.E_PetEggPetDesc m_pet = 3;
inline int E_PetEgg::m_pet_size() const {
  return m_pet_.size();
}
inline void E_PetEgg::clear_m_pet() {
  m_pet_.Clear();
}
inline const ::proto_ff::E_PetEggPetDesc& E_PetEgg::m_pet(int index) const {
  return m_pet_.Get(index);
}
inline ::proto_ff::E_PetEggPetDesc* E_PetEgg::mutable_m_pet(int index) {
  return m_pet_.Mutable(index);
}
inline ::proto_ff::E_PetEggPetDesc* E_PetEgg::add_m_pet() {
  return m_pet_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_PetEggPetDesc >&
E_PetEgg::m_pet() const {
  return m_pet_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_PetEggPetDesc >*
E_PetEgg::mutable_m_pet() {
  return &m_pet_;
}

// -------------------------------------------------------------------

// Sheet_PetEgg

// repeated .proto_ff.E_PetEgg E_PetEgg_List = 1;
inline int Sheet_PetEgg::e_petegg_list_size() const {
  return e_petegg_list_.size();
}
inline void Sheet_PetEgg::clear_e_petegg_list() {
  e_petegg_list_.Clear();
}
inline const ::proto_ff::E_PetEgg& Sheet_PetEgg::e_petegg_list(int index) const {
  return e_petegg_list_.Get(index);
}
inline ::proto_ff::E_PetEgg* Sheet_PetEgg::mutable_e_petegg_list(int index) {
  return e_petegg_list_.Mutable(index);
}
inline ::proto_ff::E_PetEgg* Sheet_PetEgg::add_e_petegg_list() {
  return e_petegg_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_PetEgg >&
Sheet_PetEgg::e_petegg_list() const {
  return e_petegg_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_PetEgg >*
Sheet_PetEgg::mutable_e_petegg_list() {
  return &e_petegg_list_;
}

// -------------------------------------------------------------------

// E_PetDecomposeDecomposeDesc

// optional int32 m_boxid = 1;
inline bool E_PetDecomposeDecomposeDesc::has_m_boxid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_PetDecomposeDecomposeDesc::set_has_m_boxid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_PetDecomposeDecomposeDesc::clear_has_m_boxid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_PetDecomposeDecomposeDesc::clear_m_boxid() {
  m_boxid_ = 0;
  clear_has_m_boxid();
}
inline ::google::protobuf::int32 E_PetDecomposeDecomposeDesc::m_boxid() const {
  return m_boxid_;
}
inline void E_PetDecomposeDecomposeDesc::set_m_boxid(::google::protobuf::int32 value) {
  set_has_m_boxid();
  m_boxid_ = value;
}

// optional int32 m_type = 2;
inline bool E_PetDecomposeDecomposeDesc::has_m_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_PetDecomposeDecomposeDesc::set_has_m_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_PetDecomposeDecomposeDesc::clear_has_m_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_PetDecomposeDecomposeDesc::clear_m_type() {
  m_type_ = 0;
  clear_has_m_type();
}
inline ::google::protobuf::int32 E_PetDecomposeDecomposeDesc::m_type() const {
  return m_type_;
}
inline void E_PetDecomposeDecomposeDesc::set_m_type(::google::protobuf::int32 value) {
  set_has_m_type();
  m_type_ = value;
}

// -------------------------------------------------------------------

// E_PetDecompose

// optional int32 m_id = 1;
inline bool E_PetDecompose::has_m_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_PetDecompose::set_has_m_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_PetDecompose::clear_has_m_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_PetDecompose::clear_m_id() {
  m_id_ = 0;
  clear_has_m_id();
}
inline ::google::protobuf::int32 E_PetDecompose::m_id() const {
  return m_id_;
}
inline void E_PetDecompose::set_m_id(::google::protobuf::int32 value) {
  set_has_m_id();
  m_id_ = value;
}

// optional int32 m_quality = 2;
inline bool E_PetDecompose::has_m_quality() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_PetDecompose::set_has_m_quality() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_PetDecompose::clear_has_m_quality() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_PetDecompose::clear_m_quality() {
  m_quality_ = 0;
  clear_has_m_quality();
}
inline ::google::protobuf::int32 E_PetDecompose::m_quality() const {
  return m_quality_;
}
inline void E_PetDecompose::set_m_quality(::google::protobuf::int32 value) {
  set_has_m_quality();
  m_quality_ = value;
}

// repeated .proto_ff.E_PetDecomposeDecomposeDesc m_decompose = 3;
inline int E_PetDecompose::m_decompose_size() const {
  return m_decompose_.size();
}
inline void E_PetDecompose::clear_m_decompose() {
  m_decompose_.Clear();
}
inline const ::proto_ff::E_PetDecomposeDecomposeDesc& E_PetDecompose::m_decompose(int index) const {
  return m_decompose_.Get(index);
}
inline ::proto_ff::E_PetDecomposeDecomposeDesc* E_PetDecompose::mutable_m_decompose(int index) {
  return m_decompose_.Mutable(index);
}
inline ::proto_ff::E_PetDecomposeDecomposeDesc* E_PetDecompose::add_m_decompose() {
  return m_decompose_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_PetDecomposeDecomposeDesc >&
E_PetDecompose::m_decompose() const {
  return m_decompose_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_PetDecomposeDecomposeDesc >*
E_PetDecompose::mutable_m_decompose() {
  return &m_decompose_;
}

// -------------------------------------------------------------------

// Sheet_PetDecompose

// repeated .proto_ff.E_PetDecompose E_PetDecompose_List = 1;
inline int Sheet_PetDecompose::e_petdecompose_list_size() const {
  return e_petdecompose_list_.size();
}
inline void Sheet_PetDecompose::clear_e_petdecompose_list() {
  e_petdecompose_list_.Clear();
}
inline const ::proto_ff::E_PetDecompose& Sheet_PetDecompose::e_petdecompose_list(int index) const {
  return e_petdecompose_list_.Get(index);
}
inline ::proto_ff::E_PetDecompose* Sheet_PetDecompose::mutable_e_petdecompose_list(int index) {
  return e_petdecompose_list_.Mutable(index);
}
inline ::proto_ff::E_PetDecompose* Sheet_PetDecompose::add_e_petdecompose_list() {
  return e_petdecompose_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_PetDecompose >&
Sheet_PetDecompose::e_petdecompose_list() const {
  return e_petdecompose_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_PetDecompose >*
Sheet_PetDecompose::mutable_e_petdecompose_list() {
  return &e_petdecompose_list_;
}

// -------------------------------------------------------------------

// E_PetFettersAttributeDesc

// optional int32 m_type = 1;
inline bool E_PetFettersAttributeDesc::has_m_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_PetFettersAttributeDesc::set_has_m_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_PetFettersAttributeDesc::clear_has_m_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_PetFettersAttributeDesc::clear_m_type() {
  m_type_ = 0;
  clear_has_m_type();
}
inline ::google::protobuf::int32 E_PetFettersAttributeDesc::m_type() const {
  return m_type_;
}
inline void E_PetFettersAttributeDesc::set_m_type(::google::protobuf::int32 value) {
  set_has_m_type();
  m_type_ = value;
}

// optional int32 m_value = 2;
inline bool E_PetFettersAttributeDesc::has_m_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_PetFettersAttributeDesc::set_has_m_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_PetFettersAttributeDesc::clear_has_m_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_PetFettersAttributeDesc::clear_m_value() {
  m_value_ = 0;
  clear_has_m_value();
}
inline ::google::protobuf::int32 E_PetFettersAttributeDesc::m_value() const {
  return m_value_;
}
inline void E_PetFettersAttributeDesc::set_m_value(::google::protobuf::int32 value) {
  set_has_m_value();
  m_value_ = value;
}

// -------------------------------------------------------------------

// E_PetFetters

// optional int32 m_id = 1;
inline bool E_PetFetters::has_m_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_PetFetters::set_has_m_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_PetFetters::clear_has_m_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_PetFetters::clear_m_id() {
  m_id_ = 0;
  clear_has_m_id();
}
inline ::google::protobuf::int32 E_PetFetters::m_id() const {
  return m_id_;
}
inline void E_PetFetters::set_m_id(::google::protobuf::int32 value) {
  set_has_m_id();
  m_id_ = value;
}

// optional int32 m_quality = 2;
inline bool E_PetFetters::has_m_quality() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_PetFetters::set_has_m_quality() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_PetFetters::clear_has_m_quality() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_PetFetters::clear_m_quality() {
  m_quality_ = 0;
  clear_has_m_quality();
}
inline ::google::protobuf::int32 E_PetFetters::m_quality() const {
  return m_quality_;
}
inline void E_PetFetters::set_m_quality(::google::protobuf::int32 value) {
  set_has_m_quality();
  m_quality_ = value;
}

// repeated int32 m_petid = 3;
inline int E_PetFetters::m_petid_size() const {
  return m_petid_.size();
}
inline void E_PetFetters::clear_m_petid() {
  m_petid_.Clear();
}
inline ::google::protobuf::int32 E_PetFetters::m_petid(int index) const {
  return m_petid_.Get(index);
}
inline void E_PetFetters::set_m_petid(int index, ::google::protobuf::int32 value) {
  m_petid_.Set(index, value);
}
inline void E_PetFetters::add_m_petid(::google::protobuf::int32 value) {
  m_petid_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
E_PetFetters::m_petid() const {
  return m_petid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
E_PetFetters::mutable_m_petid() {
  return &m_petid_;
}

// repeated int32 m_atctive_skillid = 4;
inline int E_PetFetters::m_atctive_skillid_size() const {
  return m_atctive_skillid_.size();
}
inline void E_PetFetters::clear_m_atctive_skillid() {
  m_atctive_skillid_.Clear();
}
inline ::google::protobuf::int32 E_PetFetters::m_atctive_skillid(int index) const {
  return m_atctive_skillid_.Get(index);
}
inline void E_PetFetters::set_m_atctive_skillid(int index, ::google::protobuf::int32 value) {
  m_atctive_skillid_.Set(index, value);
}
inline void E_PetFetters::add_m_atctive_skillid(::google::protobuf::int32 value) {
  m_atctive_skillid_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
E_PetFetters::m_atctive_skillid() const {
  return m_atctive_skillid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
E_PetFetters::mutable_m_atctive_skillid() {
  return &m_atctive_skillid_;
}

// repeated .proto_ff.E_PetFettersAttributeDesc m_attribute = 5;
inline int E_PetFetters::m_attribute_size() const {
  return m_attribute_.size();
}
inline void E_PetFetters::clear_m_attribute() {
  m_attribute_.Clear();
}
inline const ::proto_ff::E_PetFettersAttributeDesc& E_PetFetters::m_attribute(int index) const {
  return m_attribute_.Get(index);
}
inline ::proto_ff::E_PetFettersAttributeDesc* E_PetFetters::mutable_m_attribute(int index) {
  return m_attribute_.Mutable(index);
}
inline ::proto_ff::E_PetFettersAttributeDesc* E_PetFetters::add_m_attribute() {
  return m_attribute_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_PetFettersAttributeDesc >&
E_PetFetters::m_attribute() const {
  return m_attribute_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_PetFettersAttributeDesc >*
E_PetFetters::mutable_m_attribute() {
  return &m_attribute_;
}

// -------------------------------------------------------------------

// Sheet_PetFetters

// repeated .proto_ff.E_PetFetters E_PetFetters_List = 1;
inline int Sheet_PetFetters::e_petfetters_list_size() const {
  return e_petfetters_list_.size();
}
inline void Sheet_PetFetters::clear_e_petfetters_list() {
  e_petfetters_list_.Clear();
}
inline const ::proto_ff::E_PetFetters& Sheet_PetFetters::e_petfetters_list(int index) const {
  return e_petfetters_list_.Get(index);
}
inline ::proto_ff::E_PetFetters* Sheet_PetFetters::mutable_e_petfetters_list(int index) {
  return e_petfetters_list_.Mutable(index);
}
inline ::proto_ff::E_PetFetters* Sheet_PetFetters::add_e_petfetters_list() {
  return e_petfetters_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_PetFetters >&
Sheet_PetFetters::e_petfetters_list() const {
  return e_petfetters_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_PetFetters >*
Sheet_PetFetters::mutable_e_petfetters_list() {
  return &e_petfetters_list_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto_ff

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_pet_2eproto__INCLUDED
