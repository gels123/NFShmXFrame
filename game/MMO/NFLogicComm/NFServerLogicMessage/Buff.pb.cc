// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Buff.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "Buff.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace proto_ff {

namespace {

const ::google::protobuf::Descriptor* BuffListReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BuffListReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* BuffListRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BuffListRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* BuffUpdateRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BuffUpdateRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* BuffDelRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BuffDelRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* BuffEffectRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BuffEffectRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* BuffEffectRsp_Target_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BuffEffectRsp_Target_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_Buff_2eproto() {
  protobuf_AddDesc_Buff_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "Buff.proto");
  GOOGLE_CHECK(file != NULL);
  BuffListReq_descriptor_ = file->message_type(0);
  static const int BuffListReq_offsets_[1] = {
  };
  BuffListReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      BuffListReq_descriptor_,
      BuffListReq::default_instance_,
      BuffListReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffListReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffListReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(BuffListReq));
  BuffListRsp_descriptor_ = file->message_type(1);
  static const int BuffListRsp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffListRsp, lst_),
  };
  BuffListRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      BuffListRsp_descriptor_,
      BuffListRsp::default_instance_,
      BuffListRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffListRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffListRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(BuffListRsp));
  BuffUpdateRsp_descriptor_ = file->message_type(2);
  static const int BuffUpdateRsp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffUpdateRsp, lst_),
  };
  BuffUpdateRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      BuffUpdateRsp_descriptor_,
      BuffUpdateRsp::default_instance_,
      BuffUpdateRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffUpdateRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffUpdateRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(BuffUpdateRsp));
  BuffDelRsp_descriptor_ = file->message_type(3);
  static const int BuffDelRsp_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffDelRsp, cid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffDelRsp, index_lst_),
  };
  BuffDelRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      BuffDelRsp_descriptor_,
      BuffDelRsp::default_instance_,
      BuffDelRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffDelRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffDelRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(BuffDelRsp));
  BuffEffectRsp_descriptor_ = file->message_type(4);
  static const int BuffEffectRsp_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffEffectRsp, skill_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffEffectRsp, target_lst_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffEffectRsp, buff_id_),
  };
  BuffEffectRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      BuffEffectRsp_descriptor_,
      BuffEffectRsp::default_instance_,
      BuffEffectRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffEffectRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffEffectRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(BuffEffectRsp));
  BuffEffectRsp_Target_descriptor_ = BuffEffectRsp_descriptor_->nested_type(0);
  static const int BuffEffectRsp_Target_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffEffectRsp_Target, cid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffEffectRsp_Target, attr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffEffectRsp_Target, digital_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffEffectRsp_Target, bedead_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffEffectRsp_Target, type_),
  };
  BuffEffectRsp_Target_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      BuffEffectRsp_Target_descriptor_,
      BuffEffectRsp_Target::default_instance_,
      BuffEffectRsp_Target_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffEffectRsp_Target, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffEffectRsp_Target, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(BuffEffectRsp_Target));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_Buff_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    BuffListReq_descriptor_, &BuffListReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    BuffListRsp_descriptor_, &BuffListRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    BuffUpdateRsp_descriptor_, &BuffUpdateRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    BuffDelRsp_descriptor_, &BuffDelRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    BuffEffectRsp_descriptor_, &BuffEffectRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    BuffEffectRsp_Target_descriptor_, &BuffEffectRsp_Target::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_Buff_2eproto() {
  delete BuffListReq::default_instance_;
  delete BuffListReq_reflection_;
  delete BuffListRsp::default_instance_;
  delete BuffListRsp_reflection_;
  delete BuffUpdateRsp::default_instance_;
  delete BuffUpdateRsp_reflection_;
  delete BuffDelRsp::default_instance_;
  delete BuffDelRsp_reflection_;
  delete BuffEffectRsp::default_instance_;
  delete BuffEffectRsp_reflection_;
  delete BuffEffectRsp_Target::default_instance_;
  delete BuffEffectRsp_Target_reflection_;
}

void protobuf_AddDesc_Buff_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::proto_ff::protobuf_AddDesc_Com_2eproto();
  ::proto_ff::protobuf_AddDesc_ComDefine_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\nBuff.proto\022\010proto_ff\032\tCom.proto\032\017ComDe"
    "fine.proto\"\r\n\013BuffListReq\"3\n\013BuffListRsp"
    "\022$\n\003lst\030\001 \001(\0132\027.proto_ff.BuffListProto\"5"
    "\n\rBuffUpdateRsp\022$\n\003lst\030\001 \001(\0132\027.proto_ff."
    "BuffListProto\",\n\nBuffDelRsp\022\013\n\003cid\030\001 \001(\004"
    "\022\021\n\tindex_lst\030\002 \003(\004\"\341\001\n\rBuffEffectRsp\022\020\n"
    "\010skill_id\030\001 \002(\004\0222\n\ntarget_lst\030\002 \003(\0132\036.pr"
    "oto_ff.BuffEffectRsp.Target\022\017\n\007buff_id\030\003"
    " \002(\004\032y\n\006Target\022\013\n\003cid\030\001 \002(\004\022\036\n\004attr\030\002 \003("
    "\0132\020.proto_ff.Attr64\022$\n\007digital\030\003 \003(\0132\023.p"
    "roto_ff.DigPerfor\022\016\n\006beDead\030\004 \001(\010\022\014\n\004typ"
    "e\030\005 \001(\005", 447);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "Buff.proto", &protobuf_RegisterTypes);
  BuffListReq::default_instance_ = new BuffListReq();
  BuffListRsp::default_instance_ = new BuffListRsp();
  BuffUpdateRsp::default_instance_ = new BuffUpdateRsp();
  BuffDelRsp::default_instance_ = new BuffDelRsp();
  BuffEffectRsp::default_instance_ = new BuffEffectRsp();
  BuffEffectRsp_Target::default_instance_ = new BuffEffectRsp_Target();
  BuffListReq::default_instance_->InitAsDefaultInstance();
  BuffListRsp::default_instance_->InitAsDefaultInstance();
  BuffUpdateRsp::default_instance_->InitAsDefaultInstance();
  BuffDelRsp::default_instance_->InitAsDefaultInstance();
  BuffEffectRsp::default_instance_->InitAsDefaultInstance();
  BuffEffectRsp_Target::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_Buff_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_Buff_2eproto {
  StaticDescriptorInitializer_Buff_2eproto() {
    protobuf_AddDesc_Buff_2eproto();
  }
} static_descriptor_initializer_Buff_2eproto_;

// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

BuffListReq::BuffListReq()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void BuffListReq::InitAsDefaultInstance() {
}

BuffListReq::BuffListReq(const BuffListReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void BuffListReq::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BuffListReq::~BuffListReq() {
  SharedDtor();
}

void BuffListReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void BuffListReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BuffListReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BuffListReq_descriptor_;
}

const BuffListReq& BuffListReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Buff_2eproto();
  return *default_instance_;
}

BuffListReq* BuffListReq::default_instance_ = NULL;

BuffListReq* BuffListReq::New() const {
  return new BuffListReq;
}

void BuffListReq::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool BuffListReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void BuffListReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* BuffListReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int BuffListReq::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BuffListReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const BuffListReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const BuffListReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void BuffListReq::MergeFrom(const BuffListReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void BuffListReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BuffListReq::CopyFrom(const BuffListReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BuffListReq::IsInitialized() const {

  return true;
}

void BuffListReq::Swap(BuffListReq* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata BuffListReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BuffListReq_descriptor_;
  metadata.reflection = BuffListReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int BuffListRsp::kLstFieldNumber;
#endif  // !_MSC_VER

BuffListRsp::BuffListRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void BuffListRsp::InitAsDefaultInstance() {
  lst_ = const_cast< ::proto_ff::BuffListProto*>(&::proto_ff::BuffListProto::default_instance());
}

BuffListRsp::BuffListRsp(const BuffListRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void BuffListRsp::SharedCtor() {
  _cached_size_ = 0;
  lst_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BuffListRsp::~BuffListRsp() {
  SharedDtor();
}

void BuffListRsp::SharedDtor() {
  if (this != default_instance_) {
    delete lst_;
  }
}

void BuffListRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BuffListRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BuffListRsp_descriptor_;
}

const BuffListRsp& BuffListRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Buff_2eproto();
  return *default_instance_;
}

BuffListRsp* BuffListRsp::default_instance_ = NULL;

BuffListRsp* BuffListRsp::New() const {
  return new BuffListRsp;
}

void BuffListRsp::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_lst()) {
      if (lst_ != NULL) lst_->::proto_ff::BuffListProto::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool BuffListRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .proto_ff.BuffListProto lst = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_lst()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void BuffListRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional .proto_ff.BuffListProto lst = 1;
  if (has_lst()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->lst(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* BuffListRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional .proto_ff.BuffListProto lst = 1;
  if (has_lst()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->lst(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int BuffListRsp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .proto_ff.BuffListProto lst = 1;
    if (has_lst()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->lst());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BuffListRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const BuffListRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const BuffListRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void BuffListRsp::MergeFrom(const BuffListRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_lst()) {
      mutable_lst()->::proto_ff::BuffListProto::MergeFrom(from.lst());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void BuffListRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BuffListRsp::CopyFrom(const BuffListRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BuffListRsp::IsInitialized() const {

  if (has_lst()) {
    if (!this->lst().IsInitialized()) return false;
  }
  return true;
}

void BuffListRsp::Swap(BuffListRsp* other) {
  if (other != this) {
    std::swap(lst_, other->lst_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata BuffListRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BuffListRsp_descriptor_;
  metadata.reflection = BuffListRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int BuffUpdateRsp::kLstFieldNumber;
#endif  // !_MSC_VER

BuffUpdateRsp::BuffUpdateRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void BuffUpdateRsp::InitAsDefaultInstance() {
  lst_ = const_cast< ::proto_ff::BuffListProto*>(&::proto_ff::BuffListProto::default_instance());
}

BuffUpdateRsp::BuffUpdateRsp(const BuffUpdateRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void BuffUpdateRsp::SharedCtor() {
  _cached_size_ = 0;
  lst_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BuffUpdateRsp::~BuffUpdateRsp() {
  SharedDtor();
}

void BuffUpdateRsp::SharedDtor() {
  if (this != default_instance_) {
    delete lst_;
  }
}

void BuffUpdateRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BuffUpdateRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BuffUpdateRsp_descriptor_;
}

const BuffUpdateRsp& BuffUpdateRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Buff_2eproto();
  return *default_instance_;
}

BuffUpdateRsp* BuffUpdateRsp::default_instance_ = NULL;

BuffUpdateRsp* BuffUpdateRsp::New() const {
  return new BuffUpdateRsp;
}

void BuffUpdateRsp::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_lst()) {
      if (lst_ != NULL) lst_->::proto_ff::BuffListProto::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool BuffUpdateRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .proto_ff.BuffListProto lst = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_lst()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void BuffUpdateRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional .proto_ff.BuffListProto lst = 1;
  if (has_lst()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->lst(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* BuffUpdateRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional .proto_ff.BuffListProto lst = 1;
  if (has_lst()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->lst(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int BuffUpdateRsp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .proto_ff.BuffListProto lst = 1;
    if (has_lst()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->lst());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BuffUpdateRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const BuffUpdateRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const BuffUpdateRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void BuffUpdateRsp::MergeFrom(const BuffUpdateRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_lst()) {
      mutable_lst()->::proto_ff::BuffListProto::MergeFrom(from.lst());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void BuffUpdateRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BuffUpdateRsp::CopyFrom(const BuffUpdateRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BuffUpdateRsp::IsInitialized() const {

  if (has_lst()) {
    if (!this->lst().IsInitialized()) return false;
  }
  return true;
}

void BuffUpdateRsp::Swap(BuffUpdateRsp* other) {
  if (other != this) {
    std::swap(lst_, other->lst_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata BuffUpdateRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BuffUpdateRsp_descriptor_;
  metadata.reflection = BuffUpdateRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int BuffDelRsp::kCidFieldNumber;
const int BuffDelRsp::kIndexLstFieldNumber;
#endif  // !_MSC_VER

BuffDelRsp::BuffDelRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void BuffDelRsp::InitAsDefaultInstance() {
}

BuffDelRsp::BuffDelRsp(const BuffDelRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void BuffDelRsp::SharedCtor() {
  _cached_size_ = 0;
  cid_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BuffDelRsp::~BuffDelRsp() {
  SharedDtor();
}

void BuffDelRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void BuffDelRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BuffDelRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BuffDelRsp_descriptor_;
}

const BuffDelRsp& BuffDelRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Buff_2eproto();
  return *default_instance_;
}

BuffDelRsp* BuffDelRsp::default_instance_ = NULL;

BuffDelRsp* BuffDelRsp::New() const {
  return new BuffDelRsp;
}

void BuffDelRsp::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    cid_ = GOOGLE_ULONGLONG(0);
  }
  index_lst_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool BuffDelRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 cid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &cid_)));
          set_has_cid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_index_lst;
        break;
      }

      // repeated uint64 index_lst = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_index_lst:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 16, input, this->mutable_index_lst())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_index_lst())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_index_lst;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void BuffDelRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional uint64 cid = 1;
  if (has_cid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->cid(), output);
  }

  // repeated uint64 index_lst = 2;
  for (int i = 0; i < this->index_lst_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(
      2, this->index_lst(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* BuffDelRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional uint64 cid = 1;
  if (has_cid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->cid(), target);
  }

  // repeated uint64 index_lst = 2;
  for (int i = 0; i < this->index_lst_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64ToArray(2, this->index_lst(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int BuffDelRsp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint64 cid = 1;
    if (has_cid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->cid());
    }

  }
  // repeated uint64 index_lst = 2;
  {
    int data_size = 0;
    for (int i = 0; i < this->index_lst_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt64Size(this->index_lst(i));
    }
    total_size += 1 * this->index_lst_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BuffDelRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const BuffDelRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const BuffDelRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void BuffDelRsp::MergeFrom(const BuffDelRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  index_lst_.MergeFrom(from.index_lst_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_cid()) {
      set_cid(from.cid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void BuffDelRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BuffDelRsp::CopyFrom(const BuffDelRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BuffDelRsp::IsInitialized() const {

  return true;
}

void BuffDelRsp::Swap(BuffDelRsp* other) {
  if (other != this) {
    std::swap(cid_, other->cid_);
    index_lst_.Swap(&other->index_lst_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata BuffDelRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BuffDelRsp_descriptor_;
  metadata.reflection = BuffDelRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int BuffEffectRsp_Target::kCidFieldNumber;
const int BuffEffectRsp_Target::kAttrFieldNumber;
const int BuffEffectRsp_Target::kDigitalFieldNumber;
const int BuffEffectRsp_Target::kBeDeadFieldNumber;
const int BuffEffectRsp_Target::kTypeFieldNumber;
#endif  // !_MSC_VER

BuffEffectRsp_Target::BuffEffectRsp_Target()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void BuffEffectRsp_Target::InitAsDefaultInstance() {
}

BuffEffectRsp_Target::BuffEffectRsp_Target(const BuffEffectRsp_Target& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void BuffEffectRsp_Target::SharedCtor() {
  _cached_size_ = 0;
  cid_ = GOOGLE_ULONGLONG(0);
  bedead_ = false;
  type_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BuffEffectRsp_Target::~BuffEffectRsp_Target() {
  SharedDtor();
}

void BuffEffectRsp_Target::SharedDtor() {
  if (this != default_instance_) {
  }
}

void BuffEffectRsp_Target::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BuffEffectRsp_Target::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BuffEffectRsp_Target_descriptor_;
}

const BuffEffectRsp_Target& BuffEffectRsp_Target::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Buff_2eproto();
  return *default_instance_;
}

BuffEffectRsp_Target* BuffEffectRsp_Target::default_instance_ = NULL;

BuffEffectRsp_Target* BuffEffectRsp_Target::New() const {
  return new BuffEffectRsp_Target;
}

void BuffEffectRsp_Target::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    cid_ = GOOGLE_ULONGLONG(0);
    bedead_ = false;
    type_ = 0;
  }
  attr_.Clear();
  digital_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool BuffEffectRsp_Target::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint64 cid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &cid_)));
          set_has_cid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_attr;
        break;
      }

      // repeated .proto_ff.Attr64 attr = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_attr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_attr()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_attr;
        if (input->ExpectTag(26)) goto parse_digital;
        break;
      }

      // repeated .proto_ff.DigPerfor digital = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_digital:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_digital()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_digital;
        if (input->ExpectTag(32)) goto parse_beDead;
        break;
      }

      // optional bool beDead = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_beDead:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &bedead_)));
          set_has_bedead();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_type;
        break;
      }

      // optional int32 type = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void BuffEffectRsp_Target::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint64 cid = 1;
  if (has_cid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->cid(), output);
  }

  // repeated .proto_ff.Attr64 attr = 2;
  for (int i = 0; i < this->attr_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->attr(i), output);
  }

  // repeated .proto_ff.DigPerfor digital = 3;
  for (int i = 0; i < this->digital_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->digital(i), output);
  }

  // optional bool beDead = 4;
  if (has_bedead()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->bedead(), output);
  }

  // optional int32 type = 5;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->type(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* BuffEffectRsp_Target::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint64 cid = 1;
  if (has_cid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->cid(), target);
  }

  // repeated .proto_ff.Attr64 attr = 2;
  for (int i = 0; i < this->attr_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->attr(i), target);
  }

  // repeated .proto_ff.DigPerfor digital = 3;
  for (int i = 0; i < this->digital_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->digital(i), target);
  }

  // optional bool beDead = 4;
  if (has_bedead()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->bedead(), target);
  }

  // optional int32 type = 5;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->type(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int BuffEffectRsp_Target::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint64 cid = 1;
    if (has_cid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->cid());
    }

    // optional bool beDead = 4;
    if (has_bedead()) {
      total_size += 1 + 1;
    }

    // optional int32 type = 5;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type());
    }

  }
  // repeated .proto_ff.Attr64 attr = 2;
  total_size += 1 * this->attr_size();
  for (int i = 0; i < this->attr_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->attr(i));
  }

  // repeated .proto_ff.DigPerfor digital = 3;
  total_size += 1 * this->digital_size();
  for (int i = 0; i < this->digital_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->digital(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BuffEffectRsp_Target::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const BuffEffectRsp_Target* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const BuffEffectRsp_Target*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void BuffEffectRsp_Target::MergeFrom(const BuffEffectRsp_Target& from) {
  GOOGLE_CHECK_NE(&from, this);
  attr_.MergeFrom(from.attr_);
  digital_.MergeFrom(from.digital_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_cid()) {
      set_cid(from.cid());
    }
    if (from.has_bedead()) {
      set_bedead(from.bedead());
    }
    if (from.has_type()) {
      set_type(from.type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void BuffEffectRsp_Target::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BuffEffectRsp_Target::CopyFrom(const BuffEffectRsp_Target& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BuffEffectRsp_Target::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  for (int i = 0; i < attr_size(); i++) {
    if (!this->attr(i).IsInitialized()) return false;
  }
  for (int i = 0; i < digital_size(); i++) {
    if (!this->digital(i).IsInitialized()) return false;
  }
  return true;
}

void BuffEffectRsp_Target::Swap(BuffEffectRsp_Target* other) {
  if (other != this) {
    std::swap(cid_, other->cid_);
    attr_.Swap(&other->attr_);
    digital_.Swap(&other->digital_);
    std::swap(bedead_, other->bedead_);
    std::swap(type_, other->type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata BuffEffectRsp_Target::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BuffEffectRsp_Target_descriptor_;
  metadata.reflection = BuffEffectRsp_Target_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int BuffEffectRsp::kSkillIdFieldNumber;
const int BuffEffectRsp::kTargetLstFieldNumber;
const int BuffEffectRsp::kBuffIdFieldNumber;
#endif  // !_MSC_VER

BuffEffectRsp::BuffEffectRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void BuffEffectRsp::InitAsDefaultInstance() {
}

BuffEffectRsp::BuffEffectRsp(const BuffEffectRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void BuffEffectRsp::SharedCtor() {
  _cached_size_ = 0;
  skill_id_ = GOOGLE_ULONGLONG(0);
  buff_id_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BuffEffectRsp::~BuffEffectRsp() {
  SharedDtor();
}

void BuffEffectRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void BuffEffectRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BuffEffectRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BuffEffectRsp_descriptor_;
}

const BuffEffectRsp& BuffEffectRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Buff_2eproto();
  return *default_instance_;
}

BuffEffectRsp* BuffEffectRsp::default_instance_ = NULL;

BuffEffectRsp* BuffEffectRsp::New() const {
  return new BuffEffectRsp;
}

void BuffEffectRsp::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    skill_id_ = GOOGLE_ULONGLONG(0);
    buff_id_ = GOOGLE_ULONGLONG(0);
  }
  target_lst_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool BuffEffectRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint64 skill_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &skill_id_)));
          set_has_skill_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_target_lst;
        break;
      }

      // repeated .proto_ff.BuffEffectRsp.Target target_lst = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_target_lst:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_target_lst()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_target_lst;
        if (input->ExpectTag(24)) goto parse_buff_id;
        break;
      }

      // required uint64 buff_id = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_buff_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &buff_id_)));
          set_has_buff_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void BuffEffectRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint64 skill_id = 1;
  if (has_skill_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->skill_id(), output);
  }

  // repeated .proto_ff.BuffEffectRsp.Target target_lst = 2;
  for (int i = 0; i < this->target_lst_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->target_lst(i), output);
  }

  // required uint64 buff_id = 3;
  if (has_buff_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->buff_id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* BuffEffectRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint64 skill_id = 1;
  if (has_skill_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->skill_id(), target);
  }

  // repeated .proto_ff.BuffEffectRsp.Target target_lst = 2;
  for (int i = 0; i < this->target_lst_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->target_lst(i), target);
  }

  // required uint64 buff_id = 3;
  if (has_buff_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->buff_id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int BuffEffectRsp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint64 skill_id = 1;
    if (has_skill_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->skill_id());
    }

    // required uint64 buff_id = 3;
    if (has_buff_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->buff_id());
    }

  }
  // repeated .proto_ff.BuffEffectRsp.Target target_lst = 2;
  total_size += 1 * this->target_lst_size();
  for (int i = 0; i < this->target_lst_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->target_lst(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BuffEffectRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const BuffEffectRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const BuffEffectRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void BuffEffectRsp::MergeFrom(const BuffEffectRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  target_lst_.MergeFrom(from.target_lst_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_skill_id()) {
      set_skill_id(from.skill_id());
    }
    if (from.has_buff_id()) {
      set_buff_id(from.buff_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void BuffEffectRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BuffEffectRsp::CopyFrom(const BuffEffectRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BuffEffectRsp::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000005) != 0x00000005) return false;

  for (int i = 0; i < target_lst_size(); i++) {
    if (!this->target_lst(i).IsInitialized()) return false;
  }
  return true;
}

void BuffEffectRsp::Swap(BuffEffectRsp* other) {
  if (other != this) {
    std::swap(skill_id_, other->skill_id_);
    target_lst_.Swap(&other->target_lst_);
    std::swap(buff_id_, other->buff_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata BuffEffectRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BuffEffectRsp_descriptor_;
  metadata.reflection = BuffEffectRsp_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto_ff

// @@protoc_insertion_point(global_scope)
