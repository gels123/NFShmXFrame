// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: halo.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "halo.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace proto_ff {

namespace {

const ::google::protobuf::Descriptor* halohaloattributeDesc_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  halohaloattributeDesc_reflection_ = NULL;
const ::google::protobuf::Descriptor* halohaloActiveAttributeDesc_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  halohaloActiveAttributeDesc_reflection_ = NULL;
const ::google::protobuf::Descriptor* halohalo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  halohalo_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_halohalo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_halohalo_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_halo_2eproto() {
  protobuf_AddDesc_halo_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "halo.proto");
  GOOGLE_CHECK(file != NULL);
  halohaloattributeDesc_descriptor_ = file->message_type(0);
  static const int halohaloattributeDesc_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(halohaloattributeDesc, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(halohaloattributeDesc, value_),
  };
  halohaloattributeDesc_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      halohaloattributeDesc_descriptor_,
      halohaloattributeDesc::default_instance_,
      halohaloattributeDesc_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(halohaloattributeDesc, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(halohaloattributeDesc, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(halohaloattributeDesc));
  halohaloActiveAttributeDesc_descriptor_ = file->message_type(1);
  static const int halohaloActiveAttributeDesc_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(halohaloActiveAttributeDesc, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(halohaloActiveAttributeDesc, value_),
  };
  halohaloActiveAttributeDesc_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      halohaloActiveAttributeDesc_descriptor_,
      halohaloActiveAttributeDesc::default_instance_,
      halohaloActiveAttributeDesc_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(halohaloActiveAttributeDesc, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(halohaloActiveAttributeDesc, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(halohaloActiveAttributeDesc));
  halohalo_descriptor_ = file->message_type(2);
  static const int halohalo_offsets_[13] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(halohalo, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(halohalo, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(halohalo, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(halohalo, quality_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(halohalo, professionlimit_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(halohalo, activationitem_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(halohalo, activationnum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(halohalo, starid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(halohalo, starnum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(halohalo, starup_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(halohalo, starber_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(halohalo, attribute_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(halohalo, activeattribute_),
  };
  halohalo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      halohalo_descriptor_,
      halohalo::default_instance_,
      halohalo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(halohalo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(halohalo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(halohalo));
  Sheet_halohalo_descriptor_ = file->message_type(3);
  static const int Sheet_halohalo_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_halohalo, halohalo_list_),
  };
  Sheet_halohalo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_halohalo_descriptor_,
      Sheet_halohalo::default_instance_,
      Sheet_halohalo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_halohalo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_halohalo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_halohalo));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_halo_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    halohaloattributeDesc_descriptor_, &halohaloattributeDesc::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    halohaloActiveAttributeDesc_descriptor_, &halohaloActiveAttributeDesc::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    halohalo_descriptor_, &halohalo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_halohalo_descriptor_, &Sheet_halohalo::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_halo_2eproto() {
  delete halohaloattributeDesc::default_instance_;
  delete halohaloattributeDesc_reflection_;
  delete halohaloActiveAttributeDesc::default_instance_;
  delete halohaloActiveAttributeDesc_reflection_;
  delete halohalo::default_instance_;
  delete halohalo_reflection_;
  delete Sheet_halohalo::default_instance_;
  delete Sheet_halohalo_reflection_;
}

void protobuf_AddDesc_halo_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::yd_fieldoptions::protobuf_AddDesc_yd_5ffieldoptions_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\nhalo.proto\022\010proto_ff\032\025yd_fieldoptions."
    "proto\"I\n\025halohaloattributeDesc\022\030\n\004type\030\001"
    " \001(\005B\n\302\377\024\006\347\261\273\345\236\213\022\026\n\005value\030\002 \001(\005B\007\302\377\024\003\345\200\274"
    "\"O\n\033halohaloActiveAttributeDesc\022\030\n\004type\030"
    "\001 \001(\005B\n\302\377\024\006\347\261\273\345\236\213\022\026\n\005value\030\002 \001(\005B\007\302\377\024\003\345\200"
    "\274\"\341\004\n\010halohalo\022\030\n\002ID\030\001 \001(\003B\014\302\377\024\010\345\205\211\347\216\257ID"
    "\022\"\n\004name\030\002 \001(\tB\024\302\377\024\014\345\205\211\347\216\257\345\220\215\347\247\260\220\301\024<\022\036\n\004"
    "type\030\003 \001(\005B\020\302\377\024\014\345\244\226\350\247\202\347\261\273\345\236\213\022!\n\007quality\030"
    "\004 \001(\005B\020\302\377\024\014\345\205\211\347\216\257\345\223\201\350\264\250\022-\n\017professionLim"
    "it\030\005 \001(\tB\024\302\377\024\014\350\201\214\344\270\232\351\231\220\345\210\266\220\301\024<\022*\n\016activa"
    "tionItem\030\006 \001(\003B\022\302\377\024\016\346\277\200\346\264\273\351\201\223\345\205\267ID\022-\n\rac"
    "tivationNum\030\007 \001(\005B\026\302\377\024\022\346\277\200\346\264\273\351\201\223\345\205\267\346\225\260\351\207"
    "\217\022\"\n\006starId\030\010 \001(\003B\022\302\377\024\016\345\215\207\346\230\237\351\201\223\345\205\267id\022,\n"
    "\007starNum\030\t \001(\tB\033\302\377\024\022\345\215\207\346\230\237\351\201\223\345\205\267\346\225\260\351\207\217\220\301"
    "\024\254\002\022&\n\006starUp\030\n \001(\005B\026\302\377\024\022\345\215\207\346\230\237\347\255\211\347\272\247\344\270\212"
    "\351\231\220\022<\n\007starBer\030\013 \001(\005B+\302\377\024\'\346\257\217\346\254\241\345\215\207\346\230\237\345\261"
    "\236\346\200\247\345\242\236\345\212\240\347\232\204\347\231\276\345\210\206\346\257\224\345\200\274\022B\n\tattribute\030\014"
    " \003(\0132\037.proto_ff.halohaloattributeDescB\016\302"
    "\377\024\006\345\261\236\346\200\247\210\301\024\006\022N\n\017ActiveAttribute\030\r \003(\0132%"
    ".proto_ff.halohaloActiveAttributeDescB\016\302"
    "\377\024\006\345\261\236\346\200\247\210\301\024\006\"A\n\016Sheet_halohalo\022/\n\rhaloh"
    "alo_List\030\001 \003(\0132\022.proto_ff.halohaloB\004\210\301\024\024", 880);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "halo.proto", &protobuf_RegisterTypes);
  halohaloattributeDesc::default_instance_ = new halohaloattributeDesc();
  halohaloActiveAttributeDesc::default_instance_ = new halohaloActiveAttributeDesc();
  halohalo::default_instance_ = new halohalo();
  Sheet_halohalo::default_instance_ = new Sheet_halohalo();
  halohaloattributeDesc::default_instance_->InitAsDefaultInstance();
  halohaloActiveAttributeDesc::default_instance_->InitAsDefaultInstance();
  halohalo::default_instance_->InitAsDefaultInstance();
  Sheet_halohalo::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_halo_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_halo_2eproto {
  StaticDescriptorInitializer_halo_2eproto() {
    protobuf_AddDesc_halo_2eproto();
  }
} static_descriptor_initializer_halo_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int halohaloattributeDesc::kTypeFieldNumber;
const int halohaloattributeDesc::kValueFieldNumber;
#endif  // !_MSC_VER

halohaloattributeDesc::halohaloattributeDesc()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void halohaloattributeDesc::InitAsDefaultInstance() {
}

halohaloattributeDesc::halohaloattributeDesc(const halohaloattributeDesc& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void halohaloattributeDesc::SharedCtor() {
  _cached_size_ = 0;
  type_ = 0;
  value_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

halohaloattributeDesc::~halohaloattributeDesc() {
  SharedDtor();
}

void halohaloattributeDesc::SharedDtor() {
  if (this != default_instance_) {
  }
}

void halohaloattributeDesc::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* halohaloattributeDesc::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return halohaloattributeDesc_descriptor_;
}

const halohaloattributeDesc& halohaloattributeDesc::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_halo_2eproto();
  return *default_instance_;
}

halohaloattributeDesc* halohaloattributeDesc::default_instance_ = NULL;

halohaloattributeDesc* halohaloattributeDesc::New() const {
  return new halohaloattributeDesc;
}

void halohaloattributeDesc::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    type_ = 0;
    value_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool halohaloattributeDesc::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_value;
        break;
      }

      // optional int32 value = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_value:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &value_)));
          set_has_value();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void halohaloattributeDesc::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 type = 1;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->type(), output);
  }

  // optional int32 value = 2;
  if (has_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->value(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* halohaloattributeDesc::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 type = 1;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->type(), target);
  }

  // optional int32 value = 2;
  if (has_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->value(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int halohaloattributeDesc::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 type = 1;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type());
    }

    // optional int32 value = 2;
    if (has_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->value());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void halohaloattributeDesc::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const halohaloattributeDesc* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const halohaloattributeDesc*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void halohaloattributeDesc::MergeFrom(const halohaloattributeDesc& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_value()) {
      set_value(from.value());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void halohaloattributeDesc::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void halohaloattributeDesc::CopyFrom(const halohaloattributeDesc& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool halohaloattributeDesc::IsInitialized() const {

  return true;
}

void halohaloattributeDesc::Swap(halohaloattributeDesc* other) {
  if (other != this) {
    std::swap(type_, other->type_);
    std::swap(value_, other->value_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata halohaloattributeDesc::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = halohaloattributeDesc_descriptor_;
  metadata.reflection = halohaloattributeDesc_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int halohaloActiveAttributeDesc::kTypeFieldNumber;
const int halohaloActiveAttributeDesc::kValueFieldNumber;
#endif  // !_MSC_VER

halohaloActiveAttributeDesc::halohaloActiveAttributeDesc()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void halohaloActiveAttributeDesc::InitAsDefaultInstance() {
}

halohaloActiveAttributeDesc::halohaloActiveAttributeDesc(const halohaloActiveAttributeDesc& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void halohaloActiveAttributeDesc::SharedCtor() {
  _cached_size_ = 0;
  type_ = 0;
  value_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

halohaloActiveAttributeDesc::~halohaloActiveAttributeDesc() {
  SharedDtor();
}

void halohaloActiveAttributeDesc::SharedDtor() {
  if (this != default_instance_) {
  }
}

void halohaloActiveAttributeDesc::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* halohaloActiveAttributeDesc::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return halohaloActiveAttributeDesc_descriptor_;
}

const halohaloActiveAttributeDesc& halohaloActiveAttributeDesc::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_halo_2eproto();
  return *default_instance_;
}

halohaloActiveAttributeDesc* halohaloActiveAttributeDesc::default_instance_ = NULL;

halohaloActiveAttributeDesc* halohaloActiveAttributeDesc::New() const {
  return new halohaloActiveAttributeDesc;
}

void halohaloActiveAttributeDesc::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    type_ = 0;
    value_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool halohaloActiveAttributeDesc::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_value;
        break;
      }

      // optional int32 value = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_value:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &value_)));
          set_has_value();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void halohaloActiveAttributeDesc::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 type = 1;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->type(), output);
  }

  // optional int32 value = 2;
  if (has_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->value(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* halohaloActiveAttributeDesc::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 type = 1;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->type(), target);
  }

  // optional int32 value = 2;
  if (has_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->value(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int halohaloActiveAttributeDesc::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 type = 1;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type());
    }

    // optional int32 value = 2;
    if (has_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->value());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void halohaloActiveAttributeDesc::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const halohaloActiveAttributeDesc* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const halohaloActiveAttributeDesc*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void halohaloActiveAttributeDesc::MergeFrom(const halohaloActiveAttributeDesc& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_value()) {
      set_value(from.value());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void halohaloActiveAttributeDesc::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void halohaloActiveAttributeDesc::CopyFrom(const halohaloActiveAttributeDesc& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool halohaloActiveAttributeDesc::IsInitialized() const {

  return true;
}

void halohaloActiveAttributeDesc::Swap(halohaloActiveAttributeDesc* other) {
  if (other != this) {
    std::swap(type_, other->type_);
    std::swap(value_, other->value_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata halohaloActiveAttributeDesc::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = halohaloActiveAttributeDesc_descriptor_;
  metadata.reflection = halohaloActiveAttributeDesc_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int halohalo::kIDFieldNumber;
const int halohalo::kNameFieldNumber;
const int halohalo::kTypeFieldNumber;
const int halohalo::kQualityFieldNumber;
const int halohalo::kProfessionLimitFieldNumber;
const int halohalo::kActivationItemFieldNumber;
const int halohalo::kActivationNumFieldNumber;
const int halohalo::kStarIdFieldNumber;
const int halohalo::kStarNumFieldNumber;
const int halohalo::kStarUpFieldNumber;
const int halohalo::kStarBerFieldNumber;
const int halohalo::kAttributeFieldNumber;
const int halohalo::kActiveAttributeFieldNumber;
#endif  // !_MSC_VER

halohalo::halohalo()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void halohalo::InitAsDefaultInstance() {
}

halohalo::halohalo(const halohalo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void halohalo::SharedCtor() {
  _cached_size_ = 0;
  id_ = GOOGLE_LONGLONG(0);
  name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  type_ = 0;
  quality_ = 0;
  professionlimit_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  activationitem_ = GOOGLE_LONGLONG(0);
  activationnum_ = 0;
  starid_ = GOOGLE_LONGLONG(0);
  starnum_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  starup_ = 0;
  starber_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

halohalo::~halohalo() {
  SharedDtor();
}

void halohalo::SharedDtor() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (professionlimit_ != &::google::protobuf::internal::kEmptyString) {
    delete professionlimit_;
  }
  if (starnum_ != &::google::protobuf::internal::kEmptyString) {
    delete starnum_;
  }
  if (this != default_instance_) {
  }
}

void halohalo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* halohalo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return halohalo_descriptor_;
}

const halohalo& halohalo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_halo_2eproto();
  return *default_instance_;
}

halohalo* halohalo::default_instance_ = NULL;

halohalo* halohalo::New() const {
  return new halohalo;
}

void halohalo::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    id_ = GOOGLE_LONGLONG(0);
    if (has_name()) {
      if (name_ != &::google::protobuf::internal::kEmptyString) {
        name_->clear();
      }
    }
    type_ = 0;
    quality_ = 0;
    if (has_professionlimit()) {
      if (professionlimit_ != &::google::protobuf::internal::kEmptyString) {
        professionlimit_->clear();
      }
    }
    activationitem_ = GOOGLE_LONGLONG(0);
    activationnum_ = 0;
    starid_ = GOOGLE_LONGLONG(0);
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (has_starnum()) {
      if (starnum_ != &::google::protobuf::internal::kEmptyString) {
        starnum_->clear();
      }
    }
    starup_ = 0;
    starber_ = 0;
  }
  attribute_.Clear();
  activeattribute_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool halohalo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 ID = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_name;
        break;
      }

      // optional string name = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_type;
        break;
      }

      // optional int32 type = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_quality;
        break;
      }

      // optional int32 quality = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_quality:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &quality_)));
          set_has_quality();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_professionLimit;
        break;
      }

      // optional string professionLimit = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_professionLimit:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_professionlimit()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->professionlimit().data(), this->professionlimit().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_activationItem;
        break;
      }

      // optional int64 activationItem = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_activationItem:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &activationitem_)));
          set_has_activationitem();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_activationNum;
        break;
      }

      // optional int32 activationNum = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_activationNum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &activationnum_)));
          set_has_activationnum();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(64)) goto parse_starId;
        break;
      }

      // optional int64 starId = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_starId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &starid_)));
          set_has_starid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(74)) goto parse_starNum;
        break;
      }

      // optional string starNum = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_starNum:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_starnum()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->starnum().data(), this->starnum().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(80)) goto parse_starUp;
        break;
      }

      // optional int32 starUp = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_starUp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &starup_)));
          set_has_starup();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(88)) goto parse_starBer;
        break;
      }

      // optional int32 starBer = 11;
      case 11: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_starBer:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &starber_)));
          set_has_starber();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(98)) goto parse_attribute;
        break;
      }

      // repeated .proto_ff.halohaloattributeDesc attribute = 12;
      case 12: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_attribute:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_attribute()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(98)) goto parse_attribute;
        if (input->ExpectTag(106)) goto parse_ActiveAttribute;
        break;
      }

      // repeated .proto_ff.halohaloActiveAttributeDesc ActiveAttribute = 13;
      case 13: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_ActiveAttribute:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_activeattribute()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(106)) goto parse_ActiveAttribute;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void halohalo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 ID = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->id(), output);
  }

  // optional string name = 2;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->name(), output);
  }

  // optional int32 type = 3;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->type(), output);
  }

  // optional int32 quality = 4;
  if (has_quality()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->quality(), output);
  }

  // optional string professionLimit = 5;
  if (has_professionlimit()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->professionlimit().data(), this->professionlimit().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->professionlimit(), output);
  }

  // optional int64 activationItem = 6;
  if (has_activationitem()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(6, this->activationitem(), output);
  }

  // optional int32 activationNum = 7;
  if (has_activationnum()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->activationnum(), output);
  }

  // optional int64 starId = 8;
  if (has_starid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(8, this->starid(), output);
  }

  // optional string starNum = 9;
  if (has_starnum()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->starnum().data(), this->starnum().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      9, this->starnum(), output);
  }

  // optional int32 starUp = 10;
  if (has_starup()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->starup(), output);
  }

  // optional int32 starBer = 11;
  if (has_starber()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->starber(), output);
  }

  // repeated .proto_ff.halohaloattributeDesc attribute = 12;
  for (int i = 0; i < this->attribute_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, this->attribute(i), output);
  }

  // repeated .proto_ff.halohaloActiveAttributeDesc ActiveAttribute = 13;
  for (int i = 0; i < this->activeattribute_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      13, this->activeattribute(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* halohalo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 ID = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->id(), target);
  }

  // optional string name = 2;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // optional int32 type = 3;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->type(), target);
  }

  // optional int32 quality = 4;
  if (has_quality()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->quality(), target);
  }

  // optional string professionLimit = 5;
  if (has_professionlimit()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->professionlimit().data(), this->professionlimit().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->professionlimit(), target);
  }

  // optional int64 activationItem = 6;
  if (has_activationitem()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(6, this->activationitem(), target);
  }

  // optional int32 activationNum = 7;
  if (has_activationnum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->activationnum(), target);
  }

  // optional int64 starId = 8;
  if (has_starid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(8, this->starid(), target);
  }

  // optional string starNum = 9;
  if (has_starnum()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->starnum().data(), this->starnum().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->starnum(), target);
  }

  // optional int32 starUp = 10;
  if (has_starup()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->starup(), target);
  }

  // optional int32 starBer = 11;
  if (has_starber()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->starber(), target);
  }

  // repeated .proto_ff.halohaloattributeDesc attribute = 12;
  for (int i = 0; i < this->attribute_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        12, this->attribute(i), target);
  }

  // repeated .proto_ff.halohaloActiveAttributeDesc ActiveAttribute = 13;
  for (int i = 0; i < this->activeattribute_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        13, this->activeattribute(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int halohalo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 ID = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->id());
    }

    // optional string name = 2;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional int32 type = 3;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type());
    }

    // optional int32 quality = 4;
    if (has_quality()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->quality());
    }

    // optional string professionLimit = 5;
    if (has_professionlimit()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->professionlimit());
    }

    // optional int64 activationItem = 6;
    if (has_activationitem()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->activationitem());
    }

    // optional int32 activationNum = 7;
    if (has_activationnum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->activationnum());
    }

    // optional int64 starId = 8;
    if (has_starid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->starid());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional string starNum = 9;
    if (has_starnum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->starnum());
    }

    // optional int32 starUp = 10;
    if (has_starup()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->starup());
    }

    // optional int32 starBer = 11;
    if (has_starber()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->starber());
    }

  }
  // repeated .proto_ff.halohaloattributeDesc attribute = 12;
  total_size += 1 * this->attribute_size();
  for (int i = 0; i < this->attribute_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->attribute(i));
  }

  // repeated .proto_ff.halohaloActiveAttributeDesc ActiveAttribute = 13;
  total_size += 1 * this->activeattribute_size();
  for (int i = 0; i < this->activeattribute_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->activeattribute(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void halohalo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const halohalo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const halohalo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void halohalo::MergeFrom(const halohalo& from) {
  GOOGLE_CHECK_NE(&from, this);
  attribute_.MergeFrom(from.attribute_);
  activeattribute_.MergeFrom(from.activeattribute_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_name()) {
      set_name(from.name());
    }
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_quality()) {
      set_quality(from.quality());
    }
    if (from.has_professionlimit()) {
      set_professionlimit(from.professionlimit());
    }
    if (from.has_activationitem()) {
      set_activationitem(from.activationitem());
    }
    if (from.has_activationnum()) {
      set_activationnum(from.activationnum());
    }
    if (from.has_starid()) {
      set_starid(from.starid());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_starnum()) {
      set_starnum(from.starnum());
    }
    if (from.has_starup()) {
      set_starup(from.starup());
    }
    if (from.has_starber()) {
      set_starber(from.starber());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void halohalo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void halohalo::CopyFrom(const halohalo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool halohalo::IsInitialized() const {

  return true;
}

void halohalo::Swap(halohalo* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(name_, other->name_);
    std::swap(type_, other->type_);
    std::swap(quality_, other->quality_);
    std::swap(professionlimit_, other->professionlimit_);
    std::swap(activationitem_, other->activationitem_);
    std::swap(activationnum_, other->activationnum_);
    std::swap(starid_, other->starid_);
    std::swap(starnum_, other->starnum_);
    std::swap(starup_, other->starup_);
    std::swap(starber_, other->starber_);
    attribute_.Swap(&other->attribute_);
    activeattribute_.Swap(&other->activeattribute_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata halohalo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = halohalo_descriptor_;
  metadata.reflection = halohalo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_halohalo::kHalohaloListFieldNumber;
#endif  // !_MSC_VER

Sheet_halohalo::Sheet_halohalo()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_halohalo::InitAsDefaultInstance() {
}

Sheet_halohalo::Sheet_halohalo(const Sheet_halohalo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_halohalo::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_halohalo::~Sheet_halohalo() {
  SharedDtor();
}

void Sheet_halohalo::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_halohalo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_halohalo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_halohalo_descriptor_;
}

const Sheet_halohalo& Sheet_halohalo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_halo_2eproto();
  return *default_instance_;
}

Sheet_halohalo* Sheet_halohalo::default_instance_ = NULL;

Sheet_halohalo* Sheet_halohalo::New() const {
  return new Sheet_halohalo;
}

void Sheet_halohalo::Clear() {
  halohalo_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_halohalo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.halohalo halohalo_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_halohalo_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_halohalo_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_halohalo_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_halohalo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.halohalo halohalo_List = 1;
  for (int i = 0; i < this->halohalo_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->halohalo_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_halohalo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.halohalo halohalo_List = 1;
  for (int i = 0; i < this->halohalo_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->halohalo_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_halohalo::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.halohalo halohalo_List = 1;
  total_size += 1 * this->halohalo_list_size();
  for (int i = 0; i < this->halohalo_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->halohalo_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_halohalo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_halohalo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_halohalo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_halohalo::MergeFrom(const Sheet_halohalo& from) {
  GOOGLE_CHECK_NE(&from, this);
  halohalo_list_.MergeFrom(from.halohalo_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_halohalo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_halohalo::CopyFrom(const Sheet_halohalo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_halohalo::IsInitialized() const {

  return true;
}

void Sheet_halohalo::Swap(Sheet_halohalo* other) {
  if (other != this) {
    halohalo_list_.Swap(&other->halohalo_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_halohalo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_halohalo_descriptor_;
  metadata.reflection = Sheet_halohalo_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto_ff

// @@protoc_insertion_point(global_scope)
