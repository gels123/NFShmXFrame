// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: CSEquip.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "CSEquip.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace proto_ff {

namespace {

const ::google::protobuf::Descriptor* EquipInfoList_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  EquipInfoList_reflection_ = NULL;
const ::google::protobuf::Descriptor* EquipDressReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  EquipDressReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* EquipDressRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  EquipDressRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* EquipUnDressReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  EquipUnDressReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* EquipUnDressRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  EquipUnDressRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* NotifyEquipInfoRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  NotifyEquipInfoRsp_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_CSEquip_2eproto() {
  protobuf_AddDesc_CSEquip_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "CSEquip.proto");
  GOOGLE_CHECK(file != NULL);
  EquipInfoList_descriptor_ = file->message_type(0);
  static const int EquipInfoList_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EquipInfoList, infos_),
  };
  EquipInfoList_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      EquipInfoList_descriptor_,
      EquipInfoList::default_instance_,
      EquipInfoList_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EquipInfoList, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EquipInfoList, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(EquipInfoList));
  EquipDressReq_descriptor_ = file->message_type(1);
  static const int EquipDressReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EquipDressReq, bag_pos_),
  };
  EquipDressReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      EquipDressReq_descriptor_,
      EquipDressReq::default_instance_,
      EquipDressReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EquipDressReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EquipDressReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(EquipDressReq));
  EquipDressRsp_descriptor_ = file->message_type(2);
  static const int EquipDressRsp_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EquipDressRsp, bag_pos_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EquipDressRsp, ret_),
  };
  EquipDressRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      EquipDressRsp_descriptor_,
      EquipDressRsp::default_instance_,
      EquipDressRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EquipDressRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EquipDressRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(EquipDressRsp));
  EquipUnDressReq_descriptor_ = file->message_type(3);
  static const int EquipUnDressReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EquipUnDressReq, slot_pos_),
  };
  EquipUnDressReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      EquipUnDressReq_descriptor_,
      EquipUnDressReq::default_instance_,
      EquipUnDressReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EquipUnDressReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EquipUnDressReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(EquipUnDressReq));
  EquipUnDressRsp_descriptor_ = file->message_type(4);
  static const int EquipUnDressRsp_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EquipUnDressRsp, slot_pos_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EquipUnDressRsp, ret_),
  };
  EquipUnDressRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      EquipUnDressRsp_descriptor_,
      EquipUnDressRsp::default_instance_,
      EquipUnDressRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EquipUnDressRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EquipUnDressRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(EquipUnDressRsp));
  NotifyEquipInfoRsp_descriptor_ = file->message_type(5);
  static const int NotifyEquipInfoRsp_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifyEquipInfoRsp, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifyEquipInfoRsp, infos_),
  };
  NotifyEquipInfoRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      NotifyEquipInfoRsp_descriptor_,
      NotifyEquipInfoRsp::default_instance_,
      NotifyEquipInfoRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifyEquipInfoRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifyEquipInfoRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(NotifyEquipInfoRsp));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_CSEquip_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    EquipInfoList_descriptor_, &EquipInfoList::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    EquipDressReq_descriptor_, &EquipDressReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    EquipDressRsp_descriptor_, &EquipDressRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    EquipUnDressReq_descriptor_, &EquipUnDressReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    EquipUnDressRsp_descriptor_, &EquipUnDressRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    NotifyEquipInfoRsp_descriptor_, &NotifyEquipInfoRsp::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_CSEquip_2eproto() {
  delete EquipInfoList::default_instance_;
  delete EquipInfoList_reflection_;
  delete EquipDressReq::default_instance_;
  delete EquipDressReq_reflection_;
  delete EquipDressRsp::default_instance_;
  delete EquipDressRsp_reflection_;
  delete EquipUnDressReq::default_instance_;
  delete EquipUnDressReq_reflection_;
  delete EquipUnDressRsp::default_instance_;
  delete EquipUnDressRsp_reflection_;
  delete NotifyEquipInfoRsp::default_instance_;
  delete NotifyEquipInfoRsp_reflection_;
}

void protobuf_AddDesc_CSEquip_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::yd_fieldoptions::protobuf_AddDesc_yd_5ffieldoptions_2eproto();
  ::proto_ff::protobuf_AddDesc_common_5flogic_2eproto();
  ::proto_ff::protobuf_AddDesc_Com_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\rCSEquip.proto\022\010proto_ff\032\025yd_fieldoptio"
    "ns.proto\032\022common_logic.proto\032\tCom.proto\""
    "3\n\rEquipInfoList\022\"\n\005infos\030\001 \003(\0132\023.proto_"
    "ff.EquipInfo\" \n\rEquipDressReq\022\017\n\007bag_pos"
    "\030\001 \001(\005\"-\n\rEquipDressRsp\022\017\n\007bag_pos\030\001 \001(\005"
    "\022\013\n\003ret\030\002 \001(\005\"#\n\017EquipUnDressReq\022\020\n\010slot"
    "_pos\030\001 \001(\005\"0\n\017EquipUnDressRsp\022\020\n\010slot_po"
    "s\030\001 \001(\005\022\013\n\003ret\030\002 \001(\005\"F\n\022NotifyEquipInfoR"
    "sp\022\014\n\004type\030\001 \001(\005\022\"\n\005infos\030\002 \003(\0132\023.proto_"
    "ff.EquipInfo", 372);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "CSEquip.proto", &protobuf_RegisterTypes);
  EquipInfoList::default_instance_ = new EquipInfoList();
  EquipDressReq::default_instance_ = new EquipDressReq();
  EquipDressRsp::default_instance_ = new EquipDressRsp();
  EquipUnDressReq::default_instance_ = new EquipUnDressReq();
  EquipUnDressRsp::default_instance_ = new EquipUnDressRsp();
  NotifyEquipInfoRsp::default_instance_ = new NotifyEquipInfoRsp();
  EquipInfoList::default_instance_->InitAsDefaultInstance();
  EquipDressReq::default_instance_->InitAsDefaultInstance();
  EquipDressRsp::default_instance_->InitAsDefaultInstance();
  EquipUnDressReq::default_instance_->InitAsDefaultInstance();
  EquipUnDressRsp::default_instance_->InitAsDefaultInstance();
  NotifyEquipInfoRsp::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_CSEquip_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_CSEquip_2eproto {
  StaticDescriptorInitializer_CSEquip_2eproto() {
    protobuf_AddDesc_CSEquip_2eproto();
  }
} static_descriptor_initializer_CSEquip_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int EquipInfoList::kInfosFieldNumber;
#endif  // !_MSC_VER

EquipInfoList::EquipInfoList()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void EquipInfoList::InitAsDefaultInstance() {
}

EquipInfoList::EquipInfoList(const EquipInfoList& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void EquipInfoList::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

EquipInfoList::~EquipInfoList() {
  SharedDtor();
}

void EquipInfoList::SharedDtor() {
  if (this != default_instance_) {
  }
}

void EquipInfoList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EquipInfoList::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EquipInfoList_descriptor_;
}

const EquipInfoList& EquipInfoList::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_CSEquip_2eproto();
  return *default_instance_;
}

EquipInfoList* EquipInfoList::default_instance_ = NULL;

EquipInfoList* EquipInfoList::New() const {
  return new EquipInfoList;
}

void EquipInfoList::Clear() {
  infos_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool EquipInfoList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.EquipInfo infos = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_infos:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_infos()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_infos;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void EquipInfoList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.EquipInfo infos = 1;
  for (int i = 0; i < this->infos_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->infos(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* EquipInfoList::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.EquipInfo infos = 1;
  for (int i = 0; i < this->infos_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->infos(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int EquipInfoList::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.EquipInfo infos = 1;
  total_size += 1 * this->infos_size();
  for (int i = 0; i < this->infos_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->infos(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EquipInfoList::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const EquipInfoList* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const EquipInfoList*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void EquipInfoList::MergeFrom(const EquipInfoList& from) {
  GOOGLE_CHECK_NE(&from, this);
  infos_.MergeFrom(from.infos_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void EquipInfoList::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EquipInfoList::CopyFrom(const EquipInfoList& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EquipInfoList::IsInitialized() const {

  for (int i = 0; i < infos_size(); i++) {
    if (!this->infos(i).IsInitialized()) return false;
  }
  return true;
}

void EquipInfoList::Swap(EquipInfoList* other) {
  if (other != this) {
    infos_.Swap(&other->infos_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata EquipInfoList::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = EquipInfoList_descriptor_;
  metadata.reflection = EquipInfoList_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int EquipDressReq::kBagPosFieldNumber;
#endif  // !_MSC_VER

EquipDressReq::EquipDressReq()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void EquipDressReq::InitAsDefaultInstance() {
}

EquipDressReq::EquipDressReq(const EquipDressReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void EquipDressReq::SharedCtor() {
  _cached_size_ = 0;
  bag_pos_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

EquipDressReq::~EquipDressReq() {
  SharedDtor();
}

void EquipDressReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void EquipDressReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EquipDressReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EquipDressReq_descriptor_;
}

const EquipDressReq& EquipDressReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_CSEquip_2eproto();
  return *default_instance_;
}

EquipDressReq* EquipDressReq::default_instance_ = NULL;

EquipDressReq* EquipDressReq::New() const {
  return new EquipDressReq;
}

void EquipDressReq::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    bag_pos_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool EquipDressReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 bag_pos = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &bag_pos_)));
          set_has_bag_pos();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void EquipDressReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 bag_pos = 1;
  if (has_bag_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->bag_pos(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* EquipDressReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 bag_pos = 1;
  if (has_bag_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->bag_pos(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int EquipDressReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 bag_pos = 1;
    if (has_bag_pos()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->bag_pos());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EquipDressReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const EquipDressReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const EquipDressReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void EquipDressReq::MergeFrom(const EquipDressReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_bag_pos()) {
      set_bag_pos(from.bag_pos());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void EquipDressReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EquipDressReq::CopyFrom(const EquipDressReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EquipDressReq::IsInitialized() const {

  return true;
}

void EquipDressReq::Swap(EquipDressReq* other) {
  if (other != this) {
    std::swap(bag_pos_, other->bag_pos_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata EquipDressReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = EquipDressReq_descriptor_;
  metadata.reflection = EquipDressReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int EquipDressRsp::kBagPosFieldNumber;
const int EquipDressRsp::kRetFieldNumber;
#endif  // !_MSC_VER

EquipDressRsp::EquipDressRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void EquipDressRsp::InitAsDefaultInstance() {
}

EquipDressRsp::EquipDressRsp(const EquipDressRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void EquipDressRsp::SharedCtor() {
  _cached_size_ = 0;
  bag_pos_ = 0;
  ret_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

EquipDressRsp::~EquipDressRsp() {
  SharedDtor();
}

void EquipDressRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void EquipDressRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EquipDressRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EquipDressRsp_descriptor_;
}

const EquipDressRsp& EquipDressRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_CSEquip_2eproto();
  return *default_instance_;
}

EquipDressRsp* EquipDressRsp::default_instance_ = NULL;

EquipDressRsp* EquipDressRsp::New() const {
  return new EquipDressRsp;
}

void EquipDressRsp::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    bag_pos_ = 0;
    ret_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool EquipDressRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 bag_pos = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &bag_pos_)));
          set_has_bag_pos();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_ret;
        break;
      }

      // optional int32 ret = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_ret:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ret_)));
          set_has_ret();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void EquipDressRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 bag_pos = 1;
  if (has_bag_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->bag_pos(), output);
  }

  // optional int32 ret = 2;
  if (has_ret()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->ret(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* EquipDressRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 bag_pos = 1;
  if (has_bag_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->bag_pos(), target);
  }

  // optional int32 ret = 2;
  if (has_ret()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->ret(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int EquipDressRsp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 bag_pos = 1;
    if (has_bag_pos()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->bag_pos());
    }

    // optional int32 ret = 2;
    if (has_ret()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->ret());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EquipDressRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const EquipDressRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const EquipDressRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void EquipDressRsp::MergeFrom(const EquipDressRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_bag_pos()) {
      set_bag_pos(from.bag_pos());
    }
    if (from.has_ret()) {
      set_ret(from.ret());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void EquipDressRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EquipDressRsp::CopyFrom(const EquipDressRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EquipDressRsp::IsInitialized() const {

  return true;
}

void EquipDressRsp::Swap(EquipDressRsp* other) {
  if (other != this) {
    std::swap(bag_pos_, other->bag_pos_);
    std::swap(ret_, other->ret_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata EquipDressRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = EquipDressRsp_descriptor_;
  metadata.reflection = EquipDressRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int EquipUnDressReq::kSlotPosFieldNumber;
#endif  // !_MSC_VER

EquipUnDressReq::EquipUnDressReq()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void EquipUnDressReq::InitAsDefaultInstance() {
}

EquipUnDressReq::EquipUnDressReq(const EquipUnDressReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void EquipUnDressReq::SharedCtor() {
  _cached_size_ = 0;
  slot_pos_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

EquipUnDressReq::~EquipUnDressReq() {
  SharedDtor();
}

void EquipUnDressReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void EquipUnDressReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EquipUnDressReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EquipUnDressReq_descriptor_;
}

const EquipUnDressReq& EquipUnDressReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_CSEquip_2eproto();
  return *default_instance_;
}

EquipUnDressReq* EquipUnDressReq::default_instance_ = NULL;

EquipUnDressReq* EquipUnDressReq::New() const {
  return new EquipUnDressReq;
}

void EquipUnDressReq::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    slot_pos_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool EquipUnDressReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 slot_pos = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &slot_pos_)));
          set_has_slot_pos();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void EquipUnDressReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 slot_pos = 1;
  if (has_slot_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->slot_pos(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* EquipUnDressReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 slot_pos = 1;
  if (has_slot_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->slot_pos(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int EquipUnDressReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 slot_pos = 1;
    if (has_slot_pos()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->slot_pos());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EquipUnDressReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const EquipUnDressReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const EquipUnDressReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void EquipUnDressReq::MergeFrom(const EquipUnDressReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_slot_pos()) {
      set_slot_pos(from.slot_pos());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void EquipUnDressReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EquipUnDressReq::CopyFrom(const EquipUnDressReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EquipUnDressReq::IsInitialized() const {

  return true;
}

void EquipUnDressReq::Swap(EquipUnDressReq* other) {
  if (other != this) {
    std::swap(slot_pos_, other->slot_pos_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata EquipUnDressReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = EquipUnDressReq_descriptor_;
  metadata.reflection = EquipUnDressReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int EquipUnDressRsp::kSlotPosFieldNumber;
const int EquipUnDressRsp::kRetFieldNumber;
#endif  // !_MSC_VER

EquipUnDressRsp::EquipUnDressRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void EquipUnDressRsp::InitAsDefaultInstance() {
}

EquipUnDressRsp::EquipUnDressRsp(const EquipUnDressRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void EquipUnDressRsp::SharedCtor() {
  _cached_size_ = 0;
  slot_pos_ = 0;
  ret_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

EquipUnDressRsp::~EquipUnDressRsp() {
  SharedDtor();
}

void EquipUnDressRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void EquipUnDressRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EquipUnDressRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EquipUnDressRsp_descriptor_;
}

const EquipUnDressRsp& EquipUnDressRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_CSEquip_2eproto();
  return *default_instance_;
}

EquipUnDressRsp* EquipUnDressRsp::default_instance_ = NULL;

EquipUnDressRsp* EquipUnDressRsp::New() const {
  return new EquipUnDressRsp;
}

void EquipUnDressRsp::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    slot_pos_ = 0;
    ret_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool EquipUnDressRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 slot_pos = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &slot_pos_)));
          set_has_slot_pos();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_ret;
        break;
      }

      // optional int32 ret = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_ret:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ret_)));
          set_has_ret();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void EquipUnDressRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 slot_pos = 1;
  if (has_slot_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->slot_pos(), output);
  }

  // optional int32 ret = 2;
  if (has_ret()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->ret(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* EquipUnDressRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 slot_pos = 1;
  if (has_slot_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->slot_pos(), target);
  }

  // optional int32 ret = 2;
  if (has_ret()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->ret(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int EquipUnDressRsp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 slot_pos = 1;
    if (has_slot_pos()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->slot_pos());
    }

    // optional int32 ret = 2;
    if (has_ret()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->ret());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EquipUnDressRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const EquipUnDressRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const EquipUnDressRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void EquipUnDressRsp::MergeFrom(const EquipUnDressRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_slot_pos()) {
      set_slot_pos(from.slot_pos());
    }
    if (from.has_ret()) {
      set_ret(from.ret());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void EquipUnDressRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EquipUnDressRsp::CopyFrom(const EquipUnDressRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EquipUnDressRsp::IsInitialized() const {

  return true;
}

void EquipUnDressRsp::Swap(EquipUnDressRsp* other) {
  if (other != this) {
    std::swap(slot_pos_, other->slot_pos_);
    std::swap(ret_, other->ret_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata EquipUnDressRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = EquipUnDressRsp_descriptor_;
  metadata.reflection = EquipUnDressRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int NotifyEquipInfoRsp::kTypeFieldNumber;
const int NotifyEquipInfoRsp::kInfosFieldNumber;
#endif  // !_MSC_VER

NotifyEquipInfoRsp::NotifyEquipInfoRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void NotifyEquipInfoRsp::InitAsDefaultInstance() {
}

NotifyEquipInfoRsp::NotifyEquipInfoRsp(const NotifyEquipInfoRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void NotifyEquipInfoRsp::SharedCtor() {
  _cached_size_ = 0;
  type_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

NotifyEquipInfoRsp::~NotifyEquipInfoRsp() {
  SharedDtor();
}

void NotifyEquipInfoRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void NotifyEquipInfoRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NotifyEquipInfoRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return NotifyEquipInfoRsp_descriptor_;
}

const NotifyEquipInfoRsp& NotifyEquipInfoRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_CSEquip_2eproto();
  return *default_instance_;
}

NotifyEquipInfoRsp* NotifyEquipInfoRsp::default_instance_ = NULL;

NotifyEquipInfoRsp* NotifyEquipInfoRsp::New() const {
  return new NotifyEquipInfoRsp;
}

void NotifyEquipInfoRsp::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    type_ = 0;
  }
  infos_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool NotifyEquipInfoRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_infos;
        break;
      }

      // repeated .proto_ff.EquipInfo infos = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_infos:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_infos()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_infos;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void NotifyEquipInfoRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 type = 1;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->type(), output);
  }

  // repeated .proto_ff.EquipInfo infos = 2;
  for (int i = 0; i < this->infos_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->infos(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* NotifyEquipInfoRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 type = 1;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->type(), target);
  }

  // repeated .proto_ff.EquipInfo infos = 2;
  for (int i = 0; i < this->infos_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->infos(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int NotifyEquipInfoRsp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 type = 1;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type());
    }

  }
  // repeated .proto_ff.EquipInfo infos = 2;
  total_size += 1 * this->infos_size();
  for (int i = 0; i < this->infos_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->infos(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NotifyEquipInfoRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const NotifyEquipInfoRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const NotifyEquipInfoRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void NotifyEquipInfoRsp::MergeFrom(const NotifyEquipInfoRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  infos_.MergeFrom(from.infos_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_type()) {
      set_type(from.type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void NotifyEquipInfoRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NotifyEquipInfoRsp::CopyFrom(const NotifyEquipInfoRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NotifyEquipInfoRsp::IsInitialized() const {

  for (int i = 0; i < infos_size(); i++) {
    if (!this->infos(i).IsInitialized()) return false;
  }
  return true;
}

void NotifyEquipInfoRsp::Swap(NotifyEquipInfoRsp* other) {
  if (other != this) {
    std::swap(type_, other->type_);
    infos_.Swap(&other->infos_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata NotifyEquipInfoRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = NotifyEquipInfoRsp_descriptor_;
  metadata.reflection = NotifyEquipInfoRsp_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto_ff

// @@protoc_insertion_point(global_scope)
