// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: randomname.proto

#ifndef PROTOBUF_randomname_2eproto__INCLUDED
#define PROTOBUF_randomname_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "yd_fieldoptions.pb.h"
// @@protoc_insertion_point(includes)

namespace proto_ff {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_randomname_2eproto();
void protobuf_AssignDesc_randomname_2eproto();
void protobuf_ShutdownFile_randomname_2eproto();

class randomnamemanfirst;
class Sheet_randomnamemanfirst;
class randomnamemansecond;
class Sheet_randomnamemansecond;
class randomnamemanthird;
class Sheet_randomnamemanthird;
class randomnamewomanfirst;
class Sheet_randomnamewomanfirst;
class randomnamewomansecond;
class Sheet_randomnamewomansecond;
class randomnamewomanthird;
class Sheet_randomnamewomanthird;

// ===================================================================

class randomnamemanfirst : public ::google::protobuf::Message {
 public:
  randomnamemanfirst();
  virtual ~randomnamemanfirst();

  randomnamemanfirst(const randomnamemanfirst& from);

  inline randomnamemanfirst& operator=(const randomnamemanfirst& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const randomnamemanfirst& default_instance();

  void Swap(randomnamemanfirst* other);

  // implements Message ----------------------------------------------

  randomnamemanfirst* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const randomnamemanfirst& from);
  void MergeFrom(const randomnamemanfirst& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // optional string name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:proto_ff.randomnamemanfirst)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_name();
  inline void clear_has_name();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* name_;
  ::google::protobuf::int32 id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_randomname_2eproto();
  friend void protobuf_AssignDesc_randomname_2eproto();
  friend void protobuf_ShutdownFile_randomname_2eproto();

  void InitAsDefaultInstance();
  static randomnamemanfirst* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_randomnamemanfirst : public ::google::protobuf::Message {
 public:
  Sheet_randomnamemanfirst();
  virtual ~Sheet_randomnamemanfirst();

  Sheet_randomnamemanfirst(const Sheet_randomnamemanfirst& from);

  inline Sheet_randomnamemanfirst& operator=(const Sheet_randomnamemanfirst& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_randomnamemanfirst& default_instance();

  void Swap(Sheet_randomnamemanfirst* other);

  // implements Message ----------------------------------------------

  Sheet_randomnamemanfirst* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_randomnamemanfirst& from);
  void MergeFrom(const Sheet_randomnamemanfirst& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.randomnamemanfirst randomnamemanfirst_List = 1;
  inline int randomnamemanfirst_list_size() const;
  inline void clear_randomnamemanfirst_list();
  static const int kRandomnamemanfirstListFieldNumber = 1;
  inline const ::proto_ff::randomnamemanfirst& randomnamemanfirst_list(int index) const;
  inline ::proto_ff::randomnamemanfirst* mutable_randomnamemanfirst_list(int index);
  inline ::proto_ff::randomnamemanfirst* add_randomnamemanfirst_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::randomnamemanfirst >&
      randomnamemanfirst_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::randomnamemanfirst >*
      mutable_randomnamemanfirst_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_randomnamemanfirst)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::randomnamemanfirst > randomnamemanfirst_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_randomname_2eproto();
  friend void protobuf_AssignDesc_randomname_2eproto();
  friend void protobuf_ShutdownFile_randomname_2eproto();

  void InitAsDefaultInstance();
  static Sheet_randomnamemanfirst* default_instance_;
};
// -------------------------------------------------------------------

class randomnamemansecond : public ::google::protobuf::Message {
 public:
  randomnamemansecond();
  virtual ~randomnamemansecond();

  randomnamemansecond(const randomnamemansecond& from);

  inline randomnamemansecond& operator=(const randomnamemansecond& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const randomnamemansecond& default_instance();

  void Swap(randomnamemansecond* other);

  // implements Message ----------------------------------------------

  randomnamemansecond* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const randomnamemansecond& from);
  void MergeFrom(const randomnamemansecond& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // optional string name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:proto_ff.randomnamemansecond)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_name();
  inline void clear_has_name();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* name_;
  ::google::protobuf::int32 id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_randomname_2eproto();
  friend void protobuf_AssignDesc_randomname_2eproto();
  friend void protobuf_ShutdownFile_randomname_2eproto();

  void InitAsDefaultInstance();
  static randomnamemansecond* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_randomnamemansecond : public ::google::protobuf::Message {
 public:
  Sheet_randomnamemansecond();
  virtual ~Sheet_randomnamemansecond();

  Sheet_randomnamemansecond(const Sheet_randomnamemansecond& from);

  inline Sheet_randomnamemansecond& operator=(const Sheet_randomnamemansecond& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_randomnamemansecond& default_instance();

  void Swap(Sheet_randomnamemansecond* other);

  // implements Message ----------------------------------------------

  Sheet_randomnamemansecond* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_randomnamemansecond& from);
  void MergeFrom(const Sheet_randomnamemansecond& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.randomnamemansecond randomnamemansecond_List = 1;
  inline int randomnamemansecond_list_size() const;
  inline void clear_randomnamemansecond_list();
  static const int kRandomnamemansecondListFieldNumber = 1;
  inline const ::proto_ff::randomnamemansecond& randomnamemansecond_list(int index) const;
  inline ::proto_ff::randomnamemansecond* mutable_randomnamemansecond_list(int index);
  inline ::proto_ff::randomnamemansecond* add_randomnamemansecond_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::randomnamemansecond >&
      randomnamemansecond_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::randomnamemansecond >*
      mutable_randomnamemansecond_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_randomnamemansecond)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::randomnamemansecond > randomnamemansecond_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_randomname_2eproto();
  friend void protobuf_AssignDesc_randomname_2eproto();
  friend void protobuf_ShutdownFile_randomname_2eproto();

  void InitAsDefaultInstance();
  static Sheet_randomnamemansecond* default_instance_;
};
// -------------------------------------------------------------------

class randomnamemanthird : public ::google::protobuf::Message {
 public:
  randomnamemanthird();
  virtual ~randomnamemanthird();

  randomnamemanthird(const randomnamemanthird& from);

  inline randomnamemanthird& operator=(const randomnamemanthird& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const randomnamemanthird& default_instance();

  void Swap(randomnamemanthird* other);

  // implements Message ----------------------------------------------

  randomnamemanthird* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const randomnamemanthird& from);
  void MergeFrom(const randomnamemanthird& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // optional string name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:proto_ff.randomnamemanthird)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_name();
  inline void clear_has_name();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* name_;
  ::google::protobuf::int32 id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_randomname_2eproto();
  friend void protobuf_AssignDesc_randomname_2eproto();
  friend void protobuf_ShutdownFile_randomname_2eproto();

  void InitAsDefaultInstance();
  static randomnamemanthird* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_randomnamemanthird : public ::google::protobuf::Message {
 public:
  Sheet_randomnamemanthird();
  virtual ~Sheet_randomnamemanthird();

  Sheet_randomnamemanthird(const Sheet_randomnamemanthird& from);

  inline Sheet_randomnamemanthird& operator=(const Sheet_randomnamemanthird& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_randomnamemanthird& default_instance();

  void Swap(Sheet_randomnamemanthird* other);

  // implements Message ----------------------------------------------

  Sheet_randomnamemanthird* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_randomnamemanthird& from);
  void MergeFrom(const Sheet_randomnamemanthird& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.randomnamemanthird randomnamemanthird_List = 1;
  inline int randomnamemanthird_list_size() const;
  inline void clear_randomnamemanthird_list();
  static const int kRandomnamemanthirdListFieldNumber = 1;
  inline const ::proto_ff::randomnamemanthird& randomnamemanthird_list(int index) const;
  inline ::proto_ff::randomnamemanthird* mutable_randomnamemanthird_list(int index);
  inline ::proto_ff::randomnamemanthird* add_randomnamemanthird_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::randomnamemanthird >&
      randomnamemanthird_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::randomnamemanthird >*
      mutable_randomnamemanthird_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_randomnamemanthird)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::randomnamemanthird > randomnamemanthird_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_randomname_2eproto();
  friend void protobuf_AssignDesc_randomname_2eproto();
  friend void protobuf_ShutdownFile_randomname_2eproto();

  void InitAsDefaultInstance();
  static Sheet_randomnamemanthird* default_instance_;
};
// -------------------------------------------------------------------

class randomnamewomanfirst : public ::google::protobuf::Message {
 public:
  randomnamewomanfirst();
  virtual ~randomnamewomanfirst();

  randomnamewomanfirst(const randomnamewomanfirst& from);

  inline randomnamewomanfirst& operator=(const randomnamewomanfirst& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const randomnamewomanfirst& default_instance();

  void Swap(randomnamewomanfirst* other);

  // implements Message ----------------------------------------------

  randomnamewomanfirst* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const randomnamewomanfirst& from);
  void MergeFrom(const randomnamewomanfirst& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // optional string name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:proto_ff.randomnamewomanfirst)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_name();
  inline void clear_has_name();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* name_;
  ::google::protobuf::int32 id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_randomname_2eproto();
  friend void protobuf_AssignDesc_randomname_2eproto();
  friend void protobuf_ShutdownFile_randomname_2eproto();

  void InitAsDefaultInstance();
  static randomnamewomanfirst* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_randomnamewomanfirst : public ::google::protobuf::Message {
 public:
  Sheet_randomnamewomanfirst();
  virtual ~Sheet_randomnamewomanfirst();

  Sheet_randomnamewomanfirst(const Sheet_randomnamewomanfirst& from);

  inline Sheet_randomnamewomanfirst& operator=(const Sheet_randomnamewomanfirst& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_randomnamewomanfirst& default_instance();

  void Swap(Sheet_randomnamewomanfirst* other);

  // implements Message ----------------------------------------------

  Sheet_randomnamewomanfirst* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_randomnamewomanfirst& from);
  void MergeFrom(const Sheet_randomnamewomanfirst& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.randomnamewomanfirst randomnamewomanfirst_List = 1;
  inline int randomnamewomanfirst_list_size() const;
  inline void clear_randomnamewomanfirst_list();
  static const int kRandomnamewomanfirstListFieldNumber = 1;
  inline const ::proto_ff::randomnamewomanfirst& randomnamewomanfirst_list(int index) const;
  inline ::proto_ff::randomnamewomanfirst* mutable_randomnamewomanfirst_list(int index);
  inline ::proto_ff::randomnamewomanfirst* add_randomnamewomanfirst_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::randomnamewomanfirst >&
      randomnamewomanfirst_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::randomnamewomanfirst >*
      mutable_randomnamewomanfirst_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_randomnamewomanfirst)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::randomnamewomanfirst > randomnamewomanfirst_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_randomname_2eproto();
  friend void protobuf_AssignDesc_randomname_2eproto();
  friend void protobuf_ShutdownFile_randomname_2eproto();

  void InitAsDefaultInstance();
  static Sheet_randomnamewomanfirst* default_instance_;
};
// -------------------------------------------------------------------

class randomnamewomansecond : public ::google::protobuf::Message {
 public:
  randomnamewomansecond();
  virtual ~randomnamewomansecond();

  randomnamewomansecond(const randomnamewomansecond& from);

  inline randomnamewomansecond& operator=(const randomnamewomansecond& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const randomnamewomansecond& default_instance();

  void Swap(randomnamewomansecond* other);

  // implements Message ----------------------------------------------

  randomnamewomansecond* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const randomnamewomansecond& from);
  void MergeFrom(const randomnamewomansecond& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // optional string name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:proto_ff.randomnamewomansecond)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_name();
  inline void clear_has_name();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* name_;
  ::google::protobuf::int32 id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_randomname_2eproto();
  friend void protobuf_AssignDesc_randomname_2eproto();
  friend void protobuf_ShutdownFile_randomname_2eproto();

  void InitAsDefaultInstance();
  static randomnamewomansecond* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_randomnamewomansecond : public ::google::protobuf::Message {
 public:
  Sheet_randomnamewomansecond();
  virtual ~Sheet_randomnamewomansecond();

  Sheet_randomnamewomansecond(const Sheet_randomnamewomansecond& from);

  inline Sheet_randomnamewomansecond& operator=(const Sheet_randomnamewomansecond& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_randomnamewomansecond& default_instance();

  void Swap(Sheet_randomnamewomansecond* other);

  // implements Message ----------------------------------------------

  Sheet_randomnamewomansecond* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_randomnamewomansecond& from);
  void MergeFrom(const Sheet_randomnamewomansecond& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.randomnamewomansecond randomnamewomansecond_List = 1;
  inline int randomnamewomansecond_list_size() const;
  inline void clear_randomnamewomansecond_list();
  static const int kRandomnamewomansecondListFieldNumber = 1;
  inline const ::proto_ff::randomnamewomansecond& randomnamewomansecond_list(int index) const;
  inline ::proto_ff::randomnamewomansecond* mutable_randomnamewomansecond_list(int index);
  inline ::proto_ff::randomnamewomansecond* add_randomnamewomansecond_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::randomnamewomansecond >&
      randomnamewomansecond_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::randomnamewomansecond >*
      mutable_randomnamewomansecond_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_randomnamewomansecond)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::randomnamewomansecond > randomnamewomansecond_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_randomname_2eproto();
  friend void protobuf_AssignDesc_randomname_2eproto();
  friend void protobuf_ShutdownFile_randomname_2eproto();

  void InitAsDefaultInstance();
  static Sheet_randomnamewomansecond* default_instance_;
};
// -------------------------------------------------------------------

class randomnamewomanthird : public ::google::protobuf::Message {
 public:
  randomnamewomanthird();
  virtual ~randomnamewomanthird();

  randomnamewomanthird(const randomnamewomanthird& from);

  inline randomnamewomanthird& operator=(const randomnamewomanthird& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const randomnamewomanthird& default_instance();

  void Swap(randomnamewomanthird* other);

  // implements Message ----------------------------------------------

  randomnamewomanthird* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const randomnamewomanthird& from);
  void MergeFrom(const randomnamewomanthird& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // optional string name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:proto_ff.randomnamewomanthird)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_name();
  inline void clear_has_name();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* name_;
  ::google::protobuf::int32 id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_randomname_2eproto();
  friend void protobuf_AssignDesc_randomname_2eproto();
  friend void protobuf_ShutdownFile_randomname_2eproto();

  void InitAsDefaultInstance();
  static randomnamewomanthird* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_randomnamewomanthird : public ::google::protobuf::Message {
 public:
  Sheet_randomnamewomanthird();
  virtual ~Sheet_randomnamewomanthird();

  Sheet_randomnamewomanthird(const Sheet_randomnamewomanthird& from);

  inline Sheet_randomnamewomanthird& operator=(const Sheet_randomnamewomanthird& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_randomnamewomanthird& default_instance();

  void Swap(Sheet_randomnamewomanthird* other);

  // implements Message ----------------------------------------------

  Sheet_randomnamewomanthird* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_randomnamewomanthird& from);
  void MergeFrom(const Sheet_randomnamewomanthird& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.randomnamewomanthird randomnamewomanthird_List = 1;
  inline int randomnamewomanthird_list_size() const;
  inline void clear_randomnamewomanthird_list();
  static const int kRandomnamewomanthirdListFieldNumber = 1;
  inline const ::proto_ff::randomnamewomanthird& randomnamewomanthird_list(int index) const;
  inline ::proto_ff::randomnamewomanthird* mutable_randomnamewomanthird_list(int index);
  inline ::proto_ff::randomnamewomanthird* add_randomnamewomanthird_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::randomnamewomanthird >&
      randomnamewomanthird_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::randomnamewomanthird >*
      mutable_randomnamewomanthird_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_randomnamewomanthird)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::randomnamewomanthird > randomnamewomanthird_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_randomname_2eproto();
  friend void protobuf_AssignDesc_randomname_2eproto();
  friend void protobuf_ShutdownFile_randomname_2eproto();

  void InitAsDefaultInstance();
  static Sheet_randomnamewomanthird* default_instance_;
};
// ===================================================================


// ===================================================================

// randomnamemanfirst

// optional int32 id = 1;
inline bool randomnamemanfirst::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void randomnamemanfirst::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void randomnamemanfirst::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void randomnamemanfirst::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 randomnamemanfirst::id() const {
  return id_;
}
inline void randomnamemanfirst::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// optional string name = 2;
inline bool randomnamemanfirst::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void randomnamemanfirst::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void randomnamemanfirst::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void randomnamemanfirst::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& randomnamemanfirst::name() const {
  return *name_;
}
inline void randomnamemanfirst::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void randomnamemanfirst::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void randomnamemanfirst::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* randomnamemanfirst::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* randomnamemanfirst::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void randomnamemanfirst::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// Sheet_randomnamemanfirst

// repeated .proto_ff.randomnamemanfirst randomnamemanfirst_List = 1;
inline int Sheet_randomnamemanfirst::randomnamemanfirst_list_size() const {
  return randomnamemanfirst_list_.size();
}
inline void Sheet_randomnamemanfirst::clear_randomnamemanfirst_list() {
  randomnamemanfirst_list_.Clear();
}
inline const ::proto_ff::randomnamemanfirst& Sheet_randomnamemanfirst::randomnamemanfirst_list(int index) const {
  return randomnamemanfirst_list_.Get(index);
}
inline ::proto_ff::randomnamemanfirst* Sheet_randomnamemanfirst::mutable_randomnamemanfirst_list(int index) {
  return randomnamemanfirst_list_.Mutable(index);
}
inline ::proto_ff::randomnamemanfirst* Sheet_randomnamemanfirst::add_randomnamemanfirst_list() {
  return randomnamemanfirst_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::randomnamemanfirst >&
Sheet_randomnamemanfirst::randomnamemanfirst_list() const {
  return randomnamemanfirst_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::randomnamemanfirst >*
Sheet_randomnamemanfirst::mutable_randomnamemanfirst_list() {
  return &randomnamemanfirst_list_;
}

// -------------------------------------------------------------------

// randomnamemansecond

// optional int32 id = 1;
inline bool randomnamemansecond::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void randomnamemansecond::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void randomnamemansecond::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void randomnamemansecond::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 randomnamemansecond::id() const {
  return id_;
}
inline void randomnamemansecond::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// optional string name = 2;
inline bool randomnamemansecond::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void randomnamemansecond::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void randomnamemansecond::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void randomnamemansecond::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& randomnamemansecond::name() const {
  return *name_;
}
inline void randomnamemansecond::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void randomnamemansecond::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void randomnamemansecond::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* randomnamemansecond::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* randomnamemansecond::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void randomnamemansecond::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// Sheet_randomnamemansecond

// repeated .proto_ff.randomnamemansecond randomnamemansecond_List = 1;
inline int Sheet_randomnamemansecond::randomnamemansecond_list_size() const {
  return randomnamemansecond_list_.size();
}
inline void Sheet_randomnamemansecond::clear_randomnamemansecond_list() {
  randomnamemansecond_list_.Clear();
}
inline const ::proto_ff::randomnamemansecond& Sheet_randomnamemansecond::randomnamemansecond_list(int index) const {
  return randomnamemansecond_list_.Get(index);
}
inline ::proto_ff::randomnamemansecond* Sheet_randomnamemansecond::mutable_randomnamemansecond_list(int index) {
  return randomnamemansecond_list_.Mutable(index);
}
inline ::proto_ff::randomnamemansecond* Sheet_randomnamemansecond::add_randomnamemansecond_list() {
  return randomnamemansecond_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::randomnamemansecond >&
Sheet_randomnamemansecond::randomnamemansecond_list() const {
  return randomnamemansecond_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::randomnamemansecond >*
Sheet_randomnamemansecond::mutable_randomnamemansecond_list() {
  return &randomnamemansecond_list_;
}

// -------------------------------------------------------------------

// randomnamemanthird

// optional int32 id = 1;
inline bool randomnamemanthird::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void randomnamemanthird::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void randomnamemanthird::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void randomnamemanthird::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 randomnamemanthird::id() const {
  return id_;
}
inline void randomnamemanthird::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// optional string name = 2;
inline bool randomnamemanthird::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void randomnamemanthird::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void randomnamemanthird::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void randomnamemanthird::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& randomnamemanthird::name() const {
  return *name_;
}
inline void randomnamemanthird::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void randomnamemanthird::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void randomnamemanthird::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* randomnamemanthird::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* randomnamemanthird::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void randomnamemanthird::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// Sheet_randomnamemanthird

// repeated .proto_ff.randomnamemanthird randomnamemanthird_List = 1;
inline int Sheet_randomnamemanthird::randomnamemanthird_list_size() const {
  return randomnamemanthird_list_.size();
}
inline void Sheet_randomnamemanthird::clear_randomnamemanthird_list() {
  randomnamemanthird_list_.Clear();
}
inline const ::proto_ff::randomnamemanthird& Sheet_randomnamemanthird::randomnamemanthird_list(int index) const {
  return randomnamemanthird_list_.Get(index);
}
inline ::proto_ff::randomnamemanthird* Sheet_randomnamemanthird::mutable_randomnamemanthird_list(int index) {
  return randomnamemanthird_list_.Mutable(index);
}
inline ::proto_ff::randomnamemanthird* Sheet_randomnamemanthird::add_randomnamemanthird_list() {
  return randomnamemanthird_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::randomnamemanthird >&
Sheet_randomnamemanthird::randomnamemanthird_list() const {
  return randomnamemanthird_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::randomnamemanthird >*
Sheet_randomnamemanthird::mutable_randomnamemanthird_list() {
  return &randomnamemanthird_list_;
}

// -------------------------------------------------------------------

// randomnamewomanfirst

// optional int32 id = 1;
inline bool randomnamewomanfirst::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void randomnamewomanfirst::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void randomnamewomanfirst::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void randomnamewomanfirst::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 randomnamewomanfirst::id() const {
  return id_;
}
inline void randomnamewomanfirst::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// optional string name = 2;
inline bool randomnamewomanfirst::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void randomnamewomanfirst::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void randomnamewomanfirst::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void randomnamewomanfirst::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& randomnamewomanfirst::name() const {
  return *name_;
}
inline void randomnamewomanfirst::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void randomnamewomanfirst::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void randomnamewomanfirst::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* randomnamewomanfirst::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* randomnamewomanfirst::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void randomnamewomanfirst::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// Sheet_randomnamewomanfirst

// repeated .proto_ff.randomnamewomanfirst randomnamewomanfirst_List = 1;
inline int Sheet_randomnamewomanfirst::randomnamewomanfirst_list_size() const {
  return randomnamewomanfirst_list_.size();
}
inline void Sheet_randomnamewomanfirst::clear_randomnamewomanfirst_list() {
  randomnamewomanfirst_list_.Clear();
}
inline const ::proto_ff::randomnamewomanfirst& Sheet_randomnamewomanfirst::randomnamewomanfirst_list(int index) const {
  return randomnamewomanfirst_list_.Get(index);
}
inline ::proto_ff::randomnamewomanfirst* Sheet_randomnamewomanfirst::mutable_randomnamewomanfirst_list(int index) {
  return randomnamewomanfirst_list_.Mutable(index);
}
inline ::proto_ff::randomnamewomanfirst* Sheet_randomnamewomanfirst::add_randomnamewomanfirst_list() {
  return randomnamewomanfirst_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::randomnamewomanfirst >&
Sheet_randomnamewomanfirst::randomnamewomanfirst_list() const {
  return randomnamewomanfirst_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::randomnamewomanfirst >*
Sheet_randomnamewomanfirst::mutable_randomnamewomanfirst_list() {
  return &randomnamewomanfirst_list_;
}

// -------------------------------------------------------------------

// randomnamewomansecond

// optional int32 id = 1;
inline bool randomnamewomansecond::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void randomnamewomansecond::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void randomnamewomansecond::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void randomnamewomansecond::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 randomnamewomansecond::id() const {
  return id_;
}
inline void randomnamewomansecond::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// optional string name = 2;
inline bool randomnamewomansecond::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void randomnamewomansecond::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void randomnamewomansecond::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void randomnamewomansecond::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& randomnamewomansecond::name() const {
  return *name_;
}
inline void randomnamewomansecond::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void randomnamewomansecond::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void randomnamewomansecond::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* randomnamewomansecond::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* randomnamewomansecond::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void randomnamewomansecond::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// Sheet_randomnamewomansecond

// repeated .proto_ff.randomnamewomansecond randomnamewomansecond_List = 1;
inline int Sheet_randomnamewomansecond::randomnamewomansecond_list_size() const {
  return randomnamewomansecond_list_.size();
}
inline void Sheet_randomnamewomansecond::clear_randomnamewomansecond_list() {
  randomnamewomansecond_list_.Clear();
}
inline const ::proto_ff::randomnamewomansecond& Sheet_randomnamewomansecond::randomnamewomansecond_list(int index) const {
  return randomnamewomansecond_list_.Get(index);
}
inline ::proto_ff::randomnamewomansecond* Sheet_randomnamewomansecond::mutable_randomnamewomansecond_list(int index) {
  return randomnamewomansecond_list_.Mutable(index);
}
inline ::proto_ff::randomnamewomansecond* Sheet_randomnamewomansecond::add_randomnamewomansecond_list() {
  return randomnamewomansecond_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::randomnamewomansecond >&
Sheet_randomnamewomansecond::randomnamewomansecond_list() const {
  return randomnamewomansecond_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::randomnamewomansecond >*
Sheet_randomnamewomansecond::mutable_randomnamewomansecond_list() {
  return &randomnamewomansecond_list_;
}

// -------------------------------------------------------------------

// randomnamewomanthird

// optional int32 id = 1;
inline bool randomnamewomanthird::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void randomnamewomanthird::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void randomnamewomanthird::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void randomnamewomanthird::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 randomnamewomanthird::id() const {
  return id_;
}
inline void randomnamewomanthird::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// optional string name = 2;
inline bool randomnamewomanthird::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void randomnamewomanthird::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void randomnamewomanthird::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void randomnamewomanthird::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& randomnamewomanthird::name() const {
  return *name_;
}
inline void randomnamewomanthird::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void randomnamewomanthird::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void randomnamewomanthird::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* randomnamewomanthird::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* randomnamewomanthird::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void randomnamewomanthird::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// Sheet_randomnamewomanthird

// repeated .proto_ff.randomnamewomanthird randomnamewomanthird_List = 1;
inline int Sheet_randomnamewomanthird::randomnamewomanthird_list_size() const {
  return randomnamewomanthird_list_.size();
}
inline void Sheet_randomnamewomanthird::clear_randomnamewomanthird_list() {
  randomnamewomanthird_list_.Clear();
}
inline const ::proto_ff::randomnamewomanthird& Sheet_randomnamewomanthird::randomnamewomanthird_list(int index) const {
  return randomnamewomanthird_list_.Get(index);
}
inline ::proto_ff::randomnamewomanthird* Sheet_randomnamewomanthird::mutable_randomnamewomanthird_list(int index) {
  return randomnamewomanthird_list_.Mutable(index);
}
inline ::proto_ff::randomnamewomanthird* Sheet_randomnamewomanthird::add_randomnamewomanthird_list() {
  return randomnamewomanthird_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::randomnamewomanthird >&
Sheet_randomnamewomanthird::randomnamewomanthird_list() const {
  return randomnamewomanthird_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::randomnamewomanthird >*
Sheet_randomnamewomanthird::mutable_randomnamewomanthird_list() {
  return &randomnamewomanthird_list_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto_ff

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_randomname_2eproto__INCLUDED
