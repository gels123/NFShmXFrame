// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: randomname.proto

#ifndef PROTOBUF_randomname_2eproto__INCLUDED
#define PROTOBUF_randomname_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "yd_fieldoptions.pb.h"
// @@protoc_insertion_point(includes)

namespace proto_ff {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_randomname_2eproto();
void protobuf_AssignDesc_randomname_2eproto();
void protobuf_ShutdownFile_randomname_2eproto();

class E_RandomnameManfirst;
class Sheet_RandomnameManfirst;
class E_RandomnameMansecond;
class Sheet_RandomnameMansecond;
class E_RandomnameManthird;
class Sheet_RandomnameManthird;
class E_RandomnameWomanfirst;
class Sheet_RandomnameWomanfirst;
class E_RandomnameWomansecond;
class Sheet_RandomnameWomansecond;
class E_RandomnameWomanthird;
class Sheet_RandomnameWomanthird;

// ===================================================================

class E_RandomnameManfirst : public ::google::protobuf::Message {
 public:
  E_RandomnameManfirst();
  virtual ~E_RandomnameManfirst();

  E_RandomnameManfirst(const E_RandomnameManfirst& from);

  inline E_RandomnameManfirst& operator=(const E_RandomnameManfirst& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_RandomnameManfirst& default_instance();

  void Swap(E_RandomnameManfirst* other);

  // implements Message ----------------------------------------------

  E_RandomnameManfirst* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_RandomnameManfirst& from);
  void MergeFrom(const E_RandomnameManfirst& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 m_id = 1;
  inline bool has_m_id() const;
  inline void clear_m_id();
  static const int kMIdFieldNumber = 1;
  inline ::google::protobuf::int32 m_id() const;
  inline void set_m_id(::google::protobuf::int32 value);

  // optional string m_name = 2;
  inline bool has_m_name() const;
  inline void clear_m_name();
  static const int kMNameFieldNumber = 2;
  inline const ::std::string& m_name() const;
  inline void set_m_name(const ::std::string& value);
  inline void set_m_name(const char* value);
  inline void set_m_name(const char* value, size_t size);
  inline ::std::string* mutable_m_name();
  inline ::std::string* release_m_name();
  inline void set_allocated_m_name(::std::string* m_name);

  // @@protoc_insertion_point(class_scope:proto_ff.E_RandomnameManfirst)
 private:
  inline void set_has_m_id();
  inline void clear_has_m_id();
  inline void set_has_m_name();
  inline void clear_has_m_name();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* m_name_;
  ::google::protobuf::int32 m_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_randomname_2eproto();
  friend void protobuf_AssignDesc_randomname_2eproto();
  friend void protobuf_ShutdownFile_randomname_2eproto();

  void InitAsDefaultInstance();
  static E_RandomnameManfirst* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_RandomnameManfirst : public ::google::protobuf::Message {
 public:
  Sheet_RandomnameManfirst();
  virtual ~Sheet_RandomnameManfirst();

  Sheet_RandomnameManfirst(const Sheet_RandomnameManfirst& from);

  inline Sheet_RandomnameManfirst& operator=(const Sheet_RandomnameManfirst& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_RandomnameManfirst& default_instance();

  void Swap(Sheet_RandomnameManfirst* other);

  // implements Message ----------------------------------------------

  Sheet_RandomnameManfirst* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_RandomnameManfirst& from);
  void MergeFrom(const Sheet_RandomnameManfirst& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.E_RandomnameManfirst E_RandomnameManfirst_List = 1;
  inline int e_randomnamemanfirst_list_size() const;
  inline void clear_e_randomnamemanfirst_list();
  static const int kERandomnameManfirstListFieldNumber = 1;
  inline const ::proto_ff::E_RandomnameManfirst& e_randomnamemanfirst_list(int index) const;
  inline ::proto_ff::E_RandomnameManfirst* mutable_e_randomnamemanfirst_list(int index);
  inline ::proto_ff::E_RandomnameManfirst* add_e_randomnamemanfirst_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_RandomnameManfirst >&
      e_randomnamemanfirst_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_RandomnameManfirst >*
      mutable_e_randomnamemanfirst_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_RandomnameManfirst)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_RandomnameManfirst > e_randomnamemanfirst_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_randomname_2eproto();
  friend void protobuf_AssignDesc_randomname_2eproto();
  friend void protobuf_ShutdownFile_randomname_2eproto();

  void InitAsDefaultInstance();
  static Sheet_RandomnameManfirst* default_instance_;
};
// -------------------------------------------------------------------

class E_RandomnameMansecond : public ::google::protobuf::Message {
 public:
  E_RandomnameMansecond();
  virtual ~E_RandomnameMansecond();

  E_RandomnameMansecond(const E_RandomnameMansecond& from);

  inline E_RandomnameMansecond& operator=(const E_RandomnameMansecond& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_RandomnameMansecond& default_instance();

  void Swap(E_RandomnameMansecond* other);

  // implements Message ----------------------------------------------

  E_RandomnameMansecond* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_RandomnameMansecond& from);
  void MergeFrom(const E_RandomnameMansecond& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 m_id = 1;
  inline bool has_m_id() const;
  inline void clear_m_id();
  static const int kMIdFieldNumber = 1;
  inline ::google::protobuf::int32 m_id() const;
  inline void set_m_id(::google::protobuf::int32 value);

  // optional string m_name = 2;
  inline bool has_m_name() const;
  inline void clear_m_name();
  static const int kMNameFieldNumber = 2;
  inline const ::std::string& m_name() const;
  inline void set_m_name(const ::std::string& value);
  inline void set_m_name(const char* value);
  inline void set_m_name(const char* value, size_t size);
  inline ::std::string* mutable_m_name();
  inline ::std::string* release_m_name();
  inline void set_allocated_m_name(::std::string* m_name);

  // @@protoc_insertion_point(class_scope:proto_ff.E_RandomnameMansecond)
 private:
  inline void set_has_m_id();
  inline void clear_has_m_id();
  inline void set_has_m_name();
  inline void clear_has_m_name();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* m_name_;
  ::google::protobuf::int32 m_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_randomname_2eproto();
  friend void protobuf_AssignDesc_randomname_2eproto();
  friend void protobuf_ShutdownFile_randomname_2eproto();

  void InitAsDefaultInstance();
  static E_RandomnameMansecond* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_RandomnameMansecond : public ::google::protobuf::Message {
 public:
  Sheet_RandomnameMansecond();
  virtual ~Sheet_RandomnameMansecond();

  Sheet_RandomnameMansecond(const Sheet_RandomnameMansecond& from);

  inline Sheet_RandomnameMansecond& operator=(const Sheet_RandomnameMansecond& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_RandomnameMansecond& default_instance();

  void Swap(Sheet_RandomnameMansecond* other);

  // implements Message ----------------------------------------------

  Sheet_RandomnameMansecond* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_RandomnameMansecond& from);
  void MergeFrom(const Sheet_RandomnameMansecond& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.E_RandomnameMansecond E_RandomnameMansecond_List = 1;
  inline int e_randomnamemansecond_list_size() const;
  inline void clear_e_randomnamemansecond_list();
  static const int kERandomnameMansecondListFieldNumber = 1;
  inline const ::proto_ff::E_RandomnameMansecond& e_randomnamemansecond_list(int index) const;
  inline ::proto_ff::E_RandomnameMansecond* mutable_e_randomnamemansecond_list(int index);
  inline ::proto_ff::E_RandomnameMansecond* add_e_randomnamemansecond_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_RandomnameMansecond >&
      e_randomnamemansecond_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_RandomnameMansecond >*
      mutable_e_randomnamemansecond_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_RandomnameMansecond)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_RandomnameMansecond > e_randomnamemansecond_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_randomname_2eproto();
  friend void protobuf_AssignDesc_randomname_2eproto();
  friend void protobuf_ShutdownFile_randomname_2eproto();

  void InitAsDefaultInstance();
  static Sheet_RandomnameMansecond* default_instance_;
};
// -------------------------------------------------------------------

class E_RandomnameManthird : public ::google::protobuf::Message {
 public:
  E_RandomnameManthird();
  virtual ~E_RandomnameManthird();

  E_RandomnameManthird(const E_RandomnameManthird& from);

  inline E_RandomnameManthird& operator=(const E_RandomnameManthird& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_RandomnameManthird& default_instance();

  void Swap(E_RandomnameManthird* other);

  // implements Message ----------------------------------------------

  E_RandomnameManthird* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_RandomnameManthird& from);
  void MergeFrom(const E_RandomnameManthird& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 m_id = 1;
  inline bool has_m_id() const;
  inline void clear_m_id();
  static const int kMIdFieldNumber = 1;
  inline ::google::protobuf::int32 m_id() const;
  inline void set_m_id(::google::protobuf::int32 value);

  // optional string m_name = 2;
  inline bool has_m_name() const;
  inline void clear_m_name();
  static const int kMNameFieldNumber = 2;
  inline const ::std::string& m_name() const;
  inline void set_m_name(const ::std::string& value);
  inline void set_m_name(const char* value);
  inline void set_m_name(const char* value, size_t size);
  inline ::std::string* mutable_m_name();
  inline ::std::string* release_m_name();
  inline void set_allocated_m_name(::std::string* m_name);

  // @@protoc_insertion_point(class_scope:proto_ff.E_RandomnameManthird)
 private:
  inline void set_has_m_id();
  inline void clear_has_m_id();
  inline void set_has_m_name();
  inline void clear_has_m_name();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* m_name_;
  ::google::protobuf::int32 m_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_randomname_2eproto();
  friend void protobuf_AssignDesc_randomname_2eproto();
  friend void protobuf_ShutdownFile_randomname_2eproto();

  void InitAsDefaultInstance();
  static E_RandomnameManthird* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_RandomnameManthird : public ::google::protobuf::Message {
 public:
  Sheet_RandomnameManthird();
  virtual ~Sheet_RandomnameManthird();

  Sheet_RandomnameManthird(const Sheet_RandomnameManthird& from);

  inline Sheet_RandomnameManthird& operator=(const Sheet_RandomnameManthird& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_RandomnameManthird& default_instance();

  void Swap(Sheet_RandomnameManthird* other);

  // implements Message ----------------------------------------------

  Sheet_RandomnameManthird* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_RandomnameManthird& from);
  void MergeFrom(const Sheet_RandomnameManthird& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.E_RandomnameManthird E_RandomnameManthird_List = 1;
  inline int e_randomnamemanthird_list_size() const;
  inline void clear_e_randomnamemanthird_list();
  static const int kERandomnameManthirdListFieldNumber = 1;
  inline const ::proto_ff::E_RandomnameManthird& e_randomnamemanthird_list(int index) const;
  inline ::proto_ff::E_RandomnameManthird* mutable_e_randomnamemanthird_list(int index);
  inline ::proto_ff::E_RandomnameManthird* add_e_randomnamemanthird_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_RandomnameManthird >&
      e_randomnamemanthird_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_RandomnameManthird >*
      mutable_e_randomnamemanthird_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_RandomnameManthird)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_RandomnameManthird > e_randomnamemanthird_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_randomname_2eproto();
  friend void protobuf_AssignDesc_randomname_2eproto();
  friend void protobuf_ShutdownFile_randomname_2eproto();

  void InitAsDefaultInstance();
  static Sheet_RandomnameManthird* default_instance_;
};
// -------------------------------------------------------------------

class E_RandomnameWomanfirst : public ::google::protobuf::Message {
 public:
  E_RandomnameWomanfirst();
  virtual ~E_RandomnameWomanfirst();

  E_RandomnameWomanfirst(const E_RandomnameWomanfirst& from);

  inline E_RandomnameWomanfirst& operator=(const E_RandomnameWomanfirst& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_RandomnameWomanfirst& default_instance();

  void Swap(E_RandomnameWomanfirst* other);

  // implements Message ----------------------------------------------

  E_RandomnameWomanfirst* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_RandomnameWomanfirst& from);
  void MergeFrom(const E_RandomnameWomanfirst& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 m_id = 1;
  inline bool has_m_id() const;
  inline void clear_m_id();
  static const int kMIdFieldNumber = 1;
  inline ::google::protobuf::int32 m_id() const;
  inline void set_m_id(::google::protobuf::int32 value);

  // optional string m_name = 2;
  inline bool has_m_name() const;
  inline void clear_m_name();
  static const int kMNameFieldNumber = 2;
  inline const ::std::string& m_name() const;
  inline void set_m_name(const ::std::string& value);
  inline void set_m_name(const char* value);
  inline void set_m_name(const char* value, size_t size);
  inline ::std::string* mutable_m_name();
  inline ::std::string* release_m_name();
  inline void set_allocated_m_name(::std::string* m_name);

  // @@protoc_insertion_point(class_scope:proto_ff.E_RandomnameWomanfirst)
 private:
  inline void set_has_m_id();
  inline void clear_has_m_id();
  inline void set_has_m_name();
  inline void clear_has_m_name();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* m_name_;
  ::google::protobuf::int32 m_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_randomname_2eproto();
  friend void protobuf_AssignDesc_randomname_2eproto();
  friend void protobuf_ShutdownFile_randomname_2eproto();

  void InitAsDefaultInstance();
  static E_RandomnameWomanfirst* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_RandomnameWomanfirst : public ::google::protobuf::Message {
 public:
  Sheet_RandomnameWomanfirst();
  virtual ~Sheet_RandomnameWomanfirst();

  Sheet_RandomnameWomanfirst(const Sheet_RandomnameWomanfirst& from);

  inline Sheet_RandomnameWomanfirst& operator=(const Sheet_RandomnameWomanfirst& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_RandomnameWomanfirst& default_instance();

  void Swap(Sheet_RandomnameWomanfirst* other);

  // implements Message ----------------------------------------------

  Sheet_RandomnameWomanfirst* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_RandomnameWomanfirst& from);
  void MergeFrom(const Sheet_RandomnameWomanfirst& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.E_RandomnameWomanfirst E_RandomnameWomanfirst_List = 1;
  inline int e_randomnamewomanfirst_list_size() const;
  inline void clear_e_randomnamewomanfirst_list();
  static const int kERandomnameWomanfirstListFieldNumber = 1;
  inline const ::proto_ff::E_RandomnameWomanfirst& e_randomnamewomanfirst_list(int index) const;
  inline ::proto_ff::E_RandomnameWomanfirst* mutable_e_randomnamewomanfirst_list(int index);
  inline ::proto_ff::E_RandomnameWomanfirst* add_e_randomnamewomanfirst_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_RandomnameWomanfirst >&
      e_randomnamewomanfirst_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_RandomnameWomanfirst >*
      mutable_e_randomnamewomanfirst_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_RandomnameWomanfirst)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_RandomnameWomanfirst > e_randomnamewomanfirst_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_randomname_2eproto();
  friend void protobuf_AssignDesc_randomname_2eproto();
  friend void protobuf_ShutdownFile_randomname_2eproto();

  void InitAsDefaultInstance();
  static Sheet_RandomnameWomanfirst* default_instance_;
};
// -------------------------------------------------------------------

class E_RandomnameWomansecond : public ::google::protobuf::Message {
 public:
  E_RandomnameWomansecond();
  virtual ~E_RandomnameWomansecond();

  E_RandomnameWomansecond(const E_RandomnameWomansecond& from);

  inline E_RandomnameWomansecond& operator=(const E_RandomnameWomansecond& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_RandomnameWomansecond& default_instance();

  void Swap(E_RandomnameWomansecond* other);

  // implements Message ----------------------------------------------

  E_RandomnameWomansecond* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_RandomnameWomansecond& from);
  void MergeFrom(const E_RandomnameWomansecond& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 m_id = 1;
  inline bool has_m_id() const;
  inline void clear_m_id();
  static const int kMIdFieldNumber = 1;
  inline ::google::protobuf::int32 m_id() const;
  inline void set_m_id(::google::protobuf::int32 value);

  // optional string m_name = 2;
  inline bool has_m_name() const;
  inline void clear_m_name();
  static const int kMNameFieldNumber = 2;
  inline const ::std::string& m_name() const;
  inline void set_m_name(const ::std::string& value);
  inline void set_m_name(const char* value);
  inline void set_m_name(const char* value, size_t size);
  inline ::std::string* mutable_m_name();
  inline ::std::string* release_m_name();
  inline void set_allocated_m_name(::std::string* m_name);

  // @@protoc_insertion_point(class_scope:proto_ff.E_RandomnameWomansecond)
 private:
  inline void set_has_m_id();
  inline void clear_has_m_id();
  inline void set_has_m_name();
  inline void clear_has_m_name();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* m_name_;
  ::google::protobuf::int32 m_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_randomname_2eproto();
  friend void protobuf_AssignDesc_randomname_2eproto();
  friend void protobuf_ShutdownFile_randomname_2eproto();

  void InitAsDefaultInstance();
  static E_RandomnameWomansecond* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_RandomnameWomansecond : public ::google::protobuf::Message {
 public:
  Sheet_RandomnameWomansecond();
  virtual ~Sheet_RandomnameWomansecond();

  Sheet_RandomnameWomansecond(const Sheet_RandomnameWomansecond& from);

  inline Sheet_RandomnameWomansecond& operator=(const Sheet_RandomnameWomansecond& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_RandomnameWomansecond& default_instance();

  void Swap(Sheet_RandomnameWomansecond* other);

  // implements Message ----------------------------------------------

  Sheet_RandomnameWomansecond* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_RandomnameWomansecond& from);
  void MergeFrom(const Sheet_RandomnameWomansecond& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.E_RandomnameWomansecond E_RandomnameWomansecond_List = 1;
  inline int e_randomnamewomansecond_list_size() const;
  inline void clear_e_randomnamewomansecond_list();
  static const int kERandomnameWomansecondListFieldNumber = 1;
  inline const ::proto_ff::E_RandomnameWomansecond& e_randomnamewomansecond_list(int index) const;
  inline ::proto_ff::E_RandomnameWomansecond* mutable_e_randomnamewomansecond_list(int index);
  inline ::proto_ff::E_RandomnameWomansecond* add_e_randomnamewomansecond_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_RandomnameWomansecond >&
      e_randomnamewomansecond_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_RandomnameWomansecond >*
      mutable_e_randomnamewomansecond_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_RandomnameWomansecond)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_RandomnameWomansecond > e_randomnamewomansecond_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_randomname_2eproto();
  friend void protobuf_AssignDesc_randomname_2eproto();
  friend void protobuf_ShutdownFile_randomname_2eproto();

  void InitAsDefaultInstance();
  static Sheet_RandomnameWomansecond* default_instance_;
};
// -------------------------------------------------------------------

class E_RandomnameWomanthird : public ::google::protobuf::Message {
 public:
  E_RandomnameWomanthird();
  virtual ~E_RandomnameWomanthird();

  E_RandomnameWomanthird(const E_RandomnameWomanthird& from);

  inline E_RandomnameWomanthird& operator=(const E_RandomnameWomanthird& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E_RandomnameWomanthird& default_instance();

  void Swap(E_RandomnameWomanthird* other);

  // implements Message ----------------------------------------------

  E_RandomnameWomanthird* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E_RandomnameWomanthird& from);
  void MergeFrom(const E_RandomnameWomanthird& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 m_id = 1;
  inline bool has_m_id() const;
  inline void clear_m_id();
  static const int kMIdFieldNumber = 1;
  inline ::google::protobuf::int32 m_id() const;
  inline void set_m_id(::google::protobuf::int32 value);

  // optional string m_name = 2;
  inline bool has_m_name() const;
  inline void clear_m_name();
  static const int kMNameFieldNumber = 2;
  inline const ::std::string& m_name() const;
  inline void set_m_name(const ::std::string& value);
  inline void set_m_name(const char* value);
  inline void set_m_name(const char* value, size_t size);
  inline ::std::string* mutable_m_name();
  inline ::std::string* release_m_name();
  inline void set_allocated_m_name(::std::string* m_name);

  // @@protoc_insertion_point(class_scope:proto_ff.E_RandomnameWomanthird)
 private:
  inline void set_has_m_id();
  inline void clear_has_m_id();
  inline void set_has_m_name();
  inline void clear_has_m_name();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* m_name_;
  ::google::protobuf::int32 m_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_randomname_2eproto();
  friend void protobuf_AssignDesc_randomname_2eproto();
  friend void protobuf_ShutdownFile_randomname_2eproto();

  void InitAsDefaultInstance();
  static E_RandomnameWomanthird* default_instance_;
};
// -------------------------------------------------------------------

class Sheet_RandomnameWomanthird : public ::google::protobuf::Message {
 public:
  Sheet_RandomnameWomanthird();
  virtual ~Sheet_RandomnameWomanthird();

  Sheet_RandomnameWomanthird(const Sheet_RandomnameWomanthird& from);

  inline Sheet_RandomnameWomanthird& operator=(const Sheet_RandomnameWomanthird& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sheet_RandomnameWomanthird& default_instance();

  void Swap(Sheet_RandomnameWomanthird* other);

  // implements Message ----------------------------------------------

  Sheet_RandomnameWomanthird* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sheet_RandomnameWomanthird& from);
  void MergeFrom(const Sheet_RandomnameWomanthird& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto_ff.E_RandomnameWomanthird E_RandomnameWomanthird_List = 1;
  inline int e_randomnamewomanthird_list_size() const;
  inline void clear_e_randomnamewomanthird_list();
  static const int kERandomnameWomanthirdListFieldNumber = 1;
  inline const ::proto_ff::E_RandomnameWomanthird& e_randomnamewomanthird_list(int index) const;
  inline ::proto_ff::E_RandomnameWomanthird* mutable_e_randomnamewomanthird_list(int index);
  inline ::proto_ff::E_RandomnameWomanthird* add_e_randomnamewomanthird_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_RandomnameWomanthird >&
      e_randomnamewomanthird_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_RandomnameWomanthird >*
      mutable_e_randomnamewomanthird_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Sheet_RandomnameWomanthird)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::proto_ff::E_RandomnameWomanthird > e_randomnamewomanthird_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_randomname_2eproto();
  friend void protobuf_AssignDesc_randomname_2eproto();
  friend void protobuf_ShutdownFile_randomname_2eproto();

  void InitAsDefaultInstance();
  static Sheet_RandomnameWomanthird* default_instance_;
};
// ===================================================================


// ===================================================================

// E_RandomnameManfirst

// optional int32 m_id = 1;
inline bool E_RandomnameManfirst::has_m_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_RandomnameManfirst::set_has_m_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_RandomnameManfirst::clear_has_m_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_RandomnameManfirst::clear_m_id() {
  m_id_ = 0;
  clear_has_m_id();
}
inline ::google::protobuf::int32 E_RandomnameManfirst::m_id() const {
  return m_id_;
}
inline void E_RandomnameManfirst::set_m_id(::google::protobuf::int32 value) {
  set_has_m_id();
  m_id_ = value;
}

// optional string m_name = 2;
inline bool E_RandomnameManfirst::has_m_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_RandomnameManfirst::set_has_m_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_RandomnameManfirst::clear_has_m_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_RandomnameManfirst::clear_m_name() {
  if (m_name_ != &::google::protobuf::internal::kEmptyString) {
    m_name_->clear();
  }
  clear_has_m_name();
}
inline const ::std::string& E_RandomnameManfirst::m_name() const {
  return *m_name_;
}
inline void E_RandomnameManfirst::set_m_name(const ::std::string& value) {
  set_has_m_name();
  if (m_name_ == &::google::protobuf::internal::kEmptyString) {
    m_name_ = new ::std::string;
  }
  m_name_->assign(value);
}
inline void E_RandomnameManfirst::set_m_name(const char* value) {
  set_has_m_name();
  if (m_name_ == &::google::protobuf::internal::kEmptyString) {
    m_name_ = new ::std::string;
  }
  m_name_->assign(value);
}
inline void E_RandomnameManfirst::set_m_name(const char* value, size_t size) {
  set_has_m_name();
  if (m_name_ == &::google::protobuf::internal::kEmptyString) {
    m_name_ = new ::std::string;
  }
  m_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* E_RandomnameManfirst::mutable_m_name() {
  set_has_m_name();
  if (m_name_ == &::google::protobuf::internal::kEmptyString) {
    m_name_ = new ::std::string;
  }
  return m_name_;
}
inline ::std::string* E_RandomnameManfirst::release_m_name() {
  clear_has_m_name();
  if (m_name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = m_name_;
    m_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void E_RandomnameManfirst::set_allocated_m_name(::std::string* m_name) {
  if (m_name_ != &::google::protobuf::internal::kEmptyString) {
    delete m_name_;
  }
  if (m_name) {
    set_has_m_name();
    m_name_ = m_name;
  } else {
    clear_has_m_name();
    m_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// Sheet_RandomnameManfirst

// repeated .proto_ff.E_RandomnameManfirst E_RandomnameManfirst_List = 1;
inline int Sheet_RandomnameManfirst::e_randomnamemanfirst_list_size() const {
  return e_randomnamemanfirst_list_.size();
}
inline void Sheet_RandomnameManfirst::clear_e_randomnamemanfirst_list() {
  e_randomnamemanfirst_list_.Clear();
}
inline const ::proto_ff::E_RandomnameManfirst& Sheet_RandomnameManfirst::e_randomnamemanfirst_list(int index) const {
  return e_randomnamemanfirst_list_.Get(index);
}
inline ::proto_ff::E_RandomnameManfirst* Sheet_RandomnameManfirst::mutable_e_randomnamemanfirst_list(int index) {
  return e_randomnamemanfirst_list_.Mutable(index);
}
inline ::proto_ff::E_RandomnameManfirst* Sheet_RandomnameManfirst::add_e_randomnamemanfirst_list() {
  return e_randomnamemanfirst_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_RandomnameManfirst >&
Sheet_RandomnameManfirst::e_randomnamemanfirst_list() const {
  return e_randomnamemanfirst_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_RandomnameManfirst >*
Sheet_RandomnameManfirst::mutable_e_randomnamemanfirst_list() {
  return &e_randomnamemanfirst_list_;
}

// -------------------------------------------------------------------

// E_RandomnameMansecond

// optional int32 m_id = 1;
inline bool E_RandomnameMansecond::has_m_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_RandomnameMansecond::set_has_m_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_RandomnameMansecond::clear_has_m_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_RandomnameMansecond::clear_m_id() {
  m_id_ = 0;
  clear_has_m_id();
}
inline ::google::protobuf::int32 E_RandomnameMansecond::m_id() const {
  return m_id_;
}
inline void E_RandomnameMansecond::set_m_id(::google::protobuf::int32 value) {
  set_has_m_id();
  m_id_ = value;
}

// optional string m_name = 2;
inline bool E_RandomnameMansecond::has_m_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_RandomnameMansecond::set_has_m_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_RandomnameMansecond::clear_has_m_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_RandomnameMansecond::clear_m_name() {
  if (m_name_ != &::google::protobuf::internal::kEmptyString) {
    m_name_->clear();
  }
  clear_has_m_name();
}
inline const ::std::string& E_RandomnameMansecond::m_name() const {
  return *m_name_;
}
inline void E_RandomnameMansecond::set_m_name(const ::std::string& value) {
  set_has_m_name();
  if (m_name_ == &::google::protobuf::internal::kEmptyString) {
    m_name_ = new ::std::string;
  }
  m_name_->assign(value);
}
inline void E_RandomnameMansecond::set_m_name(const char* value) {
  set_has_m_name();
  if (m_name_ == &::google::protobuf::internal::kEmptyString) {
    m_name_ = new ::std::string;
  }
  m_name_->assign(value);
}
inline void E_RandomnameMansecond::set_m_name(const char* value, size_t size) {
  set_has_m_name();
  if (m_name_ == &::google::protobuf::internal::kEmptyString) {
    m_name_ = new ::std::string;
  }
  m_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* E_RandomnameMansecond::mutable_m_name() {
  set_has_m_name();
  if (m_name_ == &::google::protobuf::internal::kEmptyString) {
    m_name_ = new ::std::string;
  }
  return m_name_;
}
inline ::std::string* E_RandomnameMansecond::release_m_name() {
  clear_has_m_name();
  if (m_name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = m_name_;
    m_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void E_RandomnameMansecond::set_allocated_m_name(::std::string* m_name) {
  if (m_name_ != &::google::protobuf::internal::kEmptyString) {
    delete m_name_;
  }
  if (m_name) {
    set_has_m_name();
    m_name_ = m_name;
  } else {
    clear_has_m_name();
    m_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// Sheet_RandomnameMansecond

// repeated .proto_ff.E_RandomnameMansecond E_RandomnameMansecond_List = 1;
inline int Sheet_RandomnameMansecond::e_randomnamemansecond_list_size() const {
  return e_randomnamemansecond_list_.size();
}
inline void Sheet_RandomnameMansecond::clear_e_randomnamemansecond_list() {
  e_randomnamemansecond_list_.Clear();
}
inline const ::proto_ff::E_RandomnameMansecond& Sheet_RandomnameMansecond::e_randomnamemansecond_list(int index) const {
  return e_randomnamemansecond_list_.Get(index);
}
inline ::proto_ff::E_RandomnameMansecond* Sheet_RandomnameMansecond::mutable_e_randomnamemansecond_list(int index) {
  return e_randomnamemansecond_list_.Mutable(index);
}
inline ::proto_ff::E_RandomnameMansecond* Sheet_RandomnameMansecond::add_e_randomnamemansecond_list() {
  return e_randomnamemansecond_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_RandomnameMansecond >&
Sheet_RandomnameMansecond::e_randomnamemansecond_list() const {
  return e_randomnamemansecond_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_RandomnameMansecond >*
Sheet_RandomnameMansecond::mutable_e_randomnamemansecond_list() {
  return &e_randomnamemansecond_list_;
}

// -------------------------------------------------------------------

// E_RandomnameManthird

// optional int32 m_id = 1;
inline bool E_RandomnameManthird::has_m_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_RandomnameManthird::set_has_m_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_RandomnameManthird::clear_has_m_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_RandomnameManthird::clear_m_id() {
  m_id_ = 0;
  clear_has_m_id();
}
inline ::google::protobuf::int32 E_RandomnameManthird::m_id() const {
  return m_id_;
}
inline void E_RandomnameManthird::set_m_id(::google::protobuf::int32 value) {
  set_has_m_id();
  m_id_ = value;
}

// optional string m_name = 2;
inline bool E_RandomnameManthird::has_m_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_RandomnameManthird::set_has_m_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_RandomnameManthird::clear_has_m_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_RandomnameManthird::clear_m_name() {
  if (m_name_ != &::google::protobuf::internal::kEmptyString) {
    m_name_->clear();
  }
  clear_has_m_name();
}
inline const ::std::string& E_RandomnameManthird::m_name() const {
  return *m_name_;
}
inline void E_RandomnameManthird::set_m_name(const ::std::string& value) {
  set_has_m_name();
  if (m_name_ == &::google::protobuf::internal::kEmptyString) {
    m_name_ = new ::std::string;
  }
  m_name_->assign(value);
}
inline void E_RandomnameManthird::set_m_name(const char* value) {
  set_has_m_name();
  if (m_name_ == &::google::protobuf::internal::kEmptyString) {
    m_name_ = new ::std::string;
  }
  m_name_->assign(value);
}
inline void E_RandomnameManthird::set_m_name(const char* value, size_t size) {
  set_has_m_name();
  if (m_name_ == &::google::protobuf::internal::kEmptyString) {
    m_name_ = new ::std::string;
  }
  m_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* E_RandomnameManthird::mutable_m_name() {
  set_has_m_name();
  if (m_name_ == &::google::protobuf::internal::kEmptyString) {
    m_name_ = new ::std::string;
  }
  return m_name_;
}
inline ::std::string* E_RandomnameManthird::release_m_name() {
  clear_has_m_name();
  if (m_name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = m_name_;
    m_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void E_RandomnameManthird::set_allocated_m_name(::std::string* m_name) {
  if (m_name_ != &::google::protobuf::internal::kEmptyString) {
    delete m_name_;
  }
  if (m_name) {
    set_has_m_name();
    m_name_ = m_name;
  } else {
    clear_has_m_name();
    m_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// Sheet_RandomnameManthird

// repeated .proto_ff.E_RandomnameManthird E_RandomnameManthird_List = 1;
inline int Sheet_RandomnameManthird::e_randomnamemanthird_list_size() const {
  return e_randomnamemanthird_list_.size();
}
inline void Sheet_RandomnameManthird::clear_e_randomnamemanthird_list() {
  e_randomnamemanthird_list_.Clear();
}
inline const ::proto_ff::E_RandomnameManthird& Sheet_RandomnameManthird::e_randomnamemanthird_list(int index) const {
  return e_randomnamemanthird_list_.Get(index);
}
inline ::proto_ff::E_RandomnameManthird* Sheet_RandomnameManthird::mutable_e_randomnamemanthird_list(int index) {
  return e_randomnamemanthird_list_.Mutable(index);
}
inline ::proto_ff::E_RandomnameManthird* Sheet_RandomnameManthird::add_e_randomnamemanthird_list() {
  return e_randomnamemanthird_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_RandomnameManthird >&
Sheet_RandomnameManthird::e_randomnamemanthird_list() const {
  return e_randomnamemanthird_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_RandomnameManthird >*
Sheet_RandomnameManthird::mutable_e_randomnamemanthird_list() {
  return &e_randomnamemanthird_list_;
}

// -------------------------------------------------------------------

// E_RandomnameWomanfirst

// optional int32 m_id = 1;
inline bool E_RandomnameWomanfirst::has_m_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_RandomnameWomanfirst::set_has_m_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_RandomnameWomanfirst::clear_has_m_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_RandomnameWomanfirst::clear_m_id() {
  m_id_ = 0;
  clear_has_m_id();
}
inline ::google::protobuf::int32 E_RandomnameWomanfirst::m_id() const {
  return m_id_;
}
inline void E_RandomnameWomanfirst::set_m_id(::google::protobuf::int32 value) {
  set_has_m_id();
  m_id_ = value;
}

// optional string m_name = 2;
inline bool E_RandomnameWomanfirst::has_m_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_RandomnameWomanfirst::set_has_m_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_RandomnameWomanfirst::clear_has_m_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_RandomnameWomanfirst::clear_m_name() {
  if (m_name_ != &::google::protobuf::internal::kEmptyString) {
    m_name_->clear();
  }
  clear_has_m_name();
}
inline const ::std::string& E_RandomnameWomanfirst::m_name() const {
  return *m_name_;
}
inline void E_RandomnameWomanfirst::set_m_name(const ::std::string& value) {
  set_has_m_name();
  if (m_name_ == &::google::protobuf::internal::kEmptyString) {
    m_name_ = new ::std::string;
  }
  m_name_->assign(value);
}
inline void E_RandomnameWomanfirst::set_m_name(const char* value) {
  set_has_m_name();
  if (m_name_ == &::google::protobuf::internal::kEmptyString) {
    m_name_ = new ::std::string;
  }
  m_name_->assign(value);
}
inline void E_RandomnameWomanfirst::set_m_name(const char* value, size_t size) {
  set_has_m_name();
  if (m_name_ == &::google::protobuf::internal::kEmptyString) {
    m_name_ = new ::std::string;
  }
  m_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* E_RandomnameWomanfirst::mutable_m_name() {
  set_has_m_name();
  if (m_name_ == &::google::protobuf::internal::kEmptyString) {
    m_name_ = new ::std::string;
  }
  return m_name_;
}
inline ::std::string* E_RandomnameWomanfirst::release_m_name() {
  clear_has_m_name();
  if (m_name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = m_name_;
    m_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void E_RandomnameWomanfirst::set_allocated_m_name(::std::string* m_name) {
  if (m_name_ != &::google::protobuf::internal::kEmptyString) {
    delete m_name_;
  }
  if (m_name) {
    set_has_m_name();
    m_name_ = m_name;
  } else {
    clear_has_m_name();
    m_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// Sheet_RandomnameWomanfirst

// repeated .proto_ff.E_RandomnameWomanfirst E_RandomnameWomanfirst_List = 1;
inline int Sheet_RandomnameWomanfirst::e_randomnamewomanfirst_list_size() const {
  return e_randomnamewomanfirst_list_.size();
}
inline void Sheet_RandomnameWomanfirst::clear_e_randomnamewomanfirst_list() {
  e_randomnamewomanfirst_list_.Clear();
}
inline const ::proto_ff::E_RandomnameWomanfirst& Sheet_RandomnameWomanfirst::e_randomnamewomanfirst_list(int index) const {
  return e_randomnamewomanfirst_list_.Get(index);
}
inline ::proto_ff::E_RandomnameWomanfirst* Sheet_RandomnameWomanfirst::mutable_e_randomnamewomanfirst_list(int index) {
  return e_randomnamewomanfirst_list_.Mutable(index);
}
inline ::proto_ff::E_RandomnameWomanfirst* Sheet_RandomnameWomanfirst::add_e_randomnamewomanfirst_list() {
  return e_randomnamewomanfirst_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_RandomnameWomanfirst >&
Sheet_RandomnameWomanfirst::e_randomnamewomanfirst_list() const {
  return e_randomnamewomanfirst_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_RandomnameWomanfirst >*
Sheet_RandomnameWomanfirst::mutable_e_randomnamewomanfirst_list() {
  return &e_randomnamewomanfirst_list_;
}

// -------------------------------------------------------------------

// E_RandomnameWomansecond

// optional int32 m_id = 1;
inline bool E_RandomnameWomansecond::has_m_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_RandomnameWomansecond::set_has_m_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_RandomnameWomansecond::clear_has_m_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_RandomnameWomansecond::clear_m_id() {
  m_id_ = 0;
  clear_has_m_id();
}
inline ::google::protobuf::int32 E_RandomnameWomansecond::m_id() const {
  return m_id_;
}
inline void E_RandomnameWomansecond::set_m_id(::google::protobuf::int32 value) {
  set_has_m_id();
  m_id_ = value;
}

// optional string m_name = 2;
inline bool E_RandomnameWomansecond::has_m_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_RandomnameWomansecond::set_has_m_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_RandomnameWomansecond::clear_has_m_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_RandomnameWomansecond::clear_m_name() {
  if (m_name_ != &::google::protobuf::internal::kEmptyString) {
    m_name_->clear();
  }
  clear_has_m_name();
}
inline const ::std::string& E_RandomnameWomansecond::m_name() const {
  return *m_name_;
}
inline void E_RandomnameWomansecond::set_m_name(const ::std::string& value) {
  set_has_m_name();
  if (m_name_ == &::google::protobuf::internal::kEmptyString) {
    m_name_ = new ::std::string;
  }
  m_name_->assign(value);
}
inline void E_RandomnameWomansecond::set_m_name(const char* value) {
  set_has_m_name();
  if (m_name_ == &::google::protobuf::internal::kEmptyString) {
    m_name_ = new ::std::string;
  }
  m_name_->assign(value);
}
inline void E_RandomnameWomansecond::set_m_name(const char* value, size_t size) {
  set_has_m_name();
  if (m_name_ == &::google::protobuf::internal::kEmptyString) {
    m_name_ = new ::std::string;
  }
  m_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* E_RandomnameWomansecond::mutable_m_name() {
  set_has_m_name();
  if (m_name_ == &::google::protobuf::internal::kEmptyString) {
    m_name_ = new ::std::string;
  }
  return m_name_;
}
inline ::std::string* E_RandomnameWomansecond::release_m_name() {
  clear_has_m_name();
  if (m_name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = m_name_;
    m_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void E_RandomnameWomansecond::set_allocated_m_name(::std::string* m_name) {
  if (m_name_ != &::google::protobuf::internal::kEmptyString) {
    delete m_name_;
  }
  if (m_name) {
    set_has_m_name();
    m_name_ = m_name;
  } else {
    clear_has_m_name();
    m_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// Sheet_RandomnameWomansecond

// repeated .proto_ff.E_RandomnameWomansecond E_RandomnameWomansecond_List = 1;
inline int Sheet_RandomnameWomansecond::e_randomnamewomansecond_list_size() const {
  return e_randomnamewomansecond_list_.size();
}
inline void Sheet_RandomnameWomansecond::clear_e_randomnamewomansecond_list() {
  e_randomnamewomansecond_list_.Clear();
}
inline const ::proto_ff::E_RandomnameWomansecond& Sheet_RandomnameWomansecond::e_randomnamewomansecond_list(int index) const {
  return e_randomnamewomansecond_list_.Get(index);
}
inline ::proto_ff::E_RandomnameWomansecond* Sheet_RandomnameWomansecond::mutable_e_randomnamewomansecond_list(int index) {
  return e_randomnamewomansecond_list_.Mutable(index);
}
inline ::proto_ff::E_RandomnameWomansecond* Sheet_RandomnameWomansecond::add_e_randomnamewomansecond_list() {
  return e_randomnamewomansecond_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_RandomnameWomansecond >&
Sheet_RandomnameWomansecond::e_randomnamewomansecond_list() const {
  return e_randomnamewomansecond_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_RandomnameWomansecond >*
Sheet_RandomnameWomansecond::mutable_e_randomnamewomansecond_list() {
  return &e_randomnamewomansecond_list_;
}

// -------------------------------------------------------------------

// E_RandomnameWomanthird

// optional int32 m_id = 1;
inline bool E_RandomnameWomanthird::has_m_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E_RandomnameWomanthird::set_has_m_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E_RandomnameWomanthird::clear_has_m_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E_RandomnameWomanthird::clear_m_id() {
  m_id_ = 0;
  clear_has_m_id();
}
inline ::google::protobuf::int32 E_RandomnameWomanthird::m_id() const {
  return m_id_;
}
inline void E_RandomnameWomanthird::set_m_id(::google::protobuf::int32 value) {
  set_has_m_id();
  m_id_ = value;
}

// optional string m_name = 2;
inline bool E_RandomnameWomanthird::has_m_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E_RandomnameWomanthird::set_has_m_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E_RandomnameWomanthird::clear_has_m_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E_RandomnameWomanthird::clear_m_name() {
  if (m_name_ != &::google::protobuf::internal::kEmptyString) {
    m_name_->clear();
  }
  clear_has_m_name();
}
inline const ::std::string& E_RandomnameWomanthird::m_name() const {
  return *m_name_;
}
inline void E_RandomnameWomanthird::set_m_name(const ::std::string& value) {
  set_has_m_name();
  if (m_name_ == &::google::protobuf::internal::kEmptyString) {
    m_name_ = new ::std::string;
  }
  m_name_->assign(value);
}
inline void E_RandomnameWomanthird::set_m_name(const char* value) {
  set_has_m_name();
  if (m_name_ == &::google::protobuf::internal::kEmptyString) {
    m_name_ = new ::std::string;
  }
  m_name_->assign(value);
}
inline void E_RandomnameWomanthird::set_m_name(const char* value, size_t size) {
  set_has_m_name();
  if (m_name_ == &::google::protobuf::internal::kEmptyString) {
    m_name_ = new ::std::string;
  }
  m_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* E_RandomnameWomanthird::mutable_m_name() {
  set_has_m_name();
  if (m_name_ == &::google::protobuf::internal::kEmptyString) {
    m_name_ = new ::std::string;
  }
  return m_name_;
}
inline ::std::string* E_RandomnameWomanthird::release_m_name() {
  clear_has_m_name();
  if (m_name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = m_name_;
    m_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void E_RandomnameWomanthird::set_allocated_m_name(::std::string* m_name) {
  if (m_name_ != &::google::protobuf::internal::kEmptyString) {
    delete m_name_;
  }
  if (m_name) {
    set_has_m_name();
    m_name_ = m_name;
  } else {
    clear_has_m_name();
    m_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// Sheet_RandomnameWomanthird

// repeated .proto_ff.E_RandomnameWomanthird E_RandomnameWomanthird_List = 1;
inline int Sheet_RandomnameWomanthird::e_randomnamewomanthird_list_size() const {
  return e_randomnamewomanthird_list_.size();
}
inline void Sheet_RandomnameWomanthird::clear_e_randomnamewomanthird_list() {
  e_randomnamewomanthird_list_.Clear();
}
inline const ::proto_ff::E_RandomnameWomanthird& Sheet_RandomnameWomanthird::e_randomnamewomanthird_list(int index) const {
  return e_randomnamewomanthird_list_.Get(index);
}
inline ::proto_ff::E_RandomnameWomanthird* Sheet_RandomnameWomanthird::mutable_e_randomnamewomanthird_list(int index) {
  return e_randomnamewomanthird_list_.Mutable(index);
}
inline ::proto_ff::E_RandomnameWomanthird* Sheet_RandomnameWomanthird::add_e_randomnamewomanthird_list() {
  return e_randomnamewomanthird_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_ff::E_RandomnameWomanthird >&
Sheet_RandomnameWomanthird::e_randomnamewomanthird_list() const {
  return e_randomnamewomanthird_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_ff::E_RandomnameWomanthird >*
Sheet_RandomnameWomanthird::mutable_e_randomnamewomanthird_list() {
  return &e_randomnamewomanthird_list_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto_ff

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_randomname_2eproto__INCLUDED
