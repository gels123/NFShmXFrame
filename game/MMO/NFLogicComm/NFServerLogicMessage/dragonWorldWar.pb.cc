// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: dragonWorldWar.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "dragonWorldWar.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace proto_ff {

namespace {

const ::google::protobuf::Descriptor* dragonWorldWarconstants_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  dragonWorldWarconstants_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_dragonWorldWarconstants_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_dragonWorldWarconstants_reflection_ = NULL;
const ::google::protobuf::Descriptor* dragonWorldWargoldskill_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  dragonWorldWargoldskill_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_dragonWorldWargoldskill_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_dragonWorldWargoldskill_reflection_ = NULL;
const ::google::protobuf::Descriptor* dragonWorldWargoldShop_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  dragonWorldWargoldShop_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sheet_dragonWorldWargoldShop_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet_dragonWorldWargoldShop_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_dragonWorldWar_2eproto() {
  protobuf_AddDesc_dragonWorldWar_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "dragonWorldWar.proto");
  GOOGLE_CHECK(file != NULL);
  dragonWorldWarconstants_descriptor_ = file->message_type(0);
  static const int dragonWorldWarconstants_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(dragonWorldWarconstants, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(dragonWorldWarconstants, valuedata_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(dragonWorldWarconstants, stringdata_),
  };
  dragonWorldWarconstants_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      dragonWorldWarconstants_descriptor_,
      dragonWorldWarconstants::default_instance_,
      dragonWorldWarconstants_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(dragonWorldWarconstants, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(dragonWorldWarconstants, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(dragonWorldWarconstants));
  Sheet_dragonWorldWarconstants_descriptor_ = file->message_type(1);
  static const int Sheet_dragonWorldWarconstants_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_dragonWorldWarconstants, dragonworldwarconstants_list_),
  };
  Sheet_dragonWorldWarconstants_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_dragonWorldWarconstants_descriptor_,
      Sheet_dragonWorldWarconstants::default_instance_,
      Sheet_dragonWorldWarconstants_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_dragonWorldWarconstants, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_dragonWorldWarconstants, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_dragonWorldWarconstants));
  dragonWorldWargoldskill_descriptor_ = file->message_type(2);
  static const int dragonWorldWargoldskill_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(dragonWorldWargoldskill, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(dragonWorldWargoldskill, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(dragonWorldWargoldskill, goldmin_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(dragonWorldWargoldskill, skillid_),
  };
  dragonWorldWargoldskill_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      dragonWorldWargoldskill_descriptor_,
      dragonWorldWargoldskill::default_instance_,
      dragonWorldWargoldskill_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(dragonWorldWargoldskill, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(dragonWorldWargoldskill, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(dragonWorldWargoldskill));
  Sheet_dragonWorldWargoldskill_descriptor_ = file->message_type(3);
  static const int Sheet_dragonWorldWargoldskill_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_dragonWorldWargoldskill, dragonworldwargoldskill_list_),
  };
  Sheet_dragonWorldWargoldskill_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_dragonWorldWargoldskill_descriptor_,
      Sheet_dragonWorldWargoldskill::default_instance_,
      Sheet_dragonWorldWargoldskill_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_dragonWorldWargoldskill, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_dragonWorldWargoldskill, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_dragonWorldWargoldskill));
  dragonWorldWargoldShop_descriptor_ = file->message_type(4);
  static const int dragonWorldWargoldShop_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(dragonWorldWargoldShop, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(dragonWorldWargoldShop, itemid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(dragonWorldWargoldShop, itemnum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(dragonWorldWargoldShop, itemprice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(dragonWorldWargoldShop, weight_),
  };
  dragonWorldWargoldShop_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      dragonWorldWargoldShop_descriptor_,
      dragonWorldWargoldShop::default_instance_,
      dragonWorldWargoldShop_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(dragonWorldWargoldShop, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(dragonWorldWargoldShop, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(dragonWorldWargoldShop));
  Sheet_dragonWorldWargoldShop_descriptor_ = file->message_type(5);
  static const int Sheet_dragonWorldWargoldShop_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_dragonWorldWargoldShop, dragonworldwargoldshop_list_),
  };
  Sheet_dragonWorldWargoldShop_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet_dragonWorldWargoldShop_descriptor_,
      Sheet_dragonWorldWargoldShop::default_instance_,
      Sheet_dragonWorldWargoldShop_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_dragonWorldWargoldShop, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet_dragonWorldWargoldShop, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet_dragonWorldWargoldShop));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_dragonWorldWar_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    dragonWorldWarconstants_descriptor_, &dragonWorldWarconstants::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_dragonWorldWarconstants_descriptor_, &Sheet_dragonWorldWarconstants::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    dragonWorldWargoldskill_descriptor_, &dragonWorldWargoldskill::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_dragonWorldWargoldskill_descriptor_, &Sheet_dragonWorldWargoldskill::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    dragonWorldWargoldShop_descriptor_, &dragonWorldWargoldShop::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet_dragonWorldWargoldShop_descriptor_, &Sheet_dragonWorldWargoldShop::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_dragonWorldWar_2eproto() {
  delete dragonWorldWarconstants::default_instance_;
  delete dragonWorldWarconstants_reflection_;
  delete Sheet_dragonWorldWarconstants::default_instance_;
  delete Sheet_dragonWorldWarconstants_reflection_;
  delete dragonWorldWargoldskill::default_instance_;
  delete dragonWorldWargoldskill_reflection_;
  delete Sheet_dragonWorldWargoldskill::default_instance_;
  delete Sheet_dragonWorldWargoldskill_reflection_;
  delete dragonWorldWargoldShop::default_instance_;
  delete dragonWorldWargoldShop_reflection_;
  delete Sheet_dragonWorldWargoldShop::default_instance_;
  delete Sheet_dragonWorldWargoldShop_reflection_;
}

void protobuf_AddDesc_dragonWorldWar_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::yd_fieldoptions::protobuf_AddDesc_yd_5ffieldoptions_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\024dragonWorldWar.proto\022\010proto_ff\032\025yd_fie"
    "ldoptions.proto\"}\n\027dragonWorldWarconstan"
    "ts\022\026\n\002ID\030\001 \001(\005B\n\302\377\024\006\347\274\226\345\217\267\022 \n\tvaluedata\030"
    "\002 \001(\005B\r\302\377\024\t\345\200\274\346\225\260\346\215\256\022(\n\nstringdata\030\003 \001(\t"
    "B\024\302\377\024\014\346\226\207\346\234\254\346\225\260\346\215\256\220\301\024u\"n\n\035Sheet_dragonWo"
    "rldWarconstants\022M\n\034dragonWorldWarconstan"
    "ts_List\030\001 \003(\0132!.proto_ff.dragonWorldWarc"
    "onstantsB\004\210\301\024w\"\223\001\n\027dragonWorldWargoldski"
    "ll\022\026\n\002ID\030\001 \001(\005B\n\302\377\024\006\347\274\226\345\217\267\022\036\n\004type\030\002 \001(\005"
    "B\020\302\377\024\014\345\212\240\346\210\220\347\261\273\345\236\213\022!\n\007goldmin\030\003 \001(\005B\020\302\377\024"
    "\014\351\230\266\346\256\265\345\272\225\351\231\220\022\035\n\007skillId\030\004 \001(\003B\014\302\377\024\010\346\212\200\350"
    "\203\275ID\"n\n\035Sheet_dragonWorldWargoldskill\022M\n"
    "\034dragonWorldWargoldskill_List\030\001 \003(\0132!.pr"
    "oto_ff.dragonWorldWargoldskillB\004\210\301\024w\"\270\001\n"
    "\026dragonWorldWargoldShop\022\026\n\002ID\030\001 \001(\005B\n\302\377\024"
    "\006\347\274\226\345\217\267\022\034\n\006itemId\030\002 \001(\003B\014\302\377\024\010\351\201\223\345\205\267ID\022!\n"
    "\007itemNum\030\003 \001(\005B\020\302\377\024\014\351\201\223\345\205\267\346\225\260\351\207\217\022)\n\titem"
    "Price\030\004 \001(\005B\026\302\377\024\022\351\201\223\345\205\267\350\264\255\344\271\260\347\247\257\345\210\206\022\032\n\006w"
    "eight\030\005 \001(\005B\n\302\377\024\006\346\235\203\351\207\215\"l\n\034Sheet_dragonW"
    "orldWargoldShop\022L\n\033dragonWorldWargoldSho"
    "p_List\030\001 \003(\0132 .proto_ff.dragonWorldWargo"
    "ldShopB\005\210\301\024\213\001", 853);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "dragonWorldWar.proto", &protobuf_RegisterTypes);
  dragonWorldWarconstants::default_instance_ = new dragonWorldWarconstants();
  Sheet_dragonWorldWarconstants::default_instance_ = new Sheet_dragonWorldWarconstants();
  dragonWorldWargoldskill::default_instance_ = new dragonWorldWargoldskill();
  Sheet_dragonWorldWargoldskill::default_instance_ = new Sheet_dragonWorldWargoldskill();
  dragonWorldWargoldShop::default_instance_ = new dragonWorldWargoldShop();
  Sheet_dragonWorldWargoldShop::default_instance_ = new Sheet_dragonWorldWargoldShop();
  dragonWorldWarconstants::default_instance_->InitAsDefaultInstance();
  Sheet_dragonWorldWarconstants::default_instance_->InitAsDefaultInstance();
  dragonWorldWargoldskill::default_instance_->InitAsDefaultInstance();
  Sheet_dragonWorldWargoldskill::default_instance_->InitAsDefaultInstance();
  dragonWorldWargoldShop::default_instance_->InitAsDefaultInstance();
  Sheet_dragonWorldWargoldShop::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_dragonWorldWar_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_dragonWorldWar_2eproto {
  StaticDescriptorInitializer_dragonWorldWar_2eproto() {
    protobuf_AddDesc_dragonWorldWar_2eproto();
  }
} static_descriptor_initializer_dragonWorldWar_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int dragonWorldWarconstants::kIDFieldNumber;
const int dragonWorldWarconstants::kValuedataFieldNumber;
const int dragonWorldWarconstants::kStringdataFieldNumber;
#endif  // !_MSC_VER

dragonWorldWarconstants::dragonWorldWarconstants()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void dragonWorldWarconstants::InitAsDefaultInstance() {
}

dragonWorldWarconstants::dragonWorldWarconstants(const dragonWorldWarconstants& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void dragonWorldWarconstants::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0;
  valuedata_ = 0;
  stringdata_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

dragonWorldWarconstants::~dragonWorldWarconstants() {
  SharedDtor();
}

void dragonWorldWarconstants::SharedDtor() {
  if (stringdata_ != &::google::protobuf::internal::kEmptyString) {
    delete stringdata_;
  }
  if (this != default_instance_) {
  }
}

void dragonWorldWarconstants::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* dragonWorldWarconstants::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return dragonWorldWarconstants_descriptor_;
}

const dragonWorldWarconstants& dragonWorldWarconstants::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_dragonWorldWar_2eproto();
  return *default_instance_;
}

dragonWorldWarconstants* dragonWorldWarconstants::default_instance_ = NULL;

dragonWorldWarconstants* dragonWorldWarconstants::New() const {
  return new dragonWorldWarconstants;
}

void dragonWorldWarconstants::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    id_ = 0;
    valuedata_ = 0;
    if (has_stringdata()) {
      if (stringdata_ != &::google::protobuf::internal::kEmptyString) {
        stringdata_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool dragonWorldWarconstants::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 ID = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_valuedata;
        break;
      }

      // optional int32 valuedata = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_valuedata:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &valuedata_)));
          set_has_valuedata();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_stringdata;
        break;
      }

      // optional string stringdata = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_stringdata:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_stringdata()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->stringdata().data(), this->stringdata().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void dragonWorldWarconstants::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 ID = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // optional int32 valuedata = 2;
  if (has_valuedata()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->valuedata(), output);
  }

  // optional string stringdata = 3;
  if (has_stringdata()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->stringdata().data(), this->stringdata().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->stringdata(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* dragonWorldWarconstants::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 ID = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // optional int32 valuedata = 2;
  if (has_valuedata()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->valuedata(), target);
  }

  // optional string stringdata = 3;
  if (has_stringdata()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->stringdata().data(), this->stringdata().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->stringdata(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int dragonWorldWarconstants::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 ID = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->id());
    }

    // optional int32 valuedata = 2;
    if (has_valuedata()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->valuedata());
    }

    // optional string stringdata = 3;
    if (has_stringdata()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->stringdata());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void dragonWorldWarconstants::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const dragonWorldWarconstants* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const dragonWorldWarconstants*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void dragonWorldWarconstants::MergeFrom(const dragonWorldWarconstants& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_valuedata()) {
      set_valuedata(from.valuedata());
    }
    if (from.has_stringdata()) {
      set_stringdata(from.stringdata());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void dragonWorldWarconstants::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void dragonWorldWarconstants::CopyFrom(const dragonWorldWarconstants& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool dragonWorldWarconstants::IsInitialized() const {

  return true;
}

void dragonWorldWarconstants::Swap(dragonWorldWarconstants* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(valuedata_, other->valuedata_);
    std::swap(stringdata_, other->stringdata_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata dragonWorldWarconstants::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = dragonWorldWarconstants_descriptor_;
  metadata.reflection = dragonWorldWarconstants_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_dragonWorldWarconstants::kDragonWorldWarconstantsListFieldNumber;
#endif  // !_MSC_VER

Sheet_dragonWorldWarconstants::Sheet_dragonWorldWarconstants()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_dragonWorldWarconstants::InitAsDefaultInstance() {
}

Sheet_dragonWorldWarconstants::Sheet_dragonWorldWarconstants(const Sheet_dragonWorldWarconstants& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_dragonWorldWarconstants::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_dragonWorldWarconstants::~Sheet_dragonWorldWarconstants() {
  SharedDtor();
}

void Sheet_dragonWorldWarconstants::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_dragonWorldWarconstants::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_dragonWorldWarconstants::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_dragonWorldWarconstants_descriptor_;
}

const Sheet_dragonWorldWarconstants& Sheet_dragonWorldWarconstants::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_dragonWorldWar_2eproto();
  return *default_instance_;
}

Sheet_dragonWorldWarconstants* Sheet_dragonWorldWarconstants::default_instance_ = NULL;

Sheet_dragonWorldWarconstants* Sheet_dragonWorldWarconstants::New() const {
  return new Sheet_dragonWorldWarconstants;
}

void Sheet_dragonWorldWarconstants::Clear() {
  dragonworldwarconstants_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_dragonWorldWarconstants::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.dragonWorldWarconstants dragonWorldWarconstants_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_dragonWorldWarconstants_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_dragonworldwarconstants_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_dragonWorldWarconstants_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_dragonWorldWarconstants::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.dragonWorldWarconstants dragonWorldWarconstants_List = 1;
  for (int i = 0; i < this->dragonworldwarconstants_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->dragonworldwarconstants_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_dragonWorldWarconstants::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.dragonWorldWarconstants dragonWorldWarconstants_List = 1;
  for (int i = 0; i < this->dragonworldwarconstants_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->dragonworldwarconstants_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_dragonWorldWarconstants::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.dragonWorldWarconstants dragonWorldWarconstants_List = 1;
  total_size += 1 * this->dragonworldwarconstants_list_size();
  for (int i = 0; i < this->dragonworldwarconstants_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->dragonworldwarconstants_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_dragonWorldWarconstants::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_dragonWorldWarconstants* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_dragonWorldWarconstants*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_dragonWorldWarconstants::MergeFrom(const Sheet_dragonWorldWarconstants& from) {
  GOOGLE_CHECK_NE(&from, this);
  dragonworldwarconstants_list_.MergeFrom(from.dragonworldwarconstants_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_dragonWorldWarconstants::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_dragonWorldWarconstants::CopyFrom(const Sheet_dragonWorldWarconstants& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_dragonWorldWarconstants::IsInitialized() const {

  return true;
}

void Sheet_dragonWorldWarconstants::Swap(Sheet_dragonWorldWarconstants* other) {
  if (other != this) {
    dragonworldwarconstants_list_.Swap(&other->dragonworldwarconstants_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_dragonWorldWarconstants::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_dragonWorldWarconstants_descriptor_;
  metadata.reflection = Sheet_dragonWorldWarconstants_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int dragonWorldWargoldskill::kIDFieldNumber;
const int dragonWorldWargoldskill::kTypeFieldNumber;
const int dragonWorldWargoldskill::kGoldminFieldNumber;
const int dragonWorldWargoldskill::kSkillIdFieldNumber;
#endif  // !_MSC_VER

dragonWorldWargoldskill::dragonWorldWargoldskill()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void dragonWorldWargoldskill::InitAsDefaultInstance() {
}

dragonWorldWargoldskill::dragonWorldWargoldskill(const dragonWorldWargoldskill& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void dragonWorldWargoldskill::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0;
  type_ = 0;
  goldmin_ = 0;
  skillid_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

dragonWorldWargoldskill::~dragonWorldWargoldskill() {
  SharedDtor();
}

void dragonWorldWargoldskill::SharedDtor() {
  if (this != default_instance_) {
  }
}

void dragonWorldWargoldskill::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* dragonWorldWargoldskill::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return dragonWorldWargoldskill_descriptor_;
}

const dragonWorldWargoldskill& dragonWorldWargoldskill::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_dragonWorldWar_2eproto();
  return *default_instance_;
}

dragonWorldWargoldskill* dragonWorldWargoldskill::default_instance_ = NULL;

dragonWorldWargoldskill* dragonWorldWargoldskill::New() const {
  return new dragonWorldWargoldskill;
}

void dragonWorldWargoldskill::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    id_ = 0;
    type_ = 0;
    goldmin_ = 0;
    skillid_ = GOOGLE_LONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool dragonWorldWargoldskill::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 ID = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_type;
        break;
      }

      // optional int32 type = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_goldmin;
        break;
      }

      // optional int32 goldmin = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_goldmin:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &goldmin_)));
          set_has_goldmin();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_skillId;
        break;
      }

      // optional int64 skillId = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_skillId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &skillid_)));
          set_has_skillid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void dragonWorldWargoldskill::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 ID = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // optional int32 type = 2;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->type(), output);
  }

  // optional int32 goldmin = 3;
  if (has_goldmin()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->goldmin(), output);
  }

  // optional int64 skillId = 4;
  if (has_skillid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->skillid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* dragonWorldWargoldskill::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 ID = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // optional int32 type = 2;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->type(), target);
  }

  // optional int32 goldmin = 3;
  if (has_goldmin()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->goldmin(), target);
  }

  // optional int64 skillId = 4;
  if (has_skillid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->skillid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int dragonWorldWargoldskill::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 ID = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->id());
    }

    // optional int32 type = 2;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type());
    }

    // optional int32 goldmin = 3;
    if (has_goldmin()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->goldmin());
    }

    // optional int64 skillId = 4;
    if (has_skillid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->skillid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void dragonWorldWargoldskill::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const dragonWorldWargoldskill* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const dragonWorldWargoldskill*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void dragonWorldWargoldskill::MergeFrom(const dragonWorldWargoldskill& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_goldmin()) {
      set_goldmin(from.goldmin());
    }
    if (from.has_skillid()) {
      set_skillid(from.skillid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void dragonWorldWargoldskill::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void dragonWorldWargoldskill::CopyFrom(const dragonWorldWargoldskill& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool dragonWorldWargoldskill::IsInitialized() const {

  return true;
}

void dragonWorldWargoldskill::Swap(dragonWorldWargoldskill* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(type_, other->type_);
    std::swap(goldmin_, other->goldmin_);
    std::swap(skillid_, other->skillid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata dragonWorldWargoldskill::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = dragonWorldWargoldskill_descriptor_;
  metadata.reflection = dragonWorldWargoldskill_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_dragonWorldWargoldskill::kDragonWorldWargoldskillListFieldNumber;
#endif  // !_MSC_VER

Sheet_dragonWorldWargoldskill::Sheet_dragonWorldWargoldskill()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_dragonWorldWargoldskill::InitAsDefaultInstance() {
}

Sheet_dragonWorldWargoldskill::Sheet_dragonWorldWargoldskill(const Sheet_dragonWorldWargoldskill& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_dragonWorldWargoldskill::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_dragonWorldWargoldskill::~Sheet_dragonWorldWargoldskill() {
  SharedDtor();
}

void Sheet_dragonWorldWargoldskill::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_dragonWorldWargoldskill::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_dragonWorldWargoldskill::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_dragonWorldWargoldskill_descriptor_;
}

const Sheet_dragonWorldWargoldskill& Sheet_dragonWorldWargoldskill::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_dragonWorldWar_2eproto();
  return *default_instance_;
}

Sheet_dragonWorldWargoldskill* Sheet_dragonWorldWargoldskill::default_instance_ = NULL;

Sheet_dragonWorldWargoldskill* Sheet_dragonWorldWargoldskill::New() const {
  return new Sheet_dragonWorldWargoldskill;
}

void Sheet_dragonWorldWargoldskill::Clear() {
  dragonworldwargoldskill_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_dragonWorldWargoldskill::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.dragonWorldWargoldskill dragonWorldWargoldskill_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_dragonWorldWargoldskill_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_dragonworldwargoldskill_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_dragonWorldWargoldskill_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_dragonWorldWargoldskill::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.dragonWorldWargoldskill dragonWorldWargoldskill_List = 1;
  for (int i = 0; i < this->dragonworldwargoldskill_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->dragonworldwargoldskill_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_dragonWorldWargoldskill::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.dragonWorldWargoldskill dragonWorldWargoldskill_List = 1;
  for (int i = 0; i < this->dragonworldwargoldskill_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->dragonworldwargoldskill_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_dragonWorldWargoldskill::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.dragonWorldWargoldskill dragonWorldWargoldskill_List = 1;
  total_size += 1 * this->dragonworldwargoldskill_list_size();
  for (int i = 0; i < this->dragonworldwargoldskill_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->dragonworldwargoldskill_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_dragonWorldWargoldskill::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_dragonWorldWargoldskill* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_dragonWorldWargoldskill*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_dragonWorldWargoldskill::MergeFrom(const Sheet_dragonWorldWargoldskill& from) {
  GOOGLE_CHECK_NE(&from, this);
  dragonworldwargoldskill_list_.MergeFrom(from.dragonworldwargoldskill_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_dragonWorldWargoldskill::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_dragonWorldWargoldskill::CopyFrom(const Sheet_dragonWorldWargoldskill& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_dragonWorldWargoldskill::IsInitialized() const {

  return true;
}

void Sheet_dragonWorldWargoldskill::Swap(Sheet_dragonWorldWargoldskill* other) {
  if (other != this) {
    dragonworldwargoldskill_list_.Swap(&other->dragonworldwargoldskill_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_dragonWorldWargoldskill::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_dragonWorldWargoldskill_descriptor_;
  metadata.reflection = Sheet_dragonWorldWargoldskill_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int dragonWorldWargoldShop::kIDFieldNumber;
const int dragonWorldWargoldShop::kItemIdFieldNumber;
const int dragonWorldWargoldShop::kItemNumFieldNumber;
const int dragonWorldWargoldShop::kItemPriceFieldNumber;
const int dragonWorldWargoldShop::kWeightFieldNumber;
#endif  // !_MSC_VER

dragonWorldWargoldShop::dragonWorldWargoldShop()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void dragonWorldWargoldShop::InitAsDefaultInstance() {
}

dragonWorldWargoldShop::dragonWorldWargoldShop(const dragonWorldWargoldShop& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void dragonWorldWargoldShop::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0;
  itemid_ = GOOGLE_LONGLONG(0);
  itemnum_ = 0;
  itemprice_ = 0;
  weight_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

dragonWorldWargoldShop::~dragonWorldWargoldShop() {
  SharedDtor();
}

void dragonWorldWargoldShop::SharedDtor() {
  if (this != default_instance_) {
  }
}

void dragonWorldWargoldShop::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* dragonWorldWargoldShop::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return dragonWorldWargoldShop_descriptor_;
}

const dragonWorldWargoldShop& dragonWorldWargoldShop::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_dragonWorldWar_2eproto();
  return *default_instance_;
}

dragonWorldWargoldShop* dragonWorldWargoldShop::default_instance_ = NULL;

dragonWorldWargoldShop* dragonWorldWargoldShop::New() const {
  return new dragonWorldWargoldShop;
}

void dragonWorldWargoldShop::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    id_ = 0;
    itemid_ = GOOGLE_LONGLONG(0);
    itemnum_ = 0;
    itemprice_ = 0;
    weight_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool dragonWorldWargoldShop::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 ID = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_itemId;
        break;
      }

      // optional int64 itemId = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_itemId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &itemid_)));
          set_has_itemid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_itemNum;
        break;
      }

      // optional int32 itemNum = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_itemNum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &itemnum_)));
          set_has_itemnum();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_itemPrice;
        break;
      }

      // optional int32 itemPrice = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_itemPrice:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &itemprice_)));
          set_has_itemprice();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_weight;
        break;
      }

      // optional int32 weight = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_weight:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &weight_)));
          set_has_weight();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void dragonWorldWargoldShop::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 ID = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // optional int64 itemId = 2;
  if (has_itemid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->itemid(), output);
  }

  // optional int32 itemNum = 3;
  if (has_itemnum()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->itemnum(), output);
  }

  // optional int32 itemPrice = 4;
  if (has_itemprice()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->itemprice(), output);
  }

  // optional int32 weight = 5;
  if (has_weight()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->weight(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* dragonWorldWargoldShop::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 ID = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // optional int64 itemId = 2;
  if (has_itemid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->itemid(), target);
  }

  // optional int32 itemNum = 3;
  if (has_itemnum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->itemnum(), target);
  }

  // optional int32 itemPrice = 4;
  if (has_itemprice()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->itemprice(), target);
  }

  // optional int32 weight = 5;
  if (has_weight()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->weight(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int dragonWorldWargoldShop::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 ID = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->id());
    }

    // optional int64 itemId = 2;
    if (has_itemid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->itemid());
    }

    // optional int32 itemNum = 3;
    if (has_itemnum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->itemnum());
    }

    // optional int32 itemPrice = 4;
    if (has_itemprice()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->itemprice());
    }

    // optional int32 weight = 5;
    if (has_weight()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->weight());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void dragonWorldWargoldShop::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const dragonWorldWargoldShop* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const dragonWorldWargoldShop*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void dragonWorldWargoldShop::MergeFrom(const dragonWorldWargoldShop& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_itemid()) {
      set_itemid(from.itemid());
    }
    if (from.has_itemnum()) {
      set_itemnum(from.itemnum());
    }
    if (from.has_itemprice()) {
      set_itemprice(from.itemprice());
    }
    if (from.has_weight()) {
      set_weight(from.weight());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void dragonWorldWargoldShop::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void dragonWorldWargoldShop::CopyFrom(const dragonWorldWargoldShop& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool dragonWorldWargoldShop::IsInitialized() const {

  return true;
}

void dragonWorldWargoldShop::Swap(dragonWorldWargoldShop* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(itemid_, other->itemid_);
    std::swap(itemnum_, other->itemnum_);
    std::swap(itemprice_, other->itemprice_);
    std::swap(weight_, other->weight_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata dragonWorldWargoldShop::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = dragonWorldWargoldShop_descriptor_;
  metadata.reflection = dragonWorldWargoldShop_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Sheet_dragonWorldWargoldShop::kDragonWorldWargoldShopListFieldNumber;
#endif  // !_MSC_VER

Sheet_dragonWorldWargoldShop::Sheet_dragonWorldWargoldShop()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sheet_dragonWorldWargoldShop::InitAsDefaultInstance() {
}

Sheet_dragonWorldWargoldShop::Sheet_dragonWorldWargoldShop(const Sheet_dragonWorldWargoldShop& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sheet_dragonWorldWargoldShop::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet_dragonWorldWargoldShop::~Sheet_dragonWorldWargoldShop() {
  SharedDtor();
}

void Sheet_dragonWorldWargoldShop::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet_dragonWorldWargoldShop::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet_dragonWorldWargoldShop::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet_dragonWorldWargoldShop_descriptor_;
}

const Sheet_dragonWorldWargoldShop& Sheet_dragonWorldWargoldShop::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_dragonWorldWar_2eproto();
  return *default_instance_;
}

Sheet_dragonWorldWargoldShop* Sheet_dragonWorldWargoldShop::default_instance_ = NULL;

Sheet_dragonWorldWargoldShop* Sheet_dragonWorldWargoldShop::New() const {
  return new Sheet_dragonWorldWargoldShop;
}

void Sheet_dragonWorldWargoldShop::Clear() {
  dragonworldwargoldshop_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet_dragonWorldWargoldShop::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.dragonWorldWargoldShop dragonWorldWargoldShop_List = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_dragonWorldWargoldShop_List:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_dragonworldwargoldshop_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_dragonWorldWargoldShop_List;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sheet_dragonWorldWargoldShop::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.dragonWorldWargoldShop dragonWorldWargoldShop_List = 1;
  for (int i = 0; i < this->dragonworldwargoldshop_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->dragonworldwargoldshop_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sheet_dragonWorldWargoldShop::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.dragonWorldWargoldShop dragonWorldWargoldShop_List = 1;
  for (int i = 0; i < this->dragonworldwargoldshop_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->dragonworldwargoldshop_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sheet_dragonWorldWargoldShop::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.dragonWorldWargoldShop dragonWorldWargoldShop_List = 1;
  total_size += 1 * this->dragonworldwargoldshop_list_size();
  for (int i = 0; i < this->dragonworldwargoldshop_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->dragonworldwargoldshop_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet_dragonWorldWargoldShop::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet_dragonWorldWargoldShop* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet_dragonWorldWargoldShop*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet_dragonWorldWargoldShop::MergeFrom(const Sheet_dragonWorldWargoldShop& from) {
  GOOGLE_CHECK_NE(&from, this);
  dragonworldwargoldshop_list_.MergeFrom(from.dragonworldwargoldshop_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet_dragonWorldWargoldShop::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet_dragonWorldWargoldShop::CopyFrom(const Sheet_dragonWorldWargoldShop& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet_dragonWorldWargoldShop::IsInitialized() const {

  return true;
}

void Sheet_dragonWorldWargoldShop::Swap(Sheet_dragonWorldWargoldShop* other) {
  if (other != this) {
    dragonworldwargoldshop_list_.Swap(&other->dragonworldwargoldshop_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet_dragonWorldWargoldShop::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet_dragonWorldWargoldShop_descriptor_;
  metadata.reflection = Sheet_dragonWorldWargoldShop_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto_ff

// @@protoc_insertion_point(global_scope)
